{"name":"CategoryTheory.OplaxNatTrans.whiskerLeft_app","module":"Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax","initialProofState":"B : Type u₁\ninst✝¹ : CategoryTheory.Bicategory B\nC : Type u₂\ninst✝ : CategoryTheory.Bicategory C\nF G H : CategoryTheory.OplaxFunctor B C\nη : Quiver.Hom F G\nθ ι : Quiver.Hom G H\nΓ : Quiver.Hom θ ι\na : B\n⊢ Eq ((CategoryTheory.OplaxNatTrans.whiskerLeft η Γ).app a) (CategoryTheory.Bicategory.whiskerLeft (η.app a) (Γ.app a))","decl":"/-- Left whiskering of an oplax natural transformation and a modification. -/\n@[simps]\ndef whiskerLeft (η : F ⟶ G) {θ ι : G ⟶ H} (Γ : θ ⟶ ι) : η ≫ θ ⟶ η ≫ ι where\n  app a := η.app a ◁ Γ.app a\n  naturality {a b} f := by\n    dsimp\n    rw [associator_inv_naturality_right_assoc, whisker_exchange_assoc]\n    simp\n\n"}
{"name":"CategoryTheory.OplaxNatTrans.whiskerRight_app","module":"Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax","initialProofState":"B : Type u₁\ninst✝¹ : CategoryTheory.Bicategory B\nC : Type u₂\ninst✝ : CategoryTheory.Bicategory C\nF G H : CategoryTheory.OplaxFunctor B C\nη θ : Quiver.Hom F G\nΓ : Quiver.Hom η θ\nι : Quiver.Hom G H\na : B\n⊢ Eq ((CategoryTheory.OplaxNatTrans.whiskerRight Γ ι).app a) (CategoryTheory.Bicategory.whiskerRight (Γ.app a) (ι.app a))","decl":"/-- Right whiskering of an oplax natural transformation and a modification. -/\n@[simps]\ndef whiskerRight {η θ : F ⟶ G} (Γ : η ⟶ θ) (ι : G ⟶ H) : η ≫ ι ⟶ θ ≫ ι where\n  app a := Γ.app a ▷ ι.app a\n  naturality {a b} f := by\n    dsimp\n    simp_rw [assoc, ← associator_inv_naturality_left, whisker_exchange_assoc]\n    simp\n\n"}
{"name":"CategoryTheory.OplaxNatTrans.associator_hom_app","module":"Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax","initialProofState":"B : Type u₁\ninst✝¹ : CategoryTheory.Bicategory B\nC : Type u₂\ninst✝ : CategoryTheory.Bicategory C\nF G H I : CategoryTheory.OplaxFunctor B C\nη : Quiver.Hom F G\nθ : Quiver.Hom G H\nι : Quiver.Hom H I\na : B\n⊢ Eq ((CategoryTheory.OplaxNatTrans.associator η θ ι).hom.app a) (CategoryTheory.Bicategory.associator (η.app a) (θ.app a) (ι.app a)).hom","decl":"/-- Associator for the vertical composition of oplax natural transformations. -/\n@[simps!]\ndef associator (η : F ⟶ G) (θ : G ⟶ H) (ι : H ⟶ I) : (η ≫ θ) ≫ ι ≅ η ≫ θ ≫ ι :=\n  ModificationIso.ofComponents (fun a => α_ (η.app a) (θ.app a) (ι.app a)) (by simp)\n\n"}
{"name":"CategoryTheory.OplaxNatTrans.associator_inv_app","module":"Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax","initialProofState":"B : Type u₁\ninst✝¹ : CategoryTheory.Bicategory B\nC : Type u₂\ninst✝ : CategoryTheory.Bicategory C\nF G H I : CategoryTheory.OplaxFunctor B C\nη : Quiver.Hom F G\nθ : Quiver.Hom G H\nι : Quiver.Hom H I\na : B\n⊢ Eq ((CategoryTheory.OplaxNatTrans.associator η θ ι).inv.app a) (CategoryTheory.Bicategory.associator (η.app a) (θ.app a) (ι.app a)).inv","decl":"/-- Associator for the vertical composition of oplax natural transformations. -/\n@[simps!]\ndef associator (η : F ⟶ G) (θ : G ⟶ H) (ι : H ⟶ I) : (η ≫ θ) ≫ ι ≅ η ≫ θ ≫ ι :=\n  ModificationIso.ofComponents (fun a => α_ (η.app a) (θ.app a) (ι.app a)) (by simp)\n\n"}
{"name":"CategoryTheory.OplaxNatTrans.leftUnitor_hom_app","module":"Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax","initialProofState":"B : Type u₁\ninst✝¹ : CategoryTheory.Bicategory B\nC : Type u₂\ninst✝ : CategoryTheory.Bicategory C\nF G : CategoryTheory.OplaxFunctor B C\nη : Quiver.Hom F G\na : B\n⊢ Eq ((CategoryTheory.OplaxNatTrans.leftUnitor η).hom.app a) (CategoryTheory.Bicategory.leftUnitor (η.app a)).hom","decl":"/-- Left unitor for the vertical composition of oplax natural transformations. -/\n@[simps!]\ndef leftUnitor (η : F ⟶ G) : 𝟙 F ≫ η ≅ η :=\n  ModificationIso.ofComponents (fun a => λ_ (η.app a)) (by simp)\n\n"}
{"name":"CategoryTheory.OplaxNatTrans.leftUnitor_inv_app","module":"Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax","initialProofState":"B : Type u₁\ninst✝¹ : CategoryTheory.Bicategory B\nC : Type u₂\ninst✝ : CategoryTheory.Bicategory C\nF G : CategoryTheory.OplaxFunctor B C\nη : Quiver.Hom F G\na : B\n⊢ Eq ((CategoryTheory.OplaxNatTrans.leftUnitor η).inv.app a) (CategoryTheory.Bicategory.leftUnitor (η.app a)).inv","decl":"/-- Left unitor for the vertical composition of oplax natural transformations. -/\n@[simps!]\ndef leftUnitor (η : F ⟶ G) : 𝟙 F ≫ η ≅ η :=\n  ModificationIso.ofComponents (fun a => λ_ (η.app a)) (by simp)\n\n"}
{"name":"CategoryTheory.OplaxNatTrans.rightUnitor_inv_app","module":"Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax","initialProofState":"B : Type u₁\ninst✝¹ : CategoryTheory.Bicategory B\nC : Type u₂\ninst✝ : CategoryTheory.Bicategory C\nF G : CategoryTheory.OplaxFunctor B C\nη : Quiver.Hom F G\na : B\n⊢ Eq ((CategoryTheory.OplaxNatTrans.rightUnitor η).inv.app a) (CategoryTheory.Bicategory.rightUnitor (η.app a)).inv","decl":"/-- Right unitor for the vertical composition of oplax natural transformations. -/\n@[simps!]\ndef rightUnitor (η : F ⟶ G) : η ≫ 𝟙 G ≅ η :=\n  ModificationIso.ofComponents (fun a => ρ_ (η.app a)) (by simp)\n\n"}
{"name":"CategoryTheory.OplaxNatTrans.rightUnitor_hom_app","module":"Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax","initialProofState":"B : Type u₁\ninst✝¹ : CategoryTheory.Bicategory B\nC : Type u₂\ninst✝ : CategoryTheory.Bicategory C\nF G : CategoryTheory.OplaxFunctor B C\nη : Quiver.Hom F G\na : B\n⊢ Eq ((CategoryTheory.OplaxNatTrans.rightUnitor η).hom.app a) (CategoryTheory.Bicategory.rightUnitor (η.app a)).hom","decl":"/-- Right unitor for the vertical composition of oplax natural transformations. -/\n@[simps!]\ndef rightUnitor (η : F ⟶ G) : η ≫ 𝟙 G ≅ η :=\n  ModificationIso.ofComponents (fun a => ρ_ (η.app a)) (by simp)\n\n"}
{"name":"CategoryTheory.OplaxFunctor.bicategory_leftUnitor_inv_app","module":"Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax","initialProofState":"B : Type u₁\ninst✝¹ : CategoryTheory.Bicategory B\nC : Type u₂\ninst✝ : CategoryTheory.Bicategory C\nx✝¹ x✝ : CategoryTheory.OplaxFunctor B C\nη : Quiver.Hom x✝¹ x✝\na : B\n⊢ Eq ((CategoryTheory.Bicategory.leftUnitor η).inv.app a) (CategoryTheory.Bicategory.leftUnitor (η.app a)).inv","decl":"/-- A bicategory structure on the oplax functors between bicategories. -/\n@[simps!]\ninstance OplaxFunctor.bicategory : Bicategory (OplaxFunctor B C) where\n  whiskerLeft {_ _ _} η _ _ Γ := OplaxNatTrans.whiskerLeft η Γ\n  whiskerRight {_ _ _} _ _ Γ η := OplaxNatTrans.whiskerRight Γ η\n  associator {_ _ _} _ := OplaxNatTrans.associator\n  leftUnitor {_ _} := OplaxNatTrans.leftUnitor\n  rightUnitor {_ _} := OplaxNatTrans.rightUnitor\n  whisker_exchange {a b c f g h i} η θ := by\n    ext\n    exact whisker_exchange _ _\n\n"}
{"name":"CategoryTheory.OplaxFunctor.bicategory_comp_app","module":"Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax","initialProofState":"B : Type u₁\ninst✝¹ : CategoryTheory.Bicategory B\nC : Type u₂\ninst✝ : CategoryTheory.Bicategory C\nX✝ Y✝ Z✝ : CategoryTheory.OplaxFunctor B C\nη : CategoryTheory.OplaxNatTrans X✝ Y✝\nθ : CategoryTheory.OplaxNatTrans Y✝ Z✝\na : B\n⊢ Eq ((CategoryTheory.CategoryStruct.comp η θ).app a) (CategoryTheory.CategoryStruct.comp (η.app a) (θ.app a))","decl":"/-- A bicategory structure on the oplax functors between bicategories. -/\n@[simps!]\ninstance OplaxFunctor.bicategory : Bicategory (OplaxFunctor B C) where\n  whiskerLeft {_ _ _} η _ _ Γ := OplaxNatTrans.whiskerLeft η Γ\n  whiskerRight {_ _ _} _ _ Γ η := OplaxNatTrans.whiskerRight Γ η\n  associator {_ _ _} _ := OplaxNatTrans.associator\n  leftUnitor {_ _} := OplaxNatTrans.leftUnitor\n  rightUnitor {_ _} := OplaxNatTrans.rightUnitor\n  whisker_exchange {a b c f g h i} η θ := by\n    ext\n    exact whisker_exchange _ _\n\n"}
{"name":"CategoryTheory.OplaxFunctor.bicategory_associator_inv_app","module":"Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax","initialProofState":"B : Type u₁\ninst✝¹ : CategoryTheory.Bicategory B\nC : Type u₂\ninst✝ : CategoryTheory.Bicategory C\nx✝³ x✝² x✝¹ x✝ : CategoryTheory.OplaxFunctor B C\nη : Quiver.Hom x✝³ x✝²\nθ : Quiver.Hom x✝² x✝¹\nι : Quiver.Hom x✝¹ x✝\na : B\n⊢ Eq ((CategoryTheory.Bicategory.associator η θ ι).inv.app a) (CategoryTheory.Bicategory.associator (η.app a) (θ.app a) (ι.app a)).inv","decl":"/-- A bicategory structure on the oplax functors between bicategories. -/\n@[simps!]\ninstance OplaxFunctor.bicategory : Bicategory (OplaxFunctor B C) where\n  whiskerLeft {_ _ _} η _ _ Γ := OplaxNatTrans.whiskerLeft η Γ\n  whiskerRight {_ _ _} _ _ Γ η := OplaxNatTrans.whiskerRight Γ η\n  associator {_ _ _} _ := OplaxNatTrans.associator\n  leftUnitor {_ _} := OplaxNatTrans.leftUnitor\n  rightUnitor {_ _} := OplaxNatTrans.rightUnitor\n  whisker_exchange {a b c f g h i} η θ := by\n    ext\n    exact whisker_exchange _ _\n\n"}
{"name":"CategoryTheory.OplaxFunctor.bicategory_leftUnitor_hom_app","module":"Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax","initialProofState":"B : Type u₁\ninst✝¹ : CategoryTheory.Bicategory B\nC : Type u₂\ninst✝ : CategoryTheory.Bicategory C\nx✝¹ x✝ : CategoryTheory.OplaxFunctor B C\nη : Quiver.Hom x✝¹ x✝\na : B\n⊢ Eq ((CategoryTheory.Bicategory.leftUnitor η).hom.app a) (CategoryTheory.Bicategory.leftUnitor (η.app a)).hom","decl":"/-- A bicategory structure on the oplax functors between bicategories. -/\n@[simps!]\ninstance OplaxFunctor.bicategory : Bicategory (OplaxFunctor B C) where\n  whiskerLeft {_ _ _} η _ _ Γ := OplaxNatTrans.whiskerLeft η Γ\n  whiskerRight {_ _ _} _ _ Γ η := OplaxNatTrans.whiskerRight Γ η\n  associator {_ _ _} _ := OplaxNatTrans.associator\n  leftUnitor {_ _} := OplaxNatTrans.leftUnitor\n  rightUnitor {_ _} := OplaxNatTrans.rightUnitor\n  whisker_exchange {a b c f g h i} η θ := by\n    ext\n    exact whisker_exchange _ _\n\n"}
{"name":"CategoryTheory.OplaxFunctor.bicategory_id_app","module":"Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax","initialProofState":"B : Type u₁\ninst✝¹ : CategoryTheory.Bicategory B\nC : Type u₂\ninst✝ : CategoryTheory.Bicategory C\nF : CategoryTheory.OplaxFunctor B C\na : B\n⊢ Eq ((CategoryTheory.CategoryStruct.id F).app a) (CategoryTheory.CategoryStruct.id (F.obj a))","decl":"/-- A bicategory structure on the oplax functors between bicategories. -/\n@[simps!]\ninstance OplaxFunctor.bicategory : Bicategory (OplaxFunctor B C) where\n  whiskerLeft {_ _ _} η _ _ Γ := OplaxNatTrans.whiskerLeft η Γ\n  whiskerRight {_ _ _} _ _ Γ η := OplaxNatTrans.whiskerRight Γ η\n  associator {_ _ _} _ := OplaxNatTrans.associator\n  leftUnitor {_ _} := OplaxNatTrans.leftUnitor\n  rightUnitor {_ _} := OplaxNatTrans.rightUnitor\n  whisker_exchange {a b c f g h i} η θ := by\n    ext\n    exact whisker_exchange _ _\n\n"}
{"name":"CategoryTheory.OplaxFunctor.bicategory_homCategory_id_app","module":"Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax","initialProofState":"B : Type u₁\ninst✝¹ : CategoryTheory.Bicategory B\nC : Type u₂\ninst✝ : CategoryTheory.Bicategory C\na✝ b : CategoryTheory.OplaxFunctor B C\nη : Quiver.Hom a✝ b\na : B\n⊢ Eq ((CategoryTheory.CategoryStruct.id η).app a) (CategoryTheory.CategoryStruct.id (η.app a))","decl":"/-- A bicategory structure on the oplax functors between bicategories. -/\n@[simps!]\ninstance OplaxFunctor.bicategory : Bicategory (OplaxFunctor B C) where\n  whiskerLeft {_ _ _} η _ _ Γ := OplaxNatTrans.whiskerLeft η Γ\n  whiskerRight {_ _ _} _ _ Γ η := OplaxNatTrans.whiskerRight Γ η\n  associator {_ _ _} _ := OplaxNatTrans.associator\n  leftUnitor {_ _} := OplaxNatTrans.leftUnitor\n  rightUnitor {_ _} := OplaxNatTrans.rightUnitor\n  whisker_exchange {a b c f g h i} η θ := by\n    ext\n    exact whisker_exchange _ _\n\n"}
{"name":"CategoryTheory.OplaxFunctor.bicategory_Hom","module":"Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax","initialProofState":"B : Type u₁\ninst✝¹ : CategoryTheory.Bicategory B\nC : Type u₂\ninst✝ : CategoryTheory.Bicategory C\nF G : CategoryTheory.OplaxFunctor B C\n⊢ Eq (Quiver.Hom F G) (CategoryTheory.OplaxNatTrans F G)","decl":"/-- A bicategory structure on the oplax functors between bicategories. -/\n@[simps!]\ninstance OplaxFunctor.bicategory : Bicategory (OplaxFunctor B C) where\n  whiskerLeft {_ _ _} η _ _ Γ := OplaxNatTrans.whiskerLeft η Γ\n  whiskerRight {_ _ _} _ _ Γ η := OplaxNatTrans.whiskerRight Γ η\n  associator {_ _ _} _ := OplaxNatTrans.associator\n  leftUnitor {_ _} := OplaxNatTrans.leftUnitor\n  rightUnitor {_ _} := OplaxNatTrans.rightUnitor\n  whisker_exchange {a b c f g h i} η θ := by\n    ext\n    exact whisker_exchange _ _\n\n"}
{"name":"CategoryTheory.OplaxFunctor.bicategory_homCategory_comp_app","module":"Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax","initialProofState":"B : Type u₁\ninst✝¹ : CategoryTheory.Bicategory B\nC : Type u₂\ninst✝ : CategoryTheory.Bicategory C\na✝ b : CategoryTheory.OplaxFunctor B C\nX✝ Y✝ Z✝ : Quiver.Hom a✝ b\nΓ : CategoryTheory.Oplax.Modification X✝ Y✝\nΔ : CategoryTheory.Oplax.Modification Y✝ Z✝\na : B\n⊢ Eq ((CategoryTheory.CategoryStruct.comp Γ Δ).app a) (CategoryTheory.CategoryStruct.comp (Γ.app a) (Δ.app a))","decl":"/-- A bicategory structure on the oplax functors between bicategories. -/\n@[simps!]\ninstance OplaxFunctor.bicategory : Bicategory (OplaxFunctor B C) where\n  whiskerLeft {_ _ _} η _ _ Γ := OplaxNatTrans.whiskerLeft η Γ\n  whiskerRight {_ _ _} _ _ Γ η := OplaxNatTrans.whiskerRight Γ η\n  associator {_ _ _} _ := OplaxNatTrans.associator\n  leftUnitor {_ _} := OplaxNatTrans.leftUnitor\n  rightUnitor {_ _} := OplaxNatTrans.rightUnitor\n  whisker_exchange {a b c f g h i} η θ := by\n    ext\n    exact whisker_exchange _ _\n\n"}
{"name":"CategoryTheory.OplaxFunctor.bicategory_rightUnitor_inv_app","module":"Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax","initialProofState":"B : Type u₁\ninst✝¹ : CategoryTheory.Bicategory B\nC : Type u₂\ninst✝ : CategoryTheory.Bicategory C\nx✝¹ x✝ : CategoryTheory.OplaxFunctor B C\nη : Quiver.Hom x✝¹ x✝\na : B\n⊢ Eq ((CategoryTheory.Bicategory.rightUnitor η).inv.app a) (CategoryTheory.Bicategory.rightUnitor (η.app a)).inv","decl":"/-- A bicategory structure on the oplax functors between bicategories. -/\n@[simps!]\ninstance OplaxFunctor.bicategory : Bicategory (OplaxFunctor B C) where\n  whiskerLeft {_ _ _} η _ _ Γ := OplaxNatTrans.whiskerLeft η Γ\n  whiskerRight {_ _ _} _ _ Γ η := OplaxNatTrans.whiskerRight Γ η\n  associator {_ _ _} _ := OplaxNatTrans.associator\n  leftUnitor {_ _} := OplaxNatTrans.leftUnitor\n  rightUnitor {_ _} := OplaxNatTrans.rightUnitor\n  whisker_exchange {a b c f g h i} η θ := by\n    ext\n    exact whisker_exchange _ _\n\n"}
{"name":"CategoryTheory.OplaxFunctor.bicategory_comp_naturality","module":"Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax","initialProofState":"B : Type u₁\ninst✝¹ : CategoryTheory.Bicategory B\nC : Type u₂\ninst✝ : CategoryTheory.Bicategory C\nX✝ Y✝ Z✝ : CategoryTheory.OplaxFunctor B C\nη : CategoryTheory.OplaxNatTrans X✝ Y✝\nθ : CategoryTheory.OplaxNatTrans Y✝ Z✝\na b : B\nf : Quiver.Hom a b\n⊢ Eq ((CategoryTheory.CategoryStruct.comp η θ).naturality f) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator (X✝.map f) (η.app b) (θ.app b)).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (η.naturality f) (θ.app b)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator (η.app a) (Y✝.map f) (θ.app b)).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft (η.app a) (θ.naturality f)) (CategoryTheory.Bicategory.associator (η.app a) (θ.app a) (Z✝.map f)).inv))))","decl":"/-- A bicategory structure on the oplax functors between bicategories. -/\n@[simps!]\ninstance OplaxFunctor.bicategory : Bicategory (OplaxFunctor B C) where\n  whiskerLeft {_ _ _} η _ _ Γ := OplaxNatTrans.whiskerLeft η Γ\n  whiskerRight {_ _ _} _ _ Γ η := OplaxNatTrans.whiskerRight Γ η\n  associator {_ _ _} _ := OplaxNatTrans.associator\n  leftUnitor {_ _} := OplaxNatTrans.leftUnitor\n  rightUnitor {_ _} := OplaxNatTrans.rightUnitor\n  whisker_exchange {a b c f g h i} η θ := by\n    ext\n    exact whisker_exchange _ _\n\n"}
{"name":"CategoryTheory.OplaxFunctor.bicategory_associator_hom_app","module":"Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax","initialProofState":"B : Type u₁\ninst✝¹ : CategoryTheory.Bicategory B\nC : Type u₂\ninst✝ : CategoryTheory.Bicategory C\nx✝³ x✝² x✝¹ x✝ : CategoryTheory.OplaxFunctor B C\nη : Quiver.Hom x✝³ x✝²\nθ : Quiver.Hom x✝² x✝¹\nι : Quiver.Hom x✝¹ x✝\na : B\n⊢ Eq ((CategoryTheory.Bicategory.associator η θ ι).hom.app a) (CategoryTheory.Bicategory.associator (η.app a) (θ.app a) (ι.app a)).hom","decl":"/-- A bicategory structure on the oplax functors between bicategories. -/\n@[simps!]\ninstance OplaxFunctor.bicategory : Bicategory (OplaxFunctor B C) where\n  whiskerLeft {_ _ _} η _ _ Γ := OplaxNatTrans.whiskerLeft η Γ\n  whiskerRight {_ _ _} _ _ Γ η := OplaxNatTrans.whiskerRight Γ η\n  associator {_ _ _} _ := OplaxNatTrans.associator\n  leftUnitor {_ _} := OplaxNatTrans.leftUnitor\n  rightUnitor {_ _} := OplaxNatTrans.rightUnitor\n  whisker_exchange {a b c f g h i} η θ := by\n    ext\n    exact whisker_exchange _ _\n\n"}
{"name":"CategoryTheory.OplaxFunctor.bicategory_whiskerLeft_app","module":"Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax","initialProofState":"B : Type u₁\ninst✝¹ : CategoryTheory.Bicategory B\nC : Type u₂\ninst✝ : CategoryTheory.Bicategory C\nx✝⁴ x✝³ x✝² : CategoryTheory.OplaxFunctor B C\nη : Quiver.Hom x✝⁴ x✝³\nx✝¹ x✝ : Quiver.Hom x✝³ x✝²\nΓ : Quiver.Hom x✝¹ x✝\na : B\n⊢ Eq ((CategoryTheory.Bicategory.whiskerLeft η Γ).app a) (CategoryTheory.Bicategory.whiskerLeft (η.app a) (Γ.app a))","decl":"/-- A bicategory structure on the oplax functors between bicategories. -/\n@[simps!]\ninstance OplaxFunctor.bicategory : Bicategory (OplaxFunctor B C) where\n  whiskerLeft {_ _ _} η _ _ Γ := OplaxNatTrans.whiskerLeft η Γ\n  whiskerRight {_ _ _} _ _ Γ η := OplaxNatTrans.whiskerRight Γ η\n  associator {_ _ _} _ := OplaxNatTrans.associator\n  leftUnitor {_ _} := OplaxNatTrans.leftUnitor\n  rightUnitor {_ _} := OplaxNatTrans.rightUnitor\n  whisker_exchange {a b c f g h i} η θ := by\n    ext\n    exact whisker_exchange _ _\n\n"}
{"name":"CategoryTheory.OplaxFunctor.bicategory_id_naturality","module":"Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax","initialProofState":"B : Type u₁\ninst✝¹ : CategoryTheory.Bicategory B\nC : Type u₂\ninst✝ : CategoryTheory.Bicategory C\nF : CategoryTheory.OplaxFunctor B C\nx✝¹ x✝ : B\nf : Quiver.Hom x✝¹ x✝\n⊢ Eq ((CategoryTheory.CategoryStruct.id F).naturality f) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.rightUnitor (F.map f)).hom (CategoryTheory.Bicategory.leftUnitor (F.map f)).inv)","decl":"/-- A bicategory structure on the oplax functors between bicategories. -/\n@[simps!]\ninstance OplaxFunctor.bicategory : Bicategory (OplaxFunctor B C) where\n  whiskerLeft {_ _ _} η _ _ Γ := OplaxNatTrans.whiskerLeft η Γ\n  whiskerRight {_ _ _} _ _ Γ η := OplaxNatTrans.whiskerRight Γ η\n  associator {_ _ _} _ := OplaxNatTrans.associator\n  leftUnitor {_ _} := OplaxNatTrans.leftUnitor\n  rightUnitor {_ _} := OplaxNatTrans.rightUnitor\n  whisker_exchange {a b c f g h i} η θ := by\n    ext\n    exact whisker_exchange _ _\n\n"}
{"name":"CategoryTheory.OplaxFunctor.bicategory_rightUnitor_hom_app","module":"Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax","initialProofState":"B : Type u₁\ninst✝¹ : CategoryTheory.Bicategory B\nC : Type u₂\ninst✝ : CategoryTheory.Bicategory C\nx✝¹ x✝ : CategoryTheory.OplaxFunctor B C\nη : Quiver.Hom x✝¹ x✝\na : B\n⊢ Eq ((CategoryTheory.Bicategory.rightUnitor η).hom.app a) (CategoryTheory.Bicategory.rightUnitor (η.app a)).hom","decl":"/-- A bicategory structure on the oplax functors between bicategories. -/\n@[simps!]\ninstance OplaxFunctor.bicategory : Bicategory (OplaxFunctor B C) where\n  whiskerLeft {_ _ _} η _ _ Γ := OplaxNatTrans.whiskerLeft η Γ\n  whiskerRight {_ _ _} _ _ Γ η := OplaxNatTrans.whiskerRight Γ η\n  associator {_ _ _} _ := OplaxNatTrans.associator\n  leftUnitor {_ _} := OplaxNatTrans.leftUnitor\n  rightUnitor {_ _} := OplaxNatTrans.rightUnitor\n  whisker_exchange {a b c f g h i} η θ := by\n    ext\n    exact whisker_exchange _ _\n\n"}
{"name":"CategoryTheory.OplaxFunctor.bicategory_whiskerRight_app","module":"Mathlib.CategoryTheory.Bicategory.FunctorBicategory.Oplax","initialProofState":"B : Type u₁\ninst✝¹ : CategoryTheory.Bicategory B\nC : Type u₂\ninst✝ : CategoryTheory.Bicategory C\nx✝⁴ x✝³ x✝² : CategoryTheory.OplaxFunctor B C\nx✝¹ x✝ : Quiver.Hom x✝⁴ x✝³\nΓ : Quiver.Hom x✝¹ x✝\nη : Quiver.Hom x✝³ x✝²\na : B\n⊢ Eq ((CategoryTheory.Bicategory.whiskerRight Γ η).app a) (CategoryTheory.Bicategory.whiskerRight (Γ.app a) (η.app a))","decl":"/-- A bicategory structure on the oplax functors between bicategories. -/\n@[simps!]\ninstance OplaxFunctor.bicategory : Bicategory (OplaxFunctor B C) where\n  whiskerLeft {_ _ _} η _ _ Γ := OplaxNatTrans.whiskerLeft η Γ\n  whiskerRight {_ _ _} _ _ Γ η := OplaxNatTrans.whiskerRight Γ η\n  associator {_ _ _} _ := OplaxNatTrans.associator\n  leftUnitor {_ _} := OplaxNatTrans.leftUnitor\n  rightUnitor {_ _} := OplaxNatTrans.rightUnitor\n  whisker_exchange {a b c f g h i} η θ := by\n    ext\n    exact whisker_exchange _ _\n\n"}
