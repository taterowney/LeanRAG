{"name":"EmbeddingLike.pairwise_comp","module":"Mathlib.Logic.Equiv.Pairwise","initialProofState":"X : Type u_1\nY : Type u_2\nF : Sort u_3\ninst✝¹ : FunLike F Y X\ninst✝ : EmbeddingLike F Y X\nf : F\np : X → X → Prop\nh : Pairwise p\n⊢ Pairwise (Function.onFun p ⇑f)","decl":"lemma EmbeddingLike.pairwise_comp {X : Type*} {Y : Type*} {F} [FunLike F Y X] [EmbeddingLike F Y X]\n    (f : F) {p : X → X → Prop} (h : Pairwise p) : Pairwise (p on f) :=\n  h.comp_of_injective <| EmbeddingLike.injective f\n\n"}
{"name":"EquivLike.pairwise_comp_iff","module":"Mathlib.Logic.Equiv.Pairwise","initialProofState":"X : Type u_1\nY : Type u_2\nF : Sort u_3\ninst✝ : EquivLike F Y X\nf : F\np : X → X → Prop\n⊢ Iff (Pairwise (Function.onFun p ⇑f)) (Pairwise p)","decl":"lemma EquivLike.pairwise_comp_iff {X : Type*} {Y : Type*} {F} [EquivLike F Y X]\n    (f : F) (p : X → X → Prop) : Pairwise (p on f) ↔ Pairwise p :=\n  (EquivLike.bijective f).pairwise_comp_iff\n"}
