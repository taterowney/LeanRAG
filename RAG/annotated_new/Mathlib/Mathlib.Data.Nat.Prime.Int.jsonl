{"name":"Nat.prime_iff_prime_int","module":"Mathlib.Data.Nat.Prime.Int","initialProofState":"p : Nat\n⊢ Iff (Nat.Prime p) (Prime ↑p)","decl":"theorem prime_iff_prime_int {p : ℕ} : p.Prime ↔ _root_.Prime (p : ℤ) :=\n  ⟨fun hp =>\n    ⟨Int.natCast_ne_zero_iff_pos.2 hp.pos, mt Int.isUnit_iff_natAbs_eq.1 hp.ne_one, fun a b h => by\n      rw [← Int.dvd_natAbs, Int.natCast_dvd_natCast, Int.natAbs_mul, hp.dvd_mul] at h\n      rwa [← Int.dvd_natAbs, Int.natCast_dvd_natCast, ← Int.dvd_natAbs, Int.natCast_dvd_natCast]⟩,\n    fun hp =>\n    Nat.prime_iff.2\n      ⟨Int.natCast_ne_zero.1 hp.1,\n        (mt Nat.isUnit_iff.1) fun h => by simp [h, not_prime_one] at hp, fun a b => by\n        simpa only [Int.natCast_dvd_natCast, (Int.ofNat_mul _ _).symm] using hp.2.2 a b⟩⟩\n\n"}
{"name":"Nat.Prime.pow_inj","module":"Mathlib.Data.Nat.Prime.Int","initialProofState":"p q m n : Nat\nhp : Nat.Prime p\nhq : Nat.Prime q\nh : Eq (HPow.hPow p (HAdd.hAdd m 1)) (HPow.hPow q (HAdd.hAdd n 1))\n⊢ And (Eq p q) (Eq m n)","decl":"/-- Two prime powers with positive exponents are equal only when the primes and the\nexponents are equal. -/\nlemma Prime.pow_inj {p q m n : ℕ} (hp : p.Prime) (hq : q.Prime)\n    (h : p ^ (m + 1) = q ^ (n + 1)) : p = q ∧ m = n := by\n  have H := dvd_antisymm (Prime.dvd_of_dvd_pow hp <| h ▸ dvd_pow_self p (succ_ne_zero m))\n    (Prime.dvd_of_dvd_pow hq <| h.symm ▸ dvd_pow_self q (succ_ne_zero n))\n  exact ⟨H, succ_inj'.mp <| Nat.pow_right_injective hq.two_le (H ▸ h)⟩\n\n"}
{"name":"Int.prime_ofNat_iff","module":"Mathlib.Data.Nat.Prime.Int","initialProofState":"n : Nat\n⊢ Iff (Prime (OfNat.ofNat n)) (Nat.Prime (OfNat.ofNat n))","decl":"@[simp]\ntheorem prime_ofNat_iff {n : ℕ} :\n    Prime (ofNat(n) : ℤ) ↔ Nat.Prime (OfNat.ofNat n) :=\n  Nat.prime_iff_prime_int.symm\n\n"}
{"name":"Int.prime_two","module":"Mathlib.Data.Nat.Prime.Int","initialProofState":"⊢ Prime 2","decl":"theorem prime_two : Prime (2 : ℤ) :=\n  prime_ofNat_iff.mpr Nat.prime_two\n\n"}
{"name":"Int.prime_three","module":"Mathlib.Data.Nat.Prime.Int","initialProofState":"⊢ Prime 3","decl":"theorem prime_three : Prime (3 : ℤ) :=\n  prime_ofNat_iff.mpr Nat.prime_three\n\n"}
