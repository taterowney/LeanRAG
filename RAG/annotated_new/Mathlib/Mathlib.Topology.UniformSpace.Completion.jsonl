{"name":"CauchyFilter.instNeBotValFilterCauchy","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u\ninst‚úù : UniformSpace Œ±\nf : CauchyFilter Œ±\n‚ä¢ (‚Üëf).NeBot","decl":"instance (f : CauchyFilter Œ±) : NeBot f.1 := f.2.1\n\n"}
{"name":"CauchyFilter.monotone_gen","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u\ninst‚úù : UniformSpace Œ±\n‚ä¢ Monotone CauchyFilter.gen","decl":"theorem monotone_gen : Monotone (gen : Set (Œ± √ó Œ±) ‚Üí _) :=\n  monotone_setOf fun p => @Filter.monotone_mem _ (p.1.val √óÀ¢ p.2.val)\n\n-- Porting note: this was a calc proof, but I could not make it work\n"}
{"name":"CauchyFilter.mem_uniformity","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u\ninst‚úù : UniformSpace Œ±\ns : Set (Prod (CauchyFilter Œ±) (CauchyFilter Œ±))\n‚ä¢ Iff (Membership.mem (uniformity (CauchyFilter Œ±)) s) (Exists fun t => And (Membership.mem (uniformity Œ±) t) (HasSubset.Subset (CauchyFilter.gen t) s))","decl":"theorem mem_uniformity {s : Set (CauchyFilter Œ± √ó CauchyFilter Œ±)} :\n    s ‚àà ùì§ (CauchyFilter Œ±) ‚Üî ‚àÉ t ‚àà ùì§ Œ±, gen t ‚äÜ s :=\n  mem_lift'_sets monotone_gen\n\n"}
{"name":"CauchyFilter.basis_uniformity","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u\ninst‚úù : UniformSpace Œ±\nŒπ : Sort u_1\np : Œπ ‚Üí Prop\ns : Œπ ‚Üí Set (Prod Œ± Œ±)\nh : (uniformity Œ±).HasBasis p s\n‚ä¢ (uniformity (CauchyFilter Œ±)).HasBasis p (Function.comp CauchyFilter.gen s)","decl":"theorem basis_uniformity {Œπ : Sort*} {p : Œπ ‚Üí Prop} {s : Œπ ‚Üí Set (Œ± √ó Œ±)} (h : (ùì§ Œ±).HasBasis p s) :\n    (ùì§ (CauchyFilter Œ±)).HasBasis p (gen ‚àò s) :=\n  h.lift' monotone_gen\n\n"}
{"name":"CauchyFilter.mem_uniformity'","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u\ninst‚úù : UniformSpace Œ±\ns : Set (Prod (CauchyFilter Œ±) (CauchyFilter Œ±))\n‚ä¢ Iff (Membership.mem (uniformity (CauchyFilter Œ±)) s) (Exists fun t => And (Membership.mem (uniformity Œ±) t) (‚àÄ (f g : CauchyFilter Œ±), Membership.mem (SProd.sprod ‚Üëf ‚Üëg) t ‚Üí Membership.mem s { fst := f, snd := g }))","decl":"theorem mem_uniformity' {s : Set (CauchyFilter Œ± √ó CauchyFilter Œ±)} :\n    s ‚àà ùì§ (CauchyFilter Œ±) ‚Üî ‚àÉ t ‚àà ùì§ Œ±, ‚àÄ f g : CauchyFilter Œ±, t ‚àà f.1 √óÀ¢ g.1 ‚Üí (f, g) ‚àà s := by\n  refine mem_uniformity.trans (exists_congr (fun t => and_congr_right_iff.mpr (fun _h => ?_)))\n  exact ‚ü®fun h _f _g ht => h ht, fun h _p hp => h _ _ hp‚ü©\n\n"}
{"name":"CauchyFilter.isUniformInducing_pureCauchy","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u\ninst‚úù : UniformSpace Œ±\n‚ä¢ IsUniformInducing CauchyFilter.pureCauchy","decl":"theorem isUniformInducing_pureCauchy : IsUniformInducing (pureCauchy : Œ± ‚Üí CauchyFilter Œ±) :=\n  ‚ü®have : (preimage fun x : Œ± √ó Œ± => (pureCauchy x.fst, pureCauchy x.snd)) ‚àò gen = id :=\n      funext fun s =>\n        Set.ext fun ‚ü®a‚ÇÅ, a‚ÇÇ‚ü© => by simp [preimage, gen, pureCauchy, prod_principal_principal]\n    calc\n      comap (fun x : Œ± √ó Œ± => (pureCauchy x.fst, pureCauchy x.snd)) ((ùì§ Œ±).lift' gen) =\n          (ùì§ Œ±).lift' ((preimage fun x : Œ± √ó Œ± => (pureCauchy x.fst, pureCauchy x.snd)) ‚àò gen) :=\n        comap_lift'_eq\n      _ = ùì§ Œ± := by simp [this]\n      ‚ü©\n\n"}
{"name":"CauchyFilter.uniformInducing_pureCauchy","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u\ninst‚úù : UniformSpace Œ±\n‚ä¢ IsUniformInducing CauchyFilter.pureCauchy","decl":"@[deprecated (since := \"2024-10-05\")]\nalias uniformInducing_pureCauchy := isUniformInducing_pureCauchy\n\n"}
{"name":"CauchyFilter.isUniformEmbedding_pureCauchy","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u\ninst‚úù : UniformSpace Œ±\n‚ä¢ IsUniformEmbedding CauchyFilter.pureCauchy","decl":"theorem isUniformEmbedding_pureCauchy : IsUniformEmbedding (pureCauchy : Œ± ‚Üí CauchyFilter Œ±) where\n  __ := isUniformInducing_pureCauchy\n  injective _a‚ÇÅ _a‚ÇÇ h := pure_injective <| Subtype.ext_iff_val.1 h\n\n"}
{"name":"CauchyFilter.uniformEmbedding_pureCauchy","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u\ninst‚úù : UniformSpace Œ±\n‚ä¢ IsUniformEmbedding CauchyFilter.pureCauchy","decl":"@[deprecated (since := \"2024-10-01\")]\nalias uniformEmbedding_pureCauchy := isUniformEmbedding_pureCauchy\n\n"}
{"name":"CauchyFilter.denseRange_pureCauchy","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u\ninst‚úù : UniformSpace Œ±\n‚ä¢ DenseRange CauchyFilter.pureCauchy","decl":"theorem denseRange_pureCauchy : DenseRange (pureCauchy : Œ± ‚Üí CauchyFilter Œ±) := fun f => by\n  have h_ex : ‚àÄ s ‚àà ùì§ (CauchyFilter Œ±), ‚àÉ y : Œ±, (f, pureCauchy y) ‚àà s := fun s hs =>\n    let ‚ü®t'', ht''‚ÇÅ, (ht''‚ÇÇ : gen t'' ‚äÜ s)‚ü© := (mem_lift'_sets monotone_gen).mp hs\n    let ‚ü®t', ht'‚ÇÅ, ht'‚ÇÇ‚ü© := comp_mem_uniformity_sets ht''‚ÇÅ\n    have : t' ‚àà f.val √óÀ¢ f.val := f.property.right ht'‚ÇÅ\n    let ‚ü®t, ht, (h : t √óÀ¢ t ‚äÜ t')‚ü© := mem_prod_same_iff.mp this\n    let ‚ü®x, (hx : x ‚àà t)‚ü© := f.property.left.nonempty_of_mem ht\n    have : t'' ‚àà f.val √óÀ¢ pure x :=\n      mem_prod_iff.mpr\n        ‚ü®t, ht, { y : Œ± | (x, y) ‚àà t' }, h <| mk_mem_prod hx hx,\n          fun ‚ü®a, b‚ü© ‚ü®(h‚ÇÅ : a ‚àà t), (h‚ÇÇ : (x, b) ‚àà t')‚ü© =>\n          ht'‚ÇÇ <| prod_mk_mem_compRel (@h (a, x) ‚ü®h‚ÇÅ, hx‚ü©) h‚ÇÇ‚ü©\n    ‚ü®x, ht''‚ÇÇ <| by dsimp [gen]; exact this‚ü©\n  simp only [closure_eq_cluster_pts, ClusterPt, nhds_eq_uniformity, lift'_inf_principal_eq,\n    Set.inter_comm _ (range pureCauchy), mem_setOf_eq]\n  refine (lift'_neBot_iff ?_).mpr (fun s hs => ?_)\n  ¬∑ exact monotone_const.inter monotone_preimage\n  ¬∑ let ‚ü®y, hy‚ü© := h_ex s hs\n    have : pureCauchy y ‚àà range pureCauchy ‚à© { y : CauchyFilter Œ± | (f, y) ‚àà s } :=\n      ‚ü®mem_range_self y, hy‚ü©\n    exact ‚ü®_, this‚ü©\n\n"}
{"name":"CauchyFilter.isDenseInducing_pureCauchy","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u\ninst‚úù : UniformSpace Œ±\n‚ä¢ IsDenseInducing CauchyFilter.pureCauchy","decl":"theorem isDenseInducing_pureCauchy : IsDenseInducing (pureCauchy : Œ± ‚Üí CauchyFilter Œ±) :=\n  isUniformInducing_pureCauchy.isDenseInducing denseRange_pureCauchy\n\n"}
{"name":"CauchyFilter.isDenseEmbedding_pureCauchy","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u\ninst‚úù : UniformSpace Œ±\n‚ä¢ IsDenseEmbedding CauchyFilter.pureCauchy","decl":"theorem isDenseEmbedding_pureCauchy : IsDenseEmbedding (pureCauchy : Œ± ‚Üí CauchyFilter Œ±) :=\n  isUniformEmbedding_pureCauchy.isDenseEmbedding denseRange_pureCauchy\n\n"}
{"name":"CauchyFilter.denseEmbedding_pureCauchy","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u\ninst‚úù : UniformSpace Œ±\n‚ä¢ IsDenseEmbedding CauchyFilter.pureCauchy","decl":"@[deprecated (since := \"2024-09-30\")]\nalias denseEmbedding_pureCauchy := isDenseEmbedding_pureCauchy\n\n"}
{"name":"CauchyFilter.nonempty_cauchyFilter_iff","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u\ninst‚úù : UniformSpace Œ±\n‚ä¢ Iff (Nonempty (CauchyFilter Œ±)) (Nonempty Œ±)","decl":"theorem nonempty_cauchyFilter_iff : Nonempty (CauchyFilter Œ±) ‚Üî Nonempty Œ± := by\n  constructor <;> rintro ‚ü®c‚ü©\n  ¬∑ have := eq_univ_iff_forall.1 isDenseEmbedding_pureCauchy.isDenseInducing.closure_range c\n    obtain ‚ü®_, ‚ü®_, a, _‚ü©‚ü© := mem_closure_iff.1 this _ isOpen_univ trivial\n    exact ‚ü®a‚ü©\n  ¬∑ exact ‚ü®pureCauchy c‚ü©\n\n"}
{"name":"CauchyFilter.instCompleteSpace","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u\ninst‚úù : UniformSpace Œ±\n‚ä¢ CompleteSpace (CauchyFilter Œ±)","decl":"instance : CompleteSpace (CauchyFilter Œ±) :=\n  completeSpace_extension isUniformInducing_pureCauchy denseRange_pureCauchy fun f hf =>\n    let f' : CauchyFilter Œ± := ‚ü®f, hf‚ü©\n    have : map pureCauchy f ‚â§ (ùì§ <| CauchyFilter Œ±).lift' (preimage (Prod.mk f')) :=\n      le_lift'.2 fun _ hs =>\n        let ‚ü®t, ht‚ÇÅ, ht‚ÇÇ‚ü© := (mem_lift'_sets monotone_gen).mp hs\n        let ‚ü®t', ht', (h : t' √óÀ¢ t' ‚äÜ t)‚ü© := mem_prod_same_iff.mp (hf.right ht‚ÇÅ)\n        have : t' ‚äÜ { y : Œ± | (f', pureCauchy y) ‚àà gen t } := fun x hx =>\n          (f √óÀ¢ pure x).sets_of_superset (prod_mem_prod ht' hx) h\n        f.sets_of_superset ht' <| Subset.trans this (preimage_mono ht‚ÇÇ)\n    ‚ü®f', by simpa [nhds_eq_uniformity]‚ü©\n\n"}
{"name":"CauchyFilter.instNonempty","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u\ninst‚úù : UniformSpace Œ±\nh : Nonempty Œ±\n‚ä¢ Nonempty (CauchyFilter Œ±)","decl":"instance [h : Nonempty Œ±] : Nonempty (CauchyFilter Œ±) :=\n  h.recOn fun a => Nonempty.intro <| CauchyFilter.pureCauchy a\n\n"}
{"name":"CauchyFilter.extend_pureCauchy","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u\ninst‚úù¬≤ : UniformSpace Œ±\nŒ≤ : Type v\ninst‚úù¬π : UniformSpace Œ≤\ninst‚úù : T0Space Œ≤\nf : Œ± ‚Üí Œ≤\nhf : UniformContinuous f\na : Œ±\n‚ä¢ Eq (CauchyFilter.extend f (CauchyFilter.pureCauchy a)) (f a)","decl":"theorem extend_pureCauchy {f : Œ± ‚Üí Œ≤} (hf : UniformContinuous f) (a : Œ±) :\n    extend f (pureCauchy a) = f a := by\n  rw [extend, if_pos hf]\n  exact uniformly_extend_of_ind isUniformInducing_pureCauchy denseRange_pureCauchy hf _\n\n"}
{"name":"CauchyFilter.uniformContinuous_extend","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u\ninst‚úù¬≤ : UniformSpace Œ±\nŒ≤ : Type v\ninst‚úù¬π : UniformSpace Œ≤\ninst‚úù : CompleteSpace Œ≤\nf : Œ± ‚Üí Œ≤\n‚ä¢ UniformContinuous (CauchyFilter.extend f)","decl":"theorem uniformContinuous_extend {f : Œ± ‚Üí Œ≤} : UniformContinuous (extend f) := by\n  by_cases hf : UniformContinuous f\n  ¬∑ rw [extend, if_pos hf]\n    exact uniformContinuous_uniformly_extend isUniformInducing_pureCauchy denseRange_pureCauchy hf\n  ¬∑ rw [extend, if_neg hf]\n    exact uniformContinuous_of_const fun a _b => by congr\n\n"}
{"name":"CauchyFilter.inseparable_iff","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u\ninst‚úù : UniformSpace Œ±\nf g : CauchyFilter Œ±\n‚ä¢ Iff (Inseparable f g) (LE.le (SProd.sprod ‚Üëf ‚Üëg) (uniformity Œ±))","decl":"theorem inseparable_iff {f g : CauchyFilter Œ±} : Inseparable f g ‚Üî f.1 √óÀ¢ g.1 ‚â§ ùì§ Œ± :=\n  (basis_uniformity (basis_sets _)).inseparable_iff_uniformity\n\n"}
{"name":"CauchyFilter.inseparable_iff_of_le_nhds","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u\ninst‚úù : UniformSpace Œ±\nf g : CauchyFilter Œ±\na b : Œ±\nha : LE.le (‚Üëf) (nhds a)\nhb : LE.le (‚Üëg) (nhds b)\n‚ä¢ Iff (Inseparable a b) (Inseparable f g)","decl":"theorem inseparable_iff_of_le_nhds {f g : CauchyFilter Œ±} {a b : Œ±}\n    (ha : f.1 ‚â§ ùìù a) (hb : g.1 ‚â§ ùìù b) : Inseparable a b ‚Üî Inseparable f g := by\n  rw [‚Üê tendsto_id'] at ha hb\n  rw [inseparable_iff, (ha.comp tendsto_fst).inseparable_iff_uniformity (hb.comp tendsto_snd)]\n  simp only [Function.comp_apply, id_eq, Prod.mk.eta, ‚Üê Function.id_def, tendsto_id']\n\n"}
{"name":"CauchyFilter.inseparable_lim_iff","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u\ninst‚úù¬π : UniformSpace Œ±\ninst‚úù : CompleteSpace Œ±\nf g : CauchyFilter Œ±\n‚ä¢ Iff (Inseparable (lim ‚Üëf) (lim ‚Üëg)) (Inseparable f g)","decl":"theorem inseparable_lim_iff [CompleteSpace Œ±] {f g : CauchyFilter Œ±} :\n    haveI := f.2.1.nonempty; Inseparable (lim f.1) (lim g.1) ‚Üî Inseparable f g :=\n  inseparable_iff_of_le_nhds f.2.le_nhds_lim g.2.le_nhds_lim\n\n"}
{"name":"CauchyFilter.cauchyFilter_eq","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬≤ : UniformSpace Œ±\ninst‚úù¬π : CompleteSpace Œ±\ninst‚úù : T0Space Œ±\nf g : CauchyFilter Œ±\n‚ä¢ Iff (Eq (lim ‚Üëf) (lim ‚Üëg)) (Inseparable f g)","decl":"theorem cauchyFilter_eq {Œ± : Type*} [UniformSpace Œ±] [CompleteSpace Œ±] [T0Space Œ±]\n    {f g : CauchyFilter Œ±} :\n    haveI := f.2.1.nonempty; lim f.1 = lim g.1 ‚Üî Inseparable f g := by\n  rw [‚Üê inseparable_iff_eq, inseparable_lim_iff]\n\n"}
{"name":"CauchyFilter.separated_pureCauchy_injective","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬π : UniformSpace Œ±\ninst‚úù : T0Space Œ±\n‚ä¢ Function.Injective fun a => SeparationQuotient.mk (CauchyFilter.pureCauchy a)","decl":"theorem separated_pureCauchy_injective {Œ± : Type*} [UniformSpace Œ±] [T0Space Œ±] :\n    Function.Injective fun a : Œ± => SeparationQuotient.mk (pureCauchy a) := fun a b h ‚Ü¶\n  Inseparable.eq <| (inseparable_iff_of_le_nhds (pure_le_nhds a) (pure_le_nhds b)).2 <|\n    SeparationQuotient.mk_eq_mk.1 h\n\n"}
{"name":"UniformSpace.Completion.completeSpace","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù : UniformSpace Œ±\n‚ä¢ CompleteSpace (UniformSpace.Completion Œ±)","decl":"instance completeSpace : CompleteSpace (Completion Œ±) :=\n  SeparationQuotient.instCompleteSpace\n\n"}
{"name":"UniformSpace.Completion.t0Space","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù : UniformSpace Œ±\n‚ä¢ T0Space (UniformSpace.Completion Œ±)","decl":"instance t0Space : T0Space (Completion Œ±) := SeparationQuotient.instT0Space\n\n"}
{"name":"UniformSpace.Completion.coe_eq","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù : UniformSpace Œ±\n‚ä¢ Eq UniformSpace.Completion.coe' (Function.comp SeparationQuotient.mk CauchyFilter.pureCauchy)","decl":"protected theorem coe_eq : ((‚Üë) : Œ± ‚Üí Completion Œ±) = SeparationQuotient.mk ‚àò pureCauchy := rfl\n\n"}
{"name":"UniformSpace.Completion.isUniformInducing_coe","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù : UniformSpace Œ±\n‚ä¢ IsUniformInducing UniformSpace.Completion.coe'","decl":"theorem isUniformInducing_coe : IsUniformInducing ((‚Üë) : Œ± ‚Üí Completion Œ±) :=\n  SeparationQuotient.isUniformInducing_mk.comp isUniformInducing_pureCauchy\n\n"}
{"name":"UniformSpace.Completion.uniformInducing_coe","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù : UniformSpace Œ±\n‚ä¢ IsUniformInducing UniformSpace.Completion.coe'","decl":"@[deprecated (since := \"2024-10-05\")]\nalias uniformInducing_coe := isUniformInducing_coe\n\n"}
{"name":"UniformSpace.Completion.comap_coe_eq_uniformity","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù : UniformSpace Œ±\n‚ä¢ Eq (Filter.comap (fun p => { fst := ‚Üëp.1, snd := ‚Üëp.2 }) (uniformity (UniformSpace.Completion Œ±))) (uniformity Œ±)","decl":"theorem comap_coe_eq_uniformity :\n    ((ùì§ _).comap fun p : Œ± √ó Œ± => ((p.1 : Completion Œ±), (p.2 : Completion Œ±))) = ùì§ Œ± :=\n  (isUniformInducing_coe _).1\n\n"}
{"name":"UniformSpace.Completion.denseRange_coe","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù : UniformSpace Œ±\n‚ä¢ DenseRange UniformSpace.Completion.coe'","decl":"theorem denseRange_coe : DenseRange ((‚Üë) : Œ± ‚Üí Completion Œ±) :=\n  SeparationQuotient.surjective_mk.denseRange.comp denseRange_pureCauchy\n    SeparationQuotient.continuous_mk\n\n"}
{"name":"UniformSpace.Completion.nonempty_completion_iff","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù : UniformSpace Œ±\n‚ä¢ Iff (Nonempty (UniformSpace.Completion Œ±)) (Nonempty Œ±)","decl":"theorem nonempty_completion_iff : Nonempty (Completion Œ±) ‚Üî Nonempty Œ± :=\n  cPkg.dense.nonempty_iff.symm\n\n"}
{"name":"UniformSpace.Completion.uniformContinuous_coe","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù : UniformSpace Œ±\n‚ä¢ UniformContinuous UniformSpace.Completion.coe'","decl":"theorem uniformContinuous_coe : UniformContinuous ((‚Üë) : Œ± ‚Üí Completion Œ±) :=\n  cPkg.uniformContinuous_coe\n\n"}
{"name":"UniformSpace.Completion.continuous_coe","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù : UniformSpace Œ±\n‚ä¢ Continuous UniformSpace.Completion.coe'","decl":"theorem continuous_coe : Continuous ((‚Üë) : Œ± ‚Üí Completion Œ±) :=\n  cPkg.continuous_coe\n\n"}
{"name":"UniformSpace.Completion.isUniformEmbedding_coe","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬π : UniformSpace Œ±\ninst‚úù : T0Space Œ±\n‚ä¢ IsUniformEmbedding UniformSpace.Completion.coe'","decl":"theorem isUniformEmbedding_coe [T0Space Œ±] : IsUniformEmbedding ((‚Üë) : Œ± ‚Üí Completion Œ±) :=\n  { comap_uniformity := comap_coe_eq_uniformity Œ±\n    injective := separated_pureCauchy_injective }\n\n"}
{"name":"UniformSpace.Completion.uniformEmbedding_coe","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬π : UniformSpace Œ±\ninst‚úù : T0Space Œ±\n‚ä¢ IsUniformEmbedding UniformSpace.Completion.coe'","decl":"@[deprecated (since := \"2024-10-01\")]\nalias uniformEmbedding_coe := isUniformEmbedding_coe\n\n"}
{"name":"UniformSpace.Completion.coe_injective","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬π : UniformSpace Œ±\ninst‚úù : T0Space Œ±\n‚ä¢ Function.Injective UniformSpace.Completion.coe'","decl":"theorem coe_injective [T0Space Œ±] : Function.Injective ((‚Üë) : Œ± ‚Üí Completion Œ±) :=\n  IsUniformEmbedding.injective (isUniformEmbedding_coe _)\n\n"}
{"name":"UniformSpace.Completion.isDenseInducing_coe","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù : UniformSpace Œ±\n‚ä¢ IsDenseInducing UniformSpace.Completion.coe'","decl":"theorem isDenseInducing_coe : IsDenseInducing ((‚Üë) : Œ± ‚Üí Completion Œ±) :=\n  { (isUniformInducing_coe Œ±).isInducing with dense := denseRange_coe }\n\n"}
{"name":"UniformSpace.Completion.separableSpace_completion","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬π : UniformSpace Œ±\ninst‚úù : TopologicalSpace.SeparableSpace Œ±\n‚ä¢ TopologicalSpace.SeparableSpace (UniformSpace.Completion Œ±)","decl":"instance separableSpace_completion [SeparableSpace Œ±] : SeparableSpace (Completion Œ±) :=\n  Completion.isDenseInducing_coe.separableSpace\n\n"}
{"name":"UniformSpace.Completion.isDenseEmbedding_coe","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬π : UniformSpace Œ±\ninst‚úù : T0Space Œ±\n‚ä¢ IsDenseEmbedding UniformSpace.Completion.coe'","decl":"theorem isDenseEmbedding_coe [T0Space Œ±] : IsDenseEmbedding ((‚Üë) : Œ± ‚Üí Completion Œ±) :=\n  { isDenseInducing_coe with injective := separated_pureCauchy_injective }\n\n"}
{"name":"UniformSpace.Completion.denseEmbedding_coe","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬π : UniformSpace Œ±\ninst‚úù : T0Space Œ±\n‚ä¢ IsDenseEmbedding UniformSpace.Completion.coe'","decl":"@[deprecated (since := \"2024-09-30\")]\nalias denseEmbedding_coe := isDenseEmbedding_coe\n\n"}
{"name":"UniformSpace.Completion.denseRange_coe‚ÇÇ","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬π : UniformSpace Œ±\nŒ≤ : Type u_2\ninst‚úù : UniformSpace Œ≤\n‚ä¢ DenseRange fun x => { fst := ‚Üëx.1, snd := ‚Üëx.2 }","decl":"theorem denseRange_coe‚ÇÇ :\n    DenseRange fun x : Œ± √ó Œ≤ => ((x.1 : Completion Œ±), (x.2 : Completion Œ≤)) :=\n  denseRange_coe.prodMap denseRange_coe\n\n"}
{"name":"UniformSpace.Completion.denseRange_coe‚ÇÉ","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬≤ : UniformSpace Œ±\nŒ≤ : Type u_2\ninst‚úù¬π : UniformSpace Œ≤\nŒ≥ : Type u_3\ninst‚úù : UniformSpace Œ≥\n‚ä¢ DenseRange fun x => { fst := ‚Üëx.1, snd := { fst := ‚Üëx.2.1, snd := ‚Üëx.2.2 } }","decl":"theorem denseRange_coe‚ÇÉ :\n    DenseRange fun x : Œ± √ó Œ≤ √ó Œ≥ =>\n      ((x.1 : Completion Œ±), ((x.2.1 : Completion Œ≤), (x.2.2 : Completion Œ≥))) :=\n  denseRange_coe.prodMap denseRange_coe‚ÇÇ\n\n"}
{"name":"UniformSpace.Completion.induction_on","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù : UniformSpace Œ±\np : UniformSpace.Completion Œ± ‚Üí Prop\na : UniformSpace.Completion Œ±\nhp : IsClosed (setOf fun a => p a)\nih : ‚àÄ (a : Œ±), p ‚Üëa\n‚ä¢ p a","decl":"@[elab_as_elim]\ntheorem induction_on {p : Completion Œ± ‚Üí Prop} (a : Completion Œ±) (hp : IsClosed { a | p a })\n    (ih : ‚àÄ a : Œ±, p a) : p a :=\n  isClosed_property denseRange_coe hp ih a\n\n"}
{"name":"UniformSpace.Completion.induction_on‚ÇÇ","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬π : UniformSpace Œ±\nŒ≤ : Type u_2\ninst‚úù : UniformSpace Œ≤\np : UniformSpace.Completion Œ± ‚Üí UniformSpace.Completion Œ≤ ‚Üí Prop\na : UniformSpace.Completion Œ±\nb : UniformSpace.Completion Œ≤\nhp : IsClosed (setOf fun x => p x.1 x.2)\nih : ‚àÄ (a : Œ±) (b : Œ≤), p ‚Üëa ‚Üëb\n‚ä¢ p a b","decl":"@[elab_as_elim]\ntheorem induction_on‚ÇÇ {p : Completion Œ± ‚Üí Completion Œ≤ ‚Üí Prop} (a : Completion Œ±) (b : Completion Œ≤)\n    (hp : IsClosed { x : Completion Œ± √ó Completion Œ≤ | p x.1 x.2 })\n    (ih : ‚àÄ (a : Œ±) (b : Œ≤), p a b) : p a b :=\n  have : ‚àÄ x : Completion Œ± √ó Completion Œ≤, p x.1 x.2 :=\n    isClosed_property denseRange_coe‚ÇÇ hp fun ‚ü®a, b‚ü© => ih a b\n  this (a, b)\n\n"}
{"name":"UniformSpace.Completion.induction_on‚ÇÉ","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬≤ : UniformSpace Œ±\nŒ≤ : Type u_2\ninst‚úù¬π : UniformSpace Œ≤\nŒ≥ : Type u_3\ninst‚úù : UniformSpace Œ≥\np : UniformSpace.Completion Œ± ‚Üí UniformSpace.Completion Œ≤ ‚Üí UniformSpace.Completion Œ≥ ‚Üí Prop\na : UniformSpace.Completion Œ±\nb : UniformSpace.Completion Œ≤\nc : UniformSpace.Completion Œ≥\nhp : IsClosed (setOf fun x => p x.1 x.2.1 x.2.2)\nih : ‚àÄ (a : Œ±) (b : Œ≤) (c : Œ≥), p ‚Üëa ‚Üëb ‚Üëc\n‚ä¢ p a b c","decl":"@[elab_as_elim]\ntheorem induction_on‚ÇÉ {p : Completion Œ± ‚Üí Completion Œ≤ ‚Üí Completion Œ≥ ‚Üí Prop} (a : Completion Œ±)\n    (b : Completion Œ≤) (c : Completion Œ≥)\n    (hp : IsClosed { x : Completion Œ± √ó Completion Œ≤ √ó Completion Œ≥ | p x.1 x.2.1 x.2.2 })\n    (ih : ‚àÄ (a : Œ±) (b : Œ≤) (c : Œ≥), p a b c) : p a b c :=\n  have : ‚àÄ x : Completion Œ± √ó Completion Œ≤ √ó Completion Œ≥, p x.1 x.2.1 x.2.2 :=\n    isClosed_property denseRange_coe‚ÇÉ hp fun ‚ü®a, b, c‚ü© => ih a b c\n  this (a, b, c)\n\n"}
{"name":"UniformSpace.Completion.ext","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬≤ : UniformSpace Œ±\nY : Type u_4\ninst‚úù¬π : TopologicalSpace Y\ninst‚úù : T2Space Y\nf g : UniformSpace.Completion Œ± ‚Üí Y\nhf : Continuous f\nhg : Continuous g\nh : ‚àÄ (a : Œ±), Eq (f ‚Üëa) (g ‚Üëa)\n‚ä¢ Eq f g","decl":"theorem ext {Y : Type*} [TopologicalSpace Y] [T2Space Y] {f g : Completion Œ± ‚Üí Y}\n    (hf : Continuous f) (hg : Continuous g) (h : ‚àÄ a : Œ±, f a = g a) : f = g :=\n  cPkg.funext hf hg h\n\n"}
{"name":"UniformSpace.Completion.ext'","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬≤ : UniformSpace Œ±\nY : Type u_4\ninst‚úù¬π : TopologicalSpace Y\ninst‚úù : T2Space Y\nf g : UniformSpace.Completion Œ± ‚Üí Y\nhf : Continuous f\nhg : Continuous g\nh : ‚àÄ (a : Œ±), Eq (f ‚Üëa) (g ‚Üëa)\na : UniformSpace.Completion Œ±\n‚ä¢ Eq (f a) (g a)","decl":"theorem ext' {Y : Type*} [TopologicalSpace Y] [T2Space Y] {f g : Completion Œ± ‚Üí Y}\n    (hf : Continuous f) (hg : Continuous g) (h : ‚àÄ a : Œ±, f a = g a) (a : Completion Œ±) :\n    f a = g a :=\n  congr_fun (ext hf hg h) a\n\n"}
{"name":"UniformSpace.Completion.uniformContinuous_extension","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬≤ : UniformSpace Œ±\nŒ≤ : Type u_2\ninst‚úù¬π : UniformSpace Œ≤\nf : Œ± ‚Üí Œ≤\ninst‚úù : CompleteSpace Œ≤\n‚ä¢ UniformContinuous (UniformSpace.Completion.extension f)","decl":"theorem uniformContinuous_extension : UniformContinuous (Completion.extension f) :=\n  cPkg.uniformContinuous_extend\n\n"}
{"name":"UniformSpace.Completion.continuous_extension","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬≤ : UniformSpace Œ±\nŒ≤ : Type u_2\ninst‚úù¬π : UniformSpace Œ≤\nf : Œ± ‚Üí Œ≤\ninst‚úù : CompleteSpace Œ≤\n‚ä¢ Continuous (UniformSpace.Completion.extension f)","decl":"@[continuity, fun_prop]\ntheorem continuous_extension : Continuous (Completion.extension f) :=\n  cPkg.continuous_extend\n\n"}
{"name":"UniformSpace.Completion.extension_coe","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬≤ : UniformSpace Œ±\nŒ≤ : Type u_2\ninst‚úù¬π : UniformSpace Œ≤\nf : Œ± ‚Üí Œ≤\ninst‚úù : T0Space Œ≤\nhf : UniformContinuous f\na : Œ±\n‚ä¢ Eq (UniformSpace.Completion.extension f ‚Üëa) (f a)","decl":"theorem extension_coe [T0Space Œ≤] (hf : UniformContinuous f) (a : Œ±) :\n    (Completion.extension f) a = f a :=\n  cPkg.extend_coe hf a\n\n"}
{"name":"UniformSpace.Completion.extension_unique","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬≥ : UniformSpace Œ±\nŒ≤ : Type u_2\ninst‚úù¬≤ : UniformSpace Œ≤\nf : Œ± ‚Üí Œ≤\ninst‚úù¬π : T0Space Œ≤\ninst‚úù : CompleteSpace Œ≤\nhf : UniformContinuous f\ng : UniformSpace.Completion Œ± ‚Üí Œ≤\nhg : UniformContinuous g\nh : ‚àÄ (a : Œ±), Eq (f a) (g ‚Üëa)\n‚ä¢ Eq (UniformSpace.Completion.extension f) g","decl":"theorem extension_unique (hf : UniformContinuous f) {g : Completion Œ± ‚Üí Œ≤}\n    (hg : UniformContinuous g) (h : ‚àÄ a : Œ±, f a = g (a : Completion Œ±)) :\n    Completion.extension f = g :=\n  cPkg.extend_unique hf hg h\n\n"}
{"name":"UniformSpace.Completion.extension_comp_coe","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬≥ : UniformSpace Œ±\nŒ≤ : Type u_2\ninst‚úù¬≤ : UniformSpace Œ≤\ninst‚úù¬π : T0Space Œ≤\ninst‚úù : CompleteSpace Œ≤\nf : UniformSpace.Completion Œ± ‚Üí Œ≤\nhf : UniformContinuous f\n‚ä¢ Eq (UniformSpace.Completion.extension (Function.comp f UniformSpace.Completion.coe')) f","decl":"@[simp]\ntheorem extension_comp_coe {f : Completion Œ± ‚Üí Œ≤} (hf : UniformContinuous f) :\n    Completion.extension (f ‚àò (‚Üë)) = f :=\n  cPkg.extend_comp_coe hf\n\n"}
{"name":"UniformSpace.Completion.uniformContinuous_map","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬π : UniformSpace Œ±\nŒ≤ : Type u_2\ninst‚úù : UniformSpace Œ≤\nf : Œ± ‚Üí Œ≤\n‚ä¢ UniformContinuous (UniformSpace.Completion.map f)","decl":"theorem uniformContinuous_map : UniformContinuous (Completion.map f) :=\n  cPkg.uniformContinuous_map cPkg f\n\n"}
{"name":"UniformSpace.Completion.continuous_map","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬π : UniformSpace Œ±\nŒ≤ : Type u_2\ninst‚úù : UniformSpace Œ≤\nf : Œ± ‚Üí Œ≤\n‚ä¢ Continuous (UniformSpace.Completion.map f)","decl":"@[continuity]\ntheorem continuous_map : Continuous (Completion.map f) :=\n  cPkg.continuous_map cPkg f\n\n"}
{"name":"UniformSpace.Completion.map_coe","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬π : UniformSpace Œ±\nŒ≤ : Type u_2\ninst‚úù : UniformSpace Œ≤\nf : Œ± ‚Üí Œ≤\nhf : UniformContinuous f\na : Œ±\n‚ä¢ Eq (UniformSpace.Completion.map f ‚Üëa) ‚Üë(f a)","decl":"theorem map_coe (hf : UniformContinuous f) (a : Œ±) : (Completion.map f) a = f a :=\n  cPkg.map_coe cPkg hf a\n\n"}
{"name":"UniformSpace.Completion.map_unique","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬π : UniformSpace Œ±\nŒ≤ : Type u_2\ninst‚úù : UniformSpace Œ≤\nf : Œ± ‚Üí Œ≤\ng : UniformSpace.Completion Œ± ‚Üí UniformSpace.Completion Œ≤\nhg : UniformContinuous g\nh : ‚àÄ (a : Œ±), Eq (‚Üë(f a)) (g ‚Üëa)\n‚ä¢ Eq (UniformSpace.Completion.map f) g","decl":"theorem map_unique {f : Œ± ‚Üí Œ≤} {g : Completion Œ± ‚Üí Completion Œ≤} (hg : UniformContinuous g)\n    (h : ‚àÄ a : Œ±, ‚Üë(f a) = g a) : Completion.map f = g :=\n  cPkg.map_unique cPkg hg h\n\n"}
{"name":"UniformSpace.Completion.map_id","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù : UniformSpace Œ±\n‚ä¢ Eq (UniformSpace.Completion.map id) id","decl":"@[simp]\ntheorem map_id : Completion.map (@id Œ±) = id :=\n  cPkg.map_id\n\n"}
{"name":"UniformSpace.Completion.extension_map","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù‚Å¥ : UniformSpace Œ±\nŒ≤ : Type u_2\ninst‚úù¬≥ : UniformSpace Œ≤\nŒ≥ : Type u_3\ninst‚úù¬≤ : UniformSpace Œ≥\ninst‚úù¬π : CompleteSpace Œ≥\ninst‚úù : T0Space Œ≥\nf : Œ≤ ‚Üí Œ≥\ng : Œ± ‚Üí Œ≤\nhf : UniformContinuous f\nhg : UniformContinuous g\n‚ä¢ Eq (Function.comp (UniformSpace.Completion.extension f) (UniformSpace.Completion.map g)) (UniformSpace.Completion.extension (Function.comp f g))","decl":"theorem extension_map [CompleteSpace Œ≥] [T0Space Œ≥] {f : Œ≤ ‚Üí Œ≥} {g : Œ± ‚Üí Œ≤}\n    (hf : UniformContinuous f) (hg : UniformContinuous g) :\n    Completion.extension f ‚àò Completion.map g = Completion.extension (f ‚àò g) :=\n  Completion.ext (continuous_extension.comp continuous_map) continuous_extension <| by\n    simp [hf, hg, hf.comp hg, map_coe, extension_coe]\n\n"}
{"name":"UniformSpace.Completion.map_comp","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬≤ : UniformSpace Œ±\nŒ≤ : Type u_2\ninst‚úù¬π : UniformSpace Œ≤\nŒ≥ : Type u_3\ninst‚úù : UniformSpace Œ≥\ng : Œ≤ ‚Üí Œ≥\nf : Œ± ‚Üí Œ≤\nhg : UniformContinuous g\nhf : UniformContinuous f\n‚ä¢ Eq (Function.comp (UniformSpace.Completion.map g) (UniformSpace.Completion.map f)) (UniformSpace.Completion.map (Function.comp g f))","decl":"theorem map_comp {g : Œ≤ ‚Üí Œ≥} {f : Œ± ‚Üí Œ≤} (hg : UniformContinuous g) (hf : UniformContinuous f) :\n    Completion.map g ‚àò Completion.map f = Completion.map (g ‚àò f) :=\n  extension_map ((uniformContinuous_coe _).comp hg) hf\n\n"}
{"name":"UniformSpace.Completion.uniformContinuous_completionSeparationQuotientEquiv","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù : UniformSpace Œ±\n‚ä¢ UniformContinuous ‚áë(UniformSpace.Completion.completionSeparationQuotientEquiv Œ±)","decl":"theorem uniformContinuous_completionSeparationQuotientEquiv :\n    UniformContinuous (completionSeparationQuotientEquiv Œ±) :=\n  uniformContinuous_extension\n\n"}
{"name":"UniformSpace.Completion.uniformContinuous_completionSeparationQuotientEquiv_symm","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù : UniformSpace Œ±\n‚ä¢ UniformContinuous ‚áë(UniformSpace.Completion.completionSeparationQuotientEquiv Œ±).symm","decl":"theorem uniformContinuous_completionSeparationQuotientEquiv_symm :\n    UniformContinuous (completionSeparationQuotientEquiv Œ±).symm :=\n  uniformContinuous_map\n\n"}
{"name":"UniformSpace.Completion.extension‚ÇÇ_coe_coe","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬≥ : UniformSpace Œ±\nŒ≤ : Type u_2\ninst‚úù¬≤ : UniformSpace Œ≤\nŒ≥ : Type u_3\ninst‚úù¬π : UniformSpace Œ≥\nf : Œ± ‚Üí Œ≤ ‚Üí Œ≥\ninst‚úù : T0Space Œ≥\nhf : UniformContinuous‚ÇÇ f\na : Œ±\nb : Œ≤\n‚ä¢ Eq (UniformSpace.Completion.extension‚ÇÇ f ‚Üëa ‚Üëb) (f a b)","decl":"theorem extension‚ÇÇ_coe_coe (hf : UniformContinuous‚ÇÇ f) (a : Œ±) (b : Œ≤) :\n    Completion.extension‚ÇÇ f a b = f a b :=\n  cPkg.extension‚ÇÇ_coe_coe cPkg hf a b\n\n"}
{"name":"UniformSpace.Completion.uniformContinuous_extension‚ÇÇ","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬≥ : UniformSpace Œ±\nŒ≤ : Type u_2\ninst‚úù¬≤ : UniformSpace Œ≤\nŒ≥ : Type u_3\ninst‚úù¬π : UniformSpace Œ≥\nf : Œ± ‚Üí Œ≤ ‚Üí Œ≥\ninst‚úù : CompleteSpace Œ≥\n‚ä¢ UniformContinuous‚ÇÇ (UniformSpace.Completion.extension‚ÇÇ f)","decl":"theorem uniformContinuous_extension‚ÇÇ : UniformContinuous‚ÇÇ (Completion.extension‚ÇÇ f) :=\n  cPkg.uniformContinuous_extension‚ÇÇ cPkg f\n\n"}
{"name":"UniformSpace.Completion.uniformContinuous_map‚ÇÇ","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬≤ : UniformSpace Œ±\nŒ≤ : Type u_2\ninst‚úù¬π : UniformSpace Œ≤\nŒ≥ : Type u_3\ninst‚úù : UniformSpace Œ≥\nf : Œ± ‚Üí Œ≤ ‚Üí Œ≥\n‚ä¢ UniformContinuous‚ÇÇ (UniformSpace.Completion.map‚ÇÇ f)","decl":"theorem uniformContinuous_map‚ÇÇ (f : Œ± ‚Üí Œ≤ ‚Üí Œ≥) : UniformContinuous‚ÇÇ (Completion.map‚ÇÇ f) :=\n  cPkg.uniformContinuous_map‚ÇÇ cPkg cPkg f\n\n"}
{"name":"UniformSpace.Completion.continuous_map‚ÇÇ","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬≥ : UniformSpace Œ±\nŒ≤ : Type u_2\ninst‚úù¬≤ : UniformSpace Œ≤\nŒ≥ : Type u_3\ninst‚úù¬π : UniformSpace Œ≥\nŒ¥ : Type u_4\ninst‚úù : TopologicalSpace Œ¥\nf : Œ± ‚Üí Œ≤ ‚Üí Œ≥\na : Œ¥ ‚Üí UniformSpace.Completion Œ±\nb : Œ¥ ‚Üí UniformSpace.Completion Œ≤\nha : Continuous a\nhb : Continuous b\n‚ä¢ Continuous fun d => UniformSpace.Completion.map‚ÇÇ f (a d) (b d)","decl":"theorem continuous_map‚ÇÇ {Œ¥} [TopologicalSpace Œ¥] {f : Œ± ‚Üí Œ≤ ‚Üí Œ≥} {a : Œ¥ ‚Üí Completion Œ±}\n    {b : Œ¥ ‚Üí Completion Œ≤} (ha : Continuous a) (hb : Continuous b) :\n    Continuous fun d : Œ¥ => Completion.map‚ÇÇ f (a d) (b d) :=\n  cPkg.continuous_map‚ÇÇ cPkg cPkg ha hb\n\n"}
{"name":"UniformSpace.Completion.map‚ÇÇ_coe_coe","module":"Mathlib.Topology.UniformSpace.Completion","initialProofState":"Œ± : Type u_1\ninst‚úù¬≤ : UniformSpace Œ±\nŒ≤ : Type u_2\ninst‚úù¬π : UniformSpace Œ≤\nŒ≥ : Type u_3\ninst‚úù : UniformSpace Œ≥\na : Œ±\nb : Œ≤\nf : Œ± ‚Üí Œ≤ ‚Üí Œ≥\nhf : UniformContinuous‚ÇÇ f\n‚ä¢ Eq (UniformSpace.Completion.map‚ÇÇ f ‚Üëa ‚Üëb) ‚Üë(f a b)","decl":"theorem map‚ÇÇ_coe_coe (a : Œ±) (b : Œ≤) (f : Œ± ‚Üí Œ≤ ‚Üí Œ≥) (hf : UniformContinuous‚ÇÇ f) :\n    Completion.map‚ÇÇ f (a : Completion Œ±) (b : Completion Œ≤) = f a b :=\n  cPkg.map‚ÇÇ_coe_coe cPkg cPkg a b f hf\n\n"}
