{"name":"WithZero.instLeftDistribClass","module":"Mathlib.Algebra.Ring.WithZero","initialProofState":"α : Type u_1\ninst✝² : Mul α\ninst✝¹ : Add α\ninst✝ : LeftDistribClass α\n⊢ LeftDistribClass (WithZero α)","decl":"instance instLeftDistribClass [Mul α] [Add α] [LeftDistribClass α] :\n    LeftDistribClass (WithZero α) where\n  left_distrib a b c := by\n    cases' a with a; · rfl\n    cases' b with b <;> cases' c with c <;> try rfl\n    exact congr_arg some (left_distrib _ _ _)\n\n"}
{"name":"WithZero.instRightDistribClass","module":"Mathlib.Algebra.Ring.WithZero","initialProofState":"α : Type u_1\ninst✝² : Mul α\ninst✝¹ : Add α\ninst✝ : RightDistribClass α\n⊢ RightDistribClass (WithZero α)","decl":"instance instRightDistribClass [Mul α] [Add α] [RightDistribClass α] :\n    RightDistribClass (WithZero α) where\n  right_distrib a b c := by\n    cases' c with c\n    · simp\n    cases' a with a <;> cases' b with b <;> try rfl\n    exact congr_arg some (right_distrib _ _ _)\n\n"}
