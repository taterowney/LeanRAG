{"name":"IterateAddAct.instDiscreteMeasurableSpace","module":"Mathlib.MeasureTheory.MeasurableSpace.Instances","initialProofState":"α : Type u_1\nf : α → α\n⊢ DiscreteMeasurableSpace (IterateAddAct f)","decl":"@[to_additive]\ninstance IterateMulAct.instDiscreteMeasurableSpace {α : Type*} {f : α → α} :\n    DiscreteMeasurableSpace (IterateMulAct f) := inferInstance\n\n"}
{"name":"IterateMulAct.instDiscreteMeasurableSpace","module":"Mathlib.MeasureTheory.MeasurableSpace.Instances","initialProofState":"α : Type u_1\nf : α → α\n⊢ DiscreteMeasurableSpace (IterateMulAct f)","decl":"@[to_additive]\ninstance IterateMulAct.instDiscreteMeasurableSpace {α : Type*} {f : α → α} :\n    DiscreteMeasurableSpace (IterateMulAct f) := inferInstance\n\n"}
{"name":"Subsingleton.measurableSingletonClass","module":"Mathlib.MeasureTheory.MeasurableSpace.Instances","initialProofState":"α : Type u_1\ninst✝¹ : MeasurableSpace α\ninst✝ : Subsingleton α\n⊢ MeasurableSingletonClass α","decl":"instance (priority := 100) Subsingleton.measurableSingletonClass\n    {α} [MeasurableSpace α] [Subsingleton α] : MeasurableSingletonClass α := by\n  refine ⟨fun i => ?_⟩\n  convert MeasurableSet.univ\n  simp [Set.eq_univ_iff_forall, eq_iff_true_of_subsingleton]\n\n"}
{"name":"Bool.instMeasurableSingletonClass","module":"Mathlib.MeasureTheory.MeasurableSpace.Instances","initialProofState":"⊢ MeasurableSingletonClass Bool","decl":"instance Bool.instMeasurableSingletonClass : MeasurableSingletonClass Bool := ⟨fun _ => trivial⟩\n\n"}
{"name":"Prop.instMeasurableSingletonClass","module":"Mathlib.MeasureTheory.MeasurableSpace.Instances","initialProofState":"⊢ MeasurableSingletonClass Prop","decl":"instance Prop.instMeasurableSingletonClass : MeasurableSingletonClass Prop := ⟨fun _ => trivial⟩\n\n"}
{"name":"Nat.instMeasurableSingletonClass","module":"Mathlib.MeasureTheory.MeasurableSpace.Instances","initialProofState":"⊢ MeasurableSingletonClass Nat","decl":"instance Nat.instMeasurableSingletonClass : MeasurableSingletonClass ℕ := ⟨fun _ => trivial⟩\n\n"}
{"name":"ENat.instDiscreteMeasurableSpace","module":"Mathlib.MeasureTheory.MeasurableSpace.Instances","initialProofState":"⊢ DiscreteMeasurableSpace ENat","decl":"instance ENat.instDiscreteMeasurableSpace : DiscreteMeasurableSpace ℕ∞ := ⟨fun _ ↦ trivial⟩\n\n"}
{"name":"ENat.instMeasurableSingletonClass","module":"Mathlib.MeasureTheory.MeasurableSpace.Instances","initialProofState":"⊢ MeasurableSingletonClass ENat","decl":"instance ENat.instMeasurableSingletonClass : MeasurableSingletonClass ℕ∞ := inferInstance\n\n"}
{"name":"Fin.instMeasurableSingletonClass","module":"Mathlib.MeasureTheory.MeasurableSpace.Instances","initialProofState":"n : Nat\n⊢ MeasurableSingletonClass (Fin n)","decl":"instance Fin.instMeasurableSingletonClass (n : ℕ) : MeasurableSingletonClass (Fin n) :=\n  ⟨fun _ => trivial⟩\n\n"}
{"name":"ZMod.instMeasurableSingletonClass","module":"Mathlib.MeasureTheory.MeasurableSpace.Instances","initialProofState":"n : Nat\n⊢ MeasurableSingletonClass (ZMod n)","decl":"instance ZMod.instMeasurableSingletonClass (n : ℕ) : MeasurableSingletonClass (ZMod n) :=\n  ⟨fun _ => trivial⟩\n\n"}
{"name":"Int.instMeasurableSingletonClass","module":"Mathlib.MeasureTheory.MeasurableSpace.Instances","initialProofState":"⊢ MeasurableSingletonClass Int","decl":"instance Int.instMeasurableSingletonClass : MeasurableSingletonClass ℤ := ⟨fun _ => trivial⟩\n\n"}
{"name":"Rat.instMeasurableSingletonClass","module":"Mathlib.MeasureTheory.MeasurableSpace.Instances","initialProofState":"⊢ MeasurableSingletonClass Rat","decl":"instance Rat.instMeasurableSingletonClass : MeasurableSingletonClass ℚ := ⟨fun _ => trivial⟩\n"}
