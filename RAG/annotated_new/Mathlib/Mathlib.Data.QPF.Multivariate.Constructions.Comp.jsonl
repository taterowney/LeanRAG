{"name":"MvQPF.Comp.mk_get","module":"Mathlib.Data.QPF.Multivariate.Constructions.Comp","initialProofState":"n m : Nat\nF : TypeVec.{u} n → Type u_1\nG : Fin2 n → TypeVec.{u} m → Type u\nα : TypeVec.{u} m\nx : MvQPF.Comp F G α\n⊢ Eq (MvQPF.Comp.mk x.get) x","decl":"@[simp]\nprotected theorem mk_get (x : Comp F G α) : Comp.mk (Comp.get x) = x := rfl\n\n"}
{"name":"MvQPF.Comp.get_mk","module":"Mathlib.Data.QPF.Multivariate.Constructions.Comp","initialProofState":"n m : Nat\nF : TypeVec.{u} n → Type u_1\nG : Fin2 n → TypeVec.{u} m → Type u\nα : TypeVec.{u} m\nx : F fun i => G i α\n⊢ Eq (MvQPF.Comp.mk x).get x","decl":"@[simp]\nprotected theorem get_mk (x : F fun i ↦ G i α) : Comp.get (Comp.mk x) = x := rfl\n\n"}
{"name":"MvQPF.Comp.map_mk","module":"Mathlib.Data.QPF.Multivariate.Constructions.Comp","initialProofState":"n m : Nat\nF : TypeVec.{u} n → Type u_1\nG : Fin2 n → TypeVec.{u} m → Type u\nα β : TypeVec.{u} m\nf : α.Arrow β\ninst✝¹ : MvFunctor F\ninst✝ : (i : Fin2 n) → MvFunctor (G i)\nx : F fun i => G i α\n⊢ Eq (MvFunctor.map f (MvQPF.Comp.mk x)) (MvQPF.Comp.mk (MvFunctor.map (fun i x => MvFunctor.map f x) x))","decl":"theorem map_mk (x : F fun i ↦ G i α) :\n    f <$$> Comp.mk x = Comp.mk ((fun i (x : G i α) ↦ f <$$> x) <$$> x) := rfl\n\n"}
{"name":"MvQPF.Comp.get_map","module":"Mathlib.Data.QPF.Multivariate.Constructions.Comp","initialProofState":"n m : Nat\nF : TypeVec.{u} n → Type u_1\nG : Fin2 n → TypeVec.{u} m → Type u\nα β : TypeVec.{u} m\nf : α.Arrow β\ninst✝¹ : MvFunctor F\ninst✝ : (i : Fin2 n) → MvFunctor (G i)\nx : MvQPF.Comp F G α\n⊢ Eq (MvFunctor.map f x).get (MvFunctor.map (fun i x => MvFunctor.map f x) x.get)","decl":"theorem get_map (x : Comp F G α) :\n    Comp.get (f <$$> x) = (fun i (x : G i α) ↦ f <$$> x) <$$> Comp.get x := rfl\n\n"}
