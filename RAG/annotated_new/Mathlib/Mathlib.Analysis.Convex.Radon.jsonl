{"name":"Convex.radon_partition","module":"Mathlib.Analysis.Convex.Radon","initialProofState":"ι : Type u_1\n𝕜 : Type u_2\nE : Type u_3\ninst✝² : LinearOrderedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\nf : ι → E\nh : Not (AffineIndependent 𝕜 f)\n⊢ Exists fun I => (Inter.inter ((convexHull 𝕜) (Set.image f I)) ((convexHull 𝕜) (Set.image f (HasCompl.compl I)))).Nonempty","decl":"/-- **Radon's theorem on convex sets**.\n\nAny family `f` of affine dependent vectors contains a set `I` with the property that convex hulls of\n`I` and `Iᶜ` intersect nontrivially. -/\ntheorem radon_partition {f : ι → E} (h : ¬ AffineIndependent 𝕜 f) :\n    ∃ I, (convexHull 𝕜 (f '' I) ∩ convexHull 𝕜 (f '' Iᶜ)).Nonempty := by\n  rw [affineIndependent_iff] at h\n  push_neg at h\n  obtain ⟨s, w, h_wsum, h_vsum, nonzero_w_index, h1, h2⟩ := h\n  let I : Finset ι := {i ∈ s | 0 ≤ w i}\n  let J : Finset ι := {i ∈ s | w i < 0}\n  let p : E := centerMass I w f -- point of intersection\n  have hJI : ∑ j ∈ J, w j + ∑ i ∈ I, w i = 0 := by\n    simpa only [h_wsum, not_lt] using sum_filter_add_sum_filter_not s (fun i ↦ w i < 0) w\n  have hI : 0 < ∑ i ∈ I, w i := by\n    rcases exists_pos_of_sum_zero_of_exists_nonzero _ h_wsum ⟨nonzero_w_index, h1, h2⟩\n      with ⟨pos_w_index, h1', h2'⟩\n    exact sum_pos' (fun _i hi ↦ (mem_filter.1 hi).2)\n      ⟨pos_w_index, by simp only [I, mem_filter, h1', h2'.le, and_self, h2']⟩\n  have hp : centerMass J w f = p := centerMass_of_sum_add_sum_eq_zero hJI <| by\n    simpa only [← h_vsum, not_lt] using sum_filter_add_sum_filter_not s (fun i ↦ w i < 0) _\n  refine ⟨I, p, ?_, ?_⟩\n  · exact centerMass_mem_convexHull _ (fun _i hi ↦ (mem_filter.mp hi).2) hI\n      (fun _i hi ↦ mem_image_of_mem _ hi)\n  rw [← hp]\n  refine centerMass_mem_convexHull_of_nonpos _ (fun _ hi ↦ (mem_filter.mp hi).2.le) ?_\n    (fun _i hi ↦ mem_image_of_mem _ fun hi' ↦ ?_)\n  · linarith only [hI, hJI]\n  · exact (mem_filter.mp hi').2.not_lt (mem_filter.mp hi).2\n\n"}
{"name":"Convex.helly_theorem'","module":"Mathlib.Analysis.Convex.Radon","initialProofState":"ι : Type u_1\n𝕜 : Type u_2\nE : Type u_3\ninst✝³ : LinearOrderedField 𝕜\ninst✝² : AddCommGroup E\ninst✝¹ : Module 𝕜 E\ninst✝ : FiniteDimensional 𝕜 E\nF : ι → Set E\ns : Finset ι\nh_convex : ∀ (i : ι), Membership.mem s i → Convex 𝕜 (F i)\nh_inter : ∀ (I : Finset ι), HasSubset.Subset I s → LE.le I.card (HAdd.hAdd (Module.finrank 𝕜 E) 1) → (Set.iInter fun i => Set.iInter fun h => F i).Nonempty\n⊢ (Set.iInter fun i => Set.iInter fun h => F i).Nonempty","decl":"/-- **Helly's theorem** for finite families of convex sets.\n\nIf `F` is a finite family of convex sets in a vector space of finite dimension `d`, and any\n`k ≤ d + 1` sets of `F` intersect nontrivially, then all sets of `F` intersect nontrivially. -/\ntheorem helly_theorem' {F : ι → Set E} {s : Finset ι}\n    (h_convex : ∀ i ∈ s, Convex 𝕜 (F i))\n    (h_inter : ∀ I ⊆ s, #I ≤ finrank 𝕜 E + 1 → (⋂ i ∈ I, F i).Nonempty) :\n    (⋂ i ∈ s, F i).Nonempty := by\n  classical\n  obtain h_card | h_card := lt_or_le #s (finrank 𝕜 E + 1)\n  · exact helly_theorem_corner (le_of_lt h_card) h_inter\n  generalize hn : #s = n\n  rw [hn] at h_card\n  induction' n, h_card using Nat.le_induction with k h_card hk generalizing ι\n  · exact helly_theorem_corner (le_of_eq hn) h_inter\n  /- Construct a family of vectors indexed by `ι` such that the vector corresponding to `i : ι`\n  is an arbitrary element of the intersection of all `F j` except `F i`. -/\n  let a (i : s) : E := Set.Nonempty.some (s := ⋂ j ∈ s.erase i, F j) <| by\n    apply hk (s := s.erase i)\n    · exact fun i hi ↦ h_convex i (mem_of_mem_erase hi)\n    · intro J hJ_ss hJ_card\n      exact h_inter J (subset_trans hJ_ss (erase_subset i.val s)) hJ_card\n    · simp only [coe_mem, card_erase_of_mem]; omega\n  /- This family of vectors is not affine independent because the number of them exceeds the\n  dimension of the space. -/\n  have h_ind : ¬AffineIndependent 𝕜 a := by\n    rw [← finrank_vectorSpan_le_iff_not_affineIndependent 𝕜 a (n := (k - 1))]\n    · exact (Submodule.finrank_le (vectorSpan 𝕜 (range a))).trans (Nat.le_pred_of_lt h_card)\n    · simp only [card_coe]; omega\n  /- Use `radon_partition` to conclude there is a subset `I` of `s` and a point `p : E` which\n  lies in the convex hull of either `a '' I` or `a '' Iᶜ`. We claim that `p ∈ ⋂ i ∈ s, F i`. -/\n  obtain ⟨I, p, hp_I, hp_Ic⟩ := radon_partition h_ind\n  use p\n  apply mem_biInter\n  intro i hi\n  let i : s := ⟨i, hi⟩\n  /- It suffices to show that for any subcollection `J` of `s` containing `i`, the convex\n  hull of `a '' (s \\ J)` is contained in `F i`. -/\n  suffices ∀ J : Set s, (i ∈ J) → (convexHull 𝕜) (a '' Jᶜ) ⊆ F i by\n    by_cases h : i ∈ I\n    · exact this I h hp_Ic\n    · apply this Iᶜ h; rwa [compl_compl]\n  /- Given any subcollection `J` of `ι` containing `i`, because `F i` is convex, we need only\n  show that `a j ∈ F i` for each `j ∈ s \\ J`. -/\n  intro J hi\n  rw [convexHull_subset_iff (h_convex i.1 i.2)]\n  rintro v ⟨j, hj, hj_v⟩\n  rw [← hj_v]\n  /- Since `j ∈ Jᶜ` and `i ∈ J`, we conclude that `i ≠ j`, and hence by the definition of `a`:\n  `a j ∈ ⋂ F '' (Set.univ \\ {j}) ⊆ F i`. -/\n  apply mem_of_subset_of_mem (s₁ := ⋂ k ∈ (s.erase j), F k)\n  · apply biInter_subset_of_mem\n    simp only [erase_val]\n    suffices h : i.val ∈ s.erase j by assumption\n    simp only [mem_erase]\n    constructor\n    · exact fun h' ↦ hj ((show i = j from SetCoe.ext h') ▸ hi)\n    · assumption\n  · apply Nonempty.some_mem\n\n"}
{"name":"Convex.helly_theorem","module":"Mathlib.Analysis.Convex.Radon","initialProofState":"ι : Type u_1\n𝕜 : Type u_2\nE : Type u_3\ninst✝³ : LinearOrderedField 𝕜\ninst✝² : AddCommGroup E\ninst✝¹ : Module 𝕜 E\ninst✝ : FiniteDimensional 𝕜 E\nF : ι → Set E\ns : Finset ι\nh_card : LE.le (HAdd.hAdd (Module.finrank 𝕜 E) 1) s.card\nh_convex : ∀ (i : ι), Membership.mem s i → Convex 𝕜 (F i)\nh_inter : ∀ (I : Finset ι), HasSubset.Subset I s → Eq I.card (HAdd.hAdd (Module.finrank 𝕜 E) 1) → (Set.iInter fun i => Set.iInter fun h => F i).Nonempty\n⊢ (Set.iInter fun i => Set.iInter fun h => F i).Nonempty","decl":"/-- **Helly's theorem** for finite families of convex sets in its classical form.\n\nIf `F` is a family of `n` convex sets in a vector space of finite dimension `d`, with `n ≥ d + 1`,\nand any `d + 1` sets of `F` intersect nontrivially, then all sets of `F` intersect nontrivially. -/\ntheorem helly_theorem {F : ι → Set E} {s : Finset ι}\n    (h_card : finrank 𝕜 E + 1 ≤ #s)\n    (h_convex : ∀ i ∈ s, Convex 𝕜 (F i))\n    (h_inter : ∀ I ⊆ s, #I = finrank 𝕜 E + 1 → (⋂ i ∈ I, F i).Nonempty) :\n    (⋂ i ∈ s, F i).Nonempty := by\n  apply helly_theorem' h_convex\n  intro I hI_ss hI_card\n  obtain ⟨J, hI_ss_J, hJ_ss, hJ_card⟩ := exists_subsuperset_card_eq hI_ss hI_card h_card\n  apply Set.Nonempty.mono <| biInter_mono hI_ss_J (fun _ _ ↦ Set.Subset.rfl)\n  exact h_inter J hJ_ss hJ_card\n\n"}
{"name":"Convex.helly_theorem_set'","module":"Mathlib.Analysis.Convex.Radon","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝³ : LinearOrderedField 𝕜\ninst✝² : AddCommGroup E\ninst✝¹ : Module 𝕜 E\ninst✝ : FiniteDimensional 𝕜 E\nF : Finset (Set E)\nh_convex : ∀ (X : Set E), Membership.mem F X → Convex 𝕜 X\nh_inter : ∀ (G : Finset (Set E)), HasSubset.Subset G F → LE.le G.card (HAdd.hAdd (Module.finrank 𝕜 E) 1) → (↑G).sInter.Nonempty\n⊢ (↑F).sInter.Nonempty","decl":"/-- **Helly's theorem** for finite sets of convex sets.\n\nIf `F` is a finite set of convex sets in a vector space of finite dimension `d`, and any `k ≤ d + 1`\nsets from `F` intersect nontrivially, then all sets from `F` intersect nontrivially. -/\ntheorem helly_theorem_set' {F : Finset (Set E)}\n    (h_convex : ∀ X ∈ F, Convex 𝕜 X)\n    (h_inter : ∀ G : Finset (Set E), G ⊆ F → #G ≤ finrank 𝕜 E + 1 → (⋂₀ G : Set E).Nonempty) :\n    (⋂₀ (F : Set (Set E))).Nonempty := by\n  classical -- for DecidableEq, required for the family version\n  rw [show ⋂₀ F = ⋂ X ∈ F, (X : Set E) by ext; simp]\n  apply helly_theorem' h_convex\n  intro G hG_ss hG_card\n  rw [show ⋂ X ∈ G, X = ⋂₀ G by ext; simp]\n  exact h_inter G hG_ss hG_card\n\n"}
{"name":"Convex.helly_theorem_set","module":"Mathlib.Analysis.Convex.Radon","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝³ : LinearOrderedField 𝕜\ninst✝² : AddCommGroup E\ninst✝¹ : Module 𝕜 E\ninst✝ : FiniteDimensional 𝕜 E\nF : Finset (Set E)\nh_card : LE.le (HAdd.hAdd (Module.finrank 𝕜 E) 1) F.card\nh_convex : ∀ (X : Set E), Membership.mem F X → Convex 𝕜 X\nh_inter : ∀ (G : Finset (Set E)), HasSubset.Subset G F → Eq G.card (HAdd.hAdd (Module.finrank 𝕜 E) 1) → (↑G).sInter.Nonempty\n⊢ (↑F).sInter.Nonempty","decl":"/-- **Helly's theorem** for finite sets of convex sets in its classical form.\n\nIf `F` is a finite set of convex sets in a vector space of finite dimension `d`, with `n ≥ d + 1`,\nand any `d + 1` sets from `F` intersect nontrivially,\nthen all sets from `F` intersect nontrivially. -/\ntheorem helly_theorem_set {F : Finset (Set E)}\n    (h_card : finrank 𝕜 E + 1 ≤ #F)\n    (h_convex : ∀ X ∈ F, Convex 𝕜 X)\n    (h_inter : ∀ G : Finset (Set E), G ⊆ F → #G = finrank 𝕜 E + 1 → (⋂₀ G : Set E).Nonempty) :\n    (⋂₀ (F : Set (Set E))).Nonempty := by\n  apply helly_theorem_set' h_convex\n  intro I hI_ss hI_card\n  obtain ⟨J, _, hJ_ss, hJ_card⟩ := exists_subsuperset_card_eq hI_ss hI_card h_card\n  have : ⋂₀ (J : Set (Set E)) ⊆ ⋂₀ I := sInter_mono (by simpa [hI_ss])\n  apply Set.Nonempty.mono this\n  exact h_inter J hJ_ss (by omega)\n\n"}
{"name":"Convex.helly_theorem_compact'","module":"Mathlib.Analysis.Convex.Radon","initialProofState":"ι : Type u_1\n𝕜 : Type u_2\nE : Type u_3\ninst✝⁵ : LinearOrderedField 𝕜\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module 𝕜 E\ninst✝² : FiniteDimensional 𝕜 E\ninst✝¹ : TopologicalSpace E\ninst✝ : T2Space E\nF : ι → Set E\nh_convex : ∀ (i : ι), Convex 𝕜 (F i)\nh_compact : ∀ (i : ι), IsCompact (F i)\nh_inter : ∀ (I : Finset ι), LE.le I.card (HAdd.hAdd (Module.finrank 𝕜 E) 1) → (Set.iInter fun i => Set.iInter fun h => F i).Nonempty\n⊢ (Set.iInter fun i => F i).Nonempty","decl":"/-- **Helly's theorem** for families of compact convex sets.\n\nIf `F` is a family of compact convex sets in a vector space of finite dimension `d`, and any\n`k ≤ d + 1` sets of `F` intersect nontrivially, then all sets of `F` intersect nontrivially. -/\ntheorem helly_theorem_compact' [TopologicalSpace E] [T2Space E] {F : ι → Set E}\n    (h_convex : ∀ i, Convex 𝕜 (F i)) (h_compact : ∀ i, IsCompact (F i))\n    (h_inter : ∀ I : Finset ι, #I ≤ finrank 𝕜 E + 1 → (⋂ i ∈ I, F i).Nonempty) :\n    (⋂ i, F i).Nonempty := by\n  classical\n  /- If `ι` is empty the statement is trivial. -/\n  cases' isEmpty_or_nonempty ι with _ h_nonempty\n  · simp only [iInter_of_empty, Set.univ_nonempty]\n  /- By the finite version of theorem, every finite subfamily has an intersection. -/\n  have h_fin (I : Finset ι) : (⋂ i ∈ I, F i).Nonempty := by\n    apply helly_theorem' (s := I) (𝕜 := 𝕜) (by simp [h_convex])\n    exact fun J _ hJ_card ↦ h_inter J hJ_card\n  /- The following is a clumsy proof that family of compact sets with the finite intersection\n  property has a nonempty intersection. -/\n  have i0 : ι := Nonempty.some h_nonempty\n  rw [show ⋂ i, F i = (F i0) ∩ ⋂ i, F i by simp [iInter_subset]]\n  apply IsCompact.inter_iInter_nonempty\n  · exact h_compact i0\n  · intro i\n    exact (h_compact i).isClosed\n  · intro I\n    simpa using h_fin ({i0} ∪ I)\n\n"}
{"name":"Convex.helly_theorem_compact","module":"Mathlib.Analysis.Convex.Radon","initialProofState":"ι : Type u_1\n𝕜 : Type u_2\nE : Type u_3\ninst✝⁵ : LinearOrderedField 𝕜\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module 𝕜 E\ninst✝² : FiniteDimensional 𝕜 E\ninst✝¹ : TopologicalSpace E\ninst✝ : T2Space E\nF : ι → Set E\nh_card : LE.le (HAdd.hAdd (↑(Module.finrank 𝕜 E)) 1) (ENat.card ι)\nh_convex : ∀ (i : ι), Convex 𝕜 (F i)\nh_compact : ∀ (i : ι), IsCompact (F i)\nh_inter : ∀ (I : Finset ι), Eq I.card (HAdd.hAdd (Module.finrank 𝕜 E) 1) → (Set.iInter fun i => Set.iInter fun h => F i).Nonempty\n⊢ (Set.iInter fun i => F i).Nonempty","decl":"/-- **Helly's theorem** for families of compact convex sets in its classical form.\n\nIf `F` is a (possibly infinite) family of more than `d + 1` compact convex sets in a vector space of\nfinite dimension `d`, and any `d + 1` sets of `F` intersect nontrivially,\nthen all sets of `F` intersect nontrivially. -/\ntheorem helly_theorem_compact [TopologicalSpace E] [T2Space E] {F : ι → Set E}\n    (h_card : finrank 𝕜 E + 1 ≤ ENat.card ι)\n    (h_convex : ∀ i, Convex 𝕜 (F i)) (h_compact : ∀ i, IsCompact (F i))\n    (h_inter : ∀ I : Finset ι, #I = finrank 𝕜 E + 1 → (⋂ i ∈ I, F i).Nonempty) :\n    (⋂ i, F i).Nonempty := by\n  apply helly_theorem_compact' h_convex h_compact\n  intro I hI_card\n  have hJ : ∃ J : Finset ι, I ⊆ J ∧ #J = finrank 𝕜 E + 1 := by\n    by_cases h : Infinite ι\n    · exact Infinite.exists_superset_card_eq _ _ hI_card\n    · have : Finite ι := Finite.of_not_infinite h\n      have : Fintype ι := Fintype.ofFinite ι\n      apply exists_superset_card_eq hI_card\n      simp only [ENat.card_eq_coe_fintype_card] at h_card\n      rwa [← Nat.cast_one, ← Nat.cast_add, Nat.cast_le] at h_card\n  obtain ⟨J, hJ_ss, hJ_card⟩ := hJ\n  apply Set.Nonempty.mono <| biInter_mono hJ_ss (by intro _ _; rfl)\n  exact h_inter J hJ_card\n\n"}
{"name":"Convex.helly_theorem_set_compact'","module":"Mathlib.Analysis.Convex.Radon","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝⁵ : LinearOrderedField 𝕜\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module 𝕜 E\ninst✝² : FiniteDimensional 𝕜 E\ninst✝¹ : TopologicalSpace E\ninst✝ : T2Space E\nF : Set (Set E)\nh_convex : ∀ (X : Set E), Membership.mem F X → Convex 𝕜 X\nh_compact : ∀ (X : Set E), Membership.mem F X → IsCompact X\nh_inter : ∀ (G : Finset (Set E)), HasSubset.Subset (↑G) F → LE.le G.card (HAdd.hAdd (Module.finrank 𝕜 E) 1) → (↑G).sInter.Nonempty\n⊢ F.sInter.Nonempty","decl":"/-- **Helly's theorem** for sets of compact convex sets.\n\nIf `F` is a set of compact convex sets in a vector space of finite dimension `d`, and any\n`k ≤ d + 1` sets from `F` intersect nontrivially, then all sets from `F` intersect nontrivially. -/\ntheorem helly_theorem_set_compact' [TopologicalSpace E] [T2Space E] {F : Set (Set E)}\n    (h_convex : ∀ X ∈ F, Convex 𝕜 X) (h_compact : ∀ X ∈ F, IsCompact X)\n    (h_inter : ∀ G : Finset (Set E), (G : Set (Set E)) ⊆ F → #G ≤ finrank 𝕜 E + 1 →\n    (⋂₀ G : Set E).Nonempty) :\n    (⋂₀ (F : Set (Set E))).Nonempty := by\n  classical -- for DecidableEq, required for the family version\n  rw [show ⋂₀ F = ⋂ X : F, (X : Set E) by ext; simp]\n  refine helly_theorem_compact' (F := fun x : F ↦ x.val)\n    (fun X ↦ h_convex X (by simp)) (fun X ↦ h_compact X (by simp)) ?_\n  intro G _\n  let G' : Finset (Set E) := image Subtype.val G\n  rw [show ⋂ i ∈ G, ↑i = ⋂₀ (G' : Set (Set E)) by simp [G']]\n  apply h_inter G'\n  · simp [G']\n  · apply le_trans card_image_le\n    assumption\n\n"}
{"name":"Convex.helly_theorem_set_compact","module":"Mathlib.Analysis.Convex.Radon","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝⁵ : LinearOrderedField 𝕜\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module 𝕜 E\ninst✝² : FiniteDimensional 𝕜 E\ninst✝¹ : TopologicalSpace E\ninst✝ : T2Space E\nF : Set (Set E)\nh_card : LE.le (HAdd.hAdd (↑(Module.finrank 𝕜 E)) 1) F.encard\nh_convex : ∀ (X : Set E), Membership.mem F X → Convex 𝕜 X\nh_compact : ∀ (X : Set E), Membership.mem F X → IsCompact X\nh_inter : ∀ (G : Finset (Set E)), HasSubset.Subset (↑G) F → Eq G.card (HAdd.hAdd (Module.finrank 𝕜 E) 1) → (↑G).sInter.Nonempty\n⊢ F.sInter.Nonempty","decl":"/-- **Helly's theorem** for sets of compact convex sets in its classical version.\n\nIf `F` is a (possibly infinite) set of more than `d + 1` compact convex sets in a vector space of\nfinite dimension `d`, and any `d + 1` sets from `F` intersect nontrivially,\nthen all sets from `F` intersect nontrivially. -/\ntheorem helly_theorem_set_compact [TopologicalSpace E] [T2Space E] {F : Set (Set E)}\n    (h_card : finrank 𝕜 E + 1 ≤ F.encard)\n    (h_convex : ∀ X ∈ F, Convex 𝕜 X) (h_compact : ∀ X ∈ F, IsCompact X)\n    (h_inter : ∀ G : Finset (Set E), (G : Set (Set E)) ⊆ F → #G = finrank 𝕜 E + 1 →\n    (⋂₀ G : Set E).Nonempty) :\n    (⋂₀ (F : Set (Set E))).Nonempty := by\n  apply helly_theorem_set_compact' h_convex h_compact\n  intro I hI_ss hI_card\n  obtain ⟨J, _, hJ_ss, hJ_card⟩ := exists_superset_subset_encard_eq hI_ss (hkt := h_card)\n    (by simpa only [encard_coe_eq_coe_finsetCard, ← ENat.coe_one, ← ENat.coe_add, Nat.cast_le])\n  apply Set.Nonempty.mono <| sInter_mono (by simpa [hI_ss])\n  have hJ_fin : Fintype J := Finite.fintype <| finite_of_encard_eq_coe hJ_card\n  let J' := J.toFinset\n  rw [← coe_toFinset J]\n  apply h_inter J'\n  · simpa [J']\n  · rwa [encard_eq_coe_toFinset_card J, ← ENat.coe_one, ← ENat.coe_add, Nat.cast_inj] at hJ_card\n\n"}
