{"name":"AbsConvex.empty","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : SeminormedRing 𝕜\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul Real E\ninst✝ : AddCommMonoid E\n⊢ AbsConvex 𝕜 EmptyCollection.emptyCollection","decl":"theorem AbsConvex.empty : AbsConvex 𝕜 (∅ : Set E) := ⟨balanced_empty, convex_empty⟩\n\n"}
{"name":"AbsConvex.univ","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : SeminormedRing 𝕜\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul Real E\ninst✝ : AddCommMonoid E\n⊢ AbsConvex 𝕜 Set.univ","decl":"theorem AbsConvex.univ : AbsConvex 𝕜 (univ : Set E) := ⟨balanced_univ, convex_univ⟩\n\n"}
{"name":"AbsConvex.inter","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : SeminormedRing 𝕜\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul Real E\ninst✝ : AddCommMonoid E\ns t : Set E\nhs : AbsConvex 𝕜 s\nht : AbsConvex 𝕜 t\n⊢ AbsConvex 𝕜 (Inter.inter s t)","decl":"theorem AbsConvex.inter {s t : Set E} (hs : AbsConvex 𝕜 s) (ht : AbsConvex 𝕜 t) :\n    AbsConvex 𝕜 (s ∩ t) := ⟨hs.1.inter ht.1, hs.2.inter ht.2⟩\n\n"}
{"name":"AbsConvex.sInter","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : SeminormedRing 𝕜\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul Real E\ninst✝ : AddCommMonoid E\nS : Set (Set E)\nh : ∀ (s : Set E), Membership.mem S s → AbsConvex 𝕜 s\n⊢ AbsConvex 𝕜 S.sInter","decl":"theorem AbsConvex.sInter {S : Set (Set E)} (h : ∀ s ∈ S, AbsConvex 𝕜 s) : AbsConvex 𝕜 (⋂₀ S) :=\n  ⟨.sInter fun s hs => (h s hs).1, convex_sInter fun s hs => (h s hs).2⟩\n\n"}
{"name":"AbsConvex.iInter","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : SeminormedRing 𝕜\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul Real E\ninst✝ : AddCommMonoid E\nι : Sort u_3\ns : ι → Set E\nh : ∀ (i : ι), AbsConvex 𝕜 (s i)\n⊢ AbsConvex 𝕜 (Set.iInter fun i => s i)","decl":"theorem AbsConvex.iInter {ι : Sort*} {s : ι → Set E} (h : ∀ i, AbsConvex 𝕜 (s i)) :\n    AbsConvex 𝕜 (⋂ i, s i) :=\n  sInter_range s ▸ AbsConvex.sInter <| forall_mem_range.2 h\n\n"}
{"name":"absConvexHull_isClosed","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : SeminormedRing 𝕜\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul Real E\ninst✝ : AddCommMonoid E\ns : Set E\n⊢ Eq ((absConvexHull 𝕜).IsClosed s) (AbsConvex 𝕜 s)","decl":"/-- The absolute convex hull of a set `s` is the minimal absolute convex set that includes `s`. -/\n@[simps! isClosed]\ndef absConvexHull : ClosureOperator (Set E) :=\n  .ofCompletePred (AbsConvex 𝕜) fun _ ↦ .sInter\n\n"}
{"name":"subset_absConvexHull","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : SeminormedRing 𝕜\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul Real E\ninst✝ : AddCommMonoid E\ns : Set E\n⊢ HasSubset.Subset s ((absConvexHull 𝕜) s)","decl":"theorem subset_absConvexHull : s ⊆ absConvexHull 𝕜 s :=\n  (absConvexHull 𝕜).le_closure s\n\n"}
{"name":"absConvex_absConvexHull","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : SeminormedRing 𝕜\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul Real E\ninst✝ : AddCommMonoid E\ns : Set E\n⊢ AbsConvex 𝕜 ((absConvexHull 𝕜) s)","decl":"theorem absConvex_absConvexHull : AbsConvex 𝕜 (absConvexHull 𝕜 s) :=\n  (absConvexHull 𝕜).isClosed_closure s\n\n"}
{"name":"balanced_absConvexHull","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : SeminormedRing 𝕜\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul Real E\ninst✝ : AddCommMonoid E\ns : Set E\n⊢ Balanced 𝕜 ((absConvexHull 𝕜) s)","decl":"theorem balanced_absConvexHull : Balanced 𝕜 (absConvexHull 𝕜 s) :=\n  absConvex_absConvexHull.1\n\n"}
{"name":"convex_absConvexHull","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : SeminormedRing 𝕜\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul Real E\ninst✝ : AddCommMonoid E\ns : Set E\n⊢ Convex Real ((absConvexHull 𝕜) s)","decl":"theorem convex_absConvexHull : Convex ℝ (absConvexHull 𝕜 s) :=\n  absConvex_absConvexHull.2\n\n"}
{"name":"absConvexHull_eq_iInter","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : SeminormedRing 𝕜\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul Real E\ninst✝ : AddCommMonoid E\ns : Set E\n⊢ Eq ((absConvexHull 𝕜) s) (Set.iInter fun t => Set.iInter fun x => Set.iInter fun x => t)","decl":"variable (𝕜 s) in\ntheorem absConvexHull_eq_iInter :\n    absConvexHull 𝕜 s = ⋂ (t : Set E) (_ : s ⊆ t) (_ : AbsConvex 𝕜 t), t := by\n  simp [absConvexHull, iInter_subtype, iInter_and]\n\n"}
{"name":"mem_absConvexHull_iff","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : SeminormedRing 𝕜\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul Real E\ninst✝ : AddCommMonoid E\ns : Set E\nx : E\n⊢ Iff (Membership.mem ((absConvexHull 𝕜) s) x) (∀ (t : Set E), HasSubset.Subset s t → AbsConvex 𝕜 t → Membership.mem t x)","decl":"theorem mem_absConvexHull_iff : x ∈ absConvexHull 𝕜 s ↔ ∀ t, s ⊆ t → AbsConvex 𝕜 t → x ∈ t := by\n  simp_rw [absConvexHull_eq_iInter, mem_iInter]\n\n"}
{"name":"absConvexHull_min","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : SeminormedRing 𝕜\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul Real E\ninst✝ : AddCommMonoid E\ns t : Set E\na✝¹ : HasSubset.Subset s t\na✝ : AbsConvex 𝕜 t\n⊢ HasSubset.Subset ((absConvexHull 𝕜) s) t","decl":"theorem absConvexHull_min : s ⊆ t → AbsConvex 𝕜 t → absConvexHull 𝕜 s ⊆ t :=\n  (absConvexHull 𝕜).closure_min\n\n"}
{"name":"AbsConvex.absConvexHull_subset_iff","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : SeminormedRing 𝕜\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul Real E\ninst✝ : AddCommMonoid E\ns t : Set E\nht : AbsConvex 𝕜 t\n⊢ Iff (HasSubset.Subset ((absConvexHull 𝕜) s) t) (HasSubset.Subset s t)","decl":"theorem AbsConvex.absConvexHull_subset_iff (ht : AbsConvex 𝕜 t) : absConvexHull 𝕜 s ⊆ t ↔ s ⊆ t :=\n  (show (absConvexHull 𝕜).IsClosed t from ht).closure_le_iff\n\n"}
{"name":"absConvexHull_mono","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : SeminormedRing 𝕜\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul Real E\ninst✝ : AddCommMonoid E\ns t : Set E\nhst : HasSubset.Subset s t\n⊢ HasSubset.Subset ((absConvexHull 𝕜) s) ((absConvexHull 𝕜) t)","decl":"@[mono, gcongr]\ntheorem absConvexHull_mono (hst : s ⊆ t) : absConvexHull 𝕜 s ⊆ absConvexHull 𝕜 t :=\n  (absConvexHull 𝕜).monotone hst\n\n"}
{"name":"absConvexHull_eq_self","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : SeminormedRing 𝕜\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul Real E\ninst✝ : AddCommMonoid E\ns : Set E\n⊢ Iff (Eq ((absConvexHull 𝕜) s) s) (AbsConvex 𝕜 s)","decl":"lemma absConvexHull_eq_self : absConvexHull 𝕜 s = s ↔ AbsConvex 𝕜 s :=\n  (absConvexHull 𝕜).isClosed_iff.symm\n\n"}
{"name":"AbsConvex.absConvexHull_eq","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : SeminormedRing 𝕜\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul Real E\ninst✝ : AddCommMonoid E\ns : Set E\na✝ : AbsConvex 𝕜 s\n⊢ Eq ((absConvexHull 𝕜) s) s","decl":"alias ⟨_, AbsConvex.absConvexHull_eq⟩ := absConvexHull_eq_self\n\n"}
{"name":"absConvexHull_univ","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : SeminormedRing 𝕜\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul Real E\ninst✝ : AddCommMonoid E\n⊢ Eq ((absConvexHull 𝕜) Set.univ) Set.univ","decl":"@[simp]\ntheorem absConvexHull_univ : absConvexHull 𝕜 (univ : Set E) = univ :=\n  ClosureOperator.closure_top (absConvexHull 𝕜)\n\n"}
{"name":"absConvexHull_empty","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : SeminormedRing 𝕜\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul Real E\ninst✝ : AddCommMonoid E\n⊢ Eq ((absConvexHull 𝕜) EmptyCollection.emptyCollection) EmptyCollection.emptyCollection","decl":"@[simp]\ntheorem absConvexHull_empty : absConvexHull 𝕜 (∅ : Set E) = ∅ :=\n  AbsConvex.empty.absConvexHull_eq\n\n"}
{"name":"absConvexHull_eq_empty","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : SeminormedRing 𝕜\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul Real E\ninst✝ : AddCommMonoid E\ns : Set E\n⊢ Iff (Eq ((absConvexHull 𝕜) s) EmptyCollection.emptyCollection) (Eq s EmptyCollection.emptyCollection)","decl":"@[simp]\ntheorem absConvexHull_eq_empty : absConvexHull 𝕜 s = ∅ ↔ s = ∅ := by\n  constructor\n  · intro h\n    rw [← Set.subset_empty_iff, ← h]\n    exact subset_absConvexHull\n  · rintro rfl\n    exact absConvexHull_empty\n\n"}
{"name":"absConvexHull_nonempty","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : SeminormedRing 𝕜\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul Real E\ninst✝ : AddCommMonoid E\ns : Set E\n⊢ Iff ((absConvexHull 𝕜) s).Nonempty s.Nonempty","decl":"@[simp]\ntheorem absConvexHull_nonempty : (absConvexHull 𝕜 s).Nonempty ↔ s.Nonempty := by\n  rw [nonempty_iff_ne_empty, nonempty_iff_ne_empty, Ne, Ne]\n  exact not_congr absConvexHull_eq_empty\n\n"}
{"name":"Set.Nonempty.absConvexHull","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : SeminormedRing 𝕜\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul Real E\ninst✝ : AddCommMonoid E\ns : Set E\na✝ : s.Nonempty\n⊢ ((absConvexHull 𝕜) s).Nonempty","decl":"protected alias ⟨_, Set.Nonempty.absConvexHull⟩ := absConvexHull_nonempty\n\n"}
{"name":"absConvex_closed_sInter","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁴ : SeminormedRing 𝕜\ninst✝³ : SMul 𝕜 E\ninst✝² : SMul Real E\ninst✝¹ : AddCommMonoid E\ninst✝ : TopologicalSpace E\nS : Set (Set E)\nh : ∀ (s : Set E), Membership.mem S s → And (AbsConvex 𝕜 s) (IsClosed s)\n⊢ And (AbsConvex 𝕜 S.sInter) (IsClosed S.sInter)","decl":"theorem absConvex_closed_sInter {S : Set (Set E)} (h : ∀ s ∈ S, AbsConvex 𝕜 s ∧ IsClosed s) :\n    AbsConvex 𝕜 (⋂₀ S) ∧ IsClosed (⋂₀ S) :=\n  ⟨AbsConvex.sInter (fun s hs => (h s hs).1), isClosed_sInter fun _ hs => (h _ hs).2⟩\n\n"}
{"name":"closedAbsConvexHull_isClosed","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁴ : SeminormedRing 𝕜\ninst✝³ : SMul 𝕜 E\ninst✝² : SMul Real E\ninst✝¹ : AddCommMonoid E\ninst✝ : TopologicalSpace E\ns : Set E\n⊢ Eq ((closedAbsConvexHull 𝕜).IsClosed s) (And (AbsConvex 𝕜 s) (IsClosed s))","decl":"/-- The absolutely convex closed hull of a set `s` is the minimal absolutely convex closed set that\nincludes `s`. -/\n@[simps! isClosed]\ndef closedAbsConvexHull : ClosureOperator (Set E) :=\n  .ofCompletePred (fun s => AbsConvex 𝕜 s ∧ IsClosed s) fun _ ↦ absConvex_closed_sInter\n\n"}
{"name":"absConvex_convexClosedHull","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁴ : SeminormedRing 𝕜\ninst✝³ : SMul 𝕜 E\ninst✝² : SMul Real E\ninst✝¹ : AddCommMonoid E\ninst✝ : TopologicalSpace E\ns : Set E\n⊢ AbsConvex 𝕜 ((closedAbsConvexHull 𝕜) s)","decl":"theorem absConvex_convexClosedHull {s : Set E} :\n    AbsConvex 𝕜 (closedAbsConvexHull 𝕜 s) := ((closedAbsConvexHull 𝕜).isClosed_closure s).1\n\n"}
{"name":"isClosed_closedAbsConvexHull","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁴ : SeminormedRing 𝕜\ninst✝³ : SMul 𝕜 E\ninst✝² : SMul Real E\ninst✝¹ : AddCommMonoid E\ninst✝ : TopologicalSpace E\ns : Set E\n⊢ IsClosed ((closedAbsConvexHull 𝕜) s)","decl":"theorem isClosed_closedAbsConvexHull {s : Set E} :\n    IsClosed (closedAbsConvexHull 𝕜 s) := ((closedAbsConvexHull 𝕜).isClosed_closure s).2\n\n"}
{"name":"subset_closedAbsConvexHull","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁴ : SeminormedRing 𝕜\ninst✝³ : SMul 𝕜 E\ninst✝² : SMul Real E\ninst✝¹ : AddCommMonoid E\ninst✝ : TopologicalSpace E\ns : Set E\n⊢ HasSubset.Subset s ((closedAbsConvexHull 𝕜) s)","decl":"theorem subset_closedAbsConvexHull {s : Set E} : s ⊆ closedAbsConvexHull 𝕜 s :=\n  (closedAbsConvexHull 𝕜).le_closure s\n\n"}
{"name":"closure_subset_closedAbsConvexHull","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁴ : SeminormedRing 𝕜\ninst✝³ : SMul 𝕜 E\ninst✝² : SMul Real E\ninst✝¹ : AddCommMonoid E\ninst✝ : TopologicalSpace E\ns : Set E\n⊢ HasSubset.Subset (closure s) ((closedAbsConvexHull 𝕜) s)","decl":"theorem closure_subset_closedAbsConvexHull {s : Set E} : closure s ⊆ closedAbsConvexHull 𝕜 s :=\n  closure_minimal subset_closedAbsConvexHull isClosed_closedAbsConvexHull\n\n"}
{"name":"closedAbsConvexHull_min","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁴ : SeminormedRing 𝕜\ninst✝³ : SMul 𝕜 E\ninst✝² : SMul Real E\ninst✝¹ : AddCommMonoid E\ninst✝ : TopologicalSpace E\ns t : Set E\nhst : HasSubset.Subset s t\nh_conv : AbsConvex 𝕜 t\nh_closed : IsClosed t\n⊢ HasSubset.Subset ((closedAbsConvexHull 𝕜) s) t","decl":"theorem closedAbsConvexHull_min {s t : Set E} (hst : s ⊆ t) (h_conv : AbsConvex 𝕜 t)\n    (h_closed : IsClosed t) : closedAbsConvexHull 𝕜 s ⊆ t :=\n  (closedAbsConvexHull 𝕜).closure_min hst ⟨h_conv, h_closed⟩\n\n"}
{"name":"absConvexHull_subset_closedAbsConvexHull","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁴ : SeminormedRing 𝕜\ninst✝³ : SMul 𝕜 E\ninst✝² : SMul Real E\ninst✝¹ : AddCommMonoid E\ninst✝ : TopologicalSpace E\ns : Set E\n⊢ HasSubset.Subset ((absConvexHull 𝕜) s) ((closedAbsConvexHull 𝕜) s)","decl":"theorem absConvexHull_subset_closedAbsConvexHull {s : Set E} :\n    (absConvexHull 𝕜) s ⊆ (closedAbsConvexHull 𝕜) s :=\n  absConvexHull_min subset_closedAbsConvexHull absConvex_convexClosedHull\n\n"}
{"name":"closedAbsConvexHull_closure_eq_closedAbsConvexHull","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁴ : SeminormedRing 𝕜\ninst✝³ : SMul 𝕜 E\ninst✝² : SMul Real E\ninst✝¹ : AddCommMonoid E\ninst✝ : TopologicalSpace E\ns : Set E\n⊢ Eq ((closedAbsConvexHull 𝕜) (closure s)) ((closedAbsConvexHull 𝕜) s)","decl":"@[simp]\ntheorem closedAbsConvexHull_closure_eq_closedAbsConvexHull {s : Set E} :\n    closedAbsConvexHull 𝕜 (closure s) = closedAbsConvexHull 𝕜 s :=\n  subset_antisymm (by simpa using ((closedAbsConvexHull 𝕜).monotone\n      (closure_subset_closedAbsConvexHull (𝕜 := 𝕜) (E := E))))\n    ((closedAbsConvexHull 𝕜).monotone subset_closure)\n\n"}
{"name":"AbsConvex.closure","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁷ : NormedField 𝕜\ninst✝⁶ : AddCommGroup E\ninst✝⁵ : Module Real E\ninst✝⁴ : Module 𝕜 E\ninst✝³ : TopologicalSpace E\ninst✝² : TopologicalAddGroup E\ninst✝¹ : ContinuousSMul Real E\ninst✝ : ContinuousSMul 𝕜 E\ns : Set E\nhs : AbsConvex 𝕜 s\n⊢ AbsConvex 𝕜 (closure s)","decl":"theorem AbsConvex.closure {s : Set E} (hs : AbsConvex 𝕜 s) : AbsConvex 𝕜 (closure s) :=\n  ⟨Balanced.closure hs.1, Convex.closure hs.2⟩\n\n"}
{"name":"closedAbsConvexHull_eq_closure_absConvexHull","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁷ : NormedField 𝕜\ninst✝⁶ : AddCommGroup E\ninst✝⁵ : Module Real E\ninst✝⁴ : Module 𝕜 E\ninst✝³ : TopologicalSpace E\ninst✝² : TopologicalAddGroup E\ninst✝¹ : ContinuousSMul Real E\ninst✝ : ContinuousSMul 𝕜 E\ns : Set E\n⊢ Eq ((closedAbsConvexHull 𝕜) s) (closure ((absConvexHull 𝕜) s))","decl":"theorem closedAbsConvexHull_eq_closure_absConvexHull {s : Set E} :\n    closedAbsConvexHull 𝕜 s = closure (absConvexHull 𝕜 s) := subset_antisymm\n  (closedAbsConvexHull_min (subset_trans (subset_absConvexHull) subset_closure)\n    (AbsConvex.closure absConvex_absConvexHull) isClosed_closure)\n  (closure_minimal absConvexHull_subset_closedAbsConvexHull isClosed_closedAbsConvexHull)\n\n"}
{"name":"nhds_hasBasis_absConvex","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁷ : NontriviallyNormedField 𝕜\ninst✝⁶ : AddCommGroup E\ninst✝⁵ : Module 𝕜 E\ninst✝⁴ : Module Real E\ninst✝³ : SMulCommClass Real 𝕜 E\ninst✝² : TopologicalSpace E\ninst✝¹ : LocallyConvexSpace Real E\ninst✝ : ContinuousSMul 𝕜 E\n⊢ (nhds 0).HasBasis (fun s => And (Membership.mem (nhds 0) s) (AbsConvex 𝕜 s)) id","decl":"theorem nhds_hasBasis_absConvex :\n    (𝓝 (0 : E)).HasBasis (fun s : Set E => s ∈ 𝓝 (0 : E) ∧ AbsConvex 𝕜 s) id := by\n  refine\n    (LocallyConvexSpace.convex_basis_zero ℝ E).to_hasBasis (fun s hs => ?_) fun s hs =>\n      ⟨s, ⟨hs.1, hs.2.2⟩, rfl.subset⟩\n  refine ⟨convexHull ℝ (balancedCore 𝕜 s), ?_, convexHull_min (balancedCore_subset s) hs.2⟩\n  refine ⟨Filter.mem_of_superset (balancedCore_mem_nhds_zero hs.1) (subset_convexHull ℝ _), ?_⟩\n  refine ⟨(balancedCore_balanced s).convexHull, ?_⟩\n  exact convex_convexHull ℝ (balancedCore 𝕜 s)\n\n"}
{"name":"nhds_hasBasis_absConvex_open","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁹ : NontriviallyNormedField 𝕜\ninst✝⁸ : AddCommGroup E\ninst✝⁷ : Module 𝕜 E\ninst✝⁶ : Module Real E\ninst✝⁵ : SMulCommClass Real 𝕜 E\ninst✝⁴ : TopologicalSpace E\ninst✝³ : LocallyConvexSpace Real E\ninst✝² : ContinuousSMul 𝕜 E\ninst✝¹ : ContinuousSMul Real E\ninst✝ : TopologicalAddGroup E\n⊢ (nhds 0).HasBasis (fun s => And (Membership.mem s 0) (And (IsOpen s) (AbsConvex 𝕜 s))) id","decl":"theorem nhds_hasBasis_absConvex_open :\n    (𝓝 (0 : E)).HasBasis (fun s => (0 : E) ∈ s ∧ IsOpen s ∧ AbsConvex 𝕜 s) id := by\n  refine (nhds_hasBasis_absConvex 𝕜 E).to_hasBasis ?_ ?_\n  · rintro s ⟨hs_nhds, hs_balanced, hs_convex⟩\n    refine ⟨interior s, ?_, interior_subset⟩\n    exact\n      ⟨mem_interior_iff_mem_nhds.mpr hs_nhds, isOpen_interior,\n        hs_balanced.interior (mem_interior_iff_mem_nhds.mpr hs_nhds), hs_convex.interior⟩\n  rintro s ⟨hs_zero, hs_open, hs_balanced, hs_convex⟩\n  exact ⟨s, ⟨hs_open.mem_nhds hs_zero, hs_balanced, hs_convex⟩, rfl.subset⟩\n\n"}
{"name":"absConvexHull_add_subset","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : NontriviallyNormedField 𝕜\ninst✝² : AddCommGroup E\ninst✝¹ : Module Real E\ninst✝ : Module 𝕜 E\ns t : Set E\n⊢ HasSubset.Subset ((absConvexHull 𝕜) (HAdd.hAdd s t)) (HAdd.hAdd ((absConvexHull 𝕜) s) ((absConvexHull 𝕜) t))","decl":"theorem absConvexHull_add_subset {s t : Set E} :\n    absConvexHull 𝕜 (s + t) ⊆ absConvexHull 𝕜 s + absConvexHull 𝕜 t :=\n  absConvexHull_min (add_subset_add subset_absConvexHull subset_absConvexHull)\n    ⟨Balanced.add balanced_absConvexHull balanced_absConvexHull,\n      Convex.add convex_absConvexHull convex_absConvexHull⟩\n\n"}
{"name":"absConvexHull_eq_convexHull_balancedHull","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁴ : NontriviallyNormedField 𝕜\ninst✝³ : AddCommGroup E\ninst✝² : Module Real E\ninst✝¹ : Module 𝕜 E\ninst✝ : SMulCommClass Real 𝕜 E\ns : Set E\n⊢ Eq ((absConvexHull 𝕜) s) ((convexHull Real) (balancedHull 𝕜 s))","decl":"theorem absConvexHull_eq_convexHull_balancedHull [SMulCommClass ℝ 𝕜 E] {s : Set E} :\n    absConvexHull 𝕜 s = convexHull ℝ (balancedHull 𝕜 s) := le_antisymm\n  (absConvexHull_min\n    ((subset_convexHull ℝ s).trans (convexHull_mono (subset_balancedHull 𝕜)))\n      ⟨Balanced.convexHull (balancedHull.balanced s), convex_convexHull ..⟩)\n  (convexHull_min (balanced_absConvexHull.balancedHull_subset_of_subset subset_absConvexHull)\n      convex_absConvexHull)\n\n"}
{"name":"balancedHull_convexHull_subseteq_absConvexHull","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : NontriviallyNormedField 𝕜\ninst✝² : AddCommGroup E\ninst✝¹ : Module Real E\ninst✝ : Module 𝕜 E\ns : Set E\n⊢ HasSubset.Subset (balancedHull 𝕜 ((convexHull Real) s)) ((absConvexHull 𝕜) s)","decl":"/-- In general, equality doesn't hold here - e.g. consider `s := {(-1, 1), (1, 1)}` in `ℝ²`. -/\ntheorem balancedHull_convexHull_subseteq_absConvexHull {s : Set E} :\n    balancedHull 𝕜 (convexHull ℝ s) ⊆ absConvexHull 𝕜 s :=\n  balanced_absConvexHull.balancedHull_subset_of_subset\n    (convexHull_min subset_absConvexHull convex_absConvexHull)\n\n"}
{"name":"balancedHull_subset_convexHull_union_neg","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"E : Type u_2\ninst✝¹ : AddCommGroup E\ninst✝ : Module Real E\ns : Set E\n⊢ HasSubset.Subset (balancedHull Real s) ((convexHull Real) (Union.union s (Neg.neg s)))","decl":"lemma balancedHull_subset_convexHull_union_neg {s : Set E} :\n    balancedHull ℝ s ⊆ convexHull ℝ (s ∪ -s) := by\n  intro a ha\n  obtain ⟨r, hr, y, hy, rfl⟩ := mem_balancedHull_iff.1 ha\n  apply segment_subset_convexHull (mem_union_left (-s) hy) (mem_union_right _ (neg_mem_neg.mpr hy))\n  have : 0 ≤ 1 + r := neg_le_iff_add_nonneg'.mp (neg_le_of_abs_le hr)\n  have : 0 ≤ 1 - r := sub_nonneg.2 (le_of_abs_le hr)\n  refine ⟨(1 + r)/2, (1 - r)/2, by positivity, by positivity, by ring, ?_⟩\n  rw [smul_neg, ← sub_eq_add_neg, ← sub_smul]\n  apply congrFun (congrArg HSMul.hSMul _) y\n  ring_nf\n\n"}
{"name":"convexHull_union_neg_eq_absConvexHull","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"E : Type u_2\ninst✝¹ : AddCommGroup E\ninst✝ : Module Real E\ns : Set E\n⊢ Eq ((convexHull Real) (Union.union s (Neg.neg s))) ((absConvexHull Real) s)","decl":"@[simp]\ntheorem convexHull_union_neg_eq_absConvexHull {s : Set E} :\n    convexHull ℝ (s ∪ -s) = absConvexHull ℝ s := by\n  rw [absConvexHull_eq_convexHull_balancedHull]\n  exact le_antisymm (convexHull_mono (union_subset (subset_balancedHull ℝ)\n    (fun _ _ => by rw [mem_balancedHull_iff]; use -1; aesop)))\n    (by\n      rw [← Convex.convexHull_eq (convex_convexHull ℝ (s ∪ -s))]\n      exact convexHull_mono balancedHull_subset_convexHull_union_neg)\n\n"}
{"name":"totallyBounded_absConvexHull","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"E : Type u_2\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module Real E\ns : Set E\ninst✝² : UniformSpace E\ninst✝¹ : UniformAddGroup E\nlcs : LocallyConvexSpace Real E\ninst✝ : ContinuousSMul Real E\nhs : TotallyBounded s\n⊢ TotallyBounded ((absConvexHull Real) s)","decl":"theorem totallyBounded_absConvexHull (hs : TotallyBounded s) :\n    TotallyBounded (absConvexHull ℝ s) := by\n  rw [← convexHull_union_neg_eq_absConvexHull]\n  apply totallyBounded_convexHull\n  rw [totallyBounded_union]\n  exact ⟨hs, totallyBounded_neg hs⟩\n\n"}
{"name":"AbsConvexOpenSets.coe_zero_mem","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁵ : TopologicalSpace E\ninst✝⁴ : AddCommMonoid E\ninst✝³ : Zero E\ninst✝² : SeminormedRing 𝕜\ninst✝¹ : SMul 𝕜 E\ninst✝ : SMul Real E\ns : AbsConvexOpenSets 𝕜 E\n⊢ Membership.mem (↑s) 0","decl":"theorem coe_zero_mem (s : AbsConvexOpenSets 𝕜 E) : (0 : E) ∈ (s : Set E) :=\n  s.2.1\n\n"}
{"name":"AbsConvexOpenSets.coe_isOpen","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁵ : TopologicalSpace E\ninst✝⁴ : AddCommMonoid E\ninst✝³ : Zero E\ninst✝² : SeminormedRing 𝕜\ninst✝¹ : SMul 𝕜 E\ninst✝ : SMul Real E\ns : AbsConvexOpenSets 𝕜 E\n⊢ IsOpen ↑s","decl":"theorem coe_isOpen (s : AbsConvexOpenSets 𝕜 E) : IsOpen (s : Set E) :=\n  s.2.2.1\n\n"}
{"name":"AbsConvexOpenSets.coe_nhds","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁵ : TopologicalSpace E\ninst✝⁴ : AddCommMonoid E\ninst✝³ : Zero E\ninst✝² : SeminormedRing 𝕜\ninst✝¹ : SMul 𝕜 E\ninst✝ : SMul Real E\ns : AbsConvexOpenSets 𝕜 E\n⊢ Membership.mem (nhds 0) ↑s","decl":"theorem coe_nhds (s : AbsConvexOpenSets 𝕜 E) : (s : Set E) ∈ 𝓝 (0 : E) :=\n  s.coe_isOpen.mem_nhds s.coe_zero_mem\n\n"}
{"name":"AbsConvexOpenSets.coe_balanced","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁵ : TopologicalSpace E\ninst✝⁴ : AddCommMonoid E\ninst✝³ : Zero E\ninst✝² : SeminormedRing 𝕜\ninst✝¹ : SMul 𝕜 E\ninst✝ : SMul Real E\ns : AbsConvexOpenSets 𝕜 E\n⊢ Balanced 𝕜 ↑s","decl":"theorem coe_balanced (s : AbsConvexOpenSets 𝕜 E) : Balanced 𝕜 (s : Set E) :=\n  s.2.2.2.1\n\n"}
{"name":"AbsConvexOpenSets.coe_convex","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁵ : TopologicalSpace E\ninst✝⁴ : AddCommMonoid E\ninst✝³ : Zero E\ninst✝² : SeminormedRing 𝕜\ninst✝¹ : SMul 𝕜 E\ninst✝ : SMul Real E\ns : AbsConvexOpenSets 𝕜 E\n⊢ Convex Real ↑s","decl":"theorem coe_convex (s : AbsConvexOpenSets 𝕜 E) : Convex ℝ (s : Set E) :=\n  s.2.2.2.2\n\n"}
{"name":"AbsConvexOpenSets.instNonempty","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁵ : TopologicalSpace E\ninst✝⁴ : AddCommMonoid E\ninst✝³ : Zero E\ninst✝² : SeminormedRing 𝕜\ninst✝¹ : SMul 𝕜 E\ninst✝ : SMul Real E\n⊢ Nonempty (AbsConvexOpenSets 𝕜 E)","decl":"instance AbsConvexOpenSets.instNonempty : Nonempty (AbsConvexOpenSets 𝕜 E) := by\n  rw [← exists_true_iff_nonempty]\n  dsimp only [AbsConvexOpenSets]\n  rw [Subtype.exists]\n  exact ⟨Set.univ, ⟨mem_univ 0, isOpen_univ, balanced_univ, convex_univ⟩, trivial⟩\n\n"}
{"name":"gaugeSeminormFamily_ball","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁶ : RCLike 𝕜\ninst✝⁵ : AddCommGroup E\ninst✝⁴ : TopologicalSpace E\ninst✝³ : Module 𝕜 E\ninst✝² : Module Real E\ninst✝¹ : IsScalarTower Real 𝕜 E\ninst✝ : ContinuousSMul Real E\ns : AbsConvexOpenSets 𝕜 E\n⊢ Eq ((gaugeSeminormFamily 𝕜 E s).ball 0 1) ↑s","decl":"theorem gaugeSeminormFamily_ball (s : AbsConvexOpenSets 𝕜 E) :\n    (gaugeSeminormFamily 𝕜 E s).ball 0 1 = (s : Set E) := by\n  dsimp only [gaugeSeminormFamily]\n  rw [Seminorm.ball_zero_eq]\n  simp_rw [gaugeSeminorm_toFun]\n  exact gauge_lt_one_eq_self_of_isOpen s.coe_convex s.coe_zero_mem s.coe_isOpen\n\n"}
{"name":"with_gaugeSeminormFamily","module":"Mathlib.Analysis.LocallyConvex.AbsConvex","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝¹⁰ : RCLike 𝕜\ninst✝⁹ : AddCommGroup E\ninst✝⁸ : TopologicalSpace E\ninst✝⁷ : Module 𝕜 E\ninst✝⁶ : Module Real E\ninst✝⁵ : IsScalarTower Real 𝕜 E\ninst✝⁴ : ContinuousSMul Real E\ninst✝³ : TopologicalAddGroup E\ninst✝² : ContinuousSMul 𝕜 E\ninst✝¹ : SMulCommClass Real 𝕜 E\ninst✝ : LocallyConvexSpace Real E\n⊢ WithSeminorms (gaugeSeminormFamily 𝕜 E)","decl":"/-- The topology of a locally convex space is induced by the gauge seminorm family. -/\ntheorem with_gaugeSeminormFamily : WithSeminorms (gaugeSeminormFamily 𝕜 E) := by\n  refine SeminormFamily.withSeminorms_of_hasBasis _ ?_\n  refine (nhds_hasBasis_absConvex_open 𝕜 E).to_hasBasis (fun s hs => ?_) fun s hs => ?_\n  · refine ⟨s, ⟨?_, rfl.subset⟩⟩\n    convert (gaugeSeminormFamily _ _).basisSets_singleton_mem ⟨s, hs⟩ one_pos\n    rw [gaugeSeminormFamily_ball, Subtype.coe_mk]\n  refine ⟨s, ⟨?_, rfl.subset⟩⟩\n  rw [SeminormFamily.basisSets_iff] at hs\n  rcases hs with ⟨t, r, hr, rfl⟩\n  rw [Seminorm.ball_finset_sup_eq_iInter _ _ _ hr]\n  -- We have to show that the intersection contains zero, is open, balanced, and convex\n  refine\n    ⟨mem_iInter₂.mpr fun _ _ => by simp [Seminorm.mem_ball_zero, hr],\n      isOpen_biInter_finset fun S _ => ?_,\n      balanced_iInter₂ fun _ _ => Seminorm.balanced_ball_zero _ _,\n      convex_iInter₂ fun _ _ => Seminorm.convex_ball ..⟩\n  -- The only nontrivial part is to show that the ball is open\n  have hr' : r = ‖(r : 𝕜)‖ * 1 := by simp [abs_of_pos hr]\n  have hr'' : (r : 𝕜) ≠ 0 := by simp [hr.ne']\n  rw [hr', ← Seminorm.smul_ball_zero hr'', gaugeSeminormFamily_ball]\n  exact S.coe_isOpen.smul₀ hr''\n"}
