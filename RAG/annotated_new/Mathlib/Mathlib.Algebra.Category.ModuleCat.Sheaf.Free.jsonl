{"name":"SheafOfModules.freeHomEquiv_comp_apply","module":"Mathlib.Algebra.Category.ModuleCat.Sheaf.Free","initialProofState":"C : Type u'\ninst✝³ : CategoryTheory.Category.{v', u'} C\nJ : CategoryTheory.GrothendieckTopology C\nR : CategoryTheory.Sheaf J RingCat\ninst✝² : CategoryTheory.HasWeakSheafify J AddCommGrp\ninst✝¹ : J.WEqualsLocallyBijective AddCommGrp\ninst✝ : J.HasSheafCompose (CategoryTheory.forget₂ RingCat AddCommGrp)\nM N : SheafOfModules R\nI : Type u\nf : Quiver.Hom (SheafOfModules.free I) M\np : Quiver.Hom M N\ni : I\n⊢ Eq (N.freeHomEquiv (CategoryTheory.CategoryStruct.comp f p) i) (SheafOfModules.sectionsMap p (M.freeHomEquiv f i))","decl":"lemma freeHomEquiv_comp_apply {M N : SheafOfModules.{u} R} {I : Type u}\n    (f : free I ⟶ M) (p : M ⟶ N) (i : I) :\n    N.freeHomEquiv (f ≫ p) i = sectionsMap p (M.freeHomEquiv f i) := rfl\n\n"}
{"name":"SheafOfModules.freeHomEquiv_symm_comp","module":"Mathlib.Algebra.Category.ModuleCat.Sheaf.Free","initialProofState":"C : Type u'\ninst✝³ : CategoryTheory.Category.{v', u'} C\nJ : CategoryTheory.GrothendieckTopology C\nR : CategoryTheory.Sheaf J RingCat\ninst✝² : CategoryTheory.HasWeakSheafify J AddCommGrp\ninst✝¹ : J.WEqualsLocallyBijective AddCommGrp\ninst✝ : J.HasSheafCompose (CategoryTheory.forget₂ RingCat AddCommGrp)\nM N : SheafOfModules R\nI : Type u\ns : I → M.sections\np : Quiver.Hom M N\n⊢ Eq (CategoryTheory.CategoryStruct.comp (M.freeHomEquiv.symm s) p) (N.freeHomEquiv.symm fun i => SheafOfModules.sectionsMap p (s i))","decl":"lemma freeHomEquiv_symm_comp {M N : SheafOfModules.{u} R} {I : Type u} (s : I → M.sections)\n    (p : M ⟶ N) :\n    M.freeHomEquiv.symm s ≫ p = N.freeHomEquiv.symm (fun i ↦ sectionsMap p (s i)) :=\n  N.freeHomEquiv.injective (by ext; simp [freeHomEquiv_comp_apply])\n\n"}
{"name":"SheafOfModules.freeHomEquiv_freeMap","module":"Mathlib.Algebra.Category.ModuleCat.Sheaf.Free","initialProofState":"C : Type u'\ninst✝³ : CategoryTheory.Category.{v', u'} C\nJ✝ : CategoryTheory.GrothendieckTopology C\nR : CategoryTheory.Sheaf J✝ RingCat\ninst✝² : CategoryTheory.HasWeakSheafify J✝ AddCommGrp\ninst✝¹ : J✝.WEqualsLocallyBijective AddCommGrp\ninst✝ : J✝.HasSheafCompose (CategoryTheory.forget₂ RingCat AddCommGrp)\nI J : Type u\nf : I → J\n⊢ Eq ((SheafOfModules.free J).freeHomEquiv (SheafOfModules.freeMap f)) (Function.comp SheafOfModules.freeSection f)","decl":"@[simp]\nlemma freeHomEquiv_freeMap :\n    (freeHomEquiv _ (freeMap (R := R) f)) = freeSection.comp f :=\n  (freeHomEquiv _).symm.injective (by simp; rfl)\n\n"}
{"name":"SheafOfModules.sectionMap_freeMap_freeSection","module":"Mathlib.Algebra.Category.ModuleCat.Sheaf.Free","initialProofState":"C : Type u'\ninst✝³ : CategoryTheory.Category.{v', u'} C\nJ✝ : CategoryTheory.GrothendieckTopology C\nR : CategoryTheory.Sheaf J✝ RingCat\ninst✝² : CategoryTheory.HasWeakSheafify J✝ AddCommGrp\ninst✝¹ : J✝.WEqualsLocallyBijective AddCommGrp\ninst✝ : J✝.HasSheafCompose (CategoryTheory.forget₂ RingCat AddCommGrp)\nI J : Type u\nf : I → J\ni : I\n⊢ Eq (SheafOfModules.sectionsMap (SheafOfModules.freeMap f) (SheafOfModules.freeSection i)) (SheafOfModules.freeSection (f i))","decl":"@[simp]\nlemma sectionMap_freeMap_freeSection (i : I) :\n    sectionsMap (freeMap (R := R) f) (freeSection i) = freeSection (f i) := by\n  simp [← freeHomEquiv_comp_apply]\n\n"}
