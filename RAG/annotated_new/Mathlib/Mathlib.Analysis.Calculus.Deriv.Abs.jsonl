{"name":"contDiffAt_abs","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"n : ENat\nx : Real\nhx : Ne x 0\n⊢ ContDiffAt Real (↑n) (fun x => abs x) x","decl":"theorem contDiffAt_abs {x : ℝ} (hx : x ≠ 0) : ContDiffAt ℝ n (|·|) x := contDiffAt_norm ℝ hx\n\n"}
{"name":"ContDiffAt.abs","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nn : ENat\nf : E → Real\nx : E\nhf : ContDiffAt Real (↑n) f x\nh₀ : Ne (f x) 0\n⊢ ContDiffAt Real (↑n) (fun x => abs (f x)) x","decl":"theorem ContDiffAt.abs (hf : ContDiffAt ℝ n f x) (h₀ : f x ≠ 0) :\n    ContDiffAt ℝ n (fun x ↦ |f x|) x := hf.norm ℝ h₀\n\n"}
{"name":"contDiffWithinAt_abs","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"n : ENat\nx : Real\nhx : Ne x 0\ns : Set Real\n⊢ ContDiffWithinAt Real (↑n) (fun x => abs x) s x","decl":"theorem contDiffWithinAt_abs {x : ℝ} (hx : x ≠ 0) (s : Set ℝ) :\n    ContDiffWithinAt ℝ n (|·|) s x := (contDiffAt_abs hx).contDiffWithinAt\n\n"}
{"name":"ContDiffWithinAt.abs","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nn : ENat\nf : E → Real\ns : Set E\nx : E\nhf : ContDiffWithinAt Real (↑n) f s x\nh₀ : Ne (f x) 0\n⊢ ContDiffWithinAt Real (↑n) (fun y => abs (f y)) s x","decl":"theorem ContDiffWithinAt.abs (hf : ContDiffWithinAt ℝ n f s x) (h₀ : f x ≠ 0) :\n    ContDiffWithinAt ℝ n (fun y ↦ |f y|) s x :=\n  (contDiffAt_abs h₀).comp_contDiffWithinAt x hf\n\n"}
{"name":"contDiffOn_abs","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"n : ENat\ns : Set Real\nhs : ∀ (x : Real), Membership.mem s x → Ne x 0\n⊢ ContDiffOn Real (↑n) (fun x => abs x) s","decl":"theorem contDiffOn_abs {s : Set ℝ} (hs : ∀ x ∈ s, x ≠ 0) :\n    ContDiffOn ℝ n (|·|) s := fun x hx ↦ contDiffWithinAt_abs (hs x hx) s\n\n"}
{"name":"ContDiffOn.abs","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nn : ENat\nf : E → Real\ns : Set E\nhf : ContDiffOn Real (↑n) f s\nh₀ : ∀ (x : E), Membership.mem s x → Ne (f x) 0\n⊢ ContDiffOn Real (↑n) (fun y => abs (f y)) s","decl":"theorem ContDiffOn.abs (hf : ContDiffOn ℝ n f s) (h₀ : ∀ x ∈ s, f x ≠ 0) :\n    ContDiffOn ℝ n (fun y ↦ |f y|) s := fun x hx ↦ (hf x hx).abs (h₀ x hx)\n\n"}
{"name":"ContDiff.abs","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nn : ENat\nf : E → Real\nhf : ContDiff Real (↑n) f\nh₀ : ∀ (x : E), Ne (f x) 0\n⊢ ContDiff Real ↑n fun y => abs (f y)","decl":"theorem ContDiff.abs (hf : ContDiff ℝ n f) (h₀ : ∀ x, f x ≠ 0) : ContDiff ℝ n fun y ↦ |f y| :=\n  contDiff_iff_contDiffAt.2 fun x ↦ hf.contDiffAt.abs (h₀ x)\n\n"}
{"name":"hasStrictDerivAt_abs_neg","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"x : Real\nhx : LT.lt x 0\n⊢ HasStrictDerivAt (fun x => abs x) (-1) x","decl":"theorem hasStrictDerivAt_abs_neg {x : ℝ} (hx : x < 0) :\n    HasStrictDerivAt (|·|) (-1) x :=\n  (hasStrictDerivAt_neg x).congr_of_eventuallyEq <|\n    EqOn.eventuallyEq_of_mem (fun _ hy ↦ (abs_of_neg (mem_Iio.1 hy)).symm) (Iio_mem_nhds hx)\n\n"}
{"name":"hasDerivAt_abs_neg","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"x : Real\nhx : LT.lt x 0\n⊢ HasDerivAt (fun x => abs x) (-1) x","decl":"theorem hasDerivAt_abs_neg {x : ℝ} (hx : x < 0) :\n    HasDerivAt (|·|) (-1) x := (hasStrictDerivAt_abs_neg hx).hasDerivAt\n\n"}
{"name":"hasStrictDerivAt_abs_pos","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"x : Real\nhx : LT.lt 0 x\n⊢ HasStrictDerivAt (fun x => abs x) 1 x","decl":"theorem hasStrictDerivAt_abs_pos {x : ℝ} (hx : 0 < x) :\n    HasStrictDerivAt (|·|) 1 x :=\n  (hasStrictDerivAt_id x).congr_of_eventuallyEq <|\n    EqOn.eventuallyEq_of_mem (fun _ hy ↦ (abs_of_pos (mem_Iio.1 hy)).symm) (Ioi_mem_nhds hx)\n\n"}
{"name":"hasDerivAt_abs_pos","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"x : Real\nhx : LT.lt 0 x\n⊢ HasDerivAt (fun x => abs x) 1 x","decl":"theorem hasDerivAt_abs_pos {x : ℝ} (hx : 0 < x) :\n    HasDerivAt (|·|) 1 x := (hasStrictDerivAt_abs_pos hx).hasDerivAt\n\n"}
{"name":"hasStrictDerivAt_abs","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"x : Real\nhx : Ne x 0\n⊢ HasStrictDerivAt (fun x => abs x) (↑(SignType.sign x)) x","decl":"theorem hasStrictDerivAt_abs {x : ℝ} (hx : x ≠ 0) :\n    HasStrictDerivAt (|·|) (SignType.sign x : ℝ) x := by\n  obtain hx | hx := hx.lt_or_lt\n  · simpa [hx] using hasStrictDerivAt_abs_neg hx\n  · simpa [hx] using hasStrictDerivAt_abs_pos hx\n\n"}
{"name":"hasDerivAt_abs","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"x : Real\nhx : Ne x 0\n⊢ HasDerivAt (fun x => abs x) (↑(SignType.sign x)) x","decl":"theorem hasDerivAt_abs {x : ℝ} (hx : x ≠ 0) :\n    HasDerivAt (|·|) (SignType.sign x : ℝ) x := (hasStrictDerivAt_abs hx).hasDerivAt\n\n"}
{"name":"HasStrictFDerivAt.abs_of_neg","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nf' : ContinuousLinearMap (RingHom.id Real) E Real\nx : E\nhf : HasStrictFDerivAt f f' x\nh₀ : LT.lt (f x) 0\n⊢ HasStrictFDerivAt (fun x => abs (f x)) (Neg.neg f') x","decl":"theorem HasStrictFDerivAt.abs_of_neg (hf : HasStrictFDerivAt f f' x)\n    (h₀ : f x < 0) : HasStrictFDerivAt (fun x ↦ |f x|) (-f') x := by\n  convert (hasStrictDerivAt_abs_neg h₀).hasStrictFDerivAt.comp x hf using 1\n  ext y\n  simp\n\n"}
{"name":"HasFDerivAt.abs_of_neg","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nf' : ContinuousLinearMap (RingHom.id Real) E Real\nx : E\nhf : HasFDerivAt f f' x\nh₀ : LT.lt (f x) 0\n⊢ HasFDerivAt (fun x => abs (f x)) (Neg.neg f') x","decl":"theorem HasFDerivAt.abs_of_neg (hf : HasFDerivAt f f' x)\n    (h₀ : f x < 0) : HasFDerivAt (fun x ↦ |f x|) (-f') x := by\n  convert (hasDerivAt_abs_neg h₀).hasFDerivAt.comp x hf using 1\n  ext y\n  simp\n\n"}
{"name":"HasStrictFDerivAt.abs_of_pos","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nf' : ContinuousLinearMap (RingHom.id Real) E Real\nx : E\nhf : HasStrictFDerivAt f f' x\nh₀ : LT.lt 0 (f x)\n⊢ HasStrictFDerivAt (fun x => abs (f x)) f' x","decl":"theorem HasStrictFDerivAt.abs_of_pos (hf : HasStrictFDerivAt f f' x)\n    (h₀ : 0 < f x) : HasStrictFDerivAt (fun x ↦ |f x|) f' x := by\n  convert (hasStrictDerivAt_abs_pos h₀).hasStrictFDerivAt.comp x hf using 1\n  ext y\n  simp\n\n"}
{"name":"HasFDerivAt.abs_of_pos","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nf' : ContinuousLinearMap (RingHom.id Real) E Real\nx : E\nhf : HasFDerivAt f f' x\nh₀ : LT.lt 0 (f x)\n⊢ HasFDerivAt (fun x => abs (f x)) f' x","decl":"theorem HasFDerivAt.abs_of_pos (hf : HasFDerivAt f f' x)\n    (h₀ : 0 < f x) : HasFDerivAt (fun x ↦ |f x|) f' x := by\n  convert (hasDerivAt_abs_pos h₀).hasFDerivAt.comp x hf using 1\n  ext y\n  simp\n\n"}
{"name":"HasStrictFDerivAt.abs","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nf' : ContinuousLinearMap (RingHom.id Real) E Real\nx : E\nhf : HasStrictFDerivAt f f' x\nh₀ : Ne (f x) 0\n⊢ HasStrictFDerivAt (fun x => abs (f x)) (HSMul.hSMul (↑(SignType.sign (f x))) f') x","decl":"theorem HasStrictFDerivAt.abs (hf : HasStrictFDerivAt f f' x)\n    (h₀ : f x ≠ 0) : HasStrictFDerivAt (fun x ↦ |f x|) ((SignType.sign (f x) : ℝ) • f') x := by\n  convert (hasStrictDerivAt_abs h₀).hasStrictFDerivAt.comp x hf using 1\n  ext y\n  simp [mul_comm]\n\n"}
{"name":"HasFDerivAt.abs","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nf' : ContinuousLinearMap (RingHom.id Real) E Real\nx : E\nhf : HasFDerivAt f f' x\nh₀ : Ne (f x) 0\n⊢ HasFDerivAt (fun x => abs (f x)) (HSMul.hSMul (↑(SignType.sign (f x))) f') x","decl":"theorem HasFDerivAt.abs (hf : HasFDerivAt f f' x)\n    (h₀ : f x ≠ 0) : HasFDerivAt (fun x ↦ |f x|) ((SignType.sign (f x) : ℝ) • f') x := by\n  convert (hasDerivAt_abs h₀).hasFDerivAt.comp x hf using 1\n  ext y\n  simp [mul_comm]\n\n"}
{"name":"hasDerivWithinAt_abs_neg","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"s : Set Real\nx : Real\nhx : LT.lt x 0\n⊢ HasDerivWithinAt (fun x => abs x) (-1) s x","decl":"theorem hasDerivWithinAt_abs_neg (s : Set ℝ) {x : ℝ} (hx : x < 0) :\n    HasDerivWithinAt (|·|) (-1) s x := (hasDerivAt_abs_neg hx).hasDerivWithinAt\n\n"}
{"name":"hasDerivWithinAt_abs_pos","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"s : Set Real\nx : Real\nhx : LT.lt 0 x\n⊢ HasDerivWithinAt (fun x => abs x) 1 s x","decl":"theorem hasDerivWithinAt_abs_pos (s : Set ℝ) {x : ℝ} (hx : 0 < x) :\n    HasDerivWithinAt (|·|) 1 s x := (hasDerivAt_abs_pos hx).hasDerivWithinAt\n\n"}
{"name":"hasDerivWithinAt_abs","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"s : Set Real\nx : Real\nhx : Ne x 0\n⊢ HasDerivWithinAt (fun x => abs x) (↑(SignType.sign x)) s x","decl":"theorem hasDerivWithinAt_abs (s : Set ℝ) {x : ℝ} (hx : x ≠ 0) :\n    HasDerivWithinAt (|·|) (SignType.sign x : ℝ) s x := (hasDerivAt_abs hx).hasDerivWithinAt\n\n"}
{"name":"HasFDerivWithinAt.abs_of_neg","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nf' : ContinuousLinearMap (RingHom.id Real) E Real\ns : Set E\nx : E\nhf : HasFDerivWithinAt f f' s x\nh₀ : LT.lt (f x) 0\n⊢ HasFDerivWithinAt (fun x => abs (f x)) (Neg.neg f') s x","decl":"theorem HasFDerivWithinAt.abs_of_neg (hf : HasFDerivWithinAt f f' s x)\n    (h₀ : f x < 0) : HasFDerivWithinAt (fun x ↦ |f x|) (-f') s x := by\n  convert (hasDerivAt_abs_neg h₀).comp_hasFDerivWithinAt x hf using 1\n  simp\n\n"}
{"name":"HasFDerivWithinAt.abs_of_pos","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nf' : ContinuousLinearMap (RingHom.id Real) E Real\ns : Set E\nx : E\nhf : HasFDerivWithinAt f f' s x\nh₀ : LT.lt 0 (f x)\n⊢ HasFDerivWithinAt (fun x => abs (f x)) f' s x","decl":"theorem HasFDerivWithinAt.abs_of_pos (hf : HasFDerivWithinAt f f' s x)\n    (h₀ : 0 < f x) : HasFDerivWithinAt (fun x ↦ |f x|) f' s x := by\n  convert (hasDerivAt_abs_pos h₀).comp_hasFDerivWithinAt x hf using 1\n  simp\n\n"}
{"name":"HasFDerivWithinAt.abs","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nf' : ContinuousLinearMap (RingHom.id Real) E Real\ns : Set E\nx : E\nhf : HasFDerivWithinAt f f' s x\nh₀ : Ne (f x) 0\n⊢ HasFDerivWithinAt (fun x => abs (f x)) (HSMul.hSMul (↑(SignType.sign (f x))) f') s x","decl":"theorem HasFDerivWithinAt.abs (hf : HasFDerivWithinAt f f' s x)\n    (h₀ : f x ≠ 0) : HasFDerivWithinAt (fun x ↦ |f x|) ((SignType.sign (f x) : ℝ) • f') s x :=\n  (hasDerivAt_abs h₀).comp_hasFDerivWithinAt x hf\n\n"}
{"name":"differentiableAt_abs_neg","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"x : Real\nhx : LT.lt x 0\n⊢ DifferentiableAt Real (fun x => abs x) x","decl":"theorem differentiableAt_abs_neg {x : ℝ} (hx : x < 0) :\n    DifferentiableAt ℝ (|·|) x := (hasDerivAt_abs_neg hx).differentiableAt\n\n"}
{"name":"differentiableAt_abs_pos","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"x : Real\nhx : LT.lt 0 x\n⊢ DifferentiableAt Real (fun x => abs x) x","decl":"theorem differentiableAt_abs_pos {x : ℝ} (hx : 0 < x) :\n    DifferentiableAt ℝ (|·|) x := (hasDerivAt_abs_pos hx).differentiableAt\n\n"}
{"name":"differentiableAt_abs","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"x : Real\nhx : Ne x 0\n⊢ DifferentiableAt Real (fun x => abs x) x","decl":"theorem differentiableAt_abs {x : ℝ} (hx : x ≠ 0) :\n    DifferentiableAt ℝ (|·|) x := (hasDerivAt_abs hx).differentiableAt\n\n"}
{"name":"DifferentiableAt.abs_of_neg","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\nhf : DifferentiableAt Real f x\nh₀ : LT.lt (f x) 0\n⊢ DifferentiableAt Real (fun x => abs (f x)) x","decl":"theorem DifferentiableAt.abs_of_neg (hf : DifferentiableAt ℝ f x) (h₀ : f x < 0) :\n    DifferentiableAt ℝ (fun x ↦ |f x|) x := (differentiableAt_abs_neg h₀).comp x hf\n\n"}
{"name":"DifferentiableAt.abs_of_pos","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\nhf : DifferentiableAt Real f x\nh₀ : LT.lt 0 (f x)\n⊢ DifferentiableAt Real (fun x => abs (f x)) x","decl":"theorem DifferentiableAt.abs_of_pos (hf : DifferentiableAt ℝ f x) (h₀ : 0 < f x) :\n    DifferentiableAt ℝ (fun x ↦ |f x|) x := (differentiableAt_abs_pos h₀).comp x hf\n\n"}
{"name":"DifferentiableAt.abs","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\nhf : DifferentiableAt Real f x\nh₀ : Ne (f x) 0\n⊢ DifferentiableAt Real (fun x => abs (f x)) x","decl":"theorem DifferentiableAt.abs (hf : DifferentiableAt ℝ f x) (h₀ : f x ≠ 0) :\n    DifferentiableAt ℝ (fun x ↦ |f x|) x := (differentiableAt_abs h₀).comp x hf\n\n"}
{"name":"differentiableWithinAt_abs_neg","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"s : Set Real\nx : Real\nhx : LT.lt x 0\n⊢ DifferentiableWithinAt Real (fun x => abs x) s x","decl":"theorem differentiableWithinAt_abs_neg (s : Set ℝ) {x : ℝ} (hx : x < 0) :\n    DifferentiableWithinAt ℝ (|·|) s x := (differentiableAt_abs_neg hx).differentiableWithinAt\n\n"}
{"name":"differentiableWithinAt_abs_pos","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"s : Set Real\nx : Real\nhx : LT.lt 0 x\n⊢ DifferentiableWithinAt Real (fun x => abs x) s x","decl":"theorem differentiableWithinAt_abs_pos (s : Set ℝ) {x : ℝ} (hx : 0 < x) :\n    DifferentiableWithinAt ℝ (|·|) s x := (differentiableAt_abs_pos hx).differentiableWithinAt\n\n"}
{"name":"differentiableWithinAt_abs","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"s : Set Real\nx : Real\nhx : Ne x 0\n⊢ DifferentiableWithinAt Real (fun x => abs x) s x","decl":"theorem differentiableWithinAt_abs (s : Set ℝ) {x : ℝ} (hx : x ≠ 0) :\n    DifferentiableWithinAt ℝ (|·|) s x := (differentiableAt_abs hx).differentiableWithinAt\n\n"}
{"name":"DifferentiableWithinAt.abs_of_neg","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\ns : Set E\nx : E\nhf : DifferentiableWithinAt Real f s x\nh₀ : LT.lt (f x) 0\n⊢ DifferentiableWithinAt Real (fun x => abs (f x)) s x","decl":"theorem DifferentiableWithinAt.abs_of_neg (hf : DifferentiableWithinAt ℝ f s x) (h₀ : f x < 0) :\n    DifferentiableWithinAt ℝ (fun x ↦ |f x|) s x :=\n  (differentiableAt_abs_neg h₀).comp_differentiableWithinAt x hf\n\n"}
{"name":"DifferentiableWithinAt.abs_of_pos","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\ns : Set E\nx : E\nhf : DifferentiableWithinAt Real f s x\nh₀ : LT.lt 0 (f x)\n⊢ DifferentiableWithinAt Real (fun x => abs (f x)) s x","decl":"theorem DifferentiableWithinAt.abs_of_pos (hf : DifferentiableWithinAt ℝ f s x) (h₀ : 0 < f x) :\n    DifferentiableWithinAt ℝ (fun x ↦ |f x|) s x :=\n  (differentiableAt_abs_pos h₀).comp_differentiableWithinAt x hf\n\n"}
{"name":"DifferentiableWithinAt.abs","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\ns : Set E\nx : E\nhf : DifferentiableWithinAt Real f s x\nh₀ : Ne (f x) 0\n⊢ DifferentiableWithinAt Real (fun x => abs (f x)) s x","decl":"theorem DifferentiableWithinAt.abs (hf : DifferentiableWithinAt ℝ f s x) (h₀ : f x ≠ 0) :\n    DifferentiableWithinAt ℝ (fun x ↦ |f x|) s x :=\n  (differentiableAt_abs h₀).comp_differentiableWithinAt x hf\n\n"}
{"name":"differentiableOn_abs","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"s : Set Real\nhs : ∀ (x : Real), Membership.mem s x → Ne x 0\n⊢ DifferentiableOn Real (fun x => abs x) s","decl":"theorem differentiableOn_abs {s : Set ℝ} (hs : ∀ x ∈ s, x ≠ 0) : DifferentiableOn ℝ (|·|) s :=\n  fun x hx ↦ differentiableWithinAt_abs s (hs x hx)\n\n"}
{"name":"DifferentiableOn.abs","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\ns : Set E\nhf : DifferentiableOn Real f s\nh₀ : ∀ (x : E), Membership.mem s x → Ne (f x) 0\n⊢ DifferentiableOn Real (fun x => abs (f x)) s","decl":"theorem DifferentiableOn.abs (hf : DifferentiableOn ℝ f s) (h₀ : ∀ x ∈ s, f x ≠ 0) :\n    DifferentiableOn ℝ (fun x ↦ |f x|) s :=\n  fun x hx ↦ (hf x hx).abs (h₀ x hx)\n\n"}
{"name":"Differentiable.abs","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nhf : Differentiable Real f\nh₀ : ∀ (x : E), Ne (f x) 0\n⊢ Differentiable Real fun x => abs (f x)","decl":"theorem Differentiable.abs (hf : Differentiable ℝ f) (h₀ : ∀ x, f x ≠ 0) :\n    Differentiable ℝ (fun x ↦ |f x|) := fun x ↦ (hf x).abs (h₀ x)\n\n"}
{"name":"not_differentiableAt_abs_zero","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"⊢ Not (DifferentiableAt Real abs 0)","decl":"theorem not_differentiableAt_abs_zero : ¬ DifferentiableAt ℝ (abs : ℝ → ℝ) 0 := by\n  intro h\n  have h₁ : deriv abs (0 : ℝ) = 1 :=\n    (uniqueDiffOn_Ici _ _ Set.left_mem_Ici).eq_deriv _ h.hasDerivAt.hasDerivWithinAt <|\n      (hasDerivWithinAt_id _ _).congr_of_mem (fun _ h ↦ abs_of_nonneg h) Set.left_mem_Ici\n  have h₂ : deriv abs (0 : ℝ) = -1 :=\n    (uniqueDiffOn_Iic _ _ Set.right_mem_Iic).eq_deriv _ h.hasDerivAt.hasDerivWithinAt <|\n      (hasDerivWithinAt_neg _ _).congr_of_mem (fun _ h ↦ abs_of_nonpos h) Set.right_mem_Iic\n  linarith\n\n"}
{"name":"deriv_abs_neg","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"x : Real\nhx : LT.lt x 0\n⊢ Eq (deriv (fun x => abs x) x) (-1)","decl":"theorem deriv_abs_neg {x : ℝ} (hx : x < 0) : deriv (|·|) x = -1 := (hasDerivAt_abs_neg hx).deriv\n\n"}
{"name":"deriv_abs_pos","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"x : Real\nhx : LT.lt 0 x\n⊢ Eq (deriv (fun x => abs x) x) 1","decl":"theorem deriv_abs_pos {x : ℝ} (hx : 0 < x) : deriv (|·|) x = 1 := (hasDerivAt_abs_pos hx).deriv\n\n"}
{"name":"deriv_abs_zero","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"⊢ Eq (deriv (fun x => abs x) 0) 0","decl":"theorem deriv_abs_zero : deriv (|·|) (0 : ℝ) = 0 :=\n  deriv_zero_of_not_differentiableAt not_differentiableAt_abs_zero\n\n"}
{"name":"deriv_abs","module":"Mathlib.Analysis.Calculus.Deriv.Abs","initialProofState":"x : Real\n⊢ Eq (deriv (fun x => abs x) x) ↑(SignType.sign x)","decl":"theorem deriv_abs (x : ℝ) : deriv (|·|) x = SignType.sign x := by\n  obtain rfl | hx := eq_or_ne x 0\n  · simpa using deriv_abs_zero\n  · simpa [hx] using (hasDerivAt_abs hx).deriv\n"}
