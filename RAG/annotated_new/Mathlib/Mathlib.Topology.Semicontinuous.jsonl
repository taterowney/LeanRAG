{"name":"LowerSemicontinuousWithinAt.mono","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nf : α → β\nx : α\ns t : Set α\nh : LowerSemicontinuousWithinAt f s x\nhst : HasSubset.Subset t s\n⊢ LowerSemicontinuousWithinAt f t x","decl":"theorem LowerSemicontinuousWithinAt.mono (h : LowerSemicontinuousWithinAt f s x) (hst : t ⊆ s) :\n    LowerSemicontinuousWithinAt f t x := fun y hy =>\n  Filter.Eventually.filter_mono (nhdsWithin_mono _ hst) (h y hy)\n\n"}
{"name":"lowerSemicontinuousWithinAt_univ_iff","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nf : α → β\nx : α\n⊢ Iff (LowerSemicontinuousWithinAt f Set.univ x) (LowerSemicontinuousAt f x)","decl":"theorem lowerSemicontinuousWithinAt_univ_iff :\n    LowerSemicontinuousWithinAt f univ x ↔ LowerSemicontinuousAt f x := by\n  simp [LowerSemicontinuousWithinAt, LowerSemicontinuousAt, nhdsWithin_univ]\n\n"}
{"name":"LowerSemicontinuousAt.lowerSemicontinuousWithinAt","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nf : α → β\nx : α\ns : Set α\nh : LowerSemicontinuousAt f x\n⊢ LowerSemicontinuousWithinAt f s x","decl":"theorem LowerSemicontinuousAt.lowerSemicontinuousWithinAt (s : Set α)\n    (h : LowerSemicontinuousAt f x) : LowerSemicontinuousWithinAt f s x := fun y hy =>\n  Filter.Eventually.filter_mono nhdsWithin_le_nhds (h y hy)\n\n"}
{"name":"LowerSemicontinuousOn.lowerSemicontinuousWithinAt","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nf : α → β\nx : α\ns : Set α\nh : LowerSemicontinuousOn f s\nhx : Membership.mem s x\n⊢ LowerSemicontinuousWithinAt f s x","decl":"theorem LowerSemicontinuousOn.lowerSemicontinuousWithinAt (h : LowerSemicontinuousOn f s)\n    (hx : x ∈ s) : LowerSemicontinuousWithinAt f s x :=\n  h x hx\n\n"}
{"name":"LowerSemicontinuousOn.mono","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nf : α → β\ns t : Set α\nh : LowerSemicontinuousOn f s\nhst : HasSubset.Subset t s\n⊢ LowerSemicontinuousOn f t","decl":"theorem LowerSemicontinuousOn.mono (h : LowerSemicontinuousOn f s) (hst : t ⊆ s) :\n    LowerSemicontinuousOn f t := fun x hx => (h x (hst hx)).mono hst\n\n"}
{"name":"lowerSemicontinuousOn_univ_iff","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nf : α → β\n⊢ Iff (LowerSemicontinuousOn f Set.univ) (LowerSemicontinuous f)","decl":"theorem lowerSemicontinuousOn_univ_iff : LowerSemicontinuousOn f univ ↔ LowerSemicontinuous f := by\n  simp [LowerSemicontinuousOn, LowerSemicontinuous, lowerSemicontinuousWithinAt_univ_iff]\n\n"}
{"name":"LowerSemicontinuous.lowerSemicontinuousAt","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nf : α → β\nh : LowerSemicontinuous f\nx : α\n⊢ LowerSemicontinuousAt f x","decl":"theorem LowerSemicontinuous.lowerSemicontinuousAt (h : LowerSemicontinuous f) (x : α) :\n    LowerSemicontinuousAt f x :=\n  h x\n\n"}
{"name":"LowerSemicontinuous.lowerSemicontinuousWithinAt","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nf : α → β\nh : LowerSemicontinuous f\ns : Set α\nx : α\n⊢ LowerSemicontinuousWithinAt f s x","decl":"theorem LowerSemicontinuous.lowerSemicontinuousWithinAt (h : LowerSemicontinuous f) (s : Set α)\n    (x : α) : LowerSemicontinuousWithinAt f s x :=\n  (h x).lowerSemicontinuousWithinAt s\n\n"}
{"name":"LowerSemicontinuous.lowerSemicontinuousOn","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nf : α → β\nh : LowerSemicontinuous f\ns : Set α\n⊢ LowerSemicontinuousOn f s","decl":"theorem LowerSemicontinuous.lowerSemicontinuousOn (h : LowerSemicontinuous f) (s : Set α) :\n    LowerSemicontinuousOn f s := fun x _hx => h.lowerSemicontinuousWithinAt s x\n\n"}
{"name":"lowerSemicontinuousWithinAt_const","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nx : α\ns : Set α\nz : β\n⊢ LowerSemicontinuousWithinAt (fun _x => z) s x","decl":"theorem lowerSemicontinuousWithinAt_const : LowerSemicontinuousWithinAt (fun _x => z) s x :=\n  fun _y hy => Filter.Eventually.of_forall fun _x => hy\n\n"}
{"name":"lowerSemicontinuousAt_const","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nx : α\nz : β\n⊢ LowerSemicontinuousAt (fun _x => z) x","decl":"theorem lowerSemicontinuousAt_const : LowerSemicontinuousAt (fun _x => z) x := fun _y hy =>\n  Filter.Eventually.of_forall fun _x => hy\n\n"}
{"name":"lowerSemicontinuousOn_const","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\ns : Set α\nz : β\n⊢ LowerSemicontinuousOn (fun _x => z) s","decl":"theorem lowerSemicontinuousOn_const : LowerSemicontinuousOn (fun _x => z) s := fun _x _hx =>\n  lowerSemicontinuousWithinAt_const\n\n"}
{"name":"lowerSemicontinuous_const","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nz : β\n⊢ LowerSemicontinuous fun _x => z","decl":"theorem lowerSemicontinuous_const : LowerSemicontinuous fun _x : α => z := fun _x =>\n  lowerSemicontinuousAt_const\n\n"}
{"name":"IsOpen.lowerSemicontinuous_indicator","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nβ : Type u_2\ninst✝¹ : Preorder β\ns : Set α\ny : β\ninst✝ : Zero β\nhs : IsOpen s\nhy : LE.le 0 y\n⊢ LowerSemicontinuous (s.indicator fun _x => y)","decl":"theorem IsOpen.lowerSemicontinuous_indicator (hs : IsOpen s) (hy : 0 ≤ y) :\n    LowerSemicontinuous (indicator s fun _x => y) := by\n  intro x z hz\n  by_cases h : x ∈ s <;> simp [h] at hz\n  · filter_upwards [hs.mem_nhds h]\n    simp +contextual [hz]\n  · refine Filter.Eventually.of_forall fun x' => ?_\n    by_cases h' : x' ∈ s <;> simp [h', hz.trans_le hy, hz]\n\n"}
{"name":"IsOpen.lowerSemicontinuousOn_indicator","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nβ : Type u_2\ninst✝¹ : Preorder β\ns t : Set α\ny : β\ninst✝ : Zero β\nhs : IsOpen s\nhy : LE.le 0 y\n⊢ LowerSemicontinuousOn (s.indicator fun _x => y) t","decl":"theorem IsOpen.lowerSemicontinuousOn_indicator (hs : IsOpen s) (hy : 0 ≤ y) :\n    LowerSemicontinuousOn (indicator s fun _x => y) t :=\n  (hs.lowerSemicontinuous_indicator hy).lowerSemicontinuousOn t\n\n"}
{"name":"IsOpen.lowerSemicontinuousAt_indicator","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nβ : Type u_2\ninst✝¹ : Preorder β\nx : α\ns : Set α\ny : β\ninst✝ : Zero β\nhs : IsOpen s\nhy : LE.le 0 y\n⊢ LowerSemicontinuousAt (s.indicator fun _x => y) x","decl":"theorem IsOpen.lowerSemicontinuousAt_indicator (hs : IsOpen s) (hy : 0 ≤ y) :\n    LowerSemicontinuousAt (indicator s fun _x => y) x :=\n  (hs.lowerSemicontinuous_indicator hy).lowerSemicontinuousAt x\n\n"}
{"name":"IsOpen.lowerSemicontinuousWithinAt_indicator","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nβ : Type u_2\ninst✝¹ : Preorder β\nx : α\ns t : Set α\ny : β\ninst✝ : Zero β\nhs : IsOpen s\nhy : LE.le 0 y\n⊢ LowerSemicontinuousWithinAt (s.indicator fun _x => y) t x","decl":"theorem IsOpen.lowerSemicontinuousWithinAt_indicator (hs : IsOpen s) (hy : 0 ≤ y) :\n    LowerSemicontinuousWithinAt (indicator s fun _x => y) t x :=\n  (hs.lowerSemicontinuous_indicator hy).lowerSemicontinuousWithinAt t x\n\n"}
{"name":"IsClosed.lowerSemicontinuous_indicator","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nβ : Type u_2\ninst✝¹ : Preorder β\ns : Set α\ny : β\ninst✝ : Zero β\nhs : IsClosed s\nhy : LE.le y 0\n⊢ LowerSemicontinuous (s.indicator fun _x => y)","decl":"theorem IsClosed.lowerSemicontinuous_indicator (hs : IsClosed s) (hy : y ≤ 0) :\n    LowerSemicontinuous (indicator s fun _x => y) := by\n  intro x z hz\n  by_cases h : x ∈ s <;> simp [h] at hz\n  · refine Filter.Eventually.of_forall fun x' => ?_\n    by_cases h' : x' ∈ s <;> simp [h', hz, hz.trans_le hy]\n  · filter_upwards [hs.isOpen_compl.mem_nhds h]\n    simp +contextual [hz]\n\n"}
{"name":"IsClosed.lowerSemicontinuousOn_indicator","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nβ : Type u_2\ninst✝¹ : Preorder β\ns t : Set α\ny : β\ninst✝ : Zero β\nhs : IsClosed s\nhy : LE.le y 0\n⊢ LowerSemicontinuousOn (s.indicator fun _x => y) t","decl":"theorem IsClosed.lowerSemicontinuousOn_indicator (hs : IsClosed s) (hy : y ≤ 0) :\n    LowerSemicontinuousOn (indicator s fun _x => y) t :=\n  (hs.lowerSemicontinuous_indicator hy).lowerSemicontinuousOn t\n\n"}
{"name":"IsClosed.lowerSemicontinuousAt_indicator","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nβ : Type u_2\ninst✝¹ : Preorder β\nx : α\ns : Set α\ny : β\ninst✝ : Zero β\nhs : IsClosed s\nhy : LE.le y 0\n⊢ LowerSemicontinuousAt (s.indicator fun _x => y) x","decl":"theorem IsClosed.lowerSemicontinuousAt_indicator (hs : IsClosed s) (hy : y ≤ 0) :\n    LowerSemicontinuousAt (indicator s fun _x => y) x :=\n  (hs.lowerSemicontinuous_indicator hy).lowerSemicontinuousAt x\n\n"}
{"name":"IsClosed.lowerSemicontinuousWithinAt_indicator","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nβ : Type u_2\ninst✝¹ : Preorder β\nx : α\ns t : Set α\ny : β\ninst✝ : Zero β\nhs : IsClosed s\nhy : LE.le y 0\n⊢ LowerSemicontinuousWithinAt (s.indicator fun _x => y) t x","decl":"theorem IsClosed.lowerSemicontinuousWithinAt_indicator (hs : IsClosed s) (hy : y ≤ 0) :\n    LowerSemicontinuousWithinAt (indicator s fun _x => y) t x :=\n  (hs.lowerSemicontinuous_indicator hy).lowerSemicontinuousWithinAt t x\n\n"}
{"name":"lowerSemicontinuous_iff_isOpen_preimage","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nf : α → β\n⊢ Iff (LowerSemicontinuous f) (∀ (y : β), IsOpen (Set.preimage f (Set.Ioi y)))","decl":"theorem lowerSemicontinuous_iff_isOpen_preimage :\n    LowerSemicontinuous f ↔ ∀ y, IsOpen (f ⁻¹' Ioi y) :=\n  ⟨fun H y => isOpen_iff_mem_nhds.2 fun x hx => H x y hx, fun H _x y y_lt =>\n    IsOpen.mem_nhds (H y) y_lt⟩\n\n"}
{"name":"LowerSemicontinuous.isOpen_preimage","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nf : α → β\nhf : LowerSemicontinuous f\ny : β\n⊢ IsOpen (Set.preimage f (Set.Ioi y))","decl":"theorem LowerSemicontinuous.isOpen_preimage (hf : LowerSemicontinuous f) (y : β) :\n    IsOpen (f ⁻¹' Ioi y) :=\n  lowerSemicontinuous_iff_isOpen_preimage.1 hf y\n\n"}
{"name":"lowerSemicontinuous_iff_isClosed_preimage","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nγ : Type u_3\ninst✝ : LinearOrder γ\nf : α → γ\n⊢ Iff (LowerSemicontinuous f) (∀ (y : γ), IsClosed (Set.preimage f (Set.Iic y)))","decl":"theorem lowerSemicontinuous_iff_isClosed_preimage {f : α → γ} :\n    LowerSemicontinuous f ↔ ∀ y, IsClosed (f ⁻¹' Iic y) := by\n  rw [lowerSemicontinuous_iff_isOpen_preimage]\n  simp only [← isOpen_compl_iff, ← preimage_compl, compl_Iic]\n\n"}
{"name":"LowerSemicontinuous.isClosed_preimage","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nγ : Type u_3\ninst✝ : LinearOrder γ\nf : α → γ\nhf : LowerSemicontinuous f\ny : γ\n⊢ IsClosed (Set.preimage f (Set.Iic y))","decl":"theorem LowerSemicontinuous.isClosed_preimage {f : α → γ} (hf : LowerSemicontinuous f) (y : γ) :\n    IsClosed (f ⁻¹' Iic y) :=\n  lowerSemicontinuous_iff_isClosed_preimage.1 hf y\n\n"}
{"name":"ContinuousWithinAt.lowerSemicontinuousWithinAt","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\nx : α\ns : Set α\nγ : Type u_3\ninst✝² : LinearOrder γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderTopology γ\nf : α → γ\nh : ContinuousWithinAt f s x\n⊢ LowerSemicontinuousWithinAt f s x","decl":"theorem ContinuousWithinAt.lowerSemicontinuousWithinAt {f : α → γ} (h : ContinuousWithinAt f s x) :\n    LowerSemicontinuousWithinAt f s x := fun _y hy => h (Ioi_mem_nhds hy)\n\n"}
{"name":"ContinuousAt.lowerSemicontinuousAt","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\nx : α\nγ : Type u_3\ninst✝² : LinearOrder γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderTopology γ\nf : α → γ\nh : ContinuousAt f x\n⊢ LowerSemicontinuousAt f x","decl":"theorem ContinuousAt.lowerSemicontinuousAt {f : α → γ} (h : ContinuousAt f x) :\n    LowerSemicontinuousAt f x := fun _y hy => h (Ioi_mem_nhds hy)\n\n"}
{"name":"ContinuousOn.lowerSemicontinuousOn","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\ns : Set α\nγ : Type u_3\ninst✝² : LinearOrder γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderTopology γ\nf : α → γ\nh : ContinuousOn f s\n⊢ LowerSemicontinuousOn f s","decl":"theorem ContinuousOn.lowerSemicontinuousOn {f : α → γ} (h : ContinuousOn f s) :\n    LowerSemicontinuousOn f s := fun x hx => (h x hx).lowerSemicontinuousWithinAt\n\n"}
{"name":"Continuous.lowerSemicontinuous","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\nγ : Type u_3\ninst✝² : LinearOrder γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderTopology γ\nf : α → γ\nh : Continuous f\n⊢ LowerSemicontinuous f","decl":"theorem Continuous.lowerSemicontinuous {f : α → γ} (h : Continuous f) : LowerSemicontinuous f :=\n  fun _x => h.continuousAt.lowerSemicontinuousAt\n\n"}
{"name":"lowerSemicontinuousWithinAt_iff_le_liminf","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nx : α\ns : Set α\nγ : Type u_3\ninst✝¹ : CompleteLinearOrder γ\ninst✝ : DenselyOrdered γ\nf : α → γ\n⊢ Iff (LowerSemicontinuousWithinAt f s x) (LE.le (f x) (Filter.liminf f (nhdsWithin x s)))","decl":"theorem lowerSemicontinuousWithinAt_iff_le_liminf {f : α → γ} :\n    LowerSemicontinuousWithinAt f s x ↔ f x ≤ liminf f (𝓝[s] x) := by\n  constructor\n  · intro hf; unfold LowerSemicontinuousWithinAt at hf\n    contrapose! hf\n    obtain ⟨y, lty, ylt⟩ := exists_between hf; use y\n    exact ⟨ylt, fun h => lty.not_le\n      (le_liminf_of_le (by isBoundedDefault) (h.mono fun _ hx => le_of_lt hx))⟩\n  exact fun hf y ylt => eventually_lt_of_lt_liminf (ylt.trans_le hf)\n\n"}
{"name":"LowerSemicontinuousWithinAt.le_liminf","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nx : α\ns : Set α\nγ : Type u_3\ninst✝¹ : CompleteLinearOrder γ\ninst✝ : DenselyOrdered γ\nf : α → γ\na✝ : LowerSemicontinuousWithinAt f s x\n⊢ LE.le (f x) (Filter.liminf f (nhdsWithin x s))","decl":"alias ⟨LowerSemicontinuousWithinAt.le_liminf, _⟩ := lowerSemicontinuousWithinAt_iff_le_liminf\n\n"}
{"name":"lowerSemicontinuousAt_iff_le_liminf","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nx : α\nγ : Type u_3\ninst✝¹ : CompleteLinearOrder γ\ninst✝ : DenselyOrdered γ\nf : α → γ\n⊢ Iff (LowerSemicontinuousAt f x) (LE.le (f x) (Filter.liminf f (nhds x)))","decl":"theorem lowerSemicontinuousAt_iff_le_liminf {f : α → γ} :\n    LowerSemicontinuousAt f x ↔ f x ≤ liminf f (𝓝 x) := by\n  rw [← lowerSemicontinuousWithinAt_univ_iff, lowerSemicontinuousWithinAt_iff_le_liminf,\n    ← nhdsWithin_univ]\n\n"}
{"name":"LowerSemicontinuousAt.le_liminf","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nx : α\nγ : Type u_3\ninst✝¹ : CompleteLinearOrder γ\ninst✝ : DenselyOrdered γ\nf : α → γ\na✝ : LowerSemicontinuousAt f x\n⊢ LE.le (f x) (Filter.liminf f (nhds x))","decl":"alias ⟨LowerSemicontinuousAt.le_liminf, _⟩ := lowerSemicontinuousAt_iff_le_liminf\n\n"}
{"name":"lowerSemicontinuous_iff_le_liminf","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nγ : Type u_3\ninst✝¹ : CompleteLinearOrder γ\ninst✝ : DenselyOrdered γ\nf : α → γ\n⊢ Iff (LowerSemicontinuous f) (∀ (x : α), LE.le (f x) (Filter.liminf f (nhds x)))","decl":"theorem lowerSemicontinuous_iff_le_liminf {f : α → γ} :\n    LowerSemicontinuous f ↔ ∀ x, f x ≤ liminf f (𝓝 x) := by\n  simp only [← lowerSemicontinuousAt_iff_le_liminf, LowerSemicontinuous]\n\n"}
{"name":"LowerSemicontinuous.le_liminf","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nγ : Type u_3\ninst✝¹ : CompleteLinearOrder γ\ninst✝ : DenselyOrdered γ\nf : α → γ\na✝ : LowerSemicontinuous f\nx : α\n⊢ LE.le (f x) (Filter.liminf f (nhds x))","decl":"alias ⟨LowerSemicontinuous.le_liminf, _⟩ := lowerSemicontinuous_iff_le_liminf\n\n"}
{"name":"lowerSemicontinuousOn_iff_le_liminf","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\ns : Set α\nγ : Type u_3\ninst✝¹ : CompleteLinearOrder γ\ninst✝ : DenselyOrdered γ\nf : α → γ\n⊢ Iff (LowerSemicontinuousOn f s) (∀ (x : α), Membership.mem s x → LE.le (f x) (Filter.liminf f (nhdsWithin x s)))","decl":"theorem lowerSemicontinuousOn_iff_le_liminf {f : α → γ} :\n    LowerSemicontinuousOn f s ↔ ∀ x ∈ s, f x ≤ liminf f (𝓝[s] x) := by\n  simp only [← lowerSemicontinuousWithinAt_iff_le_liminf, LowerSemicontinuousOn]\n\n"}
{"name":"LowerSemicontinuousOn.le_liminf","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\ns : Set α\nγ : Type u_3\ninst✝¹ : CompleteLinearOrder γ\ninst✝ : DenselyOrdered γ\nf : α → γ\na✝¹ : LowerSemicontinuousOn f s\nx : α\na✝ : Membership.mem s x\n⊢ LE.le (f x) (Filter.liminf f (nhdsWithin x s))","decl":"alias ⟨LowerSemicontinuousOn.le_liminf, _⟩ := lowerSemicontinuousOn_iff_le_liminf\n\n"}
{"name":"lowerSemicontinuous_iff_isClosed_epigraph","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁴ : TopologicalSpace α\nγ : Type u_3\ninst✝³ : CompleteLinearOrder γ\ninst✝² : DenselyOrdered γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderTopology γ\nf : α → γ\n⊢ Iff (LowerSemicontinuous f) (IsClosed (setOf fun p => LE.le (f p.1) p.2))","decl":"theorem lowerSemicontinuous_iff_isClosed_epigraph {f : α → γ} :\n    LowerSemicontinuous f ↔ IsClosed {p : α × γ | f p.1 ≤ p.2} := by\n  constructor\n  · rw [lowerSemicontinuous_iff_le_liminf, isClosed_iff_forall_filter]\n    rintro hf ⟨x, y⟩ F F_ne h h'\n    rw [nhds_prod_eq, le_prod] at h'\n    calc f x ≤ liminf f (𝓝 x) := hf x\n    _ ≤ liminf f (map Prod.fst F) := liminf_le_liminf_of_le h'.1\n    _ = liminf (f ∘ Prod.fst) F := (Filter.liminf_comp _ _ _).symm\n    _ ≤ liminf Prod.snd F := liminf_le_liminf <| by\n          simpa using (eventually_principal.2 fun (_ : α × γ) ↦ id).filter_mono h\n    _ = y := h'.2.liminf_eq\n  · rw [lowerSemicontinuous_iff_isClosed_preimage]\n    exact fun hf y ↦ hf.preimage (Continuous.Prod.mk_left y)\n\n"}
{"name":"LowerSemicontinuous.isClosed_epigraph","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁴ : TopologicalSpace α\nγ : Type u_3\ninst✝³ : CompleteLinearOrder γ\ninst✝² : DenselyOrdered γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderTopology γ\nf : α → γ\na✝ : LowerSemicontinuous f\n⊢ IsClosed (setOf fun p => LE.le (f p.1) p.2)","decl":"alias ⟨LowerSemicontinuous.isClosed_epigraph, _⟩ := lowerSemicontinuous_iff_isClosed_epigraph\n\n"}
{"name":"ContinuousAt.comp_lowerSemicontinuousWithinAt","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁶ : TopologicalSpace α\nx : α\ns : Set α\nγ : Type u_3\ninst✝⁵ : LinearOrder γ\ninst✝⁴ : TopologicalSpace γ\ninst✝³ : OrderTopology γ\nδ : Type u_4\ninst✝² : LinearOrder δ\ninst✝¹ : TopologicalSpace δ\ninst✝ : OrderTopology δ\ng : γ → δ\nf : α → γ\nhg : ContinuousAt g (f x)\nhf : LowerSemicontinuousWithinAt f s x\ngmon : Monotone g\n⊢ LowerSemicontinuousWithinAt (Function.comp g f) s x","decl":"theorem ContinuousAt.comp_lowerSemicontinuousWithinAt {g : γ → δ} {f : α → γ}\n    (hg : ContinuousAt g (f x)) (hf : LowerSemicontinuousWithinAt f s x) (gmon : Monotone g) :\n    LowerSemicontinuousWithinAt (g ∘ f) s x := by\n  intro y hy\n  by_cases h : ∃ l, l < f x\n  · obtain ⟨z, zlt, hz⟩ : ∃ z < f x, Ioc z (f x) ⊆ g ⁻¹' Ioi y :=\n      exists_Ioc_subset_of_mem_nhds (hg (Ioi_mem_nhds hy)) h\n    filter_upwards [hf z zlt] with a ha\n    calc\n      y < g (min (f x) (f a)) := hz (by simp [zlt, ha, le_refl])\n      _ ≤ g (f a) := gmon (min_le_right _ _)\n\n  · simp only [not_exists, not_lt] at h\n    exact Filter.Eventually.of_forall fun a => hy.trans_le (gmon (h (f a)))\n\n"}
{"name":"ContinuousAt.comp_lowerSemicontinuousAt","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁶ : TopologicalSpace α\nx : α\nγ : Type u_3\ninst✝⁵ : LinearOrder γ\ninst✝⁴ : TopologicalSpace γ\ninst✝³ : OrderTopology γ\nδ : Type u_4\ninst✝² : LinearOrder δ\ninst✝¹ : TopologicalSpace δ\ninst✝ : OrderTopology δ\ng : γ → δ\nf : α → γ\nhg : ContinuousAt g (f x)\nhf : LowerSemicontinuousAt f x\ngmon : Monotone g\n⊢ LowerSemicontinuousAt (Function.comp g f) x","decl":"theorem ContinuousAt.comp_lowerSemicontinuousAt {g : γ → δ} {f : α → γ} (hg : ContinuousAt g (f x))\n    (hf : LowerSemicontinuousAt f x) (gmon : Monotone g) : LowerSemicontinuousAt (g ∘ f) x := by\n  simp only [← lowerSemicontinuousWithinAt_univ_iff] at hf ⊢\n  exact hg.comp_lowerSemicontinuousWithinAt hf gmon\n\n"}
{"name":"Continuous.comp_lowerSemicontinuousOn","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁶ : TopologicalSpace α\ns : Set α\nγ : Type u_3\ninst✝⁵ : LinearOrder γ\ninst✝⁴ : TopologicalSpace γ\ninst✝³ : OrderTopology γ\nδ : Type u_4\ninst✝² : LinearOrder δ\ninst✝¹ : TopologicalSpace δ\ninst✝ : OrderTopology δ\ng : γ → δ\nf : α → γ\nhg : Continuous g\nhf : LowerSemicontinuousOn f s\ngmon : Monotone g\n⊢ LowerSemicontinuousOn (Function.comp g f) s","decl":"theorem Continuous.comp_lowerSemicontinuousOn {g : γ → δ} {f : α → γ} (hg : Continuous g)\n    (hf : LowerSemicontinuousOn f s) (gmon : Monotone g) : LowerSemicontinuousOn (g ∘ f) s :=\n  fun x hx => hg.continuousAt.comp_lowerSemicontinuousWithinAt (hf x hx) gmon\n\n"}
{"name":"Continuous.comp_lowerSemicontinuous","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁶ : TopologicalSpace α\nγ : Type u_3\ninst✝⁵ : LinearOrder γ\ninst✝⁴ : TopologicalSpace γ\ninst✝³ : OrderTopology γ\nδ : Type u_4\ninst✝² : LinearOrder δ\ninst✝¹ : TopologicalSpace δ\ninst✝ : OrderTopology δ\ng : γ → δ\nf : α → γ\nhg : Continuous g\nhf : LowerSemicontinuous f\ngmon : Monotone g\n⊢ LowerSemicontinuous (Function.comp g f)","decl":"theorem Continuous.comp_lowerSemicontinuous {g : γ → δ} {f : α → γ} (hg : Continuous g)\n    (hf : LowerSemicontinuous f) (gmon : Monotone g) : LowerSemicontinuous (g ∘ f) := fun x =>\n  hg.continuousAt.comp_lowerSemicontinuousAt (hf x) gmon\n\n"}
{"name":"ContinuousAt.comp_lowerSemicontinuousWithinAt_antitone","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁶ : TopologicalSpace α\nx : α\ns : Set α\nγ : Type u_3\ninst✝⁵ : LinearOrder γ\ninst✝⁴ : TopologicalSpace γ\ninst✝³ : OrderTopology γ\nδ : Type u_4\ninst✝² : LinearOrder δ\ninst✝¹ : TopologicalSpace δ\ninst✝ : OrderTopology δ\ng : γ → δ\nf : α → γ\nhg : ContinuousAt g (f x)\nhf : LowerSemicontinuousWithinAt f s x\ngmon : Antitone g\n⊢ UpperSemicontinuousWithinAt (Function.comp g f) s x","decl":"theorem ContinuousAt.comp_lowerSemicontinuousWithinAt_antitone {g : γ → δ} {f : α → γ}\n    (hg : ContinuousAt g (f x)) (hf : LowerSemicontinuousWithinAt f s x) (gmon : Antitone g) :\n    UpperSemicontinuousWithinAt (g ∘ f) s x :=\n  @ContinuousAt.comp_lowerSemicontinuousWithinAt α _ x s γ _ _ _ δᵒᵈ _ _ _ g f hg hf gmon\n\n"}
{"name":"ContinuousAt.comp_lowerSemicontinuousAt_antitone","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁶ : TopologicalSpace α\nx : α\nγ : Type u_3\ninst✝⁵ : LinearOrder γ\ninst✝⁴ : TopologicalSpace γ\ninst✝³ : OrderTopology γ\nδ : Type u_4\ninst✝² : LinearOrder δ\ninst✝¹ : TopologicalSpace δ\ninst✝ : OrderTopology δ\ng : γ → δ\nf : α → γ\nhg : ContinuousAt g (f x)\nhf : LowerSemicontinuousAt f x\ngmon : Antitone g\n⊢ UpperSemicontinuousAt (Function.comp g f) x","decl":"theorem ContinuousAt.comp_lowerSemicontinuousAt_antitone {g : γ → δ} {f : α → γ}\n    (hg : ContinuousAt g (f x)) (hf : LowerSemicontinuousAt f x) (gmon : Antitone g) :\n    UpperSemicontinuousAt (g ∘ f) x :=\n  @ContinuousAt.comp_lowerSemicontinuousAt α _ x γ _ _ _ δᵒᵈ _ _ _ g f hg hf gmon\n\n"}
{"name":"Continuous.comp_lowerSemicontinuousOn_antitone","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁶ : TopologicalSpace α\ns : Set α\nγ : Type u_3\ninst✝⁵ : LinearOrder γ\ninst✝⁴ : TopologicalSpace γ\ninst✝³ : OrderTopology γ\nδ : Type u_4\ninst✝² : LinearOrder δ\ninst✝¹ : TopologicalSpace δ\ninst✝ : OrderTopology δ\ng : γ → δ\nf : α → γ\nhg : Continuous g\nhf : LowerSemicontinuousOn f s\ngmon : Antitone g\n⊢ UpperSemicontinuousOn (Function.comp g f) s","decl":"theorem Continuous.comp_lowerSemicontinuousOn_antitone {g : γ → δ} {f : α → γ} (hg : Continuous g)\n    (hf : LowerSemicontinuousOn f s) (gmon : Antitone g) : UpperSemicontinuousOn (g ∘ f) s :=\n  fun x hx => hg.continuousAt.comp_lowerSemicontinuousWithinAt_antitone (hf x hx) gmon\n\n"}
{"name":"Continuous.comp_lowerSemicontinuous_antitone","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁶ : TopologicalSpace α\nγ : Type u_3\ninst✝⁵ : LinearOrder γ\ninst✝⁴ : TopologicalSpace γ\ninst✝³ : OrderTopology γ\nδ : Type u_4\ninst✝² : LinearOrder δ\ninst✝¹ : TopologicalSpace δ\ninst✝ : OrderTopology δ\ng : γ → δ\nf : α → γ\nhg : Continuous g\nhf : LowerSemicontinuous f\ngmon : Antitone g\n⊢ UpperSemicontinuous (Function.comp g f)","decl":"theorem Continuous.comp_lowerSemicontinuous_antitone {g : γ → δ} {f : α → γ} (hg : Continuous g)\n    (hf : LowerSemicontinuous f) (gmon : Antitone g) : UpperSemicontinuous (g ∘ f) := fun x =>\n  hg.continuousAt.comp_lowerSemicontinuousAt_antitone (hf x) gmon\n\n"}
{"name":"LowerSemicontinuousAt.comp_continuousAt","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nβ : Type u_2\ninst✝¹ : Preorder β\nι : Type u_5\ninst✝ : TopologicalSpace ι\nf : α → β\ng : ι → α\nx : ι\nhf : LowerSemicontinuousAt f (g x)\nhg : ContinuousAt g x\n⊢ LowerSemicontinuousAt (fun x => f (g x)) x","decl":"theorem LowerSemicontinuousAt.comp_continuousAt {f : α → β} {g : ι → α} {x : ι}\n    (hf : LowerSemicontinuousAt f (g x)) (hg : ContinuousAt g x) :\n    LowerSemicontinuousAt (fun x ↦ f (g x)) x :=\n  fun _ lt ↦ hg.eventually (hf _ lt)\n\n"}
{"name":"LowerSemicontinuousAt.comp_continuousAt_of_eq","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nβ : Type u_2\ninst✝¹ : Preorder β\nι : Type u_5\ninst✝ : TopologicalSpace ι\nf : α → β\ng : ι → α\ny : α\nx : ι\nhf : LowerSemicontinuousAt f y\nhg : ContinuousAt g x\nhy : Eq (g x) y\n⊢ LowerSemicontinuousAt (fun x => f (g x)) x","decl":"theorem LowerSemicontinuousAt.comp_continuousAt_of_eq {f : α → β} {g : ι → α} {y : α} {x : ι}\n    (hf : LowerSemicontinuousAt f y) (hg : ContinuousAt g x) (hy : g x = y) :\n    LowerSemicontinuousAt (fun x ↦ f (g x)) x := by\n  rw [← hy] at hf\n  exact comp_continuousAt hf hg\n\n"}
{"name":"LowerSemicontinuous.comp_continuous","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nβ : Type u_2\ninst✝¹ : Preorder β\nι : Type u_5\ninst✝ : TopologicalSpace ι\nf : α → β\ng : ι → α\nhf : LowerSemicontinuous f\nhg : Continuous g\n⊢ LowerSemicontinuous fun x => f (g x)","decl":"theorem LowerSemicontinuous.comp_continuous {f : α → β} {g : ι → α}\n    (hf : LowerSemicontinuous f) (hg : Continuous g) : LowerSemicontinuous fun x ↦ f (g x) :=\n  fun x ↦ (hf (g x)).comp_continuousAt hg.continuousAt\n\n"}
{"name":"LowerSemicontinuousWithinAt.add'","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\nx : α\ns : Set α\nγ : Type u_4\ninst✝² : LinearOrderedAddCommMonoid γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderTopology γ\nf g : α → γ\nhf : LowerSemicontinuousWithinAt f s x\nhg : LowerSemicontinuousWithinAt g s x\nhcont : ContinuousAt (fun p => HAdd.hAdd p.1 p.2) { fst := f x, snd := g x }\n⊢ LowerSemicontinuousWithinAt (fun z => HAdd.hAdd (f z) (g z)) s x","decl":"/-- The sum of two lower semicontinuous functions is lower semicontinuous. Formulated with an\nexplicit continuity assumption on addition, for application to `EReal`. The unprimed version of\nthe lemma uses `[ContinuousAdd]`. -/\ntheorem LowerSemicontinuousWithinAt.add' {f g : α → γ} (hf : LowerSemicontinuousWithinAt f s x)\n    (hg : LowerSemicontinuousWithinAt g s x)\n    (hcont : ContinuousAt (fun p : γ × γ => p.1 + p.2) (f x, g x)) :\n    LowerSemicontinuousWithinAt (fun z => f z + g z) s x := by\n  intro y hy\n  obtain ⟨u, v, u_open, xu, v_open, xv, h⟩ :\n    ∃ u v : Set γ,\n      IsOpen u ∧ f x ∈ u ∧ IsOpen v ∧ g x ∈ v ∧ u ×ˢ v ⊆ { p : γ × γ | y < p.fst + p.snd } :=\n    mem_nhds_prod_iff'.1 (hcont (isOpen_Ioi.mem_nhds hy))\n  by_cases hx₁ : ∃ l, l < f x\n  · obtain ⟨z₁, z₁lt, h₁⟩ : ∃ z₁ < f x, Ioc z₁ (f x) ⊆ u :=\n      exists_Ioc_subset_of_mem_nhds (u_open.mem_nhds xu) hx₁\n    by_cases hx₂ : ∃ l, l < g x\n    · obtain ⟨z₂, z₂lt, h₂⟩ : ∃ z₂ < g x, Ioc z₂ (g x) ⊆ v :=\n        exists_Ioc_subset_of_mem_nhds (v_open.mem_nhds xv) hx₂\n      filter_upwards [hf z₁ z₁lt, hg z₂ z₂lt] with z h₁z h₂z\n      have A1 : min (f z) (f x) ∈ u := by\n        by_cases H : f z ≤ f x\n        · simpa [H] using h₁ ⟨h₁z, H⟩\n        · simpa [le_of_not_le H]\n      have A2 : min (g z) (g x) ∈ v := by\n        by_cases H : g z ≤ g x\n        · simpa [H] using h₂ ⟨h₂z, H⟩\n        · simpa [le_of_not_le H]\n      have : (min (f z) (f x), min (g z) (g x)) ∈ u ×ˢ v := ⟨A1, A2⟩\n      calc\n        y < min (f z) (f x) + min (g z) (g x) := h this\n        _ ≤ f z + g z := add_le_add (min_le_left _ _) (min_le_left _ _)\n\n    · simp only [not_exists, not_lt] at hx₂\n      filter_upwards [hf z₁ z₁lt] with z h₁z\n      have A1 : min (f z) (f x) ∈ u := by\n        by_cases H : f z ≤ f x\n        · simpa [H] using h₁ ⟨h₁z, H⟩\n        · simpa [le_of_not_le H]\n      have : (min (f z) (f x), g x) ∈ u ×ˢ v := ⟨A1, xv⟩\n      calc\n        y < min (f z) (f x) + g x := h this\n        _ ≤ f z + g z := add_le_add (min_le_left _ _) (hx₂ (g z))\n\n  · simp only [not_exists, not_lt] at hx₁\n    by_cases hx₂ : ∃ l, l < g x\n    · obtain ⟨z₂, z₂lt, h₂⟩ : ∃ z₂ < g x, Ioc z₂ (g x) ⊆ v :=\n        exists_Ioc_subset_of_mem_nhds (v_open.mem_nhds xv) hx₂\n      filter_upwards [hg z₂ z₂lt] with z h₂z\n      have A2 : min (g z) (g x) ∈ v := by\n        by_cases H : g z ≤ g x\n        · simpa [H] using h₂ ⟨h₂z, H⟩\n        · simpa [le_of_not_le H] using h₂ ⟨z₂lt, le_rfl⟩\n      have : (f x, min (g z) (g x)) ∈ u ×ˢ v := ⟨xu, A2⟩\n      calc\n        y < f x + min (g z) (g x) := h this\n        _ ≤ f z + g z := add_le_add (hx₁ (f z)) (min_le_left _ _)\n    · simp only [not_exists, not_lt] at hx₁ hx₂\n      apply Filter.Eventually.of_forall\n      intro z\n      have : (f x, g x) ∈ u ×ˢ v := ⟨xu, xv⟩\n      calc\n        y < f x + g x := h this\n        _ ≤ f z + g z := add_le_add (hx₁ (f z)) (hx₂ (g z))\n\n"}
{"name":"LowerSemicontinuousAt.add'","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\nx : α\nγ : Type u_4\ninst✝² : LinearOrderedAddCommMonoid γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderTopology γ\nf g : α → γ\nhf : LowerSemicontinuousAt f x\nhg : LowerSemicontinuousAt g x\nhcont : ContinuousAt (fun p => HAdd.hAdd p.1 p.2) { fst := f x, snd := g x }\n⊢ LowerSemicontinuousAt (fun z => HAdd.hAdd (f z) (g z)) x","decl":"/-- The sum of two lower semicontinuous functions is lower semicontinuous. Formulated with an\nexplicit continuity assumption on addition, for application to `EReal`. The unprimed version of\nthe lemma uses `[ContinuousAdd]`. -/\ntheorem LowerSemicontinuousAt.add' {f g : α → γ} (hf : LowerSemicontinuousAt f x)\n    (hg : LowerSemicontinuousAt g x)\n    (hcont : ContinuousAt (fun p : γ × γ => p.1 + p.2) (f x, g x)) :\n    LowerSemicontinuousAt (fun z => f z + g z) x := by\n  simp_rw [← lowerSemicontinuousWithinAt_univ_iff] at *\n  exact hf.add' hg hcont\n\n"}
{"name":"LowerSemicontinuousOn.add'","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\ns : Set α\nγ : Type u_4\ninst✝² : LinearOrderedAddCommMonoid γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderTopology γ\nf g : α → γ\nhf : LowerSemicontinuousOn f s\nhg : LowerSemicontinuousOn g s\nhcont : ∀ (x : α), Membership.mem s x → ContinuousAt (fun p => HAdd.hAdd p.1 p.2) { fst := f x, snd := g x }\n⊢ LowerSemicontinuousOn (fun z => HAdd.hAdd (f z) (g z)) s","decl":"/-- The sum of two lower semicontinuous functions is lower semicontinuous. Formulated with an\nexplicit continuity assumption on addition, for application to `EReal`. The unprimed version of\nthe lemma uses `[ContinuousAdd]`. -/\ntheorem LowerSemicontinuousOn.add' {f g : α → γ} (hf : LowerSemicontinuousOn f s)\n    (hg : LowerSemicontinuousOn g s)\n    (hcont : ∀ x ∈ s, ContinuousAt (fun p : γ × γ => p.1 + p.2) (f x, g x)) :\n    LowerSemicontinuousOn (fun z => f z + g z) s := fun x hx =>\n  (hf x hx).add' (hg x hx) (hcont x hx)\n\n"}
{"name":"LowerSemicontinuous.add'","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\nγ : Type u_4\ninst✝² : LinearOrderedAddCommMonoid γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderTopology γ\nf g : α → γ\nhf : LowerSemicontinuous f\nhg : LowerSemicontinuous g\nhcont : ∀ (x : α), ContinuousAt (fun p => HAdd.hAdd p.1 p.2) { fst := f x, snd := g x }\n⊢ LowerSemicontinuous fun z => HAdd.hAdd (f z) (g z)","decl":"/-- The sum of two lower semicontinuous functions is lower semicontinuous. Formulated with an\nexplicit continuity assumption on addition, for application to `EReal`. The unprimed version of\nthe lemma uses `[ContinuousAdd]`. -/\ntheorem LowerSemicontinuous.add' {f g : α → γ} (hf : LowerSemicontinuous f)\n    (hg : LowerSemicontinuous g)\n    (hcont : ∀ x, ContinuousAt (fun p : γ × γ => p.1 + p.2) (f x, g x)) :\n    LowerSemicontinuous fun z => f z + g z := fun x => (hf x).add' (hg x) (hcont x)\n\n"}
{"name":"LowerSemicontinuousWithinAt.add","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁴ : TopologicalSpace α\nx : α\ns : Set α\nγ : Type u_4\ninst✝³ : LinearOrderedAddCommMonoid γ\ninst✝² : TopologicalSpace γ\ninst✝¹ : OrderTopology γ\ninst✝ : ContinuousAdd γ\nf g : α → γ\nhf : LowerSemicontinuousWithinAt f s x\nhg : LowerSemicontinuousWithinAt g s x\n⊢ LowerSemicontinuousWithinAt (fun z => HAdd.hAdd (f z) (g z)) s x","decl":"/-- The sum of two lower semicontinuous functions is lower semicontinuous. Formulated with\n`[ContinuousAdd]`. The primed version of the lemma uses an explicit continuity assumption on\naddition, for application to `EReal`. -/\ntheorem LowerSemicontinuousWithinAt.add {f g : α → γ} (hf : LowerSemicontinuousWithinAt f s x)\n    (hg : LowerSemicontinuousWithinAt g s x) :\n    LowerSemicontinuousWithinAt (fun z => f z + g z) s x :=\n  hf.add' hg continuous_add.continuousAt\n\n"}
{"name":"LowerSemicontinuousAt.add","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁴ : TopologicalSpace α\nx : α\nγ : Type u_4\ninst✝³ : LinearOrderedAddCommMonoid γ\ninst✝² : TopologicalSpace γ\ninst✝¹ : OrderTopology γ\ninst✝ : ContinuousAdd γ\nf g : α → γ\nhf : LowerSemicontinuousAt f x\nhg : LowerSemicontinuousAt g x\n⊢ LowerSemicontinuousAt (fun z => HAdd.hAdd (f z) (g z)) x","decl":"/-- The sum of two lower semicontinuous functions is lower semicontinuous. Formulated with\n`[ContinuousAdd]`. The primed version of the lemma uses an explicit continuity assumption on\naddition, for application to `EReal`. -/\ntheorem LowerSemicontinuousAt.add {f g : α → γ} (hf : LowerSemicontinuousAt f x)\n    (hg : LowerSemicontinuousAt g x) : LowerSemicontinuousAt (fun z => f z + g z) x :=\n  hf.add' hg continuous_add.continuousAt\n\n"}
{"name":"LowerSemicontinuousOn.add","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁴ : TopologicalSpace α\ns : Set α\nγ : Type u_4\ninst✝³ : LinearOrderedAddCommMonoid γ\ninst✝² : TopologicalSpace γ\ninst✝¹ : OrderTopology γ\ninst✝ : ContinuousAdd γ\nf g : α → γ\nhf : LowerSemicontinuousOn f s\nhg : LowerSemicontinuousOn g s\n⊢ LowerSemicontinuousOn (fun z => HAdd.hAdd (f z) (g z)) s","decl":"/-- The sum of two lower semicontinuous functions is lower semicontinuous. Formulated with\n`[ContinuousAdd]`. The primed version of the lemma uses an explicit continuity assumption on\naddition, for application to `EReal`. -/\ntheorem LowerSemicontinuousOn.add {f g : α → γ} (hf : LowerSemicontinuousOn f s)\n    (hg : LowerSemicontinuousOn g s) : LowerSemicontinuousOn (fun z => f z + g z) s :=\n  hf.add' hg fun _x _hx => continuous_add.continuousAt\n\n"}
{"name":"LowerSemicontinuous.add","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁴ : TopologicalSpace α\nγ : Type u_4\ninst✝³ : LinearOrderedAddCommMonoid γ\ninst✝² : TopologicalSpace γ\ninst✝¹ : OrderTopology γ\ninst✝ : ContinuousAdd γ\nf g : α → γ\nhf : LowerSemicontinuous f\nhg : LowerSemicontinuous g\n⊢ LowerSemicontinuous fun z => HAdd.hAdd (f z) (g z)","decl":"/-- The sum of two lower semicontinuous functions is lower semicontinuous. Formulated with\n`[ContinuousAdd]`. The primed version of the lemma uses an explicit continuity assumption on\naddition, for application to `EReal`. -/\ntheorem LowerSemicontinuous.add {f g : α → γ} (hf : LowerSemicontinuous f)\n    (hg : LowerSemicontinuous g) : LowerSemicontinuous fun z => f z + g z :=\n  hf.add' hg fun _x => continuous_add.continuousAt\n\n"}
{"name":"lowerSemicontinuousWithinAt_sum","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁴ : TopologicalSpace α\nx : α\ns : Set α\nι : Type u_3\nγ : Type u_4\ninst✝³ : LinearOrderedAddCommMonoid γ\ninst✝² : TopologicalSpace γ\ninst✝¹ : OrderTopology γ\ninst✝ : ContinuousAdd γ\nf : ι → α → γ\na : Finset ι\nha : ∀ (i : ι), Membership.mem a i → LowerSemicontinuousWithinAt (f i) s x\n⊢ LowerSemicontinuousWithinAt (fun z => a.sum fun i => f i z) s x","decl":"theorem lowerSemicontinuousWithinAt_sum {f : ι → α → γ} {a : Finset ι}\n    (ha : ∀ i ∈ a, LowerSemicontinuousWithinAt (f i) s x) :\n    LowerSemicontinuousWithinAt (fun z => ∑ i ∈ a, f i z) s x := by\n  classical\n    induction' a using Finset.induction_on with i a ia IH\n    · exact lowerSemicontinuousWithinAt_const\n    · simp only [ia, Finset.sum_insert, not_false_iff]\n      exact\n        LowerSemicontinuousWithinAt.add (ha _ (Finset.mem_insert_self i a))\n          (IH fun j ja => ha j (Finset.mem_insert_of_mem ja))\n\n"}
{"name":"lowerSemicontinuousAt_sum","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁴ : TopologicalSpace α\nx : α\nι : Type u_3\nγ : Type u_4\ninst✝³ : LinearOrderedAddCommMonoid γ\ninst✝² : TopologicalSpace γ\ninst✝¹ : OrderTopology γ\ninst✝ : ContinuousAdd γ\nf : ι → α → γ\na : Finset ι\nha : ∀ (i : ι), Membership.mem a i → LowerSemicontinuousAt (f i) x\n⊢ LowerSemicontinuousAt (fun z => a.sum fun i => f i z) x","decl":"theorem lowerSemicontinuousAt_sum {f : ι → α → γ} {a : Finset ι}\n    (ha : ∀ i ∈ a, LowerSemicontinuousAt (f i) x) :\n    LowerSemicontinuousAt (fun z => ∑ i ∈ a, f i z) x := by\n  simp_rw [← lowerSemicontinuousWithinAt_univ_iff] at *\n  exact lowerSemicontinuousWithinAt_sum ha\n\n"}
{"name":"lowerSemicontinuousOn_sum","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁴ : TopologicalSpace α\ns : Set α\nι : Type u_3\nγ : Type u_4\ninst✝³ : LinearOrderedAddCommMonoid γ\ninst✝² : TopologicalSpace γ\ninst✝¹ : OrderTopology γ\ninst✝ : ContinuousAdd γ\nf : ι → α → γ\na : Finset ι\nha : ∀ (i : ι), Membership.mem a i → LowerSemicontinuousOn (f i) s\n⊢ LowerSemicontinuousOn (fun z => a.sum fun i => f i z) s","decl":"theorem lowerSemicontinuousOn_sum {f : ι → α → γ} {a : Finset ι}\n    (ha : ∀ i ∈ a, LowerSemicontinuousOn (f i) s) :\n    LowerSemicontinuousOn (fun z => ∑ i ∈ a, f i z) s := fun x hx =>\n  lowerSemicontinuousWithinAt_sum fun i hi => ha i hi x hx\n\n"}
{"name":"lowerSemicontinuous_sum","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁴ : TopologicalSpace α\nι : Type u_3\nγ : Type u_4\ninst✝³ : LinearOrderedAddCommMonoid γ\ninst✝² : TopologicalSpace γ\ninst✝¹ : OrderTopology γ\ninst✝ : ContinuousAdd γ\nf : ι → α → γ\na : Finset ι\nha : ∀ (i : ι), Membership.mem a i → LowerSemicontinuous (f i)\n⊢ LowerSemicontinuous fun z => a.sum fun i => f i z","decl":"theorem lowerSemicontinuous_sum {f : ι → α → γ} {a : Finset ι}\n    (ha : ∀ i ∈ a, LowerSemicontinuous (f i)) : LowerSemicontinuous fun z => ∑ i ∈ a, f i z :=\n  fun x => lowerSemicontinuousAt_sum fun i hi => ha i hi x\n\n"}
{"name":"lowerSemicontinuousWithinAt_ciSup","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nx : α\ns : Set α\nι : Sort u_3\nδ' : Type u_5\ninst✝ : ConditionallyCompleteLinearOrder δ'\nf : ι → α → δ'\nbdd : Filter.Eventually (fun y => BddAbove (Set.range fun i => f i y)) (nhdsWithin x s)\nh : ∀ (i : ι), LowerSemicontinuousWithinAt (f i) s x\n⊢ LowerSemicontinuousWithinAt (fun x' => iSup fun i => f i x') s x","decl":"theorem lowerSemicontinuousWithinAt_ciSup {f : ι → α → δ'}\n    (bdd : ∀ᶠ y in 𝓝[s] x, BddAbove (range fun i => f i y))\n    (h : ∀ i, LowerSemicontinuousWithinAt (f i) s x) :\n    LowerSemicontinuousWithinAt (fun x' => ⨆ i, f i x') s x := by\n  cases isEmpty_or_nonempty ι\n  · simpa only [iSup_of_empty'] using lowerSemicontinuousWithinAt_const\n  · intro y hy\n    rcases exists_lt_of_lt_ciSup hy with ⟨i, hi⟩\n    filter_upwards [h i y hi, bdd] with y hy hy' using hy.trans_le (le_ciSup hy' i)\n\n"}
{"name":"lowerSemicontinuousWithinAt_iSup","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nx : α\ns : Set α\nι : Sort u_3\nδ : Type u_4\ninst✝ : CompleteLinearOrder δ\nf : ι → α → δ\nh : ∀ (i : ι), LowerSemicontinuousWithinAt (f i) s x\n⊢ LowerSemicontinuousWithinAt (fun x' => iSup fun i => f i x') s x","decl":"theorem lowerSemicontinuousWithinAt_iSup {f : ι → α → δ}\n    (h : ∀ i, LowerSemicontinuousWithinAt (f i) s x) :\n    LowerSemicontinuousWithinAt (fun x' => ⨆ i, f i x') s x :=\n  lowerSemicontinuousWithinAt_ciSup (by simp) h\n\n"}
{"name":"lowerSemicontinuousWithinAt_biSup","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nx : α\ns : Set α\nι : Sort u_3\nδ : Type u_4\ninst✝ : CompleteLinearOrder δ\np : ι → Prop\nf : (i : ι) → p i → α → δ\nh : ∀ (i : ι) (hi : p i), LowerSemicontinuousWithinAt (f i hi) s x\n⊢ LowerSemicontinuousWithinAt (fun x' => iSup fun i => iSup fun hi => f i hi x') s x","decl":"theorem lowerSemicontinuousWithinAt_biSup {p : ι → Prop} {f : ∀ i, p i → α → δ}\n    (h : ∀ i hi, LowerSemicontinuousWithinAt (f i hi) s x) :\n    LowerSemicontinuousWithinAt (fun x' => ⨆ (i) (hi), f i hi x') s x :=\n  lowerSemicontinuousWithinAt_iSup fun i => lowerSemicontinuousWithinAt_iSup fun hi => h i hi\n\n"}
{"name":"lowerSemicontinuousAt_ciSup","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nx : α\nι : Sort u_3\nδ' : Type u_5\ninst✝ : ConditionallyCompleteLinearOrder δ'\nf : ι → α → δ'\nbdd : Filter.Eventually (fun y => BddAbove (Set.range fun i => f i y)) (nhds x)\nh : ∀ (i : ι), LowerSemicontinuousAt (f i) x\n⊢ LowerSemicontinuousAt (fun x' => iSup fun i => f i x') x","decl":"theorem lowerSemicontinuousAt_ciSup {f : ι → α → δ'}\n    (bdd : ∀ᶠ y in 𝓝 x, BddAbove (range fun i => f i y)) (h : ∀ i, LowerSemicontinuousAt (f i) x) :\n    LowerSemicontinuousAt (fun x' => ⨆ i, f i x') x := by\n  simp_rw [← lowerSemicontinuousWithinAt_univ_iff] at *\n  rw [← nhdsWithin_univ] at bdd\n  exact lowerSemicontinuousWithinAt_ciSup bdd h\n\n"}
{"name":"lowerSemicontinuousAt_iSup","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nx : α\nι : Sort u_3\nδ : Type u_4\ninst✝ : CompleteLinearOrder δ\nf : ι → α → δ\nh : ∀ (i : ι), LowerSemicontinuousAt (f i) x\n⊢ LowerSemicontinuousAt (fun x' => iSup fun i => f i x') x","decl":"theorem lowerSemicontinuousAt_iSup {f : ι → α → δ} (h : ∀ i, LowerSemicontinuousAt (f i) x) :\n    LowerSemicontinuousAt (fun x' => ⨆ i, f i x') x :=\n  lowerSemicontinuousAt_ciSup (by simp) h\n\n"}
{"name":"lowerSemicontinuousAt_biSup","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nx : α\nι : Sort u_3\nδ : Type u_4\ninst✝ : CompleteLinearOrder δ\np : ι → Prop\nf : (i : ι) → p i → α → δ\nh : ∀ (i : ι) (hi : p i), LowerSemicontinuousAt (f i hi) x\n⊢ LowerSemicontinuousAt (fun x' => iSup fun i => iSup fun hi => f i hi x') x","decl":"theorem lowerSemicontinuousAt_biSup {p : ι → Prop} {f : ∀ i, p i → α → δ}\n    (h : ∀ i hi, LowerSemicontinuousAt (f i hi) x) :\n    LowerSemicontinuousAt (fun x' => ⨆ (i) (hi), f i hi x') x :=\n  lowerSemicontinuousAt_iSup fun i => lowerSemicontinuousAt_iSup fun hi => h i hi\n\n"}
{"name":"lowerSemicontinuousOn_ciSup","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\ns : Set α\nι : Sort u_3\nδ' : Type u_5\ninst✝ : ConditionallyCompleteLinearOrder δ'\nf : ι → α → δ'\nbdd : ∀ (x : α), Membership.mem s x → BddAbove (Set.range fun i => f i x)\nh : ∀ (i : ι), LowerSemicontinuousOn (f i) s\n⊢ LowerSemicontinuousOn (fun x' => iSup fun i => f i x') s","decl":"theorem lowerSemicontinuousOn_ciSup {f : ι → α → δ'}\n    (bdd : ∀ x ∈ s, BddAbove (range fun i => f i x)) (h : ∀ i, LowerSemicontinuousOn (f i) s) :\n    LowerSemicontinuousOn (fun x' => ⨆ i, f i x') s := fun x hx =>\n  lowerSemicontinuousWithinAt_ciSup (eventually_nhdsWithin_of_forall bdd) fun i => h i x hx\n\n"}
{"name":"lowerSemicontinuousOn_iSup","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\ns : Set α\nι : Sort u_3\nδ : Type u_4\ninst✝ : CompleteLinearOrder δ\nf : ι → α → δ\nh : ∀ (i : ι), LowerSemicontinuousOn (f i) s\n⊢ LowerSemicontinuousOn (fun x' => iSup fun i => f i x') s","decl":"theorem lowerSemicontinuousOn_iSup {f : ι → α → δ} (h : ∀ i, LowerSemicontinuousOn (f i) s) :\n    LowerSemicontinuousOn (fun x' => ⨆ i, f i x') s :=\n  lowerSemicontinuousOn_ciSup (by simp) h\n\n"}
{"name":"lowerSemicontinuousOn_biSup","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\ns : Set α\nι : Sort u_3\nδ : Type u_4\ninst✝ : CompleteLinearOrder δ\np : ι → Prop\nf : (i : ι) → p i → α → δ\nh : ∀ (i : ι) (hi : p i), LowerSemicontinuousOn (f i hi) s\n⊢ LowerSemicontinuousOn (fun x' => iSup fun i => iSup fun hi => f i hi x') s","decl":"theorem lowerSemicontinuousOn_biSup {p : ι → Prop} {f : ∀ i, p i → α → δ}\n    (h : ∀ i hi, LowerSemicontinuousOn (f i hi) s) :\n    LowerSemicontinuousOn (fun x' => ⨆ (i) (hi), f i hi x') s :=\n  lowerSemicontinuousOn_iSup fun i => lowerSemicontinuousOn_iSup fun hi => h i hi\n\n"}
{"name":"lowerSemicontinuous_ciSup","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nι : Sort u_3\nδ' : Type u_5\ninst✝ : ConditionallyCompleteLinearOrder δ'\nf : ι → α → δ'\nbdd : ∀ (x : α), BddAbove (Set.range fun i => f i x)\nh : ∀ (i : ι), LowerSemicontinuous (f i)\n⊢ LowerSemicontinuous fun x' => iSup fun i => f i x'","decl":"theorem lowerSemicontinuous_ciSup {f : ι → α → δ'} (bdd : ∀ x, BddAbove (range fun i => f i x))\n    (h : ∀ i, LowerSemicontinuous (f i)) : LowerSemicontinuous fun x' => ⨆ i, f i x' := fun x =>\n  lowerSemicontinuousAt_ciSup (Eventually.of_forall bdd) fun i => h i x\n\n"}
{"name":"lowerSemicontinuous_iSup","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nι : Sort u_3\nδ : Type u_4\ninst✝ : CompleteLinearOrder δ\nf : ι → α → δ\nh : ∀ (i : ι), LowerSemicontinuous (f i)\n⊢ LowerSemicontinuous fun x' => iSup fun i => f i x'","decl":"theorem lowerSemicontinuous_iSup {f : ι → α → δ} (h : ∀ i, LowerSemicontinuous (f i)) :\n    LowerSemicontinuous fun x' => ⨆ i, f i x' :=\n  lowerSemicontinuous_ciSup (by simp) h\n\n"}
{"name":"lowerSemicontinuous_biSup","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nι : Sort u_3\nδ : Type u_4\ninst✝ : CompleteLinearOrder δ\np : ι → Prop\nf : (i : ι) → p i → α → δ\nh : ∀ (i : ι) (hi : p i), LowerSemicontinuous (f i hi)\n⊢ LowerSemicontinuous fun x' => iSup fun i => iSup fun hi => f i hi x'","decl":"theorem lowerSemicontinuous_biSup {p : ι → Prop} {f : ∀ i, p i → α → δ}\n    (h : ∀ i hi, LowerSemicontinuous (f i hi)) :\n    LowerSemicontinuous fun x' => ⨆ (i) (hi), f i hi x' :=\n  lowerSemicontinuous_iSup fun i => lowerSemicontinuous_iSup fun hi => h i hi\n\n"}
{"name":"lowerSemicontinuousWithinAt_tsum","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\nx : α\ns : Set α\nι : Type u_3\nf : ι → α → ENNReal\nh : ∀ (i : ι), LowerSemicontinuousWithinAt (f i) s x\n⊢ LowerSemicontinuousWithinAt (fun x' => tsum fun i => f i x') s x","decl":"theorem lowerSemicontinuousWithinAt_tsum {f : ι → α → ℝ≥0∞}\n    (h : ∀ i, LowerSemicontinuousWithinAt (f i) s x) :\n    LowerSemicontinuousWithinAt (fun x' => ∑' i, f i x') s x := by\n  simp_rw [ENNReal.tsum_eq_iSup_sum]\n  refine lowerSemicontinuousWithinAt_iSup fun b => ?_\n  exact lowerSemicontinuousWithinAt_sum fun i _hi => h i\n\n"}
{"name":"lowerSemicontinuousAt_tsum","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\nx : α\nι : Type u_3\nf : ι → α → ENNReal\nh : ∀ (i : ι), LowerSemicontinuousAt (f i) x\n⊢ LowerSemicontinuousAt (fun x' => tsum fun i => f i x') x","decl":"theorem lowerSemicontinuousAt_tsum {f : ι → α → ℝ≥0∞} (h : ∀ i, LowerSemicontinuousAt (f i) x) :\n    LowerSemicontinuousAt (fun x' => ∑' i, f i x') x := by\n  simp_rw [← lowerSemicontinuousWithinAt_univ_iff] at *\n  exact lowerSemicontinuousWithinAt_tsum h\n\n"}
{"name":"lowerSemicontinuousOn_tsum","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\ns : Set α\nι : Type u_3\nf : ι → α → ENNReal\nh : ∀ (i : ι), LowerSemicontinuousOn (f i) s\n⊢ LowerSemicontinuousOn (fun x' => tsum fun i => f i x') s","decl":"theorem lowerSemicontinuousOn_tsum {f : ι → α → ℝ≥0∞} (h : ∀ i, LowerSemicontinuousOn (f i) s) :\n    LowerSemicontinuousOn (fun x' => ∑' i, f i x') s := fun x hx =>\n  lowerSemicontinuousWithinAt_tsum fun i => h i x hx\n\n"}
{"name":"lowerSemicontinuous_tsum","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\nι : Type u_3\nf : ι → α → ENNReal\nh : ∀ (i : ι), LowerSemicontinuous (f i)\n⊢ LowerSemicontinuous fun x' => tsum fun i => f i x'","decl":"theorem lowerSemicontinuous_tsum {f : ι → α → ℝ≥0∞} (h : ∀ i, LowerSemicontinuous (f i)) :\n    LowerSemicontinuous fun x' => ∑' i, f i x' := fun x => lowerSemicontinuousAt_tsum fun i => h i x\n\n"}
{"name":"UpperSemicontinuousWithinAt.mono","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nf : α → β\nx : α\ns t : Set α\nh : UpperSemicontinuousWithinAt f s x\nhst : HasSubset.Subset t s\n⊢ UpperSemicontinuousWithinAt f t x","decl":"theorem UpperSemicontinuousWithinAt.mono (h : UpperSemicontinuousWithinAt f s x) (hst : t ⊆ s) :\n    UpperSemicontinuousWithinAt f t x := fun y hy =>\n  Filter.Eventually.filter_mono (nhdsWithin_mono _ hst) (h y hy)\n\n"}
{"name":"upperSemicontinuousWithinAt_univ_iff","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nf : α → β\nx : α\n⊢ Iff (UpperSemicontinuousWithinAt f Set.univ x) (UpperSemicontinuousAt f x)","decl":"theorem upperSemicontinuousWithinAt_univ_iff :\n    UpperSemicontinuousWithinAt f univ x ↔ UpperSemicontinuousAt f x := by\n  simp [UpperSemicontinuousWithinAt, UpperSemicontinuousAt, nhdsWithin_univ]\n\n"}
{"name":"UpperSemicontinuousAt.upperSemicontinuousWithinAt","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nf : α → β\nx : α\ns : Set α\nh : UpperSemicontinuousAt f x\n⊢ UpperSemicontinuousWithinAt f s x","decl":"theorem UpperSemicontinuousAt.upperSemicontinuousWithinAt (s : Set α)\n    (h : UpperSemicontinuousAt f x) : UpperSemicontinuousWithinAt f s x := fun y hy =>\n  Filter.Eventually.filter_mono nhdsWithin_le_nhds (h y hy)\n\n"}
{"name":"UpperSemicontinuousOn.upperSemicontinuousWithinAt","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nf : α → β\nx : α\ns : Set α\nh : UpperSemicontinuousOn f s\nhx : Membership.mem s x\n⊢ UpperSemicontinuousWithinAt f s x","decl":"theorem UpperSemicontinuousOn.upperSemicontinuousWithinAt (h : UpperSemicontinuousOn f s)\n    (hx : x ∈ s) : UpperSemicontinuousWithinAt f s x :=\n  h x hx\n\n"}
{"name":"UpperSemicontinuousOn.mono","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nf : α → β\ns t : Set α\nh : UpperSemicontinuousOn f s\nhst : HasSubset.Subset t s\n⊢ UpperSemicontinuousOn f t","decl":"theorem UpperSemicontinuousOn.mono (h : UpperSemicontinuousOn f s) (hst : t ⊆ s) :\n    UpperSemicontinuousOn f t := fun x hx => (h x (hst hx)).mono hst\n\n"}
{"name":"upperSemicontinuousOn_univ_iff","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nf : α → β\n⊢ Iff (UpperSemicontinuousOn f Set.univ) (UpperSemicontinuous f)","decl":"theorem upperSemicontinuousOn_univ_iff : UpperSemicontinuousOn f univ ↔ UpperSemicontinuous f := by\n  simp [UpperSemicontinuousOn, UpperSemicontinuous, upperSemicontinuousWithinAt_univ_iff]\n\n"}
{"name":"UpperSemicontinuous.upperSemicontinuousAt","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nf : α → β\nh : UpperSemicontinuous f\nx : α\n⊢ UpperSemicontinuousAt f x","decl":"theorem UpperSemicontinuous.upperSemicontinuousAt (h : UpperSemicontinuous f) (x : α) :\n    UpperSemicontinuousAt f x :=\n  h x\n\n"}
{"name":"UpperSemicontinuous.upperSemicontinuousWithinAt","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nf : α → β\nh : UpperSemicontinuous f\ns : Set α\nx : α\n⊢ UpperSemicontinuousWithinAt f s x","decl":"theorem UpperSemicontinuous.upperSemicontinuousWithinAt (h : UpperSemicontinuous f) (s : Set α)\n    (x : α) : UpperSemicontinuousWithinAt f s x :=\n  (h x).upperSemicontinuousWithinAt s\n\n"}
{"name":"UpperSemicontinuous.upperSemicontinuousOn","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nf : α → β\nh : UpperSemicontinuous f\ns : Set α\n⊢ UpperSemicontinuousOn f s","decl":"theorem UpperSemicontinuous.upperSemicontinuousOn (h : UpperSemicontinuous f) (s : Set α) :\n    UpperSemicontinuousOn f s := fun x _hx => h.upperSemicontinuousWithinAt s x\n\n"}
{"name":"upperSemicontinuousWithinAt_const","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nx : α\ns : Set α\nz : β\n⊢ UpperSemicontinuousWithinAt (fun _x => z) s x","decl":"theorem upperSemicontinuousWithinAt_const : UpperSemicontinuousWithinAt (fun _x => z) s x :=\n  fun _y hy => Filter.Eventually.of_forall fun _x => hy\n\n"}
{"name":"upperSemicontinuousAt_const","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nx : α\nz : β\n⊢ UpperSemicontinuousAt (fun _x => z) x","decl":"theorem upperSemicontinuousAt_const : UpperSemicontinuousAt (fun _x => z) x := fun _y hy =>\n  Filter.Eventually.of_forall fun _x => hy\n\n"}
{"name":"upperSemicontinuousOn_const","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\ns : Set α\nz : β\n⊢ UpperSemicontinuousOn (fun _x => z) s","decl":"theorem upperSemicontinuousOn_const : UpperSemicontinuousOn (fun _x => z) s := fun _x _hx =>\n  upperSemicontinuousWithinAt_const\n\n"}
{"name":"upperSemicontinuous_const","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nz : β\n⊢ UpperSemicontinuous fun _x => z","decl":"theorem upperSemicontinuous_const : UpperSemicontinuous fun _x : α => z := fun _x =>\n  upperSemicontinuousAt_const\n\n"}
{"name":"IsOpen.upperSemicontinuous_indicator","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nβ : Type u_2\ninst✝¹ : Preorder β\ns : Set α\ny : β\ninst✝ : Zero β\nhs : IsOpen s\nhy : LE.le y 0\n⊢ UpperSemicontinuous (s.indicator fun _x => y)","decl":"theorem IsOpen.upperSemicontinuous_indicator (hs : IsOpen s) (hy : y ≤ 0) :\n    UpperSemicontinuous (indicator s fun _x => y) :=\n  @IsOpen.lowerSemicontinuous_indicator α _ βᵒᵈ _ s y _ hs hy\n\n"}
{"name":"IsOpen.upperSemicontinuousOn_indicator","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nβ : Type u_2\ninst✝¹ : Preorder β\ns t : Set α\ny : β\ninst✝ : Zero β\nhs : IsOpen s\nhy : LE.le y 0\n⊢ UpperSemicontinuousOn (s.indicator fun _x => y) t","decl":"theorem IsOpen.upperSemicontinuousOn_indicator (hs : IsOpen s) (hy : y ≤ 0) :\n    UpperSemicontinuousOn (indicator s fun _x => y) t :=\n  (hs.upperSemicontinuous_indicator hy).upperSemicontinuousOn t\n\n"}
{"name":"IsOpen.upperSemicontinuousAt_indicator","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nβ : Type u_2\ninst✝¹ : Preorder β\nx : α\ns : Set α\ny : β\ninst✝ : Zero β\nhs : IsOpen s\nhy : LE.le y 0\n⊢ UpperSemicontinuousAt (s.indicator fun _x => y) x","decl":"theorem IsOpen.upperSemicontinuousAt_indicator (hs : IsOpen s) (hy : y ≤ 0) :\n    UpperSemicontinuousAt (indicator s fun _x => y) x :=\n  (hs.upperSemicontinuous_indicator hy).upperSemicontinuousAt x\n\n"}
{"name":"IsOpen.upperSemicontinuousWithinAt_indicator","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nβ : Type u_2\ninst✝¹ : Preorder β\nx : α\ns t : Set α\ny : β\ninst✝ : Zero β\nhs : IsOpen s\nhy : LE.le y 0\n⊢ UpperSemicontinuousWithinAt (s.indicator fun _x => y) t x","decl":"theorem IsOpen.upperSemicontinuousWithinAt_indicator (hs : IsOpen s) (hy : y ≤ 0) :\n    UpperSemicontinuousWithinAt (indicator s fun _x => y) t x :=\n  (hs.upperSemicontinuous_indicator hy).upperSemicontinuousWithinAt t x\n\n"}
{"name":"IsClosed.upperSemicontinuous_indicator","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nβ : Type u_2\ninst✝¹ : Preorder β\ns : Set α\ny : β\ninst✝ : Zero β\nhs : IsClosed s\nhy : LE.le 0 y\n⊢ UpperSemicontinuous (s.indicator fun _x => y)","decl":"theorem IsClosed.upperSemicontinuous_indicator (hs : IsClosed s) (hy : 0 ≤ y) :\n    UpperSemicontinuous (indicator s fun _x => y) :=\n  @IsClosed.lowerSemicontinuous_indicator α _ βᵒᵈ _ s y _ hs hy\n\n"}
{"name":"IsClosed.upperSemicontinuousOn_indicator","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nβ : Type u_2\ninst✝¹ : Preorder β\ns t : Set α\ny : β\ninst✝ : Zero β\nhs : IsClosed s\nhy : LE.le 0 y\n⊢ UpperSemicontinuousOn (s.indicator fun _x => y) t","decl":"theorem IsClosed.upperSemicontinuousOn_indicator (hs : IsClosed s) (hy : 0 ≤ y) :\n    UpperSemicontinuousOn (indicator s fun _x => y) t :=\n  (hs.upperSemicontinuous_indicator hy).upperSemicontinuousOn t\n\n"}
{"name":"IsClosed.upperSemicontinuousAt_indicator","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nβ : Type u_2\ninst✝¹ : Preorder β\nx : α\ns : Set α\ny : β\ninst✝ : Zero β\nhs : IsClosed s\nhy : LE.le 0 y\n⊢ UpperSemicontinuousAt (s.indicator fun _x => y) x","decl":"theorem IsClosed.upperSemicontinuousAt_indicator (hs : IsClosed s) (hy : 0 ≤ y) :\n    UpperSemicontinuousAt (indicator s fun _x => y) x :=\n  (hs.upperSemicontinuous_indicator hy).upperSemicontinuousAt x\n\n"}
{"name":"IsClosed.upperSemicontinuousWithinAt_indicator","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nβ : Type u_2\ninst✝¹ : Preorder β\nx : α\ns t : Set α\ny : β\ninst✝ : Zero β\nhs : IsClosed s\nhy : LE.le 0 y\n⊢ UpperSemicontinuousWithinAt (s.indicator fun _x => y) t x","decl":"theorem IsClosed.upperSemicontinuousWithinAt_indicator (hs : IsClosed s) (hy : 0 ≤ y) :\n    UpperSemicontinuousWithinAt (indicator s fun _x => y) t x :=\n  (hs.upperSemicontinuous_indicator hy).upperSemicontinuousWithinAt t x\n\n"}
{"name":"upperSemicontinuous_iff_isOpen_preimage","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nf : α → β\n⊢ Iff (UpperSemicontinuous f) (∀ (y : β), IsOpen (Set.preimage f (Set.Iio y)))","decl":"theorem upperSemicontinuous_iff_isOpen_preimage :\n    UpperSemicontinuous f ↔ ∀ y, IsOpen (f ⁻¹' Iio y) :=\n  ⟨fun H y => isOpen_iff_mem_nhds.2 fun x hx => H x y hx, fun H _x y y_lt =>\n    IsOpen.mem_nhds (H y) y_lt⟩\n\n"}
{"name":"UpperSemicontinuous.isOpen_preimage","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nβ : Type u_2\ninst✝ : Preorder β\nf : α → β\nhf : UpperSemicontinuous f\ny : β\n⊢ IsOpen (Set.preimage f (Set.Iio y))","decl":"theorem UpperSemicontinuous.isOpen_preimage (hf : UpperSemicontinuous f) (y : β) :\n    IsOpen (f ⁻¹' Iio y) :=\n  upperSemicontinuous_iff_isOpen_preimage.1 hf y\n\n"}
{"name":"upperSemicontinuous_iff_isClosed_preimage","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nγ : Type u_3\ninst✝ : LinearOrder γ\nf : α → γ\n⊢ Iff (UpperSemicontinuous f) (∀ (y : γ), IsClosed (Set.preimage f (Set.Ici y)))","decl":"theorem upperSemicontinuous_iff_isClosed_preimage {f : α → γ} :\n    UpperSemicontinuous f ↔ ∀ y, IsClosed (f ⁻¹' Ici y) := by\n  rw [upperSemicontinuous_iff_isOpen_preimage]\n  simp only [← isOpen_compl_iff, ← preimage_compl, compl_Ici]\n\n"}
{"name":"UpperSemicontinuous.isClosed_preimage","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nγ : Type u_3\ninst✝ : LinearOrder γ\nf : α → γ\nhf : UpperSemicontinuous f\ny : γ\n⊢ IsClosed (Set.preimage f (Set.Ici y))","decl":"theorem UpperSemicontinuous.isClosed_preimage {f : α → γ} (hf : UpperSemicontinuous f) (y : γ) :\n    IsClosed (f ⁻¹' Ici y) :=\n  upperSemicontinuous_iff_isClosed_preimage.1 hf y\n\n"}
{"name":"ContinuousWithinAt.upperSemicontinuousWithinAt","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\nx : α\ns : Set α\nγ : Type u_3\ninst✝² : LinearOrder γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderTopology γ\nf : α → γ\nh : ContinuousWithinAt f s x\n⊢ UpperSemicontinuousWithinAt f s x","decl":"theorem ContinuousWithinAt.upperSemicontinuousWithinAt {f : α → γ} (h : ContinuousWithinAt f s x) :\n    UpperSemicontinuousWithinAt f s x := fun _y hy => h (Iio_mem_nhds hy)\n\n"}
{"name":"ContinuousAt.upperSemicontinuousAt","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\nx : α\nγ : Type u_3\ninst✝² : LinearOrder γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderTopology γ\nf : α → γ\nh : ContinuousAt f x\n⊢ UpperSemicontinuousAt f x","decl":"theorem ContinuousAt.upperSemicontinuousAt {f : α → γ} (h : ContinuousAt f x) :\n    UpperSemicontinuousAt f x := fun _y hy => h (Iio_mem_nhds hy)\n\n"}
{"name":"ContinuousOn.upperSemicontinuousOn","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\ns : Set α\nγ : Type u_3\ninst✝² : LinearOrder γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderTopology γ\nf : α → γ\nh : ContinuousOn f s\n⊢ UpperSemicontinuousOn f s","decl":"theorem ContinuousOn.upperSemicontinuousOn {f : α → γ} (h : ContinuousOn f s) :\n    UpperSemicontinuousOn f s := fun x hx => (h x hx).upperSemicontinuousWithinAt\n\n"}
{"name":"Continuous.upperSemicontinuous","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\nγ : Type u_3\ninst✝² : LinearOrder γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderTopology γ\nf : α → γ\nh : Continuous f\n⊢ UpperSemicontinuous f","decl":"theorem Continuous.upperSemicontinuous {f : α → γ} (h : Continuous f) : UpperSemicontinuous f :=\n  fun _x => h.continuousAt.upperSemicontinuousAt\n\n"}
{"name":"upperSemicontinuousWithinAt_iff_limsup_le","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nx : α\ns : Set α\nγ : Type u_3\ninst✝¹ : CompleteLinearOrder γ\ninst✝ : DenselyOrdered γ\nf : α → γ\n⊢ Iff (UpperSemicontinuousWithinAt f s x) (LE.le (Filter.limsup f (nhdsWithin x s)) (f x))","decl":"theorem upperSemicontinuousWithinAt_iff_limsup_le {f : α → γ} :\n    UpperSemicontinuousWithinAt f s x ↔ limsup f (𝓝[s] x) ≤ f x :=\n  lowerSemicontinuousWithinAt_iff_le_liminf (γ := γᵒᵈ)\n\n"}
{"name":"UpperSemicontinuousWithinAt.limsup_le","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nx : α\ns : Set α\nγ : Type u_3\ninst✝¹ : CompleteLinearOrder γ\ninst✝ : DenselyOrdered γ\nf : α → γ\na✝ : UpperSemicontinuousWithinAt f s x\n⊢ LE.le (Filter.limsup f (nhdsWithin x s)) (f x)","decl":"alias ⟨UpperSemicontinuousWithinAt.limsup_le, _⟩ := upperSemicontinuousWithinAt_iff_limsup_le\n\n"}
{"name":"upperSemicontinuousAt_iff_limsup_le","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nx : α\nγ : Type u_3\ninst✝¹ : CompleteLinearOrder γ\ninst✝ : DenselyOrdered γ\nf : α → γ\n⊢ Iff (UpperSemicontinuousAt f x) (LE.le (Filter.limsup f (nhds x)) (f x))","decl":"theorem upperSemicontinuousAt_iff_limsup_le {f : α → γ} :\n    UpperSemicontinuousAt f x ↔ limsup f (𝓝 x) ≤ f x :=\n  lowerSemicontinuousAt_iff_le_liminf (γ := γᵒᵈ)\n\n"}
{"name":"UpperSemicontinuousAt.limsup_le","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nx : α\nγ : Type u_3\ninst✝¹ : CompleteLinearOrder γ\ninst✝ : DenselyOrdered γ\nf : α → γ\na✝ : UpperSemicontinuousAt f x\n⊢ LE.le (Filter.limsup f (nhds x)) (f x)","decl":"alias ⟨UpperSemicontinuousAt.limsup_le, _⟩ := upperSemicontinuousAt_iff_limsup_le\n\n"}
{"name":"upperSemicontinuous_iff_limsup_le","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nγ : Type u_3\ninst✝¹ : CompleteLinearOrder γ\ninst✝ : DenselyOrdered γ\nf : α → γ\n⊢ Iff (UpperSemicontinuous f) (∀ (x : α), LE.le (Filter.limsup f (nhds x)) (f x))","decl":"theorem upperSemicontinuous_iff_limsup_le {f : α → γ} :\n    UpperSemicontinuous f ↔ ∀ x, limsup f (𝓝 x) ≤ f x :=\n  lowerSemicontinuous_iff_le_liminf (γ := γᵒᵈ)\n\n"}
{"name":"UpperSemicontinuous.limsup_le","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nγ : Type u_3\ninst✝¹ : CompleteLinearOrder γ\ninst✝ : DenselyOrdered γ\nf : α → γ\na✝ : UpperSemicontinuous f\nx : α\n⊢ LE.le (Filter.limsup f (nhds x)) (f x)","decl":"alias ⟨UpperSemicontinuous.limsup_le, _⟩ := upperSemicontinuous_iff_limsup_le\n\n"}
{"name":"upperSemicontinuousOn_iff_limsup_le","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\ns : Set α\nγ : Type u_3\ninst✝¹ : CompleteLinearOrder γ\ninst✝ : DenselyOrdered γ\nf : α → γ\n⊢ Iff (UpperSemicontinuousOn f s) (∀ (x : α), Membership.mem s x → LE.le (Filter.limsup f (nhdsWithin x s)) (f x))","decl":"theorem upperSemicontinuousOn_iff_limsup_le {f : α → γ} :\n    UpperSemicontinuousOn f s ↔ ∀ x ∈ s, limsup f (𝓝[s] x) ≤ f x :=\n  lowerSemicontinuousOn_iff_le_liminf (γ := γᵒᵈ)\n\n"}
{"name":"UpperSemicontinuousOn.limsup_le","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\ns : Set α\nγ : Type u_3\ninst✝¹ : CompleteLinearOrder γ\ninst✝ : DenselyOrdered γ\nf : α → γ\na✝¹ : UpperSemicontinuousOn f s\nx : α\na✝ : Membership.mem s x\n⊢ LE.le (Filter.limsup f (nhdsWithin x s)) (f x)","decl":"alias ⟨UpperSemicontinuousOn.limsup_le, _⟩ := upperSemicontinuousOn_iff_limsup_le\n\n"}
{"name":"upperSemicontinuous_iff_IsClosed_hypograph","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁴ : TopologicalSpace α\nγ : Type u_3\ninst✝³ : CompleteLinearOrder γ\ninst✝² : DenselyOrdered γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderTopology γ\nf : α → γ\n⊢ Iff (UpperSemicontinuous f) (IsClosed (setOf fun p => LE.le p.2 (f p.1)))","decl":"theorem upperSemicontinuous_iff_IsClosed_hypograph {f : α → γ} :\n    UpperSemicontinuous f ↔ IsClosed {p : α × γ | p.2 ≤ f p.1} :=\n  lowerSemicontinuous_iff_isClosed_epigraph (γ := γᵒᵈ)\n\n"}
{"name":"UpperSemicontinuous.IsClosed_hypograph","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁴ : TopologicalSpace α\nγ : Type u_3\ninst✝³ : CompleteLinearOrder γ\ninst✝² : DenselyOrdered γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderTopology γ\nf : α → γ\na✝ : UpperSemicontinuous f\n⊢ IsClosed (setOf fun p => LE.le p.2 (f p.1))","decl":"alias ⟨UpperSemicontinuous.IsClosed_hypograph, _⟩ := upperSemicontinuous_iff_IsClosed_hypograph\n\n"}
{"name":"ContinuousAt.comp_upperSemicontinuousWithinAt","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁶ : TopologicalSpace α\nx : α\ns : Set α\nγ : Type u_3\ninst✝⁵ : LinearOrder γ\ninst✝⁴ : TopologicalSpace γ\ninst✝³ : OrderTopology γ\nδ : Type u_4\ninst✝² : LinearOrder δ\ninst✝¹ : TopologicalSpace δ\ninst✝ : OrderTopology δ\ng : γ → δ\nf : α → γ\nhg : ContinuousAt g (f x)\nhf : UpperSemicontinuousWithinAt f s x\ngmon : Monotone g\n⊢ UpperSemicontinuousWithinAt (Function.comp g f) s x","decl":"theorem ContinuousAt.comp_upperSemicontinuousWithinAt {g : γ → δ} {f : α → γ}\n    (hg : ContinuousAt g (f x)) (hf : UpperSemicontinuousWithinAt f s x) (gmon : Monotone g) :\n    UpperSemicontinuousWithinAt (g ∘ f) s x :=\n  @ContinuousAt.comp_lowerSemicontinuousWithinAt α _ x s γᵒᵈ _ _ _ δᵒᵈ _ _ _ g f hg hf gmon.dual\n\n"}
{"name":"ContinuousAt.comp_upperSemicontinuousAt","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁶ : TopologicalSpace α\nx : α\nγ : Type u_3\ninst✝⁵ : LinearOrder γ\ninst✝⁴ : TopologicalSpace γ\ninst✝³ : OrderTopology γ\nδ : Type u_4\ninst✝² : LinearOrder δ\ninst✝¹ : TopologicalSpace δ\ninst✝ : OrderTopology δ\ng : γ → δ\nf : α → γ\nhg : ContinuousAt g (f x)\nhf : UpperSemicontinuousAt f x\ngmon : Monotone g\n⊢ UpperSemicontinuousAt (Function.comp g f) x","decl":"theorem ContinuousAt.comp_upperSemicontinuousAt {g : γ → δ} {f : α → γ} (hg : ContinuousAt g (f x))\n    (hf : UpperSemicontinuousAt f x) (gmon : Monotone g) : UpperSemicontinuousAt (g ∘ f) x :=\n  @ContinuousAt.comp_lowerSemicontinuousAt α _ x γᵒᵈ _ _ _ δᵒᵈ _ _ _ g f hg hf gmon.dual\n\n"}
{"name":"Continuous.comp_upperSemicontinuousOn","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁶ : TopologicalSpace α\ns : Set α\nγ : Type u_3\ninst✝⁵ : LinearOrder γ\ninst✝⁴ : TopologicalSpace γ\ninst✝³ : OrderTopology γ\nδ : Type u_4\ninst✝² : LinearOrder δ\ninst✝¹ : TopologicalSpace δ\ninst✝ : OrderTopology δ\ng : γ → δ\nf : α → γ\nhg : Continuous g\nhf : UpperSemicontinuousOn f s\ngmon : Monotone g\n⊢ UpperSemicontinuousOn (Function.comp g f) s","decl":"theorem Continuous.comp_upperSemicontinuousOn {g : γ → δ} {f : α → γ} (hg : Continuous g)\n    (hf : UpperSemicontinuousOn f s) (gmon : Monotone g) : UpperSemicontinuousOn (g ∘ f) s :=\n  fun x hx => hg.continuousAt.comp_upperSemicontinuousWithinAt (hf x hx) gmon\n\n"}
{"name":"Continuous.comp_upperSemicontinuous","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁶ : TopologicalSpace α\nγ : Type u_3\ninst✝⁵ : LinearOrder γ\ninst✝⁴ : TopologicalSpace γ\ninst✝³ : OrderTopology γ\nδ : Type u_4\ninst✝² : LinearOrder δ\ninst✝¹ : TopologicalSpace δ\ninst✝ : OrderTopology δ\ng : γ → δ\nf : α → γ\nhg : Continuous g\nhf : UpperSemicontinuous f\ngmon : Monotone g\n⊢ UpperSemicontinuous (Function.comp g f)","decl":"theorem Continuous.comp_upperSemicontinuous {g : γ → δ} {f : α → γ} (hg : Continuous g)\n    (hf : UpperSemicontinuous f) (gmon : Monotone g) : UpperSemicontinuous (g ∘ f) := fun x =>\n  hg.continuousAt.comp_upperSemicontinuousAt (hf x) gmon\n\n"}
{"name":"ContinuousAt.comp_upperSemicontinuousWithinAt_antitone","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁶ : TopologicalSpace α\nx : α\ns : Set α\nγ : Type u_3\ninst✝⁵ : LinearOrder γ\ninst✝⁴ : TopologicalSpace γ\ninst✝³ : OrderTopology γ\nδ : Type u_4\ninst✝² : LinearOrder δ\ninst✝¹ : TopologicalSpace δ\ninst✝ : OrderTopology δ\ng : γ → δ\nf : α → γ\nhg : ContinuousAt g (f x)\nhf : UpperSemicontinuousWithinAt f s x\ngmon : Antitone g\n⊢ LowerSemicontinuousWithinAt (Function.comp g f) s x","decl":"theorem ContinuousAt.comp_upperSemicontinuousWithinAt_antitone {g : γ → δ} {f : α → γ}\n    (hg : ContinuousAt g (f x)) (hf : UpperSemicontinuousWithinAt f s x) (gmon : Antitone g) :\n    LowerSemicontinuousWithinAt (g ∘ f) s x :=\n  @ContinuousAt.comp_upperSemicontinuousWithinAt α _ x s γ _ _ _ δᵒᵈ _ _ _ g f hg hf gmon\n\n"}
{"name":"ContinuousAt.comp_upperSemicontinuousAt_antitone","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁶ : TopologicalSpace α\nx : α\nγ : Type u_3\ninst✝⁵ : LinearOrder γ\ninst✝⁴ : TopologicalSpace γ\ninst✝³ : OrderTopology γ\nδ : Type u_4\ninst✝² : LinearOrder δ\ninst✝¹ : TopologicalSpace δ\ninst✝ : OrderTopology δ\ng : γ → δ\nf : α → γ\nhg : ContinuousAt g (f x)\nhf : UpperSemicontinuousAt f x\ngmon : Antitone g\n⊢ LowerSemicontinuousAt (Function.comp g f) x","decl":"theorem ContinuousAt.comp_upperSemicontinuousAt_antitone {g : γ → δ} {f : α → γ}\n    (hg : ContinuousAt g (f x)) (hf : UpperSemicontinuousAt f x) (gmon : Antitone g) :\n    LowerSemicontinuousAt (g ∘ f) x :=\n  @ContinuousAt.comp_upperSemicontinuousAt α _ x γ _ _ _ δᵒᵈ _ _ _ g f hg hf gmon\n\n"}
{"name":"Continuous.comp_upperSemicontinuousOn_antitone","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁶ : TopologicalSpace α\ns : Set α\nγ : Type u_3\ninst✝⁵ : LinearOrder γ\ninst✝⁴ : TopologicalSpace γ\ninst✝³ : OrderTopology γ\nδ : Type u_4\ninst✝² : LinearOrder δ\ninst✝¹ : TopologicalSpace δ\ninst✝ : OrderTopology δ\ng : γ → δ\nf : α → γ\nhg : Continuous g\nhf : UpperSemicontinuousOn f s\ngmon : Antitone g\n⊢ LowerSemicontinuousOn (Function.comp g f) s","decl":"theorem Continuous.comp_upperSemicontinuousOn_antitone {g : γ → δ} {f : α → γ} (hg : Continuous g)\n    (hf : UpperSemicontinuousOn f s) (gmon : Antitone g) : LowerSemicontinuousOn (g ∘ f) s :=\n  fun x hx => hg.continuousAt.comp_upperSemicontinuousWithinAt_antitone (hf x hx) gmon\n\n"}
{"name":"Continuous.comp_upperSemicontinuous_antitone","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁶ : TopologicalSpace α\nγ : Type u_3\ninst✝⁵ : LinearOrder γ\ninst✝⁴ : TopologicalSpace γ\ninst✝³ : OrderTopology γ\nδ : Type u_4\ninst✝² : LinearOrder δ\ninst✝¹ : TopologicalSpace δ\ninst✝ : OrderTopology δ\ng : γ → δ\nf : α → γ\nhg : Continuous g\nhf : UpperSemicontinuous f\ngmon : Antitone g\n⊢ LowerSemicontinuous (Function.comp g f)","decl":"theorem Continuous.comp_upperSemicontinuous_antitone {g : γ → δ} {f : α → γ} (hg : Continuous g)\n    (hf : UpperSemicontinuous f) (gmon : Antitone g) : LowerSemicontinuous (g ∘ f) := fun x =>\n  hg.continuousAt.comp_upperSemicontinuousAt_antitone (hf x) gmon\n\n"}
{"name":"UpperSemicontinuousAt.comp_continuousAt","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nβ : Type u_2\ninst✝¹ : Preorder β\nι : Type u_5\ninst✝ : TopologicalSpace ι\nf : α → β\ng : ι → α\nx : ι\nhf : UpperSemicontinuousAt f (g x)\nhg : ContinuousAt g x\n⊢ UpperSemicontinuousAt (fun x => f (g x)) x","decl":"theorem UpperSemicontinuousAt.comp_continuousAt {f : α → β} {g : ι → α} {x : ι}\n    (hf : UpperSemicontinuousAt f (g x)) (hg : ContinuousAt g x) :\n    UpperSemicontinuousAt (fun x ↦ f (g x)) x :=\n  fun _ lt ↦ hg.eventually (hf _ lt)\n\n"}
{"name":"UpperSemicontinuousAt.comp_continuousAt_of_eq","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nβ : Type u_2\ninst✝¹ : Preorder β\nι : Type u_5\ninst✝ : TopologicalSpace ι\nf : α → β\ng : ι → α\ny : α\nx : ι\nhf : UpperSemicontinuousAt f y\nhg : ContinuousAt g x\nhy : Eq (g x) y\n⊢ UpperSemicontinuousAt (fun x => f (g x)) x","decl":"theorem UpperSemicontinuousAt.comp_continuousAt_of_eq {f : α → β} {g : ι → α} {y : α} {x : ι}\n    (hf : UpperSemicontinuousAt f y) (hg : ContinuousAt g x) (hy : g x = y) :\n    UpperSemicontinuousAt (fun x ↦ f (g x)) x := by\n  rw [← hy] at hf\n  exact comp_continuousAt hf hg\n\n"}
{"name":"UpperSemicontinuous.comp_continuous","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\nβ : Type u_2\ninst✝¹ : Preorder β\nι : Type u_5\ninst✝ : TopologicalSpace ι\nf : α → β\ng : ι → α\nhf : UpperSemicontinuous f\nhg : Continuous g\n⊢ UpperSemicontinuous fun x => f (g x)","decl":"theorem UpperSemicontinuous.comp_continuous {f : α → β} {g : ι → α}\n    (hf : UpperSemicontinuous f) (hg : Continuous g) : UpperSemicontinuous fun x ↦ f (g x) :=\n  fun x ↦ (hf (g x)).comp_continuousAt hg.continuousAt\n\n"}
{"name":"UpperSemicontinuousWithinAt.add'","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\nx : α\ns : Set α\nγ : Type u_4\ninst✝² : LinearOrderedAddCommMonoid γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderTopology γ\nf g : α → γ\nhf : UpperSemicontinuousWithinAt f s x\nhg : UpperSemicontinuousWithinAt g s x\nhcont : ContinuousAt (fun p => HAdd.hAdd p.1 p.2) { fst := f x, snd := g x }\n⊢ UpperSemicontinuousWithinAt (fun z => HAdd.hAdd (f z) (g z)) s x","decl":"/-- The sum of two upper semicontinuous functions is upper semicontinuous. Formulated with an\nexplicit continuity assumption on addition, for application to `EReal`. The unprimed version of\nthe lemma uses `[ContinuousAdd]`. -/\ntheorem UpperSemicontinuousWithinAt.add' {f g : α → γ} (hf : UpperSemicontinuousWithinAt f s x)\n    (hg : UpperSemicontinuousWithinAt g s x)\n    (hcont : ContinuousAt (fun p : γ × γ => p.1 + p.2) (f x, g x)) :\n    UpperSemicontinuousWithinAt (fun z => f z + g z) s x :=\n  @LowerSemicontinuousWithinAt.add' α _ x s γᵒᵈ _ _ _ _ _ hf hg hcont\n\n"}
{"name":"UpperSemicontinuousAt.add'","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\nx : α\nγ : Type u_4\ninst✝² : LinearOrderedAddCommMonoid γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderTopology γ\nf g : α → γ\nhf : UpperSemicontinuousAt f x\nhg : UpperSemicontinuousAt g x\nhcont : ContinuousAt (fun p => HAdd.hAdd p.1 p.2) { fst := f x, snd := g x }\n⊢ UpperSemicontinuousAt (fun z => HAdd.hAdd (f z) (g z)) x","decl":"/-- The sum of two upper semicontinuous functions is upper semicontinuous. Formulated with an\nexplicit continuity assumption on addition, for application to `EReal`. The unprimed version of\nthe lemma uses `[ContinuousAdd]`. -/\ntheorem UpperSemicontinuousAt.add' {f g : α → γ} (hf : UpperSemicontinuousAt f x)\n    (hg : UpperSemicontinuousAt g x)\n    (hcont : ContinuousAt (fun p : γ × γ => p.1 + p.2) (f x, g x)) :\n    UpperSemicontinuousAt (fun z => f z + g z) x := by\n  simp_rw [← upperSemicontinuousWithinAt_univ_iff] at *\n  exact hf.add' hg hcont\n\n"}
{"name":"UpperSemicontinuousOn.add'","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\ns : Set α\nγ : Type u_4\ninst✝² : LinearOrderedAddCommMonoid γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderTopology γ\nf g : α → γ\nhf : UpperSemicontinuousOn f s\nhg : UpperSemicontinuousOn g s\nhcont : ∀ (x : α), Membership.mem s x → ContinuousAt (fun p => HAdd.hAdd p.1 p.2) { fst := f x, snd := g x }\n⊢ UpperSemicontinuousOn (fun z => HAdd.hAdd (f z) (g z)) s","decl":"/-- The sum of two upper semicontinuous functions is upper semicontinuous. Formulated with an\nexplicit continuity assumption on addition, for application to `EReal`. The unprimed version of\nthe lemma uses `[ContinuousAdd]`. -/\ntheorem UpperSemicontinuousOn.add' {f g : α → γ} (hf : UpperSemicontinuousOn f s)\n    (hg : UpperSemicontinuousOn g s)\n    (hcont : ∀ x ∈ s, ContinuousAt (fun p : γ × γ => p.1 + p.2) (f x, g x)) :\n    UpperSemicontinuousOn (fun z => f z + g z) s := fun x hx =>\n  (hf x hx).add' (hg x hx) (hcont x hx)\n\n"}
{"name":"UpperSemicontinuous.add'","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\nγ : Type u_4\ninst✝² : LinearOrderedAddCommMonoid γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderTopology γ\nf g : α → γ\nhf : UpperSemicontinuous f\nhg : UpperSemicontinuous g\nhcont : ∀ (x : α), ContinuousAt (fun p => HAdd.hAdd p.1 p.2) { fst := f x, snd := g x }\n⊢ UpperSemicontinuous fun z => HAdd.hAdd (f z) (g z)","decl":"/-- The sum of two upper semicontinuous functions is upper semicontinuous. Formulated with an\nexplicit continuity assumption on addition, for application to `EReal`. The unprimed version of\nthe lemma uses `[ContinuousAdd]`. -/\ntheorem UpperSemicontinuous.add' {f g : α → γ} (hf : UpperSemicontinuous f)\n    (hg : UpperSemicontinuous g)\n    (hcont : ∀ x, ContinuousAt (fun p : γ × γ => p.1 + p.2) (f x, g x)) :\n    UpperSemicontinuous fun z => f z + g z := fun x => (hf x).add' (hg x) (hcont x)\n\n"}
{"name":"UpperSemicontinuousWithinAt.add","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁴ : TopologicalSpace α\nx : α\ns : Set α\nγ : Type u_4\ninst✝³ : LinearOrderedAddCommMonoid γ\ninst✝² : TopologicalSpace γ\ninst✝¹ : OrderTopology γ\ninst✝ : ContinuousAdd γ\nf g : α → γ\nhf : UpperSemicontinuousWithinAt f s x\nhg : UpperSemicontinuousWithinAt g s x\n⊢ UpperSemicontinuousWithinAt (fun z => HAdd.hAdd (f z) (g z)) s x","decl":"/-- The sum of two upper semicontinuous functions is upper semicontinuous. Formulated with\n`[ContinuousAdd]`. The primed version of the lemma uses an explicit continuity assumption on\naddition, for application to `EReal`. -/\ntheorem UpperSemicontinuousWithinAt.add {f g : α → γ} (hf : UpperSemicontinuousWithinAt f s x)\n    (hg : UpperSemicontinuousWithinAt g s x) :\n    UpperSemicontinuousWithinAt (fun z => f z + g z) s x :=\n  hf.add' hg continuous_add.continuousAt\n\n"}
{"name":"UpperSemicontinuousAt.add","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁴ : TopologicalSpace α\nx : α\nγ : Type u_4\ninst✝³ : LinearOrderedAddCommMonoid γ\ninst✝² : TopologicalSpace γ\ninst✝¹ : OrderTopology γ\ninst✝ : ContinuousAdd γ\nf g : α → γ\nhf : UpperSemicontinuousAt f x\nhg : UpperSemicontinuousAt g x\n⊢ UpperSemicontinuousAt (fun z => HAdd.hAdd (f z) (g z)) x","decl":"/-- The sum of two upper semicontinuous functions is upper semicontinuous. Formulated with\n`[ContinuousAdd]`. The primed version of the lemma uses an explicit continuity assumption on\naddition, for application to `EReal`. -/\ntheorem UpperSemicontinuousAt.add {f g : α → γ} (hf : UpperSemicontinuousAt f x)\n    (hg : UpperSemicontinuousAt g x) : UpperSemicontinuousAt (fun z => f z + g z) x :=\n  hf.add' hg continuous_add.continuousAt\n\n"}
{"name":"UpperSemicontinuousOn.add","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁴ : TopologicalSpace α\ns : Set α\nγ : Type u_4\ninst✝³ : LinearOrderedAddCommMonoid γ\ninst✝² : TopologicalSpace γ\ninst✝¹ : OrderTopology γ\ninst✝ : ContinuousAdd γ\nf g : α → γ\nhf : UpperSemicontinuousOn f s\nhg : UpperSemicontinuousOn g s\n⊢ UpperSemicontinuousOn (fun z => HAdd.hAdd (f z) (g z)) s","decl":"/-- The sum of two upper semicontinuous functions is upper semicontinuous. Formulated with\n`[ContinuousAdd]`. The primed version of the lemma uses an explicit continuity assumption on\naddition, for application to `EReal`. -/\ntheorem UpperSemicontinuousOn.add {f g : α → γ} (hf : UpperSemicontinuousOn f s)\n    (hg : UpperSemicontinuousOn g s) : UpperSemicontinuousOn (fun z => f z + g z) s :=\n  hf.add' hg fun _x _hx => continuous_add.continuousAt\n\n"}
{"name":"UpperSemicontinuous.add","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁴ : TopologicalSpace α\nγ : Type u_4\ninst✝³ : LinearOrderedAddCommMonoid γ\ninst✝² : TopologicalSpace γ\ninst✝¹ : OrderTopology γ\ninst✝ : ContinuousAdd γ\nf g : α → γ\nhf : UpperSemicontinuous f\nhg : UpperSemicontinuous g\n⊢ UpperSemicontinuous fun z => HAdd.hAdd (f z) (g z)","decl":"/-- The sum of two upper semicontinuous functions is upper semicontinuous. Formulated with\n`[ContinuousAdd]`. The primed version of the lemma uses an explicit continuity assumption on\naddition, for application to `EReal`. -/\ntheorem UpperSemicontinuous.add {f g : α → γ} (hf : UpperSemicontinuous f)\n    (hg : UpperSemicontinuous g) : UpperSemicontinuous fun z => f z + g z :=\n  hf.add' hg fun _x => continuous_add.continuousAt\n\n"}
{"name":"upperSemicontinuousWithinAt_sum","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁴ : TopologicalSpace α\nx : α\ns : Set α\nι : Type u_3\nγ : Type u_4\ninst✝³ : LinearOrderedAddCommMonoid γ\ninst✝² : TopologicalSpace γ\ninst✝¹ : OrderTopology γ\ninst✝ : ContinuousAdd γ\nf : ι → α → γ\na : Finset ι\nha : ∀ (i : ι), Membership.mem a i → UpperSemicontinuousWithinAt (f i) s x\n⊢ UpperSemicontinuousWithinAt (fun z => a.sum fun i => f i z) s x","decl":"theorem upperSemicontinuousWithinAt_sum {f : ι → α → γ} {a : Finset ι}\n    (ha : ∀ i ∈ a, UpperSemicontinuousWithinAt (f i) s x) :\n    UpperSemicontinuousWithinAt (fun z => ∑ i ∈ a, f i z) s x :=\n  @lowerSemicontinuousWithinAt_sum α _ x s ι γᵒᵈ _ _ _ _ f a ha\n\n"}
{"name":"upperSemicontinuousAt_sum","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁴ : TopologicalSpace α\nx : α\nι : Type u_3\nγ : Type u_4\ninst✝³ : LinearOrderedAddCommMonoid γ\ninst✝² : TopologicalSpace γ\ninst✝¹ : OrderTopology γ\ninst✝ : ContinuousAdd γ\nf : ι → α → γ\na : Finset ι\nha : ∀ (i : ι), Membership.mem a i → UpperSemicontinuousAt (f i) x\n⊢ UpperSemicontinuousAt (fun z => a.sum fun i => f i z) x","decl":"theorem upperSemicontinuousAt_sum {f : ι → α → γ} {a : Finset ι}\n    (ha : ∀ i ∈ a, UpperSemicontinuousAt (f i) x) :\n    UpperSemicontinuousAt (fun z => ∑ i ∈ a, f i z) x := by\n  simp_rw [← upperSemicontinuousWithinAt_univ_iff] at *\n  exact upperSemicontinuousWithinAt_sum ha\n\n"}
{"name":"upperSemicontinuousOn_sum","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁴ : TopologicalSpace α\ns : Set α\nι : Type u_3\nγ : Type u_4\ninst✝³ : LinearOrderedAddCommMonoid γ\ninst✝² : TopologicalSpace γ\ninst✝¹ : OrderTopology γ\ninst✝ : ContinuousAdd γ\nf : ι → α → γ\na : Finset ι\nha : ∀ (i : ι), Membership.mem a i → UpperSemicontinuousOn (f i) s\n⊢ UpperSemicontinuousOn (fun z => a.sum fun i => f i z) s","decl":"theorem upperSemicontinuousOn_sum {f : ι → α → γ} {a : Finset ι}\n    (ha : ∀ i ∈ a, UpperSemicontinuousOn (f i) s) :\n    UpperSemicontinuousOn (fun z => ∑ i ∈ a, f i z) s := fun x hx =>\n  upperSemicontinuousWithinAt_sum fun i hi => ha i hi x hx\n\n"}
{"name":"upperSemicontinuous_sum","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝⁴ : TopologicalSpace α\nι : Type u_3\nγ : Type u_4\ninst✝³ : LinearOrderedAddCommMonoid γ\ninst✝² : TopologicalSpace γ\ninst✝¹ : OrderTopology γ\ninst✝ : ContinuousAdd γ\nf : ι → α → γ\na : Finset ι\nha : ∀ (i : ι), Membership.mem a i → UpperSemicontinuous (f i)\n⊢ UpperSemicontinuous fun z => a.sum fun i => f i z","decl":"theorem upperSemicontinuous_sum {f : ι → α → γ} {a : Finset ι}\n    (ha : ∀ i ∈ a, UpperSemicontinuous (f i)) : UpperSemicontinuous fun z => ∑ i ∈ a, f i z :=\n  fun x => upperSemicontinuousAt_sum fun i hi => ha i hi x\n\n"}
{"name":"upperSemicontinuousWithinAt_ciInf","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nx : α\ns : Set α\nι : Sort u_3\nδ' : Type u_5\ninst✝ : ConditionallyCompleteLinearOrder δ'\nf : ι → α → δ'\nbdd : Filter.Eventually (fun y => BddBelow (Set.range fun i => f i y)) (nhdsWithin x s)\nh : ∀ (i : ι), UpperSemicontinuousWithinAt (f i) s x\n⊢ UpperSemicontinuousWithinAt (fun x' => iInf fun i => f i x') s x","decl":"theorem upperSemicontinuousWithinAt_ciInf {f : ι → α → δ'}\n    (bdd : ∀ᶠ y in 𝓝[s] x, BddBelow (range fun i => f i y))\n    (h : ∀ i, UpperSemicontinuousWithinAt (f i) s x) :\n    UpperSemicontinuousWithinAt (fun x' => ⨅ i, f i x') s x :=\n  @lowerSemicontinuousWithinAt_ciSup α _ x s ι δ'ᵒᵈ _ f bdd h\n\n"}
{"name":"upperSemicontinuousWithinAt_iInf","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nx : α\ns : Set α\nι : Sort u_3\nδ : Type u_4\ninst✝ : CompleteLinearOrder δ\nf : ι → α → δ\nh : ∀ (i : ι), UpperSemicontinuousWithinAt (f i) s x\n⊢ UpperSemicontinuousWithinAt (fun x' => iInf fun i => f i x') s x","decl":"theorem upperSemicontinuousWithinAt_iInf {f : ι → α → δ}\n    (h : ∀ i, UpperSemicontinuousWithinAt (f i) s x) :\n    UpperSemicontinuousWithinAt (fun x' => ⨅ i, f i x') s x :=\n  @lowerSemicontinuousWithinAt_iSup α _ x s ι δᵒᵈ _ f h\n\n"}
{"name":"upperSemicontinuousWithinAt_biInf","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nx : α\ns : Set α\nι : Sort u_3\nδ : Type u_4\ninst✝ : CompleteLinearOrder δ\np : ι → Prop\nf : (i : ι) → p i → α → δ\nh : ∀ (i : ι) (hi : p i), UpperSemicontinuousWithinAt (f i hi) s x\n⊢ UpperSemicontinuousWithinAt (fun x' => iInf fun i => iInf fun hi => f i hi x') s x","decl":"theorem upperSemicontinuousWithinAt_biInf {p : ι → Prop} {f : ∀ i, p i → α → δ}\n    (h : ∀ i hi, UpperSemicontinuousWithinAt (f i hi) s x) :\n    UpperSemicontinuousWithinAt (fun x' => ⨅ (i) (hi), f i hi x') s x :=\n  upperSemicontinuousWithinAt_iInf fun i => upperSemicontinuousWithinAt_iInf fun hi => h i hi\n\n"}
{"name":"upperSemicontinuousAt_ciInf","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nx : α\nι : Sort u_3\nδ' : Type u_5\ninst✝ : ConditionallyCompleteLinearOrder δ'\nf : ι → α → δ'\nbdd : Filter.Eventually (fun y => BddBelow (Set.range fun i => f i y)) (nhds x)\nh : ∀ (i : ι), UpperSemicontinuousAt (f i) x\n⊢ UpperSemicontinuousAt (fun x' => iInf fun i => f i x') x","decl":"theorem upperSemicontinuousAt_ciInf {f : ι → α → δ'}\n    (bdd : ∀ᶠ y in 𝓝 x, BddBelow (range fun i => f i y)) (h : ∀ i, UpperSemicontinuousAt (f i) x) :\n    UpperSemicontinuousAt (fun x' => ⨅ i, f i x') x :=\n  @lowerSemicontinuousAt_ciSup α _ x ι δ'ᵒᵈ _ f bdd h\n\n"}
{"name":"upperSemicontinuousAt_iInf","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nx : α\nι : Sort u_3\nδ : Type u_4\ninst✝ : CompleteLinearOrder δ\nf : ι → α → δ\nh : ∀ (i : ι), UpperSemicontinuousAt (f i) x\n⊢ UpperSemicontinuousAt (fun x' => iInf fun i => f i x') x","decl":"theorem upperSemicontinuousAt_iInf {f : ι → α → δ} (h : ∀ i, UpperSemicontinuousAt (f i) x) :\n    UpperSemicontinuousAt (fun x' => ⨅ i, f i x') x :=\n  @lowerSemicontinuousAt_iSup α _ x ι δᵒᵈ _ f h\n\n"}
{"name":"upperSemicontinuousAt_biInf","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nx : α\nι : Sort u_3\nδ : Type u_4\ninst✝ : CompleteLinearOrder δ\np : ι → Prop\nf : (i : ι) → p i → α → δ\nh : ∀ (i : ι) (hi : p i), UpperSemicontinuousAt (f i hi) x\n⊢ UpperSemicontinuousAt (fun x' => iInf fun i => iInf fun hi => f i hi x') x","decl":"theorem upperSemicontinuousAt_biInf {p : ι → Prop} {f : ∀ i, p i → α → δ}\n    (h : ∀ i hi, UpperSemicontinuousAt (f i hi) x) :\n    UpperSemicontinuousAt (fun x' => ⨅ (i) (hi), f i hi x') x :=\n  upperSemicontinuousAt_iInf fun i => upperSemicontinuousAt_iInf fun hi => h i hi\n\n"}
{"name":"upperSemicontinuousOn_ciInf","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\ns : Set α\nι : Sort u_3\nδ' : Type u_5\ninst✝ : ConditionallyCompleteLinearOrder δ'\nf : ι → α → δ'\nbdd : ∀ (x : α), Membership.mem s x → BddBelow (Set.range fun i => f i x)\nh : ∀ (i : ι), UpperSemicontinuousOn (f i) s\n⊢ UpperSemicontinuousOn (fun x' => iInf fun i => f i x') s","decl":"theorem upperSemicontinuousOn_ciInf {f : ι → α → δ'}\n    (bdd : ∀ x ∈ s, BddBelow (range fun i => f i x)) (h : ∀ i, UpperSemicontinuousOn (f i) s) :\n    UpperSemicontinuousOn (fun x' => ⨅ i, f i x') s := fun x hx =>\n  upperSemicontinuousWithinAt_ciInf (eventually_nhdsWithin_of_forall bdd) fun i => h i x hx\n\n"}
{"name":"upperSemicontinuousOn_iInf","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\ns : Set α\nι : Sort u_3\nδ : Type u_4\ninst✝ : CompleteLinearOrder δ\nf : ι → α → δ\nh : ∀ (i : ι), UpperSemicontinuousOn (f i) s\n⊢ UpperSemicontinuousOn (fun x' => iInf fun i => f i x') s","decl":"theorem upperSemicontinuousOn_iInf {f : ι → α → δ} (h : ∀ i, UpperSemicontinuousOn (f i) s) :\n    UpperSemicontinuousOn (fun x' => ⨅ i, f i x') s := fun x hx =>\n  upperSemicontinuousWithinAt_iInf fun i => h i x hx\n\n"}
{"name":"upperSemicontinuousOn_biInf","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\ns : Set α\nι : Sort u_3\nδ : Type u_4\ninst✝ : CompleteLinearOrder δ\np : ι → Prop\nf : (i : ι) → p i → α → δ\nh : ∀ (i : ι) (hi : p i), UpperSemicontinuousOn (f i hi) s\n⊢ UpperSemicontinuousOn (fun x' => iInf fun i => iInf fun hi => f i hi x') s","decl":"theorem upperSemicontinuousOn_biInf {p : ι → Prop} {f : ∀ i, p i → α → δ}\n    (h : ∀ i hi, UpperSemicontinuousOn (f i hi) s) :\n    UpperSemicontinuousOn (fun x' => ⨅ (i) (hi), f i hi x') s :=\n  upperSemicontinuousOn_iInf fun i => upperSemicontinuousOn_iInf fun hi => h i hi\n\n"}
{"name":"upperSemicontinuous_ciInf","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nι : Sort u_3\nδ' : Type u_5\ninst✝ : ConditionallyCompleteLinearOrder δ'\nf : ι → α → δ'\nbdd : ∀ (x : α), BddBelow (Set.range fun i => f i x)\nh : ∀ (i : ι), UpperSemicontinuous (f i)\n⊢ UpperSemicontinuous fun x' => iInf fun i => f i x'","decl":"theorem upperSemicontinuous_ciInf {f : ι → α → δ'} (bdd : ∀ x, BddBelow (range fun i => f i x))\n    (h : ∀ i, UpperSemicontinuous (f i)) : UpperSemicontinuous fun x' => ⨅ i, f i x' := fun x =>\n  upperSemicontinuousAt_ciInf (Eventually.of_forall bdd) fun i => h i x\n\n"}
{"name":"upperSemicontinuous_iInf","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nι : Sort u_3\nδ : Type u_4\ninst✝ : CompleteLinearOrder δ\nf : ι → α → δ\nh : ∀ (i : ι), UpperSemicontinuous (f i)\n⊢ UpperSemicontinuous fun x' => iInf fun i => f i x'","decl":"theorem upperSemicontinuous_iInf {f : ι → α → δ} (h : ∀ i, UpperSemicontinuous (f i)) :\n    UpperSemicontinuous fun x' => ⨅ i, f i x' := fun x => upperSemicontinuousAt_iInf fun i => h i x\n\n"}
{"name":"upperSemicontinuous_biInf","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nι : Sort u_3\nδ : Type u_4\ninst✝ : CompleteLinearOrder δ\np : ι → Prop\nf : (i : ι) → p i → α → δ\nh : ∀ (i : ι) (hi : p i), UpperSemicontinuous (f i hi)\n⊢ UpperSemicontinuous fun x' => iInf fun i => iInf fun hi => f i hi x'","decl":"theorem upperSemicontinuous_biInf {p : ι → Prop} {f : ∀ i, p i → α → δ}\n    (h : ∀ i hi, UpperSemicontinuous (f i hi)) :\n    UpperSemicontinuous fun x' => ⨅ (i) (hi), f i hi x' :=\n  upperSemicontinuous_iInf fun i => upperSemicontinuous_iInf fun hi => h i hi\n\n"}
{"name":"continuousWithinAt_iff_lower_upperSemicontinuousWithinAt","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\nx : α\ns : Set α\nγ : Type u_3\ninst✝² : LinearOrder γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderTopology γ\nf : α → γ\n⊢ Iff (ContinuousWithinAt f s x) (And (LowerSemicontinuousWithinAt f s x) (UpperSemicontinuousWithinAt f s x))","decl":"theorem continuousWithinAt_iff_lower_upperSemicontinuousWithinAt {f : α → γ} :\n    ContinuousWithinAt f s x ↔\n      LowerSemicontinuousWithinAt f s x ∧ UpperSemicontinuousWithinAt f s x := by\n  refine ⟨fun h => ⟨h.lowerSemicontinuousWithinAt, h.upperSemicontinuousWithinAt⟩, ?_⟩\n  rintro ⟨h₁, h₂⟩\n  intro v hv\n  simp only [Filter.mem_map]\n  by_cases Hl : ∃ l, l < f x\n  · rcases exists_Ioc_subset_of_mem_nhds hv Hl with ⟨l, lfx, hl⟩\n    by_cases Hu : ∃ u, f x < u\n    · rcases exists_Ico_subset_of_mem_nhds hv Hu with ⟨u, fxu, hu⟩\n      filter_upwards [h₁ l lfx, h₂ u fxu] with a lfa fau\n      cases' le_or_gt (f a) (f x) with h h\n      · exact hl ⟨lfa, h⟩\n      · exact hu ⟨le_of_lt h, fau⟩\n    · simp only [not_exists, not_lt] at Hu\n      filter_upwards [h₁ l lfx] with a lfa using hl ⟨lfa, Hu (f a)⟩\n  · simp only [not_exists, not_lt] at Hl\n    by_cases Hu : ∃ u, f x < u\n    · rcases exists_Ico_subset_of_mem_nhds hv Hu with ⟨u, fxu, hu⟩\n      filter_upwards [h₂ u fxu] with a lfa\n      apply hu\n      exact ⟨Hl (f a), lfa⟩\n    · simp only [not_exists, not_lt] at Hu\n      apply Filter.Eventually.of_forall\n      intro a\n      have : f a = f x := le_antisymm (Hu _) (Hl _)\n      rw [this]\n      exact mem_of_mem_nhds hv\n\n"}
{"name":"continuousAt_iff_lower_upperSemicontinuousAt","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\nx : α\nγ : Type u_3\ninst✝² : LinearOrder γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderTopology γ\nf : α → γ\n⊢ Iff (ContinuousAt f x) (And (LowerSemicontinuousAt f x) (UpperSemicontinuousAt f x))","decl":"theorem continuousAt_iff_lower_upperSemicontinuousAt {f : α → γ} :\n    ContinuousAt f x ↔ LowerSemicontinuousAt f x ∧ UpperSemicontinuousAt f x := by\n  simp_rw [← continuousWithinAt_univ, ← lowerSemicontinuousWithinAt_univ_iff, ←\n    upperSemicontinuousWithinAt_univ_iff, continuousWithinAt_iff_lower_upperSemicontinuousWithinAt]\n\n"}
{"name":"continuousOn_iff_lower_upperSemicontinuousOn","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\ns : Set α\nγ : Type u_3\ninst✝² : LinearOrder γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderTopology γ\nf : α → γ\n⊢ Iff (ContinuousOn f s) (And (LowerSemicontinuousOn f s) (UpperSemicontinuousOn f s))","decl":"theorem continuousOn_iff_lower_upperSemicontinuousOn {f : α → γ} :\n    ContinuousOn f s ↔ LowerSemicontinuousOn f s ∧ UpperSemicontinuousOn f s := by\n  simp only [ContinuousOn, continuousWithinAt_iff_lower_upperSemicontinuousWithinAt]\n  exact\n    ⟨fun H => ⟨fun x hx => (H x hx).1, fun x hx => (H x hx).2⟩, fun H x hx => ⟨H.1 x hx, H.2 x hx⟩⟩\n\n"}
{"name":"continuous_iff_lower_upperSemicontinuous","module":"Mathlib.Topology.Semicontinuous","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\nγ : Type u_3\ninst✝² : LinearOrder γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderTopology γ\nf : α → γ\n⊢ Iff (Continuous f) (And (LowerSemicontinuous f) (UpperSemicontinuous f))","decl":"theorem continuous_iff_lower_upperSemicontinuous {f : α → γ} :\n    Continuous f ↔ LowerSemicontinuous f ∧ UpperSemicontinuous f := by\n  simp_rw [continuous_iff_continuousOn_univ, continuousOn_iff_lower_upperSemicontinuousOn,\n    lowerSemicontinuousOn_univ_iff, upperSemicontinuousOn_univ_iff]\n\n"}
