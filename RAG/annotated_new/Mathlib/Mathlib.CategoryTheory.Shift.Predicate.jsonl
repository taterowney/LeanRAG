{"name":"CategoryTheory.predicateShift_iff","module":"Mathlib.CategoryTheory.Shift.Predicate","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_3, u_1} C\nP : C → Prop\nA : Type u_2\ninst✝¹ : AddMonoid A\ninst✝ : CategoryTheory.HasShift C A\na : A\nX : C\n⊢ Iff (CategoryTheory.PredicateShift P a X) (P ((CategoryTheory.shiftFunctor C a).obj X))","decl":"lemma predicateShift_iff (a : A) (X : C) : PredicateShift P a X ↔ P (X⟦a⟧) := Iff.rfl\n\n"}
{"name":"CategoryTheory.predicateShift_closedUnderIsomorphisms","module":"Mathlib.CategoryTheory.Shift.Predicate","initialProofState":"C : Type u_1\ninst✝³ : CategoryTheory.Category.{u_3, u_1} C\nP : C → Prop\nA : Type u_2\ninst✝² : AddMonoid A\ninst✝¹ : CategoryTheory.HasShift C A\na : A\ninst✝ : CategoryTheory.ClosedUnderIsomorphisms P\n⊢ CategoryTheory.ClosedUnderIsomorphisms (CategoryTheory.PredicateShift P a)","decl":"instance predicateShift_closedUnderIsomorphisms (a : A) [ClosedUnderIsomorphisms P] :\n    ClosedUnderIsomorphisms (PredicateShift P a) where\n  of_iso e hX := mem_of_iso P ((shiftFunctor C a).mapIso e) hX\n\n"}
{"name":"CategoryTheory.predicateShift_zero","module":"Mathlib.CategoryTheory.Shift.Predicate","initialProofState":"C : Type u_1\ninst✝³ : CategoryTheory.Category.{u_3, u_1} C\nP : C → Prop\nA : Type u_2\ninst✝² : AddMonoid A\ninst✝¹ : CategoryTheory.HasShift C A\ninst✝ : CategoryTheory.ClosedUnderIsomorphisms P\n⊢ Eq (CategoryTheory.PredicateShift P 0) P","decl":"@[simp]\nlemma predicateShift_zero [ClosedUnderIsomorphisms P] : PredicateShift P (0 : A) = P := by\n  ext X\n  exact mem_iff_of_iso P ((shiftFunctorZero C A).app X)\n\n"}
{"name":"CategoryTheory.predicateShift_predicateShift","module":"Mathlib.CategoryTheory.Shift.Predicate","initialProofState":"C : Type u_1\ninst✝³ : CategoryTheory.Category.{u_3, u_1} C\nP : C → Prop\nA : Type u_2\ninst✝² : AddMonoid A\ninst✝¹ : CategoryTheory.HasShift C A\na b c : A\nh : Eq (HAdd.hAdd a b) c\ninst✝ : CategoryTheory.ClosedUnderIsomorphisms P\n⊢ Eq (CategoryTheory.PredicateShift (CategoryTheory.PredicateShift P b) a) (CategoryTheory.PredicateShift P c)","decl":"lemma predicateShift_predicateShift (a b c : A) (h : a + b = c) [ClosedUnderIsomorphisms P] :\n    PredicateShift (PredicateShift P b) a = PredicateShift P c := by\n  ext X\n  exact mem_iff_of_iso _ ((shiftFunctorAdd' C a b c h).symm.app X)\n\n"}
