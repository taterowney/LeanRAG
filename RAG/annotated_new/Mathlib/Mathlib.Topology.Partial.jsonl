{"name":"rtendsto_nhds","module":"Mathlib.Topology.Partial","initialProofState":"X : Type u_1\nY : Type u_2\ninst✝ : TopologicalSpace X\nr : Rel Y X\nl : Filter Y\nx : X\n⊢ Iff (Filter.RTendsto r l (nhds x)) (∀ (s : Set X), IsOpen s → Membership.mem s x → Membership.mem l (r.core s))","decl":"theorem rtendsto_nhds {r : Rel Y X} {l : Filter Y} {x : X} :\n    RTendsto r l (𝓝 x) ↔ ∀ s, IsOpen s → x ∈ s → r.core s ∈ l :=\n  all_mem_nhds_filter _ _ (fun _s _t => id) _\n\n"}
{"name":"rtendsto'_nhds","module":"Mathlib.Topology.Partial","initialProofState":"X : Type u_1\nY : Type u_2\ninst✝ : TopologicalSpace X\nr : Rel Y X\nl : Filter Y\nx : X\n⊢ Iff (Filter.RTendsto' r l (nhds x)) (∀ (s : Set X), IsOpen s → Membership.mem s x → Membership.mem l (r.preimage s))","decl":"theorem rtendsto'_nhds {r : Rel Y X} {l : Filter Y} {x : X} :\n    RTendsto' r l (𝓝 x) ↔ ∀ s, IsOpen s → x ∈ s → r.preimage s ∈ l := by\n  rw [rtendsto'_def]\n  apply all_mem_nhds_filter\n  apply Rel.preimage_mono\n\n"}
{"name":"ptendsto_nhds","module":"Mathlib.Topology.Partial","initialProofState":"X : Type u_1\nY : Type u_2\ninst✝ : TopologicalSpace X\nf : PFun Y X\nl : Filter Y\nx : X\n⊢ Iff (Filter.PTendsto f l (nhds x)) (∀ (s : Set X), IsOpen s → Membership.mem s x → Membership.mem l (f.core s))","decl":"theorem ptendsto_nhds {f : Y →. X} {l : Filter Y} {x : X} :\n    PTendsto f l (𝓝 x) ↔ ∀ s, IsOpen s → x ∈ s → f.core s ∈ l :=\n  rtendsto_nhds\n\n"}
{"name":"ptendsto'_nhds","module":"Mathlib.Topology.Partial","initialProofState":"X : Type u_1\nY : Type u_2\ninst✝ : TopologicalSpace X\nf : PFun Y X\nl : Filter Y\nx : X\n⊢ Iff (Filter.PTendsto' f l (nhds x)) (∀ (s : Set X), IsOpen s → Membership.mem s x → Membership.mem l (f.preimage s))","decl":"theorem ptendsto'_nhds {f : Y →. X} {l : Filter Y} {x : X} :\n    PTendsto' f l (𝓝 x) ↔ ∀ s, IsOpen s → x ∈ s → f.preimage s ∈ l :=\n  rtendsto'_nhds\n\n"}
{"name":"open_dom_of_pcontinuous","module":"Mathlib.Topology.Partial","initialProofState":"X : Type u_1\nY : Type u_2\ninst✝¹ : TopologicalSpace X\ninst✝ : TopologicalSpace Y\nf : PFun X Y\nh : PContinuous f\n⊢ IsOpen f.Dom","decl":"theorem open_dom_of_pcontinuous {f : X →. Y} (h : PContinuous f) : IsOpen f.Dom := by\n  rw [← PFun.preimage_univ]; exact h _ isOpen_univ\n\n"}
{"name":"pcontinuous_iff'","module":"Mathlib.Topology.Partial","initialProofState":"X : Type u_1\nY : Type u_2\ninst✝¹ : TopologicalSpace X\ninst✝ : TopologicalSpace Y\nf : PFun X Y\n⊢ Iff (PContinuous f) (∀ {x : X} {y : Y}, Membership.mem (f x) y → Filter.PTendsto' f (nhds x) (nhds y))","decl":"theorem pcontinuous_iff' {f : X →. Y} :\n    PContinuous f ↔ ∀ {x y} (_ : y ∈ f x), PTendsto' f (𝓝 x) (𝓝 y) := by\n  constructor\n  · intro h x y h'\n    simp only [ptendsto'_def, mem_nhds_iff]\n    rintro s ⟨t, tsubs, opent, yt⟩\n    exact ⟨f.preimage t, PFun.preimage_mono _ tsubs, h _ opent, ⟨y, yt, h'⟩⟩\n  intro hf s os\n  rw [isOpen_iff_nhds]\n  rintro x ⟨y, ys, fxy⟩ t\n  rw [mem_principal]\n  intro (h : f.preimage s ⊆ t)\n  apply mem_of_superset _ h\n  have h' : ∀ s ∈ 𝓝 y, f.preimage s ∈ 𝓝 x := by\n    intro s hs\n    have : PTendsto' f (𝓝 x) (𝓝 y) := hf fxy\n    rw [ptendsto'_def] at this\n    exact this s hs\n  show f.preimage s ∈ 𝓝 x\n  apply h'\n  rw [mem_nhds_iff]\n  exact ⟨s, Set.Subset.refl _, os, ys⟩\n\n"}
{"name":"continuousWithinAt_iff_ptendsto_res","module":"Mathlib.Topology.Partial","initialProofState":"X : Type u_1\nY : Type u_2\ninst✝¹ : TopologicalSpace X\ninst✝ : TopologicalSpace Y\nf : X → Y\nx : X\ns : Set X\n⊢ Iff (ContinuousWithinAt f s x) (Filter.PTendsto (PFun.res f s) (nhds x) (nhds (f x)))","decl":"theorem continuousWithinAt_iff_ptendsto_res (f : X → Y) {x : X} {s : Set X} :\n    ContinuousWithinAt f s x ↔ PTendsto (PFun.res f s) (𝓝 x) (𝓝 (f x)) :=\n  tendsto_iff_ptendsto _ _ _ _\n"}
