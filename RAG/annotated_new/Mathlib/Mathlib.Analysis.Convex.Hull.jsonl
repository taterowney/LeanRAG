{"name":"convexHull_isClosed","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\n⊢ Eq ((convexHull 𝕜).IsClosed s) (Convex 𝕜 s)","decl":"/-- The convex hull of a set `s` is the minimal convex set that includes `s`. -/\n@[simps! isClosed]\ndef convexHull : ClosureOperator (Set E) := .ofCompletePred (Convex 𝕜) fun _ ↦ convex_sInter\n\n"}
{"name":"subset_convexHull","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\n⊢ HasSubset.Subset s ((convexHull 𝕜) s)","decl":"theorem subset_convexHull : s ⊆ convexHull 𝕜 s :=\n  (convexHull 𝕜).le_closure s\n\n"}
{"name":"convex_convexHull","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\n⊢ Convex 𝕜 ((convexHull 𝕜) s)","decl":"theorem convex_convexHull : Convex 𝕜 (convexHull 𝕜 s) := (convexHull 𝕜).isClosed_closure s\n\n"}
{"name":"convexHull_eq_iInter","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\n⊢ Eq ((convexHull 𝕜) s) (Set.iInter fun t => Set.iInter fun x => Set.iInter fun x => t)","decl":"theorem convexHull_eq_iInter : convexHull 𝕜 s = ⋂ (t : Set E) (_ : s ⊆ t) (_ : Convex 𝕜 t), t := by\n  simp [convexHull, iInter_subtype, iInter_and]\n\n"}
{"name":"mem_convexHull_iff","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\nx : E\n⊢ Iff (Membership.mem ((convexHull 𝕜) s) x) (∀ (t : Set E), HasSubset.Subset s t → Convex 𝕜 t → Membership.mem t x)","decl":"theorem mem_convexHull_iff : x ∈ convexHull 𝕜 s ↔ ∀ t, s ⊆ t → Convex 𝕜 t → x ∈ t := by\n  simp_rw [convexHull_eq_iInter, mem_iInter]\n\n"}
{"name":"convexHull_min","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns t : Set E\na✝¹ : HasSubset.Subset s t\na✝ : Convex 𝕜 t\n⊢ HasSubset.Subset ((convexHull 𝕜) s) t","decl":"theorem convexHull_min : s ⊆ t → Convex 𝕜 t → convexHull 𝕜 s ⊆ t := (convexHull 𝕜).closure_min\n\n"}
{"name":"Convex.convexHull_subset_iff","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns t : Set E\nht : Convex 𝕜 t\n⊢ Iff (HasSubset.Subset ((convexHull 𝕜) s) t) (HasSubset.Subset s t)","decl":"theorem Convex.convexHull_subset_iff (ht : Convex 𝕜 t) : convexHull 𝕜 s ⊆ t ↔ s ⊆ t :=\n  (show (convexHull 𝕜).IsClosed t from ht).closure_le_iff\n\n"}
{"name":"convexHull_mono","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns t : Set E\nhst : HasSubset.Subset s t\n⊢ HasSubset.Subset ((convexHull 𝕜) s) ((convexHull 𝕜) t)","decl":"@[mono, gcongr]\ntheorem convexHull_mono (hst : s ⊆ t) : convexHull 𝕜 s ⊆ convexHull 𝕜 t :=\n  (convexHull 𝕜).monotone hst\n\n"}
{"name":"convexHull_eq_self","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\n⊢ Iff (Eq ((convexHull 𝕜) s) s) (Convex 𝕜 s)","decl":"lemma convexHull_eq_self : convexHull 𝕜 s = s ↔ Convex 𝕜 s := (convexHull 𝕜).isClosed_iff.symm\n\n"}
{"name":"Convex.convexHull_eq","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\na✝ : Convex 𝕜 s\n⊢ Eq ((convexHull 𝕜) s) s","decl":"alias ⟨_, Convex.convexHull_eq⟩ := convexHull_eq_self\n\n"}
{"name":"convexHull_univ","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\n⊢ Eq ((convexHull 𝕜) Set.univ) Set.univ","decl":"@[simp]\ntheorem convexHull_univ : convexHull 𝕜 (univ : Set E) = univ :=\n  ClosureOperator.closure_top (convexHull 𝕜)\n\n"}
{"name":"convexHull_empty","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\n⊢ Eq ((convexHull 𝕜) EmptyCollection.emptyCollection) EmptyCollection.emptyCollection","decl":"@[simp]\ntheorem convexHull_empty : convexHull 𝕜 (∅ : Set E) = ∅ :=\n  convex_empty.convexHull_eq\n\n"}
{"name":"convexHull_empty_iff","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\n⊢ Iff (Eq ((convexHull 𝕜) s) EmptyCollection.emptyCollection) (Eq s EmptyCollection.emptyCollection)","decl":"@[simp]\ntheorem convexHull_empty_iff : convexHull 𝕜 s = ∅ ↔ s = ∅ := by\n  constructor\n  · intro h\n    rw [← Set.subset_empty_iff, ← h]\n    exact subset_convexHull 𝕜 _\n  · rintro rfl\n    exact convexHull_empty\n\n"}
{"name":"convexHull_nonempty_iff","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\n⊢ Iff ((convexHull 𝕜) s).Nonempty s.Nonempty","decl":"@[simp]\ntheorem convexHull_nonempty_iff : (convexHull 𝕜 s).Nonempty ↔ s.Nonempty := by\n  rw [nonempty_iff_ne_empty, nonempty_iff_ne_empty, Ne, Ne]\n  exact not_congr convexHull_empty_iff\n\n"}
{"name":"Set.Nonempty.convexHull","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\na✝ : s.Nonempty\n⊢ ((convexHull 𝕜) s).Nonempty","decl":"protected alias ⟨_, Set.Nonempty.convexHull⟩ := convexHull_nonempty_iff\n\n"}
{"name":"segment_subset_convexHull","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\nx y : E\nhx : Membership.mem s x\nhy : Membership.mem s y\n⊢ HasSubset.Subset (segment 𝕜 x y) ((convexHull 𝕜) s)","decl":"theorem segment_subset_convexHull (hx : x ∈ s) (hy : y ∈ s) : segment 𝕜 x y ⊆ convexHull 𝕜 s :=\n  (convex_convexHull _ _).segment_subset (subset_convexHull _ _ hx) (subset_convexHull _ _ hy)\n\n"}
{"name":"convexHull_singleton","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\nx : E\n⊢ Eq ((convexHull 𝕜) (Singleton.singleton x)) (Singleton.singleton x)","decl":"@[simp]\ntheorem convexHull_singleton (x : E) : convexHull 𝕜 ({x} : Set E) = {x} :=\n  (convex_singleton x).convexHull_eq\n\n"}
{"name":"convexHull_zero","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\n⊢ Eq ((convexHull 𝕜) 0) 0","decl":"@[simp]\ntheorem convexHull_zero : convexHull 𝕜 (0 : Set E) = 0 :=\n  convexHull_singleton 0\n\n"}
{"name":"convexHull_pair","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\nx y : E\n⊢ Eq ((convexHull 𝕜) (Insert.insert x (Singleton.singleton y))) (segment 𝕜 x y)","decl":"@[simp]\ntheorem convexHull_pair (x y : E) : convexHull 𝕜 {x, y} = segment 𝕜 x y := by\n  refine (convexHull_min ?_ <| convex_segment _ _).antisymm\n    (segment_subset_convexHull (mem_insert _ _) <| subset_insert _ _ <| mem_singleton _)\n  rw [insert_subset_iff, singleton_subset_iff]\n  exact ⟨left_mem_segment _ _ _, right_mem_segment _ _ _⟩\n\n"}
{"name":"convexHull_convexHull_union_left","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns t : Set E\n⊢ Eq ((convexHull 𝕜) (Union.union ((convexHull 𝕜) s) t)) ((convexHull 𝕜) (Union.union s t))","decl":"theorem convexHull_convexHull_union_left (s t : Set E) :\n    convexHull 𝕜 (convexHull 𝕜 s ∪ t) = convexHull 𝕜 (s ∪ t) :=\n  ClosureOperator.closure_sup_closure_left _ _ _\n\n"}
{"name":"convexHull_convexHull_union_right","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns t : Set E\n⊢ Eq ((convexHull 𝕜) (Union.union s ((convexHull 𝕜) t))) ((convexHull 𝕜) (Union.union s t))","decl":"theorem convexHull_convexHull_union_right (s t : Set E) :\n    convexHull 𝕜 (s ∪ convexHull 𝕜 t) = convexHull 𝕜 (s ∪ t) :=\n  ClosureOperator.closure_sup_closure_right _ _ _\n\n"}
{"name":"Convex.convex_remove_iff_not_mem_convexHull_remove","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\nhs : Convex 𝕜 s\nx : E\n⊢ Iff (Convex 𝕜 (SDiff.sdiff s (Singleton.singleton x))) (Not (Membership.mem ((convexHull 𝕜) (SDiff.sdiff s (Singleton.singleton x))) x))","decl":"theorem Convex.convex_remove_iff_not_mem_convexHull_remove {s : Set E} (hs : Convex 𝕜 s) (x : E) :\n    Convex 𝕜 (s \\ {x}) ↔ x ∉ convexHull 𝕜 (s \\ {x}) := by\n  constructor\n  · rintro hsx hx\n    rw [hsx.convexHull_eq] at hx\n    exact hx.2 (mem_singleton _)\n  rintro hx\n  suffices h : s \\ {x} = convexHull 𝕜 (s \\ {x}) by\n    rw [h]\n    exact convex_convexHull 𝕜 _\n  exact\n    Subset.antisymm (subset_convexHull 𝕜 _) fun y hy =>\n      ⟨convexHull_min diff_subset hs hy, by\n        rintro (rfl : y = x)\n        exact hx hy⟩\n\n"}
{"name":"IsLinearMap.image_convexHull","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : AddCommMonoid F\ninst✝¹ : Module 𝕜 E\ninst✝ : Module 𝕜 F\nf : E → F\nhf : IsLinearMap 𝕜 f\ns : Set E\n⊢ Eq (Set.image f ((convexHull 𝕜) s)) ((convexHull 𝕜) (Set.image f s))","decl":"theorem IsLinearMap.image_convexHull {f : E → F} (hf : IsLinearMap 𝕜 f) (s : Set E) :\n    f '' convexHull 𝕜 s = convexHull 𝕜 (f '' s) :=\n  Set.Subset.antisymm\n    (image_subset_iff.2 <|\n      convexHull_min (image_subset_iff.1 <| subset_convexHull 𝕜 _)\n        ((convex_convexHull 𝕜 _).is_linear_preimage hf))\n    (convexHull_min (image_subset _ (subset_convexHull 𝕜 s)) <|\n      (convex_convexHull 𝕜 s).is_linear_image hf)\n\n"}
{"name":"LinearMap.image_convexHull","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : AddCommMonoid F\ninst✝¹ : Module 𝕜 E\ninst✝ : Module 𝕜 F\nf : LinearMap (RingHom.id 𝕜) E F\ns : Set E\n⊢ Eq (Set.image (⇑f) ((convexHull 𝕜) s)) ((convexHull 𝕜) (Set.image (⇑f) s))","decl":"theorem LinearMap.image_convexHull (f : E →ₗ[𝕜] F) (s : Set E) :\n    f '' convexHull 𝕜 s = convexHull 𝕜 (f '' s) :=\n  f.isLinear.image_convexHull s\n\n"}
{"name":"convexHull_add_subset","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns t : Set E\n⊢ HasSubset.Subset ((convexHull 𝕜) (HAdd.hAdd s t)) (HAdd.hAdd ((convexHull 𝕜) s) ((convexHull 𝕜) t))","decl":"theorem convexHull_add_subset {s t : Set E} :\n    convexHull 𝕜 (s + t) ⊆ convexHull 𝕜 s + convexHull 𝕜 t :=\n  convexHull_min (add_subset_add (subset_convexHull _ _) (subset_convexHull _ _))\n    (Convex.add (convex_convexHull 𝕜 s) (convex_convexHull 𝕜 t))\n\n"}
{"name":"convexHull_smul","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedCommSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\na : 𝕜\ns : Set E\n⊢ Eq ((convexHull 𝕜) (HSMul.hSMul a s)) (HSMul.hSMul a ((convexHull 𝕜) s))","decl":"theorem convexHull_smul (a : 𝕜) (s : Set E) : convexHull 𝕜 (a • s) = a • convexHull 𝕜 s :=\n  (LinearMap.lsmul _ _ a).image_convexHull _ |>.symm\n\n"}
{"name":"AffineMap.image_convexHull","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\ninst✝⁴ : OrderedRing 𝕜\ninst✝³ : AddCommGroup E\ninst✝² : AddCommGroup F\ninst✝¹ : Module 𝕜 E\ninst✝ : Module 𝕜 F\nf : AffineMap 𝕜 E F\ns : Set E\n⊢ Eq (Set.image (⇑f) ((convexHull 𝕜) s)) ((convexHull 𝕜) (Set.image (⇑f) s))","decl":"theorem AffineMap.image_convexHull (f : E →ᵃ[𝕜] F) (s : Set E) :\n    f '' convexHull 𝕜 s = convexHull 𝕜 (f '' s) := by\n  apply Set.Subset.antisymm\n  · rw [Set.image_subset_iff]\n    refine convexHull_min ?_ ((convex_convexHull 𝕜 (f '' s)).affine_preimage f)\n    rw [← Set.image_subset_iff]\n    exact subset_convexHull 𝕜 (f '' s)\n  · exact convexHull_min (Set.image_subset _ (subset_convexHull 𝕜 s))\n      ((convex_convexHull 𝕜 s).affine_image f)\n\n"}
{"name":"convexHull_subset_affineSpan","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedRing 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns : Set E\n⊢ HasSubset.Subset ((convexHull 𝕜) s) ↑(affineSpan 𝕜 s)","decl":"theorem convexHull_subset_affineSpan (s : Set E) : convexHull 𝕜 s ⊆ (affineSpan 𝕜 s : Set E) :=\n  convexHull_min (subset_affineSpan 𝕜 s) (affineSpan 𝕜 s).convex\n\n"}
{"name":"affineSpan_convexHull","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedRing 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns : Set E\n⊢ Eq (affineSpan 𝕜 ((convexHull 𝕜) s)) (affineSpan 𝕜 s)","decl":"@[simp]\ntheorem affineSpan_convexHull (s : Set E) : affineSpan 𝕜 (convexHull 𝕜 s) = affineSpan 𝕜 s := by\n  refine le_antisymm ?_ (affineSpan_mono 𝕜 (subset_convexHull 𝕜 s))\n  rw [affineSpan_le]\n  exact convexHull_subset_affineSpan s\n\n"}
{"name":"convexHull_neg","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedRing 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns : Set E\n⊢ Eq ((convexHull 𝕜) (Neg.neg s)) (Neg.neg ((convexHull 𝕜) s))","decl":"theorem convexHull_neg (s : Set E) : convexHull 𝕜 (-s) = -convexHull 𝕜 s := by\n  simp_rw [← image_neg_eq_neg]\n  exact AffineMap.image_convexHull (-1) _ |>.symm\n\n"}
{"name":"convexHull_vadd","module":"Mathlib.Analysis.Convex.Hull","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedRing 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\nx : E\ns : Set E\n⊢ Eq ((convexHull 𝕜) (HVAdd.hVAdd x s)) (HVAdd.hVAdd x ((convexHull 𝕜) s))","decl":"lemma convexHull_vadd (x : E) (s : Set E) : convexHull 𝕜 (x +ᵥ s) = x +ᵥ convexHull 𝕜 s :=\n  (AffineEquiv.constVAdd 𝕜 _ x).toAffineMap.image_convexHull s |>.symm\n\n"}
