{"name":"AddOpposite.unop_le_unop","module":"Mathlib.Algebra.Order.Group.Opposite","initialProofState":"α : Type u_1\ninst✝ : Preorder α\na b : AddOpposite α\n⊢ Iff (LE.le (AddOpposite.unop a) (AddOpposite.unop b)) (LE.le a b)","decl":"@[to_additive (attr := simp)] lemma unop_le_unop {a b : αᵐᵒᵖ} : a.unop ≤ b.unop ↔ a ≤ b := .rfl\n"}
{"name":"MulOpposite.unop_le_unop","module":"Mathlib.Algebra.Order.Group.Opposite","initialProofState":"α : Type u_1\ninst✝ : Preorder α\na b : MulOpposite α\n⊢ Iff (LE.le (MulOpposite.unop a) (MulOpposite.unop b)) (LE.le a b)","decl":"@[to_additive (attr := simp)] lemma unop_le_unop {a b : αᵐᵒᵖ} : a.unop ≤ b.unop ↔ a ≤ b := .rfl\n"}
{"name":"AddOpposite.op_le_op","module":"Mathlib.Algebra.Order.Group.Opposite","initialProofState":"α : Type u_1\ninst✝ : Preorder α\na b : α\n⊢ Iff (LE.le (AddOpposite.op a) (AddOpposite.op b)) (LE.le a b)","decl":"@[to_additive (attr := simp)] lemma op_le_op {a b : α} : op a ≤ op b ↔ a ≤ b := .rfl\n\n"}
{"name":"MulOpposite.op_le_op","module":"Mathlib.Algebra.Order.Group.Opposite","initialProofState":"α : Type u_1\ninst✝ : Preorder α\na b : α\n⊢ Iff (LE.le (MulOpposite.op a) (MulOpposite.op b)) (LE.le a b)","decl":"@[to_additive (attr := simp)] lemma op_le_op {a b : α} : op a ≤ op b ↔ a ≤ b := .rfl\n\n"}
{"name":"MulOpposite.unop_le_one","module":"Mathlib.Algebra.Order.Group.Opposite","initialProofState":"α : Type u_1\ninst✝ : OrderedCommMonoid α\na : MulOpposite α\n⊢ Iff (LE.le (MulOpposite.unop a) 1) (LE.le a 1)","decl":"@[to_additive (attr := simp)] lemma unop_le_one {a : αᵐᵒᵖ} : unop a ≤ 1 ↔ a ≤ 1 := .rfl\n"}
{"name":"AddOpposite.unop_nonpos","module":"Mathlib.Algebra.Order.Group.Opposite","initialProofState":"α : Type u_1\ninst✝ : OrderedAddCommMonoid α\na : AddOpposite α\n⊢ Iff (LE.le (AddOpposite.unop a) 0) (LE.le a 0)","decl":"@[to_additive (attr := simp)] lemma unop_le_one {a : αᵐᵒᵖ} : unop a ≤ 1 ↔ a ≤ 1 := .rfl\n"}
{"name":"AddOpposite.nonneg_unop","module":"Mathlib.Algebra.Order.Group.Opposite","initialProofState":"α : Type u_1\ninst✝ : OrderedAddCommMonoid α\na : AddOpposite α\n⊢ Iff (LE.le 0 (AddOpposite.unop a)) (LE.le 0 a)","decl":"@[to_additive (attr := simp)] lemma one_le_unop {a : αᵐᵒᵖ} : 1 ≤ unop a ↔ 1 ≤ a := .rfl\n"}
{"name":"MulOpposite.one_le_unop","module":"Mathlib.Algebra.Order.Group.Opposite","initialProofState":"α : Type u_1\ninst✝ : OrderedCommMonoid α\na : MulOpposite α\n⊢ Iff (LE.le 1 (MulOpposite.unop a)) (LE.le 1 a)","decl":"@[to_additive (attr := simp)] lemma one_le_unop {a : αᵐᵒᵖ} : 1 ≤ unop a ↔ 1 ≤ a := .rfl\n"}
{"name":"AddOpposite.op_nonpos","module":"Mathlib.Algebra.Order.Group.Opposite","initialProofState":"α : Type u_1\ninst✝ : OrderedAddCommMonoid α\na : α\n⊢ Iff (LE.le (AddOpposite.op a) 0) (LE.le a 0)","decl":"@[to_additive (attr := simp)] lemma op_le_one {a : α} : op a ≤ 1 ↔ a ≤ 1 := .rfl\n"}
{"name":"MulOpposite.op_le_one","module":"Mathlib.Algebra.Order.Group.Opposite","initialProofState":"α : Type u_1\ninst✝ : OrderedCommMonoid α\na : α\n⊢ Iff (LE.le (MulOpposite.op a) 1) (LE.le a 1)","decl":"@[to_additive (attr := simp)] lemma op_le_one {a : α} : op a ≤ 1 ↔ a ≤ 1 := .rfl\n"}
{"name":"AddOpposite.nonneg_op","module":"Mathlib.Algebra.Order.Group.Opposite","initialProofState":"α : Type u_1\ninst✝ : OrderedAddCommMonoid α\na : α\n⊢ Iff (LE.le 0 (AddOpposite.op a)) (LE.le 0 a)","decl":"@[to_additive (attr := simp)] lemma one_le_op {a : α} : 1 ≤ op a ↔ 1 ≤ a := .rfl\n\n"}
{"name":"MulOpposite.one_le_op","module":"Mathlib.Algebra.Order.Group.Opposite","initialProofState":"α : Type u_1\ninst✝ : OrderedCommMonoid α\na : α\n⊢ Iff (LE.le 1 (MulOpposite.op a)) (LE.le 1 a)","decl":"@[to_additive (attr := simp)] lemma one_le_op {a : α} : 1 ≤ op a ↔ 1 ≤ a := .rfl\n\n"}
{"name":"MulOpposite.unop_nonpos","module":"Mathlib.Algebra.Order.Group.Opposite","initialProofState":"α : Type u_1\ninst✝ : OrderedAddCommMonoid α\na : MulOpposite α\n⊢ Iff (LE.le (MulOpposite.unop a) 0) (LE.le a 0)","decl":"@[simp] lemma unop_nonpos {a : αᵐᵒᵖ} : unop a ≤ 0 ↔ a ≤ 0 := .rfl\n"}
{"name":"MulOpposite.unop_nonneg","module":"Mathlib.Algebra.Order.Group.Opposite","initialProofState":"α : Type u_1\ninst✝ : OrderedAddCommMonoid α\na : MulOpposite α\n⊢ Iff (LE.le 0 (MulOpposite.unop a)) (LE.le 0 a)","decl":"@[simp] lemma unop_nonneg {a : αᵐᵒᵖ} : 0 ≤ unop a ↔ 0 ≤ a := .rfl\n"}
{"name":"MulOpposite.op_nonpos","module":"Mathlib.Algebra.Order.Group.Opposite","initialProofState":"α : Type u_1\ninst✝ : OrderedAddCommMonoid α\na : α\n⊢ Iff (LE.le (MulOpposite.op a) 0) (LE.le a 0)","decl":"@[simp] lemma op_nonpos {a : α} : op a ≤ 0 ↔ a ≤ 0 := .rfl\n"}
{"name":"MulOpposite.op_nonneg","module":"Mathlib.Algebra.Order.Group.Opposite","initialProofState":"α : Type u_1\ninst✝ : OrderedAddCommMonoid α\na : α\n⊢ Iff (LE.le 0 (MulOpposite.op a)) (LE.le 0 a)","decl":"@[simp] lemma op_nonneg {a : α} : 0 ≤ op a ↔ 0 ≤ a := .rfl\n\n"}
{"name":"AddOpposite.unop_le_one","module":"Mathlib.Algebra.Order.Group.Opposite","initialProofState":"α : Type u_1\ninst✝ : OrderedCommMonoid α\na : AddOpposite α\n⊢ Iff (LE.le (AddOpposite.unop a) 1) (LE.le a 1)","decl":"@[simp] lemma unop_le_one {a : αᵃᵒᵖ} : unop a ≤ 1 ↔ a ≤ 1 := .rfl\n"}
{"name":"AddOpposite.one_le_unop","module":"Mathlib.Algebra.Order.Group.Opposite","initialProofState":"α : Type u_1\ninst✝ : OrderedCommMonoid α\na : AddOpposite α\n⊢ Iff (LE.le 1 (AddOpposite.unop a)) (LE.le 1 a)","decl":"@[simp] lemma one_le_unop {a : αᵃᵒᵖ} : 1 ≤ unop a ↔ 1 ≤ a := .rfl\n"}
{"name":"AddOpposite.op_le_one","module":"Mathlib.Algebra.Order.Group.Opposite","initialProofState":"α : Type u_1\ninst✝ : OrderedCommMonoid α\na : α\n⊢ Iff (LE.le (AddOpposite.op a) 1) (LE.le a 1)","decl":"@[simp] lemma op_le_one {a : α} : op a ≤ 1 ↔ a ≤ 1 := .rfl\n"}
{"name":"AddOpposite.one_le_op","module":"Mathlib.Algebra.Order.Group.Opposite","initialProofState":"α : Type u_1\ninst✝ : OrderedCommMonoid α\na : α\n⊢ Iff (LE.le 1 (AddOpposite.op a)) (LE.le 1 a)","decl":"@[simp] lemma one_le_op {a : α} : 1 ≤ op a ↔ 1 ≤ a := .rfl\n\n"}
