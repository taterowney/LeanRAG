{"name":"LeftInvariantDerivation.mk.sizeOf_spec","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝¹¹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁰ : NormedAddCommGroup E\ninst✝⁹ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁸ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝⁷ : TopologicalSpace G\ninst✝⁶ : ChartedSpace H G\ninst✝⁵ : Monoid G\ninst✝⁴ : ContMDiffMul I (↑Top.top) G\ninst✝³ : SizeOf 𝕜\ninst✝² : SizeOf E\ninst✝¹ : SizeOf H\ninst✝ : SizeOf G\ntoDerivation : Derivation 𝕜 (ContMDiffMap I (modelWithCornersSelf 𝕜 𝕜) G 𝕜 ↑Top.top) (ContMDiffMap I (modelWithCornersSelf 𝕜 𝕜) G 𝕜 ↑Top.top)\nleft_invariant'' : ∀ (g : G), Eq ((hfdifferential ⋯) ((Derivation.evalAt 1) toDerivation)) ((Derivation.evalAt g) toDerivation)\n⊢ Eq (SizeOf.sizeOf { toDerivation := toDerivation, left_invariant'' := left_invariant'' }) (HAdd.hAdd 1 (SizeOf.sizeOf toDerivation))","decl":"/-- Left-invariant global derivations.\n\nA global derivation is left-invariant if it is equal to its pullback along left multiplication by\nan arbitrary element of `G`.\n-/\nstructure LeftInvariantDerivation extends Derivation 𝕜 C^∞⟮I, G; 𝕜⟯ C^∞⟮I, G; 𝕜⟯ where\n  left_invariant'' :\n    ∀ g, 𝒅ₕ (smoothLeftMul_one I g) (Derivation.evalAt 1 toDerivation) =\n      Derivation.evalAt g toDerivation\n\n"}
{"name":"LeftInvariantDerivation.left_invariant''","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\nself : LeftInvariantDerivation I G\ng : G\n⊢ Eq ((hfdifferential ⋯) ((Derivation.evalAt 1) self.toDerivation)) ((Derivation.evalAt g) self.toDerivation)","decl":"/-- Left-invariant global derivations.\n\nA global derivation is left-invariant if it is equal to its pullback along left multiplication by\nan arbitrary element of `G`.\n-/\nstructure LeftInvariantDerivation extends Derivation 𝕜 C^∞⟮I, G; 𝕜⟯ C^∞⟮I, G; 𝕜⟯ where\n  left_invariant'' :\n    ∀ g, 𝒅ₕ (smoothLeftMul_one I g) (Derivation.evalAt 1 toDerivation) =\n      Derivation.evalAt g toDerivation\n\n"}
{"name":"LeftInvariantDerivation.mk.inj","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\ntoDerivation✝ : Derivation 𝕜 (ContMDiffMap I (modelWithCornersSelf 𝕜 𝕜) G 𝕜 ↑Top.top) (ContMDiffMap I (modelWithCornersSelf 𝕜 𝕜) G 𝕜 ↑Top.top)\nleft_invariant''✝ : ∀ (g : G), Eq ((hfdifferential ⋯) ((Derivation.evalAt 1) toDerivation✝)) ((Derivation.evalAt g) toDerivation✝)\ntoDerivation : Derivation 𝕜 (ContMDiffMap I (modelWithCornersSelf 𝕜 𝕜) G 𝕜 ↑Top.top) (ContMDiffMap I (modelWithCornersSelf 𝕜 𝕜) G 𝕜 ↑Top.top)\nleft_invariant'' : ∀ (g : G), Eq ((hfdifferential ⋯) ((Derivation.evalAt 1) toDerivation)) ((Derivation.evalAt g) toDerivation)\nx✝ : Eq { toDerivation := toDerivation✝, left_invariant'' := left_invariant''✝ } { toDerivation := toDerivation, left_invariant'' := left_invariant'' }\n⊢ Eq toDerivation✝ toDerivation","decl":"/-- Left-invariant global derivations.\n\nA global derivation is left-invariant if it is equal to its pullback along left multiplication by\nan arbitrary element of `G`.\n-/\nstructure LeftInvariantDerivation extends Derivation 𝕜 C^∞⟮I, G; 𝕜⟯ C^∞⟮I, G; 𝕜⟯ where\n  left_invariant'' :\n    ∀ g, 𝒅ₕ (smoothLeftMul_one I g) (Derivation.evalAt 1 toDerivation) =\n      Derivation.evalAt g toDerivation\n\n"}
{"name":"LeftInvariantDerivation.mk.injEq","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\ntoDerivation✝ : Derivation 𝕜 (ContMDiffMap I (modelWithCornersSelf 𝕜 𝕜) G 𝕜 ↑Top.top) (ContMDiffMap I (modelWithCornersSelf 𝕜 𝕜) G 𝕜 ↑Top.top)\nleft_invariant''✝ : ∀ (g : G), Eq ((hfdifferential ⋯) ((Derivation.evalAt 1) toDerivation✝)) ((Derivation.evalAt g) toDerivation✝)\ntoDerivation : Derivation 𝕜 (ContMDiffMap I (modelWithCornersSelf 𝕜 𝕜) G 𝕜 ↑Top.top) (ContMDiffMap I (modelWithCornersSelf 𝕜 𝕜) G 𝕜 ↑Top.top)\nleft_invariant'' : ∀ (g : G), Eq ((hfdifferential ⋯) ((Derivation.evalAt 1) toDerivation)) ((Derivation.evalAt g) toDerivation)\n⊢ Eq (Eq { toDerivation := toDerivation✝, left_invariant'' := left_invariant''✝ } { toDerivation := toDerivation, left_invariant'' := left_invariant'' }) (Eq toDerivation✝ toDerivation)","decl":"/-- Left-invariant global derivations.\n\nA global derivation is left-invariant if it is equal to its pullback along left multiplication by\nan arbitrary element of `G`.\n-/\nstructure LeftInvariantDerivation extends Derivation 𝕜 C^∞⟮I, G; 𝕜⟯ C^∞⟮I, G; 𝕜⟯ where\n  left_invariant'' :\n    ∀ g, 𝒅ₕ (smoothLeftMul_one I g) (Derivation.evalAt 1 toDerivation) =\n      Derivation.evalAt g toDerivation\n\n"}
{"name":"LeftInvariantDerivation.toDerivation_injective","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\n⊢ Function.Injective LeftInvariantDerivation.toDerivation","decl":"theorem toDerivation_injective :\n    Function.Injective (toDerivation : LeftInvariantDerivation I G → _) :=\n  fun X Y h => by cases X; cases Y; congr\n\n"}
{"name":"LeftInvariantDerivation.instLinearMapClassContMDiffMapModelWithCornersSelfSomeENatTop","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\n⊢ LinearMapClass (LeftInvariantDerivation I G) 𝕜 (ContMDiffMap I (modelWithCornersSelf 𝕜 𝕜) G 𝕜 ↑Top.top) (ContMDiffMap I (modelWithCornersSelf 𝕜 𝕜) G 𝕜 ↑Top.top)","decl":"instance : LinearMapClass (LeftInvariantDerivation I G) 𝕜 C^∞⟮I, G; 𝕜⟯ C^∞⟮I, G; 𝕜⟯ where\n  map_add f := map_add f.1\n  map_smulₛₗ f := map_smul f.1.1\n\n"}
{"name":"LeftInvariantDerivation.toFun_eq_coe","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\nX : LeftInvariantDerivation I G\n⊢ Eq (↑↑X).toFun ⇑X","decl":"theorem toFun_eq_coe : X.toFun = ⇑X :=\n  rfl\n\n-- Porting note: now LHS is the same as RHS\n\n"}
{"name":"LeftInvariantDerivation.coe_injective","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\n⊢ Function.Injective DFunLike.coe","decl":"theorem coe_injective :\n    @Function.Injective (LeftInvariantDerivation I G) (_ → C^∞⟮I, G; 𝕜⟯) DFunLike.coe :=\n  DFunLike.coe_injective\n\n"}
{"name":"LeftInvariantDerivation.ext","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\nX Y : LeftInvariantDerivation I G\nh : ∀ (f : ContMDiffMap I (modelWithCornersSelf 𝕜 𝕜) G 𝕜 ↑Top.top), Eq (X f) (Y f)\n⊢ Eq X Y","decl":"@[ext]\ntheorem ext (h : ∀ f, X f = Y f) : X = Y := DFunLike.ext _ _ h\n\n"}
{"name":"LeftInvariantDerivation.ext_iff","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\nX Y : LeftInvariantDerivation I G\n⊢ Iff (Eq X Y) (∀ (f : ContMDiffMap I (modelWithCornersSelf 𝕜 𝕜) G 𝕜 ↑Top.top), Eq (X f) (Y f))","decl":"@[ext]\ntheorem ext (h : ∀ f, X f = Y f) : X = Y := DFunLike.ext _ _ h\n\n"}
{"name":"LeftInvariantDerivation.coe_derivation","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\nX : LeftInvariantDerivation I G\n⊢ Eq ⇑↑X ⇑X","decl":"theorem coe_derivation :\n    ⇑(X : Derivation 𝕜 C^∞⟮I, G; 𝕜⟯ C^∞⟮I, G; 𝕜⟯) = (X : C^∞⟮I, G; 𝕜⟯ → C^∞⟮I, G; 𝕜⟯) :=\n  rfl\n\n"}
{"name":"LeftInvariantDerivation.left_invariant'","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\ng : G\nX : LeftInvariantDerivation I G\n⊢ Eq ((hfdifferential ⋯) ((Derivation.evalAt 1) ↑X)) ((Derivation.evalAt g) ↑X)","decl":"/-- Premature version of the lemma. Prefer using `left_invariant` instead. -/\ntheorem left_invariant' :\n    𝒅ₕ (smoothLeftMul_one I g) (Derivation.evalAt (1 : G) ↑X) = Derivation.evalAt g ↑X :=\n  left_invariant'' X g\n\n"}
{"name":"LeftInvariantDerivation.map_add","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\nX : LeftInvariantDerivation I G\nf f' : ContMDiffMap I (modelWithCornersSelf 𝕜 𝕜) G 𝕜 ↑Top.top\n⊢ Eq (X (HAdd.hAdd f f')) (HAdd.hAdd (X f) (X f'))","decl":"protected theorem map_add : X (f + f') = X f + X f' := by simp\n\n"}
{"name":"LeftInvariantDerivation.map_zero","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\nX : LeftInvariantDerivation I G\n⊢ Eq (X 0) 0","decl":"protected theorem map_zero : X 0 = 0 := by simp\n\n"}
{"name":"LeftInvariantDerivation.map_neg","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\nX : LeftInvariantDerivation I G\nf : ContMDiffMap I (modelWithCornersSelf 𝕜 𝕜) G 𝕜 ↑Top.top\n⊢ Eq (X (Neg.neg f)) (Neg.neg (X f))","decl":"protected theorem map_neg : X (-f) = -X f := by simp\n\n"}
{"name":"LeftInvariantDerivation.map_sub","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\nX : LeftInvariantDerivation I G\nf f' : ContMDiffMap I (modelWithCornersSelf 𝕜 𝕜) G 𝕜 ↑Top.top\n⊢ Eq (X (HSub.hSub f f')) (HSub.hSub (X f) (X f'))","decl":"protected theorem map_sub : X (f - f') = X f - X f' := by simp\n\n"}
{"name":"LeftInvariantDerivation.map_smul","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\nr : 𝕜\nX : LeftInvariantDerivation I G\nf : ContMDiffMap I (modelWithCornersSelf 𝕜 𝕜) G 𝕜 ↑Top.top\n⊢ Eq (X (HSMul.hSMul r f)) (HSMul.hSMul r (X f))","decl":"protected theorem map_smul : X (r • f) = r • X f := by simp\n\n"}
{"name":"LeftInvariantDerivation.leibniz","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\nX : LeftInvariantDerivation I G\nf f' : ContMDiffMap I (modelWithCornersSelf 𝕜 𝕜) G 𝕜 ↑Top.top\n⊢ Eq (X (HMul.hMul f f')) (HAdd.hAdd (HSMul.hSMul f (X f')) (HSMul.hSMul f' (X f)))","decl":"@[simp]\ntheorem leibniz : X (f * f') = f • X f' + f' • X f :=\n  X.leibniz' _ _\n\n"}
{"name":"LeftInvariantDerivation.coe_add","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\nX Y : LeftInvariantDerivation I G\n⊢ Eq (⇑(HAdd.hAdd X Y)) (HAdd.hAdd ⇑X ⇑Y)","decl":"@[simp]\ntheorem coe_add : ⇑(X + Y) = X + Y :=\n  rfl\n\n"}
{"name":"LeftInvariantDerivation.coe_zero","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\n⊢ Eq (⇑0) 0","decl":"@[simp]\ntheorem coe_zero : ⇑(0 : LeftInvariantDerivation I G) = 0 :=\n  rfl\n\n"}
{"name":"LeftInvariantDerivation.coe_neg","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\nX : LeftInvariantDerivation I G\n⊢ Eq (⇑(Neg.neg X)) (Neg.neg ⇑X)","decl":"@[simp]\ntheorem coe_neg : ⇑(-X) = -X :=\n  rfl\n\n"}
{"name":"LeftInvariantDerivation.coe_sub","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\nX Y : LeftInvariantDerivation I G\n⊢ Eq (⇑(HSub.hSub X Y)) (HSub.hSub ⇑X ⇑Y)","decl":"@[simp]\ntheorem coe_sub : ⇑(X - Y) = X - Y :=\n  rfl\n\n"}
{"name":"LeftInvariantDerivation.lift_add","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\nX Y : LeftInvariantDerivation I G\n⊢ Eq (↑(HAdd.hAdd X Y)) (HAdd.hAdd ↑X ↑Y)","decl":"@[simp, norm_cast]\ntheorem lift_add : (↑(X + Y) : Derivation 𝕜 C^∞⟮I, G; 𝕜⟯ C^∞⟮I, G; 𝕜⟯) = X + Y :=\n  rfl\n\n"}
{"name":"LeftInvariantDerivation.lift_zero","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\n⊢ Eq (↑0) 0","decl":"@[simp, norm_cast]\ntheorem lift_zero :\n    (↑(0 : LeftInvariantDerivation I G) : Derivation 𝕜 C^∞⟮I, G; 𝕜⟯ C^∞⟮I, G; 𝕜⟯) = 0 :=\n  rfl\n\n"}
{"name":"LeftInvariantDerivation.coe_smul","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\nr : 𝕜\nX : LeftInvariantDerivation I G\n⊢ Eq (⇑(HSMul.hSMul r X)) (HSMul.hSMul r ⇑X)","decl":"@[simp]\ntheorem coe_smul : ⇑(r • X) = r • ⇑X :=\n  rfl\n\n"}
{"name":"LeftInvariantDerivation.lift_smul","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\nX : LeftInvariantDerivation I G\nk : 𝕜\n⊢ Eq (↑(HSMul.hSMul k X)) (HSMul.hSMul k ↑X)","decl":"@[simp]\ntheorem lift_smul (k : 𝕜) : (k • X).1 = k • X.1 :=\n  rfl\n\n"}
{"name":"LeftInvariantDerivation.coeFnAddMonoidHom_apply","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\na✝ : LeftInvariantDerivation I G\na : ContMDiffMap I (modelWithCornersSelf 𝕜 𝕜) G 𝕜 ↑Top.top\n⊢ Eq ((LeftInvariantDerivation.coeFnAddMonoidHom I G) a✝ a) (a✝ a)","decl":"/-- The coercion to function is a monoid homomorphism. -/\n@[simps]\ndef coeFnAddMonoidHom : LeftInvariantDerivation I G →+ C^∞⟮I, G; 𝕜⟯ → C^∞⟮I, G; 𝕜⟯ :=\n  ⟨⟨DFunLike.coe, coe_zero⟩, coe_add⟩\n\n"}
{"name":"LeftInvariantDerivation.evalAt_apply","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\ng : G\nX : LeftInvariantDerivation I G\nf : ContMDiffMap I (modelWithCornersSelf 𝕜 𝕜) G 𝕜 ↑Top.top\n⊢ Eq (((LeftInvariantDerivation.evalAt g) X) f) ((X f) g)","decl":"theorem evalAt_apply : evalAt g X f = (X f) g :=\n  rfl\n\n"}
{"name":"LeftInvariantDerivation.evalAt_coe","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\ng : G\nX : LeftInvariantDerivation I G\n⊢ Eq ((Derivation.evalAt g) ↑X) ((LeftInvariantDerivation.evalAt g) X)","decl":"@[simp]\ntheorem evalAt_coe : Derivation.evalAt g ↑X = evalAt g X :=\n  rfl\n\n"}
{"name":"LeftInvariantDerivation.left_invariant","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\ng : G\nX : LeftInvariantDerivation I G\n⊢ Eq ((hfdifferential ⋯) ((LeftInvariantDerivation.evalAt 1) X)) ((LeftInvariantDerivation.evalAt g) X)","decl":"theorem left_invariant : 𝒅ₕ (smoothLeftMul_one I g) (evalAt (1 : G) X) = evalAt g X :=\n  X.left_invariant'' g\n\n"}
{"name":"LeftInvariantDerivation.evalAt_mul","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\ng h : G\nX : LeftInvariantDerivation I G\n⊢ Eq ((LeftInvariantDerivation.evalAt (HMul.hMul g h)) X) ((hfdifferential ⋯) ((LeftInvariantDerivation.evalAt h) X))","decl":"theorem evalAt_mul : evalAt (g * h) X = 𝒅ₕ (L_apply I g h) (evalAt h X) := by\n  ext f\n  rw [← left_invariant, hfdifferential_apply, hfdifferential_apply, L_mul, fdifferential_comp,\n    fdifferential_apply]\n  -- Porting note: more aggressive here\n  erw [LinearMap.comp_apply]\n  -- This used to be `rw`, but we need `erw` after https://github.com/leanprover/lean4/pull/2644\n  erw [fdifferential_apply, ← hfdifferential_apply, left_invariant]\n\n"}
{"name":"LeftInvariantDerivation.comp_L","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\ng : G\nX : LeftInvariantDerivation I G\nf : ContMDiffMap I (modelWithCornersSelf 𝕜 𝕜) G 𝕜 ↑Top.top\n⊢ Eq ((X f).comp (smoothLeftMul I g)) (X (f.comp (smoothLeftMul I g)))","decl":"theorem comp_L : (X f).comp (𝑳 I g) = X (f.comp (𝑳 I g)) := by\n  ext h\n  rw [ContMDiffMap.comp_apply, L_apply, ← evalAt_apply, evalAt_mul, hfdifferential_apply,\n    fdifferential_apply, evalAt_apply]\n\n"}
{"name":"LeftInvariantDerivation.commutator_coe_derivation","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\nX Y : LeftInvariantDerivation I G\n⊢ Eq ⇑(Bracket.bracket X Y) ⇑(Bracket.bracket ↑X ↑Y)","decl":"@[simp]\ntheorem commutator_coe_derivation :\n    ⇑⁅X, Y⁆ =\n      (⁅(X : Derivation 𝕜 C^∞⟮I, G; 𝕜⟯ C^∞⟮I, G; 𝕜⟯), Y⁆ :\n        Derivation 𝕜 C^∞⟮I, G; 𝕜⟯ C^∞⟮I, G; 𝕜⟯) :=\n  rfl\n\n"}
{"name":"LeftInvariantDerivation.commutator_apply","module":"Mathlib.Geometry.Manifold.Algebra.LeftInvariantDerivation","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nG : Type u_4\ninst✝³ : TopologicalSpace G\ninst✝² : ChartedSpace H G\ninst✝¹ : Monoid G\ninst✝ : ContMDiffMul I (↑Top.top) G\nX Y : LeftInvariantDerivation I G\nf : ContMDiffMap I (modelWithCornersSelf 𝕜 𝕜) G 𝕜 ↑Top.top\n⊢ Eq ((Bracket.bracket X Y) f) (HSub.hSub (X (Y f)) (Y (X f)))","decl":"theorem commutator_apply : ⁅X, Y⁆ f = X (Y f) - Y (X f) :=\n  rfl\n\n"}
