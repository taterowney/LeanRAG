{"name":"CategoryTheory.Bicategory.whisker_exchange","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\nself : CategoryTheory.Bicategory B\na b c : B\nf g : Quiver.Hom a b\nh i : Quiver.Hom b c\nη : Quiver.Hom f g\nθ : Quiver.Hom h i\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f θ) (CategoryTheory.Bicategory.whiskerRight η i)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight η h) (CategoryTheory.Bicategory.whiskerLeft g θ))","decl":"/-- In a bicategory, we can compose the 1-morphisms `f : a ⟶ b` and `g : b ⟶ c` to obtain\na 1-morphism `f ≫ g : a ⟶ c`. This composition does not need to be strictly associative,\nbut there is a specified associator, `α_ f g h : (f ≫ g) ≫ h ≅ f ≫ (g ≫ h)`.\nThere is an identity 1-morphism `𝟙 a : a ⟶ a`, with specified left and right unitor\nisomorphisms `λ_ f : 𝟙 a ≫ f ≅ f` and `ρ_ f : f ≫ 𝟙 a ≅ f`.\nThese associators and unitors satisfy the pentagon and triangle equations.\n\nSee https://ncatlab.org/nlab/show/bicategory.\n-/\n@[nolint checkUnivs]\nclass Bicategory (B : Type u) extends CategoryStruct.{v} B where\n  -- category structure on the collection of 1-morphisms:\n  homCategory : ∀ a b : B, Category.{w} (a ⟶ b) := by infer_instance\n  -- left whiskering:\n  whiskerLeft {a b c : B} (f : a ⟶ b) {g h : b ⟶ c} (η : g ⟶ h) : f ≫ g ⟶ f ≫ h\n  -- right whiskering:\n  whiskerRight {a b c : B} {f g : a ⟶ b} (η : f ⟶ g) (h : b ⟶ c) : f ≫ h ⟶ g ≫ h\n  -- associator:\n  associator {a b c d : B} (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) : (f ≫ g) ≫ h ≅ f ≫ g ≫ h\n  -- left unitor:\n  leftUnitor {a b : B} (f : a ⟶ b) : 𝟙 a ≫ f ≅ f\n  -- right unitor:\n  rightUnitor {a b : B} (f : a ⟶ b) : f ≫ 𝟙 b ≅ f\n  -- axioms for left whiskering:\n  whiskerLeft_id : ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c), whiskerLeft f (𝟙 g) = 𝟙 (f ≫ g) := by\n    aesop_cat\n  whiskerLeft_comp :\n    ∀ {a b c} (f : a ⟶ b) {g h i : b ⟶ c} (η : g ⟶ h) (θ : h ⟶ i),\n      whiskerLeft f (η ≫ θ) = whiskerLeft f η ≫ whiskerLeft f θ := by\n    aesop_cat\n  id_whiskerLeft :\n    ∀ {a b} {f g : a ⟶ b} (η : f ⟶ g),\n      whiskerLeft (𝟙 a) η = (leftUnitor f).hom ≫ η ≫ (leftUnitor g).inv := by\n    aesop_cat\n  comp_whiskerLeft :\n    ∀ {a b c d} (f : a ⟶ b) (g : b ⟶ c) {h h' : c ⟶ d} (η : h ⟶ h'),\n      whiskerLeft (f ≫ g) η =\n        (associator f g h).hom ≫ whiskerLeft f (whiskerLeft g η) ≫ (associator f g h').inv := by\n    aesop_cat\n  -- axioms for right whiskering:\n  id_whiskerRight : ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c), whiskerRight (𝟙 f) g = 𝟙 (f ≫ g) := by\n    aesop_cat\n  comp_whiskerRight :\n    ∀ {a b c} {f g h : a ⟶ b} (η : f ⟶ g) (θ : g ⟶ h) (i : b ⟶ c),\n      whiskerRight (η ≫ θ) i = whiskerRight η i ≫ whiskerRight θ i := by\n    aesop_cat\n  whiskerRight_id :\n    ∀ {a b} {f g : a ⟶ b} (η : f ⟶ g),\n      whiskerRight η (𝟙 b) = (rightUnitor f).hom ≫ η ≫ (rightUnitor g).inv := by\n    aesop_cat\n  whiskerRight_comp :\n    ∀ {a b c d} {f f' : a ⟶ b} (η : f ⟶ f') (g : b ⟶ c) (h : c ⟶ d),\n      whiskerRight η (g ≫ h) =\n        (associator f g h).inv ≫ whiskerRight (whiskerRight η g) h ≫ (associator f' g h).hom := by\n    aesop_cat\n  -- associativity of whiskerings:\n  whisker_assoc :\n    ∀ {a b c d} (f : a ⟶ b) {g g' : b ⟶ c} (η : g ⟶ g') (h : c ⟶ d),\n      whiskerRight (whiskerLeft f η) h =\n        (associator f g h).hom ≫ whiskerLeft f (whiskerRight η h) ≫ (associator f g' h).inv := by\n    aesop_cat\n  -- exchange law of left and right whiskerings:\n  whisker_exchange :\n    ∀ {a b c} {f g : a ⟶ b} {h i : b ⟶ c} (η : f ⟶ g) (θ : h ⟶ i),\n      whiskerLeft f θ ≫ whiskerRight η i = whiskerRight η h ≫ whiskerLeft g θ := by\n    aesop_cat\n  -- pentagon identity:\n  pentagon :\n    ∀ {a b c d e} (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e),\n      whiskerRight (associator f g h).hom i ≫\n          (associator f (g ≫ h) i).hom ≫ whiskerLeft f (associator g h i).hom =\n        (associator (f ≫ g) h i).hom ≫ (associator f g (h ≫ i)).hom := by\n    aesop_cat\n  -- triangle identity:\n  triangle :\n    ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c),\n      (associator f (𝟙 b) g).hom ≫ whiskerLeft f (leftUnitor g).hom\n      = whiskerRight (rightUnitor f).hom g := by\n    aesop_cat\n\n"}
{"name":"CategoryTheory.Bicategory.whisker_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\nself : CategoryTheory.Bicategory B\na b c d : B\nf : Quiver.Hom a b\ng g' : Quiver.Hom b c\nη : Quiver.Hom g g'\nh : Quiver.Hom c d\n⊢ Eq (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.whiskerLeft f η) h) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.whiskerRight η h)) (CategoryTheory.Bicategory.associator f g' h).inv))","decl":"/-- In a bicategory, we can compose the 1-morphisms `f : a ⟶ b` and `g : b ⟶ c` to obtain\na 1-morphism `f ≫ g : a ⟶ c`. This composition does not need to be strictly associative,\nbut there is a specified associator, `α_ f g h : (f ≫ g) ≫ h ≅ f ≫ (g ≫ h)`.\nThere is an identity 1-morphism `𝟙 a : a ⟶ a`, with specified left and right unitor\nisomorphisms `λ_ f : 𝟙 a ≫ f ≅ f` and `ρ_ f : f ≫ 𝟙 a ≅ f`.\nThese associators and unitors satisfy the pentagon and triangle equations.\n\nSee https://ncatlab.org/nlab/show/bicategory.\n-/\n@[nolint checkUnivs]\nclass Bicategory (B : Type u) extends CategoryStruct.{v} B where\n  -- category structure on the collection of 1-morphisms:\n  homCategory : ∀ a b : B, Category.{w} (a ⟶ b) := by infer_instance\n  -- left whiskering:\n  whiskerLeft {a b c : B} (f : a ⟶ b) {g h : b ⟶ c} (η : g ⟶ h) : f ≫ g ⟶ f ≫ h\n  -- right whiskering:\n  whiskerRight {a b c : B} {f g : a ⟶ b} (η : f ⟶ g) (h : b ⟶ c) : f ≫ h ⟶ g ≫ h\n  -- associator:\n  associator {a b c d : B} (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) : (f ≫ g) ≫ h ≅ f ≫ g ≫ h\n  -- left unitor:\n  leftUnitor {a b : B} (f : a ⟶ b) : 𝟙 a ≫ f ≅ f\n  -- right unitor:\n  rightUnitor {a b : B} (f : a ⟶ b) : f ≫ 𝟙 b ≅ f\n  -- axioms for left whiskering:\n  whiskerLeft_id : ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c), whiskerLeft f (𝟙 g) = 𝟙 (f ≫ g) := by\n    aesop_cat\n  whiskerLeft_comp :\n    ∀ {a b c} (f : a ⟶ b) {g h i : b ⟶ c} (η : g ⟶ h) (θ : h ⟶ i),\n      whiskerLeft f (η ≫ θ) = whiskerLeft f η ≫ whiskerLeft f θ := by\n    aesop_cat\n  id_whiskerLeft :\n    ∀ {a b} {f g : a ⟶ b} (η : f ⟶ g),\n      whiskerLeft (𝟙 a) η = (leftUnitor f).hom ≫ η ≫ (leftUnitor g).inv := by\n    aesop_cat\n  comp_whiskerLeft :\n    ∀ {a b c d} (f : a ⟶ b) (g : b ⟶ c) {h h' : c ⟶ d} (η : h ⟶ h'),\n      whiskerLeft (f ≫ g) η =\n        (associator f g h).hom ≫ whiskerLeft f (whiskerLeft g η) ≫ (associator f g h').inv := by\n    aesop_cat\n  -- axioms for right whiskering:\n  id_whiskerRight : ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c), whiskerRight (𝟙 f) g = 𝟙 (f ≫ g) := by\n    aesop_cat\n  comp_whiskerRight :\n    ∀ {a b c} {f g h : a ⟶ b} (η : f ⟶ g) (θ : g ⟶ h) (i : b ⟶ c),\n      whiskerRight (η ≫ θ) i = whiskerRight η i ≫ whiskerRight θ i := by\n    aesop_cat\n  whiskerRight_id :\n    ∀ {a b} {f g : a ⟶ b} (η : f ⟶ g),\n      whiskerRight η (𝟙 b) = (rightUnitor f).hom ≫ η ≫ (rightUnitor g).inv := by\n    aesop_cat\n  whiskerRight_comp :\n    ∀ {a b c d} {f f' : a ⟶ b} (η : f ⟶ f') (g : b ⟶ c) (h : c ⟶ d),\n      whiskerRight η (g ≫ h) =\n        (associator f g h).inv ≫ whiskerRight (whiskerRight η g) h ≫ (associator f' g h).hom := by\n    aesop_cat\n  -- associativity of whiskerings:\n  whisker_assoc :\n    ∀ {a b c d} (f : a ⟶ b) {g g' : b ⟶ c} (η : g ⟶ g') (h : c ⟶ d),\n      whiskerRight (whiskerLeft f η) h =\n        (associator f g h).hom ≫ whiskerLeft f (whiskerRight η h) ≫ (associator f g' h).inv := by\n    aesop_cat\n  -- exchange law of left and right whiskerings:\n  whisker_exchange :\n    ∀ {a b c} {f g : a ⟶ b} {h i : b ⟶ c} (η : f ⟶ g) (θ : h ⟶ i),\n      whiskerLeft f θ ≫ whiskerRight η i = whiskerRight η h ≫ whiskerLeft g θ := by\n    aesop_cat\n  -- pentagon identity:\n  pentagon :\n    ∀ {a b c d e} (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e),\n      whiskerRight (associator f g h).hom i ≫\n          (associator f (g ≫ h) i).hom ≫ whiskerLeft f (associator g h i).hom =\n        (associator (f ≫ g) h i).hom ≫ (associator f g (h ≫ i)).hom := by\n    aesop_cat\n  -- triangle identity:\n  triangle :\n    ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c),\n      (associator f (𝟙 b) g).hom ≫ whiskerLeft f (leftUnitor g).hom\n      = whiskerRight (rightUnitor f).hom g := by\n    aesop_cat\n\n"}
{"name":"CategoryTheory.Bicategory.id_whiskerRight","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\nself : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\n⊢ Eq (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.CategoryStruct.id f) g) (CategoryTheory.CategoryStruct.id (CategoryTheory.CategoryStruct.comp f g))","decl":"/-- In a bicategory, we can compose the 1-morphisms `f : a ⟶ b` and `g : b ⟶ c` to obtain\na 1-morphism `f ≫ g : a ⟶ c`. This composition does not need to be strictly associative,\nbut there is a specified associator, `α_ f g h : (f ≫ g) ≫ h ≅ f ≫ (g ≫ h)`.\nThere is an identity 1-morphism `𝟙 a : a ⟶ a`, with specified left and right unitor\nisomorphisms `λ_ f : 𝟙 a ≫ f ≅ f` and `ρ_ f : f ≫ 𝟙 a ≅ f`.\nThese associators and unitors satisfy the pentagon and triangle equations.\n\nSee https://ncatlab.org/nlab/show/bicategory.\n-/\n@[nolint checkUnivs]\nclass Bicategory (B : Type u) extends CategoryStruct.{v} B where\n  -- category structure on the collection of 1-morphisms:\n  homCategory : ∀ a b : B, Category.{w} (a ⟶ b) := by infer_instance\n  -- left whiskering:\n  whiskerLeft {a b c : B} (f : a ⟶ b) {g h : b ⟶ c} (η : g ⟶ h) : f ≫ g ⟶ f ≫ h\n  -- right whiskering:\n  whiskerRight {a b c : B} {f g : a ⟶ b} (η : f ⟶ g) (h : b ⟶ c) : f ≫ h ⟶ g ≫ h\n  -- associator:\n  associator {a b c d : B} (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) : (f ≫ g) ≫ h ≅ f ≫ g ≫ h\n  -- left unitor:\n  leftUnitor {a b : B} (f : a ⟶ b) : 𝟙 a ≫ f ≅ f\n  -- right unitor:\n  rightUnitor {a b : B} (f : a ⟶ b) : f ≫ 𝟙 b ≅ f\n  -- axioms for left whiskering:\n  whiskerLeft_id : ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c), whiskerLeft f (𝟙 g) = 𝟙 (f ≫ g) := by\n    aesop_cat\n  whiskerLeft_comp :\n    ∀ {a b c} (f : a ⟶ b) {g h i : b ⟶ c} (η : g ⟶ h) (θ : h ⟶ i),\n      whiskerLeft f (η ≫ θ) = whiskerLeft f η ≫ whiskerLeft f θ := by\n    aesop_cat\n  id_whiskerLeft :\n    ∀ {a b} {f g : a ⟶ b} (η : f ⟶ g),\n      whiskerLeft (𝟙 a) η = (leftUnitor f).hom ≫ η ≫ (leftUnitor g).inv := by\n    aesop_cat\n  comp_whiskerLeft :\n    ∀ {a b c d} (f : a ⟶ b) (g : b ⟶ c) {h h' : c ⟶ d} (η : h ⟶ h'),\n      whiskerLeft (f ≫ g) η =\n        (associator f g h).hom ≫ whiskerLeft f (whiskerLeft g η) ≫ (associator f g h').inv := by\n    aesop_cat\n  -- axioms for right whiskering:\n  id_whiskerRight : ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c), whiskerRight (𝟙 f) g = 𝟙 (f ≫ g) := by\n    aesop_cat\n  comp_whiskerRight :\n    ∀ {a b c} {f g h : a ⟶ b} (η : f ⟶ g) (θ : g ⟶ h) (i : b ⟶ c),\n      whiskerRight (η ≫ θ) i = whiskerRight η i ≫ whiskerRight θ i := by\n    aesop_cat\n  whiskerRight_id :\n    ∀ {a b} {f g : a ⟶ b} (η : f ⟶ g),\n      whiskerRight η (𝟙 b) = (rightUnitor f).hom ≫ η ≫ (rightUnitor g).inv := by\n    aesop_cat\n  whiskerRight_comp :\n    ∀ {a b c d} {f f' : a ⟶ b} (η : f ⟶ f') (g : b ⟶ c) (h : c ⟶ d),\n      whiskerRight η (g ≫ h) =\n        (associator f g h).inv ≫ whiskerRight (whiskerRight η g) h ≫ (associator f' g h).hom := by\n    aesop_cat\n  -- associativity of whiskerings:\n  whisker_assoc :\n    ∀ {a b c d} (f : a ⟶ b) {g g' : b ⟶ c} (η : g ⟶ g') (h : c ⟶ d),\n      whiskerRight (whiskerLeft f η) h =\n        (associator f g h).hom ≫ whiskerLeft f (whiskerRight η h) ≫ (associator f g' h).inv := by\n    aesop_cat\n  -- exchange law of left and right whiskerings:\n  whisker_exchange :\n    ∀ {a b c} {f g : a ⟶ b} {h i : b ⟶ c} (η : f ⟶ g) (θ : h ⟶ i),\n      whiskerLeft f θ ≫ whiskerRight η i = whiskerRight η h ≫ whiskerLeft g θ := by\n    aesop_cat\n  -- pentagon identity:\n  pentagon :\n    ∀ {a b c d e} (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e),\n      whiskerRight (associator f g h).hom i ≫\n          (associator f (g ≫ h) i).hom ≫ whiskerLeft f (associator g h i).hom =\n        (associator (f ≫ g) h i).hom ≫ (associator f g (h ≫ i)).hom := by\n    aesop_cat\n  -- triangle identity:\n  triangle :\n    ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c),\n      (associator f (𝟙 b) g).hom ≫ whiskerLeft f (leftUnitor g).hom\n      = whiskerRight (rightUnitor f).hom g := by\n    aesop_cat\n\n"}
{"name":"CategoryTheory.Bicategory.triangle","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\nself : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.id b) g).hom (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.leftUnitor g).hom)) (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.rightUnitor f).hom g)","decl":"/-- In a bicategory, we can compose the 1-morphisms `f : a ⟶ b` and `g : b ⟶ c` to obtain\na 1-morphism `f ≫ g : a ⟶ c`. This composition does not need to be strictly associative,\nbut there is a specified associator, `α_ f g h : (f ≫ g) ≫ h ≅ f ≫ (g ≫ h)`.\nThere is an identity 1-morphism `𝟙 a : a ⟶ a`, with specified left and right unitor\nisomorphisms `λ_ f : 𝟙 a ≫ f ≅ f` and `ρ_ f : f ≫ 𝟙 a ≅ f`.\nThese associators and unitors satisfy the pentagon and triangle equations.\n\nSee https://ncatlab.org/nlab/show/bicategory.\n-/\n@[nolint checkUnivs]\nclass Bicategory (B : Type u) extends CategoryStruct.{v} B where\n  -- category structure on the collection of 1-morphisms:\n  homCategory : ∀ a b : B, Category.{w} (a ⟶ b) := by infer_instance\n  -- left whiskering:\n  whiskerLeft {a b c : B} (f : a ⟶ b) {g h : b ⟶ c} (η : g ⟶ h) : f ≫ g ⟶ f ≫ h\n  -- right whiskering:\n  whiskerRight {a b c : B} {f g : a ⟶ b} (η : f ⟶ g) (h : b ⟶ c) : f ≫ h ⟶ g ≫ h\n  -- associator:\n  associator {a b c d : B} (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) : (f ≫ g) ≫ h ≅ f ≫ g ≫ h\n  -- left unitor:\n  leftUnitor {a b : B} (f : a ⟶ b) : 𝟙 a ≫ f ≅ f\n  -- right unitor:\n  rightUnitor {a b : B} (f : a ⟶ b) : f ≫ 𝟙 b ≅ f\n  -- axioms for left whiskering:\n  whiskerLeft_id : ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c), whiskerLeft f (𝟙 g) = 𝟙 (f ≫ g) := by\n    aesop_cat\n  whiskerLeft_comp :\n    ∀ {a b c} (f : a ⟶ b) {g h i : b ⟶ c} (η : g ⟶ h) (θ : h ⟶ i),\n      whiskerLeft f (η ≫ θ) = whiskerLeft f η ≫ whiskerLeft f θ := by\n    aesop_cat\n  id_whiskerLeft :\n    ∀ {a b} {f g : a ⟶ b} (η : f ⟶ g),\n      whiskerLeft (𝟙 a) η = (leftUnitor f).hom ≫ η ≫ (leftUnitor g).inv := by\n    aesop_cat\n  comp_whiskerLeft :\n    ∀ {a b c d} (f : a ⟶ b) (g : b ⟶ c) {h h' : c ⟶ d} (η : h ⟶ h'),\n      whiskerLeft (f ≫ g) η =\n        (associator f g h).hom ≫ whiskerLeft f (whiskerLeft g η) ≫ (associator f g h').inv := by\n    aesop_cat\n  -- axioms for right whiskering:\n  id_whiskerRight : ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c), whiskerRight (𝟙 f) g = 𝟙 (f ≫ g) := by\n    aesop_cat\n  comp_whiskerRight :\n    ∀ {a b c} {f g h : a ⟶ b} (η : f ⟶ g) (θ : g ⟶ h) (i : b ⟶ c),\n      whiskerRight (η ≫ θ) i = whiskerRight η i ≫ whiskerRight θ i := by\n    aesop_cat\n  whiskerRight_id :\n    ∀ {a b} {f g : a ⟶ b} (η : f ⟶ g),\n      whiskerRight η (𝟙 b) = (rightUnitor f).hom ≫ η ≫ (rightUnitor g).inv := by\n    aesop_cat\n  whiskerRight_comp :\n    ∀ {a b c d} {f f' : a ⟶ b} (η : f ⟶ f') (g : b ⟶ c) (h : c ⟶ d),\n      whiskerRight η (g ≫ h) =\n        (associator f g h).inv ≫ whiskerRight (whiskerRight η g) h ≫ (associator f' g h).hom := by\n    aesop_cat\n  -- associativity of whiskerings:\n  whisker_assoc :\n    ∀ {a b c d} (f : a ⟶ b) {g g' : b ⟶ c} (η : g ⟶ g') (h : c ⟶ d),\n      whiskerRight (whiskerLeft f η) h =\n        (associator f g h).hom ≫ whiskerLeft f (whiskerRight η h) ≫ (associator f g' h).inv := by\n    aesop_cat\n  -- exchange law of left and right whiskerings:\n  whisker_exchange :\n    ∀ {a b c} {f g : a ⟶ b} {h i : b ⟶ c} (η : f ⟶ g) (θ : h ⟶ i),\n      whiskerLeft f θ ≫ whiskerRight η i = whiskerRight η h ≫ whiskerLeft g θ := by\n    aesop_cat\n  -- pentagon identity:\n  pentagon :\n    ∀ {a b c d e} (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e),\n      whiskerRight (associator f g h).hom i ≫\n          (associator f (g ≫ h) i).hom ≫ whiskerLeft f (associator g h i).hom =\n        (associator (f ≫ g) h i).hom ≫ (associator f g (h ≫ i)).hom := by\n    aesop_cat\n  -- triangle identity:\n  triangle :\n    ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c),\n      (associator f (𝟙 b) g).hom ≫ whiskerLeft f (leftUnitor g).hom\n      = whiskerRight (rightUnitor f).hom g := by\n    aesop_cat\n\n"}
{"name":"CategoryTheory.Bicategory.pentagon","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\nself : CategoryTheory.Bicategory B\na b c d e : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh : Quiver.Hom c d\ni : Quiver.Hom d e\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.associator f g h).hom i) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.comp g h) i).hom (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.associator g h i).hom))) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.comp f g) h i).hom (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.comp h i)).hom)","decl":"/-- In a bicategory, we can compose the 1-morphisms `f : a ⟶ b` and `g : b ⟶ c` to obtain\na 1-morphism `f ≫ g : a ⟶ c`. This composition does not need to be strictly associative,\nbut there is a specified associator, `α_ f g h : (f ≫ g) ≫ h ≅ f ≫ (g ≫ h)`.\nThere is an identity 1-morphism `𝟙 a : a ⟶ a`, with specified left and right unitor\nisomorphisms `λ_ f : 𝟙 a ≫ f ≅ f` and `ρ_ f : f ≫ 𝟙 a ≅ f`.\nThese associators and unitors satisfy the pentagon and triangle equations.\n\nSee https://ncatlab.org/nlab/show/bicategory.\n-/\n@[nolint checkUnivs]\nclass Bicategory (B : Type u) extends CategoryStruct.{v} B where\n  -- category structure on the collection of 1-morphisms:\n  homCategory : ∀ a b : B, Category.{w} (a ⟶ b) := by infer_instance\n  -- left whiskering:\n  whiskerLeft {a b c : B} (f : a ⟶ b) {g h : b ⟶ c} (η : g ⟶ h) : f ≫ g ⟶ f ≫ h\n  -- right whiskering:\n  whiskerRight {a b c : B} {f g : a ⟶ b} (η : f ⟶ g) (h : b ⟶ c) : f ≫ h ⟶ g ≫ h\n  -- associator:\n  associator {a b c d : B} (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) : (f ≫ g) ≫ h ≅ f ≫ g ≫ h\n  -- left unitor:\n  leftUnitor {a b : B} (f : a ⟶ b) : 𝟙 a ≫ f ≅ f\n  -- right unitor:\n  rightUnitor {a b : B} (f : a ⟶ b) : f ≫ 𝟙 b ≅ f\n  -- axioms for left whiskering:\n  whiskerLeft_id : ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c), whiskerLeft f (𝟙 g) = 𝟙 (f ≫ g) := by\n    aesop_cat\n  whiskerLeft_comp :\n    ∀ {a b c} (f : a ⟶ b) {g h i : b ⟶ c} (η : g ⟶ h) (θ : h ⟶ i),\n      whiskerLeft f (η ≫ θ) = whiskerLeft f η ≫ whiskerLeft f θ := by\n    aesop_cat\n  id_whiskerLeft :\n    ∀ {a b} {f g : a ⟶ b} (η : f ⟶ g),\n      whiskerLeft (𝟙 a) η = (leftUnitor f).hom ≫ η ≫ (leftUnitor g).inv := by\n    aesop_cat\n  comp_whiskerLeft :\n    ∀ {a b c d} (f : a ⟶ b) (g : b ⟶ c) {h h' : c ⟶ d} (η : h ⟶ h'),\n      whiskerLeft (f ≫ g) η =\n        (associator f g h).hom ≫ whiskerLeft f (whiskerLeft g η) ≫ (associator f g h').inv := by\n    aesop_cat\n  -- axioms for right whiskering:\n  id_whiskerRight : ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c), whiskerRight (𝟙 f) g = 𝟙 (f ≫ g) := by\n    aesop_cat\n  comp_whiskerRight :\n    ∀ {a b c} {f g h : a ⟶ b} (η : f ⟶ g) (θ : g ⟶ h) (i : b ⟶ c),\n      whiskerRight (η ≫ θ) i = whiskerRight η i ≫ whiskerRight θ i := by\n    aesop_cat\n  whiskerRight_id :\n    ∀ {a b} {f g : a ⟶ b} (η : f ⟶ g),\n      whiskerRight η (𝟙 b) = (rightUnitor f).hom ≫ η ≫ (rightUnitor g).inv := by\n    aesop_cat\n  whiskerRight_comp :\n    ∀ {a b c d} {f f' : a ⟶ b} (η : f ⟶ f') (g : b ⟶ c) (h : c ⟶ d),\n      whiskerRight η (g ≫ h) =\n        (associator f g h).inv ≫ whiskerRight (whiskerRight η g) h ≫ (associator f' g h).hom := by\n    aesop_cat\n  -- associativity of whiskerings:\n  whisker_assoc :\n    ∀ {a b c d} (f : a ⟶ b) {g g' : b ⟶ c} (η : g ⟶ g') (h : c ⟶ d),\n      whiskerRight (whiskerLeft f η) h =\n        (associator f g h).hom ≫ whiskerLeft f (whiskerRight η h) ≫ (associator f g' h).inv := by\n    aesop_cat\n  -- exchange law of left and right whiskerings:\n  whisker_exchange :\n    ∀ {a b c} {f g : a ⟶ b} {h i : b ⟶ c} (η : f ⟶ g) (θ : h ⟶ i),\n      whiskerLeft f θ ≫ whiskerRight η i = whiskerRight η h ≫ whiskerLeft g θ := by\n    aesop_cat\n  -- pentagon identity:\n  pentagon :\n    ∀ {a b c d e} (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e),\n      whiskerRight (associator f g h).hom i ≫\n          (associator f (g ≫ h) i).hom ≫ whiskerLeft f (associator g h i).hom =\n        (associator (f ≫ g) h i).hom ≫ (associator f g (h ≫ i)).hom := by\n    aesop_cat\n  -- triangle identity:\n  triangle :\n    ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c),\n      (associator f (𝟙 b) g).hom ≫ whiskerLeft f (leftUnitor g).hom\n      = whiskerRight (rightUnitor f).hom g := by\n    aesop_cat\n\n"}
{"name":"CategoryTheory.Bicategory.whiskerLeft_id","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\nself : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\n⊢ Eq (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.CategoryStruct.id g)) (CategoryTheory.CategoryStruct.id (CategoryTheory.CategoryStruct.comp f g))","decl":"/-- In a bicategory, we can compose the 1-morphisms `f : a ⟶ b` and `g : b ⟶ c` to obtain\na 1-morphism `f ≫ g : a ⟶ c`. This composition does not need to be strictly associative,\nbut there is a specified associator, `α_ f g h : (f ≫ g) ≫ h ≅ f ≫ (g ≫ h)`.\nThere is an identity 1-morphism `𝟙 a : a ⟶ a`, with specified left and right unitor\nisomorphisms `λ_ f : 𝟙 a ≫ f ≅ f` and `ρ_ f : f ≫ 𝟙 a ≅ f`.\nThese associators and unitors satisfy the pentagon and triangle equations.\n\nSee https://ncatlab.org/nlab/show/bicategory.\n-/\n@[nolint checkUnivs]\nclass Bicategory (B : Type u) extends CategoryStruct.{v} B where\n  -- category structure on the collection of 1-morphisms:\n  homCategory : ∀ a b : B, Category.{w} (a ⟶ b) := by infer_instance\n  -- left whiskering:\n  whiskerLeft {a b c : B} (f : a ⟶ b) {g h : b ⟶ c} (η : g ⟶ h) : f ≫ g ⟶ f ≫ h\n  -- right whiskering:\n  whiskerRight {a b c : B} {f g : a ⟶ b} (η : f ⟶ g) (h : b ⟶ c) : f ≫ h ⟶ g ≫ h\n  -- associator:\n  associator {a b c d : B} (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) : (f ≫ g) ≫ h ≅ f ≫ g ≫ h\n  -- left unitor:\n  leftUnitor {a b : B} (f : a ⟶ b) : 𝟙 a ≫ f ≅ f\n  -- right unitor:\n  rightUnitor {a b : B} (f : a ⟶ b) : f ≫ 𝟙 b ≅ f\n  -- axioms for left whiskering:\n  whiskerLeft_id : ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c), whiskerLeft f (𝟙 g) = 𝟙 (f ≫ g) := by\n    aesop_cat\n  whiskerLeft_comp :\n    ∀ {a b c} (f : a ⟶ b) {g h i : b ⟶ c} (η : g ⟶ h) (θ : h ⟶ i),\n      whiskerLeft f (η ≫ θ) = whiskerLeft f η ≫ whiskerLeft f θ := by\n    aesop_cat\n  id_whiskerLeft :\n    ∀ {a b} {f g : a ⟶ b} (η : f ⟶ g),\n      whiskerLeft (𝟙 a) η = (leftUnitor f).hom ≫ η ≫ (leftUnitor g).inv := by\n    aesop_cat\n  comp_whiskerLeft :\n    ∀ {a b c d} (f : a ⟶ b) (g : b ⟶ c) {h h' : c ⟶ d} (η : h ⟶ h'),\n      whiskerLeft (f ≫ g) η =\n        (associator f g h).hom ≫ whiskerLeft f (whiskerLeft g η) ≫ (associator f g h').inv := by\n    aesop_cat\n  -- axioms for right whiskering:\n  id_whiskerRight : ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c), whiskerRight (𝟙 f) g = 𝟙 (f ≫ g) := by\n    aesop_cat\n  comp_whiskerRight :\n    ∀ {a b c} {f g h : a ⟶ b} (η : f ⟶ g) (θ : g ⟶ h) (i : b ⟶ c),\n      whiskerRight (η ≫ θ) i = whiskerRight η i ≫ whiskerRight θ i := by\n    aesop_cat\n  whiskerRight_id :\n    ∀ {a b} {f g : a ⟶ b} (η : f ⟶ g),\n      whiskerRight η (𝟙 b) = (rightUnitor f).hom ≫ η ≫ (rightUnitor g).inv := by\n    aesop_cat\n  whiskerRight_comp :\n    ∀ {a b c d} {f f' : a ⟶ b} (η : f ⟶ f') (g : b ⟶ c) (h : c ⟶ d),\n      whiskerRight η (g ≫ h) =\n        (associator f g h).inv ≫ whiskerRight (whiskerRight η g) h ≫ (associator f' g h).hom := by\n    aesop_cat\n  -- associativity of whiskerings:\n  whisker_assoc :\n    ∀ {a b c d} (f : a ⟶ b) {g g' : b ⟶ c} (η : g ⟶ g') (h : c ⟶ d),\n      whiskerRight (whiskerLeft f η) h =\n        (associator f g h).hom ≫ whiskerLeft f (whiskerRight η h) ≫ (associator f g' h).inv := by\n    aesop_cat\n  -- exchange law of left and right whiskerings:\n  whisker_exchange :\n    ∀ {a b c} {f g : a ⟶ b} {h i : b ⟶ c} (η : f ⟶ g) (θ : h ⟶ i),\n      whiskerLeft f θ ≫ whiskerRight η i = whiskerRight η h ≫ whiskerLeft g θ := by\n    aesop_cat\n  -- pentagon identity:\n  pentagon :\n    ∀ {a b c d e} (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e),\n      whiskerRight (associator f g h).hom i ≫\n          (associator f (g ≫ h) i).hom ≫ whiskerLeft f (associator g h i).hom =\n        (associator (f ≫ g) h i).hom ≫ (associator f g (h ≫ i)).hom := by\n    aesop_cat\n  -- triangle identity:\n  triangle :\n    ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c),\n      (associator f (𝟙 b) g).hom ≫ whiskerLeft f (leftUnitor g).hom\n      = whiskerRight (rightUnitor f).hom g := by\n    aesop_cat\n\n"}
{"name":"CategoryTheory.Bicategory.whiskerRight_comp","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\nself : CategoryTheory.Bicategory B\na b c d : B\nf f' : Quiver.Hom a b\nη : Quiver.Hom f f'\ng : Quiver.Hom b c\nh : Quiver.Hom c d\n⊢ Eq (CategoryTheory.Bicategory.whiskerRight η (CategoryTheory.CategoryStruct.comp g h)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.whiskerRight η g) h) (CategoryTheory.Bicategory.associator f' g h).hom))","decl":"/-- In a bicategory, we can compose the 1-morphisms `f : a ⟶ b` and `g : b ⟶ c` to obtain\na 1-morphism `f ≫ g : a ⟶ c`. This composition does not need to be strictly associative,\nbut there is a specified associator, `α_ f g h : (f ≫ g) ≫ h ≅ f ≫ (g ≫ h)`.\nThere is an identity 1-morphism `𝟙 a : a ⟶ a`, with specified left and right unitor\nisomorphisms `λ_ f : 𝟙 a ≫ f ≅ f` and `ρ_ f : f ≫ 𝟙 a ≅ f`.\nThese associators and unitors satisfy the pentagon and triangle equations.\n\nSee https://ncatlab.org/nlab/show/bicategory.\n-/\n@[nolint checkUnivs]\nclass Bicategory (B : Type u) extends CategoryStruct.{v} B where\n  -- category structure on the collection of 1-morphisms:\n  homCategory : ∀ a b : B, Category.{w} (a ⟶ b) := by infer_instance\n  -- left whiskering:\n  whiskerLeft {a b c : B} (f : a ⟶ b) {g h : b ⟶ c} (η : g ⟶ h) : f ≫ g ⟶ f ≫ h\n  -- right whiskering:\n  whiskerRight {a b c : B} {f g : a ⟶ b} (η : f ⟶ g) (h : b ⟶ c) : f ≫ h ⟶ g ≫ h\n  -- associator:\n  associator {a b c d : B} (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) : (f ≫ g) ≫ h ≅ f ≫ g ≫ h\n  -- left unitor:\n  leftUnitor {a b : B} (f : a ⟶ b) : 𝟙 a ≫ f ≅ f\n  -- right unitor:\n  rightUnitor {a b : B} (f : a ⟶ b) : f ≫ 𝟙 b ≅ f\n  -- axioms for left whiskering:\n  whiskerLeft_id : ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c), whiskerLeft f (𝟙 g) = 𝟙 (f ≫ g) := by\n    aesop_cat\n  whiskerLeft_comp :\n    ∀ {a b c} (f : a ⟶ b) {g h i : b ⟶ c} (η : g ⟶ h) (θ : h ⟶ i),\n      whiskerLeft f (η ≫ θ) = whiskerLeft f η ≫ whiskerLeft f θ := by\n    aesop_cat\n  id_whiskerLeft :\n    ∀ {a b} {f g : a ⟶ b} (η : f ⟶ g),\n      whiskerLeft (𝟙 a) η = (leftUnitor f).hom ≫ η ≫ (leftUnitor g).inv := by\n    aesop_cat\n  comp_whiskerLeft :\n    ∀ {a b c d} (f : a ⟶ b) (g : b ⟶ c) {h h' : c ⟶ d} (η : h ⟶ h'),\n      whiskerLeft (f ≫ g) η =\n        (associator f g h).hom ≫ whiskerLeft f (whiskerLeft g η) ≫ (associator f g h').inv := by\n    aesop_cat\n  -- axioms for right whiskering:\n  id_whiskerRight : ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c), whiskerRight (𝟙 f) g = 𝟙 (f ≫ g) := by\n    aesop_cat\n  comp_whiskerRight :\n    ∀ {a b c} {f g h : a ⟶ b} (η : f ⟶ g) (θ : g ⟶ h) (i : b ⟶ c),\n      whiskerRight (η ≫ θ) i = whiskerRight η i ≫ whiskerRight θ i := by\n    aesop_cat\n  whiskerRight_id :\n    ∀ {a b} {f g : a ⟶ b} (η : f ⟶ g),\n      whiskerRight η (𝟙 b) = (rightUnitor f).hom ≫ η ≫ (rightUnitor g).inv := by\n    aesop_cat\n  whiskerRight_comp :\n    ∀ {a b c d} {f f' : a ⟶ b} (η : f ⟶ f') (g : b ⟶ c) (h : c ⟶ d),\n      whiskerRight η (g ≫ h) =\n        (associator f g h).inv ≫ whiskerRight (whiskerRight η g) h ≫ (associator f' g h).hom := by\n    aesop_cat\n  -- associativity of whiskerings:\n  whisker_assoc :\n    ∀ {a b c d} (f : a ⟶ b) {g g' : b ⟶ c} (η : g ⟶ g') (h : c ⟶ d),\n      whiskerRight (whiskerLeft f η) h =\n        (associator f g h).hom ≫ whiskerLeft f (whiskerRight η h) ≫ (associator f g' h).inv := by\n    aesop_cat\n  -- exchange law of left and right whiskerings:\n  whisker_exchange :\n    ∀ {a b c} {f g : a ⟶ b} {h i : b ⟶ c} (η : f ⟶ g) (θ : h ⟶ i),\n      whiskerLeft f θ ≫ whiskerRight η i = whiskerRight η h ≫ whiskerLeft g θ := by\n    aesop_cat\n  -- pentagon identity:\n  pentagon :\n    ∀ {a b c d e} (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e),\n      whiskerRight (associator f g h).hom i ≫\n          (associator f (g ≫ h) i).hom ≫ whiskerLeft f (associator g h i).hom =\n        (associator (f ≫ g) h i).hom ≫ (associator f g (h ≫ i)).hom := by\n    aesop_cat\n  -- triangle identity:\n  triangle :\n    ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c),\n      (associator f (𝟙 b) g).hom ≫ whiskerLeft f (leftUnitor g).hom\n      = whiskerRight (rightUnitor f).hom g := by\n    aesop_cat\n\n"}
{"name":"CategoryTheory.Bicategory.id_whiskerLeft","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\nself : CategoryTheory.Bicategory B\na b : B\nf g : Quiver.Hom a b\nη : Quiver.Hom f g\n⊢ Eq (CategoryTheory.Bicategory.whiskerLeft (CategoryTheory.CategoryStruct.id a) η) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.leftUnitor f).hom (CategoryTheory.CategoryStruct.comp η (CategoryTheory.Bicategory.leftUnitor g).inv))","decl":"/-- In a bicategory, we can compose the 1-morphisms `f : a ⟶ b` and `g : b ⟶ c` to obtain\na 1-morphism `f ≫ g : a ⟶ c`. This composition does not need to be strictly associative,\nbut there is a specified associator, `α_ f g h : (f ≫ g) ≫ h ≅ f ≫ (g ≫ h)`.\nThere is an identity 1-morphism `𝟙 a : a ⟶ a`, with specified left and right unitor\nisomorphisms `λ_ f : 𝟙 a ≫ f ≅ f` and `ρ_ f : f ≫ 𝟙 a ≅ f`.\nThese associators and unitors satisfy the pentagon and triangle equations.\n\nSee https://ncatlab.org/nlab/show/bicategory.\n-/\n@[nolint checkUnivs]\nclass Bicategory (B : Type u) extends CategoryStruct.{v} B where\n  -- category structure on the collection of 1-morphisms:\n  homCategory : ∀ a b : B, Category.{w} (a ⟶ b) := by infer_instance\n  -- left whiskering:\n  whiskerLeft {a b c : B} (f : a ⟶ b) {g h : b ⟶ c} (η : g ⟶ h) : f ≫ g ⟶ f ≫ h\n  -- right whiskering:\n  whiskerRight {a b c : B} {f g : a ⟶ b} (η : f ⟶ g) (h : b ⟶ c) : f ≫ h ⟶ g ≫ h\n  -- associator:\n  associator {a b c d : B} (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) : (f ≫ g) ≫ h ≅ f ≫ g ≫ h\n  -- left unitor:\n  leftUnitor {a b : B} (f : a ⟶ b) : 𝟙 a ≫ f ≅ f\n  -- right unitor:\n  rightUnitor {a b : B} (f : a ⟶ b) : f ≫ 𝟙 b ≅ f\n  -- axioms for left whiskering:\n  whiskerLeft_id : ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c), whiskerLeft f (𝟙 g) = 𝟙 (f ≫ g) := by\n    aesop_cat\n  whiskerLeft_comp :\n    ∀ {a b c} (f : a ⟶ b) {g h i : b ⟶ c} (η : g ⟶ h) (θ : h ⟶ i),\n      whiskerLeft f (η ≫ θ) = whiskerLeft f η ≫ whiskerLeft f θ := by\n    aesop_cat\n  id_whiskerLeft :\n    ∀ {a b} {f g : a ⟶ b} (η : f ⟶ g),\n      whiskerLeft (𝟙 a) η = (leftUnitor f).hom ≫ η ≫ (leftUnitor g).inv := by\n    aesop_cat\n  comp_whiskerLeft :\n    ∀ {a b c d} (f : a ⟶ b) (g : b ⟶ c) {h h' : c ⟶ d} (η : h ⟶ h'),\n      whiskerLeft (f ≫ g) η =\n        (associator f g h).hom ≫ whiskerLeft f (whiskerLeft g η) ≫ (associator f g h').inv := by\n    aesop_cat\n  -- axioms for right whiskering:\n  id_whiskerRight : ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c), whiskerRight (𝟙 f) g = 𝟙 (f ≫ g) := by\n    aesop_cat\n  comp_whiskerRight :\n    ∀ {a b c} {f g h : a ⟶ b} (η : f ⟶ g) (θ : g ⟶ h) (i : b ⟶ c),\n      whiskerRight (η ≫ θ) i = whiskerRight η i ≫ whiskerRight θ i := by\n    aesop_cat\n  whiskerRight_id :\n    ∀ {a b} {f g : a ⟶ b} (η : f ⟶ g),\n      whiskerRight η (𝟙 b) = (rightUnitor f).hom ≫ η ≫ (rightUnitor g).inv := by\n    aesop_cat\n  whiskerRight_comp :\n    ∀ {a b c d} {f f' : a ⟶ b} (η : f ⟶ f') (g : b ⟶ c) (h : c ⟶ d),\n      whiskerRight η (g ≫ h) =\n        (associator f g h).inv ≫ whiskerRight (whiskerRight η g) h ≫ (associator f' g h).hom := by\n    aesop_cat\n  -- associativity of whiskerings:\n  whisker_assoc :\n    ∀ {a b c d} (f : a ⟶ b) {g g' : b ⟶ c} (η : g ⟶ g') (h : c ⟶ d),\n      whiskerRight (whiskerLeft f η) h =\n        (associator f g h).hom ≫ whiskerLeft f (whiskerRight η h) ≫ (associator f g' h).inv := by\n    aesop_cat\n  -- exchange law of left and right whiskerings:\n  whisker_exchange :\n    ∀ {a b c} {f g : a ⟶ b} {h i : b ⟶ c} (η : f ⟶ g) (θ : h ⟶ i),\n      whiskerLeft f θ ≫ whiskerRight η i = whiskerRight η h ≫ whiskerLeft g θ := by\n    aesop_cat\n  -- pentagon identity:\n  pentagon :\n    ∀ {a b c d e} (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e),\n      whiskerRight (associator f g h).hom i ≫\n          (associator f (g ≫ h) i).hom ≫ whiskerLeft f (associator g h i).hom =\n        (associator (f ≫ g) h i).hom ≫ (associator f g (h ≫ i)).hom := by\n    aesop_cat\n  -- triangle identity:\n  triangle :\n    ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c),\n      (associator f (𝟙 b) g).hom ≫ whiskerLeft f (leftUnitor g).hom\n      = whiskerRight (rightUnitor f).hom g := by\n    aesop_cat\n\n"}
{"name":"CategoryTheory.Bicategory.whiskerRight_id","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\nself : CategoryTheory.Bicategory B\na b : B\nf g : Quiver.Hom a b\nη : Quiver.Hom f g\n⊢ Eq (CategoryTheory.Bicategory.whiskerRight η (CategoryTheory.CategoryStruct.id b)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.rightUnitor f).hom (CategoryTheory.CategoryStruct.comp η (CategoryTheory.Bicategory.rightUnitor g).inv))","decl":"/-- In a bicategory, we can compose the 1-morphisms `f : a ⟶ b` and `g : b ⟶ c` to obtain\na 1-morphism `f ≫ g : a ⟶ c`. This composition does not need to be strictly associative,\nbut there is a specified associator, `α_ f g h : (f ≫ g) ≫ h ≅ f ≫ (g ≫ h)`.\nThere is an identity 1-morphism `𝟙 a : a ⟶ a`, with specified left and right unitor\nisomorphisms `λ_ f : 𝟙 a ≫ f ≅ f` and `ρ_ f : f ≫ 𝟙 a ≅ f`.\nThese associators and unitors satisfy the pentagon and triangle equations.\n\nSee https://ncatlab.org/nlab/show/bicategory.\n-/\n@[nolint checkUnivs]\nclass Bicategory (B : Type u) extends CategoryStruct.{v} B where\n  -- category structure on the collection of 1-morphisms:\n  homCategory : ∀ a b : B, Category.{w} (a ⟶ b) := by infer_instance\n  -- left whiskering:\n  whiskerLeft {a b c : B} (f : a ⟶ b) {g h : b ⟶ c} (η : g ⟶ h) : f ≫ g ⟶ f ≫ h\n  -- right whiskering:\n  whiskerRight {a b c : B} {f g : a ⟶ b} (η : f ⟶ g) (h : b ⟶ c) : f ≫ h ⟶ g ≫ h\n  -- associator:\n  associator {a b c d : B} (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) : (f ≫ g) ≫ h ≅ f ≫ g ≫ h\n  -- left unitor:\n  leftUnitor {a b : B} (f : a ⟶ b) : 𝟙 a ≫ f ≅ f\n  -- right unitor:\n  rightUnitor {a b : B} (f : a ⟶ b) : f ≫ 𝟙 b ≅ f\n  -- axioms for left whiskering:\n  whiskerLeft_id : ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c), whiskerLeft f (𝟙 g) = 𝟙 (f ≫ g) := by\n    aesop_cat\n  whiskerLeft_comp :\n    ∀ {a b c} (f : a ⟶ b) {g h i : b ⟶ c} (η : g ⟶ h) (θ : h ⟶ i),\n      whiskerLeft f (η ≫ θ) = whiskerLeft f η ≫ whiskerLeft f θ := by\n    aesop_cat\n  id_whiskerLeft :\n    ∀ {a b} {f g : a ⟶ b} (η : f ⟶ g),\n      whiskerLeft (𝟙 a) η = (leftUnitor f).hom ≫ η ≫ (leftUnitor g).inv := by\n    aesop_cat\n  comp_whiskerLeft :\n    ∀ {a b c d} (f : a ⟶ b) (g : b ⟶ c) {h h' : c ⟶ d} (η : h ⟶ h'),\n      whiskerLeft (f ≫ g) η =\n        (associator f g h).hom ≫ whiskerLeft f (whiskerLeft g η) ≫ (associator f g h').inv := by\n    aesop_cat\n  -- axioms for right whiskering:\n  id_whiskerRight : ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c), whiskerRight (𝟙 f) g = 𝟙 (f ≫ g) := by\n    aesop_cat\n  comp_whiskerRight :\n    ∀ {a b c} {f g h : a ⟶ b} (η : f ⟶ g) (θ : g ⟶ h) (i : b ⟶ c),\n      whiskerRight (η ≫ θ) i = whiskerRight η i ≫ whiskerRight θ i := by\n    aesop_cat\n  whiskerRight_id :\n    ∀ {a b} {f g : a ⟶ b} (η : f ⟶ g),\n      whiskerRight η (𝟙 b) = (rightUnitor f).hom ≫ η ≫ (rightUnitor g).inv := by\n    aesop_cat\n  whiskerRight_comp :\n    ∀ {a b c d} {f f' : a ⟶ b} (η : f ⟶ f') (g : b ⟶ c) (h : c ⟶ d),\n      whiskerRight η (g ≫ h) =\n        (associator f g h).inv ≫ whiskerRight (whiskerRight η g) h ≫ (associator f' g h).hom := by\n    aesop_cat\n  -- associativity of whiskerings:\n  whisker_assoc :\n    ∀ {a b c d} (f : a ⟶ b) {g g' : b ⟶ c} (η : g ⟶ g') (h : c ⟶ d),\n      whiskerRight (whiskerLeft f η) h =\n        (associator f g h).hom ≫ whiskerLeft f (whiskerRight η h) ≫ (associator f g' h).inv := by\n    aesop_cat\n  -- exchange law of left and right whiskerings:\n  whisker_exchange :\n    ∀ {a b c} {f g : a ⟶ b} {h i : b ⟶ c} (η : f ⟶ g) (θ : h ⟶ i),\n      whiskerLeft f θ ≫ whiskerRight η i = whiskerRight η h ≫ whiskerLeft g θ := by\n    aesop_cat\n  -- pentagon identity:\n  pentagon :\n    ∀ {a b c d e} (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e),\n      whiskerRight (associator f g h).hom i ≫\n          (associator f (g ≫ h) i).hom ≫ whiskerLeft f (associator g h i).hom =\n        (associator (f ≫ g) h i).hom ≫ (associator f g (h ≫ i)).hom := by\n    aesop_cat\n  -- triangle identity:\n  triangle :\n    ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c),\n      (associator f (𝟙 b) g).hom ≫ whiskerLeft f (leftUnitor g).hom\n      = whiskerRight (rightUnitor f).hom g := by\n    aesop_cat\n\n"}
{"name":"CategoryTheory.Bicategory.whiskerLeft_comp","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\nself : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng h i : Quiver.Hom b c\nη : Quiver.Hom g h\nθ : Quiver.Hom h i\n⊢ Eq (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.CategoryStruct.comp η θ)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f η) (CategoryTheory.Bicategory.whiskerLeft f θ))","decl":"/-- In a bicategory, we can compose the 1-morphisms `f : a ⟶ b` and `g : b ⟶ c` to obtain\na 1-morphism `f ≫ g : a ⟶ c`. This composition does not need to be strictly associative,\nbut there is a specified associator, `α_ f g h : (f ≫ g) ≫ h ≅ f ≫ (g ≫ h)`.\nThere is an identity 1-morphism `𝟙 a : a ⟶ a`, with specified left and right unitor\nisomorphisms `λ_ f : 𝟙 a ≫ f ≅ f` and `ρ_ f : f ≫ 𝟙 a ≅ f`.\nThese associators and unitors satisfy the pentagon and triangle equations.\n\nSee https://ncatlab.org/nlab/show/bicategory.\n-/\n@[nolint checkUnivs]\nclass Bicategory (B : Type u) extends CategoryStruct.{v} B where\n  -- category structure on the collection of 1-morphisms:\n  homCategory : ∀ a b : B, Category.{w} (a ⟶ b) := by infer_instance\n  -- left whiskering:\n  whiskerLeft {a b c : B} (f : a ⟶ b) {g h : b ⟶ c} (η : g ⟶ h) : f ≫ g ⟶ f ≫ h\n  -- right whiskering:\n  whiskerRight {a b c : B} {f g : a ⟶ b} (η : f ⟶ g) (h : b ⟶ c) : f ≫ h ⟶ g ≫ h\n  -- associator:\n  associator {a b c d : B} (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) : (f ≫ g) ≫ h ≅ f ≫ g ≫ h\n  -- left unitor:\n  leftUnitor {a b : B} (f : a ⟶ b) : 𝟙 a ≫ f ≅ f\n  -- right unitor:\n  rightUnitor {a b : B} (f : a ⟶ b) : f ≫ 𝟙 b ≅ f\n  -- axioms for left whiskering:\n  whiskerLeft_id : ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c), whiskerLeft f (𝟙 g) = 𝟙 (f ≫ g) := by\n    aesop_cat\n  whiskerLeft_comp :\n    ∀ {a b c} (f : a ⟶ b) {g h i : b ⟶ c} (η : g ⟶ h) (θ : h ⟶ i),\n      whiskerLeft f (η ≫ θ) = whiskerLeft f η ≫ whiskerLeft f θ := by\n    aesop_cat\n  id_whiskerLeft :\n    ∀ {a b} {f g : a ⟶ b} (η : f ⟶ g),\n      whiskerLeft (𝟙 a) η = (leftUnitor f).hom ≫ η ≫ (leftUnitor g).inv := by\n    aesop_cat\n  comp_whiskerLeft :\n    ∀ {a b c d} (f : a ⟶ b) (g : b ⟶ c) {h h' : c ⟶ d} (η : h ⟶ h'),\n      whiskerLeft (f ≫ g) η =\n        (associator f g h).hom ≫ whiskerLeft f (whiskerLeft g η) ≫ (associator f g h').inv := by\n    aesop_cat\n  -- axioms for right whiskering:\n  id_whiskerRight : ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c), whiskerRight (𝟙 f) g = 𝟙 (f ≫ g) := by\n    aesop_cat\n  comp_whiskerRight :\n    ∀ {a b c} {f g h : a ⟶ b} (η : f ⟶ g) (θ : g ⟶ h) (i : b ⟶ c),\n      whiskerRight (η ≫ θ) i = whiskerRight η i ≫ whiskerRight θ i := by\n    aesop_cat\n  whiskerRight_id :\n    ∀ {a b} {f g : a ⟶ b} (η : f ⟶ g),\n      whiskerRight η (𝟙 b) = (rightUnitor f).hom ≫ η ≫ (rightUnitor g).inv := by\n    aesop_cat\n  whiskerRight_comp :\n    ∀ {a b c d} {f f' : a ⟶ b} (η : f ⟶ f') (g : b ⟶ c) (h : c ⟶ d),\n      whiskerRight η (g ≫ h) =\n        (associator f g h).inv ≫ whiskerRight (whiskerRight η g) h ≫ (associator f' g h).hom := by\n    aesop_cat\n  -- associativity of whiskerings:\n  whisker_assoc :\n    ∀ {a b c d} (f : a ⟶ b) {g g' : b ⟶ c} (η : g ⟶ g') (h : c ⟶ d),\n      whiskerRight (whiskerLeft f η) h =\n        (associator f g h).hom ≫ whiskerLeft f (whiskerRight η h) ≫ (associator f g' h).inv := by\n    aesop_cat\n  -- exchange law of left and right whiskerings:\n  whisker_exchange :\n    ∀ {a b c} {f g : a ⟶ b} {h i : b ⟶ c} (η : f ⟶ g) (θ : h ⟶ i),\n      whiskerLeft f θ ≫ whiskerRight η i = whiskerRight η h ≫ whiskerLeft g θ := by\n    aesop_cat\n  -- pentagon identity:\n  pentagon :\n    ∀ {a b c d e} (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e),\n      whiskerRight (associator f g h).hom i ≫\n          (associator f (g ≫ h) i).hom ≫ whiskerLeft f (associator g h i).hom =\n        (associator (f ≫ g) h i).hom ≫ (associator f g (h ≫ i)).hom := by\n    aesop_cat\n  -- triangle identity:\n  triangle :\n    ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c),\n      (associator f (𝟙 b) g).hom ≫ whiskerLeft f (leftUnitor g).hom\n      = whiskerRight (rightUnitor f).hom g := by\n    aesop_cat\n\n"}
{"name":"CategoryTheory.Bicategory.comp_whiskerLeft","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\nself : CategoryTheory.Bicategory B\na b c d : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh h' : Quiver.Hom c d\nη : Quiver.Hom h h'\n⊢ Eq (CategoryTheory.Bicategory.whiskerLeft (CategoryTheory.CategoryStruct.comp f g) η) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.whiskerLeft g η)) (CategoryTheory.Bicategory.associator f g h').inv))","decl":"/-- In a bicategory, we can compose the 1-morphisms `f : a ⟶ b` and `g : b ⟶ c` to obtain\na 1-morphism `f ≫ g : a ⟶ c`. This composition does not need to be strictly associative,\nbut there is a specified associator, `α_ f g h : (f ≫ g) ≫ h ≅ f ≫ (g ≫ h)`.\nThere is an identity 1-morphism `𝟙 a : a ⟶ a`, with specified left and right unitor\nisomorphisms `λ_ f : 𝟙 a ≫ f ≅ f` and `ρ_ f : f ≫ 𝟙 a ≅ f`.\nThese associators and unitors satisfy the pentagon and triangle equations.\n\nSee https://ncatlab.org/nlab/show/bicategory.\n-/\n@[nolint checkUnivs]\nclass Bicategory (B : Type u) extends CategoryStruct.{v} B where\n  -- category structure on the collection of 1-morphisms:\n  homCategory : ∀ a b : B, Category.{w} (a ⟶ b) := by infer_instance\n  -- left whiskering:\n  whiskerLeft {a b c : B} (f : a ⟶ b) {g h : b ⟶ c} (η : g ⟶ h) : f ≫ g ⟶ f ≫ h\n  -- right whiskering:\n  whiskerRight {a b c : B} {f g : a ⟶ b} (η : f ⟶ g) (h : b ⟶ c) : f ≫ h ⟶ g ≫ h\n  -- associator:\n  associator {a b c d : B} (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) : (f ≫ g) ≫ h ≅ f ≫ g ≫ h\n  -- left unitor:\n  leftUnitor {a b : B} (f : a ⟶ b) : 𝟙 a ≫ f ≅ f\n  -- right unitor:\n  rightUnitor {a b : B} (f : a ⟶ b) : f ≫ 𝟙 b ≅ f\n  -- axioms for left whiskering:\n  whiskerLeft_id : ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c), whiskerLeft f (𝟙 g) = 𝟙 (f ≫ g) := by\n    aesop_cat\n  whiskerLeft_comp :\n    ∀ {a b c} (f : a ⟶ b) {g h i : b ⟶ c} (η : g ⟶ h) (θ : h ⟶ i),\n      whiskerLeft f (η ≫ θ) = whiskerLeft f η ≫ whiskerLeft f θ := by\n    aesop_cat\n  id_whiskerLeft :\n    ∀ {a b} {f g : a ⟶ b} (η : f ⟶ g),\n      whiskerLeft (𝟙 a) η = (leftUnitor f).hom ≫ η ≫ (leftUnitor g).inv := by\n    aesop_cat\n  comp_whiskerLeft :\n    ∀ {a b c d} (f : a ⟶ b) (g : b ⟶ c) {h h' : c ⟶ d} (η : h ⟶ h'),\n      whiskerLeft (f ≫ g) η =\n        (associator f g h).hom ≫ whiskerLeft f (whiskerLeft g η) ≫ (associator f g h').inv := by\n    aesop_cat\n  -- axioms for right whiskering:\n  id_whiskerRight : ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c), whiskerRight (𝟙 f) g = 𝟙 (f ≫ g) := by\n    aesop_cat\n  comp_whiskerRight :\n    ∀ {a b c} {f g h : a ⟶ b} (η : f ⟶ g) (θ : g ⟶ h) (i : b ⟶ c),\n      whiskerRight (η ≫ θ) i = whiskerRight η i ≫ whiskerRight θ i := by\n    aesop_cat\n  whiskerRight_id :\n    ∀ {a b} {f g : a ⟶ b} (η : f ⟶ g),\n      whiskerRight η (𝟙 b) = (rightUnitor f).hom ≫ η ≫ (rightUnitor g).inv := by\n    aesop_cat\n  whiskerRight_comp :\n    ∀ {a b c d} {f f' : a ⟶ b} (η : f ⟶ f') (g : b ⟶ c) (h : c ⟶ d),\n      whiskerRight η (g ≫ h) =\n        (associator f g h).inv ≫ whiskerRight (whiskerRight η g) h ≫ (associator f' g h).hom := by\n    aesop_cat\n  -- associativity of whiskerings:\n  whisker_assoc :\n    ∀ {a b c d} (f : a ⟶ b) {g g' : b ⟶ c} (η : g ⟶ g') (h : c ⟶ d),\n      whiskerRight (whiskerLeft f η) h =\n        (associator f g h).hom ≫ whiskerLeft f (whiskerRight η h) ≫ (associator f g' h).inv := by\n    aesop_cat\n  -- exchange law of left and right whiskerings:\n  whisker_exchange :\n    ∀ {a b c} {f g : a ⟶ b} {h i : b ⟶ c} (η : f ⟶ g) (θ : h ⟶ i),\n      whiskerLeft f θ ≫ whiskerRight η i = whiskerRight η h ≫ whiskerLeft g θ := by\n    aesop_cat\n  -- pentagon identity:\n  pentagon :\n    ∀ {a b c d e} (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e),\n      whiskerRight (associator f g h).hom i ≫\n          (associator f (g ≫ h) i).hom ≫ whiskerLeft f (associator g h i).hom =\n        (associator (f ≫ g) h i).hom ≫ (associator f g (h ≫ i)).hom := by\n    aesop_cat\n  -- triangle identity:\n  triangle :\n    ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c),\n      (associator f (𝟙 b) g).hom ≫ whiskerLeft f (leftUnitor g).hom\n      = whiskerRight (rightUnitor f).hom g := by\n    aesop_cat\n\n"}
{"name":"CategoryTheory.Bicategory.comp_whiskerRight","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\nself : CategoryTheory.Bicategory B\na b c : B\nf g h : Quiver.Hom a b\nη : Quiver.Hom f g\nθ : Quiver.Hom g h\ni : Quiver.Hom b c\n⊢ Eq (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.CategoryStruct.comp η θ) i) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight η i) (CategoryTheory.Bicategory.whiskerRight θ i))","decl":"/-- In a bicategory, we can compose the 1-morphisms `f : a ⟶ b` and `g : b ⟶ c` to obtain\na 1-morphism `f ≫ g : a ⟶ c`. This composition does not need to be strictly associative,\nbut there is a specified associator, `α_ f g h : (f ≫ g) ≫ h ≅ f ≫ (g ≫ h)`.\nThere is an identity 1-morphism `𝟙 a : a ⟶ a`, with specified left and right unitor\nisomorphisms `λ_ f : 𝟙 a ≫ f ≅ f` and `ρ_ f : f ≫ 𝟙 a ≅ f`.\nThese associators and unitors satisfy the pentagon and triangle equations.\n\nSee https://ncatlab.org/nlab/show/bicategory.\n-/\n@[nolint checkUnivs]\nclass Bicategory (B : Type u) extends CategoryStruct.{v} B where\n  -- category structure on the collection of 1-morphisms:\n  homCategory : ∀ a b : B, Category.{w} (a ⟶ b) := by infer_instance\n  -- left whiskering:\n  whiskerLeft {a b c : B} (f : a ⟶ b) {g h : b ⟶ c} (η : g ⟶ h) : f ≫ g ⟶ f ≫ h\n  -- right whiskering:\n  whiskerRight {a b c : B} {f g : a ⟶ b} (η : f ⟶ g) (h : b ⟶ c) : f ≫ h ⟶ g ≫ h\n  -- associator:\n  associator {a b c d : B} (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) : (f ≫ g) ≫ h ≅ f ≫ g ≫ h\n  -- left unitor:\n  leftUnitor {a b : B} (f : a ⟶ b) : 𝟙 a ≫ f ≅ f\n  -- right unitor:\n  rightUnitor {a b : B} (f : a ⟶ b) : f ≫ 𝟙 b ≅ f\n  -- axioms for left whiskering:\n  whiskerLeft_id : ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c), whiskerLeft f (𝟙 g) = 𝟙 (f ≫ g) := by\n    aesop_cat\n  whiskerLeft_comp :\n    ∀ {a b c} (f : a ⟶ b) {g h i : b ⟶ c} (η : g ⟶ h) (θ : h ⟶ i),\n      whiskerLeft f (η ≫ θ) = whiskerLeft f η ≫ whiskerLeft f θ := by\n    aesop_cat\n  id_whiskerLeft :\n    ∀ {a b} {f g : a ⟶ b} (η : f ⟶ g),\n      whiskerLeft (𝟙 a) η = (leftUnitor f).hom ≫ η ≫ (leftUnitor g).inv := by\n    aesop_cat\n  comp_whiskerLeft :\n    ∀ {a b c d} (f : a ⟶ b) (g : b ⟶ c) {h h' : c ⟶ d} (η : h ⟶ h'),\n      whiskerLeft (f ≫ g) η =\n        (associator f g h).hom ≫ whiskerLeft f (whiskerLeft g η) ≫ (associator f g h').inv := by\n    aesop_cat\n  -- axioms for right whiskering:\n  id_whiskerRight : ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c), whiskerRight (𝟙 f) g = 𝟙 (f ≫ g) := by\n    aesop_cat\n  comp_whiskerRight :\n    ∀ {a b c} {f g h : a ⟶ b} (η : f ⟶ g) (θ : g ⟶ h) (i : b ⟶ c),\n      whiskerRight (η ≫ θ) i = whiskerRight η i ≫ whiskerRight θ i := by\n    aesop_cat\n  whiskerRight_id :\n    ∀ {a b} {f g : a ⟶ b} (η : f ⟶ g),\n      whiskerRight η (𝟙 b) = (rightUnitor f).hom ≫ η ≫ (rightUnitor g).inv := by\n    aesop_cat\n  whiskerRight_comp :\n    ∀ {a b c d} {f f' : a ⟶ b} (η : f ⟶ f') (g : b ⟶ c) (h : c ⟶ d),\n      whiskerRight η (g ≫ h) =\n        (associator f g h).inv ≫ whiskerRight (whiskerRight η g) h ≫ (associator f' g h).hom := by\n    aesop_cat\n  -- associativity of whiskerings:\n  whisker_assoc :\n    ∀ {a b c d} (f : a ⟶ b) {g g' : b ⟶ c} (η : g ⟶ g') (h : c ⟶ d),\n      whiskerRight (whiskerLeft f η) h =\n        (associator f g h).hom ≫ whiskerLeft f (whiskerRight η h) ≫ (associator f g' h).inv := by\n    aesop_cat\n  -- exchange law of left and right whiskerings:\n  whisker_exchange :\n    ∀ {a b c} {f g : a ⟶ b} {h i : b ⟶ c} (η : f ⟶ g) (θ : h ⟶ i),\n      whiskerLeft f θ ≫ whiskerRight η i = whiskerRight η h ≫ whiskerLeft g θ := by\n    aesop_cat\n  -- pentagon identity:\n  pentagon :\n    ∀ {a b c d e} (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e),\n      whiskerRight (associator f g h).hom i ≫\n          (associator f (g ≫ h) i).hom ≫ whiskerLeft f (associator g h i).hom =\n        (associator (f ≫ g) h i).hom ≫ (associator f g (h ≫ i)).hom := by\n    aesop_cat\n  -- triangle identity:\n  triangle :\n    ∀ {a b c} (f : a ⟶ b) (g : b ⟶ c),\n      (associator f (𝟙 b) g).hom ≫ whiskerLeft f (leftUnitor g).hom\n      = whiskerRight (rightUnitor f).hom g := by\n    aesop_cat\n\n"}
{"name":"CategoryTheory.Bicategory.id_whiskerLeft_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\nself : CategoryTheory.Bicategory B\na b : B\nf g : Quiver.Hom a b\nη : Quiver.Hom f g\nZ : Quiver.Hom a b\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.id a) g) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft (CategoryTheory.CategoryStruct.id a) η) h) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.leftUnitor f).hom (CategoryTheory.CategoryStruct.comp η (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.leftUnitor g).inv h)))","decl":"attribute [reassoc]\n  whiskerLeft_comp id_whiskerLeft comp_whiskerLeft comp_whiskerRight whiskerRight_id\n  whiskerRight_comp whisker_assoc whisker_exchange\n\n"}
{"name":"CategoryTheory.Bicategory.comp_whiskerRight_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\nself : CategoryTheory.Bicategory B\na b c : B\nf g h✝ : Quiver.Hom a b\nη : Quiver.Hom f g\nθ : Quiver.Hom g h✝\ni : Quiver.Hom b c\nZ : Quiver.Hom a c\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp h✝ i) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.CategoryStruct.comp η θ) i) h) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight η i) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight θ i) h))","decl":"attribute [reassoc]\n  whiskerLeft_comp id_whiskerLeft comp_whiskerLeft comp_whiskerRight whiskerRight_id\n  whiskerRight_comp whisker_assoc whisker_exchange\n\n"}
{"name":"CategoryTheory.Bicategory.whiskerLeft_comp_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\nself : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng h✝ i : Quiver.Hom b c\nη : Quiver.Hom g h✝\nθ : Quiver.Hom h✝ i\nZ : Quiver.Hom a c\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp f i) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.CategoryStruct.comp η θ)) h) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f η) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f θ) h))","decl":"attribute [reassoc]\n  whiskerLeft_comp id_whiskerLeft comp_whiskerLeft comp_whiskerRight whiskerRight_id\n  whiskerRight_comp whisker_assoc whisker_exchange\n\n"}
{"name":"CategoryTheory.Bicategory.whisker_assoc_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\nself : CategoryTheory.Bicategory B\na b c d : B\nf : Quiver.Hom a b\ng g' : Quiver.Hom b c\nη : Quiver.Hom g g'\nh✝ : Quiver.Hom c d\nZ : Quiver.Hom a d\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.comp f g') h✝) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.whiskerLeft f η) h✝) h) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h✝).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.whiskerRight η h✝)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g' h✝).inv h)))","decl":"attribute [reassoc]\n  whiskerLeft_comp id_whiskerLeft comp_whiskerLeft comp_whiskerRight whiskerRight_id\n  whiskerRight_comp whisker_assoc whisker_exchange\n\n"}
{"name":"CategoryTheory.Bicategory.whiskerRight_id_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\nself : CategoryTheory.Bicategory B\na b : B\nf g : Quiver.Hom a b\nη : Quiver.Hom f g\nZ : Quiver.Hom a b\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp g (CategoryTheory.CategoryStruct.id b)) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight η (CategoryTheory.CategoryStruct.id b)) h) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.rightUnitor f).hom (CategoryTheory.CategoryStruct.comp η (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.rightUnitor g).inv h)))","decl":"attribute [reassoc]\n  whiskerLeft_comp id_whiskerLeft comp_whiskerLeft comp_whiskerRight whiskerRight_id\n  whiskerRight_comp whisker_assoc whisker_exchange\n\n"}
{"name":"CategoryTheory.Bicategory.comp_whiskerLeft_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\nself : CategoryTheory.Bicategory B\na b c d : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh✝ h' : Quiver.Hom c d\nη : Quiver.Hom h✝ h'\nZ : Quiver.Hom a d\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.comp f g) h') Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft (CategoryTheory.CategoryStruct.comp f g) η) h) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h✝).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.whiskerLeft g η)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h').inv h)))","decl":"attribute [reassoc]\n  whiskerLeft_comp id_whiskerLeft comp_whiskerLeft comp_whiskerRight whiskerRight_id\n  whiskerRight_comp whisker_assoc whisker_exchange\n\n"}
{"name":"CategoryTheory.Bicategory.whisker_exchange_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\nself : CategoryTheory.Bicategory B\na b c : B\nf g : Quiver.Hom a b\nh✝ i : Quiver.Hom b c\nη : Quiver.Hom f g\nθ : Quiver.Hom h✝ i\nZ : Quiver.Hom a c\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp g i) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f θ) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight η i) h)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight η h✝) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft g θ) h))","decl":"attribute [reassoc]\n  whiskerLeft_comp id_whiskerLeft comp_whiskerLeft comp_whiskerRight whiskerRight_id\n  whiskerRight_comp whisker_assoc whisker_exchange\n\n"}
{"name":"CategoryTheory.Bicategory.whiskerRight_comp_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\nself : CategoryTheory.Bicategory B\na b c d : B\nf f' : Quiver.Hom a b\nη : Quiver.Hom f f'\ng : Quiver.Hom b c\nh✝ : Quiver.Hom c d\nZ : Quiver.Hom a d\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp f' (CategoryTheory.CategoryStruct.comp g h✝)) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight η (CategoryTheory.CategoryStruct.comp g h✝)) h) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h✝).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.whiskerRight η g) h✝) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f' g h✝).hom h)))","decl":"attribute [reassoc]\n  whiskerLeft_comp id_whiskerLeft comp_whiskerLeft comp_whiskerRight whiskerRight_id\n  whiskerRight_comp whisker_assoc whisker_exchange\n\n"}
{"name":"CategoryTheory.Bicategory.pentagon_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\nself : CategoryTheory.Bicategory B\na b c d e : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh✝ : Quiver.Hom c d\ni : Quiver.Hom d e\nZ : Quiver.Hom a e\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp f (CategoryTheory.CategoryStruct.comp g (CategoryTheory.CategoryStruct.comp h✝ i))) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.associator f g h✝).hom i) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.comp g h✝) i).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.associator g h✝ i).hom) h))) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.comp f g) h✝ i).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.comp h✝ i)).hom h))","decl":"attribute [reassoc (attr := simp)] pentagon triangle\n/-\nThe following simp attributes are put in order to rewrite any 2-morphisms into normal forms. There\nare associators and unitors in the RHS in the several simp lemmas here (e.g. `id_whiskerLeft`),\nwhich at first glance look more complicated than the LHS, but they will be eventually reduced by\nthe pentagon or the triangle identities, and more generally, (forthcoming) `coherence` tactic.\n-/\n"}
{"name":"CategoryTheory.Bicategory.triangle_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\nself : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nZ : Quiver.Hom a c\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp f g) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.id b) g).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.leftUnitor g).hom) h)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.rightUnitor f).hom g) h)","decl":"attribute [reassoc (attr := simp)] pentagon triangle\n/-\nThe following simp attributes are put in order to rewrite any 2-morphisms into normal forms. There\nare associators and unitors in the RHS in the several simp lemmas here (e.g. `id_whiskerLeft`),\nwhich at first glance look more complicated than the LHS, but they will be eventually reduced by\nthe pentagon or the triangle identities, and more generally, (forthcoming) `coherence` tactic.\n-/\n"}
{"name":"CategoryTheory.Bicategory.whiskerLeft_hom_inv","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng h : Quiver.Hom b c\nη : CategoryTheory.Iso g h\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f η.hom) (CategoryTheory.Bicategory.whiskerLeft f η.inv)) (CategoryTheory.CategoryStruct.id (CategoryTheory.CategoryStruct.comp f g))","decl":"@[reassoc (attr := simp)]\ntheorem whiskerLeft_hom_inv (f : a ⟶ b) {g h : b ⟶ c} (η : g ≅ h) :\n    f ◁ η.hom ≫ f ◁ η.inv = 𝟙 (f ≫ g) := by rw [← whiskerLeft_comp, hom_inv_id, whiskerLeft_id]\n\n"}
{"name":"CategoryTheory.Bicategory.whiskerLeft_hom_inv_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng h✝ : Quiver.Hom b c\nη : CategoryTheory.Iso g h✝\nZ : Quiver.Hom a c\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp f g) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f η.hom) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f η.inv) h)) h","decl":"@[reassoc (attr := simp)]\ntheorem whiskerLeft_hom_inv (f : a ⟶ b) {g h : b ⟶ c} (η : g ≅ h) :\n    f ◁ η.hom ≫ f ◁ η.inv = 𝟙 (f ≫ g) := by rw [← whiskerLeft_comp, hom_inv_id, whiskerLeft_id]\n\n"}
{"name":"CategoryTheory.Bicategory.hom_inv_whiskerRight","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf g : Quiver.Hom a b\nη : CategoryTheory.Iso f g\nh : Quiver.Hom b c\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight η.hom h) (CategoryTheory.Bicategory.whiskerRight η.inv h)) (CategoryTheory.CategoryStruct.id (CategoryTheory.CategoryStruct.comp f h))","decl":"@[reassoc (attr := simp)]\ntheorem hom_inv_whiskerRight {f g : a ⟶ b} (η : f ≅ g) (h : b ⟶ c) :\n    η.hom ▷ h ≫ η.inv ▷ h = 𝟙 (f ≫ h) := by rw [← comp_whiskerRight, hom_inv_id, id_whiskerRight]\n\n"}
{"name":"CategoryTheory.Bicategory.hom_inv_whiskerRight_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf g : Quiver.Hom a b\nη : CategoryTheory.Iso f g\nh✝ : Quiver.Hom b c\nZ : Quiver.Hom a c\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp f h✝) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight η.hom h✝) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight η.inv h✝) h)) h","decl":"@[reassoc (attr := simp)]\ntheorem hom_inv_whiskerRight {f g : a ⟶ b} (η : f ≅ g) (h : b ⟶ c) :\n    η.hom ▷ h ≫ η.inv ▷ h = 𝟙 (f ≫ h) := by rw [← comp_whiskerRight, hom_inv_id, id_whiskerRight]\n\n"}
{"name":"CategoryTheory.Bicategory.whiskerLeft_inv_hom","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng h : Quiver.Hom b c\nη : CategoryTheory.Iso g h\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f η.inv) (CategoryTheory.Bicategory.whiskerLeft f η.hom)) (CategoryTheory.CategoryStruct.id (CategoryTheory.CategoryStruct.comp f h))","decl":"@[reassoc (attr := simp)]\ntheorem whiskerLeft_inv_hom (f : a ⟶ b) {g h : b ⟶ c} (η : g ≅ h) :\n    f ◁ η.inv ≫ f ◁ η.hom = 𝟙 (f ≫ h) := by rw [← whiskerLeft_comp, inv_hom_id, whiskerLeft_id]\n\n"}
{"name":"CategoryTheory.Bicategory.whiskerLeft_inv_hom_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng h✝ : Quiver.Hom b c\nη : CategoryTheory.Iso g h✝\nZ : Quiver.Hom a c\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp f h✝) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f η.inv) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f η.hom) h)) h","decl":"@[reassoc (attr := simp)]\ntheorem whiskerLeft_inv_hom (f : a ⟶ b) {g h : b ⟶ c} (η : g ≅ h) :\n    f ◁ η.inv ≫ f ◁ η.hom = 𝟙 (f ≫ h) := by rw [← whiskerLeft_comp, inv_hom_id, whiskerLeft_id]\n\n"}
{"name":"CategoryTheory.Bicategory.inv_hom_whiskerRight","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf g : Quiver.Hom a b\nη : CategoryTheory.Iso f g\nh : Quiver.Hom b c\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight η.inv h) (CategoryTheory.Bicategory.whiskerRight η.hom h)) (CategoryTheory.CategoryStruct.id (CategoryTheory.CategoryStruct.comp g h))","decl":"@[reassoc (attr := simp)]\ntheorem inv_hom_whiskerRight {f g : a ⟶ b} (η : f ≅ g) (h : b ⟶ c) :\n    η.inv ▷ h ≫ η.hom ▷ h = 𝟙 (g ≫ h) := by rw [← comp_whiskerRight, inv_hom_id, id_whiskerRight]\n\n"}
{"name":"CategoryTheory.Bicategory.inv_hom_whiskerRight_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf g : Quiver.Hom a b\nη : CategoryTheory.Iso f g\nh✝ : Quiver.Hom b c\nZ : Quiver.Hom a c\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp g h✝) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight η.inv h✝) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight η.hom h✝) h)) h","decl":"@[reassoc (attr := simp)]\ntheorem inv_hom_whiskerRight {f g : a ⟶ b} (η : f ≅ g) (h : b ⟶ c) :\n    η.inv ▷ h ≫ η.hom ▷ h = 𝟙 (g ≫ h) := by rw [← comp_whiskerRight, inv_hom_id, id_whiskerRight]\n\n"}
{"name":"CategoryTheory.Bicategory.whiskerLeftIso_hom","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng h : Quiver.Hom b c\nη : CategoryTheory.Iso g h\n⊢ Eq (CategoryTheory.Bicategory.whiskerLeftIso f η).hom (CategoryTheory.Bicategory.whiskerLeft f η.hom)","decl":"/-- The left whiskering of a 2-isomorphism is a 2-isomorphism. -/\n@[simps]\ndef whiskerLeftIso (f : a ⟶ b) {g h : b ⟶ c} (η : g ≅ h) : f ≫ g ≅ f ≫ h where\n  hom := f ◁ η.hom\n  inv := f ◁ η.inv\n\n"}
{"name":"CategoryTheory.Bicategory.whiskerLeftIso_inv","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng h : Quiver.Hom b c\nη : CategoryTheory.Iso g h\n⊢ Eq (CategoryTheory.Bicategory.whiskerLeftIso f η).inv (CategoryTheory.Bicategory.whiskerLeft f η.inv)","decl":"/-- The left whiskering of a 2-isomorphism is a 2-isomorphism. -/\n@[simps]\ndef whiskerLeftIso (f : a ⟶ b) {g h : b ⟶ c} (η : g ≅ h) : f ≫ g ≅ f ≫ h where\n  hom := f ◁ η.hom\n  inv := f ◁ η.inv\n\n"}
{"name":"CategoryTheory.Bicategory.whiskerLeft_isIso","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝¹ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng h : Quiver.Hom b c\nη : Quiver.Hom g h\ninst✝ : CategoryTheory.IsIso η\n⊢ CategoryTheory.IsIso (CategoryTheory.Bicategory.whiskerLeft f η)","decl":"instance whiskerLeft_isIso (f : a ⟶ b) {g h : b ⟶ c} (η : g ⟶ h) [IsIso η] : IsIso (f ◁ η) :=\n  (whiskerLeftIso f (asIso η)).isIso_hom\n\n"}
{"name":"CategoryTheory.Bicategory.inv_whiskerLeft","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝¹ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng h : Quiver.Hom b c\nη : Quiver.Hom g h\ninst✝ : CategoryTheory.IsIso η\n⊢ Eq (CategoryTheory.inv (CategoryTheory.Bicategory.whiskerLeft f η)) (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.inv η))","decl":"@[simp]\ntheorem inv_whiskerLeft (f : a ⟶ b) {g h : b ⟶ c} (η : g ⟶ h) [IsIso η] :\n    inv (f ◁ η) = f ◁ inv η := by\n  apply IsIso.inv_eq_of_hom_inv_id\n  simp only [← whiskerLeft_comp, whiskerLeft_id, IsIso.hom_inv_id]\n\n"}
{"name":"CategoryTheory.Bicategory.whiskerRightIso_inv","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf g : Quiver.Hom a b\nη : CategoryTheory.Iso f g\nh : Quiver.Hom b c\n⊢ Eq (CategoryTheory.Bicategory.whiskerRightIso η h).inv (CategoryTheory.Bicategory.whiskerRight η.inv h)","decl":"/-- The right whiskering of a 2-isomorphism is a 2-isomorphism. -/\n@[simps!]\ndef whiskerRightIso {f g : a ⟶ b} (η : f ≅ g) (h : b ⟶ c) : f ≫ h ≅ g ≫ h where\n  hom := η.hom ▷ h\n  inv := η.inv ▷ h\n\n"}
{"name":"CategoryTheory.Bicategory.whiskerRightIso_hom","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf g : Quiver.Hom a b\nη : CategoryTheory.Iso f g\nh : Quiver.Hom b c\n⊢ Eq (CategoryTheory.Bicategory.whiskerRightIso η h).hom (CategoryTheory.Bicategory.whiskerRight η.hom h)","decl":"/-- The right whiskering of a 2-isomorphism is a 2-isomorphism. -/\n@[simps!]\ndef whiskerRightIso {f g : a ⟶ b} (η : f ≅ g) (h : b ⟶ c) : f ≫ h ≅ g ≫ h where\n  hom := η.hom ▷ h\n  inv := η.inv ▷ h\n\n"}
{"name":"CategoryTheory.Bicategory.whiskerRight_isIso","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝¹ : CategoryTheory.Bicategory B\na b c : B\nf g : Quiver.Hom a b\nη : Quiver.Hom f g\nh : Quiver.Hom b c\ninst✝ : CategoryTheory.IsIso η\n⊢ CategoryTheory.IsIso (CategoryTheory.Bicategory.whiskerRight η h)","decl":"instance whiskerRight_isIso {f g : a ⟶ b} (η : f ⟶ g) (h : b ⟶ c) [IsIso η] : IsIso (η ▷ h) :=\n  (whiskerRightIso (asIso η) h).isIso_hom\n\n"}
{"name":"CategoryTheory.Bicategory.inv_whiskerRight","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝¹ : CategoryTheory.Bicategory B\na b c : B\nf g : Quiver.Hom a b\nη : Quiver.Hom f g\nh : Quiver.Hom b c\ninst✝ : CategoryTheory.IsIso η\n⊢ Eq (CategoryTheory.inv (CategoryTheory.Bicategory.whiskerRight η h)) (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.inv η) h)","decl":"@[simp]\ntheorem inv_whiskerRight {f g : a ⟶ b} (η : f ⟶ g) (h : b ⟶ c) [IsIso η] :\n    inv (η ▷ h) = inv η ▷ h := by\n  apply IsIso.inv_eq_of_hom_inv_id\n  simp only [← comp_whiskerRight, id_whiskerRight, IsIso.hom_inv_id]\n\n"}
{"name":"CategoryTheory.Bicategory.pentagon_inv","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d e : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh : Quiver.Hom c d\ni : Quiver.Hom d e\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.associator g h i).inv) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.comp g h) i).inv (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.associator f g h).inv i))) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.comp h i)).inv (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.comp f g) h i).inv)","decl":"@[reassoc (attr := simp)]\ntheorem pentagon_inv (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e) :\n    f ◁ (α_ g h i).inv ≫ (α_ f (g ≫ h) i).inv ≫ (α_ f g h).inv ▷ i =\n      (α_ f g (h ≫ i)).inv ≫ (α_ (f ≫ g) h i).inv :=\n  eq_of_inv_eq_inv (by simp)\n\n"}
{"name":"CategoryTheory.Bicategory.pentagon_inv_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d e : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh✝ : Quiver.Hom c d\ni : Quiver.Hom d e\nZ : Quiver.Hom a e\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.comp f g) h✝) i) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.associator g h✝ i).inv) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.comp g h✝) i).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.associator f g h✝).inv i) h))) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.comp h✝ i)).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.comp f g) h✝ i).inv h))","decl":"@[reassoc (attr := simp)]\ntheorem pentagon_inv (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e) :\n    f ◁ (α_ g h i).inv ≫ (α_ f (g ≫ h) i).inv ≫ (α_ f g h).inv ▷ i =\n      (α_ f g (h ≫ i)).inv ≫ (α_ (f ≫ g) h i).inv :=\n  eq_of_inv_eq_inv (by simp)\n\n"}
{"name":"CategoryTheory.Bicategory.pentagon_inv_inv_hom_hom_inv_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d e : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh✝ : Quiver.Hom c d\ni : Quiver.Hom d e\nZ : Quiver.Hom a e\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.comp f g) (CategoryTheory.CategoryStruct.comp h✝ i)) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.comp g h✝) i).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.associator f g h✝).inv i) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.comp f g) h✝ i).hom h))) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.associator g h✝ i).hom) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.comp h✝ i)).inv h))","decl":"@[reassoc (attr := simp)]\ntheorem pentagon_inv_inv_hom_hom_inv (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e) :\n    (α_ f (g ≫ h) i).inv ≫ (α_ f g h).inv ▷ i ≫ (α_ (f ≫ g) h i).hom =\n    f ◁ (α_ g h i).hom ≫ (α_ f g (h ≫ i)).inv := by\n  rw [← cancel_epi (f ◁ (α_ g h i).inv), ← cancel_mono (α_ (f ≫ g) h i).inv]\n  simp\n\n"}
{"name":"CategoryTheory.Bicategory.pentagon_inv_inv_hom_hom_inv","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d e : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh : Quiver.Hom c d\ni : Quiver.Hom d e\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.comp g h) i).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.associator f g h).inv i) (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.comp f g) h i).hom)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.associator g h i).hom) (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.comp h i)).inv)","decl":"@[reassoc (attr := simp)]\ntheorem pentagon_inv_inv_hom_hom_inv (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e) :\n    (α_ f (g ≫ h) i).inv ≫ (α_ f g h).inv ▷ i ≫ (α_ (f ≫ g) h i).hom =\n    f ◁ (α_ g h i).hom ≫ (α_ f g (h ≫ i)).inv := by\n  rw [← cancel_epi (f ◁ (α_ g h i).inv), ← cancel_mono (α_ (f ≫ g) h i).inv]\n  simp\n\n"}
{"name":"CategoryTheory.Bicategory.pentagon_inv_hom_hom_hom_inv","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d e : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh : Quiver.Hom c d\ni : Quiver.Hom d e\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.comp f g) h i).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.associator f g h).hom i) (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.comp g h) i).hom)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.comp h i)).hom (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.associator g h i).inv))","decl":"@[reassoc (attr := simp)]\ntheorem pentagon_inv_hom_hom_hom_inv (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e) :\n    (α_ (f ≫ g) h i).inv ≫ (α_ f g h).hom ▷ i ≫ (α_ f (g ≫ h) i).hom =\n      (α_ f g (h ≫ i)).hom ≫ f ◁ (α_ g h i).inv :=\n  eq_of_inv_eq_inv (by simp)\n\n"}
{"name":"CategoryTheory.Bicategory.pentagon_inv_hom_hom_hom_inv_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d e : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh✝ : Quiver.Hom c d\ni : Quiver.Hom d e\nZ : Quiver.Hom a e\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp f (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.comp g h✝) i)) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.comp f g) h✝ i).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.associator f g h✝).hom i) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.comp g h✝) i).hom h))) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.comp h✝ i)).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.associator g h✝ i).inv) h))","decl":"@[reassoc (attr := simp)]\ntheorem pentagon_inv_hom_hom_hom_inv (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e) :\n    (α_ (f ≫ g) h i).inv ≫ (α_ f g h).hom ▷ i ≫ (α_ f (g ≫ h) i).hom =\n      (α_ f g (h ≫ i)).hom ≫ f ◁ (α_ g h i).inv :=\n  eq_of_inv_eq_inv (by simp)\n\n"}
{"name":"CategoryTheory.Bicategory.pentagon_hom_inv_inv_inv_inv_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d e : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh✝ : Quiver.Hom c d\ni : Quiver.Hom d e\nZ : Quiver.Hom a e\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.comp f g) h✝) i) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.associator g h✝ i).hom) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.comp h✝ i)).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.comp f g) h✝ i).inv h))) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.comp g h✝) i).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.associator f g h✝).inv i) h))","decl":"@[reassoc (attr := simp)]\ntheorem pentagon_hom_inv_inv_inv_inv (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e) :\n    f ◁ (α_ g h i).hom ≫ (α_ f g (h ≫ i)).inv ≫ (α_ (f ≫ g) h i).inv =\n      (α_ f (g ≫ h) i).inv ≫ (α_ f g h).inv ▷ i := by\n  simp [← cancel_epi (f ◁ (α_ g h i).inv)]\n\n"}
{"name":"CategoryTheory.Bicategory.pentagon_hom_inv_inv_inv_inv","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d e : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh : Quiver.Hom c d\ni : Quiver.Hom d e\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.associator g h i).hom) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.comp h i)).inv (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.comp f g) h i).inv)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.comp g h) i).inv (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.associator f g h).inv i))","decl":"@[reassoc (attr := simp)]\ntheorem pentagon_hom_inv_inv_inv_inv (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e) :\n    f ◁ (α_ g h i).hom ≫ (α_ f g (h ≫ i)).inv ≫ (α_ (f ≫ g) h i).inv =\n      (α_ f (g ≫ h) i).inv ≫ (α_ f g h).inv ▷ i := by\n  simp [← cancel_epi (f ◁ (α_ g h i).inv)]\n\n"}
{"name":"CategoryTheory.Bicategory.pentagon_hom_hom_inv_hom_hom","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d e : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh : Quiver.Hom c d\ni : Quiver.Hom d e\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.comp f g) h i).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.comp h i)).hom (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.associator g h i).inv))) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.associator f g h).hom i) (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.comp g h) i).hom)","decl":"@[reassoc (attr := simp)]\ntheorem pentagon_hom_hom_inv_hom_hom (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e) :\n    (α_ (f ≫ g) h i).hom ≫ (α_ f g (h ≫ i)).hom ≫ f ◁ (α_ g h i).inv =\n      (α_ f g h).hom ▷ i ≫ (α_ f (g ≫ h) i).hom :=\n  eq_of_inv_eq_inv (by simp)\n\n"}
{"name":"CategoryTheory.Bicategory.pentagon_hom_hom_inv_hom_hom_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d e : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh✝ : Quiver.Hom c d\ni : Quiver.Hom d e\nZ : Quiver.Hom a e\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp f (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.comp g h✝) i)) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.comp f g) h✝ i).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.comp h✝ i)).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.associator g h✝ i).inv) h))) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.associator f g h✝).hom i) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.comp g h✝) i).hom h))","decl":"@[reassoc (attr := simp)]\ntheorem pentagon_hom_hom_inv_hom_hom (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e) :\n    (α_ (f ≫ g) h i).hom ≫ (α_ f g (h ≫ i)).hom ≫ f ◁ (α_ g h i).inv =\n      (α_ f g h).hom ▷ i ≫ (α_ f (g ≫ h) i).hom :=\n  eq_of_inv_eq_inv (by simp)\n\n"}
{"name":"CategoryTheory.Bicategory.pentagon_hom_inv_inv_inv_hom","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d e : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh : Quiver.Hom c d\ni : Quiver.Hom d e\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.comp h i)).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.associator g h i).inv) (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.comp g h) i).inv)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.comp f g) h i).inv (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.associator f g h).hom i))","decl":"@[reassoc (attr := simp)]\ntheorem pentagon_hom_inv_inv_inv_hom (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e) :\n    (α_ f g (h ≫ i)).hom ≫ f ◁ (α_ g h i).inv ≫ (α_ f (g ≫ h) i).inv =\n    (α_ (f ≫ g) h i).inv ≫ (α_ f g h).hom ▷ i := by\n  rw [← cancel_epi (α_ f g (h ≫ i)).inv, ← cancel_mono ((α_ f g h).inv ▷ i)]\n  simp\n\n"}
{"name":"CategoryTheory.Bicategory.pentagon_hom_inv_inv_inv_hom_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d e : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh✝ : Quiver.Hom c d\ni : Quiver.Hom d e\nZ : Quiver.Hom a e\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.comp f (CategoryTheory.CategoryStruct.comp g h✝)) i) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.comp h✝ i)).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.associator g h✝ i).inv) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.comp g h✝) i).inv h))) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.comp f g) h✝ i).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.associator f g h✝).hom i) h))","decl":"@[reassoc (attr := simp)]\ntheorem pentagon_hom_inv_inv_inv_hom (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e) :\n    (α_ f g (h ≫ i)).hom ≫ f ◁ (α_ g h i).inv ≫ (α_ f (g ≫ h) i).inv =\n    (α_ (f ≫ g) h i).inv ≫ (α_ f g h).hom ▷ i := by\n  rw [← cancel_epi (α_ f g (h ≫ i)).inv, ← cancel_mono ((α_ f g h).inv ▷ i)]\n  simp\n\n"}
{"name":"CategoryTheory.Bicategory.pentagon_hom_hom_inv_inv_hom","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d e : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh : Quiver.Hom c d\ni : Quiver.Hom d e\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.comp g h) i).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.associator g h i).hom) (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.comp h i)).inv)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.associator f g h).inv i) (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.comp f g) h i).hom)","decl":"@[reassoc (attr := simp)]\ntheorem pentagon_hom_hom_inv_inv_hom (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e) :\n    (α_ f (g ≫ h) i).hom ≫ f ◁ (α_ g h i).hom ≫ (α_ f g (h ≫ i)).inv =\n      (α_ f g h).inv ▷ i ≫ (α_ (f ≫ g) h i).hom :=\n  eq_of_inv_eq_inv (by simp)\n\n"}
{"name":"CategoryTheory.Bicategory.pentagon_hom_hom_inv_inv_hom_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d e : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh✝ : Quiver.Hom c d\ni : Quiver.Hom d e\nZ : Quiver.Hom a e\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.comp f g) (CategoryTheory.CategoryStruct.comp h✝ i)) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.comp g h✝) i).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.associator g h✝ i).hom) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.comp h✝ i)).inv h))) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.associator f g h✝).inv i) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.comp f g) h✝ i).hom h))","decl":"@[reassoc (attr := simp)]\ntheorem pentagon_hom_hom_inv_inv_hom (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e) :\n    (α_ f (g ≫ h) i).hom ≫ f ◁ (α_ g h i).hom ≫ (α_ f g (h ≫ i)).inv =\n      (α_ f g h).inv ▷ i ≫ (α_ (f ≫ g) h i).hom :=\n  eq_of_inv_eq_inv (by simp)\n\n"}
{"name":"CategoryTheory.Bicategory.pentagon_inv_hom_hom_hom_hom","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d e : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh : Quiver.Hom c d\ni : Quiver.Hom d e\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.associator f g h).inv i) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.comp f g) h i).hom (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.comp h i)).hom)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.comp g h) i).hom (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.associator g h i).hom))","decl":"@[reassoc (attr := simp)]\ntheorem pentagon_inv_hom_hom_hom_hom (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e) :\n    (α_ f g h).inv ▷ i ≫ (α_ (f ≫ g) h i).hom ≫ (α_ f g (h ≫ i)).hom =\n      (α_ f (g ≫ h) i).hom ≫ f ◁ (α_ g h i).hom := by\n  simp [← cancel_epi ((α_ f g h).hom ▷ i)]\n\n"}
{"name":"CategoryTheory.Bicategory.pentagon_inv_hom_hom_hom_hom_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d e : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh✝ : Quiver.Hom c d\ni : Quiver.Hom d e\nZ : Quiver.Hom a e\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp f (CategoryTheory.CategoryStruct.comp g (CategoryTheory.CategoryStruct.comp h✝ i))) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.associator f g h✝).inv i) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.comp f g) h✝ i).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.comp h✝ i)).hom h))) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.comp g h✝) i).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.associator g h✝ i).hom) h))","decl":"@[reassoc (attr := simp)]\ntheorem pentagon_inv_hom_hom_hom_hom (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e) :\n    (α_ f g h).inv ▷ i ≫ (α_ (f ≫ g) h i).hom ≫ (α_ f g (h ≫ i)).hom =\n      (α_ f (g ≫ h) i).hom ≫ f ◁ (α_ g h i).hom := by\n  simp [← cancel_epi ((α_ f g h).hom ▷ i)]\n\n"}
{"name":"CategoryTheory.Bicategory.pentagon_inv_inv_hom_inv_inv","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d e : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh : Quiver.Hom c d\ni : Quiver.Hom d e\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.comp h i)).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.comp f g) h i).inv (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.associator f g h).hom i))) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.associator g h i).inv) (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.comp g h) i).inv)","decl":"@[reassoc (attr := simp)]\ntheorem pentagon_inv_inv_hom_inv_inv (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e) :\n    (α_ f g (h ≫ i)).inv ≫ (α_ (f ≫ g) h i).inv ≫ (α_ f g h).hom ▷ i =\n      f ◁ (α_ g h i).inv ≫ (α_ f (g ≫ h) i).inv :=\n  eq_of_inv_eq_inv (by simp)\n\n"}
{"name":"CategoryTheory.Bicategory.pentagon_inv_inv_hom_inv_inv_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d e : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh✝ : Quiver.Hom c d\ni : Quiver.Hom d e\nZ : Quiver.Hom a e\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.comp f (CategoryTheory.CategoryStruct.comp g h✝)) i) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.comp h✝ i)).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.comp f g) h✝ i).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.associator f g h✝).hom i) h))) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.associator g h✝ i).inv) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.comp g h✝) i).inv h))","decl":"@[reassoc (attr := simp)]\ntheorem pentagon_inv_inv_hom_inv_inv (f : a ⟶ b) (g : b ⟶ c) (h : c ⟶ d) (i : d ⟶ e) :\n    (α_ f g (h ≫ i)).inv ≫ (α_ (f ≫ g) h i).inv ≫ (α_ f g h).hom ▷ i =\n      f ◁ (α_ g h i).inv ≫ (α_ f (g ≫ h) i).inv :=\n  eq_of_inv_eq_inv (by simp)\n\n"}
{"name":"CategoryTheory.Bicategory.triangle_assoc_comp_left","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.id b) g).hom (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.leftUnitor g).hom)) (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.rightUnitor f).hom g)","decl":"theorem triangle_assoc_comp_left (f : a ⟶ b) (g : b ⟶ c) :\n    (α_ f (𝟙 b) g).hom ≫ f ◁ (λ_ g).hom = (ρ_ f).hom ▷ g :=\n  triangle f g\n\n"}
{"name":"CategoryTheory.Bicategory.triangle_assoc_comp_right","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.id b) g).inv (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.rightUnitor f).hom g)) (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.leftUnitor g).hom)","decl":"@[reassoc (attr := simp)]\ntheorem triangle_assoc_comp_right (f : a ⟶ b) (g : b ⟶ c) :\n    (α_ f (𝟙 b) g).inv ≫ (ρ_ f).hom ▷ g = f ◁ (λ_ g).hom := by rw [← triangle, inv_hom_id_assoc]\n\n"}
{"name":"CategoryTheory.Bicategory.triangle_assoc_comp_right_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nZ : Quiver.Hom a c\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp f g) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.id b) g).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.rightUnitor f).hom g) h)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.leftUnitor g).hom) h)","decl":"@[reassoc (attr := simp)]\ntheorem triangle_assoc_comp_right (f : a ⟶ b) (g : b ⟶ c) :\n    (α_ f (𝟙 b) g).inv ≫ (ρ_ f).hom ▷ g = f ◁ (λ_ g).hom := by rw [← triangle, inv_hom_id_assoc]\n\n"}
{"name":"CategoryTheory.Bicategory.triangle_assoc_comp_right_inv_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nZ : Quiver.Hom a c\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp f (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.id b) g)) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.rightUnitor f).inv g) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.id b) g).hom h)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.leftUnitor g).inv) h)","decl":"@[reassoc (attr := simp)]\ntheorem triangle_assoc_comp_right_inv (f : a ⟶ b) (g : b ⟶ c) :\n    (ρ_ f).inv ▷ g ≫ (α_ f (𝟙 b) g).hom = f ◁ (λ_ g).inv := by\n  simp [← cancel_mono (f ◁ (λ_ g).hom)]\n\n"}
{"name":"CategoryTheory.Bicategory.triangle_assoc_comp_right_inv","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.rightUnitor f).inv g) (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.id b) g).hom) (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.leftUnitor g).inv)","decl":"@[reassoc (attr := simp)]\ntheorem triangle_assoc_comp_right_inv (f : a ⟶ b) (g : b ⟶ c) :\n    (ρ_ f).inv ▷ g ≫ (α_ f (𝟙 b) g).hom = f ◁ (λ_ g).inv := by\n  simp [← cancel_mono (f ◁ (λ_ g).hom)]\n\n"}
{"name":"CategoryTheory.Bicategory.triangle_assoc_comp_left_inv","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.leftUnitor g).inv) (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.id b) g).inv) (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.rightUnitor f).inv g)","decl":"@[reassoc (attr := simp)]\ntheorem triangle_assoc_comp_left_inv (f : a ⟶ b) (g : b ⟶ c) :\n    f ◁ (λ_ g).inv ≫ (α_ f (𝟙 b) g).inv = (ρ_ f).inv ▷ g := by\n  simp [← cancel_mono ((ρ_ f).hom ▷ g)]\n\n"}
{"name":"CategoryTheory.Bicategory.triangle_assoc_comp_left_inv_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nZ : Quiver.Hom a c\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.comp f (CategoryTheory.CategoryStruct.id b)) g) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.leftUnitor g).inv) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f (CategoryTheory.CategoryStruct.id b) g).inv h)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.rightUnitor f).inv g) h)","decl":"@[reassoc (attr := simp)]\ntheorem triangle_assoc_comp_left_inv (f : a ⟶ b) (g : b ⟶ c) :\n    f ◁ (λ_ g).inv ≫ (α_ f (𝟙 b) g).inv = (ρ_ f).inv ▷ g := by\n  simp [← cancel_mono ((ρ_ f).hom ▷ g)]\n\n"}
{"name":"CategoryTheory.Bicategory.associator_naturality_left_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d : B\nf f' : Quiver.Hom a b\nη : Quiver.Hom f f'\ng : Quiver.Hom b c\nh✝ : Quiver.Hom c d\nZ : Quiver.Hom a d\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp f' (CategoryTheory.CategoryStruct.comp g h✝)) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.whiskerRight η g) h✝) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f' g h✝).hom h)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h✝).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight η (CategoryTheory.CategoryStruct.comp g h✝)) h))","decl":"@[reassoc]\ntheorem associator_naturality_left {f f' : a ⟶ b} (η : f ⟶ f') (g : b ⟶ c) (h : c ⟶ d) :\n    η ▷ g ▷ h ≫ (α_ f' g h).hom = (α_ f g h).hom ≫ η ▷ (g ≫ h) := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.associator_naturality_left","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d : B\nf f' : Quiver.Hom a b\nη : Quiver.Hom f f'\ng : Quiver.Hom b c\nh : Quiver.Hom c d\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.whiskerRight η g) h) (CategoryTheory.Bicategory.associator f' g h).hom) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h).hom (CategoryTheory.Bicategory.whiskerRight η (CategoryTheory.CategoryStruct.comp g h)))","decl":"@[reassoc]\ntheorem associator_naturality_left {f f' : a ⟶ b} (η : f ⟶ f') (g : b ⟶ c) (h : c ⟶ d) :\n    η ▷ g ▷ h ≫ (α_ f' g h).hom = (α_ f g h).hom ≫ η ▷ (g ≫ h) := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.associator_inv_naturality_left","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d : B\nf f' : Quiver.Hom a b\nη : Quiver.Hom f f'\ng : Quiver.Hom b c\nh : Quiver.Hom c d\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight η (CategoryTheory.CategoryStruct.comp g h)) (CategoryTheory.Bicategory.associator f' g h).inv) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h).inv (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.whiskerRight η g) h))","decl":"@[reassoc]\ntheorem associator_inv_naturality_left {f f' : a ⟶ b} (η : f ⟶ f') (g : b ⟶ c) (h : c ⟶ d) :\n    η ▷ (g ≫ h) ≫ (α_ f' g h).inv = (α_ f g h).inv ≫ η ▷ g ▷ h := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.associator_inv_naturality_left_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d : B\nf f' : Quiver.Hom a b\nη : Quiver.Hom f f'\ng : Quiver.Hom b c\nh✝ : Quiver.Hom c d\nZ : Quiver.Hom a d\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.comp f' g) h✝) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight η (CategoryTheory.CategoryStruct.comp g h✝)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f' g h✝).inv h)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h✝).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.whiskerRight η g) h✝) h))","decl":"@[reassoc]\ntheorem associator_inv_naturality_left {f f' : a ⟶ b} (η : f ⟶ f') (g : b ⟶ c) (h : c ⟶ d) :\n    η ▷ (g ≫ h) ≫ (α_ f' g h).inv = (α_ f g h).inv ≫ η ▷ g ▷ h := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.whiskerRight_comp_symm","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d : B\nf f' : Quiver.Hom a b\nη : Quiver.Hom f f'\ng : Quiver.Hom b c\nh : Quiver.Hom c d\n⊢ Eq (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.whiskerRight η g) h) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight η (CategoryTheory.CategoryStruct.comp g h)) (CategoryTheory.Bicategory.associator f' g h).inv))","decl":"@[reassoc]\ntheorem whiskerRight_comp_symm {f f' : a ⟶ b} (η : f ⟶ f') (g : b ⟶ c) (h : c ⟶ d) :\n    η ▷ g ▷ h = (α_ f g h).hom ≫ η ▷ (g ≫ h) ≫ (α_ f' g h).inv := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.whiskerRight_comp_symm_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d : B\nf f' : Quiver.Hom a b\nη : Quiver.Hom f f'\ng : Quiver.Hom b c\nh✝ : Quiver.Hom c d\nZ : Quiver.Hom a d\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.comp f' g) h✝) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.whiskerRight η g) h✝) h) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h✝).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight η (CategoryTheory.CategoryStruct.comp g h✝)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f' g h✝).inv h)))","decl":"@[reassoc]\ntheorem whiskerRight_comp_symm {f f' : a ⟶ b} (η : f ⟶ f') (g : b ⟶ c) (h : c ⟶ d) :\n    η ▷ g ▷ h = (α_ f g h).hom ≫ η ▷ (g ≫ h) ≫ (α_ f' g h).inv := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.associator_naturality_middle","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d : B\nf : Quiver.Hom a b\ng g' : Quiver.Hom b c\nη : Quiver.Hom g g'\nh : Quiver.Hom c d\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.whiskerLeft f η) h) (CategoryTheory.Bicategory.associator f g' h).hom) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h).hom (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.whiskerRight η h)))","decl":"@[reassoc]\ntheorem associator_naturality_middle (f : a ⟶ b) {g g' : b ⟶ c} (η : g ⟶ g') (h : c ⟶ d) :\n    (f ◁ η) ▷ h ≫ (α_ f g' h).hom = (α_ f g h).hom ≫ f ◁ η ▷ h := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.associator_naturality_middle_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d : B\nf : Quiver.Hom a b\ng g' : Quiver.Hom b c\nη : Quiver.Hom g g'\nh✝ : Quiver.Hom c d\nZ : Quiver.Hom a d\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp f (CategoryTheory.CategoryStruct.comp g' h✝)) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.whiskerLeft f η) h✝) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g' h✝).hom h)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h✝).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.whiskerRight η h✝)) h))","decl":"@[reassoc]\ntheorem associator_naturality_middle (f : a ⟶ b) {g g' : b ⟶ c} (η : g ⟶ g') (h : c ⟶ d) :\n    (f ◁ η) ▷ h ≫ (α_ f g' h).hom = (α_ f g h).hom ≫ f ◁ η ▷ h := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.associator_inv_naturality_middle","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d : B\nf : Quiver.Hom a b\ng g' : Quiver.Hom b c\nη : Quiver.Hom g g'\nh : Quiver.Hom c d\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.whiskerRight η h)) (CategoryTheory.Bicategory.associator f g' h).inv) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h).inv (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.whiskerLeft f η) h))","decl":"@[reassoc]\ntheorem associator_inv_naturality_middle (f : a ⟶ b) {g g' : b ⟶ c} (η : g ⟶ g') (h : c ⟶ d) :\n    f ◁ η ▷ h ≫ (α_ f g' h).inv = (α_ f g h).inv ≫ (f ◁ η) ▷ h := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.associator_inv_naturality_middle_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d : B\nf : Quiver.Hom a b\ng g' : Quiver.Hom b c\nη : Quiver.Hom g g'\nh✝ : Quiver.Hom c d\nZ : Quiver.Hom a d\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.comp f g') h✝) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.whiskerRight η h✝)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g' h✝).inv h)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h✝).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.whiskerLeft f η) h✝) h))","decl":"@[reassoc]\ntheorem associator_inv_naturality_middle (f : a ⟶ b) {g g' : b ⟶ c} (η : g ⟶ g') (h : c ⟶ d) :\n    f ◁ η ▷ h ≫ (α_ f g' h).inv = (α_ f g h).inv ≫ (f ◁ η) ▷ h := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.whisker_assoc_symm","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d : B\nf : Quiver.Hom a b\ng g' : Quiver.Hom b c\nη : Quiver.Hom g g'\nh : Quiver.Hom c d\n⊢ Eq (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.whiskerRight η h)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.whiskerLeft f η) h) (CategoryTheory.Bicategory.associator f g' h).hom))","decl":"@[reassoc]\ntheorem whisker_assoc_symm (f : a ⟶ b) {g g' : b ⟶ c} (η : g ⟶ g') (h : c ⟶ d) :\n    f ◁ η ▷ h = (α_ f g h).inv ≫ (f ◁ η) ▷ h ≫ (α_ f g' h).hom := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.whisker_assoc_symm_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d : B\nf : Quiver.Hom a b\ng g' : Quiver.Hom b c\nη : Quiver.Hom g g'\nh✝ : Quiver.Hom c d\nZ : Quiver.Hom a d\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp f (CategoryTheory.CategoryStruct.comp g' h✝)) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.whiskerRight η h✝)) h) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h✝).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.whiskerLeft f η) h✝) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g' h✝).hom h)))","decl":"@[reassoc]\ntheorem whisker_assoc_symm (f : a ⟶ b) {g g' : b ⟶ c} (η : g ⟶ g') (h : c ⟶ d) :\n    f ◁ η ▷ h = (α_ f g h).inv ≫ (f ◁ η) ▷ h ≫ (α_ f g' h).hom := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.associator_naturality_right","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh h' : Quiver.Hom c d\nη : Quiver.Hom h h'\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft (CategoryTheory.CategoryStruct.comp f g) η) (CategoryTheory.Bicategory.associator f g h').hom) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h).hom (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.whiskerLeft g η)))","decl":"@[reassoc]\ntheorem associator_naturality_right (f : a ⟶ b) (g : b ⟶ c) {h h' : c ⟶ d} (η : h ⟶ h') :\n    (f ≫ g) ◁ η ≫ (α_ f g h').hom = (α_ f g h).hom ≫ f ◁ g ◁ η := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.associator_naturality_right_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh✝ h' : Quiver.Hom c d\nη : Quiver.Hom h✝ h'\nZ : Quiver.Hom a d\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp f (CategoryTheory.CategoryStruct.comp g h')) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft (CategoryTheory.CategoryStruct.comp f g) η) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h').hom h)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h✝).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.whiskerLeft g η)) h))","decl":"@[reassoc]\ntheorem associator_naturality_right (f : a ⟶ b) (g : b ⟶ c) {h h' : c ⟶ d} (η : h ⟶ h') :\n    (f ≫ g) ◁ η ≫ (α_ f g h').hom = (α_ f g h).hom ≫ f ◁ g ◁ η := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.associator_inv_naturality_right","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh h' : Quiver.Hom c d\nη : Quiver.Hom h h'\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.whiskerLeft g η)) (CategoryTheory.Bicategory.associator f g h').inv) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h).inv (CategoryTheory.Bicategory.whiskerLeft (CategoryTheory.CategoryStruct.comp f g) η))","decl":"@[reassoc]\ntheorem associator_inv_naturality_right (f : a ⟶ b) (g : b ⟶ c) {h h' : c ⟶ d} (η : h ⟶ h') :\n    f ◁ g ◁ η ≫ (α_ f g h').inv = (α_ f g h).inv ≫ (f ≫ g) ◁ η := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.associator_inv_naturality_right_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh✝ h' : Quiver.Hom c d\nη : Quiver.Hom h✝ h'\nZ : Quiver.Hom a d\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.comp f g) h') Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.whiskerLeft g η)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h').inv h)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h✝).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft (CategoryTheory.CategoryStruct.comp f g) η) h))","decl":"@[reassoc]\ntheorem associator_inv_naturality_right (f : a ⟶ b) (g : b ⟶ c) {h h' : c ⟶ d} (η : h ⟶ h') :\n    f ◁ g ◁ η ≫ (α_ f g h').inv = (α_ f g h).inv ≫ (f ≫ g) ◁ η := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.comp_whiskerLeft_symm","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh h' : Quiver.Hom c d\nη : Quiver.Hom h h'\n⊢ Eq (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.whiskerLeft g η)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft (CategoryTheory.CategoryStruct.comp f g) η) (CategoryTheory.Bicategory.associator f g h').hom))","decl":"@[reassoc]\ntheorem comp_whiskerLeft_symm (f : a ⟶ b) (g : b ⟶ c) {h h' : c ⟶ d} (η : h ⟶ h') :\n    f ◁ g ◁ η = (α_ f g h).inv ≫ (f ≫ g) ◁ η ≫ (α_ f g h').hom := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.comp_whiskerLeft_symm_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nh✝ h' : Quiver.Hom c d\nη : Quiver.Hom h✝ h'\nZ : Quiver.Hom a d\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp f (CategoryTheory.CategoryStruct.comp g h')) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.whiskerLeft g η)) h) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h✝).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft (CategoryTheory.CategoryStruct.comp f g) η) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g h').hom h)))","decl":"@[reassoc]\ntheorem comp_whiskerLeft_symm (f : a ⟶ b) (g : b ⟶ c) {h h' : c ⟶ d} (η : h ⟶ h') :\n    f ◁ g ◁ η = (α_ f g h).inv ≫ (f ≫ g) ◁ η ≫ (α_ f g h').hom := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.leftUnitor_naturality_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b : B\nf g : Quiver.Hom a b\nη : Quiver.Hom f g\nZ : Quiver.Hom a b\nh : Quiver.Hom g Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft (CategoryTheory.CategoryStruct.id a) η) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.leftUnitor g).hom h)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.leftUnitor f).hom (CategoryTheory.CategoryStruct.comp η h))","decl":"@[reassoc]\ntheorem leftUnitor_naturality {f g : a ⟶ b} (η : f ⟶ g) :\n    𝟙 a ◁ η ≫ (λ_ g).hom = (λ_ f).hom ≫ η := by\n  simp\n\n"}
{"name":"CategoryTheory.Bicategory.leftUnitor_naturality","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b : B\nf g : Quiver.Hom a b\nη : Quiver.Hom f g\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft (CategoryTheory.CategoryStruct.id a) η) (CategoryTheory.Bicategory.leftUnitor g).hom) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.leftUnitor f).hom η)","decl":"@[reassoc]\ntheorem leftUnitor_naturality {f g : a ⟶ b} (η : f ⟶ g) :\n    𝟙 a ◁ η ≫ (λ_ g).hom = (λ_ f).hom ≫ η := by\n  simp\n\n"}
{"name":"CategoryTheory.Bicategory.leftUnitor_inv_naturality_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b : B\nf g : Quiver.Hom a b\nη : Quiver.Hom f g\nZ : Quiver.Hom a b\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.id a) g) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp η (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.leftUnitor g).inv h)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.leftUnitor f).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft (CategoryTheory.CategoryStruct.id a) η) h))","decl":"@[reassoc]\ntheorem leftUnitor_inv_naturality {f g : a ⟶ b} (η : f ⟶ g) :\n    η ≫ (λ_ g).inv = (λ_ f).inv ≫ 𝟙 a ◁ η := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.leftUnitor_inv_naturality","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b : B\nf g : Quiver.Hom a b\nη : Quiver.Hom f g\n⊢ Eq (CategoryTheory.CategoryStruct.comp η (CategoryTheory.Bicategory.leftUnitor g).inv) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.leftUnitor f).inv (CategoryTheory.Bicategory.whiskerLeft (CategoryTheory.CategoryStruct.id a) η))","decl":"@[reassoc]\ntheorem leftUnitor_inv_naturality {f g : a ⟶ b} (η : f ⟶ g) :\n    η ≫ (λ_ g).inv = (λ_ f).inv ≫ 𝟙 a ◁ η := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.id_whiskerLeft_symm","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b : B\nf g : Quiver.Hom a b\nη : Quiver.Hom f g\n⊢ Eq η (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.leftUnitor f).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft (CategoryTheory.CategoryStruct.id a) η) (CategoryTheory.Bicategory.leftUnitor g).hom))","decl":"theorem id_whiskerLeft_symm {f g : a ⟶ b} (η : f ⟶ g) : η = (λ_ f).inv ≫ 𝟙 a ◁ η ≫ (λ_ g).hom := by\n  simp\n\n"}
{"name":"CategoryTheory.Bicategory.rightUnitor_naturality_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b : B\nf g : Quiver.Hom a b\nη : Quiver.Hom f g\nZ : Quiver.Hom a b\nh : Quiver.Hom g Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight η (CategoryTheory.CategoryStruct.id b)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.rightUnitor g).hom h)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.rightUnitor f).hom (CategoryTheory.CategoryStruct.comp η h))","decl":"@[reassoc]\ntheorem rightUnitor_naturality {f g : a ⟶ b} (η : f ⟶ g) :\n    η ▷ 𝟙 b ≫ (ρ_ g).hom = (ρ_ f).hom ≫ η := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.rightUnitor_naturality","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b : B\nf g : Quiver.Hom a b\nη : Quiver.Hom f g\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight η (CategoryTheory.CategoryStruct.id b)) (CategoryTheory.Bicategory.rightUnitor g).hom) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.rightUnitor f).hom η)","decl":"@[reassoc]\ntheorem rightUnitor_naturality {f g : a ⟶ b} (η : f ⟶ g) :\n    η ▷ 𝟙 b ≫ (ρ_ g).hom = (ρ_ f).hom ≫ η := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.rightUnitor_inv_naturality_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b : B\nf g : Quiver.Hom a b\nη : Quiver.Hom f g\nZ : Quiver.Hom a b\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp g (CategoryTheory.CategoryStruct.id b)) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp η (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.rightUnitor g).inv h)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.rightUnitor f).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight η (CategoryTheory.CategoryStruct.id b)) h))","decl":"@[reassoc]\ntheorem rightUnitor_inv_naturality {f g : a ⟶ b} (η : f ⟶ g) :\n    η ≫ (ρ_ g).inv = (ρ_ f).inv ≫ η ▷ 𝟙 b := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.rightUnitor_inv_naturality","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b : B\nf g : Quiver.Hom a b\nη : Quiver.Hom f g\n⊢ Eq (CategoryTheory.CategoryStruct.comp η (CategoryTheory.Bicategory.rightUnitor g).inv) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.rightUnitor f).inv (CategoryTheory.Bicategory.whiskerRight η (CategoryTheory.CategoryStruct.id b)))","decl":"@[reassoc]\ntheorem rightUnitor_inv_naturality {f g : a ⟶ b} (η : f ⟶ g) :\n    η ≫ (ρ_ g).inv = (ρ_ f).inv ≫ η ▷ 𝟙 b := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.whiskerRight_id_symm","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b : B\nf g : Quiver.Hom a b\nη : Quiver.Hom f g\n⊢ Eq η (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.rightUnitor f).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight η (CategoryTheory.CategoryStruct.id b)) (CategoryTheory.Bicategory.rightUnitor g).hom))","decl":"theorem whiskerRight_id_symm {f g : a ⟶ b} (η : f ⟶ g) : η = (ρ_ f).inv ≫ η ▷ 𝟙 b ≫ (ρ_ g).hom := by\n  simp\n\n"}
{"name":"CategoryTheory.Bicategory.whiskerLeft_iff","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b : B\nf g : Quiver.Hom a b\nη θ : Quiver.Hom f g\n⊢ Iff (Eq (CategoryTheory.Bicategory.whiskerLeft (CategoryTheory.CategoryStruct.id a) η) (CategoryTheory.Bicategory.whiskerLeft (CategoryTheory.CategoryStruct.id a) θ)) (Eq η θ)","decl":"theorem whiskerLeft_iff {f g : a ⟶ b} (η θ : f ⟶ g) : 𝟙 a ◁ η = 𝟙 a ◁ θ ↔ η = θ := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.whiskerRight_iff","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b : B\nf g : Quiver.Hom a b\nη θ : Quiver.Hom f g\n⊢ Iff (Eq (CategoryTheory.Bicategory.whiskerRight η (CategoryTheory.CategoryStruct.id b)) (CategoryTheory.Bicategory.whiskerRight θ (CategoryTheory.CategoryStruct.id b))) (Eq η θ)","decl":"theorem whiskerRight_iff {f g : a ⟶ b} (η θ : f ⟶ g) : η ▷ 𝟙 b = θ ▷ 𝟙 b ↔ η = θ := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.leftUnitor_whiskerRight_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nZ : Quiver.Hom a c\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp f g) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.leftUnitor f).hom g) h) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.id a) f g).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.leftUnitor (CategoryTheory.CategoryStruct.comp f g)).hom h))","decl":"/-- We state it as a simp lemma, which is regarded as an involved version of\n`id_whiskerRight f g : 𝟙 f ▷ g = 𝟙 (f ≫ g)`.\n-/\n@[reassoc, simp]\ntheorem leftUnitor_whiskerRight (f : a ⟶ b) (g : b ⟶ c) :\n    (λ_ f).hom ▷ g = (α_ (𝟙 a) f g).hom ≫ (λ_ (f ≫ g)).hom := by\n  rw [← whiskerLeft_iff, whiskerLeft_comp, ← cancel_epi (α_ _ _ _).hom, ←\n      cancel_epi ((α_ _ _ _).hom ▷ _), pentagon_assoc, triangle, ← associator_naturality_middle, ←\n      comp_whiskerRight_assoc, triangle, associator_naturality_left]\n\n"}
{"name":"CategoryTheory.Bicategory.leftUnitor_whiskerRight","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\n⊢ Eq (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.leftUnitor f).hom g) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.id a) f g).hom (CategoryTheory.Bicategory.leftUnitor (CategoryTheory.CategoryStruct.comp f g)).hom)","decl":"/-- We state it as a simp lemma, which is regarded as an involved version of\n`id_whiskerRight f g : 𝟙 f ▷ g = 𝟙 (f ≫ g)`.\n-/\n@[reassoc, simp]\ntheorem leftUnitor_whiskerRight (f : a ⟶ b) (g : b ⟶ c) :\n    (λ_ f).hom ▷ g = (α_ (𝟙 a) f g).hom ≫ (λ_ (f ≫ g)).hom := by\n  rw [← whiskerLeft_iff, whiskerLeft_comp, ← cancel_epi (α_ _ _ _).hom, ←\n      cancel_epi ((α_ _ _ _).hom ▷ _), pentagon_assoc, triangle, ← associator_naturality_middle, ←\n      comp_whiskerRight_assoc, triangle, associator_naturality_left]\n\n"}
{"name":"CategoryTheory.Bicategory.leftUnitor_inv_whiskerRight","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\n⊢ Eq (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.leftUnitor f).inv g) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.leftUnitor (CategoryTheory.CategoryStruct.comp f g)).inv (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.id a) f g).inv)","decl":"@[reassoc, simp]\ntheorem leftUnitor_inv_whiskerRight (f : a ⟶ b) (g : b ⟶ c) :\n    (λ_ f).inv ▷ g = (λ_ (f ≫ g)).inv ≫ (α_ (𝟙 a) f g).inv :=\n  eq_of_inv_eq_inv (by simp)\n\n"}
{"name":"CategoryTheory.Bicategory.leftUnitor_inv_whiskerRight_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nZ : Quiver.Hom a c\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.id a) f) g) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.leftUnitor f).inv g) h) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.leftUnitor (CategoryTheory.CategoryStruct.comp f g)).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.id a) f g).inv h))","decl":"@[reassoc, simp]\ntheorem leftUnitor_inv_whiskerRight (f : a ⟶ b) (g : b ⟶ c) :\n    (λ_ f).inv ▷ g = (λ_ (f ≫ g)).inv ≫ (α_ (𝟙 a) f g).inv :=\n  eq_of_inv_eq_inv (by simp)\n\n"}
{"name":"CategoryTheory.Bicategory.whiskerLeft_rightUnitor","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\n⊢ Eq (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.rightUnitor g).hom) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.id c)).inv (CategoryTheory.Bicategory.rightUnitor (CategoryTheory.CategoryStruct.comp f g)).hom)","decl":"@[reassoc, simp]\ntheorem whiskerLeft_rightUnitor (f : a ⟶ b) (g : b ⟶ c) :\n    f ◁ (ρ_ g).hom = (α_ f g (𝟙 c)).inv ≫ (ρ_ (f ≫ g)).hom := by\n  rw [← whiskerRight_iff, comp_whiskerRight, ← cancel_epi (α_ _ _ _).inv, ←\n      cancel_epi (f ◁ (α_ _ _ _).inv), pentagon_inv_assoc, triangle_assoc_comp_right, ←\n      associator_inv_naturality_middle, ← whiskerLeft_comp_assoc, triangle_assoc_comp_right,\n      associator_inv_naturality_right]\n\n"}
{"name":"CategoryTheory.Bicategory.whiskerLeft_rightUnitor_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nZ : Quiver.Hom a c\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp f g) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.rightUnitor g).hom) h) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.id c)).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.rightUnitor (CategoryTheory.CategoryStruct.comp f g)).hom h))","decl":"@[reassoc, simp]\ntheorem whiskerLeft_rightUnitor (f : a ⟶ b) (g : b ⟶ c) :\n    f ◁ (ρ_ g).hom = (α_ f g (𝟙 c)).inv ≫ (ρ_ (f ≫ g)).hom := by\n  rw [← whiskerRight_iff, comp_whiskerRight, ← cancel_epi (α_ _ _ _).inv, ←\n      cancel_epi (f ◁ (α_ _ _ _).inv), pentagon_inv_assoc, triangle_assoc_comp_right, ←\n      associator_inv_naturality_middle, ← whiskerLeft_comp_assoc, triangle_assoc_comp_right,\n      associator_inv_naturality_right]\n\n"}
{"name":"CategoryTheory.Bicategory.whiskerLeft_rightUnitor_inv","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\n⊢ Eq (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.rightUnitor g).inv) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.rightUnitor (CategoryTheory.CategoryStruct.comp f g)).inv (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.id c)).hom)","decl":"@[reassoc, simp]\ntheorem whiskerLeft_rightUnitor_inv (f : a ⟶ b) (g : b ⟶ c) :\n    f ◁ (ρ_ g).inv = (ρ_ (f ≫ g)).inv ≫ (α_ f g (𝟙 c)).hom :=\n  eq_of_inv_eq_inv (by simp)\n\n/-\nIt is not so obvious whether `leftUnitor_whiskerRight` or `leftUnitor_comp` should be a simp\nlemma. Our choice is the former. One reason is that the latter yields the following loop:\n[id_whiskerLeft]   : 𝟙 a ◁ (ρ_ f).hom ==> (λ_ (f ≫ 𝟙 b)).hom ≫ (ρ_ f).hom ≫ (λ_ f).inv\n[leftUnitor_comp]  : (λ_ (f ≫ 𝟙 b)).hom ==> (α_ (𝟙 a) f (𝟙 b)).inv ≫ (λ_ f).hom ▷ 𝟙 b\n[whiskerRight_id]  : (λ_ f).hom ▷ 𝟙 b ==> (ρ_ (𝟙 a ≫ f)).hom ≫ (λ_ f).hom ≫ (ρ_ f).inv\n[rightUnitor_comp] : (ρ_ (𝟙 a ≫ f)).hom ==> (α_ (𝟙 a) f (𝟙 b)).hom ≫ 𝟙 a ◁ (ρ_ f).hom\n-/\n"}
{"name":"CategoryTheory.Bicategory.whiskerLeft_rightUnitor_inv_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nZ : Quiver.Hom a c\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp f (CategoryTheory.CategoryStruct.comp g (CategoryTheory.CategoryStruct.id c))) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.rightUnitor g).inv) h) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.rightUnitor (CategoryTheory.CategoryStruct.comp f g)).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.id c)).hom h))","decl":"@[reassoc, simp]\ntheorem whiskerLeft_rightUnitor_inv (f : a ⟶ b) (g : b ⟶ c) :\n    f ◁ (ρ_ g).inv = (ρ_ (f ≫ g)).inv ≫ (α_ f g (𝟙 c)).hom :=\n  eq_of_inv_eq_inv (by simp)\n\n/-\nIt is not so obvious whether `leftUnitor_whiskerRight` or `leftUnitor_comp` should be a simp\nlemma. Our choice is the former. One reason is that the latter yields the following loop:\n[id_whiskerLeft]   : 𝟙 a ◁ (ρ_ f).hom ==> (λ_ (f ≫ 𝟙 b)).hom ≫ (ρ_ f).hom ≫ (λ_ f).inv\n[leftUnitor_comp]  : (λ_ (f ≫ 𝟙 b)).hom ==> (α_ (𝟙 a) f (𝟙 b)).inv ≫ (λ_ f).hom ▷ 𝟙 b\n[whiskerRight_id]  : (λ_ f).hom ▷ 𝟙 b ==> (ρ_ (𝟙 a ≫ f)).hom ≫ (λ_ f).hom ≫ (ρ_ f).inv\n[rightUnitor_comp] : (ρ_ (𝟙 a ≫ f)).hom ==> (α_ (𝟙 a) f (𝟙 b)).hom ≫ 𝟙 a ◁ (ρ_ f).hom\n-/\n"}
{"name":"CategoryTheory.Bicategory.leftUnitor_comp_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nZ : Quiver.Hom a c\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp f g) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.leftUnitor (CategoryTheory.CategoryStruct.comp f g)).hom h) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.id a) f g).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.leftUnitor f).hom g) h))","decl":"@[reassoc]\ntheorem leftUnitor_comp (f : a ⟶ b) (g : b ⟶ c) :\n    (λ_ (f ≫ g)).hom = (α_ (𝟙 a) f g).inv ≫ (λ_ f).hom ▷ g := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.leftUnitor_comp","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\n⊢ Eq (CategoryTheory.Bicategory.leftUnitor (CategoryTheory.CategoryStruct.comp f g)).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.id a) f g).inv (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.leftUnitor f).hom g))","decl":"@[reassoc]\ntheorem leftUnitor_comp (f : a ⟶ b) (g : b ⟶ c) :\n    (λ_ (f ≫ g)).hom = (α_ (𝟙 a) f g).inv ≫ (λ_ f).hom ▷ g := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.leftUnitor_comp_inv_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nZ : Quiver.Hom a c\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.id a) (CategoryTheory.CategoryStruct.comp f g)) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.leftUnitor (CategoryTheory.CategoryStruct.comp f g)).inv h) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.leftUnitor f).inv g) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.id a) f g).hom h))","decl":"@[reassoc]\ntheorem leftUnitor_comp_inv (f : a ⟶ b) (g : b ⟶ c) :\n    (λ_ (f ≫ g)).inv = (λ_ f).inv ▷ g ≫ (α_ (𝟙 a) f g).hom := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.leftUnitor_comp_inv","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\n⊢ Eq (CategoryTheory.Bicategory.leftUnitor (CategoryTheory.CategoryStruct.comp f g)).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (CategoryTheory.Bicategory.leftUnitor f).inv g) (CategoryTheory.Bicategory.associator (CategoryTheory.CategoryStruct.id a) f g).hom)","decl":"@[reassoc]\ntheorem leftUnitor_comp_inv (f : a ⟶ b) (g : b ⟶ c) :\n    (λ_ (f ≫ g)).inv = (λ_ f).inv ▷ g ≫ (α_ (𝟙 a) f g).hom := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.rightUnitor_comp","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\n⊢ Eq (CategoryTheory.Bicategory.rightUnitor (CategoryTheory.CategoryStruct.comp f g)).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.id c)).hom (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.rightUnitor g).hom))","decl":"@[reassoc]\ntheorem rightUnitor_comp (f : a ⟶ b) (g : b ⟶ c) :\n    (ρ_ (f ≫ g)).hom = (α_ f g (𝟙 c)).hom ≫ f ◁ (ρ_ g).hom := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.rightUnitor_comp_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nZ : Quiver.Hom a c\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp f g) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.rightUnitor (CategoryTheory.CategoryStruct.comp f g)).hom h) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.id c)).hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.rightUnitor g).hom) h))","decl":"@[reassoc]\ntheorem rightUnitor_comp (f : a ⟶ b) (g : b ⟶ c) :\n    (ρ_ (f ≫ g)).hom = (α_ f g (𝟙 c)).hom ≫ f ◁ (ρ_ g).hom := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.rightUnitor_comp_inv","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\n⊢ Eq (CategoryTheory.Bicategory.rightUnitor (CategoryTheory.CategoryStruct.comp f g)).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.rightUnitor g).inv) (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.id c)).inv)","decl":"@[reassoc]\ntheorem rightUnitor_comp_inv (f : a ⟶ b) (g : b ⟶ c) :\n    (ρ_ (f ≫ g)).inv = f ◁ (ρ_ g).inv ≫ (α_ f g (𝟙 c)).inv := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.rightUnitor_comp_inv_assoc","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nZ : Quiver.Hom a c\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.comp f g) (CategoryTheory.CategoryStruct.id c)) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.rightUnitor (CategoryTheory.CategoryStruct.comp f g)).inv h) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (CategoryTheory.Bicategory.rightUnitor g).inv) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.associator f g (CategoryTheory.CategoryStruct.id c)).inv h))","decl":"@[reassoc]\ntheorem rightUnitor_comp_inv (f : a ⟶ b) (g : b ⟶ c) :\n    (ρ_ (f ≫ g)).inv = f ◁ (ρ_ g).inv ≫ (α_ f g (𝟙 c)).inv := by simp\n\n"}
{"name":"CategoryTheory.Bicategory.unitors_equal","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na : B\n⊢ Eq (CategoryTheory.Bicategory.leftUnitor (CategoryTheory.CategoryStruct.id a)).hom (CategoryTheory.Bicategory.rightUnitor (CategoryTheory.CategoryStruct.id a)).hom","decl":"@[simp]\ntheorem unitors_equal : (λ_ (𝟙 a)).hom = (ρ_ (𝟙 a)).hom := by\n  rw [← whiskerLeft_iff, ← cancel_epi (α_ _ _ _).hom, ← cancel_mono (ρ_ _).hom, triangle, ←\n      rightUnitor_comp, rightUnitor_naturality]\n\n"}
{"name":"CategoryTheory.Bicategory.unitors_inv_equal","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na : B\n⊢ Eq (CategoryTheory.Bicategory.leftUnitor (CategoryTheory.CategoryStruct.id a)).inv (CategoryTheory.Bicategory.rightUnitor (CategoryTheory.CategoryStruct.id a)).inv","decl":"@[simp]\ntheorem unitors_inv_equal : (λ_ (𝟙 a)).inv = (ρ_ (𝟙 a)).inv := by simp [Iso.inv_eq_inv]\n\n"}
{"name":"CategoryTheory.Bicategory.precomp_map","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\nX✝ Y✝ : Quiver.Hom b c\nx✝ : Quiver.Hom X✝ Y✝\n⊢ Eq ((CategoryTheory.Bicategory.precomp c f).map x✝) (CategoryTheory.Bicategory.whiskerLeft f x✝)","decl":"/-- Precomposition of a 1-morphism as a functor. -/\n@[simps]\ndef precomp (c : B) (f : a ⟶ b) : (b ⟶ c) ⥤ (a ⟶ c) where\n  obj := (f ≫ ·)\n  map := (f ◁ ·)\n\n"}
{"name":"CategoryTheory.Bicategory.precomp_obj","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\nx✝ : Quiver.Hom b c\n⊢ Eq ((CategoryTheory.Bicategory.precomp c f).obj x✝) (CategoryTheory.CategoryStruct.comp f x✝)","decl":"/-- Precomposition of a 1-morphism as a functor. -/\n@[simps]\ndef precomp (c : B) (f : a ⟶ b) : (b ⟶ c) ⥤ (a ⟶ c) where\n  obj := (f ≫ ·)\n  map := (f ◁ ·)\n\n"}
{"name":"CategoryTheory.Bicategory.precomposing_map_app","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nX✝ Y✝ : Quiver.Hom a b\nη : Quiver.Hom X✝ Y✝\nx✝ : Quiver.Hom b c\n⊢ Eq (((CategoryTheory.Bicategory.precomposing a b c).map η).app x✝) (CategoryTheory.Bicategory.whiskerRight η x✝)","decl":"/-- Precomposition of a 1-morphism as a functor from the category of 1-morphisms `a ⟶ b` into the\ncategory of functors `(b ⟶ c) ⥤ (a ⟶ c)`. -/\n@[simps]\ndef precomposing (a b c : B) : (a ⟶ b) ⥤ (b ⟶ c) ⥤ (a ⟶ c) where\n  obj f := precomp c f\n  map η := { app := (η ▷ ·) }\n\n"}
{"name":"CategoryTheory.Bicategory.precomposing_obj","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\n⊢ Eq ((CategoryTheory.Bicategory.precomposing a b c).obj f) (CategoryTheory.Bicategory.precomp c f)","decl":"/-- Precomposition of a 1-morphism as a functor from the category of 1-morphisms `a ⟶ b` into the\ncategory of functors `(b ⟶ c) ⥤ (a ⟶ c)`. -/\n@[simps]\ndef precomposing (a b c : B) : (a ⟶ b) ⥤ (b ⟶ c) ⥤ (a ⟶ c) where\n  obj f := precomp c f\n  map η := { app := (η ▷ ·) }\n\n"}
{"name":"CategoryTheory.Bicategory.postcomp_obj","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\nb c a : B\nf : Quiver.Hom b c\nx✝ : Quiver.Hom a b\n⊢ Eq ((CategoryTheory.Bicategory.postcomp a f).obj x✝) (CategoryTheory.CategoryStruct.comp x✝ f)","decl":"/-- Postcomposition of a 1-morphism as a functor. -/\n@[simps]\ndef postcomp (a : B) (f : b ⟶ c) : (a ⟶ b) ⥤ (a ⟶ c) where\n  obj := (· ≫ f)\n  map := (· ▷ f)\n\n"}
{"name":"CategoryTheory.Bicategory.postcomp_map","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\nb c a : B\nf : Quiver.Hom b c\nX✝ Y✝ : Quiver.Hom a b\nx✝ : Quiver.Hom X✝ Y✝\n⊢ Eq ((CategoryTheory.Bicategory.postcomp a f).map x✝) (CategoryTheory.Bicategory.whiskerRight x✝ f)","decl":"/-- Postcomposition of a 1-morphism as a functor. -/\n@[simps]\ndef postcomp (a : B) (f : b ⟶ c) : (a ⟶ b) ⥤ (a ⟶ c) where\n  obj := (· ≫ f)\n  map := (· ▷ f)\n\n"}
{"name":"CategoryTheory.Bicategory.postcomposing_obj","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom b c\n⊢ Eq ((CategoryTheory.Bicategory.postcomposing a b c).obj f) (CategoryTheory.Bicategory.postcomp a f)","decl":"/-- Postcomposition of a 1-morphism as a functor from the category of 1-morphisms `b ⟶ c` into the\ncategory of functors `(a ⟶ b) ⥤ (a ⟶ c)`. -/\n@[simps]\ndef postcomposing (a b c : B) : (b ⟶ c) ⥤ (a ⟶ b) ⥤ (a ⟶ c) where\n  obj f := postcomp a f\n  map η := { app := (· ◁ η) }\n\n"}
{"name":"CategoryTheory.Bicategory.postcomposing_map_app","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nX✝ Y✝ : Quiver.Hom b c\nη : Quiver.Hom X✝ Y✝\nx✝ : Quiver.Hom a b\n⊢ Eq (((CategoryTheory.Bicategory.postcomposing a b c).map η).app x✝) (CategoryTheory.Bicategory.whiskerLeft x✝ η)","decl":"/-- Postcomposition of a 1-morphism as a functor from the category of 1-morphisms `b ⟶ c` into the\ncategory of functors `(a ⟶ b) ⥤ (a ⟶ c)`. -/\n@[simps]\ndef postcomposing (a b c : B) : (b ⟶ c) ⥤ (a ⟶ b) ⥤ (a ⟶ c) where\n  obj f := postcomp a f\n  map η := { app := (· ◁ η) }\n\n"}
{"name":"CategoryTheory.Bicategory.associatorNatIsoLeft_inv_app","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\nb c d a : B\ng : Quiver.Hom b c\nh : Quiver.Hom c d\nX : Quiver.Hom a b\n⊢ Eq ((CategoryTheory.Bicategory.associatorNatIsoLeft a g h).inv.app X) (CategoryTheory.Bicategory.associator X g h).inv","decl":"/-- Left component of the associator as a natural isomorphism. -/\n@[simps!]\ndef associatorNatIsoLeft (a : B) (g : b ⟶ c) (h : c ⟶ d) :\n    (postcomposing a ..).obj g ⋙ (postcomposing ..).obj h ≅ (postcomposing ..).obj (g ≫ h) :=\n  NatIso.ofComponents (α_ · g h)\n\n"}
{"name":"CategoryTheory.Bicategory.associatorNatIsoLeft_hom_app","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\nb c d a : B\ng : Quiver.Hom b c\nh : Quiver.Hom c d\nX : Quiver.Hom a b\n⊢ Eq ((CategoryTheory.Bicategory.associatorNatIsoLeft a g h).hom.app X) (CategoryTheory.Bicategory.associator X g h).hom","decl":"/-- Left component of the associator as a natural isomorphism. -/\n@[simps!]\ndef associatorNatIsoLeft (a : B) (g : b ⟶ c) (h : c ⟶ d) :\n    (postcomposing a ..).obj g ⋙ (postcomposing ..).obj h ≅ (postcomposing ..).obj (g ≫ h) :=\n  NatIso.ofComponents (α_ · g h)\n\n"}
{"name":"CategoryTheory.Bicategory.associatorNatIsoMiddle_hom_app","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d : B\nf : Quiver.Hom a b\nh : Quiver.Hom c d\nX : Quiver.Hom b c\n⊢ Eq ((CategoryTheory.Bicategory.associatorNatIsoMiddle f h).hom.app X) (CategoryTheory.Bicategory.associator f X h).hom","decl":"/-- Middle component of the associator as a natural isomorphism. -/\n@[simps!]\ndef associatorNatIsoMiddle (f : a ⟶ b) (h : c ⟶ d) :\n    (precomposing ..).obj f ⋙ (postcomposing ..).obj h ≅\n      (postcomposing ..).obj h ⋙ (precomposing ..).obj f :=\n  NatIso.ofComponents (α_ f · h)\n\n"}
{"name":"CategoryTheory.Bicategory.associatorNatIsoMiddle_inv_app","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c d : B\nf : Quiver.Hom a b\nh : Quiver.Hom c d\nX : Quiver.Hom b c\n⊢ Eq ((CategoryTheory.Bicategory.associatorNatIsoMiddle f h).inv.app X) (CategoryTheory.Bicategory.associator f X h).inv","decl":"/-- Middle component of the associator as a natural isomorphism. -/\n@[simps!]\ndef associatorNatIsoMiddle (f : a ⟶ b) (h : c ⟶ d) :\n    (precomposing ..).obj f ⋙ (postcomposing ..).obj h ≅\n      (postcomposing ..).obj h ⋙ (precomposing ..).obj f :=\n  NatIso.ofComponents (α_ f · h)\n\n"}
{"name":"CategoryTheory.Bicategory.associatorNatIsoRight_hom_app","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nd : B\nX : Quiver.Hom c d\n⊢ Eq ((CategoryTheory.Bicategory.associatorNatIsoRight f g d).hom.app X) (CategoryTheory.Bicategory.associator f g X).hom","decl":"/-- Right component of the associator as a natural isomorphism. -/\n@[simps!]\ndef associatorNatIsoRight (f : a ⟶ b) (g : b ⟶ c) (d : B) :\n    (precomposing _ _ d).obj (f ≫ g) ≅ (precomposing ..).obj g ⋙ (precomposing ..).obj f :=\n  NatIso.ofComponents (α_ f g ·)\n\n"}
{"name":"CategoryTheory.Bicategory.associatorNatIsoRight_inv_app","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom b c\nd : B\nX : Quiver.Hom c d\n⊢ Eq ((CategoryTheory.Bicategory.associatorNatIsoRight f g d).inv.app X) (CategoryTheory.Bicategory.associator f g X).inv","decl":"/-- Right component of the associator as a natural isomorphism. -/\n@[simps!]\ndef associatorNatIsoRight (f : a ⟶ b) (g : b ⟶ c) (d : B) :\n    (precomposing _ _ d).obj (f ≫ g) ≅ (precomposing ..).obj g ⋙ (precomposing ..).obj f :=\n  NatIso.ofComponents (α_ f g ·)\n\n"}
{"name":"CategoryTheory.Bicategory.leftUnitorNatIso_hom_app","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b : B\nX : Quiver.Hom a b\n⊢ Eq ((CategoryTheory.Bicategory.leftUnitorNatIso a b).hom.app X) (CategoryTheory.Bicategory.leftUnitor X).hom","decl":"/-- Left unitor as a natural isomorphism. -/\n@[simps!]\ndef leftUnitorNatIso (a b : B) : (precomposing _ _ b).obj (𝟙 a) ≅ 𝟭 (a ⟶ b) :=\n  NatIso.ofComponents (λ_ ·)\n\n"}
{"name":"CategoryTheory.Bicategory.leftUnitorNatIso_inv_app","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b : B\nX : Quiver.Hom a b\n⊢ Eq ((CategoryTheory.Bicategory.leftUnitorNatIso a b).inv.app X) (CategoryTheory.Bicategory.leftUnitor X).inv","decl":"/-- Left unitor as a natural isomorphism. -/\n@[simps!]\ndef leftUnitorNatIso (a b : B) : (precomposing _ _ b).obj (𝟙 a) ≅ 𝟭 (a ⟶ b) :=\n  NatIso.ofComponents (λ_ ·)\n\n"}
{"name":"CategoryTheory.Bicategory.rightUnitorNatIso_hom_app","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b : B\nX : Quiver.Hom a b\n⊢ Eq ((CategoryTheory.Bicategory.rightUnitorNatIso a b).hom.app X) (CategoryTheory.Bicategory.rightUnitor X).hom","decl":"/-- Right unitor as a natural isomorphism. -/\n@[simps!]\ndef rightUnitorNatIso (a b : B) : (postcomposing a _ _).obj (𝟙 b) ≅ 𝟭 (a ⟶ b) :=\n  NatIso.ofComponents (ρ_ ·)\n\n"}
{"name":"CategoryTheory.Bicategory.rightUnitorNatIso_inv_app","module":"Mathlib.CategoryTheory.Bicategory.Basic","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b : B\nX : Quiver.Hom a b\n⊢ Eq ((CategoryTheory.Bicategory.rightUnitorNatIso a b).inv.app X) (CategoryTheory.Bicategory.rightUnitor X).inv","decl":"/-- Right unitor as a natural isomorphism. -/\n@[simps!]\ndef rightUnitorNatIso (a b : B) : (postcomposing a _ _).obj (𝟙 b) ≅ 𝟭 (a ⟶ b) :=\n  NatIso.ofComponents (ρ_ ·)\n\n"}
