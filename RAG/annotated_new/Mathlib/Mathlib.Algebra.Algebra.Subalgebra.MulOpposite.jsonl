{"name":"Subalgebra.coe_op","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS : Subalgebra R A\n⊢ Eq (↑S.op) (Set.preimage MulOpposite.unop ↑S)","decl":"/-- Pull a subalgebra back to an opposite subalgebra along `MulOpposite.unop` -/\n@[simps! coe toSubsemiring]\nprotected def op (S : Subalgebra R A) : Subalgebra R Aᵐᵒᵖ where\n  toSubsemiring := S.toSubsemiring.op\n  algebraMap_mem' := S.algebraMap_mem\n\n"}
{"name":"Subalgebra.op_toSubsemiring","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS : Subalgebra R A\n⊢ Eq S.op.toSubsemiring S.op","decl":"/-- Pull a subalgebra back to an opposite subalgebra along `MulOpposite.unop` -/\n@[simps! coe toSubsemiring]\nprotected def op (S : Subalgebra R A) : Subalgebra R Aᵐᵒᵖ where\n  toSubsemiring := S.toSubsemiring.op\n  algebraMap_mem' := S.algebraMap_mem\n\n"}
{"name":"Subalgebra.mem_op","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nx : MulOpposite A\nS : Subalgebra R A\n⊢ Iff (Membership.mem S.op x) (Membership.mem S (MulOpposite.unop x))","decl":"@[simp]\ntheorem mem_op {x : Aᵐᵒᵖ} {S : Subalgebra R A} : x ∈ S.op ↔ x.unop ∈ S := Iff.rfl\n\n"}
{"name":"Subalgebra.unop_toSubsemiring","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS : Subalgebra R (MulOpposite A)\n⊢ Eq S.unop.toSubsemiring S.unop","decl":"/-- Pull an subalgebra subring back to a subalgebra along `MulOpposite.op` -/\n@[simps! coe toSubsemiring]\nprotected def unop (S : Subalgebra R Aᵐᵒᵖ) : Subalgebra R A where\n  toSubsemiring := S.toSubsemiring.unop\n  algebraMap_mem' := S.algebraMap_mem\n\n"}
{"name":"Subalgebra.coe_unop","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS : Subalgebra R (MulOpposite A)\n⊢ Eq (↑S.unop) (Set.preimage MulOpposite.op ↑S)","decl":"/-- Pull an subalgebra subring back to a subalgebra along `MulOpposite.op` -/\n@[simps! coe toSubsemiring]\nprotected def unop (S : Subalgebra R Aᵐᵒᵖ) : Subalgebra R A where\n  toSubsemiring := S.toSubsemiring.unop\n  algebraMap_mem' := S.algebraMap_mem\n\n"}
{"name":"Subalgebra.mem_unop","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nx : A\nS : Subalgebra R (MulOpposite A)\n⊢ Iff (Membership.mem S.unop x) (Membership.mem S (MulOpposite.op x))","decl":"@[simp]\ntheorem mem_unop {x : A} {S : Subalgebra R Aᵐᵒᵖ} : x ∈ S.unop ↔ MulOpposite.op x ∈ S := Iff.rfl\n\n"}
{"name":"Subalgebra.unop_op","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS : Subalgebra R A\n⊢ Eq S.op.unop S","decl":"@[simp]\ntheorem unop_op (S : Subalgebra R A) : S.op.unop = S := rfl\n\n"}
{"name":"Subalgebra.op_unop","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS : Subalgebra R (MulOpposite A)\n⊢ Eq S.unop.op S","decl":"@[simp]\ntheorem op_unop (S : Subalgebra R Aᵐᵒᵖ) : S.unop.op = S := rfl\n\n"}
{"name":"Subalgebra.op_le_iff","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS₁ : Subalgebra R A\nS₂ : Subalgebra R (MulOpposite A)\n⊢ Iff (LE.le S₁.op S₂) (LE.le S₁ S₂.unop)","decl":"theorem op_le_iff {S₁ : Subalgebra R A} {S₂ : Subalgebra R Aᵐᵒᵖ} : S₁.op ≤ S₂ ↔ S₁ ≤ S₂.unop :=\n  MulOpposite.op_surjective.forall\n\n"}
{"name":"Subalgebra.le_op_iff","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS₁ : Subalgebra R (MulOpposite A)\nS₂ : Subalgebra R A\n⊢ Iff (LE.le S₁ S₂.op) (LE.le S₁.unop S₂)","decl":"theorem le_op_iff {S₁ : Subalgebra R Aᵐᵒᵖ} {S₂ : Subalgebra R A} : S₁ ≤ S₂.op ↔ S₁.unop ≤ S₂ :=\n  MulOpposite.op_surjective.forall\n\n"}
{"name":"Subalgebra.op_le_op_iff","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS₁ S₂ : Subalgebra R A\n⊢ Iff (LE.le S₁.op S₂.op) (LE.le S₁ S₂)","decl":"@[simp]\ntheorem op_le_op_iff {S₁ S₂ : Subalgebra R A} : S₁.op ≤ S₂.op ↔ S₁ ≤ S₂ :=\n  MulOpposite.op_surjective.forall\n\n"}
{"name":"Subalgebra.unop_le_unop_iff","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS₁ S₂ : Subalgebra R (MulOpposite A)\n⊢ Iff (LE.le S₁.unop S₂.unop) (LE.le S₁ S₂)","decl":"@[simp]\ntheorem unop_le_unop_iff {S₁ S₂ : Subalgebra R Aᵐᵒᵖ} : S₁.unop ≤ S₂.unop ↔ S₁ ≤ S₂ :=\n  MulOpposite.unop_surjective.forall\n\n"}
{"name":"Subalgebra.opEquiv_symm_apply","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS : Subalgebra R (MulOpposite A)\n⊢ Eq ((RelIso.symm Subalgebra.opEquiv) S) S.unop","decl":"/-- A subalgebra `S` of `A / R` determines a subring `S.op` of the opposite ring `Aᵐᵒᵖ / R`. -/\n@[simps]\ndef opEquiv : Subalgebra R A ≃o Subalgebra R Aᵐᵒᵖ where\n  toFun := Subalgebra.op\n  invFun := Subalgebra.unop\n  left_inv := unop_op\n  right_inv := op_unop\n  map_rel_iff' := op_le_op_iff\n\n"}
{"name":"Subalgebra.opEquiv_apply","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS : Subalgebra R A\n⊢ Eq (Subalgebra.opEquiv S) S.op","decl":"/-- A subalgebra `S` of `A / R` determines a subring `S.op` of the opposite ring `Aᵐᵒᵖ / R`. -/\n@[simps]\ndef opEquiv : Subalgebra R A ≃o Subalgebra R Aᵐᵒᵖ where\n  toFun := Subalgebra.op\n  invFun := Subalgebra.unop\n  left_inv := unop_op\n  right_inv := op_unop\n  map_rel_iff' := op_le_op_iff\n\n"}
{"name":"Subalgebra.op_bot","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\n⊢ Eq Bot.bot.op Bot.bot","decl":"@[simp]\ntheorem op_bot : (⊥ : Subalgebra R A).op = ⊥ := opEquiv.map_bot\n\n"}
{"name":"Subalgebra.unop_bot","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\n⊢ Eq Bot.bot.unop Bot.bot","decl":"@[simp]\ntheorem unop_bot : (⊥ : Subalgebra R Aᵐᵒᵖ).unop = ⊥ := opEquiv.symm.map_bot\n\n"}
{"name":"Subalgebra.op_top","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\n⊢ Eq Top.top.op Top.top","decl":"@[simp]\ntheorem op_top : (⊤ : Subalgebra R A).op = ⊤ := opEquiv.map_top\n\n"}
{"name":"Subalgebra.unop_top","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\n⊢ Eq Top.top.unop Top.top","decl":"@[simp]\ntheorem unop_top : (⊤ : Subalgebra R Aᵐᵒᵖ).unop = ⊤ := opEquiv.symm.map_top\n\n"}
{"name":"Subalgebra.op_sup","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS₁ S₂ : Subalgebra R A\n⊢ Eq (Max.max S₁ S₂).op (Max.max S₁.op S₂.op)","decl":"theorem op_sup (S₁ S₂ : Subalgebra R A) : (S₁ ⊔ S₂).op = S₁.op ⊔ S₂.op :=\n  opEquiv.map_sup _ _\n\n"}
{"name":"Subalgebra.unop_sup","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS₁ S₂ : Subalgebra R (MulOpposite A)\n⊢ Eq (Max.max S₁ S₂).unop (Max.max S₁.unop S₂.unop)","decl":"theorem unop_sup (S₁ S₂ : Subalgebra R Aᵐᵒᵖ) : (S₁ ⊔ S₂).unop = S₁.unop ⊔ S₂.unop :=\n  opEquiv.symm.map_sup _ _\n\n"}
{"name":"Subalgebra.op_inf","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS₁ S₂ : Subalgebra R A\n⊢ Eq (Min.min S₁ S₂).op (Min.min S₁.op S₂.op)","decl":"theorem op_inf (S₁ S₂ : Subalgebra R A) : (S₁ ⊓ S₂).op = S₁.op ⊓ S₂.op := opEquiv.map_inf _ _\n\n"}
{"name":"Subalgebra.unop_inf","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS₁ S₂ : Subalgebra R (MulOpposite A)\n⊢ Eq (Min.min S₁ S₂).unop (Min.min S₁.unop S₂.unop)","decl":"theorem unop_inf (S₁ S₂ : Subalgebra R Aᵐᵒᵖ) : (S₁ ⊓ S₂).unop = S₁.unop ⊓ S₂.unop :=\n  opEquiv.symm.map_inf _ _\n\n"}
{"name":"Subalgebra.op_sSup","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS : Set (Subalgebra R A)\n⊢ Eq (SupSet.sSup S).op (SupSet.sSup (Set.preimage Subalgebra.unop S))","decl":"theorem op_sSup (S : Set (Subalgebra R A)) : (sSup S).op = sSup (.unop ⁻¹' S) :=\n  opEquiv.map_sSup_eq_sSup_symm_preimage _\n\n"}
{"name":"Subalgebra.unop_sSup","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS : Set (Subalgebra R (MulOpposite A))\n⊢ Eq (SupSet.sSup S).unop (SupSet.sSup (Set.preimage Subalgebra.op S))","decl":"theorem unop_sSup (S : Set (Subalgebra R Aᵐᵒᵖ)) : (sSup S).unop = sSup (.op ⁻¹' S) :=\n  opEquiv.symm.map_sSup_eq_sSup_symm_preimage _\n\n"}
{"name":"Subalgebra.op_sInf","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS : Set (Subalgebra R A)\n⊢ Eq (InfSet.sInf S).op (InfSet.sInf (Set.preimage Subalgebra.unop S))","decl":"theorem op_sInf (S : Set (Subalgebra R A)) : (sInf S).op = sInf (.unop ⁻¹' S) :=\n  opEquiv.map_sInf_eq_sInf_symm_preimage _\n\n"}
{"name":"Subalgebra.unop_sInf","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS : Set (Subalgebra R (MulOpposite A))\n⊢ Eq (InfSet.sInf S).unop (InfSet.sInf (Set.preimage Subalgebra.op S))","decl":"theorem unop_sInf (S : Set (Subalgebra R Aᵐᵒᵖ)) : (sInf S).unop = sInf (.op ⁻¹' S) :=\n  opEquiv.symm.map_sInf_eq_sInf_symm_preimage _\n\n"}
{"name":"Subalgebra.op_iSup","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"ι : Sort u_1\nR : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS : ι → Subalgebra R A\n⊢ Eq (iSup S).op (iSup fun i => (S i).op)","decl":"theorem op_iSup (S : ι → Subalgebra R A) : (iSup S).op = ⨆ i, (S i).op := opEquiv.map_iSup _\n\n"}
{"name":"Subalgebra.unop_iSup","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"ι : Sort u_1\nR : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS : ι → Subalgebra R (MulOpposite A)\n⊢ Eq (iSup S).unop (iSup fun i => (S i).unop)","decl":"theorem unop_iSup (S : ι → Subalgebra R Aᵐᵒᵖ) : (iSup S).unop = ⨆ i, (S i).unop :=\n  opEquiv.symm.map_iSup _\n\n"}
{"name":"Subalgebra.op_iInf","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"ι : Sort u_1\nR : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS : ι → Subalgebra R A\n⊢ Eq (iInf S).op (iInf fun i => (S i).op)","decl":"theorem op_iInf (S : ι → Subalgebra R A) : (iInf S).op = ⨅ i, (S i).op := opEquiv.map_iInf _\n\n"}
{"name":"Subalgebra.unop_iInf","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"ι : Sort u_1\nR : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS : ι → Subalgebra R (MulOpposite A)\n⊢ Eq (iInf S).unop (iInf fun i => (S i).unop)","decl":"theorem unop_iInf (S : ι → Subalgebra R Aᵐᵒᵖ) : (iInf S).unop = ⨅ i, (S i).unop :=\n  opEquiv.symm.map_iInf _\n\n"}
{"name":"Subalgebra.op_adjoin","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\ns : Set A\n⊢ Eq (Algebra.adjoin R s).op (Algebra.adjoin R (Set.preimage MulOpposite.unop s))","decl":"theorem op_adjoin (s : Set A) :\n    (Algebra.adjoin R s).op = Algebra.adjoin R (MulOpposite.unop ⁻¹' s) := by\n  apply toSubsemiring_injective\n  simp_rw [Algebra.adjoin, op_toSubsemiring, Subsemiring.op_closure, Set.preimage_union]\n  congr with x\n  simp_rw [Set.mem_preimage, Set.mem_range, MulOpposite.algebraMap_apply]\n  congr!\n  rw [← MulOpposite.op_injective.eq_iff (b := x.unop), MulOpposite.op_unop]\n\n"}
{"name":"Subalgebra.unop_adjoin","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\ns : Set (MulOpposite A)\n⊢ Eq (Algebra.adjoin R s).unop (Algebra.adjoin R (Set.preimage MulOpposite.op s))","decl":"theorem unop_adjoin (s : Set Aᵐᵒᵖ) :\n    (Algebra.adjoin R s).unop = Algebra.adjoin R (MulOpposite.op ⁻¹' s) := by\n  apply toSubsemiring_injective\n  simp_rw [Algebra.adjoin, unop_toSubsemiring, Subsemiring.unop_closure, Set.preimage_union]\n  congr with x\n  simp\n\n"}
{"name":"Subalgebra.linearEquivOp_apply_coe","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS : Subalgebra R A\na✝ : Subtype fun x => Membership.mem S.toSubsemiring x\n⊢ Eq (↑(S.linearEquivOp a✝)) (MulOpposite.op ↑a✝)","decl":"/-- Bijection between a subalgebra `S` and its opposite. -/\n@[simps!]\ndef linearEquivOp (S : Subalgebra R A) : S ≃ₗ[R] S.op where\n  __ := S.toSubsemiring.addEquivOp\n  map_smul' _ _ := rfl\n\n"}
{"name":"Subalgebra.linearEquivOp_symm_apply_coe","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS : Subalgebra R A\na✝ : Subtype fun x => Membership.mem S.op x\n⊢ Eq (↑(S.linearEquivOp.symm a✝)) (MulOpposite.unop ↑a✝)","decl":"/-- Bijection between a subalgebra `S` and its opposite. -/\n@[simps!]\ndef linearEquivOp (S : Subalgebra R A) : S ≃ₗ[R] S.op where\n  __ := S.toSubsemiring.addEquivOp\n  map_smul' _ _ := rfl\n\n"}
{"name":"Subalgebra.algEquivOpMop_apply","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS : Subalgebra R A\na✝ : Subtype fun x => Membership.mem S.toSubsemiring x\n⊢ Eq (S.algEquivOpMop a✝) (MulOpposite.op (S.addEquivOp a✝))","decl":"/-- Bijection between a subalgebra `S` and `MulOpposite` of its opposite. -/\n@[simps!]\ndef algEquivOpMop (S : Subalgebra R A) : S ≃ₐ[R] (S.op)ᵐᵒᵖ where\n  __ := S.toSubsemiring.ringEquivOpMop\n  commutes' _ := rfl\n\n"}
{"name":"Subalgebra.algEquivOpMop_symm_apply_coe","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS : Subalgebra R A\na✝ : MulOpposite (Subtype fun x => Membership.mem S.op x)\n⊢ Eq (↑(S.algEquivOpMop.symm a✝)) (MulOpposite.unop ↑(MulOpposite.unop a✝))","decl":"/-- Bijection between a subalgebra `S` and `MulOpposite` of its opposite. -/\n@[simps!]\ndef algEquivOpMop (S : Subalgebra R A) : S ≃ₐ[R] (S.op)ᵐᵒᵖ where\n  __ := S.toSubsemiring.ringEquivOpMop\n  commutes' _ := rfl\n\n"}
{"name":"Subalgebra.mopAlgEquivOp_symm_apply","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS : Subalgebra R A\na✝ : Subtype fun x => Membership.mem S.op x\n⊢ Eq (S.mopAlgEquivOp.symm a✝) (MulOpposite.op (S.addEquivOp.symm a✝))","decl":"/-- Bijection between `MulOpposite` of a subalgebra `S` and its opposite. -/\n@[simps!]\ndef mopAlgEquivOp (S : Subalgebra R A) : Sᵐᵒᵖ ≃ₐ[R] S.op where\n  __ := S.toSubsemiring.mopRingEquivOp\n  commutes' _ := rfl\n\n"}
{"name":"Subalgebra.mopAlgEquivOp_apply_coe","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS : Subalgebra R A\na✝ : MulOpposite (Subtype fun x => Membership.mem S.toSubsemiring x)\n⊢ Eq (↑(S.mopAlgEquivOp a✝)) (MulOpposite.op ↑(MulOpposite.unop a✝))","decl":"/-- Bijection between `MulOpposite` of a subalgebra `S` and its opposite. -/\n@[simps!]\ndef mopAlgEquivOp (S : Subalgebra R A) : Sᵐᵒᵖ ≃ₐ[R] S.op where\n  __ := S.toSubsemiring.mopRingEquivOp\n  commutes' _ := rfl\n\n"}
{"name":"Subalgebra.op_toSubring","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝² : CommRing R\ninst✝¹ : Ring A\ninst✝ : Algebra R A\nS : Subalgebra R A\n⊢ Eq S.op.toSubring S.toSubring.op","decl":"@[simp]\ntheorem op_toSubring (S : Subalgebra R A) : S.op.toSubring = S.toSubring.op := rfl\n\n"}
{"name":"Subalgebra.unop_toSubring","module":"Mathlib.Algebra.Algebra.Subalgebra.MulOpposite","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝² : CommRing R\ninst✝¹ : Ring A\ninst✝ : Algebra R A\nS : Subalgebra R (MulOpposite A)\n⊢ Eq S.unop.toSubring S.toSubring.unop","decl":"@[simp]\ntheorem unop_toSubring (S : Subalgebra R Aᵐᵒᵖ) : S.unop.toSubring = S.toSubring.unop := rfl\n\n"}
