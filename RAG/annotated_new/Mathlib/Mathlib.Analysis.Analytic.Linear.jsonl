{"name":"ContinuousLinearMap.fpowerSeries_radius","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : ContinuousLinearMap (RingHom.id 𝕜) E F\nx : E\n⊢ Eq (f.fpowerSeries x).radius Top.top","decl":"@[simp]\ntheorem fpowerSeries_radius (f : E →L[𝕜] F) (x : E) : (f.fpowerSeries x).radius = ∞ :=\n  (f.fpowerSeries x).radius_eq_top_of_forall_image_add_eq_zero 2 fun _ => rfl\n\n"}
{"name":"ContinuousLinearMap.hasFPowerSeriesOnBall","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : ContinuousLinearMap (RingHom.id 𝕜) E F\nx : E\n⊢ HasFPowerSeriesOnBall (⇑f) (f.fpowerSeries x) x Top.top","decl":"protected theorem hasFPowerSeriesOnBall (f : E →L[𝕜] F) (x : E) :\n    HasFPowerSeriesOnBall f (f.fpowerSeries x) x ∞ :=\n  { r_le := by simp\n    r_pos := ENNReal.coe_lt_top\n    hasSum := fun _ => (hasSum_nat_add_iff' 2).1 <| by\n      simp [Finset.sum_range_succ, ← sub_sub, hasSum_zero, fpowerSeries] }\n\n"}
{"name":"ContinuousLinearMap.hasFPowerSeriesAt","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : ContinuousLinearMap (RingHom.id 𝕜) E F\nx : E\n⊢ HasFPowerSeriesAt (⇑f) (f.fpowerSeries x) x","decl":"protected theorem hasFPowerSeriesAt (f : E →L[𝕜] F) (x : E) :\n    HasFPowerSeriesAt f (f.fpowerSeries x) x :=\n  ⟨∞, f.hasFPowerSeriesOnBall x⟩\n\n"}
{"name":"ContinuousLinearMap.analyticAt","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : ContinuousLinearMap (RingHom.id 𝕜) E F\nx : E\n⊢ AnalyticAt 𝕜 (⇑f) x","decl":"protected theorem analyticAt (f : E →L[𝕜] F) (x : E) : AnalyticAt 𝕜 f x :=\n  (f.hasFPowerSeriesAt x).analyticAt\n\n"}
{"name":"ContinuousLinearMap.analyticOnNhd","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : ContinuousLinearMap (RingHom.id 𝕜) E F\ns : Set E\n⊢ AnalyticOnNhd 𝕜 (⇑f) s","decl":"protected theorem analyticOnNhd (f : E →L[𝕜] F) (s : Set E) : AnalyticOnNhd 𝕜 f s :=\n  fun x _ ↦ f.analyticAt x\n\n"}
{"name":"ContinuousLinearMap.analyticWithinAt","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : ContinuousLinearMap (RingHom.id 𝕜) E F\ns : Set E\nx : E\n⊢ AnalyticWithinAt 𝕜 (⇑f) s x","decl":"protected theorem analyticWithinAt (f : E →L[𝕜] F) (s : Set E) (x : E) : AnalyticWithinAt 𝕜 f s x :=\n  (f.analyticAt x).analyticWithinAt\n\n"}
{"name":"ContinuousLinearMap.analyticOn","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : ContinuousLinearMap (RingHom.id 𝕜) E F\ns : Set E\n⊢ AnalyticOn 𝕜 (⇑f) s","decl":"protected theorem analyticOn (f : E →L[𝕜] F) (s : Set E) : AnalyticOn 𝕜 f s :=\n  fun x _ ↦ f.analyticWithinAt _ x\n\n"}
{"name":"ContinuousLinearMap.analyticWithinOn","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : ContinuousLinearMap (RingHom.id 𝕜) E F\ns : Set E\n⊢ AnalyticOn 𝕜 (⇑f) s","decl":"@[deprecated (since := \"2024-09-26\")]\nalias analyticWithinOn := ContinuousLinearMap.analyticOn\n\n"}
{"name":"ContinuousLinearMap.uncurryBilinear_apply","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁶ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : NormedSpace 𝕜 E\nF : Type u_3\ninst✝³ : NormedAddCommGroup F\ninst✝² : NormedSpace 𝕜 F\nG : Type u_4\ninst✝¹ : NormedAddCommGroup G\ninst✝ : NormedSpace 𝕜 G\nf : ContinuousLinearMap (RingHom.id 𝕜) E (ContinuousLinearMap (RingHom.id 𝕜) F G)\nm : Fin 2 → Prod E F\n⊢ Eq (f.uncurryBilinear m) ((f (m 0).1) (m 1).2)","decl":"@[simp]\ntheorem uncurryBilinear_apply (f : E →L[𝕜] F →L[𝕜] G) (m : Fin 2 → E × F) :\n    f.uncurryBilinear m = f (m 0).1 (m 1).2 :=\n  rfl\n\n"}
{"name":"ContinuousLinearMap.fpowerSeriesBilinear_apply_zero","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁶ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : NormedSpace 𝕜 E\nF : Type u_3\ninst✝³ : NormedAddCommGroup F\ninst✝² : NormedSpace 𝕜 F\nG : Type u_4\ninst✝¹ : NormedAddCommGroup G\ninst✝ : NormedSpace 𝕜 G\nf : ContinuousLinearMap (RingHom.id 𝕜) E (ContinuousLinearMap (RingHom.id 𝕜) F G)\nx : Prod E F\n⊢ Eq (f.fpowerSeriesBilinear x 0) (ContinuousMultilinearMap.uncurry0 𝕜 (Prod E F) ((f x.1) x.2))","decl":"@[simp]\ntheorem fpowerSeriesBilinear_apply_zero (f : E →L[𝕜] F →L[𝕜] G) (x : E × F) :\n    fpowerSeriesBilinear f x 0 = ContinuousMultilinearMap.uncurry0 𝕜 _ (f x.1 x.2) :=\n  rfl\n\n"}
{"name":"ContinuousLinearMap.fpowerSeriesBilinear_apply_one","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁶ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : NormedSpace 𝕜 E\nF : Type u_3\ninst✝³ : NormedAddCommGroup F\ninst✝² : NormedSpace 𝕜 F\nG : Type u_4\ninst✝¹ : NormedAddCommGroup G\ninst✝ : NormedSpace 𝕜 G\nf : ContinuousLinearMap (RingHom.id 𝕜) E (ContinuousLinearMap (RingHom.id 𝕜) F G)\nx : Prod E F\n⊢ Eq (f.fpowerSeriesBilinear x 1) ((continuousMultilinearCurryFin1 𝕜 (Prod E F) G).symm (f.deriv₂ x))","decl":"@[simp]\ntheorem fpowerSeriesBilinear_apply_one (f : E →L[𝕜] F →L[𝕜] G) (x : E × F) :\n    fpowerSeriesBilinear f x 1 = (continuousMultilinearCurryFin1 𝕜 (E × F) G).symm (f.deriv₂ x) :=\n  rfl\n\n"}
{"name":"ContinuousLinearMap.fpowerSeriesBilinear_apply_two","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁶ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : NormedSpace 𝕜 E\nF : Type u_3\ninst✝³ : NormedAddCommGroup F\ninst✝² : NormedSpace 𝕜 F\nG : Type u_4\ninst✝¹ : NormedAddCommGroup G\ninst✝ : NormedSpace 𝕜 G\nf : ContinuousLinearMap (RingHom.id 𝕜) E (ContinuousLinearMap (RingHom.id 𝕜) F G)\nx : Prod E F\n⊢ Eq (f.fpowerSeriesBilinear x 2) f.uncurryBilinear","decl":"@[simp]\ntheorem fpowerSeriesBilinear_apply_two (f : E →L[𝕜] F →L[𝕜] G) (x : E × F) :\n    fpowerSeriesBilinear f x 2 = f.uncurryBilinear :=\n  rfl\n\n"}
{"name":"ContinuousLinearMap.fpowerSeriesBilinear_apply_add_three","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁶ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : NormedSpace 𝕜 E\nF : Type u_3\ninst✝³ : NormedAddCommGroup F\ninst✝² : NormedSpace 𝕜 F\nG : Type u_4\ninst✝¹ : NormedAddCommGroup G\ninst✝ : NormedSpace 𝕜 G\nf : ContinuousLinearMap (RingHom.id 𝕜) E (ContinuousLinearMap (RingHom.id 𝕜) F G)\nx : Prod E F\nn : Nat\n⊢ Eq (f.fpowerSeriesBilinear x (HAdd.hAdd n 3)) 0","decl":"@[simp]\ntheorem fpowerSeriesBilinear_apply_add_three (f : E →L[𝕜] F →L[𝕜] G) (x : E × F) (n) :\n    fpowerSeriesBilinear f x (n + 3) = 0 :=\n  rfl\n\n"}
{"name":"ContinuousLinearMap.fpowerSeriesBilinear_radius","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁶ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : NormedSpace 𝕜 E\nF : Type u_3\ninst✝³ : NormedAddCommGroup F\ninst✝² : NormedSpace 𝕜 F\nG : Type u_4\ninst✝¹ : NormedAddCommGroup G\ninst✝ : NormedSpace 𝕜 G\nf : ContinuousLinearMap (RingHom.id 𝕜) E (ContinuousLinearMap (RingHom.id 𝕜) F G)\nx : Prod E F\n⊢ Eq (f.fpowerSeriesBilinear x).radius Top.top","decl":"@[simp]\ntheorem fpowerSeriesBilinear_radius (f : E →L[𝕜] F →L[𝕜] G) (x : E × F) :\n    (f.fpowerSeriesBilinear x).radius = ∞ :=\n  (f.fpowerSeriesBilinear x).radius_eq_top_of_forall_image_add_eq_zero 3 fun _ => rfl\n\n"}
{"name":"ContinuousLinearMap.hasFPowerSeriesOnBall_bilinear","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁶ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : NormedSpace 𝕜 E\nF : Type u_3\ninst✝³ : NormedAddCommGroup F\ninst✝² : NormedSpace 𝕜 F\nG : Type u_4\ninst✝¹ : NormedAddCommGroup G\ninst✝ : NormedSpace 𝕜 G\nf : ContinuousLinearMap (RingHom.id 𝕜) E (ContinuousLinearMap (RingHom.id 𝕜) F G)\nx : Prod E F\n⊢ HasFPowerSeriesOnBall (fun x => (f x.1) x.2) (f.fpowerSeriesBilinear x) x Top.top","decl":"protected theorem hasFPowerSeriesOnBall_bilinear (f : E →L[𝕜] F →L[𝕜] G) (x : E × F) :\n    HasFPowerSeriesOnBall (fun x : E × F => f x.1 x.2) (f.fpowerSeriesBilinear x) x ∞ :=\n  { r_le := by simp\n    r_pos := ENNReal.coe_lt_top\n    hasSum := fun _ =>\n      (hasSum_nat_add_iff' 3).1 <| by\n        simp only [Finset.sum_range_succ, Finset.sum_range_one, Prod.fst_add, Prod.snd_add,\n          f.map_add_add]\n        simp [fpowerSeriesBilinear, hasSum_zero] }\n\n"}
{"name":"ContinuousLinearMap.hasFPowerSeriesAt_bilinear","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁶ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : NormedSpace 𝕜 E\nF : Type u_3\ninst✝³ : NormedAddCommGroup F\ninst✝² : NormedSpace 𝕜 F\nG : Type u_4\ninst✝¹ : NormedAddCommGroup G\ninst✝ : NormedSpace 𝕜 G\nf : ContinuousLinearMap (RingHom.id 𝕜) E (ContinuousLinearMap (RingHom.id 𝕜) F G)\nx : Prod E F\n⊢ HasFPowerSeriesAt (fun x => (f x.1) x.2) (f.fpowerSeriesBilinear x) x","decl":"protected theorem hasFPowerSeriesAt_bilinear (f : E →L[𝕜] F →L[𝕜] G) (x : E × F) :\n    HasFPowerSeriesAt (fun x : E × F => f x.1 x.2) (f.fpowerSeriesBilinear x) x :=\n  ⟨∞, f.hasFPowerSeriesOnBall_bilinear x⟩\n\n"}
{"name":"ContinuousLinearMap.analyticAt_bilinear","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁶ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : NormedSpace 𝕜 E\nF : Type u_3\ninst✝³ : NormedAddCommGroup F\ninst✝² : NormedSpace 𝕜 F\nG : Type u_4\ninst✝¹ : NormedAddCommGroup G\ninst✝ : NormedSpace 𝕜 G\nf : ContinuousLinearMap (RingHom.id 𝕜) E (ContinuousLinearMap (RingHom.id 𝕜) F G)\nx : Prod E F\n⊢ AnalyticAt 𝕜 (fun x => (f x.1) x.2) x","decl":"protected theorem analyticAt_bilinear (f : E →L[𝕜] F →L[𝕜] G) (x : E × F) :\n    AnalyticAt 𝕜 (fun x : E × F => f x.1 x.2) x :=\n  (f.hasFPowerSeriesAt_bilinear x).analyticAt\n\n"}
{"name":"ContinuousLinearMap.analyticWithinAt_bilinear","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁶ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : NormedSpace 𝕜 E\nF : Type u_3\ninst✝³ : NormedAddCommGroup F\ninst✝² : NormedSpace 𝕜 F\nG : Type u_4\ninst✝¹ : NormedAddCommGroup G\ninst✝ : NormedSpace 𝕜 G\nf : ContinuousLinearMap (RingHom.id 𝕜) E (ContinuousLinearMap (RingHom.id 𝕜) F G)\ns : Set (Prod E F)\nx : Prod E F\n⊢ AnalyticWithinAt 𝕜 (fun x => (f x.1) x.2) s x","decl":"protected theorem analyticWithinAt_bilinear (f : E →L[𝕜] F →L[𝕜] G) (s : Set (E × F)) (x : E × F) :\n    AnalyticWithinAt 𝕜 (fun x : E × F => f x.1 x.2) s x :=\n  (f.analyticAt_bilinear x).analyticWithinAt\n\n"}
{"name":"ContinuousLinearMap.analyticOnNhd_bilinear","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁶ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : NormedSpace 𝕜 E\nF : Type u_3\ninst✝³ : NormedAddCommGroup F\ninst✝² : NormedSpace 𝕜 F\nG : Type u_4\ninst✝¹ : NormedAddCommGroup G\ninst✝ : NormedSpace 𝕜 G\nf : ContinuousLinearMap (RingHom.id 𝕜) E (ContinuousLinearMap (RingHom.id 𝕜) F G)\ns : Set (Prod E F)\n⊢ AnalyticOnNhd 𝕜 (fun x => (f x.1) x.2) s","decl":"protected theorem analyticOnNhd_bilinear (f : E →L[𝕜] F →L[𝕜] G) (s : Set (E × F)) :\n    AnalyticOnNhd 𝕜 (fun x : E × F => f x.1 x.2) s :=\n  fun x _ ↦ f.analyticAt_bilinear x\n\n"}
{"name":"ContinuousLinearMap.analyticOn_bilinear","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁶ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : NormedSpace 𝕜 E\nF : Type u_3\ninst✝³ : NormedAddCommGroup F\ninst✝² : NormedSpace 𝕜 F\nG : Type u_4\ninst✝¹ : NormedAddCommGroup G\ninst✝ : NormedSpace 𝕜 G\nf : ContinuousLinearMap (RingHom.id 𝕜) E (ContinuousLinearMap (RingHom.id 𝕜) F G)\ns : Set (Prod E F)\n⊢ AnalyticOn 𝕜 (fun x => (f x.1) x.2) s","decl":"protected theorem analyticOn_bilinear (f : E →L[𝕜] F →L[𝕜] G) (s : Set (E × F)) :\n    AnalyticOn 𝕜 (fun x : E × F => f x.1 x.2) s :=\n  (f.analyticOnNhd_bilinear s).analyticOn\n\n"}
{"name":"analyticAt_id","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\nz : E\n⊢ AnalyticAt 𝕜 id z","decl":"@[fun_prop]\nlemma analyticAt_id : AnalyticAt 𝕜 (id : E → E) z :=\n  (ContinuousLinearMap.id 𝕜 E).analyticAt z\n\n"}
{"name":"analyticWithinAt_id","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\ns : Set E\nz : E\n⊢ AnalyticWithinAt 𝕜 id s z","decl":"lemma analyticWithinAt_id : AnalyticWithinAt 𝕜 (id : E → E) s z :=\n  analyticAt_id.analyticWithinAt\n\n"}
{"name":"analyticOnNhd_id","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\ns : Set E\n⊢ AnalyticOnNhd 𝕜 (fun x => x) s","decl":"/-- `id` is entire -/\ntheorem analyticOnNhd_id : AnalyticOnNhd 𝕜 (fun x : E ↦ x) s :=\n  fun _ _ ↦ analyticAt_id\n\n"}
{"name":"analyticOn_id","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\ns : Set E\n⊢ AnalyticOn 𝕜 (fun x => x) s","decl":"theorem analyticOn_id : AnalyticOn 𝕜 (fun x : E ↦ x) s :=\n  fun _ _ ↦ analyticWithinAt_id\n\n"}
{"name":"analyticWithinOn_id","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\ns : Set E\n⊢ AnalyticOn 𝕜 (fun x => x) s","decl":"@[deprecated (since := \"2024-09-26\")]\nalias analyticWithinOn_id := analyticOn_id\n\n"}
{"name":"analyticAt_fst","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\np : Prod E F\n⊢ AnalyticAt 𝕜 (fun p => p.1) p","decl":"/-- `fst` is analytic -/\ntheorem analyticAt_fst  : AnalyticAt 𝕜 (fun p : E × F ↦ p.fst) p :=\n  (ContinuousLinearMap.fst 𝕜 E F).analyticAt p\n\n"}
{"name":"analyticWithinAt_fst","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nt : Set (Prod E F)\np : Prod E F\n⊢ AnalyticWithinAt 𝕜 (fun p => p.1) t p","decl":"theorem analyticWithinAt_fst  : AnalyticWithinAt 𝕜 (fun p : E × F ↦ p.fst) t p :=\n  analyticAt_fst.analyticWithinAt\n\n"}
{"name":"analyticAt_snd","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\np : Prod E F\n⊢ AnalyticAt 𝕜 (fun p => p.2) p","decl":"/-- `snd` is analytic -/\ntheorem analyticAt_snd : AnalyticAt 𝕜 (fun p : E × F ↦ p.snd) p :=\n  (ContinuousLinearMap.snd 𝕜 E F).analyticAt p\n\n"}
{"name":"analyticWithinAt_snd","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nt : Set (Prod E F)\np : Prod E F\n⊢ AnalyticWithinAt 𝕜 (fun p => p.2) t p","decl":"theorem analyticWithinAt_snd : AnalyticWithinAt 𝕜 (fun p : E × F ↦ p.snd) t p :=\n  analyticAt_snd.analyticWithinAt\n\n"}
{"name":"analyticOnNhd_fst","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nt : Set (Prod E F)\n⊢ AnalyticOnNhd 𝕜 (fun p => p.1) t","decl":"/-- `fst` is entire -/\ntheorem analyticOnNhd_fst : AnalyticOnNhd 𝕜 (fun p : E × F ↦ p.fst) t :=\n  fun _ _ ↦ analyticAt_fst\n\n"}
{"name":"analyticOn_fst","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nt : Set (Prod E F)\n⊢ AnalyticOn 𝕜 (fun p => p.1) t","decl":"theorem analyticOn_fst : AnalyticOn 𝕜 (fun p : E × F ↦ p.fst) t :=\n  fun _ _ ↦ analyticWithinAt_fst\n\n"}
{"name":"analyticWithinOn_fst","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nt : Set (Prod E F)\n⊢ AnalyticOn 𝕜 (fun p => p.1) t","decl":"@[deprecated (since := \"2024-09-26\")]\nalias analyticWithinOn_fst := analyticOn_fst\n\n"}
{"name":"analyticOnNhd_snd","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nt : Set (Prod E F)\n⊢ AnalyticOnNhd 𝕜 (fun p => p.2) t","decl":"/-- `snd` is entire -/\ntheorem analyticOnNhd_snd : AnalyticOnNhd 𝕜 (fun p : E × F ↦ p.snd) t :=\n  fun _ _ ↦ analyticAt_snd\n\n"}
{"name":"analyticOn_snd","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nt : Set (Prod E F)\n⊢ AnalyticOn 𝕜 (fun p => p.2) t","decl":"theorem analyticOn_snd : AnalyticOn 𝕜 (fun p : E × F ↦ p.snd) t :=\n  fun _ _ ↦ analyticWithinAt_snd\n\n"}
{"name":"analyticWithinOn_snd","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nt : Set (Prod E F)\n⊢ AnalyticOn 𝕜 (fun p => p.2) t","decl":"@[deprecated (since := \"2024-09-26\")]\nalias analyticWithinOn_snd := analyticOn_snd\n\n"}
{"name":"ContinuousLinearEquiv.analyticAt","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : ContinuousLinearEquiv (RingHom.id 𝕜) E F\nx : E\n⊢ AnalyticAt 𝕜 (⇑f) x","decl":"protected theorem analyticAt : AnalyticAt 𝕜 f x :=\n  ((f : E →L[𝕜] F).hasFPowerSeriesAt x).analyticAt\n\n"}
{"name":"ContinuousLinearEquiv.analyticOnNhd","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : ContinuousLinearEquiv (RingHom.id 𝕜) E F\ns : Set E\n⊢ AnalyticOnNhd 𝕜 (⇑f) s","decl":"protected theorem analyticOnNhd : AnalyticOnNhd 𝕜 f s :=\n  fun x _ ↦ f.analyticAt x\n\n"}
{"name":"ContinuousLinearEquiv.analyticWithinAt","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : ContinuousLinearMap (RingHom.id 𝕜) E F\ns : Set E\nx : E\n⊢ AnalyticWithinAt 𝕜 (⇑f) s x","decl":"protected theorem analyticWithinAt (f : E →L[𝕜] F) (s : Set E) (x : E) : AnalyticWithinAt 𝕜 f s x :=\n  (f.analyticAt x).analyticWithinAt\n\n"}
{"name":"ContinuousLinearEquiv.analyticOn","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : ContinuousLinearMap (RingHom.id 𝕜) E F\ns : Set E\n⊢ AnalyticOn 𝕜 (⇑f) s","decl":"protected theorem analyticOn (f : E →L[𝕜] F) (s : Set E) : AnalyticOn 𝕜 f s :=\n  fun x _ ↦ f.analyticWithinAt _ x\n\n"}
{"name":"ContinuousLinearEquiv.analyticWithinOn","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : ContinuousLinearMap (RingHom.id 𝕜) E F\ns : Set E\n⊢ AnalyticOn 𝕜 (⇑f) s","decl":"@[deprecated (since := \"2024-09-26\")]\nalias analyticWithinOn := ContinuousLinearEquiv.analyticOn\n\n"}
{"name":"LinearIsometryEquiv.analyticAt","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : LinearIsometryEquiv (RingHom.id 𝕜) E F\nx : E\n⊢ AnalyticAt 𝕜 (⇑f) x","decl":"protected theorem analyticAt : AnalyticAt 𝕜 f x :=\n  ((f : E →L[𝕜] F).hasFPowerSeriesAt x).analyticAt\n\n"}
{"name":"LinearIsometryEquiv.analyticOnNhd","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : LinearIsometryEquiv (RingHom.id 𝕜) E F\ns : Set E\n⊢ AnalyticOnNhd 𝕜 (⇑f) s","decl":"protected theorem analyticOnNhd : AnalyticOnNhd 𝕜 f s :=\n  fun x _ ↦ f.analyticAt x\n\n"}
{"name":"LinearIsometryEquiv.analyticWithinAt","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : ContinuousLinearMap (RingHom.id 𝕜) E F\ns : Set E\nx : E\n⊢ AnalyticWithinAt 𝕜 (⇑f) s x","decl":"protected theorem analyticWithinAt (f : E →L[𝕜] F) (s : Set E) (x : E) : AnalyticWithinAt 𝕜 f s x :=\n  (f.analyticAt x).analyticWithinAt\n\n"}
{"name":"LinearIsometryEquiv.analyticOn","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : ContinuousLinearMap (RingHom.id 𝕜) E F\ns : Set E\n⊢ AnalyticOn 𝕜 (⇑f) s","decl":"protected theorem analyticOn (f : E →L[𝕜] F) (s : Set E) : AnalyticOn 𝕜 f s :=\n  fun x _ ↦ f.analyticWithinAt _ x\n\n"}
{"name":"LinearIsometryEquiv.analyticWithinOn","module":"Mathlib.Analysis.Analytic.Linear","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_3\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : ContinuousLinearMap (RingHom.id 𝕜) E F\ns : Set E\n⊢ AnalyticOn 𝕜 (⇑f) s","decl":"@[deprecated (since := \"2024-09-26\")]\nalias analyticWithinOn := LinearIsometryEquiv.analyticOn\n\n"}
