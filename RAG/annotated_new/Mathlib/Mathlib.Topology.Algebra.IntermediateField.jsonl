{"name":"IntermediateField.continuousSMul","module":"Mathlib.Topology.Algebra.IntermediateField","initialProofState":"K : Type u_1\nL : Type u_2\ninst✝⁶ : Field K\ninst✝⁵ : Field L\ninst✝⁴ : Algebra K L\ninst✝³ : TopologicalSpace L\nX : Type u_3\ninst✝² : TopologicalSpace X\ninst✝¹ : MulAction L X\ninst✝ : ContinuousSMul L X\nM : IntermediateField K L\n⊢ ContinuousSMul (Subtype fun x => Membership.mem M x) X","decl":"instance IntermediateField.continuousSMul (M : IntermediateField K L) : ContinuousSMul M X :=\n  M.toSubfield.continuousSMul X\n\n"}
{"name":"IntermediateField.botContinuousSMul","module":"Mathlib.Topology.Algebra.IntermediateField","initialProofState":"K : Type u_1\nL : Type u_2\ninst✝⁴ : Field K\ninst✝³ : Field L\ninst✝² : Algebra K L\ninst✝¹ : TopologicalSpace L\ninst✝ : TopologicalRing L\nM : IntermediateField K L\n⊢ ContinuousSMul (Subtype fun x => Membership.mem Bot.bot x) (Subtype fun x => Membership.mem M x)","decl":"instance IntermediateField.botContinuousSMul (M : IntermediateField K L) :\n    ContinuousSMul (⊥ : IntermediateField K L) M :=\n  Topology.IsInducing.continuousSMul (X := L) (N := (⊥ : IntermediateField K L)) (Y := M)\n    (M := (⊥ : IntermediateField K L)) Topology.IsInducing.subtypeVal continuous_id rfl\n"}
