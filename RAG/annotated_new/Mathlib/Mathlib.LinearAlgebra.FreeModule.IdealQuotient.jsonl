{"name":"Ideal.finrank_quotient_eq_sum","module":"Mathlib.LinearAlgebra.FreeModule.IdealQuotient","initialProofState":"R : Type u_2\nS : Type u_3\ninst✝¹³ : CommRing R\ninst✝¹² : CommRing S\ninst✝¹¹ : Algebra R S\ninst✝¹⁰ : IsDomain R\ninst✝⁹ : IsPrincipalIdealRing R\ninst✝⁸ : IsDomain S\nF : Type u_4\ninst✝⁷ : CommRing F\ninst✝⁶ : Algebra F R\ninst✝⁵ : Algebra F S\ninst✝⁴ : IsScalarTower F R S\nI : Ideal S\nhI : Ne I Bot.bot\nι : Type u_5\ninst✝³ : Fintype ι\nb : Basis ι R S\ninst✝² : Nontrivial F\ninst✝¹ : ∀ (i : ι), Module.Free F (HasQuotient.Quotient R (Ideal.span (Singleton.singleton (Ideal.smithCoeffs b I hI i))))\ninst✝ : ∀ (i : ι), Module.Finite F (HasQuotient.Quotient R (Ideal.span (Singleton.singleton (Ideal.smithCoeffs b I hI i))))\n⊢ Eq (Module.finrank F (HasQuotient.Quotient S I)) (Finset.univ.sum fun i => Module.finrank F (HasQuotient.Quotient R (Ideal.span (Singleton.singleton (Ideal.smithCoeffs b I hI i)))))","decl":"theorem finrank_quotient_eq_sum {ι} [Fintype ι] (b : Basis ι R S) [Nontrivial F]\n    [∀ i, Module.Free F (R ⧸ span ({I.smithCoeffs b hI i} : Set R))]\n    [∀ i, Module.Finite F (R ⧸ span ({I.smithCoeffs b hI i} : Set R))] :\n    Module.finrank F (S ⧸ I) =\n      ∑ i, Module.finrank F (R ⧸ span ({I.smithCoeffs b hI i} : Set R)) := by\n  -- slow, and dot notation doesn't work\n  rw [LinearEquiv.finrank_eq <| quotientEquivDirectSum F b hI, Module.finrank_directSum]\n\n"}
