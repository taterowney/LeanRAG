{"name":"CategoryTheory.LocalizerMorphism.homMap_map","module":"Mathlib.CategoryTheory.Localization.HomEquiv","initialProofState":"C‚ÇÅ : Type u_2\nC‚ÇÇ : Type u_3\nD‚ÇÅ : Type u_5\nD‚ÇÇ : Type u_6\ninst‚úù‚Åµ : CategoryTheory.Category.{u_8, u_2} C‚ÇÅ\ninst‚úù‚Å¥ : CategoryTheory.Category.{u_10, u_3} C‚ÇÇ\ninst‚úù¬≥ : CategoryTheory.Category.{u_11, u_5} D‚ÇÅ\ninst‚úù¬≤ : CategoryTheory.Category.{u_9, u_6} D‚ÇÇ\nW‚ÇÅ : CategoryTheory.MorphismProperty C‚ÇÅ\nW‚ÇÇ : CategoryTheory.MorphismProperty C‚ÇÇ\nŒ¶ : CategoryTheory.LocalizerMorphism W‚ÇÅ W‚ÇÇ\nL‚ÇÅ : CategoryTheory.Functor C‚ÇÅ D‚ÇÅ\ninst‚úù¬π : L‚ÇÅ.IsLocalization W‚ÇÅ\nL‚ÇÇ : CategoryTheory.Functor C‚ÇÇ D‚ÇÇ\ninst‚úù : L‚ÇÇ.IsLocalization W‚ÇÇ\nX Y : C‚ÇÅ\nf : Quiver.Hom X Y\n‚ä¢ Eq (Œ¶.homMap L‚ÇÅ L‚ÇÇ (L‚ÇÅ.map f)) (L‚ÇÇ.map (Œ¶.functor.map f))","decl":"@[simp]\nlemma homMap_map (f : X ‚ü∂ Y) :\n    Œ¶.homMap L‚ÇÅ L‚ÇÇ (L‚ÇÅ.map f) = L‚ÇÇ.map (Œ¶.functor.map f) := by\n  dsimp [homMap]\n  erw [‚Üê NatTrans.naturality_assoc]\n  simp\n\n"}
{"name":"CategoryTheory.LocalizerMorphism.homMap_id","module":"Mathlib.CategoryTheory.Localization.HomEquiv","initialProofState":"C‚ÇÅ : Type u_2\nC‚ÇÇ : Type u_3\nD‚ÇÅ : Type u_5\nD‚ÇÇ : Type u_6\ninst‚úù‚Åµ : CategoryTheory.Category.{u_10, u_2} C‚ÇÅ\ninst‚úù‚Å¥ : CategoryTheory.Category.{u_9, u_3} C‚ÇÇ\ninst‚úù¬≥ : CategoryTheory.Category.{u_11, u_5} D‚ÇÅ\ninst‚úù¬≤ : CategoryTheory.Category.{u_8, u_6} D‚ÇÇ\nW‚ÇÅ : CategoryTheory.MorphismProperty C‚ÇÅ\nW‚ÇÇ : CategoryTheory.MorphismProperty C‚ÇÇ\nŒ¶ : CategoryTheory.LocalizerMorphism W‚ÇÅ W‚ÇÇ\nL‚ÇÅ : CategoryTheory.Functor C‚ÇÅ D‚ÇÅ\ninst‚úù¬π : L‚ÇÅ.IsLocalization W‚ÇÅ\nL‚ÇÇ : CategoryTheory.Functor C‚ÇÇ D‚ÇÇ\ninst‚úù : L‚ÇÇ.IsLocalization W‚ÇÇ\nX : C‚ÇÅ\n‚ä¢ Eq (Œ¶.homMap L‚ÇÅ L‚ÇÇ (CategoryTheory.CategoryStruct.id (L‚ÇÅ.obj X))) (CategoryTheory.CategoryStruct.id (L‚ÇÇ.obj (Œ¶.functor.obj X)))","decl":"variable (X) in\n@[simp]\nlemma homMap_id  :\n    Œ¶.homMap L‚ÇÅ L‚ÇÇ (ùüô (L‚ÇÅ.obj X)) = ùüô (L‚ÇÇ.obj (Œ¶.functor.obj X)) := by\n  simpa using Œ¶.homMap_map L‚ÇÅ L‚ÇÇ (ùüô X)\n\n"}
{"name":"CategoryTheory.LocalizerMorphism.homMap_comp","module":"Mathlib.CategoryTheory.Localization.HomEquiv","initialProofState":"C‚ÇÅ : Type u_2\nC‚ÇÇ : Type u_3\nD‚ÇÅ : Type u_5\nD‚ÇÇ : Type u_6\ninst‚úù‚Åµ : CategoryTheory.Category.{u_9, u_2} C‚ÇÅ\ninst‚úù‚Å¥ : CategoryTheory.Category.{u_11, u_3} C‚ÇÇ\ninst‚úù¬≥ : CategoryTheory.Category.{u_8, u_5} D‚ÇÅ\ninst‚úù¬≤ : CategoryTheory.Category.{u_10, u_6} D‚ÇÇ\nW‚ÇÅ : CategoryTheory.MorphismProperty C‚ÇÅ\nW‚ÇÇ : CategoryTheory.MorphismProperty C‚ÇÇ\nŒ¶ : CategoryTheory.LocalizerMorphism W‚ÇÅ W‚ÇÇ\nL‚ÇÅ : CategoryTheory.Functor C‚ÇÅ D‚ÇÅ\ninst‚úù¬π : L‚ÇÅ.IsLocalization W‚ÇÅ\nL‚ÇÇ : CategoryTheory.Functor C‚ÇÇ D‚ÇÇ\ninst‚úù : L‚ÇÇ.IsLocalization W‚ÇÇ\nX Y Z : C‚ÇÅ\nf : Quiver.Hom (L‚ÇÅ.obj X) (L‚ÇÅ.obj Y)\ng : Quiver.Hom (L‚ÇÅ.obj Y) (L‚ÇÅ.obj Z)\n‚ä¢ Eq (Œ¶.homMap L‚ÇÅ L‚ÇÇ (CategoryTheory.CategoryStruct.comp f g)) (CategoryTheory.CategoryStruct.comp (Œ¶.homMap L‚ÇÅ L‚ÇÇ f) (Œ¶.homMap L‚ÇÅ L‚ÇÇ g))","decl":"@[reassoc]\nlemma homMap_comp (f : L‚ÇÅ.obj X ‚ü∂ L‚ÇÅ.obj Y) (g : L‚ÇÅ.obj Y ‚ü∂ L‚ÇÅ.obj Z) :\n    Œ¶.homMap L‚ÇÅ L‚ÇÇ (f ‚â´ g) = Œ¶.homMap L‚ÇÅ L‚ÇÇ f ‚â´ Œ¶.homMap L‚ÇÅ L‚ÇÇ g := by\n  simp [homMap]\n\n"}
{"name":"CategoryTheory.LocalizerMorphism.homMap_comp_assoc","module":"Mathlib.CategoryTheory.Localization.HomEquiv","initialProofState":"C‚ÇÅ : Type u_2\nC‚ÇÇ : Type u_3\nD‚ÇÅ : Type u_5\nD‚ÇÇ : Type u_6\ninst‚úù‚Åµ : CategoryTheory.Category.{u_9, u_2} C‚ÇÅ\ninst‚úù‚Å¥ : CategoryTheory.Category.{u_11, u_3} C‚ÇÇ\ninst‚úù¬≥ : CategoryTheory.Category.{u_8, u_5} D‚ÇÅ\ninst‚úù¬≤ : CategoryTheory.Category.{u_10, u_6} D‚ÇÇ\nW‚ÇÅ : CategoryTheory.MorphismProperty C‚ÇÅ\nW‚ÇÇ : CategoryTheory.MorphismProperty C‚ÇÇ\nŒ¶ : CategoryTheory.LocalizerMorphism W‚ÇÅ W‚ÇÇ\nL‚ÇÅ : CategoryTheory.Functor C‚ÇÅ D‚ÇÅ\ninst‚úù¬π : L‚ÇÅ.IsLocalization W‚ÇÅ\nL‚ÇÇ : CategoryTheory.Functor C‚ÇÇ D‚ÇÇ\ninst‚úù : L‚ÇÇ.IsLocalization W‚ÇÇ\nX Y Z‚úù : C‚ÇÅ\nf : Quiver.Hom (L‚ÇÅ.obj X) (L‚ÇÅ.obj Y)\ng : Quiver.Hom (L‚ÇÅ.obj Y) (L‚ÇÅ.obj Z‚úù)\nZ : D‚ÇÇ\nh : Quiver.Hom (L‚ÇÇ.obj (Œ¶.functor.obj Z‚úù)) Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (Œ¶.homMap L‚ÇÅ L‚ÇÇ (CategoryTheory.CategoryStruct.comp f g)) h) (CategoryTheory.CategoryStruct.comp (Œ¶.homMap L‚ÇÅ L‚ÇÇ f) (CategoryTheory.CategoryStruct.comp (Œ¶.homMap L‚ÇÅ L‚ÇÇ g) h))","decl":"@[reassoc]\nlemma homMap_comp (f : L‚ÇÅ.obj X ‚ü∂ L‚ÇÅ.obj Y) (g : L‚ÇÅ.obj Y ‚ü∂ L‚ÇÅ.obj Z) :\n    Œ¶.homMap L‚ÇÅ L‚ÇÇ (f ‚â´ g) = Œ¶.homMap L‚ÇÅ L‚ÇÇ f ‚â´ Œ¶.homMap L‚ÇÅ L‚ÇÇ g := by\n  simp [homMap]\n\n"}
{"name":"CategoryTheory.LocalizerMorphism.homMap_apply","module":"Mathlib.CategoryTheory.Localization.HomEquiv","initialProofState":"C‚ÇÅ : Type u_2\nC‚ÇÇ : Type u_3\nD‚ÇÅ : Type u_5\nD‚ÇÇ : Type u_6\ninst‚úù‚Åµ : CategoryTheory.Category.{u_10, u_2} C‚ÇÅ\ninst‚úù‚Å¥ : CategoryTheory.Category.{u_11, u_3} C‚ÇÇ\ninst‚úù¬≥ : CategoryTheory.Category.{u_8, u_5} D‚ÇÅ\ninst‚úù¬≤ : CategoryTheory.Category.{u_9, u_6} D‚ÇÇ\nW‚ÇÅ : CategoryTheory.MorphismProperty C‚ÇÅ\nW‚ÇÇ : CategoryTheory.MorphismProperty C‚ÇÇ\nŒ¶ : CategoryTheory.LocalizerMorphism W‚ÇÅ W‚ÇÇ\nL‚ÇÅ : CategoryTheory.Functor C‚ÇÅ D‚ÇÅ\ninst‚úù¬π : L‚ÇÅ.IsLocalization W‚ÇÅ\nL‚ÇÇ : CategoryTheory.Functor C‚ÇÇ D‚ÇÇ\ninst‚úù : L‚ÇÇ.IsLocalization W‚ÇÇ\nX Y : C‚ÇÅ\nG : CategoryTheory.Functor D‚ÇÅ D‚ÇÇ\ne : CategoryTheory.Iso (Œ¶.functor.comp L‚ÇÇ) (L‚ÇÅ.comp G)\nf : Quiver.Hom (L‚ÇÅ.obj X) (L‚ÇÅ.obj Y)\n‚ä¢ Eq (Œ¶.homMap L‚ÇÅ L‚ÇÇ f) (CategoryTheory.CategoryStruct.comp (e.hom.app X) (CategoryTheory.CategoryStruct.comp (G.map f) (e.inv.app Y)))","decl":"@[reassoc]\nlemma homMap_apply (G : D‚ÇÅ ‚•§ D‚ÇÇ) (e : Œ¶.functor ‚ãô L‚ÇÇ ‚âÖ L‚ÇÅ ‚ãô G) (f : L‚ÇÅ.obj X ‚ü∂ L‚ÇÅ.obj Y) :\n    Œ¶.homMap L‚ÇÅ L‚ÇÇ f = e.hom.app X ‚â´ G.map f ‚â´ e.inv.app Y := by\n  let G' := Œ¶.localizedFunctor L‚ÇÅ L‚ÇÇ\n  let e' := CatCommSq.iso Œ¶.functor L‚ÇÅ L‚ÇÇ G'\n  change e'.hom.app X ‚â´ G'.map f ‚â´ e'.inv.app Y = _\n  letI : Localization.Lifting L‚ÇÅ W‚ÇÅ (Œ¶.functor ‚ãô L‚ÇÇ) G := ‚ü®e.symm‚ü©\n  let Œ± : G' ‚âÖ G := Localization.liftNatIso L‚ÇÅ W‚ÇÅ (L‚ÇÅ ‚ãô G') (Œ¶.functor ‚ãô L‚ÇÇ) _ _ e'.symm\n  have : e = e' ‚â™‚â´ isoWhiskerLeft _ Œ± := by\n    ext X\n    dsimp [Œ±]\n    rw [Localization.liftNatTrans_app]\n    erw [id_comp]\n    rw [Iso.hom_inv_id_app_assoc]\n    rfl\n  simp [this]\n\n"}
{"name":"CategoryTheory.LocalizerMorphism.homMap_apply_assoc","module":"Mathlib.CategoryTheory.Localization.HomEquiv","initialProofState":"C‚ÇÅ : Type u_2\nC‚ÇÇ : Type u_3\nD‚ÇÅ : Type u_5\nD‚ÇÇ : Type u_6\ninst‚úù‚Åµ : CategoryTheory.Category.{u_10, u_2} C‚ÇÅ\ninst‚úù‚Å¥ : CategoryTheory.Category.{u_11, u_3} C‚ÇÇ\ninst‚úù¬≥ : CategoryTheory.Category.{u_8, u_5} D‚ÇÅ\ninst‚úù¬≤ : CategoryTheory.Category.{u_9, u_6} D‚ÇÇ\nW‚ÇÅ : CategoryTheory.MorphismProperty C‚ÇÅ\nW‚ÇÇ : CategoryTheory.MorphismProperty C‚ÇÇ\nŒ¶ : CategoryTheory.LocalizerMorphism W‚ÇÅ W‚ÇÇ\nL‚ÇÅ : CategoryTheory.Functor C‚ÇÅ D‚ÇÅ\ninst‚úù¬π : L‚ÇÅ.IsLocalization W‚ÇÅ\nL‚ÇÇ : CategoryTheory.Functor C‚ÇÇ D‚ÇÇ\ninst‚úù : L‚ÇÇ.IsLocalization W‚ÇÇ\nX Y : C‚ÇÅ\nG : CategoryTheory.Functor D‚ÇÅ D‚ÇÇ\ne : CategoryTheory.Iso (Œ¶.functor.comp L‚ÇÇ) (L‚ÇÅ.comp G)\nf : Quiver.Hom (L‚ÇÅ.obj X) (L‚ÇÅ.obj Y)\nZ : D‚ÇÇ\nh : Quiver.Hom (L‚ÇÇ.obj (Œ¶.functor.obj Y)) Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (Œ¶.homMap L‚ÇÅ L‚ÇÇ f) h) (CategoryTheory.CategoryStruct.comp (e.hom.app X) (CategoryTheory.CategoryStruct.comp (G.map f) (CategoryTheory.CategoryStruct.comp (e.inv.app Y) h)))","decl":"@[reassoc]\nlemma homMap_apply (G : D‚ÇÅ ‚•§ D‚ÇÇ) (e : Œ¶.functor ‚ãô L‚ÇÇ ‚âÖ L‚ÇÅ ‚ãô G) (f : L‚ÇÅ.obj X ‚ü∂ L‚ÇÅ.obj Y) :\n    Œ¶.homMap L‚ÇÅ L‚ÇÇ f = e.hom.app X ‚â´ G.map f ‚â´ e.inv.app Y := by\n  let G' := Œ¶.localizedFunctor L‚ÇÅ L‚ÇÇ\n  let e' := CatCommSq.iso Œ¶.functor L‚ÇÅ L‚ÇÇ G'\n  change e'.hom.app X ‚â´ G'.map f ‚â´ e'.inv.app Y = _\n  letI : Localization.Lifting L‚ÇÅ W‚ÇÅ (Œ¶.functor ‚ãô L‚ÇÇ) G := ‚ü®e.symm‚ü©\n  let Œ± : G' ‚âÖ G := Localization.liftNatIso L‚ÇÅ W‚ÇÅ (L‚ÇÅ ‚ãô G') (Œ¶.functor ‚ãô L‚ÇÇ) _ _ e'.symm\n  have : e = e' ‚â™‚â´ isoWhiskerLeft _ Œ± := by\n    ext X\n    dsimp [Œ±]\n    rw [Localization.liftNatTrans_app]\n    erw [id_comp]\n    rw [Iso.hom_inv_id_app_assoc]\n    rfl\n  simp [this]\n\n"}
{"name":"CategoryTheory.LocalizerMorphism.id_homMap","module":"Mathlib.CategoryTheory.Localization.HomEquiv","initialProofState":"C‚ÇÅ : Type u_2\nD‚ÇÅ : Type u_5\ninst‚úù¬≤ : CategoryTheory.Category.{u_9, u_2} C‚ÇÅ\ninst‚úù¬π : CategoryTheory.Category.{u_8, u_5} D‚ÇÅ\nW‚ÇÅ : CategoryTheory.MorphismProperty C‚ÇÅ\nL‚ÇÅ : CategoryTheory.Functor C‚ÇÅ D‚ÇÅ\ninst‚úù : L‚ÇÅ.IsLocalization W‚ÇÅ\nX Y : C‚ÇÅ\nf : Quiver.Hom (L‚ÇÅ.obj X) (L‚ÇÅ.obj Y)\n‚ä¢ Eq ((CategoryTheory.LocalizerMorphism.id W‚ÇÅ).homMap L‚ÇÅ L‚ÇÅ f) f","decl":"@[simp]\nlemma id_homMap (f : L‚ÇÅ.obj X ‚ü∂ L‚ÇÅ.obj Y) :\n    (id W‚ÇÅ).homMap L‚ÇÅ L‚ÇÅ f = f := by\n  simpa using (id W‚ÇÅ).homMap_apply L‚ÇÅ L‚ÇÅ (ùü≠ D‚ÇÅ) (Iso.refl _) f\n\n"}
{"name":"CategoryTheory.LocalizerMorphism.homMap_homMap","module":"Mathlib.CategoryTheory.Localization.HomEquiv","initialProofState":"C‚ÇÅ : Type u_2\nC‚ÇÇ : Type u_3\nC‚ÇÉ : Type u_4\nD‚ÇÅ : Type u_5\nD‚ÇÇ : Type u_6\nD‚ÇÉ : Type u_7\ninst‚úù‚Å∏ : CategoryTheory.Category.{u_9, u_2} C‚ÇÅ\ninst‚úù‚Å∑ : CategoryTheory.Category.{u_12, u_3} C‚ÇÇ\ninst‚úù‚Å∂ : CategoryTheory.Category.{u_11, u_4} C‚ÇÉ\ninst‚úù‚Åµ : CategoryTheory.Category.{u_8, u_5} D‚ÇÅ\ninst‚úù‚Å¥ : CategoryTheory.Category.{u_13, u_6} D‚ÇÇ\ninst‚úù¬≥ : CategoryTheory.Category.{u_10, u_7} D‚ÇÉ\nW‚ÇÅ : CategoryTheory.MorphismProperty C‚ÇÅ\nW‚ÇÇ : CategoryTheory.MorphismProperty C‚ÇÇ\nW‚ÇÉ : CategoryTheory.MorphismProperty C‚ÇÉ\nŒ¶ : CategoryTheory.LocalizerMorphism W‚ÇÅ W‚ÇÇ\nŒ® : CategoryTheory.LocalizerMorphism W‚ÇÇ W‚ÇÉ\nL‚ÇÅ : CategoryTheory.Functor C‚ÇÅ D‚ÇÅ\ninst‚úù¬≤ : L‚ÇÅ.IsLocalization W‚ÇÅ\nL‚ÇÇ : CategoryTheory.Functor C‚ÇÇ D‚ÇÇ\ninst‚úù¬π : L‚ÇÇ.IsLocalization W‚ÇÇ\nL‚ÇÉ : CategoryTheory.Functor C‚ÇÉ D‚ÇÉ\ninst‚úù : L‚ÇÉ.IsLocalization W‚ÇÉ\nX Y : C‚ÇÅ\nf : Quiver.Hom (L‚ÇÅ.obj X) (L‚ÇÅ.obj Y)\n‚ä¢ Eq (Œ®.homMap L‚ÇÇ L‚ÇÉ (Œ¶.homMap L‚ÇÅ L‚ÇÇ f)) ((Œ¶.comp Œ®).homMap L‚ÇÅ L‚ÇÉ f)","decl":"@[simp]\nlemma homMap_homMap (f : L‚ÇÅ.obj X ‚ü∂ L‚ÇÅ.obj Y) :\n    Œ®.homMap L‚ÇÇ L‚ÇÉ (Œ¶.homMap L‚ÇÅ L‚ÇÇ f) = (Œ¶.comp Œ®).homMap L‚ÇÅ L‚ÇÉ f := by\n  let G := Œ¶.localizedFunctor L‚ÇÅ L‚ÇÇ\n  let G' := Œ®.localizedFunctor L‚ÇÇ L‚ÇÉ\n  let e : Œ¶.functor ‚ãô L‚ÇÇ ‚âÖ L‚ÇÅ ‚ãô G := CatCommSq.iso _ _ _ _\n  let e' : Œ®.functor ‚ãô L‚ÇÉ ‚âÖ L‚ÇÇ ‚ãô G' := CatCommSq.iso _ _ _ _\n  rw [Œ¶.homMap_apply L‚ÇÅ L‚ÇÇ G e, Œ®.homMap_apply L‚ÇÇ L‚ÇÉ G' e',\n    (Œ¶.comp Œ®).homMap_apply L‚ÇÅ L‚ÇÉ (G ‚ãô G')\n      (Functor.associator _ _ _ ‚â™‚â´ isoWhiskerLeft _ e' ‚â™‚â´\n      (Functor.associator _ _ _).symm ‚â™‚â´ isoWhiskerRight e _ ‚â™‚â´\n      Functor.associator _ _ _)]\n  dsimp\n  simp only [Functor.map_comp, assoc, comp_id, id_comp]\n\n"}
{"name":"CategoryTheory.Localization.homEquiv_apply","module":"Mathlib.CategoryTheory.Localization.HomEquiv","initialProofState":"C : Type u_1\nD‚ÇÅ : Type u_5\nD‚ÇÇ : Type u_6\ninst‚úù‚Å¥ : CategoryTheory.Category.{u_8, u_1} C\ninst‚úù¬≥ : CategoryTheory.Category.{u_9, u_5} D‚ÇÅ\ninst‚úù¬≤ : CategoryTheory.Category.{u_10, u_6} D‚ÇÇ\nW : CategoryTheory.MorphismProperty C\nL‚ÇÅ : CategoryTheory.Functor C D‚ÇÅ\ninst‚úù¬π : L‚ÇÅ.IsLocalization W\nL‚ÇÇ : CategoryTheory.Functor C D‚ÇÇ\ninst‚úù : L‚ÇÇ.IsLocalization W\nX Y : C\nf : Quiver.Hom (L‚ÇÅ.obj X) (L‚ÇÅ.obj Y)\n‚ä¢ Eq ((CategoryTheory.Localization.homEquiv W L‚ÇÅ L‚ÇÇ) f) ((CategoryTheory.LocalizerMorphism.id W).homMap L‚ÇÅ L‚ÇÇ f)","decl":"/-- Bijection between types of morphisms in two localized categories\nfor the same class of morphisms `W`. -/\n@[simps (config := .lemmasOnly) apply]\nnoncomputable def homEquiv :\n    (L‚ÇÅ.obj X ‚ü∂ L‚ÇÅ.obj Y) ‚âÉ (L‚ÇÇ.obj X ‚ü∂ L‚ÇÇ.obj Y) where\n  toFun := (LocalizerMorphism.id W).homMap L‚ÇÅ L‚ÇÇ\n  invFun := (LocalizerMorphism.id W).homMap L‚ÇÇ L‚ÇÅ\n  left_inv f := by\n    rw [LocalizerMorphism.homMap_homMap]\n    apply LocalizerMorphism.id_homMap\n  right_inv g := by\n    rw [LocalizerMorphism.homMap_homMap]\n    apply LocalizerMorphism.id_homMap\n\n"}
{"name":"CategoryTheory.Localization.homEquiv_symm_apply","module":"Mathlib.CategoryTheory.Localization.HomEquiv","initialProofState":"C : Type u_1\nD‚ÇÅ : Type u_5\nD‚ÇÇ : Type u_6\ninst‚úù‚Å¥ : CategoryTheory.Category.{u_9, u_1} C\ninst‚úù¬≥ : CategoryTheory.Category.{u_10, u_5} D‚ÇÅ\ninst‚úù¬≤ : CategoryTheory.Category.{u_8, u_6} D‚ÇÇ\nW : CategoryTheory.MorphismProperty C\nL‚ÇÅ : CategoryTheory.Functor C D‚ÇÅ\ninst‚úù¬π : L‚ÇÅ.IsLocalization W\nL‚ÇÇ : CategoryTheory.Functor C D‚ÇÇ\ninst‚úù : L‚ÇÇ.IsLocalization W\nX Y : C\ng : Quiver.Hom (L‚ÇÇ.obj X) (L‚ÇÇ.obj Y)\n‚ä¢ Eq ((CategoryTheory.Localization.homEquiv W L‚ÇÅ L‚ÇÇ).symm g) ((CategoryTheory.Localization.homEquiv W L‚ÇÇ L‚ÇÅ) g)","decl":"@[simp]\nlemma homEquiv_symm_apply (g : L‚ÇÇ.obj X ‚ü∂ L‚ÇÇ.obj Y) :\n    (homEquiv W L‚ÇÅ L‚ÇÇ).symm g = homEquiv W L‚ÇÇ L‚ÇÅ g := rfl\n\n"}
{"name":"CategoryTheory.Localization.homEquiv_eq","module":"Mathlib.CategoryTheory.Localization.HomEquiv","initialProofState":"C : Type u_1\nD‚ÇÅ : Type u_5\nD‚ÇÇ : Type u_6\ninst‚úù‚Å¥ : CategoryTheory.Category.{u_10, u_1} C\ninst‚úù¬≥ : CategoryTheory.Category.{u_8, u_5} D‚ÇÅ\ninst‚úù¬≤ : CategoryTheory.Category.{u_9, u_6} D‚ÇÇ\nW : CategoryTheory.MorphismProperty C\nL‚ÇÅ : CategoryTheory.Functor C D‚ÇÅ\ninst‚úù¬π : L‚ÇÅ.IsLocalization W\nL‚ÇÇ : CategoryTheory.Functor C D‚ÇÇ\ninst‚úù : L‚ÇÇ.IsLocalization W\nX Y : C\nG : CategoryTheory.Functor D‚ÇÅ D‚ÇÇ\ne : CategoryTheory.Iso (L‚ÇÅ.comp G) L‚ÇÇ\nf : Quiver.Hom (L‚ÇÅ.obj X) (L‚ÇÅ.obj Y)\n‚ä¢ Eq ((CategoryTheory.Localization.homEquiv W L‚ÇÅ L‚ÇÇ) f) (CategoryTheory.CategoryStruct.comp (e.inv.app X) (CategoryTheory.CategoryStruct.comp (G.map f) (e.hom.app Y)))","decl":"lemma homEquiv_eq (G : D‚ÇÅ ‚•§ D‚ÇÇ) (e : L‚ÇÅ ‚ãô G ‚âÖ L‚ÇÇ) (f : L‚ÇÅ.obj X ‚ü∂ L‚ÇÅ.obj Y) :\n    homEquiv W L‚ÇÅ L‚ÇÇ f = e.inv.app X ‚â´ G.map f ‚â´ e.hom.app Y := by\n  rw [homEquiv_apply, LocalizerMorphism.homMap_apply (LocalizerMorphism.id W) L‚ÇÅ L‚ÇÇ G e.symm,\n    Iso.symm_hom, Iso.symm_inv]\n\n"}
{"name":"CategoryTheory.Localization.homEquiv_refl","module":"Mathlib.CategoryTheory.Localization.HomEquiv","initialProofState":"C : Type u_1\nD‚ÇÅ : Type u_5\ninst‚úù¬≤ : CategoryTheory.Category.{u_9, u_1} C\ninst‚úù¬π : CategoryTheory.Category.{u_8, u_5} D‚ÇÅ\nW : CategoryTheory.MorphismProperty C\nL‚ÇÅ : CategoryTheory.Functor C D‚ÇÅ\ninst‚úù : L‚ÇÅ.IsLocalization W\nX Y : C\nf : Quiver.Hom (L‚ÇÅ.obj X) (L‚ÇÅ.obj Y)\n‚ä¢ Eq ((CategoryTheory.Localization.homEquiv W L‚ÇÅ L‚ÇÅ) f) f","decl":"@[simp]\nlemma homEquiv_refl (f : L‚ÇÅ.obj X ‚ü∂ L‚ÇÅ.obj Y) :\n    homEquiv W L‚ÇÅ L‚ÇÅ f = f := by\n  apply LocalizerMorphism.id_homMap\n\n"}
{"name":"CategoryTheory.Localization.homEquiv_trans","module":"Mathlib.CategoryTheory.Localization.HomEquiv","initialProofState":"C : Type u_1\nD‚ÇÅ : Type u_5\nD‚ÇÇ : Type u_6\nD‚ÇÉ : Type u_7\ninst‚úù‚Å∂ : CategoryTheory.Category.{u_9, u_1} C\ninst‚úù‚Åµ : CategoryTheory.Category.{u_8, u_5} D‚ÇÅ\ninst‚úù‚Å¥ : CategoryTheory.Category.{u_11, u_6} D‚ÇÇ\ninst‚úù¬≥ : CategoryTheory.Category.{u_10, u_7} D‚ÇÉ\nW : CategoryTheory.MorphismProperty C\nL‚ÇÅ : CategoryTheory.Functor C D‚ÇÅ\ninst‚úù¬≤ : L‚ÇÅ.IsLocalization W\nL‚ÇÇ : CategoryTheory.Functor C D‚ÇÇ\ninst‚úù¬π : L‚ÇÇ.IsLocalization W\nL‚ÇÉ : CategoryTheory.Functor C D‚ÇÉ\ninst‚úù : L‚ÇÉ.IsLocalization W\nX Y : C\nf : Quiver.Hom (L‚ÇÅ.obj X) (L‚ÇÅ.obj Y)\n‚ä¢ Eq ((CategoryTheory.Localization.homEquiv W L‚ÇÇ L‚ÇÉ) ((CategoryTheory.Localization.homEquiv W L‚ÇÅ L‚ÇÇ) f)) ((CategoryTheory.Localization.homEquiv W L‚ÇÅ L‚ÇÉ) f)","decl":"lemma homEquiv_trans (f : L‚ÇÅ.obj X ‚ü∂ L‚ÇÅ.obj Y) :\n    homEquiv W L‚ÇÇ L‚ÇÉ (homEquiv W L‚ÇÅ L‚ÇÇ f) = homEquiv W L‚ÇÅ L‚ÇÉ f := by\n  dsimp only [homEquiv_apply]\n  apply LocalizerMorphism.homMap_homMap\n\n"}
{"name":"CategoryTheory.Localization.homEquiv_comp","module":"Mathlib.CategoryTheory.Localization.HomEquiv","initialProofState":"C : Type u_1\nD‚ÇÅ : Type u_5\nD‚ÇÇ : Type u_6\ninst‚úù‚Å¥ : CategoryTheory.Category.{u_9, u_1} C\ninst‚úù¬≥ : CategoryTheory.Category.{u_8, u_5} D‚ÇÅ\ninst‚úù¬≤ : CategoryTheory.Category.{u_10, u_6} D‚ÇÇ\nW : CategoryTheory.MorphismProperty C\nL‚ÇÅ : CategoryTheory.Functor C D‚ÇÅ\ninst‚úù¬π : L‚ÇÅ.IsLocalization W\nL‚ÇÇ : CategoryTheory.Functor C D‚ÇÇ\ninst‚úù : L‚ÇÇ.IsLocalization W\nX Y Z : C\nf : Quiver.Hom (L‚ÇÅ.obj X) (L‚ÇÅ.obj Y)\ng : Quiver.Hom (L‚ÇÅ.obj Y) (L‚ÇÅ.obj Z)\n‚ä¢ Eq ((CategoryTheory.Localization.homEquiv W L‚ÇÅ L‚ÇÇ) (CategoryTheory.CategoryStruct.comp f g)) (CategoryTheory.CategoryStruct.comp ((CategoryTheory.Localization.homEquiv W L‚ÇÅ L‚ÇÇ) f) ((CategoryTheory.Localization.homEquiv W L‚ÇÅ L‚ÇÇ) g))","decl":"lemma homEquiv_comp (f : L‚ÇÅ.obj X ‚ü∂ L‚ÇÅ.obj Y) (g : L‚ÇÅ.obj Y ‚ü∂ L‚ÇÅ.obj Z) :\n    homEquiv W L‚ÇÅ L‚ÇÇ (f ‚â´ g) = homEquiv W L‚ÇÅ L‚ÇÇ f ‚â´ homEquiv W L‚ÇÅ L‚ÇÇ g := by\n  apply LocalizerMorphism.homMap_comp\n\n"}
{"name":"CategoryTheory.Localization.homEquiv_map","module":"Mathlib.CategoryTheory.Localization.HomEquiv","initialProofState":"C : Type u_1\nD‚ÇÅ : Type u_5\nD‚ÇÇ : Type u_6\ninst‚úù‚Å¥ : CategoryTheory.Category.{u_8, u_1} C\ninst‚úù¬≥ : CategoryTheory.Category.{u_10, u_5} D‚ÇÅ\ninst‚úù¬≤ : CategoryTheory.Category.{u_9, u_6} D‚ÇÇ\nW : CategoryTheory.MorphismProperty C\nL‚ÇÅ : CategoryTheory.Functor C D‚ÇÅ\ninst‚úù¬π : L‚ÇÅ.IsLocalization W\nL‚ÇÇ : CategoryTheory.Functor C D‚ÇÇ\ninst‚úù : L‚ÇÇ.IsLocalization W\nX Y : C\nf : Quiver.Hom X Y\n‚ä¢ Eq ((CategoryTheory.Localization.homEquiv W L‚ÇÅ L‚ÇÇ) (L‚ÇÅ.map f)) (L‚ÇÇ.map f)","decl":"@[simp]\nlemma homEquiv_map (f : X ‚ü∂ Y) : homEquiv W L‚ÇÅ L‚ÇÇ (L‚ÇÅ.map f) = L‚ÇÇ.map f := by\n  simp [homEquiv_apply]\n\n"}
{"name":"CategoryTheory.Localization.homEquiv_id","module":"Mathlib.CategoryTheory.Localization.HomEquiv","initialProofState":"C : Type u_1\nD‚ÇÅ : Type u_5\nD‚ÇÇ : Type u_6\ninst‚úù‚Å¥ : CategoryTheory.Category.{u_9, u_1} C\ninst‚úù¬≥ : CategoryTheory.Category.{u_10, u_5} D‚ÇÅ\ninst‚úù¬≤ : CategoryTheory.Category.{u_8, u_6} D‚ÇÇ\nW : CategoryTheory.MorphismProperty C\nL‚ÇÅ : CategoryTheory.Functor C D‚ÇÅ\ninst‚úù¬π : L‚ÇÅ.IsLocalization W\nL‚ÇÇ : CategoryTheory.Functor C D‚ÇÇ\ninst‚úù : L‚ÇÇ.IsLocalization W\nX : C\n‚ä¢ Eq ((CategoryTheory.Localization.homEquiv W L‚ÇÅ L‚ÇÇ) (CategoryTheory.CategoryStruct.id (L‚ÇÅ.obj X))) (CategoryTheory.CategoryStruct.id (L‚ÇÇ.obj X))","decl":"variable (X) in\n@[simp]\nlemma homEquiv_id : homEquiv W L‚ÇÅ L‚ÇÇ (ùüô (L‚ÇÅ.obj X)) = ùüô (L‚ÇÇ.obj X) := by\n  simp [homEquiv_apply]\n\n"}
{"name":"CategoryTheory.Localization.homEquiv_isoOfHom_inv","module":"Mathlib.CategoryTheory.Localization.HomEquiv","initialProofState":"C : Type u_1\nD‚ÇÅ : Type u_5\nD‚ÇÇ : Type u_6\ninst‚úù‚Å¥ : CategoryTheory.Category.{u_8, u_1} C\ninst‚úù¬≥ : CategoryTheory.Category.{u_10, u_5} D‚ÇÅ\ninst‚úù¬≤ : CategoryTheory.Category.{u_9, u_6} D‚ÇÇ\nW : CategoryTheory.MorphismProperty C\nL‚ÇÅ : CategoryTheory.Functor C D‚ÇÅ\ninst‚úù¬π : L‚ÇÅ.IsLocalization W\nL‚ÇÇ : CategoryTheory.Functor C D‚ÇÇ\ninst‚úù : L‚ÇÇ.IsLocalization W\nX Y : C\nf : Quiver.Hom Y X\nhf : W f\n‚ä¢ Eq ((CategoryTheory.Localization.homEquiv W L‚ÇÅ L‚ÇÇ) (CategoryTheory.Localization.isoOfHom L‚ÇÅ W f hf).inv) (CategoryTheory.Localization.isoOfHom L‚ÇÇ W f hf).inv","decl":"lemma homEquiv_isoOfHom_inv (f : Y ‚ü∂ X) (hf : W f) :\n    homEquiv W L‚ÇÅ L‚ÇÇ (isoOfHom L‚ÇÅ W f hf).inv = (isoOfHom L‚ÇÇ W f hf).inv := by\n  rw [‚Üê cancel_mono (isoOfHom L‚ÇÇ W f hf).hom, Iso.inv_hom_id, isoOfHom_hom,\n    ‚Üê homEquiv_map W L‚ÇÅ L‚ÇÇ f, ‚Üê homEquiv_comp, isoOfHom_inv_hom_id, homEquiv_id]\n\n"}
