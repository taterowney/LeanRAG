{"name":"SubMulAction.coe_one","module":"Mathlib.GroupTheory.GroupAction.SubMulAction.Pointwise","initialProofState":"R : Type u_1\nM : Type u_2\ninst✝² : Monoid R\ninst✝¹ : MulAction R M\ninst✝ : One M\n⊢ Eq (↑1) (Set.range fun r => HSMul.hSMul r 1)","decl":"theorem coe_one : ↑(1 : SubMulAction R M) = Set.range fun r : R => r • (1 : M) :=\n  rfl\n\n"}
{"name":"SubMulAction.mem_one","module":"Mathlib.GroupTheory.GroupAction.SubMulAction.Pointwise","initialProofState":"R : Type u_1\nM : Type u_2\ninst✝² : Monoid R\ninst✝¹ : MulAction R M\ninst✝ : One M\nx : M\n⊢ Iff (Membership.mem 1 x) (Exists fun r => Eq (HSMul.hSMul r 1) x)","decl":"@[simp]\ntheorem mem_one {x : M} : x ∈ (1 : SubMulAction R M) ↔ ∃ r : R, r • (1 : M) = x :=\n  Iff.rfl\n\n"}
{"name":"SubMulAction.subset_coe_one","module":"Mathlib.GroupTheory.GroupAction.SubMulAction.Pointwise","initialProofState":"R : Type u_1\nM : Type u_2\ninst✝² : Monoid R\ninst✝¹ : MulAction R M\ninst✝ : One M\n⊢ HasSubset.Subset 1 ↑1","decl":"theorem subset_coe_one : (1 : Set M) ⊆ (1 : SubMulAction R M) := fun _ hx =>\n  ⟨1, (one_smul _ _).trans hx.symm⟩\n\n"}
{"name":"SubMulAction.coe_mul","module":"Mathlib.GroupTheory.GroupAction.SubMulAction.Pointwise","initialProofState":"R : Type u_1\nM : Type u_2\ninst✝³ : Monoid R\ninst✝² : MulAction R M\ninst✝¹ : Mul M\ninst✝ : IsScalarTower R M M\np q : SubMulAction R M\n⊢ Eq (↑(HMul.hMul p q)) (HMul.hMul ↑p ↑q)","decl":"@[norm_cast]\ntheorem coe_mul (p q : SubMulAction R M) : ↑(p * q) = (p * q : Set M) :=\n  rfl\n\n"}
{"name":"SubMulAction.mem_mul","module":"Mathlib.GroupTheory.GroupAction.SubMulAction.Pointwise","initialProofState":"R : Type u_1\nM : Type u_2\ninst✝³ : Monoid R\ninst✝² : MulAction R M\ninst✝¹ : Mul M\ninst✝ : IsScalarTower R M M\np q : SubMulAction R M\nx : M\n⊢ Iff (Membership.mem (HMul.hMul p q) x) (Exists fun y => And (Membership.mem p y) (Exists fun z => And (Membership.mem q z) (Eq (HMul.hMul y z) x)))","decl":"theorem mem_mul {p q : SubMulAction R M} {x : M} : x ∈ p * q ↔ ∃ y ∈ p, ∃ z ∈ q, y * z = x :=\n  Set.mem_mul\n\n"}
{"name":"SubMulAction.coe_pow","module":"Mathlib.GroupTheory.GroupAction.SubMulAction.Pointwise","initialProofState":"R : Type u_1\nM : Type u_2\ninst✝⁴ : Monoid R\ninst✝³ : MulAction R M\ninst✝² : Monoid M\ninst✝¹ : IsScalarTower R M M\ninst✝ : SMulCommClass R M M\np : SubMulAction R M\nn : Nat\nx✝ : Ne n 0\n⊢ Eq (↑(HPow.hPow p n)) (HPow.hPow (↑p) n)","decl":"theorem coe_pow (p : SubMulAction R M) : ∀ {n : ℕ} (_ : n ≠ 0), ↑(p ^ n) = (p : Set M) ^ n\n  | 0, hn => (hn rfl).elim\n  | 1, _ => by rw [pow_one, pow_one]\n  | n + 2, _ => by\n    rw [pow_succ _ (n + 1), pow_succ _ (n + 1), coe_mul, coe_pow _ n.succ_ne_zero]\n\n"}
{"name":"SubMulAction.subset_coe_pow","module":"Mathlib.GroupTheory.GroupAction.SubMulAction.Pointwise","initialProofState":"R : Type u_1\nM : Type u_2\ninst✝⁴ : Monoid R\ninst✝³ : MulAction R M\ninst✝² : Monoid M\ninst✝¹ : IsScalarTower R M M\ninst✝ : SMulCommClass R M M\np : SubMulAction R M\nn : Nat\n⊢ HasSubset.Subset (HPow.hPow (↑p) n) ↑(HPow.hPow p n)","decl":"theorem subset_coe_pow (p : SubMulAction R M) : ∀ {n : ℕ}, (p : Set M) ^ n ⊆ ↑(p ^ n)\n  | 0 => by\n    rw [pow_zero, pow_zero]\n    exact subset_coe_one\n  | n + 1 => by rw [← Nat.succ_eq_add_one, coe_pow _ n.succ_ne_zero]\n\n"}
