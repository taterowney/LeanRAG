{"name":"AlgebraicTopology.DoldKan.P_zero","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù : CategoryTheory.Preadditive C\nX : CategoryTheory.SimplicialObject C\n‚ä¢ Eq (AlgebraicTopology.DoldKan.P 0) (CategoryTheory.CategoryStruct.id (AlgebraicTopology.AlternatingFaceMapComplex.obj X))","decl":"lemma P_zero : (P 0 : K[X] ‚ü∂ K[X]) = ùüô _ := rfl\n"}
{"name":"AlgebraicTopology.DoldKan.P_succ","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù : CategoryTheory.Preadditive C\nX : CategoryTheory.SimplicialObject C\nq : Nat\n‚ä¢ Eq (AlgebraicTopology.DoldKan.P (HAdd.hAdd q 1)) (CategoryTheory.CategoryStruct.comp (AlgebraicTopology.DoldKan.P q) (HAdd.hAdd (CategoryTheory.CategoryStruct.id (AlgebraicTopology.AlternatingFaceMapComplex.obj X)) (AlgebraicTopology.DoldKan.HœÉ q)))","decl":"lemma P_succ (q : ‚Ñï) : (P (q+1) : K[X] ‚ü∂ K[X]) = P q ‚â´ (ùüô _ + HœÉ q) := rfl\n\n"}
{"name":"AlgebraicTopology.DoldKan.P_f_0_eq","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù : CategoryTheory.Preadditive C\nX : CategoryTheory.SimplicialObject C\nq : Nat\n‚ä¢ Eq ((AlgebraicTopology.DoldKan.P q).f 0) (CategoryTheory.CategoryStruct.id ((AlgebraicTopology.AlternatingFaceMapComplex.obj X).X 0))","decl":"/-- All the `P q` coincide with `ùüô _` in degree 0. -/\n@[simp]\ntheorem P_f_0_eq (q : ‚Ñï) : ((P q).f 0 : X _[0] ‚ü∂ X _[0]) = ùüô _ := by\n  induction' q with q hq\n  ¬∑ rfl\n  ¬∑ simp only [P_succ, HomologicalComplex.add_f_apply, HomologicalComplex.comp_f,\n      HomologicalComplex.id_f, id_comp, hq, HœÉ_eq_zero, add_zero]\n\n"}
{"name":"AlgebraicTopology.DoldKan.P_add_Q","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù : CategoryTheory.Preadditive C\nX : CategoryTheory.SimplicialObject C\nq : Nat\n‚ä¢ Eq (HAdd.hAdd (AlgebraicTopology.DoldKan.P q) (AlgebraicTopology.DoldKan.Q q)) (CategoryTheory.CategoryStruct.id (AlgebraicTopology.AlternatingFaceMapComplex.obj X))","decl":"theorem P_add_Q (q : ‚Ñï) : P q + Q q = ùüô K[X] := by\n  rw [Q]\n  abel\n\n"}
{"name":"AlgebraicTopology.DoldKan.P_add_Q_f","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù : CategoryTheory.Preadditive C\nX : CategoryTheory.SimplicialObject C\nq n : Nat\n‚ä¢ Eq (HAdd.hAdd ((AlgebraicTopology.DoldKan.P q).f n) ((AlgebraicTopology.DoldKan.Q q).f n)) (CategoryTheory.CategoryStruct.id (X.obj { unop := SimplexCategory.mk n }))","decl":"theorem P_add_Q_f (q n : ‚Ñï) : (P q).f n + (Q q).f n = ùüô (X _[n]) :=\n  HomologicalComplex.congr_hom (P_add_Q q) n\n\n"}
{"name":"AlgebraicTopology.DoldKan.Q_zero","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù : CategoryTheory.Preadditive C\nX : CategoryTheory.SimplicialObject C\n‚ä¢ Eq (AlgebraicTopology.DoldKan.Q 0) 0","decl":"@[simp]\ntheorem Q_zero : (Q 0 : K[X] ‚ü∂ _) = 0 :=\n  sub_self _\n\n"}
{"name":"AlgebraicTopology.DoldKan.Q_succ","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù : CategoryTheory.Preadditive C\nX : CategoryTheory.SimplicialObject C\nq : Nat\n‚ä¢ Eq (AlgebraicTopology.DoldKan.Q (HAdd.hAdd q 1)) (HSub.hSub (AlgebraicTopology.DoldKan.Q q) (CategoryTheory.CategoryStruct.comp (AlgebraicTopology.DoldKan.P q) (AlgebraicTopology.DoldKan.HœÉ q)))","decl":"theorem Q_succ (q : ‚Ñï) : (Q (q + 1) : K[X] ‚ü∂ _) = Q q - P q ‚â´ HœÉ q := by\n  simp only [Q, P_succ, comp_add, comp_id]\n  abel\n\n"}
{"name":"AlgebraicTopology.DoldKan.Q_f_0_eq","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù : CategoryTheory.Preadditive C\nX : CategoryTheory.SimplicialObject C\nq : Nat\n‚ä¢ Eq ((AlgebraicTopology.DoldKan.Q q).f 0) 0","decl":"/-- All the `Q q` coincide with `0` in degree 0. -/\n@[simp]\ntheorem Q_f_0_eq (q : ‚Ñï) : ((Q q).f 0 : X _[0] ‚ü∂ X _[0]) = 0 := by\n  simp only [HomologicalComplex.sub_f_apply, HomologicalComplex.id_f, Q, P_f_0_eq, sub_self]\n\n"}
{"name":"AlgebraicTopology.DoldKan.HigherFacesVanish.of_P","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù : CategoryTheory.Preadditive C\nX : CategoryTheory.SimplicialObject C\nq n : Nat\n‚ä¢ AlgebraicTopology.DoldKan.HigherFacesVanish q ((AlgebraicTopology.DoldKan.P q).f (HAdd.hAdd n 1))","decl":"/-- This lemma expresses the vanishing of\n`(P q).f (n+1) ‚â´ X.Œ¥ k : X _[n+1] ‚ü∂ X _[n]` when `k‚â†0` and `k‚â•n-q+2` -/\ntheorem of_P : ‚àÄ q n : ‚Ñï, HigherFacesVanish q ((P q).f (n + 1) : X _[n + 1] ‚ü∂ X _[n + 1])\n  | 0 => fun n j hj‚ÇÅ => by omega\n  | q + 1 => fun n => by\n    simp only [P_succ]\n    exact (of_P q n).induction\n\n"}
{"name":"AlgebraicTopology.DoldKan.HigherFacesVanish.comp_P_eq_self_assoc","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù : CategoryTheory.Preadditive C\nX : CategoryTheory.SimplicialObject C\nY : C\nn q : Nat\nœÜ : Quiver.Hom Y (X.obj { unop := SimplexCategory.mk (HAdd.hAdd n 1) })\nv : AlgebraicTopology.DoldKan.HigherFacesVanish q œÜ\nZ : C\nh : Quiver.Hom ((AlgebraicTopology.AlternatingFaceMapComplex.obj X).X (HAdd.hAdd n 1)) Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp œÜ (CategoryTheory.CategoryStruct.comp ((AlgebraicTopology.DoldKan.P q).f (HAdd.hAdd n 1)) h)) (CategoryTheory.CategoryStruct.comp œÜ h)","decl":"@[reassoc]\ntheorem comp_P_eq_self {Y : C} {n q : ‚Ñï} {œÜ : Y ‚ü∂ X _[n + 1]} (v : HigherFacesVanish q œÜ) :\n    œÜ ‚â´ (P q).f (n + 1) = œÜ := by\n  induction' q with q hq\n  ¬∑ simp only [P_zero]\n    apply comp_id\n  ¬∑ simp only [P_succ, comp_add, HomologicalComplex.comp_f, HomologicalComplex.add_f_apply,\n      comp_id, ‚Üê assoc, hq v.of_succ, add_right_eq_self]\n    by_cases hqn : n < q\n    ¬∑ exact v.of_succ.comp_HœÉ_eq_zero hqn\n    ¬∑ obtain ‚ü®a, ha‚ü© := Nat.le.dest (not_lt.mp hqn)\n      have hnaq : n = a + q := by omega\n      simp only [v.of_succ.comp_HœÉ_eq hnaq, neg_eq_zero, ‚Üê assoc]\n      have eq := v ‚ü®a, by omega‚ü© (by\n        simp only [hnaq, Nat.succ_eq_add_one, add_assoc]\n        rfl)\n      simp only [Fin.succ_mk] at eq\n      simp only [eq, zero_comp]\n\n"}
{"name":"AlgebraicTopology.DoldKan.HigherFacesVanish.comp_P_eq_self","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù : CategoryTheory.Preadditive C\nX : CategoryTheory.SimplicialObject C\nY : C\nn q : Nat\nœÜ : Quiver.Hom Y (X.obj { unop := SimplexCategory.mk (HAdd.hAdd n 1) })\nv : AlgebraicTopology.DoldKan.HigherFacesVanish q œÜ\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp œÜ ((AlgebraicTopology.DoldKan.P q).f (HAdd.hAdd n 1))) œÜ","decl":"@[reassoc]\ntheorem comp_P_eq_self {Y : C} {n q : ‚Ñï} {œÜ : Y ‚ü∂ X _[n + 1]} (v : HigherFacesVanish q œÜ) :\n    œÜ ‚â´ (P q).f (n + 1) = œÜ := by\n  induction' q with q hq\n  ¬∑ simp only [P_zero]\n    apply comp_id\n  ¬∑ simp only [P_succ, comp_add, HomologicalComplex.comp_f, HomologicalComplex.add_f_apply,\n      comp_id, ‚Üê assoc, hq v.of_succ, add_right_eq_self]\n    by_cases hqn : n < q\n    ¬∑ exact v.of_succ.comp_HœÉ_eq_zero hqn\n    ¬∑ obtain ‚ü®a, ha‚ü© := Nat.le.dest (not_lt.mp hqn)\n      have hnaq : n = a + q := by omega\n      simp only [v.of_succ.comp_HœÉ_eq hnaq, neg_eq_zero, ‚Üê assoc]\n      have eq := v ‚ü®a, by omega‚ü© (by\n        simp only [hnaq, Nat.succ_eq_add_one, add_assoc]\n        rfl)\n      simp only [Fin.succ_mk] at eq\n      simp only [eq, zero_comp]\n\n"}
{"name":"AlgebraicTopology.DoldKan.comp_P_eq_self_iff","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù : CategoryTheory.Preadditive C\nX : CategoryTheory.SimplicialObject C\nY : C\nn q : Nat\nœÜ : Quiver.Hom Y (X.obj { unop := SimplexCategory.mk (HAdd.hAdd n 1) })\n‚ä¢ Iff (Eq (CategoryTheory.CategoryStruct.comp œÜ ((AlgebraicTopology.DoldKan.P q).f (HAdd.hAdd n 1))) œÜ) (AlgebraicTopology.DoldKan.HigherFacesVanish q œÜ)","decl":"theorem comp_P_eq_self_iff {Y : C} {n q : ‚Ñï} {œÜ : Y ‚ü∂ X _[n + 1]} :\n    œÜ ‚â´ (P q).f (n + 1) = œÜ ‚Üî HigherFacesVanish q œÜ := by\n  constructor\n  ¬∑ intro hœÜ\n    rw [‚Üê hœÜ]\n    apply HigherFacesVanish.of_comp\n    apply HigherFacesVanish.of_P\n  ¬∑ exact HigherFacesVanish.comp_P_eq_self\n\n"}
{"name":"AlgebraicTopology.DoldKan.P_f_idem","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù : CategoryTheory.Preadditive C\nX : CategoryTheory.SimplicialObject C\nq n : Nat\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp ((AlgebraicTopology.DoldKan.P q).f n) ((AlgebraicTopology.DoldKan.P q).f n)) ((AlgebraicTopology.DoldKan.P q).f n)","decl":"@[reassoc (attr := simp)]\ntheorem P_f_idem (q n : ‚Ñï) : ((P q).f n : X _[n] ‚ü∂ _) ‚â´ (P q).f n = (P q).f n := by\n  rcases n with (_|n)\n  ¬∑ rw [P_f_0_eq q, comp_id]\n  ¬∑ exact (HigherFacesVanish.of_P q n).comp_P_eq_self\n\n"}
{"name":"AlgebraicTopology.DoldKan.P_f_idem_assoc","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù : CategoryTheory.Preadditive C\nX : CategoryTheory.SimplicialObject C\nq n : Nat\nZ : C\nh : Quiver.Hom ((AlgebraicTopology.AlternatingFaceMapComplex.obj X).X n) Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp ((AlgebraicTopology.DoldKan.P q).f n) (CategoryTheory.CategoryStruct.comp ((AlgebraicTopology.DoldKan.P q).f n) h)) (CategoryTheory.CategoryStruct.comp ((AlgebraicTopology.DoldKan.P q).f n) h)","decl":"@[reassoc (attr := simp)]\ntheorem P_f_idem (q n : ‚Ñï) : ((P q).f n : X _[n] ‚ü∂ _) ‚â´ (P q).f n = (P q).f n := by\n  rcases n with (_|n)\n  ¬∑ rw [P_f_0_eq q, comp_id]\n  ¬∑ exact (HigherFacesVanish.of_P q n).comp_P_eq_self\n\n"}
{"name":"AlgebraicTopology.DoldKan.Q_f_idem","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù : CategoryTheory.Preadditive C\nX : CategoryTheory.SimplicialObject C\nq n : Nat\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp ((AlgebraicTopology.DoldKan.Q q).f n) ((AlgebraicTopology.DoldKan.Q q).f n)) ((AlgebraicTopology.DoldKan.Q q).f n)","decl":"@[reassoc (attr := simp)]\ntheorem Q_f_idem (q n : ‚Ñï) : ((Q q).f n : X _[n] ‚ü∂ _) ‚â´ (Q q).f n = (Q q).f n :=\n  idem_of_id_sub_idem _ (P_f_idem q n)\n\n"}
{"name":"AlgebraicTopology.DoldKan.Q_f_idem_assoc","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù : CategoryTheory.Preadditive C\nX : CategoryTheory.SimplicialObject C\nq n : Nat\nZ : C\nh : Quiver.Hom ((AlgebraicTopology.AlternatingFaceMapComplex.obj X).X n) Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp ((AlgebraicTopology.DoldKan.Q q).f n) (CategoryTheory.CategoryStruct.comp ((AlgebraicTopology.DoldKan.Q q).f n) h)) (CategoryTheory.CategoryStruct.comp ((AlgebraicTopology.DoldKan.Q q).f n) h)","decl":"@[reassoc (attr := simp)]\ntheorem Q_f_idem (q n : ‚Ñï) : ((Q q).f n : X _[n] ‚ü∂ _) ‚â´ (Q q).f n = (Q q).f n :=\n  idem_of_id_sub_idem _ (P_f_idem q n)\n\n"}
{"name":"AlgebraicTopology.DoldKan.P_idem","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù : CategoryTheory.Preadditive C\nX : CategoryTheory.SimplicialObject C\nq : Nat\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (AlgebraicTopology.DoldKan.P q) (AlgebraicTopology.DoldKan.P q)) (AlgebraicTopology.DoldKan.P q)","decl":"@[reassoc (attr := simp)]\ntheorem P_idem (q : ‚Ñï) : (P q : K[X] ‚ü∂ K[X]) ‚â´ P q = P q := by\n  ext n\n  exact P_f_idem q n\n\n"}
{"name":"AlgebraicTopology.DoldKan.P_idem_assoc","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù : CategoryTheory.Preadditive C\nX : CategoryTheory.SimplicialObject C\nq : Nat\nZ : ChainComplex C Nat\nh : Quiver.Hom (AlgebraicTopology.AlternatingFaceMapComplex.obj X) Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (AlgebraicTopology.DoldKan.P q) (CategoryTheory.CategoryStruct.comp (AlgebraicTopology.DoldKan.P q) h)) (CategoryTheory.CategoryStruct.comp (AlgebraicTopology.DoldKan.P q) h)","decl":"@[reassoc (attr := simp)]\ntheorem P_idem (q : ‚Ñï) : (P q : K[X] ‚ü∂ K[X]) ‚â´ P q = P q := by\n  ext n\n  exact P_f_idem q n\n\n"}
{"name":"AlgebraicTopology.DoldKan.Q_idem","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù : CategoryTheory.Preadditive C\nX : CategoryTheory.SimplicialObject C\nq : Nat\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (AlgebraicTopology.DoldKan.Q q) (AlgebraicTopology.DoldKan.Q q)) (AlgebraicTopology.DoldKan.Q q)","decl":"@[reassoc (attr := simp)]\ntheorem Q_idem (q : ‚Ñï) : (Q q : K[X] ‚ü∂ K[X]) ‚â´ Q q = Q q := by\n  ext n\n  exact Q_f_idem q n\n\n"}
{"name":"AlgebraicTopology.DoldKan.Q_idem_assoc","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù : CategoryTheory.Preadditive C\nX : CategoryTheory.SimplicialObject C\nq : Nat\nZ : ChainComplex C Nat\nh : Quiver.Hom (AlgebraicTopology.AlternatingFaceMapComplex.obj X) Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (AlgebraicTopology.DoldKan.Q q) (CategoryTheory.CategoryStruct.comp (AlgebraicTopology.DoldKan.Q q) h)) (CategoryTheory.CategoryStruct.comp (AlgebraicTopology.DoldKan.Q q) h)","decl":"@[reassoc (attr := simp)]\ntheorem Q_idem (q : ‚Ñï) : (Q q : K[X] ‚ü∂ K[X]) ‚â´ Q q = Q q := by\n  ext n\n  exact Q_f_idem q n\n\n"}
{"name":"AlgebraicTopology.DoldKan.natTransP_app","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù : CategoryTheory.Preadditive C\nq : Nat\nx‚úù : CategoryTheory.SimplicialObject C\n‚ä¢ Eq ((AlgebraicTopology.DoldKan.natTransP q).app x‚úù) (AlgebraicTopology.DoldKan.P q)","decl":"/-- For each `q`, `P q` is a natural transformation. -/\n@[simps]\ndef natTransP (q : ‚Ñï) : alternatingFaceMapComplex C ‚ü∂ alternatingFaceMapComplex C where\n  app _ := P q\n  naturality _ _ f := by\n    induction' q with q hq\n    ¬∑ dsimp [alternatingFaceMapComplex]\n      simp only [P_zero, id_comp, comp_id]\n    ¬∑ simp only [P_succ, add_comp, comp_add, assoc, comp_id, hq, reassoc_of% hq]\n      erw [(natTransHœÉ q).naturality f]\n      rfl\n\n"}
{"name":"AlgebraicTopology.DoldKan.P_f_naturality_assoc","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù : CategoryTheory.Preadditive C\nq n : Nat\nX Y : CategoryTheory.SimplicialObject C\nf : Quiver.Hom X Y\nZ : C\nh : Quiver.Hom ((AlgebraicTopology.AlternatingFaceMapComplex.obj Y).X n) Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (f.app { unop := SimplexCategory.mk n }) (CategoryTheory.CategoryStruct.comp ((AlgebraicTopology.DoldKan.P q).f n) h)) (CategoryTheory.CategoryStruct.comp ((AlgebraicTopology.DoldKan.P q).f n) (CategoryTheory.CategoryStruct.comp (f.app { unop := SimplexCategory.mk n }) h))","decl":"@[reassoc (attr := simp)]\ntheorem P_f_naturality (q n : ‚Ñï) {X Y : SimplicialObject C} (f : X ‚ü∂ Y) :\n    f.app (op [n]) ‚â´ (P q).f n = (P q).f n ‚â´ f.app (op [n]) :=\n  HomologicalComplex.congr_hom ((natTransP q).naturality f) n\n\n"}
{"name":"AlgebraicTopology.DoldKan.P_f_naturality","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù : CategoryTheory.Preadditive C\nq n : Nat\nX Y : CategoryTheory.SimplicialObject C\nf : Quiver.Hom X Y\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (f.app { unop := SimplexCategory.mk n }) ((AlgebraicTopology.DoldKan.P q).f n)) (CategoryTheory.CategoryStruct.comp ((AlgebraicTopology.DoldKan.P q).f n) (f.app { unop := SimplexCategory.mk n }))","decl":"@[reassoc (attr := simp)]\ntheorem P_f_naturality (q n : ‚Ñï) {X Y : SimplicialObject C} (f : X ‚ü∂ Y) :\n    f.app (op [n]) ‚â´ (P q).f n = (P q).f n ‚â´ f.app (op [n]) :=\n  HomologicalComplex.congr_hom ((natTransP q).naturality f) n\n\n"}
{"name":"AlgebraicTopology.DoldKan.Q_f_naturality_assoc","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù : CategoryTheory.Preadditive C\nq n : Nat\nX Y : CategoryTheory.SimplicialObject C\nf : Quiver.Hom X Y\nZ : C\nh : Quiver.Hom ((AlgebraicTopology.AlternatingFaceMapComplex.obj Y).X n) Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (f.app { unop := SimplexCategory.mk n }) (CategoryTheory.CategoryStruct.comp ((AlgebraicTopology.DoldKan.Q q).f n) h)) (CategoryTheory.CategoryStruct.comp ((AlgebraicTopology.DoldKan.Q q).f n) (CategoryTheory.CategoryStruct.comp (f.app { unop := SimplexCategory.mk n }) h))","decl":"@[reassoc (attr := simp)]\ntheorem Q_f_naturality (q n : ‚Ñï) {X Y : SimplicialObject C} (f : X ‚ü∂ Y) :\n    f.app (op [n]) ‚â´ (Q q).f n = (Q q).f n ‚â´ f.app (op [n]) := by\n  simp only [Q, HomologicalComplex.sub_f_apply, HomologicalComplex.id_f, comp_sub, P_f_naturality,\n    sub_comp, sub_left_inj]\n  dsimp\n  simp only [comp_id, id_comp]\n\n"}
{"name":"AlgebraicTopology.DoldKan.Q_f_naturality","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù : CategoryTheory.Preadditive C\nq n : Nat\nX Y : CategoryTheory.SimplicialObject C\nf : Quiver.Hom X Y\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (f.app { unop := SimplexCategory.mk n }) ((AlgebraicTopology.DoldKan.Q q).f n)) (CategoryTheory.CategoryStruct.comp ((AlgebraicTopology.DoldKan.Q q).f n) (f.app { unop := SimplexCategory.mk n }))","decl":"@[reassoc (attr := simp)]\ntheorem Q_f_naturality (q n : ‚Ñï) {X Y : SimplicialObject C} (f : X ‚ü∂ Y) :\n    f.app (op [n]) ‚â´ (Q q).f n = (Q q).f n ‚â´ f.app (op [n]) := by\n  simp only [Q, HomologicalComplex.sub_f_apply, HomologicalComplex.id_f, comp_sub, P_f_naturality,\n    sub_comp, sub_left_inj]\n  dsimp\n  simp only [comp_id, id_comp]\n\n"}
{"name":"AlgebraicTopology.DoldKan.natTransQ_app","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù : CategoryTheory.Preadditive C\nq : Nat\nx‚úù : CategoryTheory.SimplicialObject C\n‚ä¢ Eq ((AlgebraicTopology.DoldKan.natTransQ q).app x‚úù) (AlgebraicTopology.DoldKan.Q q)","decl":"/-- For each `q`, `Q q` is a natural transformation. -/\n@[simps]\ndef natTransQ (q : ‚Ñï) : alternatingFaceMapComplex C ‚ü∂ alternatingFaceMapComplex C where\n  app _ := Q q\n\n"}
{"name":"AlgebraicTopology.DoldKan.map_P","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù‚Å¥ : CategoryTheory.Category.{u_4, u_1} C\ninst‚úù¬≥ : CategoryTheory.Preadditive C\nD : Type u_2\ninst‚úù¬≤ : CategoryTheory.Category.{u_3, u_2} D\ninst‚úù¬π : CategoryTheory.Preadditive D\nG : CategoryTheory.Functor C D\ninst‚úù : G.Additive\nX : CategoryTheory.SimplicialObject C\nq n : Nat\n‚ä¢ Eq (G.map ((AlgebraicTopology.DoldKan.P q).f n)) ((AlgebraicTopology.DoldKan.P q).f n)","decl":"theorem map_P {D : Type*} [Category D] [Preadditive D] (G : C ‚•§ D) [G.Additive]\n    (X : SimplicialObject C) (q n : ‚Ñï) :\n    G.map ((P q : K[X] ‚ü∂ _).f n) = (P q : K[((whiskering C D).obj G).obj X] ‚ü∂ _).f n := by\n  induction' q with q hq\n  ¬∑ simp only [P_zero]\n    apply G.map_id\n  ¬∑ simp only [P_succ, comp_add, HomologicalComplex.comp_f, HomologicalComplex.add_f_apply,\n      comp_id, Functor.map_add, Functor.map_comp, hq, map_HœÉ]\n\n"}
{"name":"AlgebraicTopology.DoldKan.map_Q","module":"Mathlib.AlgebraicTopology.DoldKan.Projections","initialProofState":"C : Type u_1\ninst‚úù‚Å¥ : CategoryTheory.Category.{u_4, u_1} C\ninst‚úù¬≥ : CategoryTheory.Preadditive C\nD : Type u_2\ninst‚úù¬≤ : CategoryTheory.Category.{u_3, u_2} D\ninst‚úù¬π : CategoryTheory.Preadditive D\nG : CategoryTheory.Functor C D\ninst‚úù : G.Additive\nX : CategoryTheory.SimplicialObject C\nq n : Nat\n‚ä¢ Eq (G.map ((AlgebraicTopology.DoldKan.Q q).f n)) ((AlgebraicTopology.DoldKan.Q q).f n)","decl":"theorem map_Q {D : Type*} [Category D] [Preadditive D] (G : C ‚•§ D) [G.Additive]\n    (X : SimplicialObject C) (q n : ‚Ñï) :\n    G.map ((Q q : K[X] ‚ü∂ _).f n) = (Q q : K[((whiskering C D).obj G).obj X] ‚ü∂ _).f n := by\n  rw [‚Üê add_right_inj (G.map ((P q : K[X] ‚ü∂ _).f n)), ‚Üê G.map_add, map_P G X q n, P_add_Q_f,\n    P_add_Q_f]\n  apply G.map_id\n\n"}
