{"name":"NNRat.num_mk","module":"Mathlib.Data.Rat.Init","initialProofState":"q : Rat\nhq : LE.le 0 q\n⊢ Eq (NNRat.num ⟨q, hq⟩) q.num.natAbs","decl":"@[simp] lemma num_mk (q : ℚ) (hq : 0 ≤ q) : num ⟨q, hq⟩ = q.num.natAbs := rfl\n"}
{"name":"NNRat.den_mk","module":"Mathlib.Data.Rat.Init","initialProofState":"q : Rat\nhq : LE.le 0 q\n⊢ Eq (NNRat.den ⟨q, hq⟩) q.den","decl":"@[simp] lemma den_mk (q : ℚ) (hq : 0 ≤ q) : den ⟨q, hq⟩ = q.den := rfl\n\n"}
{"name":"NNRat.cast_id","module":"Mathlib.Data.Rat.Init","initialProofState":"n : NNRat\n⊢ Eq (↑n) n","decl":"@[norm_cast] lemma cast_id (n : ℚ≥0) : NNRat.cast n = n := rfl\n"}
{"name":"NNRat.cast_eq_id","module":"Mathlib.Data.Rat.Init","initialProofState":"⊢ Eq NNRat.cast id","decl":"@[simp] lemma cast_eq_id : NNRat.cast = id := rfl\n\n"}
{"name":"Rat.cast_id","module":"Mathlib.Data.Rat.Init","initialProofState":"n : Rat\n⊢ Eq (↑n) n","decl":"@[norm_cast] lemma cast_id (n : ℚ) : Rat.cast n = n := rfl\n"}
{"name":"Rat.cast_eq_id","module":"Mathlib.Data.Rat.Init","initialProofState":"⊢ Eq Rat.cast id","decl":"@[simp] lemma cast_eq_id : Rat.cast = id := rfl\n\n"}
