{"name":"not_of_eq_false","module":"Mathlib.Deprecated.Logic","initialProofState":"p : Prop\nh : Eq p False\n⊢ Not p","decl":"@[deprecated (since := \"2024-09-03\")] alias not_of_eq_false := of_eq_false\n"}
{"name":"cast_proof_irrel","module":"Mathlib.Deprecated.Logic","initialProofState":"α β : Sort u\nh₁ h₂ : Eq α β\na : α\n⊢ Eq (cast h₁ a) (cast h₂ a)","decl":"@[deprecated \"No deprecation message was provided.\" (since := \"2024-09-03\")] -- unused in Mathlib\ntheorem cast_proof_irrel {β : Sort u} (h₁ h₂ : α = β) (a : α) : cast h₁ a = cast h₂ a := rfl\n"}
{"name":"eq_rec_heq","module":"Mathlib.Deprecated.Logic","initialProofState":"α : Sort u\nφ : α → Sort v\na a' : α\nh : Eq a a'\np : φ a\n⊢ HEq (Eq.recOn h p) p","decl":"@[deprecated (since := \"2024-09-03\")] alias eq_rec_heq := eqRec_heq\n"}
{"name":"heq_prop","module":"Mathlib.Deprecated.Logic","initialProofState":"p q : Prop\nhp : p\nhq : q\n⊢ HEq hp hq","decl":"@[deprecated (since := \"2024-09-03\")] alias heq_prop := proof_irrel_heq\n\n"}
{"name":"heq_of_eq_rec_left","module":"Mathlib.Deprecated.Logic","initialProofState":"α : Sort u\nφ : α → Sort v\na a' : α\np₁ : φ a\np₂ : φ a'\ne : Eq a a'\nh₂ : Eq (Eq.rec p₁ e) p₂\n⊢ HEq p₁ p₂","decl":"@[deprecated \"No deprecation message was provided.\" (since := \"2024-09-03\")] -- unused in Mathlib\ntheorem heq_of_eq_rec_left {φ : α → Sort v} {a a' : α} {p₁ : φ a} {p₂ : φ a'} :\n    (e : a = a') → (h₂ : Eq.rec (motive := fun a _ ↦ φ a) p₁ e = p₂) → HEq p₁ p₂\n  | rfl, rfl => HEq.rfl\n\n"}
{"name":"heq_of_eq_rec_right","module":"Mathlib.Deprecated.Logic","initialProofState":"α : Sort u\nφ : α → Sort v\na a' : α\np₁ : φ a\np₂ : φ a'\ne : Eq a' a\nh₂ : Eq p₁ (Eq.rec p₂ e)\n⊢ HEq p₁ p₂","decl":"@[deprecated \"No deprecation message was provided.\" (since := \"2024-09-03\")] -- unused in Mathlib\ntheorem heq_of_eq_rec_right {φ : α → Sort v} {a a' : α} {p₁ : φ a} {p₂ : φ a'} :\n    (e : a' = a) → (h₂ : p₁ = Eq.rec (motive := fun a _ ↦ φ a) p₂ e) → HEq p₁ p₂\n  | rfl, rfl => HEq.rfl\n\n"}
{"name":"of_heq_true","module":"Mathlib.Deprecated.Logic","initialProofState":"a : Prop\nh : HEq a True\n⊢ a","decl":"@[deprecated \"No deprecation message was provided.\" (since := \"2024-09-03\")] -- unused in Mathlib\ntheorem of_heq_true {a : Prop} (h : HEq a True) : a := of_eq_true (eq_of_heq h)\n\n"}
{"name":"eq_rec_compose","module":"Mathlib.Deprecated.Logic","initialProofState":"α β φ : Sort u\np₁ : Eq β φ\np₂ : Eq α β\na : α\n⊢ Eq (Eq.recOn p₁ (Eq.recOn p₂ a)) (Eq.recOn ⋯ a)","decl":"@[deprecated \"No deprecation message was provided.\" (since := \"2024-09-03\")]\ntheorem eq_rec_compose {α β φ : Sort u} :\n    ∀ (p₁ : β = φ) (p₂ : α = β) (a : α),\n      (Eq.recOn p₁ (Eq.recOn p₂ a : β) : φ) = Eq.recOn (Eq.trans p₂ p₁) a\n  | rfl, rfl, _ => rfl\n\n-- unused in Mathlib\n"}
{"name":"not_of_not_not_not","module":"Mathlib.Deprecated.Logic","initialProofState":"a : Prop\na✝ : Not (Not (Not a))\n⊢ Not a","decl":"@[deprecated (since := \"2024-09-11\")] alias ⟨not_of_not_not_not, _⟩ := not_not_not\n\n"}
{"name":"and_true_iff","module":"Mathlib.Deprecated.Logic","initialProofState":"p : Prop\n⊢ Iff (And p True) p","decl":"@[deprecated and_true (since := \"2024-09-12\")]\ntheorem and_true_iff : p ∧ True ↔ p := iff_of_eq (and_true _)\n"}
{"name":"true_and_iff","module":"Mathlib.Deprecated.Logic","initialProofState":"p : Prop\n⊢ Iff (And True p) p","decl":"@[deprecated true_and (since := \"2024-09-12\")]\ntheorem true_and_iff : True ∧ p ↔ p := iff_of_eq (true_and _)\n"}
{"name":"and_false_iff","module":"Mathlib.Deprecated.Logic","initialProofState":"p : Prop\n⊢ Iff (And p False) False","decl":"@[deprecated and_false (since := \"2024-09-12\")]\ntheorem and_false_iff : p ∧ False ↔ False := iff_of_eq (and_false _)\n"}
{"name":"false_and_iff","module":"Mathlib.Deprecated.Logic","initialProofState":"p : Prop\n⊢ Iff (And False p) False","decl":"@[deprecated false_and (since := \"2024-09-12\")]\ntheorem false_and_iff : False ∧ p ↔ False := iff_of_eq (false_and _)\n"}
{"name":"or_true_iff","module":"Mathlib.Deprecated.Logic","initialProofState":"p : Prop\n⊢ Iff (Or p True) True","decl":"@[deprecated or_true (since := \"2024-09-12\")]\ntheorem or_true_iff : p ∨ True ↔ True := iff_of_eq (or_true _)\n"}
{"name":"true_or_iff","module":"Mathlib.Deprecated.Logic","initialProofState":"p : Prop\n⊢ Iff (Or True p) True","decl":"@[deprecated true_or (since := \"2024-09-12\")]\ntheorem true_or_iff : True ∨ p ↔ True := iff_of_eq (true_or _)\n"}
{"name":"or_false_iff","module":"Mathlib.Deprecated.Logic","initialProofState":"p : Prop\n⊢ Iff (Or p False) p","decl":"@[deprecated or_false (since := \"2024-09-12\")]\ntheorem or_false_iff : p ∨ False ↔ p := iff_of_eq (or_false _)\n"}
{"name":"false_or_iff","module":"Mathlib.Deprecated.Logic","initialProofState":"p : Prop\n⊢ Iff (Or False p) p","decl":"@[deprecated false_or (since := \"2024-09-12\")]\ntheorem false_or_iff : False ∨ p ↔ p := iff_of_eq (false_or _)\n"}
{"name":"iff_true_iff","module":"Mathlib.Deprecated.Logic","initialProofState":"a : Prop\n⊢ Iff (Iff a True) a","decl":"@[deprecated iff_true (since := \"2024-09-12\")]\ntheorem iff_true_iff : (a ↔ True) ↔ a := iff_of_eq (iff_true _)\n"}
{"name":"true_iff_iff","module":"Mathlib.Deprecated.Logic","initialProofState":"a : Prop\n⊢ Iff (Iff True a) a","decl":"@[deprecated true_iff (since := \"2024-09-12\")]\ntheorem true_iff_iff : (True ↔ a) ↔ a := iff_of_eq (true_iff _)\n"}
{"name":"iff_false_iff","module":"Mathlib.Deprecated.Logic","initialProofState":"a : Prop\n⊢ Iff (Iff a False) (Not a)","decl":"@[deprecated iff_false (since := \"2024-09-12\")]\ntheorem iff_false_iff : (a ↔ False) ↔ ¬a := iff_of_eq (iff_false _)\n"}
{"name":"false_iff_iff","module":"Mathlib.Deprecated.Logic","initialProofState":"a : Prop\n⊢ Iff (Iff False a) (Not a)","decl":"@[deprecated false_iff (since := \"2024-09-12\")]\ntheorem false_iff_iff : (False ↔ a) ↔ ¬a := iff_of_eq (false_iff _)\n"}
{"name":"iff_self_iff","module":"Mathlib.Deprecated.Logic","initialProofState":"a : Prop\n⊢ Iff (Iff a a) True","decl":"@[deprecated iff_self (since := \"2024-09-12\")]\ntheorem iff_self_iff (a : Prop) : (a ↔ a) ↔ True := iff_of_eq (iff_self _)\n"}
{"name":"not_or_of_not","module":"Mathlib.Deprecated.Logic","initialProofState":"a b : Prop\nha : Not a\nhb : Not b\n⊢ Not (Or a b)","decl":"@[deprecated (since := \"2024-09-12\")] alias not_or_of_not := not_or_intro\n\n/- decidable -/\n\n"}
{"name":"decide_True'","module":"Mathlib.Deprecated.Logic","initialProofState":"h : Decidable True\n⊢ Eq (Decidable.decide True) Bool.true","decl":"@[deprecated \"No deprecation message was provided.\" (since := \"2024-09-03\")] -- unused in Mathlib\ntheorem decide_True' (h : Decidable True) : decide True = true := by simp\n\n"}
{"name":"decide_False'","module":"Mathlib.Deprecated.Logic","initialProofState":"h : Decidable False\n⊢ Eq (Decidable.decide False) Bool.false","decl":"@[deprecated \"No deprecation message was provided.\" (since := \"2024-09-03\")] -- unused in Mathlib\ntheorem decide_False' (h : Decidable False) : decide False = false := by simp\n\n"}
{"name":"Decidable.by_contradiction","module":"Mathlib.Deprecated.Logic","initialProofState":"p : Prop\ndec : Decidable p\nh : Not p → False\n⊢ p","decl":"@[deprecated (since := \"2024-09-03\")] alias by_contradiction := byContradiction\n"}
{"name":"decidableEq_inl_refl","module":"Mathlib.Deprecated.Logic","initialProofState":"α : Sort u\nh : DecidableEq α\na : α\n⊢ Eq (h a a) (Decidable.isTrue ⋯)","decl":"@[deprecated \"No deprecation message was provided.\" (since := \"2024-09-03\")] -- unused in Mathlib\ntheorem decidableEq_inl_refl {α : Sort u} [h : DecidableEq α] (a : α) :\n    h a a = isTrue (Eq.refl a) :=\n  match h a a with\n  | isTrue _ => rfl\n\n"}
{"name":"decidableEq_inr_neg","module":"Mathlib.Deprecated.Logic","initialProofState":"α : Sort u\nh : DecidableEq α\na b : α\nn : Ne a b\n⊢ Eq (h a b) (Decidable.isFalse n)","decl":"@[deprecated \"No deprecation message was provided.\" (since := \"2024-09-03\")] -- unused in Mathlib\ntheorem decidableEq_inr_neg {α : Sort u} [h : DecidableEq α] {a b : α}\n    (n : a ≠ b) : h a b = isFalse n :=\n  match h a b with\n  | isFalse _ => rfl\n\n/- subsingleton -/\n\n"}
{"name":"rec_subsingleton","module":"Mathlib.Deprecated.Logic","initialProofState":"p : Prop\nh : Decidable p\nh₁ : p → Sort u\nh₂ : Not p → Sort u\nh₃ : ∀ (h : p), Subsingleton (h₁ h)\nh₄ : ∀ (h : Not p), Subsingleton (h₂ h)\n⊢ Subsingleton (Decidable.recOn h h₂ h₁)","decl":"@[deprecated \"No deprecation message was provided.\" (since := \"2024-09-03\")] -- unused in Mathlib\ntheorem rec_subsingleton {p : Prop} [h : Decidable p] {h₁ : p → Sort u} {h₂ : ¬p → Sort u}\n    [h₃ : ∀ h : p, Subsingleton (h₁ h)] [h₄ : ∀ h : ¬p, Subsingleton (h₂ h)] :\n    Subsingleton (Decidable.recOn h h₂ h₁) :=\n  match h with\n  | isTrue h => h₃ h\n  | isFalse h => h₄ h\n\n"}
{"name":"imp_of_if_pos","module":"Mathlib.Deprecated.Logic","initialProofState":"c t e : Prop\ninst✝ : Decidable c\nh : ite c t e\nhc : c\n⊢ t","decl":"@[deprecated \"No deprecation message was provided.\" (since := \"2024-09-03\")] -- unused in Mathlib\ntheorem imp_of_if_pos {c t e : Prop} [Decidable c] (h : ite c t e) (hc : c) : t :=\n  (if_pos hc ▸ h :)\n\n"}
{"name":"imp_of_if_neg","module":"Mathlib.Deprecated.Logic","initialProofState":"c t e : Prop\ninst✝ : Decidable c\nh : ite c t e\nhnc : Not c\n⊢ e","decl":"@[deprecated \"No deprecation message was provided.\" (since := \"2024-09-03\")] -- unused in Mathlib\ntheorem imp_of_if_neg {c t e : Prop} [Decidable c] (h : ite c t e) (hnc : ¬c) : e :=\n  (if_neg hnc ▸ h :)\n\n"}
{"name":"dif_ctx_congr","module":"Mathlib.Deprecated.Logic","initialProofState":"α : Sort u\nb c : Prop\ndec_b : Decidable b\ndec_c : Decidable c\nx : b → α\nu : c → α\ny : Not b → α\nv : Not c → α\nh_c : Iff b c\nh_t : ∀ (h : c), Eq (x ⋯) (u h)\nh_e : ∀ (h : Not c), Eq (y ⋯) (v h)\n⊢ Eq (dite b x y) (dite c u v)","decl":"@[deprecated \"No deprecation message was provided.\" (since := \"2024-09-11\")]\ntheorem dif_ctx_congr {α : Sort u} {b c : Prop} [dec_b : Decidable b] [dec_c : Decidable c]\n    {x : b → α} {u : c → α} {y : ¬b → α} {v : ¬c → α}\n    (h_c : b ↔ c) (h_t : ∀ h : c, x (Iff.mpr h_c h) = u h)\n    (h_e : ∀ h : ¬c, y (Iff.mpr (not_congr h_c) h) = v h) :\n    @dite α b dec_b x y = @dite α c dec_c u v :=\n  match dec_b, dec_c with\n  | isFalse _, isFalse h₂ => h_e h₂\n  | isTrue _, isTrue h₂ => h_t h₂\n  | isFalse h₁, isTrue h₂ => absurd h₂ (Iff.mp (not_congr h_c) h₁)\n  | isTrue h₁, isFalse h₂ => absurd h₁ (Iff.mpr (not_congr h_c) h₂)\n\n"}
{"name":"if_ctx_congr_prop","module":"Mathlib.Deprecated.Logic","initialProofState":"b c x y u v : Prop\ndec_b : Decidable b\ndec_c : Decidable c\nh_c : Iff b c\nh_t : c → Iff x u\nh_e : Not c → Iff y v\n⊢ Iff (ite b x y) (ite c u v)","decl":"@[deprecated \"No deprecation message was provided.\" (since := \"2024-09-03\")] -- unused in Mathlib\ntheorem if_ctx_congr_prop {b c x y u v : Prop} [dec_b : Decidable b] [dec_c : Decidable c]\n    (h_c : b ↔ c) (h_t : c → (x ↔ u)) (h_e : ¬c → (y ↔ v)) : ite b x y ↔ ite c u v :=\n  match dec_b, dec_c with\n  | isFalse _,  isFalse h₂ => h_e h₂\n  | isTrue _,   isTrue h₂  => h_t h₂\n  | isFalse h₁, isTrue h₂  => absurd h₂ (Iff.mp (not_congr h_c) h₁)\n  | isTrue h₁,  isFalse h₂ => absurd h₁ (Iff.mpr (not_congr h_c) h₂)\n\n-- @[congr]\n"}
{"name":"if_congr_prop","module":"Mathlib.Deprecated.Logic","initialProofState":"b c x y u v : Prop\ninst✝¹ : Decidable b\ninst✝ : Decidable c\nh_c : Iff b c\nh_t : Iff x u\nh_e : Iff y v\n⊢ Iff (ite b x y) (ite c u v)","decl":"@[deprecated \"No deprecation message was provided.\" (since := \"2024-09-03\")] -- unused in Mathlib\ntheorem if_congr_prop {b c x y u v : Prop} [Decidable b] [Decidable c] (h_c : b ↔ c) (h_t : x ↔ u)\n    (h_e : y ↔ v) : ite b x y ↔ ite c u v :=\n  if_ctx_congr_prop h_c (fun _ ↦ h_t) (fun _ ↦ h_e)\n\n"}
{"name":"if_ctx_simp_congr_prop","module":"Mathlib.Deprecated.Logic","initialProofState":"b c x y u v : Prop\ninst✝ : Decidable b\nh_c : Iff b c\nh_t : c → Iff x u\nh_e : Not c → Iff y v\n⊢ Iff (ite b x y) (ite c u v)","decl":"@[deprecated \"No deprecation message was provided.\" (since := \"2024-09-03\")] -- unused in Mathlib\ntheorem if_ctx_simp_congr_prop {b c x y u v : Prop} [Decidable b] (h_c : b ↔ c) (h_t : c → (x ↔ u))\n    -- FIXME: after https://github.com/leanprover/lean4/issues/1867 is fixed,\n    -- this should be changed back to:\n    -- (h_e : ¬c → (y ↔ v)) : ite b x y ↔ ite c (h := decidable_of_decidable_of_iff h_c) u v :=\n    (h_e : ¬c → (y ↔ v)) : ite b x y ↔ @ite _ c (decidable_of_decidable_of_iff h_c) u v :=\n  if_ctx_congr_prop (dec_c := decidable_of_decidable_of_iff h_c) h_c h_t h_e\n\n"}
{"name":"if_simp_congr_prop","module":"Mathlib.Deprecated.Logic","initialProofState":"b c x y u v : Prop\ninst✝ : Decidable b\nh_c : Iff b c\nh_t : Iff x u\nh_e : Iff y v\n⊢ Iff (ite b x y) (ite c u v)","decl":"@[deprecated \"No deprecation message was provided.\" (since := \"2024-09-03\")] -- unused in Mathlib\ntheorem if_simp_congr_prop {b c x y u v : Prop} [Decidable b] (h_c : b ↔ c) (h_t : x ↔ u)\n    -- FIXME: after https://github.com/leanprover/lean4/issues/1867 is fixed,\n    -- this should be changed back to:\n    -- (h_e : y ↔ v) : ite b x y ↔ (ite c (h := decidable_of_decidable_of_iff h_c) u v) :=\n    (h_e : y ↔ v) : ite b x y ↔ (@ite _ c (decidable_of_decidable_of_iff h_c) u v) :=\n  if_ctx_simp_congr_prop h_c (fun _ ↦ h_t) (fun _ ↦ h_e)\n\n"}
{"name":"dif_ctx_simp_congr","module":"Mathlib.Deprecated.Logic","initialProofState":"α : Sort u\nb c : Prop\ninst✝ : Decidable b\nx : b → α\nu : c → α\ny : Not b → α\nv : Not c → α\nh_c : Iff b c\nh_t : ∀ (h : c), Eq (x ⋯) (u h)\nh_e : ∀ (h : Not c), Eq (y ⋯) (v h)\n⊢ Eq (dite b x y) (dite c u v)","decl":"@[deprecated \"No deprecation message was provided.\" (since := \"2024-09-03\")] -- unused in Mathlib\ntheorem dif_ctx_simp_congr {α : Sort u} {b c : Prop} [Decidable b]\n    {x : b → α} {u : c → α} {y : ¬b → α} {v : ¬c → α}\n    (h_c : b ↔ c) (h_t : ∀ h : c, x (Iff.mpr h_c h) = u h)\n    (h_e : ∀ h : ¬c, y (Iff.mpr (not_congr h_c) h) = v h) :\n    -- FIXME: after https://github.com/leanprover/lean4/issues/1867 is fixed,\n    -- this should be changed back to:\n    -- dite b x y = dite c (h := decidable_of_decidable_of_iff h_c) u v :=\n    dite b x y = @dite _ c (decidable_of_decidable_of_iff h_c) u v :=\n  dif_ctx_congr (dec_c := decidable_of_decidable_of_iff h_c) h_c h_t h_e\n\n"}
{"name":"AsTrue.get","module":"Mathlib.Deprecated.Logic","initialProofState":"c : Prop\nh₁ : Decidable c\nx✝ : AsTrue c\n⊢ c","decl":"@[deprecated \"No deprecation message was provided.\" (since := \"2024-09-03\")]\ntheorem AsTrue.get {c : Prop} [h₁ : Decidable c] (_ : AsTrue c) : c :=\n  match h₁ with\n  | isTrue h_c => h_c\n\n/- Equalities for rewriting let-expressions -/\n"}
{"name":"let_value_eq","module":"Mathlib.Deprecated.Logic","initialProofState":"α : Sort u\nβ : Sort v\na₁ a₂ : α\nb : α → β\nh : Eq a₁ a₂\n⊢ Eq\n    (let x := a₁;\n    b x)\n    (let x := a₂;\n    b x)","decl":"@[deprecated \"No deprecation message was provided.\" (since := \"2024-09-03\")] -- unused in Mathlib\ntheorem let_value_eq {α : Sort u} {β : Sort v} {a₁ a₂ : α} (b : α → β)\n    (h : a₁ = a₂) : (let x : α := a₁; b x) = (let x : α := a₂; b x) := congrArg b h\n\n"}
{"name":"let_value_heq","module":"Mathlib.Deprecated.Logic","initialProofState":"α : Sort v\nβ : α → Sort u\na₁ a₂ : α\nb : (x : α) → β x\nh : Eq a₁ a₂\n⊢ HEq\n    (let x := a₁;\n    b x)\n    (let x := a₂;\n    b x)","decl":"@[deprecated \"No deprecation message was provided.\" (since := \"2024-09-03\")] -- unused in Mathlib\ntheorem let_value_heq {α : Sort v} {β : α → Sort u} {a₁ a₂ : α} (b : ∀ x : α, β x)\n    (h : a₁ = a₂) : HEq (let x : α := a₁; b x) (let x : α := a₂; b x) := by cases h; rfl\n\n"}
{"name":"let_body_eq","module":"Mathlib.Deprecated.Logic","initialProofState":"α : Sort v\nβ : α → Sort u\na : α\nb₁ b₂ : (x : α) → β x\nh : ∀ (x : α), Eq (b₁ x) (b₂ x)\n⊢ Eq\n    (let x := a;\n    b₁ x)\n    (let x := a;\n    b₂ x)","decl":"@[deprecated \"No deprecation message was provided.\" (since := \"2024-09-03\")] -- unused in Mathlib\ntheorem let_body_eq {α : Sort v} {β : α → Sort u} (a : α) {b₁ b₂ : ∀ x : α, β x}\n    (h : ∀ x, b₁ x = b₂ x) : (let x : α := a; b₁ x) = (let x : α := a; b₂ x) := by exact h _ ▸ rfl\n\n"}
{"name":"let_eq","module":"Mathlib.Deprecated.Logic","initialProofState":"α : Sort v\nβ : Sort u\na₁ a₂ : α\nb₁ b₂ : α → β\nh₁ : Eq a₁ a₂\nh₂ : ∀ (x : α), Eq (b₁ x) (b₂ x)\n⊢ Eq\n    (let x := a₁;\n    b₁ x)\n    (let x := a₂;\n    b₂ x)","decl":"@[deprecated \"No deprecation message was provided.\" (since := \"2024-09-03\")] -- unused in Mathlib\ntheorem let_eq {α : Sort v} {β : Sort u} {a₁ a₂ : α} {b₁ b₂ : α → β}\n    (h₁ : a₁ = a₂) (h₂ : ∀ x, b₁ x = b₂ x) :\n    (let x : α := a₁; b₁ x) = (let x : α := a₂; b₂ x) := by simp [h₁, h₂]\n"}
