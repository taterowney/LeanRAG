{"name":"ZeroAtInftyContinuousMapClass.norm_le","module":"Mathlib.Analysis.Normed.Group.ZeroAtInfty","initialProofState":"E : Type u_1\nF : Type u_2\n𝓕 : Type u_3\ninst✝³ : SeminormedAddGroup E\ninst✝² : SeminormedAddCommGroup F\ninst✝¹ : FunLike 𝓕 E F\ninst✝ : ZeroAtInftyContinuousMapClass 𝓕 E F\nf : 𝓕\nε : Real\nhε : LT.lt 0 ε\n⊢ Exists fun r => ∀ (x : E), LT.lt r (Norm.norm x) → LT.lt (Norm.norm (f x)) ε","decl":"theorem ZeroAtInftyContinuousMapClass.norm_le (f : 𝓕) (ε : ℝ) (hε : 0 < ε) :\n    ∃ (r : ℝ), ∀ (x : E) (_hx : r < ‖x‖), ‖f x‖ < ε := by\n  have h := zero_at_infty f\n  rw [tendsto_zero_iff_norm_tendsto_zero, tendsto_def] at h\n  specialize h (Metric.ball 0 ε) (Metric.ball_mem_nhds 0 hε)\n  rcases Metric.closedBall_compl_subset_of_mem_cocompact h 0 with ⟨r, hr⟩\n  use r\n  intro x hr'\n  suffices x ∈ (fun x ↦ ‖f x‖) ⁻¹' Metric.ball 0 ε by aesop\n  apply hr\n  aesop\n\n"}
{"name":"zero_at_infty_of_norm_le","module":"Mathlib.Analysis.Normed.Group.ZeroAtInfty","initialProofState":"E : Type u_1\nF : Type u_2\ninst✝² : SeminormedAddGroup E\ninst✝¹ : SeminormedAddCommGroup F\ninst✝ : ProperSpace E\nf : E → F\nh : ∀ (ε : Real), LT.lt 0 ε → Exists fun r => ∀ (x : E), LT.lt r (Norm.norm x) → LT.lt (Norm.norm (f x)) ε\n⊢ Filter.Tendsto f (Filter.cocompact E) (nhds 0)","decl":"theorem zero_at_infty_of_norm_le (f : E → F)\n    (h : ∀ (ε : ℝ) (_hε : 0 < ε), ∃ (r : ℝ), ∀ (x : E) (_hx : r < ‖x‖), ‖f x‖ < ε) :\n    Tendsto f (cocompact E) (𝓝 0) := by\n  rw [tendsto_zero_iff_norm_tendsto_zero]\n  intro s hs\n  rw [mem_map, Metric.mem_cocompact_iff_closedBall_compl_subset 0]\n  rw [Metric.mem_nhds_iff] at hs\n  rcases hs with ⟨ε, hε, hs⟩\n  rcases h ε hε with ⟨r, hr⟩\n  use r\n  intro\n  aesop\n"}
