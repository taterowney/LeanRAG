{"name":"ContinuousLinearMap.hasMFDerivWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nf : ContinuousLinearMap (RingHom.id 𝕜) E E'\ns : Set E\nx : E\n⊢ HasMFDerivWithinAt (modelWithCornersSelf 𝕜 E) (modelWithCornersSelf 𝕜 E') (⇑f) s x f","decl":"protected theorem hasMFDerivWithinAt : HasMFDerivWithinAt 𝓘(𝕜, E) 𝓘(𝕜, E') f s x f :=\n  f.hasFDerivWithinAt.hasMFDerivWithinAt\n\n"}
{"name":"ContinuousLinearMap.hasMFDerivAt","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nf : ContinuousLinearMap (RingHom.id 𝕜) E E'\nx : E\n⊢ HasMFDerivAt (modelWithCornersSelf 𝕜 E) (modelWithCornersSelf 𝕜 E') (⇑f) x f","decl":"protected theorem hasMFDerivAt : HasMFDerivAt 𝓘(𝕜, E) 𝓘(𝕜, E') f x f :=\n  f.hasFDerivAt.hasMFDerivAt\n\n"}
{"name":"ContinuousLinearMap.mdifferentiableWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nf : ContinuousLinearMap (RingHom.id 𝕜) E E'\ns : Set E\nx : E\n⊢ MDifferentiableWithinAt (modelWithCornersSelf 𝕜 E) (modelWithCornersSelf 𝕜 E') (⇑f) s x","decl":"protected theorem mdifferentiableWithinAt : MDifferentiableWithinAt 𝓘(𝕜, E) 𝓘(𝕜, E') f s x :=\n  f.differentiableWithinAt.mdifferentiableWithinAt\n\n"}
{"name":"ContinuousLinearMap.mdifferentiableOn","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nf : ContinuousLinearMap (RingHom.id 𝕜) E E'\ns : Set E\n⊢ MDifferentiableOn (modelWithCornersSelf 𝕜 E) (modelWithCornersSelf 𝕜 E') (⇑f) s","decl":"protected theorem mdifferentiableOn : MDifferentiableOn 𝓘(𝕜, E) 𝓘(𝕜, E') f s :=\n  f.differentiableOn.mdifferentiableOn\n\n"}
{"name":"ContinuousLinearMap.mdifferentiableAt","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nf : ContinuousLinearMap (RingHom.id 𝕜) E E'\nx : E\n⊢ MDifferentiableAt (modelWithCornersSelf 𝕜 E) (modelWithCornersSelf 𝕜 E') (⇑f) x","decl":"protected theorem mdifferentiableAt : MDifferentiableAt 𝓘(𝕜, E) 𝓘(𝕜, E') f x :=\n  f.differentiableAt.mdifferentiableAt\n\n"}
{"name":"ContinuousLinearMap.mdifferentiable","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nf : ContinuousLinearMap (RingHom.id 𝕜) E E'\n⊢ MDifferentiable (modelWithCornersSelf 𝕜 E) (modelWithCornersSelf 𝕜 E') ⇑f","decl":"protected theorem mdifferentiable : MDifferentiable 𝓘(𝕜, E) 𝓘(𝕜, E') f :=\n  f.differentiable.mdifferentiable\n\n"}
{"name":"ContinuousLinearMap.mfderiv_eq","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nf : ContinuousLinearMap (RingHom.id 𝕜) E E'\nx : E\n⊢ Eq (mfderiv (modelWithCornersSelf 𝕜 E) (modelWithCornersSelf 𝕜 E') (⇑f) x) f","decl":"theorem mfderiv_eq : mfderiv 𝓘(𝕜, E) 𝓘(𝕜, E') f x = f :=\n  f.hasMFDerivAt.mfderiv\n\n"}
{"name":"ContinuousLinearMap.mfderivWithin_eq","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nf : ContinuousLinearMap (RingHom.id 𝕜) E E'\ns : Set E\nx : E\nhs : UniqueMDiffWithinAt (modelWithCornersSelf 𝕜 E) s x\n⊢ Eq (mfderivWithin (modelWithCornersSelf 𝕜 E) (modelWithCornersSelf 𝕜 E') (⇑f) s x) f","decl":"theorem mfderivWithin_eq (hs : UniqueMDiffWithinAt 𝓘(𝕜, E) s x) :\n    mfderivWithin 𝓘(𝕜, E) 𝓘(𝕜, E') f s x = f :=\n  f.hasMFDerivWithinAt.mfderivWithin hs\n\n"}
{"name":"ContinuousLinearEquiv.hasMFDerivWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nf : ContinuousLinearEquiv (RingHom.id 𝕜) E E'\ns : Set E\nx : E\n⊢ HasMFDerivWithinAt (modelWithCornersSelf 𝕜 E) (modelWithCornersSelf 𝕜 E') (⇑f) s x ↑f","decl":"protected theorem hasMFDerivWithinAt : HasMFDerivWithinAt 𝓘(𝕜, E) 𝓘(𝕜, E') f s x (f : E →L[𝕜] E') :=\n  f.hasFDerivWithinAt.hasMFDerivWithinAt\n\n"}
{"name":"ContinuousLinearEquiv.hasMFDerivAt","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nf : ContinuousLinearEquiv (RingHom.id 𝕜) E E'\nx : E\n⊢ HasMFDerivAt (modelWithCornersSelf 𝕜 E) (modelWithCornersSelf 𝕜 E') (⇑f) x ↑f","decl":"protected theorem hasMFDerivAt : HasMFDerivAt 𝓘(𝕜, E) 𝓘(𝕜, E') f x (f : E →L[𝕜] E') :=\n  f.hasFDerivAt.hasMFDerivAt\n\n"}
{"name":"ContinuousLinearEquiv.mdifferentiableWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nf : ContinuousLinearEquiv (RingHom.id 𝕜) E E'\ns : Set E\nx : E\n⊢ MDifferentiableWithinAt (modelWithCornersSelf 𝕜 E) (modelWithCornersSelf 𝕜 E') (⇑f) s x","decl":"protected theorem mdifferentiableWithinAt : MDifferentiableWithinAt 𝓘(𝕜, E) 𝓘(𝕜, E') f s x :=\n  f.differentiableWithinAt.mdifferentiableWithinAt\n\n"}
{"name":"ContinuousLinearEquiv.mdifferentiableOn","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nf : ContinuousLinearEquiv (RingHom.id 𝕜) E E'\ns : Set E\n⊢ MDifferentiableOn (modelWithCornersSelf 𝕜 E) (modelWithCornersSelf 𝕜 E') (⇑f) s","decl":"protected theorem mdifferentiableOn : MDifferentiableOn 𝓘(𝕜, E) 𝓘(𝕜, E') f s :=\n  f.differentiableOn.mdifferentiableOn\n\n"}
{"name":"ContinuousLinearEquiv.mdifferentiableAt","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nf : ContinuousLinearEquiv (RingHom.id 𝕜) E E'\nx : E\n⊢ MDifferentiableAt (modelWithCornersSelf 𝕜 E) (modelWithCornersSelf 𝕜 E') (⇑f) x","decl":"protected theorem mdifferentiableAt : MDifferentiableAt 𝓘(𝕜, E) 𝓘(𝕜, E') f x :=\n  f.differentiableAt.mdifferentiableAt\n\n"}
{"name":"ContinuousLinearEquiv.mdifferentiable","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nf : ContinuousLinearEquiv (RingHom.id 𝕜) E E'\n⊢ MDifferentiable (modelWithCornersSelf 𝕜 E) (modelWithCornersSelf 𝕜 E') ⇑f","decl":"protected theorem mdifferentiable : MDifferentiable 𝓘(𝕜, E) 𝓘(𝕜, E') f :=\n  f.differentiable.mdifferentiable\n\n"}
{"name":"ContinuousLinearEquiv.mfderiv_eq","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nf : ContinuousLinearEquiv (RingHom.id 𝕜) E E'\nx : E\n⊢ Eq (mfderiv (modelWithCornersSelf 𝕜 E) (modelWithCornersSelf 𝕜 E') (⇑f) x) ↑f","decl":"theorem mfderiv_eq : mfderiv 𝓘(𝕜, E) 𝓘(𝕜, E') f x = (f : E →L[𝕜] E') :=\n  f.hasMFDerivAt.mfderiv\n\n"}
{"name":"ContinuousLinearEquiv.mfderivWithin_eq","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nf : ContinuousLinearEquiv (RingHom.id 𝕜) E E'\ns : Set E\nx : E\nhs : UniqueMDiffWithinAt (modelWithCornersSelf 𝕜 E) s x\n⊢ Eq (mfderivWithin (modelWithCornersSelf 𝕜 E) (modelWithCornersSelf 𝕜 E') (⇑f) s x) ↑f","decl":"theorem mfderivWithin_eq (hs : UniqueMDiffWithinAt 𝓘(𝕜, E) s x) :\n    mfderivWithin 𝓘(𝕜, E) 𝓘(𝕜, E') f s x = (f : E →L[𝕜] E') :=\n  f.hasMFDerivWithinAt.mfderivWithin hs\n\n"}
{"name":"hasMFDerivAt_id","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹ : TopologicalSpace M\ninst✝ : ChartedSpace H M\nx : M\n⊢ HasMFDerivAt I I id x (ContinuousLinearMap.id 𝕜 (TangentSpace I x))","decl":"theorem hasMFDerivAt_id (x : M) :\n    HasMFDerivAt I I (@id M) x (ContinuousLinearMap.id 𝕜 (TangentSpace I x)) := by\n  refine ⟨continuousAt_id, ?_⟩\n  have : ∀ᶠ y in 𝓝[range I] (extChartAt I x) x, (extChartAt I x ∘ (extChartAt I x).symm) y = y := by\n    apply Filter.mem_of_superset (extChartAt_target_mem_nhdsWithin x)\n    mfld_set_tac\n  apply HasFDerivWithinAt.congr_of_eventuallyEq (hasFDerivWithinAt_id _ _) this\n  simp only [mfld_simps]\n\n"}
{"name":"hasMFDerivWithinAt_id","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹ : TopologicalSpace M\ninst✝ : ChartedSpace H M\ns : Set M\nx : M\n⊢ HasMFDerivWithinAt I I id s x (ContinuousLinearMap.id 𝕜 (TangentSpace I x))","decl":"theorem hasMFDerivWithinAt_id (s : Set M) (x : M) :\n    HasMFDerivWithinAt I I (@id M) s x (ContinuousLinearMap.id 𝕜 (TangentSpace I x)) :=\n  (hasMFDerivAt_id x).hasMFDerivWithinAt\n\n"}
{"name":"mdifferentiableAt_id","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹ : TopologicalSpace M\ninst✝ : ChartedSpace H M\nx : M\n⊢ MDifferentiableAt I I id x","decl":"theorem mdifferentiableAt_id : MDifferentiableAt I I (@id M) x :=\n  (hasMFDerivAt_id x).mdifferentiableAt\n\n"}
{"name":"mdifferentiableWithinAt_id","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹ : TopologicalSpace M\ninst✝ : ChartedSpace H M\ns : Set M\nx : M\n⊢ MDifferentiableWithinAt I I id s x","decl":"theorem mdifferentiableWithinAt_id : MDifferentiableWithinAt I I (@id M) s x :=\n  mdifferentiableAt_id.mdifferentiableWithinAt\n\n"}
{"name":"mdifferentiable_id","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹ : TopologicalSpace M\ninst✝ : ChartedSpace H M\n⊢ MDifferentiable I I id","decl":"theorem mdifferentiable_id : MDifferentiable I I (@id M) := fun _ => mdifferentiableAt_id\n\n"}
{"name":"mdifferentiableOn_id","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹ : TopologicalSpace M\ninst✝ : ChartedSpace H M\ns : Set M\n⊢ MDifferentiableOn I I id s","decl":"theorem mdifferentiableOn_id : MDifferentiableOn I I (@id M) s :=\n  mdifferentiable_id.mdifferentiableOn\n\n"}
{"name":"mfderiv_id","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹ : TopologicalSpace M\ninst✝ : ChartedSpace H M\nx : M\n⊢ Eq (mfderiv I I id x) (ContinuousLinearMap.id 𝕜 (TangentSpace I x))","decl":"@[simp, mfld_simps]\ntheorem mfderiv_id : mfderiv I I (@id M) x = ContinuousLinearMap.id 𝕜 (TangentSpace I x) :=\n  HasMFDerivAt.mfderiv (hasMFDerivAt_id x)\n\n"}
{"name":"mfderivWithin_id","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹ : TopologicalSpace M\ninst✝ : ChartedSpace H M\ns : Set M\nx : M\nhxs : UniqueMDiffWithinAt I s x\n⊢ Eq (mfderivWithin I I id s x) (ContinuousLinearMap.id 𝕜 (TangentSpace I x))","decl":"theorem mfderivWithin_id (hxs : UniqueMDiffWithinAt I s x) :\n    mfderivWithin I I (@id M) s x = ContinuousLinearMap.id 𝕜 (TangentSpace I x) := by\n  rw [MDifferentiable.mfderivWithin mdifferentiableAt_id hxs]\n  exact mfderiv_id\n\n"}
{"name":"tangentMap_id","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹ : TopologicalSpace M\ninst✝ : ChartedSpace H M\n⊢ Eq (tangentMap I I id) id","decl":"@[simp, mfld_simps]\ntheorem tangentMap_id : tangentMap I I (id : M → M) = id := by ext1 ⟨x, v⟩; simp [tangentMap]\n\n"}
{"name":"tangentMapWithin_id","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹ : TopologicalSpace M\ninst✝ : ChartedSpace H M\ns : Set M\np : TangentBundle I M\nhs : UniqueMDiffWithinAt I s p.proj\n⊢ Eq (tangentMapWithin I I id s p) p","decl":"theorem tangentMapWithin_id {p : TangentBundle I M} (hs : UniqueMDiffWithinAt I s p.proj) :\n    tangentMapWithin I I (id : M → M) s p = p := by\n  simp only [tangentMapWithin, id]\n  rw [mfderivWithin_id]\n  · rcases p with ⟨⟩; rfl\n  · exact hs\n\n"}
{"name":"hasMFDerivAt_const","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nc : M'\nx : M\n⊢ HasMFDerivAt I I' (fun x => c) x 0","decl":"theorem hasMFDerivAt_const (c : M') (x : M) :\n    HasMFDerivAt I I' (fun _ : M => c) x (0 : TangentSpace I x →L[𝕜] TangentSpace I' c) := by\n  refine ⟨continuous_const.continuousAt, ?_⟩\n  simp only [writtenInExtChartAt, Function.comp_def, hasFDerivWithinAt_const]\n\n"}
{"name":"hasMFDerivWithinAt_const","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nc : M'\ns : Set M\nx : M\n⊢ HasMFDerivWithinAt I I' (fun x => c) s x 0","decl":"theorem hasMFDerivWithinAt_const (c : M') (s : Set M) (x : M) :\n    HasMFDerivWithinAt I I' (fun _ : M => c) s x (0 : TangentSpace I x →L[𝕜] TangentSpace I' c) :=\n  (hasMFDerivAt_const c x).hasMFDerivWithinAt\n\n"}
{"name":"mdifferentiableAt_const","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nx : M\nc : M'\n⊢ MDifferentiableAt I I' (fun x => c) x","decl":"theorem mdifferentiableAt_const : MDifferentiableAt I I' (fun _ : M => c) x :=\n  (hasMFDerivAt_const c x).mdifferentiableAt\n\n"}
{"name":"mdifferentiableWithinAt_const","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\ns : Set M\nx : M\nc : M'\n⊢ MDifferentiableWithinAt I I' (fun x => c) s x","decl":"theorem mdifferentiableWithinAt_const : MDifferentiableWithinAt I I' (fun _ : M => c) s x :=\n  mdifferentiableAt_const.mdifferentiableWithinAt\n\n"}
{"name":"mdifferentiable_const","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nc : M'\n⊢ MDifferentiable I I' fun x => c","decl":"theorem mdifferentiable_const : MDifferentiable I I' fun _ : M => c := fun _ =>\n  mdifferentiableAt_const\n\n"}
{"name":"mdifferentiableOn_const","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\ns : Set M\nc : M'\n⊢ MDifferentiableOn I I' (fun x => c) s","decl":"theorem mdifferentiableOn_const : MDifferentiableOn I I' (fun _ : M => c) s :=\n  mdifferentiable_const.mdifferentiableOn\n\n"}
{"name":"mfderiv_const","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nx : M\nc : M'\n⊢ Eq (mfderiv I I' (fun x => c) x) 0","decl":"@[simp, mfld_simps]\ntheorem mfderiv_const :\n    mfderiv I I' (fun _ : M => c) x = (0 : TangentSpace I x →L[𝕜] TangentSpace I' c) :=\n  HasMFDerivAt.mfderiv (hasMFDerivAt_const c x)\n\n"}
{"name":"mfderivWithin_const","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\ns : Set M\nx : M\nc : M'\n⊢ Eq (mfderivWithin I I' (fun x => c) s x) 0","decl":"theorem mfderivWithin_const :\n    mfderivWithin I I' (fun _ : M => c) s x = (0 : TangentSpace I x →L[𝕜] TangentSpace I' c) :=\n  (hasMFDerivWithinAt_const _ _ _).mfderivWithin_eq_zero\n\n"}
{"name":"hasMFDerivAt_fst","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nx : Prod M M'\n⊢ HasMFDerivAt (I.prod I') I Prod.fst x (ContinuousLinearMap.fst 𝕜 (TangentSpace I x.1) (TangentSpace I' x.2))","decl":"theorem hasMFDerivAt_fst (x : M × M') :\n    HasMFDerivAt (I.prod I') I Prod.fst x\n      (ContinuousLinearMap.fst 𝕜 (TangentSpace I x.1) (TangentSpace I' x.2)) := by\n  refine ⟨continuous_fst.continuousAt, ?_⟩\n  have :\n    ∀ᶠ y in 𝓝[range (I.prod I')] extChartAt (I.prod I') x x,\n      (extChartAt I x.1 ∘ Prod.fst ∘ (extChartAt (I.prod I') x).symm) y = y.1 := by\n    /- porting note: was\n    apply Filter.mem_of_superset (extChartAt_target_mem_nhdsWithin (I.prod I') x)\n    mfld_set_tac\n    -/\n    filter_upwards [extChartAt_target_mem_nhdsWithin x] with y hy\n    rw [extChartAt_prod] at hy\n    exact (extChartAt I x.1).right_inv hy.1\n  apply HasFDerivWithinAt.congr_of_eventuallyEq hasFDerivWithinAt_fst this\n  -- Porting note: next line was `simp only [mfld_simps]`\n  exact (extChartAt I x.1).right_inv <| (extChartAt I x.1).map_source (mem_extChartAt_source _)\n\n"}
{"name":"hasMFDerivWithinAt_fst","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\ns : Set (Prod M M')\nx : Prod M M'\n⊢ HasMFDerivWithinAt (I.prod I') I Prod.fst s x (ContinuousLinearMap.fst 𝕜 (TangentSpace I x.1) (TangentSpace I' x.2))","decl":"theorem hasMFDerivWithinAt_fst (s : Set (M × M')) (x : M × M') :\n    HasMFDerivWithinAt (I.prod I') I Prod.fst s x\n      (ContinuousLinearMap.fst 𝕜 (TangentSpace I x.1) (TangentSpace I' x.2)) :=\n  (hasMFDerivAt_fst x).hasMFDerivWithinAt\n\n"}
{"name":"mdifferentiableAt_fst","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nx : Prod M M'\n⊢ MDifferentiableAt (I.prod I') I Prod.fst x","decl":"theorem mdifferentiableAt_fst {x : M × M'} : MDifferentiableAt (I.prod I') I Prod.fst x :=\n  (hasMFDerivAt_fst x).mdifferentiableAt\n\n"}
{"name":"mdifferentiableWithinAt_fst","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\ns : Set (Prod M M')\nx : Prod M M'\n⊢ MDifferentiableWithinAt (I.prod I') I Prod.fst s x","decl":"theorem mdifferentiableWithinAt_fst {s : Set (M × M')} {x : M × M'} :\n    MDifferentiableWithinAt (I.prod I') I Prod.fst s x :=\n  mdifferentiableAt_fst.mdifferentiableWithinAt\n\n"}
{"name":"mdifferentiable_fst","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\n⊢ MDifferentiable (I.prod I') I Prod.fst","decl":"theorem mdifferentiable_fst : MDifferentiable (I.prod I') I (Prod.fst : M × M' → M) := fun _ =>\n  mdifferentiableAt_fst\n\n"}
{"name":"mdifferentiableOn_fst","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\ns : Set (Prod M M')\n⊢ MDifferentiableOn (I.prod I') I Prod.fst s","decl":"theorem mdifferentiableOn_fst {s : Set (M × M')} : MDifferentiableOn (I.prod I') I Prod.fst s :=\n  mdifferentiable_fst.mdifferentiableOn\n\n"}
{"name":"mfderiv_fst","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nx : Prod M M'\n⊢ Eq (mfderiv (I.prod I') I Prod.fst x) (ContinuousLinearMap.fst 𝕜 (TangentSpace I x.1) (TangentSpace I' x.2))","decl":"@[simp, mfld_simps]\ntheorem mfderiv_fst {x : M × M'} :\n    mfderiv (I.prod I') I Prod.fst x =\n      ContinuousLinearMap.fst 𝕜 (TangentSpace I x.1) (TangentSpace I' x.2) :=\n  (hasMFDerivAt_fst x).mfderiv\n\n"}
{"name":"mfderivWithin_fst","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\ns : Set (Prod M M')\nx : Prod M M'\nhxs : UniqueMDiffWithinAt (I.prod I') s x\n⊢ Eq (mfderivWithin (I.prod I') I Prod.fst s x) (ContinuousLinearMap.fst 𝕜 (TangentSpace I x.1) (TangentSpace I' x.2))","decl":"theorem mfderivWithin_fst {s : Set (M × M')} {x : M × M'}\n    (hxs : UniqueMDiffWithinAt (I.prod I') s x) :\n    mfderivWithin (I.prod I') I Prod.fst s x =\n      ContinuousLinearMap.fst 𝕜 (TangentSpace I x.1) (TangentSpace I' x.2) := by\n  rw [MDifferentiable.mfderivWithin mdifferentiableAt_fst hxs]; exact mfderiv_fst\n\n"}
{"name":"tangentMap_prod_fst","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\np : TangentBundle (I.prod I') (Prod M M')\n⊢ Eq (tangentMap (I.prod I') I Prod.fst p) { proj := p.proj.1, snd := p.snd.1 }","decl":"@[simp, mfld_simps]\ntheorem tangentMap_prod_fst {p : TangentBundle (I.prod I') (M × M')} :\n    tangentMap (I.prod I') I Prod.fst p = ⟨p.proj.1, p.2.1⟩ := by\n  -- Porting note: `rfl` wasn't needed\n  simp [tangentMap]; rfl\n\n"}
{"name":"tangentMapWithin_prod_fst","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\ns : Set (Prod M M')\np : TangentBundle (I.prod I') (Prod M M')\nhs : UniqueMDiffWithinAt (I.prod I') s p.proj\n⊢ Eq (tangentMapWithin (I.prod I') I Prod.fst s p) { proj := p.proj.1, snd := p.snd.1 }","decl":"theorem tangentMapWithin_prod_fst {s : Set (M × M')} {p : TangentBundle (I.prod I') (M × M')}\n    (hs : UniqueMDiffWithinAt (I.prod I') s p.proj) :\n    tangentMapWithin (I.prod I') I Prod.fst s p = ⟨p.proj.1, p.2.1⟩ := by\n  simp only [tangentMapWithin]\n  rw [mfderivWithin_fst]\n  · rcases p with ⟨⟩; rfl\n  · exact hs\n\n"}
{"name":"hasMFDerivAt_snd","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nx : Prod M M'\n⊢ HasMFDerivAt (I.prod I') I' Prod.snd x (ContinuousLinearMap.snd 𝕜 (TangentSpace I x.1) (TangentSpace I' x.2))","decl":"theorem hasMFDerivAt_snd (x : M × M') :\n    HasMFDerivAt (I.prod I') I' Prod.snd x\n      (ContinuousLinearMap.snd 𝕜 (TangentSpace I x.1) (TangentSpace I' x.2)) := by\n  refine ⟨continuous_snd.continuousAt, ?_⟩\n  have :\n    ∀ᶠ y in 𝓝[range (I.prod I')] extChartAt (I.prod I') x x,\n      (extChartAt I' x.2 ∘ Prod.snd ∘ (extChartAt (I.prod I') x).symm) y = y.2 := by\n    /- porting note: was\n    apply Filter.mem_of_superset (extChartAt_target_mem_nhdsWithin (I.prod I') x)\n    mfld_set_tac\n    -/\n    filter_upwards [extChartAt_target_mem_nhdsWithin x] with y hy\n    rw [extChartAt_prod] at hy\n    exact (extChartAt I' x.2).right_inv hy.2\n  apply HasFDerivWithinAt.congr_of_eventuallyEq hasFDerivWithinAt_snd this\n  -- Porting note: the next line was `simp only [mfld_simps]`\n  exact (extChartAt I' x.2).right_inv <| (extChartAt I' x.2).map_source (mem_extChartAt_source _)\n\n"}
{"name":"hasMFDerivWithinAt_snd","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\ns : Set (Prod M M')\nx : Prod M M'\n⊢ HasMFDerivWithinAt (I.prod I') I' Prod.snd s x (ContinuousLinearMap.snd 𝕜 (TangentSpace I x.1) (TangentSpace I' x.2))","decl":"theorem hasMFDerivWithinAt_snd (s : Set (M × M')) (x : M × M') :\n    HasMFDerivWithinAt (I.prod I') I' Prod.snd s x\n      (ContinuousLinearMap.snd 𝕜 (TangentSpace I x.1) (TangentSpace I' x.2)) :=\n  (hasMFDerivAt_snd x).hasMFDerivWithinAt\n\n"}
{"name":"mdifferentiableAt_snd","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nx : Prod M M'\n⊢ MDifferentiableAt (I.prod I') I' Prod.snd x","decl":"theorem mdifferentiableAt_snd {x : M × M'} : MDifferentiableAt (I.prod I') I' Prod.snd x :=\n  (hasMFDerivAt_snd x).mdifferentiableAt\n\n"}
{"name":"mdifferentiableWithinAt_snd","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\ns : Set (Prod M M')\nx : Prod M M'\n⊢ MDifferentiableWithinAt (I.prod I') I' Prod.snd s x","decl":"theorem mdifferentiableWithinAt_snd {s : Set (M × M')} {x : M × M'} :\n    MDifferentiableWithinAt (I.prod I') I' Prod.snd s x :=\n  mdifferentiableAt_snd.mdifferentiableWithinAt\n\n"}
{"name":"mdifferentiable_snd","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\n⊢ MDifferentiable (I.prod I') I' Prod.snd","decl":"theorem mdifferentiable_snd : MDifferentiable (I.prod I') I' (Prod.snd : M × M' → M') := fun _ =>\n  mdifferentiableAt_snd\n\n"}
{"name":"mdifferentiableOn_snd","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\ns : Set (Prod M M')\n⊢ MDifferentiableOn (I.prod I') I' Prod.snd s","decl":"theorem mdifferentiableOn_snd {s : Set (M × M')} : MDifferentiableOn (I.prod I') I' Prod.snd s :=\n  mdifferentiable_snd.mdifferentiableOn\n\n"}
{"name":"mfderiv_snd","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nx : Prod M M'\n⊢ Eq (mfderiv (I.prod I') I' Prod.snd x) (ContinuousLinearMap.snd 𝕜 (TangentSpace I x.1) (TangentSpace I' x.2))","decl":"@[simp, mfld_simps]\ntheorem mfderiv_snd {x : M × M'} :\n    mfderiv (I.prod I') I' Prod.snd x =\n      ContinuousLinearMap.snd 𝕜 (TangentSpace I x.1) (TangentSpace I' x.2) :=\n  (hasMFDerivAt_snd x).mfderiv\n\n"}
{"name":"mfderivWithin_snd","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\ns : Set (Prod M M')\nx : Prod M M'\nhxs : UniqueMDiffWithinAt (I.prod I') s x\n⊢ Eq (mfderivWithin (I.prod I') I' Prod.snd s x) (ContinuousLinearMap.snd 𝕜 (TangentSpace I x.1) (TangentSpace I' x.2))","decl":"theorem mfderivWithin_snd {s : Set (M × M')} {x : M × M'}\n    (hxs : UniqueMDiffWithinAt (I.prod I') s x) :\n    mfderivWithin (I.prod I') I' Prod.snd s x =\n      ContinuousLinearMap.snd 𝕜 (TangentSpace I x.1) (TangentSpace I' x.2) := by\n  rw [MDifferentiable.mfderivWithin mdifferentiableAt_snd hxs]; exact mfderiv_snd\n\n"}
{"name":"MDifferentiableWithinAt.fst","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nF : Type u_11\ninst✝⁴ : NormedAddCommGroup F\ninst✝³ : NormedSpace 𝕜 F\nG : Type u_12\ninst✝² : TopologicalSpace G\nJ : ModelWithCorners 𝕜 F G\nN : Type u_13\ninst✝¹ : TopologicalSpace N\ninst✝ : ChartedSpace G N\nf : N → Prod M M'\ns : Set N\nx : N\nhf : MDifferentiableWithinAt J (I.prod I') f s x\n⊢ MDifferentiableWithinAt J I (fun x => (f x).1) s x","decl":"theorem MDifferentiableWithinAt.fst {f : N → M × M'} {s : Set N} {x : N}\n    (hf : MDifferentiableWithinAt J (I.prod I') f s x) :\n    MDifferentiableWithinAt J I (fun x => (f x).1) s x :=\n  mdifferentiableAt_fst.comp_mdifferentiableWithinAt x hf\n\n"}
{"name":"MDifferentiableAt.fst","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nF : Type u_11\ninst✝⁴ : NormedAddCommGroup F\ninst✝³ : NormedSpace 𝕜 F\nG : Type u_12\ninst✝² : TopologicalSpace G\nJ : ModelWithCorners 𝕜 F G\nN : Type u_13\ninst✝¹ : TopologicalSpace N\ninst✝ : ChartedSpace G N\nf : N → Prod M M'\nx : N\nhf : MDifferentiableAt J (I.prod I') f x\n⊢ MDifferentiableAt J I (fun x => (f x).1) x","decl":"theorem MDifferentiableAt.fst {f : N → M × M'} {x : N} (hf : MDifferentiableAt J (I.prod I') f x) :\n    MDifferentiableAt J I (fun x => (f x).1) x :=\n  mdifferentiableAt_fst.comp x hf\n\n"}
{"name":"MDifferentiable.fst","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nF : Type u_11\ninst✝⁴ : NormedAddCommGroup F\ninst✝³ : NormedSpace 𝕜 F\nG : Type u_12\ninst✝² : TopologicalSpace G\nJ : ModelWithCorners 𝕜 F G\nN : Type u_13\ninst✝¹ : TopologicalSpace N\ninst✝ : ChartedSpace G N\nf : N → Prod M M'\nhf : MDifferentiable J (I.prod I') f\n⊢ MDifferentiable J I fun x => (f x).1","decl":"theorem MDifferentiable.fst {f : N → M × M'} (hf : MDifferentiable J (I.prod I') f) :\n    MDifferentiable J I fun x => (f x).1 :=\n  mdifferentiable_fst.comp hf\n\n"}
{"name":"MDifferentiableWithinAt.snd","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nF : Type u_11\ninst✝⁴ : NormedAddCommGroup F\ninst✝³ : NormedSpace 𝕜 F\nG : Type u_12\ninst✝² : TopologicalSpace G\nJ : ModelWithCorners 𝕜 F G\nN : Type u_13\ninst✝¹ : TopologicalSpace N\ninst✝ : ChartedSpace G N\nf : N → Prod M M'\ns : Set N\nx : N\nhf : MDifferentiableWithinAt J (I.prod I') f s x\n⊢ MDifferentiableWithinAt J I' (fun x => (f x).2) s x","decl":"theorem MDifferentiableWithinAt.snd {f : N → M × M'} {s : Set N} {x : N}\n    (hf : MDifferentiableWithinAt J (I.prod I') f s x) :\n    MDifferentiableWithinAt J I' (fun x => (f x).2) s x :=\n  mdifferentiableAt_snd.comp_mdifferentiableWithinAt x hf\n\n"}
{"name":"MDifferentiableAt.snd","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nF : Type u_11\ninst✝⁴ : NormedAddCommGroup F\ninst✝³ : NormedSpace 𝕜 F\nG : Type u_12\ninst✝² : TopologicalSpace G\nJ : ModelWithCorners 𝕜 F G\nN : Type u_13\ninst✝¹ : TopologicalSpace N\ninst✝ : ChartedSpace G N\nf : N → Prod M M'\nx : N\nhf : MDifferentiableAt J (I.prod I') f x\n⊢ MDifferentiableAt J I' (fun x => (f x).2) x","decl":"theorem MDifferentiableAt.snd {f : N → M × M'} {x : N} (hf : MDifferentiableAt J (I.prod I') f x) :\n    MDifferentiableAt J I' (fun x => (f x).2) x :=\n  mdifferentiableAt_snd.comp x hf\n\n"}
{"name":"MDifferentiable.snd","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nF : Type u_11\ninst✝⁴ : NormedAddCommGroup F\ninst✝³ : NormedSpace 𝕜 F\nG : Type u_12\ninst✝² : TopologicalSpace G\nJ : ModelWithCorners 𝕜 F G\nN : Type u_13\ninst✝¹ : TopologicalSpace N\ninst✝ : ChartedSpace G N\nf : N → Prod M M'\nhf : MDifferentiable J (I.prod I') f\n⊢ MDifferentiable J I' fun x => (f x).2","decl":"theorem MDifferentiable.snd {f : N → M × M'} (hf : MDifferentiable J (I.prod I') f) :\n    MDifferentiable J I' fun x => (f x).2 :=\n  mdifferentiable_snd.comp hf\n\n"}
{"name":"mdifferentiableWithinAt_prod_iff","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nF' : Type u_14\ninst✝⁴ : NormedAddCommGroup F'\ninst✝³ : NormedSpace 𝕜 F'\nG' : Type u_15\ninst✝² : TopologicalSpace G'\nJ' : ModelWithCorners 𝕜 F' G'\nN' : Type u_16\ninst✝¹ : TopologicalSpace N'\ninst✝ : ChartedSpace G' N'\ns : Set M\nx : M\nf : M → Prod M' N'\n⊢ Iff (MDifferentiableWithinAt I (I'.prod J') f s x) (And (MDifferentiableWithinAt I I' (Function.comp Prod.fst f) s x) (MDifferentiableWithinAt I J' (Function.comp Prod.snd f) s x))","decl":"theorem mdifferentiableWithinAt_prod_iff (f : M → M' × N') :\n    MDifferentiableWithinAt I (I'.prod J') f s x ↔\n      MDifferentiableWithinAt I I' (Prod.fst ∘ f) s x\n      ∧ MDifferentiableWithinAt I J' (Prod.snd ∘ f) s x :=\n  ⟨fun h => ⟨h.fst, h.snd⟩, fun h => h.1.prod_mk h.2⟩\n\n"}
{"name":"mdifferentiableWithinAt_prod_module_iff","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁸ : NormedAddCommGroup E\ninst✝⁷ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁶ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁵ : TopologicalSpace M\ninst✝⁴ : ChartedSpace H M\nF₁ : Type u_17\ninst✝³ : NormedAddCommGroup F₁\ninst✝² : NormedSpace 𝕜 F₁\nF₂ : Type u_18\ninst✝¹ : NormedAddCommGroup F₂\ninst✝ : NormedSpace 𝕜 F₂\ns : Set M\nx : M\nf : M → Prod F₁ F₂\n⊢ Iff (MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 (Prod F₁ F₂)) f s x) (And (MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 F₁) (Function.comp Prod.fst f) s x) (MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 F₂) (Function.comp Prod.snd f) s x))","decl":"theorem mdifferentiableWithinAt_prod_module_iff (f : M → F₁ × F₂) :\n    MDifferentiableWithinAt I 𝓘(𝕜, F₁ × F₂) f s x ↔\n      MDifferentiableWithinAt I 𝓘(𝕜, F₁) (Prod.fst ∘ f) s x ∧\n      MDifferentiableWithinAt I 𝓘(𝕜, F₂) (Prod.snd ∘ f) s x := by\n  rw [modelWithCornersSelf_prod, ← chartedSpaceSelf_prod]\n  exact mdifferentiableWithinAt_prod_iff f\n\n"}
{"name":"mdifferentiableAt_prod_iff","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nF' : Type u_14\ninst✝⁴ : NormedAddCommGroup F'\ninst✝³ : NormedSpace 𝕜 F'\nG' : Type u_15\ninst✝² : TopologicalSpace G'\nJ' : ModelWithCorners 𝕜 F' G'\nN' : Type u_16\ninst✝¹ : TopologicalSpace N'\ninst✝ : ChartedSpace G' N'\nx : M\nf : M → Prod M' N'\n⊢ Iff (MDifferentiableAt I (I'.prod J') f x) (And (MDifferentiableAt I I' (Function.comp Prod.fst f) x) (MDifferentiableAt I J' (Function.comp Prod.snd f) x))","decl":"theorem mdifferentiableAt_prod_iff (f : M → M' × N') :\n    MDifferentiableAt I (I'.prod J') f x ↔\n      MDifferentiableAt I I' (Prod.fst ∘ f) x ∧ MDifferentiableAt I J' (Prod.snd ∘ f) x := by\n  simp_rw [← mdifferentiableWithinAt_univ]; exact mdifferentiableWithinAt_prod_iff f\n\n"}
{"name":"mdifferentiableAt_prod_module_iff","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁸ : NormedAddCommGroup E\ninst✝⁷ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁶ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁵ : TopologicalSpace M\ninst✝⁴ : ChartedSpace H M\nF₁ : Type u_17\ninst✝³ : NormedAddCommGroup F₁\ninst✝² : NormedSpace 𝕜 F₁\nF₂ : Type u_18\ninst✝¹ : NormedAddCommGroup F₂\ninst✝ : NormedSpace 𝕜 F₂\nx : M\nf : M → Prod F₁ F₂\n⊢ Iff (MDifferentiableAt I (modelWithCornersSelf 𝕜 (Prod F₁ F₂)) f x) (And (MDifferentiableAt I (modelWithCornersSelf 𝕜 F₁) (Function.comp Prod.fst f) x) (MDifferentiableAt I (modelWithCornersSelf 𝕜 F₂) (Function.comp Prod.snd f) x))","decl":"theorem mdifferentiableAt_prod_module_iff (f : M → F₁ × F₂) :\n    MDifferentiableAt I 𝓘(𝕜, F₁ × F₂) f x ↔\n      MDifferentiableAt I 𝓘(𝕜, F₁) (Prod.fst ∘ f) x\n      ∧ MDifferentiableAt I 𝓘(𝕜, F₂) (Prod.snd ∘ f) x := by\n  rw [modelWithCornersSelf_prod, ← chartedSpaceSelf_prod]\n  exact mdifferentiableAt_prod_iff f\n\n"}
{"name":"mdifferentiableOn_prod_iff","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nF' : Type u_14\ninst✝⁴ : NormedAddCommGroup F'\ninst✝³ : NormedSpace 𝕜 F'\nG' : Type u_15\ninst✝² : TopologicalSpace G'\nJ' : ModelWithCorners 𝕜 F' G'\nN' : Type u_16\ninst✝¹ : TopologicalSpace N'\ninst✝ : ChartedSpace G' N'\ns : Set M\nf : M → Prod M' N'\n⊢ Iff (MDifferentiableOn I (I'.prod J') f s) (And (MDifferentiableOn I I' (Function.comp Prod.fst f) s) (MDifferentiableOn I J' (Function.comp Prod.snd f) s))","decl":"theorem mdifferentiableOn_prod_iff (f : M → M' × N') :\n    MDifferentiableOn I (I'.prod J') f s ↔\n      MDifferentiableOn I I' (Prod.fst ∘ f) s ∧ MDifferentiableOn I J' (Prod.snd ∘ f) s :=\n  ⟨fun h ↦ ⟨fun x hx ↦ ((mdifferentiableWithinAt_prod_iff f).1 (h x hx)).1,\n      fun x hx ↦ ((mdifferentiableWithinAt_prod_iff f).1 (h x hx)).2⟩ ,\n    fun h x hx ↦ (mdifferentiableWithinAt_prod_iff f).2 ⟨h.1 x hx, h.2 x hx⟩⟩\n\n"}
{"name":"mdifferentiableOn_prod_module_iff","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁸ : NormedAddCommGroup E\ninst✝⁷ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁶ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁵ : TopologicalSpace M\ninst✝⁴ : ChartedSpace H M\nF₁ : Type u_17\ninst✝³ : NormedAddCommGroup F₁\ninst✝² : NormedSpace 𝕜 F₁\nF₂ : Type u_18\ninst✝¹ : NormedAddCommGroup F₂\ninst✝ : NormedSpace 𝕜 F₂\ns : Set M\nf : M → Prod F₁ F₂\n⊢ Iff (MDifferentiableOn I (modelWithCornersSelf 𝕜 (Prod F₁ F₂)) f s) (And (MDifferentiableOn I (modelWithCornersSelf 𝕜 F₁) (Function.comp Prod.fst f) s) (MDifferentiableOn I (modelWithCornersSelf 𝕜 F₂) (Function.comp Prod.snd f) s))","decl":"theorem mdifferentiableOn_prod_module_iff (f : M → F₁ × F₂) :\n    MDifferentiableOn I 𝓘(𝕜, F₁ × F₂) f s ↔\n      MDifferentiableOn I 𝓘(𝕜, F₁) (Prod.fst ∘ f) s\n      ∧ MDifferentiableOn I 𝓘(𝕜, F₂) (Prod.snd ∘ f) s := by\n  rw [modelWithCornersSelf_prod, ← chartedSpaceSelf_prod]\n  exact mdifferentiableOn_prod_iff f\n\n"}
{"name":"mdifferentiable_prod_iff","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nF' : Type u_14\ninst✝⁴ : NormedAddCommGroup F'\ninst✝³ : NormedSpace 𝕜 F'\nG' : Type u_15\ninst✝² : TopologicalSpace G'\nJ' : ModelWithCorners 𝕜 F' G'\nN' : Type u_16\ninst✝¹ : TopologicalSpace N'\ninst✝ : ChartedSpace G' N'\nf : M → Prod M' N'\n⊢ Iff (MDifferentiable I (I'.prod J') f) (And (MDifferentiable I I' (Function.comp Prod.fst f)) (MDifferentiable I J' (Function.comp Prod.snd f)))","decl":"theorem mdifferentiable_prod_iff (f : M → M' × N') :\n    MDifferentiable I (I'.prod J') f ↔\n      MDifferentiable I I' (Prod.fst ∘ f) ∧ MDifferentiable I J' (Prod.snd ∘ f) :=\n  ⟨fun h => ⟨h.fst, h.snd⟩, fun h => by convert h.1.prod_mk h.2⟩\n\n"}
{"name":"mdifferentiable_prod_module_iff","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁸ : NormedAddCommGroup E\ninst✝⁷ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁶ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁵ : TopologicalSpace M\ninst✝⁴ : ChartedSpace H M\nF₁ : Type u_17\ninst✝³ : NormedAddCommGroup F₁\ninst✝² : NormedSpace 𝕜 F₁\nF₂ : Type u_18\ninst✝¹ : NormedAddCommGroup F₂\ninst✝ : NormedSpace 𝕜 F₂\nf : M → Prod F₁ F₂\n⊢ Iff (MDifferentiable I (modelWithCornersSelf 𝕜 (Prod F₁ F₂)) f) (And (MDifferentiable I (modelWithCornersSelf 𝕜 F₁) (Function.comp Prod.fst f)) (MDifferentiable I (modelWithCornersSelf 𝕜 F₂) (Function.comp Prod.snd f)))","decl":"theorem mdifferentiable_prod_module_iff (f : M → F₁ × F₂) :\n    MDifferentiable I 𝓘(𝕜, F₁ × F₂) f ↔\n      MDifferentiable I 𝓘(𝕜, F₁) (Prod.fst ∘ f) ∧ MDifferentiable I 𝓘(𝕜, F₂) (Prod.snd ∘ f) := by\n  rw [modelWithCornersSelf_prod, ← chartedSpaceSelf_prod]\n  exact mdifferentiable_prod_iff f\n\n\n"}
{"name":"MDifferentiableWithinAt.prod_map'","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝²⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁹ : NormedAddCommGroup E\ninst✝¹⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹⁶ : TopologicalSpace M\ninst✝¹⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝¹⁴ : NormedAddCommGroup E'\ninst✝¹³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝¹² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹¹ : TopologicalSpace M'\ninst✝¹⁰ : ChartedSpace H' M'\nF : Type u_11\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\nG : Type u_12\ninst✝⁷ : TopologicalSpace G\nJ : ModelWithCorners 𝕜 F G\nN : Type u_13\ninst✝⁶ : TopologicalSpace N\ninst✝⁵ : ChartedSpace G N\nF' : Type u_14\ninst✝⁴ : NormedAddCommGroup F'\ninst✝³ : NormedSpace 𝕜 F'\nG' : Type u_15\ninst✝² : TopologicalSpace G'\nJ' : ModelWithCorners 𝕜 F' G'\nN' : Type u_16\ninst✝¹ : TopologicalSpace N'\ninst✝ : ChartedSpace G' N'\ns : Set M\nf : M → M'\ng : N → N'\nr : Set N\np : Prod M N\nhf : MDifferentiableWithinAt I I' f s p.1\nhg : MDifferentiableWithinAt J J' g r p.2\n⊢ MDifferentiableWithinAt (I.prod J) (I'.prod J') (Prod.map f g) (SProd.sprod s r) p","decl":"/-- The product map of two `C^n` functions within a set at a point is `C^n`\nwithin the product set at the product point. -/\ntheorem MDifferentiableWithinAt.prod_map' {p : M × N} (hf : MDifferentiableWithinAt I I' f s p.1)\n    (hg : MDifferentiableWithinAt J J' g r p.2) :\n    MDifferentiableWithinAt (I.prod J) (I'.prod J') (Prod.map f g) (s ×ˢ r) p :=\n  (hf.comp p mdifferentiableWithinAt_fst (prod_subset_preimage_fst _ _)).prod_mk <|\n    hg.comp p mdifferentiableWithinAt_snd (prod_subset_preimage_snd _ _)\n\n"}
{"name":"MDifferentiableWithinAt.prod_map","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝²⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁹ : NormedAddCommGroup E\ninst✝¹⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹⁶ : TopologicalSpace M\ninst✝¹⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝¹⁴ : NormedAddCommGroup E'\ninst✝¹³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝¹² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹¹ : TopologicalSpace M'\ninst✝¹⁰ : ChartedSpace H' M'\nF : Type u_11\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\nG : Type u_12\ninst✝⁷ : TopologicalSpace G\nJ : ModelWithCorners 𝕜 F G\nN : Type u_13\ninst✝⁶ : TopologicalSpace N\ninst✝⁵ : ChartedSpace G N\nF' : Type u_14\ninst✝⁴ : NormedAddCommGroup F'\ninst✝³ : NormedSpace 𝕜 F'\nG' : Type u_15\ninst✝² : TopologicalSpace G'\nJ' : ModelWithCorners 𝕜 F' G'\nN' : Type u_16\ninst✝¹ : TopologicalSpace N'\ninst✝ : ChartedSpace G' N'\ns : Set M\nx : M\nf : M → M'\ng : N → N'\nr : Set N\ny : N\nhf : MDifferentiableWithinAt I I' f s x\nhg : MDifferentiableWithinAt J J' g r y\n⊢ MDifferentiableWithinAt (I.prod J) (I'.prod J') (Prod.map f g) (SProd.sprod s r) { fst := x, snd := y }","decl":"theorem MDifferentiableWithinAt.prod_map (hf : MDifferentiableWithinAt I I' f s x)\n    (hg : MDifferentiableWithinAt J J' g r y) :\n    MDifferentiableWithinAt (I.prod J) (I'.prod J') (Prod.map f g) (s ×ˢ r) (x, y) :=\n  MDifferentiableWithinAt.prod_map' hf hg\n\n"}
{"name":"MDifferentiableAt.prod_map","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝²⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁹ : NormedAddCommGroup E\ninst✝¹⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹⁶ : TopologicalSpace M\ninst✝¹⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝¹⁴ : NormedAddCommGroup E'\ninst✝¹³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝¹² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹¹ : TopologicalSpace M'\ninst✝¹⁰ : ChartedSpace H' M'\nF : Type u_11\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\nG : Type u_12\ninst✝⁷ : TopologicalSpace G\nJ : ModelWithCorners 𝕜 F G\nN : Type u_13\ninst✝⁶ : TopologicalSpace N\ninst✝⁵ : ChartedSpace G N\nF' : Type u_14\ninst✝⁴ : NormedAddCommGroup F'\ninst✝³ : NormedSpace 𝕜 F'\nG' : Type u_15\ninst✝² : TopologicalSpace G'\nJ' : ModelWithCorners 𝕜 F' G'\nN' : Type u_16\ninst✝¹ : TopologicalSpace N'\ninst✝ : ChartedSpace G' N'\nx : M\nf : M → M'\ng : N → N'\ny : N\nhf : MDifferentiableAt I I' f x\nhg : MDifferentiableAt J J' g y\n⊢ MDifferentiableAt (I.prod J) (I'.prod J') (Prod.map f g) { fst := x, snd := y }","decl":"theorem MDifferentiableAt.prod_map\n    (hf : MDifferentiableAt I I' f x) (hg : MDifferentiableAt J J' g y) :\n    MDifferentiableAt (I.prod J) (I'.prod J') (Prod.map f g) (x, y) := by\n  rw [← mdifferentiableWithinAt_univ] at *\n  convert hf.prod_map hg\n  exact univ_prod_univ.symm\n\n"}
{"name":"MDifferentiableAt.prod_map'","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝²⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁹ : NormedAddCommGroup E\ninst✝¹⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹⁶ : TopologicalSpace M\ninst✝¹⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝¹⁴ : NormedAddCommGroup E'\ninst✝¹³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝¹² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹¹ : TopologicalSpace M'\ninst✝¹⁰ : ChartedSpace H' M'\nF : Type u_11\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\nG : Type u_12\ninst✝⁷ : TopologicalSpace G\nJ : ModelWithCorners 𝕜 F G\nN : Type u_13\ninst✝⁶ : TopologicalSpace N\ninst✝⁵ : ChartedSpace G N\nF' : Type u_14\ninst✝⁴ : NormedAddCommGroup F'\ninst✝³ : NormedSpace 𝕜 F'\nG' : Type u_15\ninst✝² : TopologicalSpace G'\nJ' : ModelWithCorners 𝕜 F' G'\nN' : Type u_16\ninst✝¹ : TopologicalSpace N'\ninst✝ : ChartedSpace G' N'\nf : M → M'\ng : N → N'\np : Prod M N\nhf : MDifferentiableAt I I' f p.1\nhg : MDifferentiableAt J J' g p.2\n⊢ MDifferentiableAt (I.prod J) (I'.prod J') (Prod.map f g) p","decl":"/-- Variant of `MDifferentiableAt.prod_map` in which the point in the product is given as `p`\ninstead of a pair `(x, y)`. -/\ntheorem MDifferentiableAt.prod_map' {p : M × N}\n    (hf : MDifferentiableAt I I' f p.1) (hg : MDifferentiableAt J J' g p.2) :\n    MDifferentiableAt (I.prod J) (I'.prod J') (Prod.map f g) p := by\n  rcases p with ⟨⟩\n  exact hf.prod_map hg\n\n"}
{"name":"MDifferentiableOn.prod_map","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝²⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁹ : NormedAddCommGroup E\ninst✝¹⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹⁶ : TopologicalSpace M\ninst✝¹⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝¹⁴ : NormedAddCommGroup E'\ninst✝¹³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝¹² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹¹ : TopologicalSpace M'\ninst✝¹⁰ : ChartedSpace H' M'\nF : Type u_11\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\nG : Type u_12\ninst✝⁷ : TopologicalSpace G\nJ : ModelWithCorners 𝕜 F G\nN : Type u_13\ninst✝⁶ : TopologicalSpace N\ninst✝⁵ : ChartedSpace G N\nF' : Type u_14\ninst✝⁴ : NormedAddCommGroup F'\ninst✝³ : NormedSpace 𝕜 F'\nG' : Type u_15\ninst✝² : TopologicalSpace G'\nJ' : ModelWithCorners 𝕜 F' G'\nN' : Type u_16\ninst✝¹ : TopologicalSpace N'\ninst✝ : ChartedSpace G' N'\ns : Set M\nf : M → M'\ng : N → N'\nr : Set N\nhf : MDifferentiableOn I I' f s\nhg : MDifferentiableOn J J' g r\n⊢ MDifferentiableOn (I.prod J) (I'.prod J') (Prod.map f g) (SProd.sprod s r)","decl":"theorem MDifferentiableOn.prod_map\n    (hf : MDifferentiableOn I I' f s) (hg : MDifferentiableOn J J' g r) :\n    MDifferentiableOn (I.prod J) (I'.prod J') (Prod.map f g) (s ×ˢ r) :=\n  (hf.comp mdifferentiableOn_fst (prod_subset_preimage_fst _ _)).prod_mk <|\n    hg.comp mdifferentiableOn_snd (prod_subset_preimage_snd _ _)\n\n"}
{"name":"MDifferentiable.prod_map","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝²⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁹ : NormedAddCommGroup E\ninst✝¹⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹⁶ : TopologicalSpace M\ninst✝¹⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝¹⁴ : NormedAddCommGroup E'\ninst✝¹³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝¹² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹¹ : TopologicalSpace M'\ninst✝¹⁰ : ChartedSpace H' M'\nF : Type u_11\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\nG : Type u_12\ninst✝⁷ : TopologicalSpace G\nJ : ModelWithCorners 𝕜 F G\nN : Type u_13\ninst✝⁶ : TopologicalSpace N\ninst✝⁵ : ChartedSpace G N\nF' : Type u_14\ninst✝⁴ : NormedAddCommGroup F'\ninst✝³ : NormedSpace 𝕜 F'\nG' : Type u_15\ninst✝² : TopologicalSpace G'\nJ' : ModelWithCorners 𝕜 F' G'\nN' : Type u_16\ninst✝¹ : TopologicalSpace N'\ninst✝ : ChartedSpace G' N'\nf : M → M'\ng : N → N'\nhf : MDifferentiable I I' f\nhg : MDifferentiable J J' g\n⊢ MDifferentiable (I.prod J) (I'.prod J') (Prod.map f g)","decl":"theorem MDifferentiable.prod_map (hf : MDifferentiable I I' f) (hg : MDifferentiable J J' g) :\n    MDifferentiable (I.prod J) (I'.prod J') (Prod.map f g) := by\n  intro p\n  exact (hf p.1).prod_map' (hg p.2)\n\n"}
{"name":"tangentMap_prod_snd","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\np : TangentBundle (I.prod I') (Prod M M')\n⊢ Eq (tangentMap (I.prod I') I' Prod.snd p) { proj := p.proj.2, snd := p.snd.2 }","decl":"@[simp, mfld_simps]\ntheorem tangentMap_prod_snd {p : TangentBundle (I.prod I') (M × M')} :\n    tangentMap (I.prod I') I' Prod.snd p = ⟨p.proj.2, p.2.2⟩ := by\n  -- Porting note: `rfl` wasn't needed\n  simp [tangentMap]; rfl\n\n"}
{"name":"tangentMapWithin_prod_snd","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\ns : Set (Prod M M')\np : TangentBundle (I.prod I') (Prod M M')\nhs : UniqueMDiffWithinAt (I.prod I') s p.proj\n⊢ Eq (tangentMapWithin (I.prod I') I' Prod.snd s p) { proj := p.proj.2, snd := p.snd.2 }","decl":"theorem tangentMapWithin_prod_snd {s : Set (M × M')} {p : TangentBundle (I.prod I') (M × M')}\n    (hs : UniqueMDiffWithinAt (I.prod I') s p.proj) :\n    tangentMapWithin (I.prod I') I' Prod.snd s p = ⟨p.proj.2, p.2.2⟩ := by\n  simp only [tangentMapWithin]\n  rw [mfderivWithin_snd]\n  · rcases p with ⟨⟩; rfl\n  · exact hs\n\n"}
{"name":"MDifferentiableAt.mfderiv_prod","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\ng : M → M''\nx : M\nhf : MDifferentiableAt I I' f x\nhg : MDifferentiableAt I I'' g x\n⊢ Eq (mfderiv I (I'.prod I'') (fun x => { fst := f x, snd := g x }) x) ((mfderiv I I' f x).prod (mfderiv I I'' g x))","decl":"theorem MDifferentiableAt.mfderiv_prod {f : M → M'} {g : M → M''} {x : M}\n    (hf : MDifferentiableAt I I' f x) (hg : MDifferentiableAt I I'' g x) :\n    mfderiv I (I'.prod I'') (fun x => (f x, g x)) x =\n      (mfderiv I I' f x).prod (mfderiv I I'' g x) := by\n  classical\n  simp_rw [mfderiv, if_pos (hf.prod_mk hg), if_pos hf, if_pos hg]\n  exact hf.differentiableWithinAt_writtenInExtChartAt.fderivWithin_prod\n    hg.differentiableWithinAt_writtenInExtChartAt (I.uniqueDiffOn _ (mem_range_self _))\n\n"}
{"name":"mfderiv_prod_left","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nx₀ : M\ny₀ : M'\n⊢ Eq (mfderiv I (I.prod I') (fun x => { fst := x, snd := y₀ }) x₀) (ContinuousLinearMap.inl 𝕜 (TangentSpace I x₀) (TangentSpace I' y₀))","decl":"theorem mfderiv_prod_left {x₀ : M} {y₀ : M'} :\n    mfderiv I (I.prod I') (fun x => (x, y₀)) x₀ =\n      ContinuousLinearMap.inl 𝕜 (TangentSpace I x₀) (TangentSpace I' y₀) := by\n  refine (mdifferentiableAt_id.mfderiv_prod mdifferentiableAt_const).trans ?_\n  rw [mfderiv_id, mfderiv_const, ContinuousLinearMap.inl]\n\n"}
{"name":"tangentMap_prod_left","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\np : TangentBundle I M\ny₀ : M'\n⊢ Eq (tangentMap I (I.prod I') (fun x => { fst := x, snd := y₀ }) p) { proj := { fst := p.proj, snd := y₀ }, snd := { fst := p.snd, snd := 0 } }","decl":"theorem tangentMap_prod_left {p : TangentBundle I M} {y₀ : M'} :\n    tangentMap I (I.prod I') (fun x => (x, y₀)) p = ⟨(p.1, y₀), (p.2, 0)⟩ := by\n  simp only [tangentMap, mfderiv_prod_left, TotalSpace.mk_inj]\n  rfl\n\n"}
{"name":"mfderiv_prod_right","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nx₀ : M\ny₀ : M'\n⊢ Eq (mfderiv I' (I.prod I') (fun y => { fst := x₀, snd := y }) y₀) (ContinuousLinearMap.inr 𝕜 (TangentSpace I x₀) (TangentSpace I' y₀))","decl":"theorem mfderiv_prod_right {x₀ : M} {y₀ : M'} :\n    mfderiv I' (I.prod I') (fun y => (x₀, y)) y₀ =\n      ContinuousLinearMap.inr 𝕜 (TangentSpace I x₀) (TangentSpace I' y₀) := by\n  refine (mdifferentiableAt_const.mfderiv_prod mdifferentiableAt_id).trans ?_\n  rw [mfderiv_id, mfderiv_const, ContinuousLinearMap.inr]\n\n"}
{"name":"tangentMap_prod_right","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\np : TangentBundle I' M'\nx₀ : M\n⊢ Eq (tangentMap I' (I.prod I') (fun y => { fst := x₀, snd := y }) p) { proj := { fst := x₀, snd := p.proj }, snd := { fst := 0, snd := p.snd } }","decl":"theorem tangentMap_prod_right {p : TangentBundle I' M'} {x₀ : M} :\n    tangentMap I' (I.prod I') (fun y => (x₀, y)) p = ⟨(x₀, p.1), (0, p.2)⟩ := by\n  simp only [tangentMap, mfderiv_prod_right, TotalSpace.mk_inj]\n  rfl\n\n"}
{"name":"mfderiv_prod_eq_add","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : Prod M M' → M''\np : Prod M M'\nhf : MDifferentiableAt (I.prod I') I'' f p\n⊢ Eq (mfderiv (I.prod I') I'' f p) (HAdd.hAdd (mfderiv (I.prod I') I'' (fun z => f { fst := z.1, snd := p.2 }) p) (mfderiv (I.prod I') I'' (fun z => f { fst := p.1, snd := z.2 }) p))","decl":"/-- The total derivative of a function in two variables is the sum of the partial derivatives.\n  Note that to state this (without casts) we need to be able to see through the definition of\n  `TangentSpace`. -/\ntheorem mfderiv_prod_eq_add {f : M × M' → M''} {p : M × M'}\n    (hf : MDifferentiableAt (I.prod I') I'' f p) :\n    mfderiv (I.prod I') I'' f p =\n        mfderiv (I.prod I') I'' (fun z : M × M' => f (z.1, p.2)) p +\n          mfderiv (I.prod I') I'' (fun z : M × M' => f (p.1, z.2)) p := by\n  erw [mfderiv_comp_of_eq hf (mdifferentiableAt_fst.prod_mk mdifferentiableAt_const) rfl,\n    mfderiv_comp_of_eq hf (mdifferentiableAt_const.prod_mk mdifferentiableAt_snd) rfl,\n    ← ContinuousLinearMap.comp_add,\n    mdifferentiableAt_fst.mfderiv_prod mdifferentiableAt_const,\n    mdifferentiableAt_const.mfderiv_prod mdifferentiableAt_snd, mfderiv_fst,\n    mfderiv_snd, mfderiv_const, mfderiv_const]\n  symm\n  convert ContinuousLinearMap.comp_id <| mfderiv (.prod I I') I'' f (p.1, p.2)\n  exact ContinuousLinearMap.coprod_inl_inr\n\n"}
{"name":"mfderiv_prod_eq_add_comp","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : Prod M M' → M''\np : Prod M M'\nhf : MDifferentiableAt (I.prod I') I'' f p\n⊢ Eq (mfderiv (I.prod I') I'' f p) (HAdd.hAdd ((mfderiv I I'' (fun z => f { fst := z, snd := p.2 }) p.1).comp (id (ContinuousLinearMap.fst 𝕜 E E'))) ((mfderiv I' I'' (fun z => f { fst := p.1, snd := z }) p.2).comp (id (ContinuousLinearMap.snd 𝕜 E E'))))","decl":"/-- The total derivative of a function in two variables is the sum of the partial derivatives.\n  Note that to state this (without casts) we need to be able to see through the definition of\n  `TangentSpace`. Version in terms of the one-variable derivatives. -/\ntheorem mfderiv_prod_eq_add_comp {f : M × M' → M''} {p : M × M'}\n    (hf : MDifferentiableAt (I.prod I') I'' f p) :\n    mfderiv (I.prod I') I'' f p =\n        (mfderiv I I'' (fun z : M => f (z, p.2)) p.1) ∘L (id (ContinuousLinearMap.fst 𝕜 E E') :\n          (TangentSpace (I.prod I') p) →L[𝕜] (TangentSpace I p.1)) +\n        (mfderiv I' I'' (fun z : M' => f (p.1, z)) p.2) ∘L (id (ContinuousLinearMap.snd 𝕜 E E') :\n          (TangentSpace (I.prod I') p) →L[𝕜] (TangentSpace I' p.2)) := by\n  rw [mfderiv_prod_eq_add hf]\n  congr\n  · have : (fun z : M × M' => f (z.1, p.2)) = (fun z : M => f (z, p.2)) ∘ Prod.fst := rfl\n    rw [this, mfderiv_comp (I' := I)]\n    · simp only [mfderiv_fst, id_eq]\n      rfl\n    · exact hf.comp _  (mdifferentiableAt_id.prod_mk mdifferentiableAt_const)\n    · exact mdifferentiableAt_fst\n  · have : (fun z : M × M' => f (p.1, z.2)) = (fun z : M' => f (p.1, z)) ∘ Prod.snd := rfl\n    rw [this, mfderiv_comp (I' := I')]\n    · simp only [mfderiv_snd, id_eq]\n      rfl\n    · exact hf.comp _ (mdifferentiableAt_const.prod_mk mdifferentiableAt_id)\n    · exact mdifferentiableAt_snd\n\n"}
{"name":"mfderiv_prod_eq_add_apply","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : Prod M M' → M''\np : Prod M M'\nv : TangentSpace (I.prod I') p\nhf : MDifferentiableAt (I.prod I') I'' f p\n⊢ Eq ((mfderiv (I.prod I') I'' f p) v) (HAdd.hAdd ((mfderiv I I'' (fun z => f { fst := z, snd := p.2 }) p.1) v.1) ((mfderiv I' I'' (fun z => f { fst := p.1, snd := z }) p.2) v.2))","decl":"/-- The total derivative of a function in two variables is the sum of the partial derivatives.\n  Note that to state this (without casts) we need to be able to see through the definition of\n  `TangentSpace`. Version in terms of the one-variable derivatives. -/\ntheorem mfderiv_prod_eq_add_apply {f : M × M' → M''} {p : M × M'} {v : TangentSpace (I.prod I') p}\n    (hf : MDifferentiableAt (I.prod I') I'' f p) :\n    mfderiv (I.prod I') I'' f p v =\n      mfderiv I I'' (fun z : M => f (z, p.2)) p.1 v.1 +\n      mfderiv I' I'' (fun z : M' => f (p.1, z)) p.2 v.2 := by\n  rw [mfderiv_prod_eq_add_comp hf]\n  rfl\n\n"}
{"name":"HasMFDerivAt.add","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nz : M\nf g : M → E'\nf' g' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I z) E'\nhf : HasMFDerivAt I (modelWithCornersSelf 𝕜 E') f z f'\nhg : HasMFDerivAt I (modelWithCornersSelf 𝕜 E') g z g'\n⊢ HasMFDerivAt I (modelWithCornersSelf 𝕜 E') (HAdd.hAdd f g) z (HAdd.hAdd f' g')","decl":"theorem HasMFDerivAt.add (hf : HasMFDerivAt I 𝓘(𝕜, E') f z f')\n    (hg : HasMFDerivAt I 𝓘(𝕜, E') g z g') : HasMFDerivAt I 𝓘(𝕜, E') (f + g) z (f' + g') :=\n  ⟨hf.1.add hg.1, hf.2.add hg.2⟩\n\n"}
{"name":"MDifferentiableAt.add","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nz : M\nf g : M → E'\nhf : MDifferentiableAt I (modelWithCornersSelf 𝕜 E') f z\nhg : MDifferentiableAt I (modelWithCornersSelf 𝕜 E') g z\n⊢ MDifferentiableAt I (modelWithCornersSelf 𝕜 E') (HAdd.hAdd f g) z","decl":"theorem MDifferentiableAt.add (hf : MDifferentiableAt I 𝓘(𝕜, E') f z)\n    (hg : MDifferentiableAt I 𝓘(𝕜, E') g z) : MDifferentiableAt I 𝓘(𝕜, E') (f + g) z :=\n  (hf.hasMFDerivAt.add hg.hasMFDerivAt).mdifferentiableAt\n\n"}
{"name":"MDifferentiable.add","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nf g : M → E'\nhf : MDifferentiable I (modelWithCornersSelf 𝕜 E') f\nhg : MDifferentiable I (modelWithCornersSelf 𝕜 E') g\n⊢ MDifferentiable I (modelWithCornersSelf 𝕜 E') (HAdd.hAdd f g)","decl":"theorem MDifferentiable.add (hf : MDifferentiable I 𝓘(𝕜, E') f)\n    (hg : MDifferentiable I 𝓘(𝕜, E') g) : MDifferentiable I 𝓘(𝕜, E') (f + g) := fun x =>\n  (hf x).add (hg x)\n\n-- Porting note: forcing types using `by exact`\n"}
{"name":"mfderiv_add","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nz : M\nf g : M → E'\nhf : MDifferentiableAt I (modelWithCornersSelf 𝕜 E') f z\nhg : MDifferentiableAt I (modelWithCornersSelf 𝕜 E') g z\n⊢ Eq (mfderiv I (modelWithCornersSelf 𝕜 E') (HAdd.hAdd f g) z) (HAdd.hAdd (mfderiv I (modelWithCornersSelf 𝕜 E') f z) (mfderiv I (modelWithCornersSelf 𝕜 E') g z))","decl":"theorem mfderiv_add (hf : MDifferentiableAt I 𝓘(𝕜, E') f z)\n    (hg : MDifferentiableAt I 𝓘(𝕜, E') g z) :\n    (by exact mfderiv I 𝓘(𝕜, E') (f + g) z : TangentSpace I z →L[𝕜] E') =\n      (by exact mfderiv I 𝓘(𝕜, E') f z) + (by exact mfderiv I 𝓘(𝕜, E') g z) :=\n  (hf.hasMFDerivAt.add hg.hasMFDerivAt).mfderiv\n\n"}
{"name":"HasMFDerivAt.const_smul","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nz : M\nf : M → E'\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I z) E'\nhf : HasMFDerivAt I (modelWithCornersSelf 𝕜 E') f z f'\ns : 𝕜\n⊢ HasMFDerivAt I (modelWithCornersSelf 𝕜 E') (HSMul.hSMul s f) z (HSMul.hSMul s f')","decl":"theorem HasMFDerivAt.const_smul (hf : HasMFDerivAt I 𝓘(𝕜, E') f z f') (s : 𝕜) :\n    HasMFDerivAt I 𝓘(𝕜, E') (s • f) z (s • f') :=\n  ⟨hf.1.const_smul s, hf.2.const_smul s⟩\n\n"}
{"name":"MDifferentiableAt.const_smul","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nz : M\nf : M → E'\nhf : MDifferentiableAt I (modelWithCornersSelf 𝕜 E') f z\ns : 𝕜\n⊢ MDifferentiableAt I (modelWithCornersSelf 𝕜 E') (HSMul.hSMul s f) z","decl":"theorem MDifferentiableAt.const_smul (hf : MDifferentiableAt I 𝓘(𝕜, E') f z) (s : 𝕜) :\n    MDifferentiableAt I 𝓘(𝕜, E') (s • f) z :=\n  (hf.hasMFDerivAt.const_smul s).mdifferentiableAt\n\n"}
{"name":"MDifferentiable.const_smul","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nf : M → E'\ns : 𝕜\nhf : MDifferentiable I (modelWithCornersSelf 𝕜 E') f\n⊢ MDifferentiable I (modelWithCornersSelf 𝕜 E') (HSMul.hSMul s f)","decl":"theorem MDifferentiable.const_smul (s : 𝕜) (hf : MDifferentiable I 𝓘(𝕜, E') f) :\n    MDifferentiable I 𝓘(𝕜, E') (s • f) := fun x => (hf x).const_smul s\n\n"}
{"name":"const_smul_mfderiv","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nz : M\nf : M → E'\nhf : MDifferentiableAt I (modelWithCornersSelf 𝕜 E') f z\ns : 𝕜\n⊢ Eq (mfderiv I (modelWithCornersSelf 𝕜 E') (HSMul.hSMul s f) z) (HSMul.hSMul s (mfderiv I (modelWithCornersSelf 𝕜 E') f z))","decl":"theorem const_smul_mfderiv (hf : MDifferentiableAt I 𝓘(𝕜, E') f z) (s : 𝕜) :\n    (mfderiv I 𝓘(𝕜, E') (s • f) z : TangentSpace I z →L[𝕜] E') =\n      (s • mfderiv I 𝓘(𝕜, E') f z : TangentSpace I z →L[𝕜] E') :=\n  (hf.hasMFDerivAt.const_smul s).mfderiv\n\n"}
{"name":"HasMFDerivAt.neg","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nz : M\nf : M → E'\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I z) E'\nhf : HasMFDerivAt I (modelWithCornersSelf 𝕜 E') f z f'\n⊢ HasMFDerivAt I (modelWithCornersSelf 𝕜 E') (Neg.neg f) z (Neg.neg f')","decl":"theorem HasMFDerivAt.neg (hf : HasMFDerivAt I 𝓘(𝕜, E') f z f') :\n    HasMFDerivAt I 𝓘(𝕜, E') (-f) z (-f') :=\n  ⟨hf.1.neg, hf.2.neg⟩\n\n"}
{"name":"hasMFDerivAt_neg","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nz : M\nf : M → E'\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I z) E'\n⊢ Iff (HasMFDerivAt I (modelWithCornersSelf 𝕜 E') (Neg.neg f) z (Neg.neg f')) (HasMFDerivAt I (modelWithCornersSelf 𝕜 E') f z f')","decl":"theorem hasMFDerivAt_neg : HasMFDerivAt I 𝓘(𝕜, E') (-f) z (-f') ↔ HasMFDerivAt I 𝓘(𝕜, E') f z f' :=\n  ⟨fun hf => by convert hf.neg <;> rw [neg_neg], fun hf => hf.neg⟩\n\n"}
{"name":"MDifferentiableAt.neg","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nz : M\nf : M → E'\nhf : MDifferentiableAt I (modelWithCornersSelf 𝕜 E') f z\n⊢ MDifferentiableAt I (modelWithCornersSelf 𝕜 E') (Neg.neg f) z","decl":"theorem MDifferentiableAt.neg (hf : MDifferentiableAt I 𝓘(𝕜, E') f z) :\n    MDifferentiableAt I 𝓘(𝕜, E') (-f) z :=\n  hf.hasMFDerivAt.neg.mdifferentiableAt\n\n"}
{"name":"mdifferentiableAt_neg","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nz : M\nf : M → E'\n⊢ Iff (MDifferentiableAt I (modelWithCornersSelf 𝕜 E') (Neg.neg f) z) (MDifferentiableAt I (modelWithCornersSelf 𝕜 E') f z)","decl":"theorem mdifferentiableAt_neg :\n    MDifferentiableAt I 𝓘(𝕜, E') (-f) z ↔ MDifferentiableAt I 𝓘(𝕜, E') f z :=\n  ⟨fun hf => by convert hf.neg; rw [neg_neg], fun hf => hf.neg⟩\n\n"}
{"name":"MDifferentiable.neg","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nf : M → E'\nhf : MDifferentiable I (modelWithCornersSelf 𝕜 E') f\n⊢ MDifferentiable I (modelWithCornersSelf 𝕜 E') (Neg.neg f)","decl":"theorem MDifferentiable.neg (hf : MDifferentiable I 𝓘(𝕜, E') f) : MDifferentiable I 𝓘(𝕜, E') (-f) :=\n  fun x => (hf x).neg\n\n"}
{"name":"mfderiv_neg","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nf : M → E'\nx : M\n⊢ Eq (mfderiv I (modelWithCornersSelf 𝕜 E') (Neg.neg f) x) (Neg.neg (mfderiv I (modelWithCornersSelf 𝕜 E') f x))","decl":"theorem mfderiv_neg (f : M → E') (x : M) :\n    (mfderiv I 𝓘(𝕜, E') (-f) x : TangentSpace I x →L[𝕜] E') =\n      (-mfderiv I 𝓘(𝕜, E') f x : TangentSpace I x →L[𝕜] E') := by\n  simp_rw [mfderiv]\n  by_cases hf : MDifferentiableAt I 𝓘(𝕜, E') f x\n  · exact hf.hasMFDerivAt.neg.mfderiv\n  · rw [if_neg hf]; rw [← mdifferentiableAt_neg] at hf; rw [if_neg hf, neg_zero]\n\n"}
{"name":"HasMFDerivAt.sub","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nz : M\nf g : M → E'\nf' g' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I z) E'\nhf : HasMFDerivAt I (modelWithCornersSelf 𝕜 E') f z f'\nhg : HasMFDerivAt I (modelWithCornersSelf 𝕜 E') g z g'\n⊢ HasMFDerivAt I (modelWithCornersSelf 𝕜 E') (HSub.hSub f g) z (HSub.hSub f' g')","decl":"theorem HasMFDerivAt.sub (hf : HasMFDerivAt I 𝓘(𝕜, E') f z f')\n    (hg : HasMFDerivAt I 𝓘(𝕜, E') g z g') : HasMFDerivAt I 𝓘(𝕜, E') (f - g) z (f' - g') :=\n  ⟨hf.1.sub hg.1, hf.2.sub hg.2⟩\n\n"}
{"name":"MDifferentiableAt.sub","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nz : M\nf g : M → E'\nhf : MDifferentiableAt I (modelWithCornersSelf 𝕜 E') f z\nhg : MDifferentiableAt I (modelWithCornersSelf 𝕜 E') g z\n⊢ MDifferentiableAt I (modelWithCornersSelf 𝕜 E') (HSub.hSub f g) z","decl":"theorem MDifferentiableAt.sub (hf : MDifferentiableAt I 𝓘(𝕜, E') f z)\n    (hg : MDifferentiableAt I 𝓘(𝕜, E') g z) : MDifferentiableAt I 𝓘(𝕜, E') (f - g) z :=\n  (hf.hasMFDerivAt.sub hg.hasMFDerivAt).mdifferentiableAt\n\n"}
{"name":"MDifferentiable.sub","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nf g : M → E'\nhf : MDifferentiable I (modelWithCornersSelf 𝕜 E') f\nhg : MDifferentiable I (modelWithCornersSelf 𝕜 E') g\n⊢ MDifferentiable I (modelWithCornersSelf 𝕜 E') (HSub.hSub f g)","decl":"theorem MDifferentiable.sub (hf : MDifferentiable I 𝓘(𝕜, E') f)\n    (hg : MDifferentiable I 𝓘(𝕜, E') g) : MDifferentiable I 𝓘(𝕜, E') (f - g) := fun x =>\n  (hf x).sub (hg x)\n\n"}
{"name":"mfderiv_sub","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nz : M\nf g : M → E'\nhf : MDifferentiableAt I (modelWithCornersSelf 𝕜 E') f z\nhg : MDifferentiableAt I (modelWithCornersSelf 𝕜 E') g z\n⊢ Eq (mfderiv I (modelWithCornersSelf 𝕜 E') (HSub.hSub f g) z) (HSub.hSub (mfderiv I (modelWithCornersSelf 𝕜 E') f z) (mfderiv I (modelWithCornersSelf 𝕜 E') g z))","decl":"theorem mfderiv_sub (hf : MDifferentiableAt I 𝓘(𝕜, E') f z)\n    (hg : MDifferentiableAt I 𝓘(𝕜, E') g z) :\n    (by exact mfderiv I 𝓘(𝕜, E') (f - g) z : TangentSpace I z →L[𝕜] E') =\n      (by exact mfderiv I 𝓘(𝕜, E') f z) - (by exact mfderiv I 𝓘(𝕜, E') g z) :=\n  (hf.hasMFDerivAt.sub hg.hasMFDerivAt).mfderiv\n\n"}
{"name":"HasMFDerivWithinAt.mul'","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\ns : Set M\nz : M\nF' : Type u_21\ninst✝¹ : NormedRing F'\ninst✝ : NormedAlgebra 𝕜 F'\np q : M → F'\np' q' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I z) F'\nhp : HasMFDerivWithinAt I (modelWithCornersSelf 𝕜 F') p s z p'\nhq : HasMFDerivWithinAt I (modelWithCornersSelf 𝕜 F') q s z q'\n⊢ HasMFDerivWithinAt I (modelWithCornersSelf 𝕜 F') (HMul.hMul p q) s z (HAdd.hAdd (HSMul.hSMul (p z) q') (p'.smulRight (q z)))","decl":"theorem HasMFDerivWithinAt.mul' (hp : HasMFDerivWithinAt I 𝓘(𝕜, F') p s z p')\n    (hq : HasMFDerivWithinAt I 𝓘(𝕜, F') q s z q') :\n    HasMFDerivWithinAt I 𝓘(𝕜, F') (p * q) s z (p z • q' + p'.smulRight (q z) : E →L[𝕜] F') :=\n  ⟨hp.1.mul hq.1, by simpa only [mfld_simps] using hp.2.mul' hq.2⟩\n\n"}
{"name":"HasMFDerivAt.mul'","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nz : M\nF' : Type u_21\ninst✝¹ : NormedRing F'\ninst✝ : NormedAlgebra 𝕜 F'\np q : M → F'\np' q' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I z) F'\nhp : HasMFDerivAt I (modelWithCornersSelf 𝕜 F') p z p'\nhq : HasMFDerivAt I (modelWithCornersSelf 𝕜 F') q z q'\n⊢ HasMFDerivAt I (modelWithCornersSelf 𝕜 F') (HMul.hMul p q) z (HAdd.hAdd (HSMul.hSMul (p z) q') (p'.smulRight (q z)))","decl":"theorem HasMFDerivAt.mul' (hp : HasMFDerivAt I 𝓘(𝕜, F') p z p')\n    (hq : HasMFDerivAt I 𝓘(𝕜, F') q z q') :\n    HasMFDerivAt I 𝓘(𝕜, F') (p * q) z (p z • q' + p'.smulRight (q z) : E →L[𝕜] F') :=\n  hasMFDerivWithinAt_univ.mp <| hp.hasMFDerivWithinAt.mul' hq.hasMFDerivWithinAt\n\n"}
{"name":"MDifferentiableWithinAt.mul","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\ns : Set M\nz : M\nF' : Type u_21\ninst✝¹ : NormedRing F'\ninst✝ : NormedAlgebra 𝕜 F'\np q : M → F'\nhp : MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 F') p s z\nhq : MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 F') q s z\n⊢ MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 F') (HMul.hMul p q) s z","decl":"theorem MDifferentiableWithinAt.mul (hp : MDifferentiableWithinAt I 𝓘(𝕜, F') p s z)\n    (hq : MDifferentiableWithinAt I 𝓘(𝕜, F') q s z) :\n    MDifferentiableWithinAt I 𝓘(𝕜, F') (p * q) s z :=\n  (hp.hasMFDerivWithinAt.mul' hq.hasMFDerivWithinAt).mdifferentiableWithinAt\n\n"}
{"name":"MDifferentiableAt.mul","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nz : M\nF' : Type u_21\ninst✝¹ : NormedRing F'\ninst✝ : NormedAlgebra 𝕜 F'\np q : M → F'\nhp : MDifferentiableAt I (modelWithCornersSelf 𝕜 F') p z\nhq : MDifferentiableAt I (modelWithCornersSelf 𝕜 F') q z\n⊢ MDifferentiableAt I (modelWithCornersSelf 𝕜 F') (HMul.hMul p q) z","decl":"theorem MDifferentiableAt.mul (hp : MDifferentiableAt I 𝓘(𝕜, F') p z)\n    (hq : MDifferentiableAt I 𝓘(𝕜, F') q z) : MDifferentiableAt I 𝓘(𝕜, F') (p * q) z :=\n  (hp.hasMFDerivAt.mul' hq.hasMFDerivAt).mdifferentiableAt\n\n"}
{"name":"MDifferentiableOn.mul","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\ns : Set M\nF' : Type u_21\ninst✝¹ : NormedRing F'\ninst✝ : NormedAlgebra 𝕜 F'\np q : M → F'\nhp : MDifferentiableOn I (modelWithCornersSelf 𝕜 F') p s\nhq : MDifferentiableOn I (modelWithCornersSelf 𝕜 F') q s\n⊢ MDifferentiableOn I (modelWithCornersSelf 𝕜 F') (HMul.hMul p q) s","decl":"theorem MDifferentiableOn.mul (hp : MDifferentiableOn I 𝓘(𝕜, F') p s)\n    (hq : MDifferentiableOn I 𝓘(𝕜, F') q s) : MDifferentiableOn I 𝓘(𝕜, F') (p * q) s := fun x hx =>\n  (hp x hx).mul <| hq x hx\n\n"}
{"name":"MDifferentiable.mul","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nF' : Type u_21\ninst✝¹ : NormedRing F'\ninst✝ : NormedAlgebra 𝕜 F'\np q : M → F'\nhp : MDifferentiable I (modelWithCornersSelf 𝕜 F') p\nhq : MDifferentiable I (modelWithCornersSelf 𝕜 F') q\n⊢ MDifferentiable I (modelWithCornersSelf 𝕜 F') (HMul.hMul p q)","decl":"theorem MDifferentiable.mul (hp : MDifferentiable I 𝓘(𝕜, F') p)\n    (hq : MDifferentiable I 𝓘(𝕜, F') q) : MDifferentiable I 𝓘(𝕜, F') (p * q) := fun x =>\n  (hp x).mul (hq x)\n\n"}
{"name":"HasMFDerivWithinAt.mul","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\ns : Set M\nz : M\nF' : Type u_21\ninst✝¹ : NormedCommRing F'\ninst✝ : NormedAlgebra 𝕜 F'\np q : M → F'\np' q' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I z) F'\nhp : HasMFDerivWithinAt I (modelWithCornersSelf 𝕜 F') p s z p'\nhq : HasMFDerivWithinAt I (modelWithCornersSelf 𝕜 F') q s z q'\n⊢ HasMFDerivWithinAt I (modelWithCornersSelf 𝕜 F') (HMul.hMul p q) s z (HAdd.hAdd (HSMul.hSMul (p z) q') (HSMul.hSMul (q z) p'))","decl":"theorem HasMFDerivWithinAt.mul (hp : HasMFDerivWithinAt I 𝓘(𝕜, F') p s z p')\n    (hq : HasMFDerivWithinAt I 𝓘(𝕜, F') q s z q') :\n    HasMFDerivWithinAt I 𝓘(𝕜, F') (p * q) s z (p z • q' + q z • p' : E →L[𝕜] F') := by\n  convert hp.mul' hq; ext _; apply mul_comm\n\n"}
{"name":"HasMFDerivAt.mul","module":"Mathlib.Geometry.Manifold.MFDeriv.SpecificFunctions","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nz : M\nF' : Type u_21\ninst✝¹ : NormedCommRing F'\ninst✝ : NormedAlgebra 𝕜 F'\np q : M → F'\np' q' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I z) F'\nhp : HasMFDerivAt I (modelWithCornersSelf 𝕜 F') p z p'\nhq : HasMFDerivAt I (modelWithCornersSelf 𝕜 F') q z q'\n⊢ HasMFDerivAt I (modelWithCornersSelf 𝕜 F') (HMul.hMul p q) z (HAdd.hAdd (HSMul.hSMul (p z) q') (HSMul.hSMul (q z) p'))","decl":"theorem HasMFDerivAt.mul (hp : HasMFDerivAt I 𝓘(𝕜, F') p z p')\n    (hq : HasMFDerivAt I 𝓘(𝕜, F') q z q') :\n    HasMFDerivAt I 𝓘(𝕜, F') (p * q) z (p z • q' + q z • p' : E →L[𝕜] F') :=\n  hasMFDerivWithinAt_univ.mp <| hp.hasMFDerivWithinAt.mul hq.hasMFDerivWithinAt\n\n"}
