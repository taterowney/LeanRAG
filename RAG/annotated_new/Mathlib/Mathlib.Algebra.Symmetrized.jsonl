{"name":"SymAlg.unsym_sym","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\na : α\n⊢ Eq (SymAlg.unsym (SymAlg.sym a)) a","decl":"@[simp]\ntheorem unsym_sym (a : α) : unsym (sym a) = a :=\n  rfl\n\n"}
{"name":"SymAlg.sym_unsym","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\na : α\n⊢ Eq (SymAlg.sym (SymAlg.unsym a)) a","decl":"@[simp]\ntheorem sym_unsym (a : α) : sym (unsym a) = a :=\n  rfl\n\n"}
{"name":"SymAlg.sym_comp_unsym","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\n⊢ Eq (Function.comp ⇑SymAlg.sym ⇑SymAlg.unsym) id","decl":"@[simp]\ntheorem sym_comp_unsym : (sym : α → αˢʸᵐ) ∘ unsym = id :=\n  rfl\n\n"}
{"name":"SymAlg.unsym_comp_sym","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\n⊢ Eq (Function.comp ⇑SymAlg.unsym ⇑SymAlg.sym) id","decl":"@[simp]\ntheorem unsym_comp_sym : (unsym : αˢʸᵐ → α) ∘ sym = id :=\n  rfl\n\n"}
{"name":"SymAlg.sym_symm","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\n⊢ Eq SymAlg.sym.symm SymAlg.unsym","decl":"@[simp]\ntheorem sym_symm : (@sym α).symm = unsym :=\n  rfl\n\n"}
{"name":"SymAlg.unsym_symm","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\n⊢ Eq SymAlg.unsym.symm SymAlg.sym","decl":"@[simp]\ntheorem unsym_symm : (@unsym α).symm = sym :=\n  rfl\n\n"}
{"name":"SymAlg.sym_bijective","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\n⊢ Function.Bijective ⇑SymAlg.sym","decl":"theorem sym_bijective : Bijective (sym : α → αˢʸᵐ) :=\n  sym.bijective\n\n"}
{"name":"SymAlg.unsym_bijective","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\n⊢ Function.Bijective ⇑SymAlg.unsym","decl":"theorem unsym_bijective : Bijective (unsym : αˢʸᵐ → α) :=\n  unsym.symm.bijective\n\n"}
{"name":"SymAlg.sym_injective","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\n⊢ Function.Injective ⇑SymAlg.sym","decl":"theorem sym_injective : Injective (sym : α → αˢʸᵐ) :=\n  sym.injective\n\n"}
{"name":"SymAlg.sym_surjective","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\n⊢ Function.Surjective ⇑SymAlg.sym","decl":"theorem sym_surjective : Surjective (sym : α → αˢʸᵐ) :=\n  sym.surjective\n\n"}
{"name":"SymAlg.unsym_injective","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\n⊢ Function.Injective ⇑SymAlg.unsym","decl":"theorem unsym_injective : Injective (unsym : αˢʸᵐ → α) :=\n  unsym.injective\n\n"}
{"name":"SymAlg.unsym_surjective","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\n⊢ Function.Surjective ⇑SymAlg.unsym","decl":"theorem unsym_surjective : Surjective (unsym : αˢʸᵐ → α) :=\n  unsym.surjective\n\n"}
{"name":"SymAlg.sym_inj","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\na b : α\n⊢ Iff (Eq (SymAlg.sym a) (SymAlg.sym b)) (Eq a b)","decl":"theorem sym_inj {a b : α} : sym a = sym b ↔ a = b :=\n  sym_injective.eq_iff\n\n"}
{"name":"SymAlg.unsym_inj","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\na b : SymAlg α\n⊢ Iff (Eq (SymAlg.unsym a) (SymAlg.unsym b)) (Eq a b)","decl":"theorem unsym_inj {a b : αˢʸᵐ} : unsym a = unsym b ↔ a = b :=\n  unsym_injective.eq_iff\n\n"}
{"name":"SymAlg.instNontrivial","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝ : Nontrivial α\n⊢ Nontrivial (SymAlg α)","decl":"instance [Nontrivial α] : Nontrivial αˢʸᵐ :=\n  sym_injective.nontrivial\n\n"}
{"name":"SymAlg.instSubsingleton","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝ : Subsingleton α\n⊢ Subsingleton (SymAlg α)","decl":"instance [Subsingleton α] : Subsingleton αˢʸᵐ :=\n  unsym_injective.subsingleton\n\n"}
{"name":"SymAlg.instIsEmpty","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝ : IsEmpty α\n⊢ IsEmpty (SymAlg α)","decl":"instance [IsEmpty α] : IsEmpty αˢʸᵐ :=\n  Function.isEmpty unsym\n\n"}
{"name":"SymAlg.sym_zero","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝ : Zero α\n⊢ Eq (SymAlg.sym 0) 0","decl":"@[to_additive (attr := simp)]\ntheorem sym_one [One α] : sym (1 : α) = 1 :=\n  rfl\n\n"}
{"name":"SymAlg.sym_one","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝ : One α\n⊢ Eq (SymAlg.sym 1) 1","decl":"@[to_additive (attr := simp)]\ntheorem sym_one [One α] : sym (1 : α) = 1 :=\n  rfl\n\n"}
{"name":"SymAlg.unsym_zero","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝ : Zero α\n⊢ Eq (SymAlg.unsym 0) 0","decl":"@[to_additive (attr := simp)]\ntheorem unsym_one [One α] : unsym (1 : αˢʸᵐ) = 1 :=\n  rfl\n\n"}
{"name":"SymAlg.unsym_one","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝ : One α\n⊢ Eq (SymAlg.unsym 1) 1","decl":"@[to_additive (attr := simp)]\ntheorem unsym_one [One α] : unsym (1 : αˢʸᵐ) = 1 :=\n  rfl\n\n"}
{"name":"SymAlg.sym_add","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝ : Add α\na b : α\n⊢ Eq (SymAlg.sym (HAdd.hAdd a b)) (HAdd.hAdd (SymAlg.sym a) (SymAlg.sym b))","decl":"@[simp]\ntheorem sym_add [Add α] (a b : α) : sym (a + b) = sym a + sym b :=\n  rfl\n\n"}
{"name":"SymAlg.unsym_add","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝ : Add α\na b : SymAlg α\n⊢ Eq (SymAlg.unsym (HAdd.hAdd a b)) (HAdd.hAdd (SymAlg.unsym a) (SymAlg.unsym b))","decl":"@[simp]\ntheorem unsym_add [Add α] (a b : αˢʸᵐ) : unsym (a + b) = unsym a + unsym b :=\n  rfl\n\n"}
{"name":"SymAlg.sym_sub","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝ : Sub α\na b : α\n⊢ Eq (SymAlg.sym (HSub.hSub a b)) (HSub.hSub (SymAlg.sym a) (SymAlg.sym b))","decl":"@[simp]\ntheorem sym_sub [Sub α] (a b : α) : sym (a - b) = sym a - sym b :=\n  rfl\n\n"}
{"name":"SymAlg.unsym_sub","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝ : Sub α\na b : SymAlg α\n⊢ Eq (SymAlg.unsym (HSub.hSub a b)) (HSub.hSub (SymAlg.unsym a) (SymAlg.unsym b))","decl":"@[simp]\ntheorem unsym_sub [Sub α] (a b : αˢʸᵐ) : unsym (a - b) = unsym a - unsym b :=\n  rfl\n\n"}
{"name":"SymAlg.sym_neg","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝ : Neg α\na : α\n⊢ Eq (SymAlg.sym (Neg.neg a)) (Neg.neg (SymAlg.sym a))","decl":"@[simp]\ntheorem sym_neg [Neg α] (a : α) : sym (-a) = -sym a :=\n  rfl\n\n"}
{"name":"SymAlg.unsym_neg","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝ : Neg α\na : SymAlg α\n⊢ Eq (SymAlg.unsym (Neg.neg a)) (Neg.neg (SymAlg.unsym a))","decl":"@[simp]\ntheorem unsym_neg [Neg α] (a : αˢʸᵐ) : unsym (-a) = -unsym a :=\n  rfl\n\n"}
{"name":"SymAlg.mul_def","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝⁴ : Add α\ninst✝³ : Mul α\ninst✝² : One α\ninst✝¹ : OfNat α 2\ninst✝ : Invertible 2\na b : SymAlg α\n⊢ Eq (HMul.hMul a b) (SymAlg.sym (HMul.hMul (Invertible.invOf 2) (HAdd.hAdd (HMul.hMul (SymAlg.unsym a) (SymAlg.unsym b)) (HMul.hMul (SymAlg.unsym b) (SymAlg.unsym a)))))","decl":"theorem mul_def [Add α] [Mul α] [One α] [OfNat α 2] [Invertible (2 : α)] (a b : αˢʸᵐ) :\n    a * b = sym (⅟ 2 * (unsym a * unsym b + unsym b * unsym a)) := rfl\n\n"}
{"name":"SymAlg.unsym_mul","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝⁴ : Mul α\ninst✝³ : Add α\ninst✝² : One α\ninst✝¹ : OfNat α 2\ninst✝ : Invertible 2\na b : SymAlg α\n⊢ Eq (SymAlg.unsym (HMul.hMul a b)) (HMul.hMul (Invertible.invOf 2) (HAdd.hAdd (HMul.hMul (SymAlg.unsym a) (SymAlg.unsym b)) (HMul.hMul (SymAlg.unsym b) (SymAlg.unsym a))))","decl":"theorem unsym_mul [Mul α] [Add α] [One α] [OfNat α 2] [Invertible (2 : α)] (a b : αˢʸᵐ) :\n    unsym (a * b) = ⅟ 2 * (unsym a * unsym b + unsym b * unsym a) := rfl\n\n"}
{"name":"SymAlg.sym_mul_sym","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝⁴ : Mul α\ninst✝³ : Add α\ninst✝² : One α\ninst✝¹ : OfNat α 2\ninst✝ : Invertible 2\na b : α\n⊢ Eq (HMul.hMul (SymAlg.sym a) (SymAlg.sym b)) (SymAlg.sym (HMul.hMul (Invertible.invOf 2) (HAdd.hAdd (HMul.hMul a b) (HMul.hMul b a))))","decl":"theorem sym_mul_sym [Mul α] [Add α] [One α] [OfNat α 2] [Invertible (2 : α)] (a b : α) :\n    sym a * sym b = sym (⅟ 2 * (a * b + b * a)) :=\n  rfl\n\n"}
{"name":"SymAlg.sym_inv","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝ : Inv α\na : α\n⊢ Eq (SymAlg.sym (Inv.inv a)) (Inv.inv (SymAlg.sym a))","decl":"set_option linter.existingAttributeWarning false in\n@[simp, to_additive existing]\ntheorem sym_inv [Inv α] (a : α) : sym a⁻¹ = (sym a)⁻¹ :=\n  rfl\n\n"}
{"name":"SymAlg.unsym_inv","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝ : Inv α\na : SymAlg α\n⊢ Eq (SymAlg.unsym (Inv.inv a)) (Inv.inv (SymAlg.unsym a))","decl":"set_option linter.existingAttributeWarning false in\n@[simp, to_additive existing]\ntheorem unsym_inv [Inv α] (a : αˢʸᵐ) : unsym a⁻¹ = (unsym a)⁻¹ :=\n  rfl\n\n"}
{"name":"SymAlg.sym_smul","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\nR : Type u_2\ninst✝ : SMul R α\nc : R\na : α\n⊢ Eq (SymAlg.sym (HSMul.hSMul c a)) (HSMul.hSMul c (SymAlg.sym a))","decl":"@[simp]\ntheorem sym_smul {R : Type*} [SMul R α] (c : R) (a : α) : sym (c • a) = c • sym a :=\n  rfl\n\n"}
{"name":"SymAlg.unsym_smul","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\nR : Type u_2\ninst✝ : SMul R α\nc : R\na : SymAlg α\n⊢ Eq (SymAlg.unsym (HSMul.hSMul c a)) (HSMul.hSMul c (SymAlg.unsym a))","decl":"@[simp]\ntheorem unsym_smul {R : Type*} [SMul R α] (c : R) (a : αˢʸᵐ) : unsym (c • a) = c • unsym a :=\n  rfl\n\n"}
{"name":"SymAlg.unsym_eq_one_iff","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝ : One α\na : SymAlg α\n⊢ Iff (Eq (SymAlg.unsym a) 1) (Eq a 1)","decl":"@[to_additive (attr := simp)]\ntheorem unsym_eq_one_iff [One α] (a : αˢʸᵐ) : unsym a = 1 ↔ a = 1 :=\n  unsym_injective.eq_iff' rfl\n\n"}
{"name":"SymAlg.unsym_eq_zero_iff","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝ : Zero α\na : SymAlg α\n⊢ Iff (Eq (SymAlg.unsym a) 0) (Eq a 0)","decl":"@[to_additive (attr := simp)]\ntheorem unsym_eq_one_iff [One α] (a : αˢʸᵐ) : unsym a = 1 ↔ a = 1 :=\n  unsym_injective.eq_iff' rfl\n\n"}
{"name":"SymAlg.sym_eq_one_iff","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝ : One α\na : α\n⊢ Iff (Eq (SymAlg.sym a) 1) (Eq a 1)","decl":"@[to_additive (attr := simp)]\ntheorem sym_eq_one_iff [One α] (a : α) : sym a = 1 ↔ a = 1 :=\n  sym_injective.eq_iff' rfl\n\n"}
{"name":"SymAlg.sym_eq_zero_iff","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝ : Zero α\na : α\n⊢ Iff (Eq (SymAlg.sym a) 0) (Eq a 0)","decl":"@[to_additive (attr := simp)]\ntheorem sym_eq_one_iff [One α] (a : α) : sym a = 1 ↔ a = 1 :=\n  sym_injective.eq_iff' rfl\n\n"}
{"name":"SymAlg.unsym_ne_zero_iff","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝ : Zero α\na : SymAlg α\n⊢ Iff (Ne (SymAlg.unsym a) 0) (Ne a 0)","decl":"@[to_additive]\ntheorem unsym_ne_one_iff [One α] (a : αˢʸᵐ) : unsym a ≠ (1 : α) ↔ a ≠ (1 : αˢʸᵐ) :=\n  not_congr <| unsym_eq_one_iff a\n\n"}
{"name":"SymAlg.unsym_ne_one_iff","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝ : One α\na : SymAlg α\n⊢ Iff (Ne (SymAlg.unsym a) 1) (Ne a 1)","decl":"@[to_additive]\ntheorem unsym_ne_one_iff [One α] (a : αˢʸᵐ) : unsym a ≠ (1 : α) ↔ a ≠ (1 : αˢʸᵐ) :=\n  not_congr <| unsym_eq_one_iff a\n\n"}
{"name":"SymAlg.sym_ne_one_iff","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝ : One α\na : α\n⊢ Iff (Ne (SymAlg.sym a) 1) (Ne a 1)","decl":"@[to_additive]\ntheorem sym_ne_one_iff [One α] (a : α) : sym a ≠ (1 : αˢʸᵐ) ↔ a ≠ (1 : α) :=\n  not_congr <| sym_eq_one_iff a\n\n"}
{"name":"SymAlg.sym_ne_zero_iff","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝ : Zero α\na : α\n⊢ Iff (Ne (SymAlg.sym a) 0) (Ne a 0)","decl":"@[to_additive]\ntheorem sym_ne_one_iff [One α] (a : α) : sym a ≠ (1 : αˢʸᵐ) ↔ a ≠ (1 : α) :=\n  not_congr <| sym_eq_one_iff a\n\n"}
{"name":"SymAlg.invOf_sym","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝³ : Mul α\ninst✝² : AddMonoidWithOne α\ninst✝¹ : Invertible 2\na : α\ninst✝ : Invertible a\n⊢ Eq (Invertible.invOf (SymAlg.sym a)) (SymAlg.sym (Invertible.invOf a))","decl":"@[simp]\ntheorem invOf_sym [Mul α] [AddMonoidWithOne α] [Invertible (2 : α)] (a : α) [Invertible a] :\n    ⅟ (sym a) = sym (⅟ a) :=\n  rfl\n\n"}
{"name":"SymAlg.unsym_mul_self","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝¹ : Semiring α\ninst✝ : Invertible 2\na : SymAlg α\n⊢ Eq (SymAlg.unsym (HMul.hMul a a)) (HMul.hMul (SymAlg.unsym a) (SymAlg.unsym a))","decl":"theorem unsym_mul_self [Semiring α] [Invertible (2 : α)] (a : αˢʸᵐ) :\n    unsym (a * a) = unsym a * unsym a := by\n  rw [mul_def, unsym_sym, ← two_mul, invOf_mul_cancel_left]\n\n"}
{"name":"SymAlg.sym_mul_self","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝¹ : Semiring α\ninst✝ : Invertible 2\na : α\n⊢ Eq (SymAlg.sym (HMul.hMul a a)) (HMul.hMul (SymAlg.sym a) (SymAlg.sym a))","decl":"theorem sym_mul_self [Semiring α] [Invertible (2 : α)] (a : α) : sym (a * a) = sym a * sym a := by\n  rw [sym_mul_sym, ← two_mul, invOf_mul_cancel_left]\n\n"}
{"name":"SymAlg.mul_comm","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝⁴ : Mul α\ninst✝³ : AddCommSemigroup α\ninst✝² : One α\ninst✝¹ : OfNat α 2\ninst✝ : Invertible 2\na b : SymAlg α\n⊢ Eq (HMul.hMul a b) (HMul.hMul b a)","decl":"theorem mul_comm [Mul α] [AddCommSemigroup α] [One α] [OfNat α 2] [Invertible (2 : α)]\n    (a b : αˢʸᵐ) :\n    a * b = b * a := by rw [mul_def, mul_def, add_comm]\n\n"}
{"name":"SymAlg.instIsCommJordan","module":"Mathlib.Algebra.Symmetrized","initialProofState":"α : Type u_1\ninst✝¹ : Ring α\ninst✝ : Invertible 2\n⊢ IsCommJordan (SymAlg α)","decl":"instance [Ring α] [Invertible (2 : α)] : IsCommJordan αˢʸᵐ where\n  lmul_comm_rmul_rmul a b := by\n    have commute_half_left := fun a : α => by\n      -- Porting note: mathlib3 used `bit0_left`\n      have := (Commute.one_left a).add_left (Commute.one_left a)\n      rw [one_add_one_eq_two] at this\n      exact this.invOf_left.eq\n\n    -- Porting note: introduced `calc` block to make more robust\n    calc a * b * (a * a)\n      _ = sym (⅟2 * ⅟2 * (unsym a * unsym b * unsym (a * a) +\n          unsym b * unsym a * unsym (a * a) +\n          unsym (a * a) * unsym a * unsym b +\n          unsym (a * a) * unsym b * unsym a)) := ?_\n      _ = sym (⅟ 2 * (unsym a *\n          unsym (sym (⅟ 2 * (unsym b * unsym (a * a) + unsym (a * a) * unsym b))) +\n          unsym (sym (⅟ 2 * (unsym b * unsym (a * a) + unsym (a * a) * unsym b))) * unsym a)) := ?_\n      _ = a * (b * (a * a)) := ?_\n\n    -- Rearrange LHS\n    · rw [mul_def, mul_def a b, unsym_sym, ← mul_assoc, ← commute_half_left (unsym (a * a)),\n        mul_assoc, mul_assoc, ← mul_add, ← mul_assoc, add_mul, mul_add (unsym (a * a)),\n        ← add_assoc, ← mul_assoc, ← mul_assoc]\n\n    · rw [unsym_sym, sym_inj, ← mul_assoc, ← commute_half_left (unsym a), mul_assoc (⅟ 2) (unsym a),\n        mul_assoc (⅟ 2) _ (unsym a), ← mul_add, ← mul_assoc]\n      conv_rhs => rw [mul_add (unsym a)]\n      rw [add_mul, ← add_assoc, ← mul_assoc, ← mul_assoc]\n      rw [unsym_mul_self]\n      rw [← mul_assoc, ← mul_assoc, ← mul_assoc, ← mul_assoc, ← sub_eq_zero, ← mul_sub]\n      convert mul_zero (⅟ (2 : α) * ⅟ (2 : α))\n      rw [add_sub_add_right_eq_sub, add_assoc, add_assoc, add_sub_add_left_eq_sub, add_comm,\n        add_sub_add_right_eq_sub, sub_eq_zero]\n\n    -- Rearrange RHS\n    · rw [← mul_def, ← mul_def]\n\n"}
