{"name":"PUnit.smul_eq","module":"Mathlib.Algebra.PUnitInstances.Module","initialProofState":"R : Type u_3\ny : PUnit.{u_4 + 1}\nr : R\n⊢ Eq (HSMul.hSMul r y) PUnit.unit","decl":"@[to_additive (attr := simp)]\ntheorem smul_eq {R : Type*} (y : PUnit) (r : R) : r • y = unit :=\n  rfl\n\n"}
{"name":"PUnit.vadd_eq","module":"Mathlib.Algebra.PUnitInstances.Module","initialProofState":"R : Type u_3\ny : PUnit.{u_4 + 1}\nr : R\n⊢ Eq (HVAdd.hVAdd r y) PUnit.unit","decl":"@[to_additive (attr := simp)]\ntheorem smul_eq {R : Type*} (y : PUnit) (r : R) : r • y = unit :=\n  rfl\n\n"}
{"name":"PUnit.instIsCentralScalar","module":"Mathlib.Algebra.PUnitInstances.Module","initialProofState":"R : Type u_1\n⊢ IsCentralScalar R PUnit.{u_3 + 1}","decl":"@[to_additive]\ninstance : IsCentralScalar R PUnit :=\n  ⟨fun _ _ => rfl⟩\n\n"}
{"name":"PUnit.instIsCentralVAdd","module":"Mathlib.Algebra.PUnitInstances.Module","initialProofState":"R : Type u_1\n⊢ IsCentralVAdd R PUnit.{u_3 + 1}","decl":"@[to_additive]\ninstance : IsCentralScalar R PUnit :=\n  ⟨fun _ _ => rfl⟩\n\n"}
{"name":"PUnit.instSMulCommClass","module":"Mathlib.Algebra.PUnitInstances.Module","initialProofState":"R : Type u_1\nS : Type u_2\n⊢ SMulCommClass R S PUnit.{u_3 + 1}","decl":"@[to_additive]\ninstance : SMulCommClass R S PUnit :=\n  ⟨fun _ _ _ => rfl⟩\n\n"}
{"name":"PUnit.instVAddCommClass","module":"Mathlib.Algebra.PUnitInstances.Module","initialProofState":"R : Type u_1\nS : Type u_2\n⊢ VAddCommClass R S PUnit.{u_3 + 1}","decl":"@[to_additive]\ninstance : SMulCommClass R S PUnit :=\n  ⟨fun _ _ _ => rfl⟩\n\n"}
{"name":"PUnit.instIsScalarTowerOfSMul","module":"Mathlib.Algebra.PUnitInstances.Module","initialProofState":"R : Type u_1\nS : Type u_2\ninst✝ : SMul R S\n⊢ IsScalarTower R S PUnit.{u_3 + 1}","decl":"@[to_additive]\ninstance instIsScalarTowerOfSMul [SMul R S] : IsScalarTower R S PUnit :=\n  ⟨fun _ _ _ => rfl⟩\n\n"}
{"name":"PUnit.instIsScalarTowerOfVAdd","module":"Mathlib.Algebra.PUnitInstances.Module","initialProofState":"R : Type u_1\nS : Type u_2\ninst✝ : VAdd R S\n⊢ VAddAssocClass R S PUnit.{u_3 + 1}","decl":"@[to_additive]\ninstance instIsScalarTowerOfSMul [SMul R S] : IsScalarTower R S PUnit :=\n  ⟨fun _ _ _ => rfl⟩\n\n"}
{"name":"PUnit.vadd_eq'","module":"Mathlib.Algebra.PUnitInstances.Module","initialProofState":"R : Type u_1\nr : PUnit.{u_3 + 1}\na : R\n⊢ Eq (HVAdd.hVAdd r a) a","decl":"/-- The one-element type acts trivially on every element. -/\n@[to_additive (attr := simp)]\nlemma smul_eq' (r : PUnit) (a : R) : r • a = a := rfl\n\n"}
{"name":"PUnit.smul_eq'","module":"Mathlib.Algebra.PUnitInstances.Module","initialProofState":"R : Type u_1\nr : PUnit.{u_3 + 1}\na : R\n⊢ Eq (HSMul.hSMul r a) a","decl":"/-- The one-element type acts trivially on every element. -/\n@[to_additive (attr := simp)]\nlemma smul_eq' (r : PUnit) (a : R) : r • a = a := rfl\n\n"}
{"name":"PUnit.instSMulCommClass_1","module":"Mathlib.Algebra.PUnitInstances.Module","initialProofState":"R : Type u_1\nS : Type u_2\ninst✝ : SMul R S\n⊢ SMulCommClass PUnit.{u_3 + 1} R S","decl":"@[to_additive] instance [SMul R S] : SMulCommClass PUnit R S := ⟨by simp⟩\n"}
{"name":"PUnit.instVAddCommClass_1","module":"Mathlib.Algebra.PUnitInstances.Module","initialProofState":"R : Type u_1\nS : Type u_2\ninst✝ : VAdd R S\n⊢ VAddCommClass PUnit.{u_3 + 1} R S","decl":"@[to_additive] instance [SMul R S] : SMulCommClass PUnit R S := ⟨by simp⟩\n"}
{"name":"PUnit.instIsScalarTower","module":"Mathlib.Algebra.PUnitInstances.Module","initialProofState":"R : Type u_1\nS : Type u_2\ninst✝ : SMul R S\n⊢ IsScalarTower PUnit.{u_3 + 1} R S","decl":"instance [SMul R S] : IsScalarTower PUnit R S := ⟨by simp⟩\n\n"}
