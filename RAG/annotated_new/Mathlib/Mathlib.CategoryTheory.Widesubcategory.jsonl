{"name":"CategoryTheory.InducedWideCategory.category_comp_coe","module":"Mathlib.CategoryTheory.Widesubcategory","initialProofState":"C : Type u‚ÇÅ\nD : Type u‚ÇÇ\ninst‚úù¬π : CategoryTheory.Category.{v‚ÇÅ, u‚ÇÇ} D\nF : C ‚Üí D\nP : CategoryTheory.MorphismProperty D\ninst‚úù : P.IsMultiplicative\nx‚úù¬≤ x‚úù¬π x‚úù : CategoryTheory.InducedWideCategory D F P\nf : Quiver.Hom x‚úù¬≤ x‚úù¬π\ng : Quiver.Hom x‚úù¬π x‚úù\n‚ä¢ Eq (‚Üë(CategoryTheory.CategoryStruct.comp f g)) (CategoryTheory.CategoryStruct.comp ‚Üëf ‚Üëg)","decl":"@[simps!]\ninstance InducedWideCategory.category :\n    Category (InducedWideCategory D F P) where\n  Hom X Y := {f : F X ‚ü∂ F Y | P f}\n  id X := ‚ü®ùüô (F X), P.id_mem (F X)‚ü©\n  comp {_ _ _} f g := ‚ü®f.1 ‚â´ g.1, P.comp_mem _ _ f.2 g.2‚ü©\n\n"}
{"name":"CategoryTheory.InducedWideCategory.category_id_coe","module":"Mathlib.CategoryTheory.Widesubcategory","initialProofState":"C : Type u‚ÇÅ\nD : Type u‚ÇÇ\ninst‚úù¬π : CategoryTheory.Category.{v‚ÇÅ, u‚ÇÇ} D\nF : C ‚Üí D\nP : CategoryTheory.MorphismProperty D\ninst‚úù : P.IsMultiplicative\nX : CategoryTheory.InducedWideCategory D F P\n‚ä¢ Eq (‚Üë(CategoryTheory.CategoryStruct.id X)) (CategoryTheory.CategoryStruct.id (F X))","decl":"@[simps!]\ninstance InducedWideCategory.category :\n    Category (InducedWideCategory D F P) where\n  Hom X Y := {f : F X ‚ü∂ F Y | P f}\n  id X := ‚ü®ùüô (F X), P.id_mem (F X)‚ü©\n  comp {_ _ _} f g := ‚ü®f.1 ‚â´ g.1, P.comp_mem _ _ f.2 g.2‚ü©\n\n"}
{"name":"CategoryTheory.wideInducedFunctor_obj","module":"Mathlib.CategoryTheory.Widesubcategory","initialProofState":"C : Type u‚ÇÅ\nD : Type u‚ÇÇ\ninst‚úù¬π : CategoryTheory.Category.{v‚ÇÅ, u‚ÇÇ} D\nF : C ‚Üí D\nP : CategoryTheory.MorphismProperty D\ninst‚úù : P.IsMultiplicative\na‚úù : C\n‚ä¢ Eq ((CategoryTheory.wideInducedFunctor F P).obj a‚úù) (F a‚úù)","decl":"/-- The forgetful functor from an induced wide category to the original category. -/\n@[simps]\ndef wideInducedFunctor : InducedWideCategory D F P ‚•§ D where\n  obj := F\n  map {_ _} f := f.1\n\n"}
{"name":"CategoryTheory.wideInducedFunctor_map","module":"Mathlib.CategoryTheory.Widesubcategory","initialProofState":"C : Type u‚ÇÅ\nD : Type u‚ÇÇ\ninst‚úù¬π : CategoryTheory.Category.{v‚ÇÅ, u‚ÇÇ} D\nF : C ‚Üí D\nP : CategoryTheory.MorphismProperty D\ninst‚úù : P.IsMultiplicative\nx‚úù¬π x‚úù : CategoryTheory.InducedWideCategory D F P\nf : Quiver.Hom x‚úù¬π x‚úù\n‚ä¢ Eq ((CategoryTheory.wideInducedFunctor F P).map f) ‚Üëf","decl":"/-- The forgetful functor from an induced wide category to the original category. -/\n@[simps]\ndef wideInducedFunctor : InducedWideCategory D F P ‚•§ D where\n  obj := F\n  map {_ _} f := f.1\n\n"}
{"name":"CategoryTheory.InducedWideCategory.faithful","module":"Mathlib.CategoryTheory.Widesubcategory","initialProofState":"C : Type u‚ÇÅ\nD : Type u‚ÇÇ\ninst‚úù¬π : CategoryTheory.Category.{v‚ÇÅ, u‚ÇÇ} D\nF : C ‚Üí D\nP : CategoryTheory.MorphismProperty D\ninst‚úù : P.IsMultiplicative\n‚ä¢ (CategoryTheory.wideInducedFunctor F P).Faithful","decl":"/-- The induced functor `wideInducedFunctor F P : InducedWideCategory D F P ‚•§ D`\nis faithful. -/\ninstance InducedWideCategory.faithful : (wideInducedFunctor F P).Faithful where\n  map_injective {X Y} f g eq := by\n    cases f\n    cases g\n    aesop\n\n"}
{"name":"CategoryTheory.WideSubcategory.mk.injEq","module":"Mathlib.CategoryTheory.Widesubcategory","initialProofState":"C : Type u‚ÇÅ\ninst‚úù¬π : CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ} C\n_P : CategoryTheory.MorphismProperty C\ninst‚úù : _P.IsMultiplicative\nobj‚úù obj : C\n‚ä¢ Eq (Eq { obj := obj‚úù } { obj := obj }) (Eq obj‚úù obj)","decl":"/--\nStructure for wide subcategories. Objects ignore the morphism property.\n-/\n@[ext, nolint unusedArguments]\nstructure WideSubcategory (_P : MorphismProperty C) [IsMultiplicative _P] where\n  /-- The category of which this is a wide subcategory -/\n  obj : C\n\n"}
{"name":"CategoryTheory.WideSubcategory.mk.inj","module":"Mathlib.CategoryTheory.Widesubcategory","initialProofState":"C : Type u‚ÇÅ\ninst‚úù¬π : CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ} C\n_P : CategoryTheory.MorphismProperty C\ninst‚úù : _P.IsMultiplicative\nobj‚úù obj : C\nx‚úù : Eq { obj := obj‚úù } { obj := obj }\n‚ä¢ Eq obj‚úù obj","decl":"/--\nStructure for wide subcategories. Objects ignore the morphism property.\n-/\n@[ext, nolint unusedArguments]\nstructure WideSubcategory (_P : MorphismProperty C) [IsMultiplicative _P] where\n  /-- The category of which this is a wide subcategory -/\n  obj : C\n\n"}
{"name":"CategoryTheory.WideSubcategory.mk.sizeOf_spec","module":"Mathlib.CategoryTheory.Widesubcategory","initialProofState":"C : Type u‚ÇÅ\ninst‚úù¬≥ : CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ} C\n_P : CategoryTheory.MorphismProperty C\ninst‚úù¬≤ : _P.IsMultiplicative\ninst‚úù¬π : SizeOf C\ninst‚úù : ‚¶ÉX Y : C‚¶Ñ ‚Üí (x : Quiver.Hom X Y) ‚Üí SizeOf (_P x)\nobj : C\n‚ä¢ Eq (SizeOf.sizeOf { obj := obj }) (HAdd.hAdd 1 (SizeOf.sizeOf obj))","decl":"/--\nStructure for wide subcategories. Objects ignore the morphism property.\n-/\n@[ext, nolint unusedArguments]\nstructure WideSubcategory (_P : MorphismProperty C) [IsMultiplicative _P] where\n  /-- The category of which this is a wide subcategory -/\n  obj : C\n\n"}
{"name":"CategoryTheory.WideSubcategory.ext_iff","module":"Mathlib.CategoryTheory.Widesubcategory","initialProofState":"C : Type u‚ÇÅ\ninst‚úù¬π : CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ} C\n_P : CategoryTheory.MorphismProperty C\ninst‚úù : _P.IsMultiplicative\nx y : CategoryTheory.WideSubcategory _P\n‚ä¢ Iff (Eq x y) (Eq x.obj y.obj)","decl":"/--\nStructure for wide subcategories. Objects ignore the morphism property.\n-/\n@[ext, nolint unusedArguments]\nstructure WideSubcategory (_P : MorphismProperty C) [IsMultiplicative _P] where\n  /-- The category of which this is a wide subcategory -/\n  obj : C\n\n"}
{"name":"CategoryTheory.WideSubcategory.ext","module":"Mathlib.CategoryTheory.Widesubcategory","initialProofState":"C : Type u‚ÇÅ\ninst‚úù¬π : CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ} C\n_P : CategoryTheory.MorphismProperty C\ninst‚úù : _P.IsMultiplicative\nx y : CategoryTheory.WideSubcategory _P\nobj : Eq x.obj y.obj\n‚ä¢ Eq x y","decl":"/--\nStructure for wide subcategories. Objects ignore the morphism property.\n-/\n@[ext, nolint unusedArguments]\nstructure WideSubcategory (_P : MorphismProperty C) [IsMultiplicative _P] where\n  /-- The category of which this is a wide subcategory -/\n  obj : C\n\n"}
{"name":"CategoryTheory.WideSubcategory.id_def","module":"Mathlib.CategoryTheory.Widesubcategory","initialProofState":"C : Type u‚ÇÅ\ninst‚úù¬π : CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ} C\nP : CategoryTheory.MorphismProperty C\ninst‚úù : P.IsMultiplicative\nX : CategoryTheory.WideSubcategory P\n‚ä¢ Eq (‚Üë(CategoryTheory.CategoryStruct.id X)) (CategoryTheory.CategoryStruct.id X.obj)","decl":"@[simp]\nlemma WideSubcategory.id_def (X : WideSubcategory P) : (CategoryStruct.id X).1 = ùüô X.obj := rfl\n\n"}
{"name":"CategoryTheory.WideSubcategory.comp_def","module":"Mathlib.CategoryTheory.Widesubcategory","initialProofState":"C : Type u‚ÇÅ\ninst‚úù¬π : CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ} C\nP : CategoryTheory.MorphismProperty C\ninst‚úù : P.IsMultiplicative\nX Y Z : CategoryTheory.WideSubcategory P\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\n‚ä¢ Eq (‚Üë(CategoryTheory.CategoryStruct.comp f g)) (CategoryTheory.CategoryStruct.comp ‚Üëf ‚Üëg)","decl":"@[simp]\nlemma WideSubcategory.comp_def {X Y Z : WideSubcategory P} (f : X ‚ü∂ Y) (g : Y ‚ü∂ Z) :\n    (f ‚â´ g).1 = (f.1 ‚â´ g.1 : X.obj ‚ü∂ Z.obj) := rfl\n\n"}
{"name":"CategoryTheory.wideSubcategoryInclusion.obj","module":"Mathlib.CategoryTheory.Widesubcategory","initialProofState":"C : Type u‚ÇÅ\ninst‚úù¬π : CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ} C\nP : CategoryTheory.MorphismProperty C\ninst‚úù : P.IsMultiplicative\nX : CategoryTheory.WideSubcategory P\n‚ä¢ Eq ((CategoryTheory.wideSubcategoryInclusion P).obj X) X.obj","decl":"@[simp]\ntheorem wideSubcategoryInclusion.obj (X) : (wideSubcategoryInclusion P).obj X = X.obj :=\n  rfl\n\n"}
{"name":"CategoryTheory.wideSubcategoryInclusion.map","module":"Mathlib.CategoryTheory.Widesubcategory","initialProofState":"C : Type u‚ÇÅ\ninst‚úù¬π : CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ} C\nP : CategoryTheory.MorphismProperty C\ninst‚úù : P.IsMultiplicative\nX Y : CategoryTheory.WideSubcategory P\nf : Quiver.Hom X Y\n‚ä¢ Eq ((CategoryTheory.wideSubcategoryInclusion P).map f) ‚Üëf","decl":"@[simp]\ntheorem wideSubcategoryInclusion.map {X Y} {f : X ‚ü∂ Y} :\n    (wideSubcategoryInclusion P).map f = f.1 :=\n  rfl\n\n"}
{"name":"CategoryTheory.wideSubcategory.faithful","module":"Mathlib.CategoryTheory.Widesubcategory","initialProofState":"C : Type u‚ÇÅ\ninst‚úù¬π : CategoryTheory.Category.{v‚ÇÅ, u‚ÇÅ} C\nP : CategoryTheory.MorphismProperty C\ninst‚úù : P.IsMultiplicative\n‚ä¢ (CategoryTheory.wideSubcategoryInclusion P).Faithful","decl":"/-- The inclusion of a wide subcategory is faithful. -/\ninstance wideSubcategory.faithful : (wideSubcategoryInclusion P).Faithful :=\n  inferInstanceAs (wideInducedFunctor WideSubcategory.obj P).Faithful\n\n"}
