{"name":"LinearMap.tendsto_birkhoffAverage_of_ker_subset_closure","module":"Mathlib.Analysis.InnerProductSpace.MeanErgodic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : RCLike 𝕜\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\nf : LinearMap (RingHom.id 𝕜) E E\nhf : LipschitzWith 1 ⇑f\ng : ContinuousLinearMap (RingHom.id 𝕜) E (Subtype fun x => Membership.mem (LinearMap.eqLocus f 1) x)\nhg_proj : ∀ (x : Subtype fun x => Membership.mem (LinearMap.eqLocus f 1) x), Eq (g ↑x) x\nhg_ker : HasSubset.Subset (↑(LinearMap.ker g)) (closure ↑(LinearMap.range (HSub.hSub f 1)))\nx : E\n⊢ Filter.Tendsto (fun x_1 => birkhoffAverage 𝕜 (⇑f) id x_1 x) Filter.atTop (nhds ↑(g x))","decl":"/-- **Von Neumann Mean Ergodic Theorem**, a version for a normed space.\n\nLet `f : E → E` be a contracting linear self-map of a normed space.\nLet `S` be the subspace of fixed points of `f`.\nLet `g : E → S` be a continuous linear projection, `g|_S=id`.\nIf the range of `f - id` is dense in the kernel of `g`,\nthen for each `x`, the Birkhoff averages\n```\nbirkhoffAverage 𝕜 f id N x = (N : 𝕜)⁻¹ • ∑ n ∈ Finset.range N, f^[n] x\n```\nconverge to `g x` as `N → ∞`.\n\nUsually, this fact is not formulated as a separate lemma.\nI chose to do it in order to isolate parts of the proof that do not rely\non the inner product space structure.\n-/\ntheorem LinearMap.tendsto_birkhoffAverage_of_ker_subset_closure [NormedSpace 𝕜 E]\n    (f : E →ₗ[𝕜] E) (hf : LipschitzWith 1 f) (g : E →L[𝕜] LinearMap.eqLocus f 1)\n    (hg_proj : ∀ x : LinearMap.eqLocus f 1, g x = x)\n    (hg_ker : (LinearMap.ker g : Set E) ⊆ closure (LinearMap.range (f - 1))) (x : E) :\n    Tendsto (birkhoffAverage 𝕜 f _root_.id · x) atTop (𝓝 (g x)) := by\n  /- Any point can be represented as a sum of `y ∈ LinearMap.ker g` and a fixed point `z`. -/\n  obtain ⟨y, hy, z, hz, rfl⟩ : ∃ y, g y = 0 ∧ ∃ z, IsFixedPt f z ∧ x = y + z :=\n    ⟨x - g x, by simp [hg_proj], g x, (g x).2, by simp⟩\n  /- For a fixed point, the theorem is trivial,\n  so it suffices to prove it for `y ∈ LinearMap.ker g`. -/\n  suffices Tendsto (birkhoffAverage 𝕜 f _root_.id · y) atTop (𝓝 0) by\n    have hgz : g z = z := congr_arg Subtype.val (hg_proj ⟨z, hz⟩)\n    simpa [hy, hgz, birkhoffAverage, birkhoffSum, Finset.sum_add_distrib, smul_add]\n      using this.add (hz.tendsto_birkhoffAverage 𝕜 _root_.id)\n  /- By continuity, it suffices to prove the theorem on a dense subset of `LinearMap.ker g`.\n  By assumption, `LinearMap.range (f - 1)` is dense in the kernel of `g`,\n  so it suffices to prove the theorem for `y = f x - x`. -/\n  have : IsClosed {x | Tendsto (birkhoffAverage 𝕜 f _root_.id · x) atTop (𝓝 0)} :=\n    isClosed_setOf_tendsto_birkhoffAverage 𝕜 hf uniformContinuous_id continuous_const\n  refine closure_minimal (Set.forall_mem_range.2 fun x ↦ ?_) this (hg_ker hy)\n  /- Finally, for `y = f x - x` the average is equal to the difference between averages\n  along the orbits of `f x` and `x`, and most of the terms cancel. -/\n  have : IsBounded (Set.range (_root_.id <| f^[·] x)) :=\n    isBounded_iff_forall_norm_le.2 ⟨‖x‖, Set.forall_mem_range.2 fun n ↦ by\n      have H : f^[n] 0 = 0 := iterate_map_zero (f : E →+ E) n\n      simpa [H] using (hf.iterate n).dist_le_mul x 0⟩\n  have H : ∀ n x y, f^[n] (x - y) = f^[n] x - f^[n] y := iterate_map_sub (f : E →+ E)\n  simpa [birkhoffAverage, birkhoffSum, Finset.sum_sub_distrib, smul_sub, H]\n    using tendsto_birkhoffAverage_apply_sub_birkhoffAverage 𝕜 this\n\n"}
{"name":"ContinuousLinearMap.tendsto_birkhoffAverage_orthogonalProjection","module":"Mathlib.Analysis.InnerProductSpace.MeanErgodic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : RCLike 𝕜\ninst✝² : NormedAddCommGroup E\ninst✝¹ : InnerProductSpace 𝕜 E\ninst✝ : CompleteSpace E\nf : ContinuousLinearMap (RingHom.id 𝕜) E E\nhf : LE.le (Norm.norm f) 1\nx : E\n⊢ Filter.Tendsto (fun x_1 => birkhoffAverage 𝕜 (⇑f) id x_1 x) Filter.atTop (nhds ↑((orthogonalProjection (LinearMap.eqLocus f 1)) x))","decl":"/-- **Von Neumann Mean Ergodic Theorem** for an operator in a Hilbert space.\nFor a contracting continuous linear self-map `f : E →L[𝕜] E` of a Hilbert space, `‖f‖ ≤ 1`,\nthe Birkhoff averages\n```\nbirkhoffAverage 𝕜 f id N x = (N : 𝕜)⁻¹ • ∑ n ∈ Finset.range N, f^[n] x\n```\nconverge to the orthogonal projection of `x` to the subspace of fixed points of `f`. -/\ntheorem ContinuousLinearMap.tendsto_birkhoffAverage_orthogonalProjection (f : E →L[𝕜] E)\n    (hf : ‖f‖ ≤ 1) (x : E) :\n    Tendsto (birkhoffAverage 𝕜 f _root_.id · x) atTop\n      (𝓝 <| orthogonalProjection (LinearMap.eqLocus f 1) x) := by\n  /- Due to the previous theorem, it suffices to verify\n  that the range of `f - 1` is dense in the orthogonal complement\n  to the submodule of fixed points of `f`. -/\n  apply (f : E →ₗ[𝕜] E).tendsto_birkhoffAverage_of_ker_subset_closure (f.lipschitz.weaken hf)\n  · exact orthogonalProjection_mem_subspace_eq_self (K := LinearMap.eqLocus f 1)\n  · clear x\n    /- In other words, we need to verify that any vector that is orthogonal to the range of `f - 1`\n    is a fixed point of `f`. -/\n    rw [ker_orthogonalProjection, ← Submodule.topologicalClosure_coe, SetLike.coe_subset_coe,\n      ← Submodule.orthogonal_orthogonal_eq_closure]\n    /- To verify this, we verify `‖f x‖ ≤ ‖x‖` (because `‖f‖ ≤ 1`) and `⟪f x, x⟫ = ‖x‖²`. -/\n    refine Submodule.orthogonal_le fun x hx ↦ eq_of_norm_le_re_inner_eq_norm_sq (𝕜 := 𝕜) ?_ ?_\n    · simpa using f.le_of_opNorm_le hf x\n    · have : ∀ y, ⟪f y, x⟫ = ⟪y, x⟫ := by\n        simpa [Submodule.mem_orthogonal, inner_sub_left, sub_eq_zero] using hx\n      simp [this, ← norm_sq_eq_inner]\n"}
