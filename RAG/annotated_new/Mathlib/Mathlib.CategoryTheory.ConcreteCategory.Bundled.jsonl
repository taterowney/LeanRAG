{"name":"CategoryTheory.Bundled.mk.sizeOf_spec","module":"Mathlib.CategoryTheory.ConcreteCategory.Bundled","initialProofState":"c : Type u → Type v\ninst✝ : (a : Type u) → SizeOf (c a)\nα : Type u\nstr : autoParam (c α) _auto✝\n⊢ Eq (SizeOf.sizeOf { α := α, str := str }) (HAdd.hAdd (HAdd.hAdd 1 (SizeOf.sizeOf α)) (SizeOf.sizeOf str))","decl":"/-- `Bundled` is a type bundled with a type class instance for that type. Only\nthe type class is exposed as a parameter. -/\nstructure Bundled (c : Type u → Type v) : Type max (u + 1) v where\n  /-- The underlying type of the bundled type -/\n  α : Type u\n  /-- The corresponding instance of the bundled type class -/\n  str : c α := by infer_instance\n\n"}
{"name":"CategoryTheory.Bundled.mk.inj","module":"Mathlib.CategoryTheory.ConcreteCategory.Bundled","initialProofState":"c : Type u → Type v\nα✝ : Type u\nstr✝ : autoParam (c α✝) _auto✝\nα : Type u\nstr : autoParam (c α) _auto✝\nx✝ : Eq { α := α✝, str := str✝ } { α := α, str := str }\n⊢ And (Eq α✝ α) (HEq str✝ str)","decl":"/-- `Bundled` is a type bundled with a type class instance for that type. Only\nthe type class is exposed as a parameter. -/\nstructure Bundled (c : Type u → Type v) : Type max (u + 1) v where\n  /-- The underlying type of the bundled type -/\n  α : Type u\n  /-- The corresponding instance of the bundled type class -/\n  str : c α := by infer_instance\n\n"}
{"name":"CategoryTheory.Bundled.mk.injEq","module":"Mathlib.CategoryTheory.ConcreteCategory.Bundled","initialProofState":"c : Type u → Type v\nα✝ : Type u\nstr✝ : autoParam (c α✝) _auto✝\nα : Type u\nstr : autoParam (c α) _auto✝\n⊢ Eq (Eq { α := α✝, str := str✝ } { α := α, str := str }) (And (Eq α✝ α) (HEq str✝ str))","decl":"/-- `Bundled` is a type bundled with a type class instance for that type. Only\nthe type class is exposed as a parameter. -/\nstructure Bundled (c : Type u → Type v) : Type max (u + 1) v where\n  /-- The underlying type of the bundled type -/\n  α : Type u\n  /-- The corresponding instance of the bundled type class -/\n  str : c α := by infer_instance\n\n"}
{"name":"CategoryTheory.Bundled.coe_mk","module":"Mathlib.CategoryTheory.ConcreteCategory.Bundled","initialProofState":"c : Type u → Type v\nα : Type u\nstr : c α\n⊢ Eq (↑{ α := α, str := str }) α","decl":"theorem coe_mk (α) (str) : (@Bundled.mk c α str : Type u) = α :=\n  rfl\n\n"}
