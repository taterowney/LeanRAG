{"name":"csSup_mem_of_not_isSuccPrelimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"α : Type u_2\ninst✝ : ConditionallyCompleteLinearOrder α\ns : Set α\nhne : s.Nonempty\nhbdd : BddAbove s\nhlim : Not (Order.IsSuccPrelimit (SupSet.sSup s))\n⊢ Membership.mem s (SupSet.sSup s)","decl":"lemma csSup_mem_of_not_isSuccPrelimit\n    (hne : s.Nonempty) (hbdd : BddAbove s) (hlim : ¬ IsSuccPrelimit (sSup s)) : sSup s ∈ s := by\n  obtain ⟨y, hy⟩ := not_forall_not.mp hlim\n  obtain ⟨i, his, hi⟩ := exists_lt_of_lt_csSup hne hy.lt\n  exact eq_of_le_of_not_lt (le_csSup hbdd his) (hy.2 hi) ▸ his\n\n"}
{"name":"csSup_mem_of_not_isSuccLimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"α : Type u_2\ninst✝ : ConditionallyCompleteLinearOrder α\ns : Set α\nhne : s.Nonempty\nhbdd : BddAbove s\nhlim : Not (Order.IsSuccPrelimit (SupSet.sSup s))\n⊢ Membership.mem s (SupSet.sSup s)","decl":"@[deprecated csSup_mem_of_not_isSuccPrelimit (since := \"2024-09-05\")]\nalias csSup_mem_of_not_isSuccLimit := csSup_mem_of_not_isSuccPrelimit\n\n"}
{"name":"csInf_mem_of_not_isPredPrelimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"α : Type u_2\ninst✝ : ConditionallyCompleteLinearOrder α\ns : Set α\nhne : s.Nonempty\nhbdd : BddBelow s\nhlim : Not (Order.IsPredPrelimit (InfSet.sInf s))\n⊢ Membership.mem s (InfSet.sInf s)","decl":"lemma csInf_mem_of_not_isPredPrelimit\n    (hne : s.Nonempty) (hbdd : BddBelow s) (hlim : ¬ IsPredPrelimit (sInf s)) : sInf s ∈ s := by\n  obtain ⟨y, hy⟩ := not_forall_not.mp hlim\n  obtain ⟨i, his, hi⟩ := exists_lt_of_csInf_lt hne hy.lt\n  exact eq_of_le_of_not_lt (csInf_le hbdd his) (hy.2 · hi) ▸ his\n\n"}
{"name":"csInf_mem_of_not_isPredLimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"α : Type u_2\ninst✝ : ConditionallyCompleteLinearOrder α\ns : Set α\nhne : s.Nonempty\nhbdd : BddBelow s\nhlim : Not (Order.IsPredPrelimit (InfSet.sInf s))\n⊢ Membership.mem s (InfSet.sInf s)","decl":"@[deprecated csInf_mem_of_not_isPredPrelimit (since := \"2024-09-05\")]\nalias csInf_mem_of_not_isPredLimit := csInf_mem_of_not_isPredPrelimit\n\n"}
{"name":"exists_eq_ciSup_of_not_isSuccPrelimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝¹ : ConditionallyCompleteLinearOrder α\ninst✝ : Nonempty ι\nf : ι → α\nhf : BddAbove (Set.range f)\nhf' : Not (Order.IsSuccPrelimit (iSup fun i => f i))\n⊢ Exists fun i => Eq (f i) (iSup fun i => f i)","decl":"lemma exists_eq_ciSup_of_not_isSuccPrelimit\n    (hf : BddAbove (range f)) (hf' : ¬ IsSuccPrelimit (⨆ i, f i)) : ∃ i, f i = ⨆ i, f i :=\n  csSup_mem_of_not_isSuccPrelimit (range_nonempty f) hf hf'\n\n"}
{"name":"exists_eq_ciSup_of_not_isSuccLimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝¹ : ConditionallyCompleteLinearOrder α\ninst✝ : Nonempty ι\nf : ι → α\nhf : BddAbove (Set.range f)\nhf' : Not (Order.IsSuccPrelimit (iSup fun i => f i))\n⊢ Exists fun i => Eq (f i) (iSup fun i => f i)","decl":"@[deprecated exists_eq_ciSup_of_not_isSuccPrelimit (since := \"2024-09-05\")]\nalias exists_eq_ciSup_of_not_isSuccLimit := exists_eq_ciSup_of_not_isSuccPrelimit\n\n"}
{"name":"exists_eq_ciInf_of_not_isPredPrelimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝¹ : ConditionallyCompleteLinearOrder α\ninst✝ : Nonempty ι\nf : ι → α\nhf : BddBelow (Set.range f)\nhf' : Not (Order.IsPredPrelimit (iInf fun i => f i))\n⊢ Exists fun i => Eq (f i) (iInf fun i => f i)","decl":"lemma exists_eq_ciInf_of_not_isPredPrelimit\n    (hf : BddBelow (range f)) (hf' : ¬ IsPredPrelimit (⨅ i, f i)) : ∃ i, f i = ⨅ i, f i :=\n  csInf_mem_of_not_isPredPrelimit (range_nonempty f) hf hf'\n\n"}
{"name":"exists_eq_ciInf_of_not_isPredLimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝¹ : ConditionallyCompleteLinearOrder α\ninst✝ : Nonempty ι\nf : ι → α\nhf : BddBelow (Set.range f)\nhf' : Not (Order.IsPredPrelimit (iInf fun i => f i))\n⊢ Exists fun i => Eq (f i) (iInf fun i => f i)","decl":"@[deprecated exists_eq_ciInf_of_not_isPredPrelimit (since := \"2024-09-05\")]\nalias exists_eq_ciInf_of_not_isPredLimit := exists_eq_ciInf_of_not_isPredPrelimit\n\n"}
{"name":"IsLUB.mem_of_nonempty_of_not_isSuccPrelimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"α : Type u_2\ninst✝ : ConditionallyCompleteLinearOrder α\ns : Set α\nx : α\nhs : IsLUB s x\nhne : s.Nonempty\nhx : Not (Order.IsSuccPrelimit x)\n⊢ Membership.mem s x","decl":"lemma IsLUB.mem_of_nonempty_of_not_isSuccPrelimit\n    (hs : IsLUB s x) (hne : s.Nonempty) (hx : ¬ IsSuccPrelimit x) : x ∈ s :=\n  hs.csSup_eq hne ▸ csSup_mem_of_not_isSuccPrelimit hne hs.bddAbove (hs.csSup_eq hne ▸ hx)\n\n"}
{"name":"IsLUB.mem_of_nonempty_of_not_isSuccLimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"α : Type u_2\ninst✝ : ConditionallyCompleteLinearOrder α\ns : Set α\nx : α\nhs : IsLUB s x\nhne : s.Nonempty\nhx : Not (Order.IsSuccPrelimit x)\n⊢ Membership.mem s x","decl":"@[deprecated IsLUB.mem_of_nonempty_of_not_isSuccPrelimit (since := \"2024-09-05\")]\nalias IsLUB.mem_of_nonempty_of_not_isSuccLimit := IsLUB.mem_of_nonempty_of_not_isSuccPrelimit\n\n"}
{"name":"IsGLB.mem_of_nonempty_of_not_isPredPrelimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"α : Type u_2\ninst✝ : ConditionallyCompleteLinearOrder α\ns : Set α\nx : α\nhs : IsGLB s x\nhne : s.Nonempty\nhx : Not (Order.IsPredPrelimit x)\n⊢ Membership.mem s x","decl":"lemma IsGLB.mem_of_nonempty_of_not_isPredPrelimit\n    (hs : IsGLB s x) (hne : s.Nonempty) (hx : ¬ IsPredPrelimit x) : x ∈ s :=\n  hs.csInf_eq hne ▸ csInf_mem_of_not_isPredPrelimit hne hs.bddBelow (hs.csInf_eq hne ▸ hx)\n\n"}
{"name":"IsGLB.mem_of_nonempty_of_not_isPredLimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"α : Type u_2\ninst✝ : ConditionallyCompleteLinearOrder α\ns : Set α\nx : α\nhs : IsGLB s x\nhne : s.Nonempty\nhx : Not (Order.IsPredPrelimit x)\n⊢ Membership.mem s x","decl":"@[deprecated IsGLB.mem_of_nonempty_of_not_isPredPrelimit (since := \"2024-09-05\")]\nalias IsGLB.mem_of_nonempty_of_not_isPredLimit := IsGLB.mem_of_nonempty_of_not_isPredPrelimit\n\n"}
{"name":"IsLUB.exists_of_nonempty_of_not_isSuccPrelimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝¹ : ConditionallyCompleteLinearOrder α\ninst✝ : Nonempty ι\nf : ι → α\nx : α\nhf : IsLUB (Set.range f) x\nhx : Not (Order.IsSuccPrelimit x)\n⊢ Exists fun i => Eq (f i) x","decl":"lemma IsLUB.exists_of_nonempty_of_not_isSuccPrelimit\n    (hf : IsLUB (range f) x) (hx : ¬ IsSuccPrelimit x) : ∃ i, f i = x :=\n  hf.mem_of_nonempty_of_not_isSuccPrelimit (range_nonempty f) hx\n\n"}
{"name":"IsLUB.exists_of_nonempty_of_not_isSuccLimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝¹ : ConditionallyCompleteLinearOrder α\ninst✝ : Nonempty ι\nf : ι → α\nx : α\nhf : IsLUB (Set.range f) x\nhx : Not (Order.IsSuccPrelimit x)\n⊢ Exists fun i => Eq (f i) x","decl":"@[deprecated IsLUB.exists_of_nonempty_of_not_isSuccPrelimit (since := \"2024-09-05\")]\nalias IsLUB.exists_of_nonempty_of_not_isSuccLimit := IsLUB.exists_of_nonempty_of_not_isSuccPrelimit\n\n"}
{"name":"IsGLB.exists_of_nonempty_of_not_isPredPrelimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝¹ : ConditionallyCompleteLinearOrder α\ninst✝ : Nonempty ι\nf : ι → α\nx : α\nhf : IsGLB (Set.range f) x\nhx : Not (Order.IsPredPrelimit x)\n⊢ Exists fun i => Eq (f i) x","decl":"lemma IsGLB.exists_of_nonempty_of_not_isPredPrelimit\n    (hf : IsGLB (range f) x) (hx : ¬ IsPredPrelimit x) : ∃ i, f i = x :=\n  hf.mem_of_nonempty_of_not_isPredPrelimit (range_nonempty f) hx\n\n"}
{"name":"IsGLB.exists_of_nonempty_of_not_isPredLimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝¹ : ConditionallyCompleteLinearOrder α\ninst✝ : Nonempty ι\nf : ι → α\nx : α\nhf : IsGLB (Set.range f) x\nhx : Not (Order.IsPredPrelimit x)\n⊢ Exists fun i => Eq (f i) x","decl":"@[deprecated IsGLB.exists_of_nonempty_of_not_isPredPrelimit (since := \"2024-09-05\")]\nalias IsGLB.exists_of_nonempty_of_not_isPredLimit := IsGLB.exists_of_nonempty_of_not_isPredPrelimit\n\n"}
{"name":"csSup_mem_of_not_isSuccPrelimit'","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"α : Type u_2\ninst✝ : ConditionallyCompleteLinearOrderBot α\ns : Set α\nhbdd : BddAbove s\nhlim : Not (Order.IsSuccPrelimit (SupSet.sSup s))\n⊢ Membership.mem s (SupSet.sSup s)","decl":"/-- See `csSup_mem_of_not_isSuccPrelimit` for the `ConditionallyCompleteLinearOrder` version. -/\nlemma csSup_mem_of_not_isSuccPrelimit'\n    (hbdd : BddAbove s) (hlim : ¬ IsSuccPrelimit (sSup s)) : sSup s ∈ s := by\n  obtain rfl | hs := s.eq_empty_or_nonempty\n  · simp [isSuccPrelimit_bot] at hlim\n  · exact csSup_mem_of_not_isSuccPrelimit hs hbdd hlim\n\n"}
{"name":"csSup_mem_of_not_isSuccLimit'","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"α : Type u_2\ninst✝ : ConditionallyCompleteLinearOrderBot α\ns : Set α\nhbdd : BddAbove s\nhlim : Not (Order.IsSuccPrelimit (SupSet.sSup s))\n⊢ Membership.mem s (SupSet.sSup s)","decl":"@[deprecated csSup_mem_of_not_isSuccPrelimit' (since := \"2024-09-05\")]\nalias csSup_mem_of_not_isSuccLimit' := csSup_mem_of_not_isSuccPrelimit'\n\n"}
{"name":"exists_eq_ciSup_of_not_isSuccPrelimit'","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝ : ConditionallyCompleteLinearOrderBot α\nf : ι → α\nhf : BddAbove (Set.range f)\nhf' : Not (Order.IsSuccPrelimit (iSup fun i => f i))\n⊢ Exists fun i => Eq (f i) (iSup fun i => f i)","decl":"/-- See `exists_eq_ciSup_of_not_isSuccPrelimit` for the\n`ConditionallyCompleteLinearOrder` version. -/\nlemma exists_eq_ciSup_of_not_isSuccPrelimit'\n    (hf : BddAbove (range f)) (hf' : ¬ IsSuccPrelimit (⨆ i, f i)) : ∃ i, f i = ⨆ i, f i :=\n  csSup_mem_of_not_isSuccPrelimit' hf hf'\n\n"}
{"name":"exists_eq_ciSup_of_not_isSuccLimit'","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝ : ConditionallyCompleteLinearOrderBot α\nf : ι → α\nhf : BddAbove (Set.range f)\nhf' : Not (Order.IsSuccPrelimit (iSup fun i => f i))\n⊢ Exists fun i => Eq (f i) (iSup fun i => f i)","decl":"@[deprecated exists_eq_ciSup_of_not_isSuccPrelimit' (since := \"2024-09-05\")]\nalias exists_eq_ciSup_of_not_isSuccLimit' := exists_eq_ciSup_of_not_isSuccPrelimit'\n\n"}
{"name":"IsLUB.mem_of_not_isSuccPrelimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"α : Type u_2\ninst✝ : ConditionallyCompleteLinearOrderBot α\ns : Set α\nx : α\nhs : IsLUB s x\nhx : Not (Order.IsSuccPrelimit x)\n⊢ Membership.mem s x","decl":"lemma IsLUB.mem_of_not_isSuccPrelimit (hs : IsLUB s x) (hx : ¬ IsSuccPrelimit x) : x ∈ s := by\n  obtain rfl | hs' := s.eq_empty_or_nonempty\n  · simp [show x = ⊥ by simpa using hs, isSuccPrelimit_bot] at hx\n  · exact hs.mem_of_nonempty_of_not_isSuccPrelimit hs' hx\n\n"}
{"name":"IsLUB.mem_of_not_isSuccLimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"α : Type u_2\ninst✝ : ConditionallyCompleteLinearOrderBot α\ns : Set α\nx : α\nhs : IsLUB s x\nhx : Not (Order.IsSuccPrelimit x)\n⊢ Membership.mem s x","decl":"@[deprecated IsLUB.mem_of_not_isSuccPrelimit (since := \"2024-09-05\")]\nalias IsLUB.mem_of_not_isSuccLimit := IsLUB.mem_of_not_isSuccPrelimit\n\n"}
{"name":"IsLUB.exists_of_not_isSuccPrelimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝ : ConditionallyCompleteLinearOrderBot α\nf : ι → α\nx : α\nhf : IsLUB (Set.range f) x\nhx : Not (Order.IsSuccPrelimit x)\n⊢ Exists fun i => Eq (f i) x","decl":"lemma IsLUB.exists_of_not_isSuccPrelimit (hf : IsLUB (range f) x) (hx : ¬ IsSuccPrelimit x) :\n    ∃ i, f i = x :=\n  hf.mem_of_not_isSuccPrelimit hx\n\n"}
{"name":"IsLUB.exists_of_not_isSuccLimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝ : ConditionallyCompleteLinearOrderBot α\nf : ι → α\nx : α\nhf : IsLUB (Set.range f) x\nhx : Not (Order.IsSuccPrelimit x)\n⊢ Exists fun i => Eq (f i) x","decl":"@[deprecated IsLUB.exists_of_not_isSuccPrelimit (since := \"2024-09-05\")]\nalias IsLUB.exists_of_not_isSuccLimit := IsLUB.exists_of_not_isSuccPrelimit\n\n"}
{"name":"Order.IsSuccPrelimit.sSup_Iio","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"α : Type u_2\ninst✝ : ConditionallyCompleteLinearOrderBot α\nx : α\nh : Order.IsSuccPrelimit x\n⊢ Eq (SupSet.sSup (Set.Iio x)) x","decl":"theorem Order.IsSuccPrelimit.sSup_Iio (h : IsSuccPrelimit x) : sSup (Iio x) = x := by\n  obtain rfl | hx := eq_bot_or_bot_lt x\n  · simp\n  · exact h.isLUB_Iio.csSup_eq ⟨⊥, hx⟩\n\n"}
{"name":"Order.IsSuccPrelimit.iSup_Iio","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"α : Type u_2\ninst✝ : ConditionallyCompleteLinearOrderBot α\nx : α\nh : Order.IsSuccPrelimit x\n⊢ Eq (iSup fun a => ↑a) x","decl":"theorem Order.IsSuccPrelimit.iSup_Iio (h : IsSuccPrelimit x) : ⨆ a : Iio x, a.1 = x := by\n  rw [← sSup_eq_iSup', h.sSup_Iio]\n\n"}
{"name":"Order.IsSuccLimit.sSup_Iio","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"α : Type u_2\ninst✝ : ConditionallyCompleteLinearOrderBot α\nx : α\nh : Order.IsSuccLimit x\n⊢ Eq (SupSet.sSup (Set.Iio x)) x","decl":"theorem Order.IsSuccLimit.sSup_Iio (h : IsSuccLimit x) : sSup (Iio x) = x :=\n  h.isSuccPrelimit.sSup_Iio\n\n"}
{"name":"Order.IsSuccLimit.iSup_Iio","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"α : Type u_2\ninst✝ : ConditionallyCompleteLinearOrderBot α\nx : α\nh : Order.IsSuccLimit x\n⊢ Eq (iSup fun a => ↑a) x","decl":"theorem Order.IsSuccLimit.iSup_Iio (h : IsSuccLimit x) : ⨆ a : Iio x, a.1 = x :=\n  h.isSuccPrelimit.iSup_Iio\n\n"}
{"name":"sSup_Iio_eq_self_iff_isSuccPrelimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"α : Type u_2\ninst✝ : ConditionallyCompleteLinearOrderBot α\nx : α\n⊢ Iff (Eq (SupSet.sSup (Set.Iio x)) x) (Order.IsSuccPrelimit x)","decl":"theorem sSup_Iio_eq_self_iff_isSuccPrelimit : sSup (Iio x) = x ↔ IsSuccPrelimit x := by\n  refine ⟨fun h ↦ ?_, IsSuccPrelimit.sSup_Iio⟩\n  by_contra hx\n  rw [← h] at hx\n  simpa [h] using csSup_mem_of_not_isSuccPrelimit' bddAbove_Iio hx\n\n"}
{"name":"iSup_Iio_eq_self_iff_isSuccPrelimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"α : Type u_2\ninst✝ : ConditionallyCompleteLinearOrderBot α\nx : α\n⊢ Iff (Eq (iSup fun a => ↑a) x) (Order.IsSuccPrelimit x)","decl":"theorem iSup_Iio_eq_self_iff_isSuccPrelimit : ⨆ a : Iio x, a.1 = x ↔ IsSuccPrelimit x := by\n  rw [← sSup_eq_iSup', sSup_Iio_eq_self_iff_isSuccPrelimit]\n\n"}
{"name":"iSup_succ","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"α : Type u_2\ninst✝¹ : ConditionallyCompleteLinearOrderBot α\ninst✝ : SuccOrder α\nx : α\n⊢ Eq (iSup fun a => Order.succ ↑a) x","decl":"theorem iSup_succ [SuccOrder α] (x : α) : ⨆ a : Iio x, succ a.1 = x := by\n  have H : BddAbove (range fun a : Iio x ↦ succ a.1) :=\n    ⟨succ x, by simp +contextual [upperBounds, succ_le_succ, le_of_lt]⟩\n  apply le_antisymm _ (le_of_forall_lt fun y hy ↦ ?_)\n  · rw [ciSup_le_iff' H]\n    exact fun a ↦ succ_le_of_lt a.2\n  · rw [lt_ciSup_iff' H]\n    exact ⟨⟨y, hy⟩, lt_succ_of_not_isMax hy.not_isMax⟩\n\n"}
{"name":"sSup_mem_of_not_isSuccPrelimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"α : Type u_2\ninst✝ : CompleteLinearOrder α\ns : Set α\nhlim : Not (Order.IsSuccPrelimit (SupSet.sSup s))\n⊢ Membership.mem s (SupSet.sSup s)","decl":"lemma sSup_mem_of_not_isSuccPrelimit (hlim : ¬ IsSuccPrelimit (sSup s)) : sSup s ∈ s := by\n  obtain ⟨y, hy⟩ := not_forall_not.mp hlim\n  obtain ⟨i, his, hi⟩ := lt_sSup_iff.mp hy.lt\n  exact eq_of_le_of_not_lt (le_sSup his) (hy.2 hi) ▸ his\n\n"}
{"name":"sSup_mem_of_not_isSuccLimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"α : Type u_2\ninst✝ : CompleteLinearOrder α\ns : Set α\nhlim : Not (Order.IsSuccPrelimit (SupSet.sSup s))\n⊢ Membership.mem s (SupSet.sSup s)","decl":"@[deprecated sSup_mem_of_not_isSuccPrelimit (since := \"2024-09-05\")]\nalias sSup_mem_of_not_isSuccLimit := sSup_mem_of_not_isSuccPrelimit\n\n"}
{"name":"sInf_mem_of_not_isPredPrelimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"α : Type u_2\ninst✝ : CompleteLinearOrder α\ns : Set α\nhlim : Not (Order.IsPredPrelimit (InfSet.sInf s))\n⊢ Membership.mem s (InfSet.sInf s)","decl":"lemma sInf_mem_of_not_isPredPrelimit (hlim : ¬ IsPredPrelimit (sInf s)) : sInf s ∈ s := by\n  obtain ⟨y, hy⟩ := not_forall_not.mp hlim\n  obtain ⟨i, his, hi⟩ := sInf_lt_iff.mp hy.lt\n  exact eq_of_le_of_not_lt (sInf_le his) (hy.2 · hi) ▸ his\n\n"}
{"name":"sInf_mem_of_not_isPredLimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"α : Type u_2\ninst✝ : CompleteLinearOrder α\ns : Set α\nhlim : Not (Order.IsPredPrelimit (InfSet.sInf s))\n⊢ Membership.mem s (InfSet.sInf s)","decl":"@[deprecated sInf_mem_of_not_isPredPrelimit (since := \"2024-09-05\")]\nalias sInf_mem_of_not_isPredLimit := sInf_mem_of_not_isPredPrelimit\n\n"}
{"name":"exists_eq_iSup_of_not_isSuccPrelimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝ : CompleteLinearOrder α\nf : ι → α\nhf : Not (Order.IsSuccPrelimit (iSup fun i => f i))\n⊢ Exists fun i => Eq (f i) (iSup fun i => f i)","decl":"lemma exists_eq_iSup_of_not_isSuccPrelimit (hf : ¬ IsSuccPrelimit (⨆ i, f i)) :\n    ∃ i, f i = ⨆ i, f i :=\n  sSup_mem_of_not_isSuccPrelimit hf\n\n"}
{"name":"exists_eq_iSup_of_not_isSuccLimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝ : CompleteLinearOrder α\nf : ι → α\nhf : Not (Order.IsSuccPrelimit (iSup fun i => f i))\n⊢ Exists fun i => Eq (f i) (iSup fun i => f i)","decl":"@[deprecated exists_eq_iSup_of_not_isSuccPrelimit (since := \"2024-09-05\")]\nalias exists_eq_iSup_of_not_isSuccLimit := exists_eq_iSup_of_not_isSuccPrelimit\n\n"}
{"name":"exists_eq_iInf_of_not_isPredPrelimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝ : CompleteLinearOrder α\nf : ι → α\nhf : Not (Order.IsPredPrelimit (iInf fun i => f i))\n⊢ Exists fun i => Eq (f i) (iInf fun i => f i)","decl":"lemma exists_eq_iInf_of_not_isPredPrelimit (hf : ¬ IsPredPrelimit (⨅ i, f i)) :\n    ∃ i, f i = ⨅ i, f i :=\n  sInf_mem_of_not_isPredPrelimit hf\n\n"}
{"name":"exists_eq_iInf_of_not_isPredLimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝ : CompleteLinearOrder α\nf : ι → α\nhf : Not (Order.IsPredPrelimit (iInf fun i => f i))\n⊢ Exists fun i => Eq (f i) (iInf fun i => f i)","decl":"@[deprecated exists_eq_iInf_of_not_isPredPrelimit (since := \"2024-09-05\")]\nalias exists_eq_iInf_of_not_isPredLimit := exists_eq_iInf_of_not_isPredPrelimit\n\n"}
{"name":"IsGLB.mem_of_not_isPredPrelimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"α : Type u_2\ninst✝ : CompleteLinearOrder α\ns : Set α\nx : α\nhs : IsGLB s x\nhx : Not (Order.IsPredPrelimit x)\n⊢ Membership.mem s x","decl":"lemma IsGLB.mem_of_not_isPredPrelimit (hs : IsGLB s x) (hx : ¬ IsPredPrelimit x) : x ∈ s :=\n  hs.sInf_eq ▸ sInf_mem_of_not_isPredPrelimit (hs.sInf_eq ▸ hx)\n\n"}
{"name":"IsGLB.mem_of_not_isPredLimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"α : Type u_2\ninst✝ : CompleteLinearOrder α\ns : Set α\nx : α\nhs : IsGLB s x\nhx : Not (Order.IsPredPrelimit x)\n⊢ Membership.mem s x","decl":"@[deprecated IsGLB.mem_of_not_isPredPrelimit (since := \"2024-09-05\")]\nalias IsGLB.mem_of_not_isPredLimit := IsGLB.mem_of_not_isPredPrelimit\n\n"}
{"name":"IsGLB.exists_of_not_isPredPrelimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝ : CompleteLinearOrder α\nf : ι → α\nx : α\nhf : IsGLB (Set.range f) x\nhx : Not (Order.IsPredPrelimit x)\n⊢ Exists fun i => Eq (f i) x","decl":"lemma IsGLB.exists_of_not_isPredPrelimit (hf : IsGLB (range f) x) (hx : ¬ IsPredPrelimit x) :\n    ∃ i, f i = x :=\n  hf.mem_of_not_isPredPrelimit hx\n\n"}
{"name":"IsGLB.exists_of_not_isPredLimit","module":"Mathlib.Order.SuccPred.CompleteLinearOrder","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝ : CompleteLinearOrder α\nf : ι → α\nx : α\nhf : IsGLB (Set.range f) x\nhx : Not (Order.IsPredPrelimit x)\n⊢ Exists fun i => Eq (f i) x","decl":"@[deprecated IsGLB.exists_of_not_isPredPrelimit (since := \"2024-09-05\")]\nalias IsGLB.exists_of_not_isPredLimit := IsGLB.exists_of_not_isPredPrelimit\n\n"}
