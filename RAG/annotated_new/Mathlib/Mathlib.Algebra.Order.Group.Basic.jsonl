{"name":"zpow_right_strictMono","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedCommGroup α\na : α\nha : LT.lt 1 a\n⊢ StrictMono fun n => HPow.hPow a n","decl":"@[to_additive zsmul_left_strictMono]\nlemma zpow_right_strictMono (ha : 1 < a) : StrictMono fun n : ℤ ↦ a ^ n := by\n  refine strictMono_int_of_lt_succ fun n ↦ ?_\n  rw [zpow_add_one]\n  exact lt_mul_of_one_lt_right' (a ^ n) ha\n\n"}
{"name":"zsmul_left_strictMono","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedAddCommGroup α\na : α\nha : LT.lt 0 a\n⊢ StrictMono fun n => HSMul.hSMul n a","decl":"@[to_additive zsmul_left_strictMono]\nlemma zpow_right_strictMono (ha : 1 < a) : StrictMono fun n : ℤ ↦ a ^ n := by\n  refine strictMono_int_of_lt_succ fun n ↦ ?_\n  rw [zpow_add_one]\n  exact lt_mul_of_one_lt_right' (a ^ n) ha\n\n"}
{"name":"zsmul_strictMono_left","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedAddCommGroup α\na : α\nha : LT.lt 0 a\n⊢ StrictMono fun n => HSMul.hSMul n a","decl":"@[deprecated (since := \"2024-09-19\")] alias zsmul_strictMono_left := zsmul_left_strictMono\n\n"}
{"name":"zsmul_pos","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedAddCommGroup α\nn : Int\na : α\nha : LT.lt 0 a\nhn : LT.lt 0 n\n⊢ LT.lt 0 (HSMul.hSMul n a)","decl":"@[to_additive zsmul_pos] lemma one_lt_zpow (ha : 1 < a) (hn : 0 < n) : 1 < a ^ n := by\n  simpa using zpow_right_strictMono ha hn\n\n"}
{"name":"one_lt_zpow","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedCommGroup α\nn : Int\na : α\nha : LT.lt 1 a\nhn : LT.lt 0 n\n⊢ LT.lt 1 (HPow.hPow a n)","decl":"@[to_additive zsmul_pos] lemma one_lt_zpow (ha : 1 < a) (hn : 0 < n) : 1 < a ^ n := by\n  simpa using zpow_right_strictMono ha hn\n\n"}
{"name":"one_lt_zpow'","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedCommGroup α\nn : Int\na : α\nha : LT.lt 1 a\nhn : LT.lt 0 n\n⊢ LT.lt 1 (HPow.hPow a n)","decl":"@[deprecated (since := \"2024-11-13\")] alias one_lt_zpow' := one_lt_zpow\n\n"}
{"name":"zpow_right_strictAnti","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedCommGroup α\na : α\nha : LT.lt a 1\n⊢ StrictAnti fun n => HPow.hPow a n","decl":"@[to_additive zsmul_left_strictAnti]\nlemma zpow_right_strictAnti (ha : a < 1) : StrictAnti fun n : ℤ ↦ a ^ n := by\n  refine strictAnti_int_of_succ_lt fun n ↦ ?_\n  rw [zpow_add_one]\n  exact mul_lt_of_lt_one_right' (a ^ n) ha\n\n"}
{"name":"zsmul_left_strictAnti","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedAddCommGroup α\na : α\nha : LT.lt a 0\n⊢ StrictAnti fun n => HSMul.hSMul n a","decl":"@[to_additive zsmul_left_strictAnti]\nlemma zpow_right_strictAnti (ha : a < 1) : StrictAnti fun n : ℤ ↦ a ^ n := by\n  refine strictAnti_int_of_succ_lt fun n ↦ ?_\n  rw [zpow_add_one]\n  exact mul_lt_of_lt_one_right' (a ^ n) ha\n\n"}
{"name":"zpow_right_inj","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedCommGroup α\na : α\nha : LT.lt 1 a\nm n : Int\n⊢ Iff (Eq (HPow.hPow a m) (HPow.hPow a n)) (Eq m n)","decl":"@[to_additive zsmul_left_inj]\nlemma zpow_right_inj (ha : 1 < a) {m n : ℤ} : a ^ m = a ^ n ↔ m = n :=\n  (zpow_right_strictMono ha).injective.eq_iff\n\n"}
{"name":"zsmul_left_inj","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedAddCommGroup α\na : α\nha : LT.lt 0 a\nm n : Int\n⊢ Iff (Eq (HSMul.hSMul m a) (HSMul.hSMul n a)) (Eq m n)","decl":"@[to_additive zsmul_left_inj]\nlemma zpow_right_inj (ha : 1 < a) {m n : ℤ} : a ^ m = a ^ n ↔ m = n :=\n  (zpow_right_strictMono ha).injective.eq_iff\n\n"}
{"name":"zsmul_left_mono","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedAddCommGroup α\na : α\nha : LE.le 0 a\n⊢ Monotone fun n => HSMul.hSMul n a","decl":"@[to_additive zsmul_left_mono]\nlemma zpow_right_mono (ha : 1 ≤ a) : Monotone fun n : ℤ ↦ a ^ n := by\n  refine monotone_int_of_le_succ fun n ↦ ?_\n  rw [zpow_add_one]\n  exact le_mul_of_one_le_right' ha\n\n"}
{"name":"zpow_right_mono","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedCommGroup α\na : α\nha : LE.le 1 a\n⊢ Monotone fun n => HPow.hPow a n","decl":"@[to_additive zsmul_left_mono]\nlemma zpow_right_mono (ha : 1 ≤ a) : Monotone fun n : ℤ ↦ a ^ n := by\n  refine monotone_int_of_le_succ fun n ↦ ?_\n  rw [zpow_add_one]\n  exact le_mul_of_one_le_right' ha\n\n"}
{"name":"zpow_mono_right","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedCommGroup α\na : α\nha : LE.le 1 a\n⊢ Monotone fun n => HPow.hPow a n","decl":"@[deprecated (since := \"2024-11-13\")] alias zpow_mono_right := zpow_right_mono\n\n"}
{"name":"zsmul_le_zsmul_left","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedAddCommGroup α\nm n : Int\na : α\nha : LE.le 0 a\nh : LE.le m n\n⊢ LE.le (HSMul.hSMul m a) (HSMul.hSMul n a)","decl":"@[to_additive (attr := gcongr) zsmul_le_zsmul_left]\nlemma zpow_le_zpow_right (ha : 1 ≤ a) (h : m ≤ n) : a ^ m ≤ a ^ n := zpow_right_mono ha h\n\n"}
{"name":"zpow_le_zpow_right","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedCommGroup α\nm n : Int\na : α\nha : LE.le 1 a\nh : LE.le m n\n⊢ LE.le (HPow.hPow a m) (HPow.hPow a n)","decl":"@[to_additive (attr := gcongr) zsmul_le_zsmul_left]\nlemma zpow_le_zpow_right (ha : 1 ≤ a) (h : m ≤ n) : a ^ m ≤ a ^ n := zpow_right_mono ha h\n\n"}
{"name":"zpow_le_zpow","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedCommGroup α\nm n : Int\na : α\nha : LE.le 1 a\nh : LE.le m n\n⊢ LE.le (HPow.hPow a m) (HPow.hPow a n)","decl":"@[deprecated (since := \"2024-11-13\")] alias zpow_le_zpow := zpow_le_zpow_right\n\n"}
{"name":"zpow_lt_zpow_right","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedCommGroup α\nm n : Int\na : α\nha : LT.lt 1 a\nh : LT.lt m n\n⊢ LT.lt (HPow.hPow a m) (HPow.hPow a n)","decl":"@[to_additive (attr := gcongr) zsmul_lt_zsmul_left]\nlemma zpow_lt_zpow_right (ha : 1 < a) (h : m < n) : a ^ m < a ^ n := zpow_right_strictMono ha h\n\n"}
{"name":"zsmul_lt_zsmul_left","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedAddCommGroup α\nm n : Int\na : α\nha : LT.lt 0 a\nh : LT.lt m n\n⊢ LT.lt (HSMul.hSMul m a) (HSMul.hSMul n a)","decl":"@[to_additive (attr := gcongr) zsmul_lt_zsmul_left]\nlemma zpow_lt_zpow_right (ha : 1 < a) (h : m < n) : a ^ m < a ^ n := zpow_right_strictMono ha h\n\n"}
{"name":"zpow_lt_zpow","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedCommGroup α\nm n : Int\na : α\nha : LT.lt 1 a\nh : LT.lt m n\n⊢ LT.lt (HPow.hPow a m) (HPow.hPow a n)","decl":"@[deprecated (since := \"2024-11-13\")] alias zpow_lt_zpow := zpow_lt_zpow_right\n\n"}
{"name":"zsmul_le_zsmul_iff_left","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedAddCommGroup α\nm n : Int\na : α\nha : LT.lt 0 a\n⊢ Iff (LE.le (HSMul.hSMul m a) (HSMul.hSMul n a)) (LE.le m n)","decl":"@[to_additive zsmul_le_zsmul_iff_left]\nlemma zpow_le_zpow_iff_right (ha : 1 < a) : a ^ m ≤ a ^ n ↔ m ≤ n :=\n  (zpow_right_strictMono ha).le_iff_le\n\n"}
{"name":"zpow_le_zpow_iff_right","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedCommGroup α\nm n : Int\na : α\nha : LT.lt 1 a\n⊢ Iff (LE.le (HPow.hPow a m) (HPow.hPow a n)) (LE.le m n)","decl":"@[to_additive zsmul_le_zsmul_iff_left]\nlemma zpow_le_zpow_iff_right (ha : 1 < a) : a ^ m ≤ a ^ n ↔ m ≤ n :=\n  (zpow_right_strictMono ha).le_iff_le\n\n"}
{"name":"zpow_le_zpow_iff","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedCommGroup α\nm n : Int\na : α\nha : LT.lt 1 a\n⊢ Iff (LE.le (HPow.hPow a m) (HPow.hPow a n)) (LE.le m n)","decl":"@[deprecated (since := \"2024-11-13\")] alias zpow_le_zpow_iff := zpow_le_zpow_iff_right\n\n"}
{"name":"zpow_lt_zpow_iff_right","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedCommGroup α\nm n : Int\na : α\nha : LT.lt 1 a\n⊢ Iff (LT.lt (HPow.hPow a m) (HPow.hPow a n)) (LT.lt m n)","decl":"@[to_additive zsmul_lt_zsmul_iff_left]\nlemma zpow_lt_zpow_iff_right (ha : 1 < a) : a ^ m < a ^ n ↔ m < n :=\n  (zpow_right_strictMono ha).lt_iff_lt\n\n"}
{"name":"zsmul_lt_zsmul_iff_left","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedAddCommGroup α\nm n : Int\na : α\nha : LT.lt 0 a\n⊢ Iff (LT.lt (HSMul.hSMul m a) (HSMul.hSMul n a)) (LT.lt m n)","decl":"@[to_additive zsmul_lt_zsmul_iff_left]\nlemma zpow_lt_zpow_iff_right (ha : 1 < a) : a ^ m < a ^ n ↔ m < n :=\n  (zpow_right_strictMono ha).lt_iff_lt\n\n"}
{"name":"zpow_lt_zpow_iff","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedCommGroup α\nm n : Int\na : α\nha : LT.lt 1 a\n⊢ Iff (LT.lt (HPow.hPow a m) (HPow.hPow a n)) (LT.lt m n)","decl":"@[deprecated (since := \"2024-11-13\")] alias zpow_lt_zpow_iff := zpow_lt_zpow_iff_right\n\n"}
{"name":"zpow_left_strictMono","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedCommGroup α\nn : Int\nhn : LT.lt 0 n\n⊢ StrictMono fun x => HPow.hPow x n","decl":"@[to_additive zsmul_strictMono_right]\nlemma zpow_left_strictMono (hn : 0 < n) : StrictMono ((· ^ n) : α → α) := fun a b hab => by\n  rw [← one_lt_div', ← div_zpow]; exact one_lt_zpow (one_lt_div'.2 hab) hn\n\n"}
{"name":"zsmul_strictMono_right","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedAddCommGroup α\nn : Int\nhn : LT.lt 0 n\n⊢ StrictMono fun x => HSMul.hSMul n x","decl":"@[to_additive zsmul_strictMono_right]\nlemma zpow_left_strictMono (hn : 0 < n) : StrictMono ((· ^ n) : α → α) := fun a b hab => by\n  rw [← one_lt_div', ← div_zpow]; exact one_lt_zpow (one_lt_div'.2 hab) hn\n\n"}
{"name":"zpow_strictMono_left","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedCommGroup α\nn : Int\nhn : LT.lt 0 n\n⊢ StrictMono fun x => HPow.hPow x n","decl":"@[deprecated (since := \"2024-11-13\")] alias zpow_strictMono_left := zpow_left_strictMono\n\n"}
{"name":"zsmul_mono_right","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedAddCommGroup α\nn : Int\nhn : LE.le 0 n\n⊢ Monotone fun x => HSMul.hSMul n x","decl":"@[to_additive zsmul_mono_right]\nlemma zpow_left_mono (hn : 0 ≤ n) : Monotone ((· ^ n) : α → α) := fun a b hab => by\n  rw [← one_le_div', ← div_zpow]; exact one_le_zpow (one_le_div'.2 hab) hn\n\n"}
{"name":"zpow_left_mono","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedCommGroup α\nn : Int\nhn : LE.le 0 n\n⊢ Monotone fun x => HPow.hPow x n","decl":"@[to_additive zsmul_mono_right]\nlemma zpow_left_mono (hn : 0 ≤ n) : Monotone ((· ^ n) : α → α) := fun a b hab => by\n  rw [← one_le_div', ← div_zpow]; exact one_le_zpow (one_le_div'.2 hab) hn\n\n"}
{"name":"zpow_mono_left","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedCommGroup α\nn : Int\nhn : LE.le 0 n\n⊢ Monotone fun x => HPow.hPow x n","decl":"@[deprecated (since := \"2024-11-13\")] alias zpow_mono_left := zpow_left_mono\n\n"}
{"name":"zsmul_le_zsmul_right","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedAddCommGroup α\nn : Int\na b : α\nhn : LE.le 0 n\nh : LE.le a b\n⊢ LE.le (HSMul.hSMul n a) (HSMul.hSMul n b)","decl":"@[to_additive (attr := gcongr) zsmul_le_zsmul_right]\nlemma zpow_le_zpow_left (hn : 0 ≤ n) (h : a ≤ b) : a ^ n ≤ b ^ n := zpow_left_mono α hn h\n\n"}
{"name":"zpow_le_zpow_left","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedCommGroup α\nn : Int\na b : α\nhn : LE.le 0 n\nh : LE.le a b\n⊢ LE.le (HPow.hPow a n) (HPow.hPow b n)","decl":"@[to_additive (attr := gcongr) zsmul_le_zsmul_right]\nlemma zpow_le_zpow_left (hn : 0 ≤ n) (h : a ≤ b) : a ^ n ≤ b ^ n := zpow_left_mono α hn h\n\n"}
{"name":"zpow_le_zpow'","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedCommGroup α\nn : Int\na b : α\nhn : LE.le 0 n\nh : LE.le a b\n⊢ LE.le (HPow.hPow a n) (HPow.hPow b n)","decl":"@[deprecated (since := \"2024-11-13\")] alias zpow_le_zpow' := zpow_le_zpow_left\n\n"}
{"name":"zsmul_lt_zsmul_right","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedAddCommGroup α\nn : Int\na b : α\nhn : LT.lt 0 n\nh : LT.lt a b\n⊢ LT.lt (HSMul.hSMul n a) (HSMul.hSMul n b)","decl":"@[to_additive (attr := gcongr) zsmul_lt_zsmul_right]\nlemma zpow_lt_zpow_left (hn : 0 < n) (h : a < b) : a ^ n < b ^ n := zpow_left_strictMono α hn h\n\n"}
{"name":"zpow_lt_zpow_left","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedCommGroup α\nn : Int\na b : α\nhn : LT.lt 0 n\nh : LT.lt a b\n⊢ LT.lt (HPow.hPow a n) (HPow.hPow b n)","decl":"@[to_additive (attr := gcongr) zsmul_lt_zsmul_right]\nlemma zpow_lt_zpow_left (hn : 0 < n) (h : a < b) : a ^ n < b ^ n := zpow_left_strictMono α hn h\n\n"}
{"name":"zpow_lt_zpow'","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : OrderedCommGroup α\nn : Int\na b : α\nhn : LT.lt 0 n\nh : LT.lt a b\n⊢ LT.lt (HPow.hPow a n) (HPow.hPow b n)","decl":"@[deprecated (since := \"2024-11-13\")] alias zpow_lt_zpow' := zpow_lt_zpow_left\n\n"}
{"name":"zpow_le_zpow_iff_left","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedCommGroup α\nn : Int\na b : α\nhn : LT.lt 0 n\n⊢ Iff (LE.le (HPow.hPow a n) (HPow.hPow b n)) (LE.le a b)","decl":"@[to_additive zsmul_le_zsmul_iff_right]\nlemma zpow_le_zpow_iff_left (hn : 0 < n) : a ^ n ≤ b ^ n ↔ a ≤ b :=\n  (zpow_left_strictMono α hn).le_iff_le\n\n"}
{"name":"zsmul_le_zsmul_iff_right","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedAddCommGroup α\nn : Int\na b : α\nhn : LT.lt 0 n\n⊢ Iff (LE.le (HSMul.hSMul n a) (HSMul.hSMul n b)) (LE.le a b)","decl":"@[to_additive zsmul_le_zsmul_iff_right]\nlemma zpow_le_zpow_iff_left (hn : 0 < n) : a ^ n ≤ b ^ n ↔ a ≤ b :=\n  (zpow_left_strictMono α hn).le_iff_le\n\n"}
{"name":"zpow_le_zpow_iff'","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedCommGroup α\nn : Int\na b : α\nhn : LT.lt 0 n\n⊢ Iff (LE.le (HPow.hPow a n) (HPow.hPow b n)) (LE.le a b)","decl":"@[deprecated (since := \"2024-11-13\")] alias zpow_le_zpow_iff' := zpow_le_zpow_iff_left\n\n"}
{"name":"zpow_lt_zpow_iff_left","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedCommGroup α\nn : Int\na b : α\nhn : LT.lt 0 n\n⊢ Iff (LT.lt (HPow.hPow a n) (HPow.hPow b n)) (LT.lt a b)","decl":"@[to_additive zsmul_lt_zsmul_iff_right]\nlemma zpow_lt_zpow_iff_left (hn : 0 < n) : a ^ n < b ^ n ↔ a < b :=\n  (zpow_left_strictMono α hn).lt_iff_lt\n\n"}
{"name":"zsmul_lt_zsmul_iff_right","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedAddCommGroup α\nn : Int\na b : α\nhn : LT.lt 0 n\n⊢ Iff (LT.lt (HSMul.hSMul n a) (HSMul.hSMul n b)) (LT.lt a b)","decl":"@[to_additive zsmul_lt_zsmul_iff_right]\nlemma zpow_lt_zpow_iff_left (hn : 0 < n) : a ^ n < b ^ n ↔ a < b :=\n  (zpow_left_strictMono α hn).lt_iff_lt\n\n"}
{"name":"zpow_lt_zpow_iff'","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedCommGroup α\nn : Int\na b : α\nhn : LT.lt 0 n\n⊢ Iff (LT.lt (HPow.hPow a n) (HPow.hPow b n)) (LT.lt a b)","decl":"@[deprecated (since := \"2024-11-13\")] alias zpow_lt_zpow_iff' := zpow_lt_zpow_iff_left\n\n"}
{"name":"zsmul_right_injective","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedAddCommGroup α\nn : Int\nhn : Ne n 0\n⊢ Function.Injective fun x => HSMul.hSMul n x","decl":"@[to_additive zsmul_right_injective\n\"See also `smul_right_injective`. TODO: provide a `NoZeroSMulDivisors` instance. We can't do\nthat here because importing that definition would create import cycles.\"]\nlemma zpow_left_injective (hn : n ≠ 0) : Injective ((· ^ n) : α → α) := by\n  obtain hn | hn := hn.lt_or_lt\n  · refine fun a b (hab : a ^ n = b ^ n) ↦\n      (zpow_left_strictMono _ <| Int.neg_pos_of_neg hn).injective ?_\n    rw [zpow_neg, zpow_neg, hab]\n  · exact (zpow_left_strictMono _ hn).injective\n\n"}
{"name":"zpow_left_injective","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedCommGroup α\nn : Int\nhn : Ne n 0\n⊢ Function.Injective fun x => HPow.hPow x n","decl":"@[to_additive zsmul_right_injective\n\"See also `smul_right_injective`. TODO: provide a `NoZeroSMulDivisors` instance. We can't do\nthat here because importing that definition would create import cycles.\"]\nlemma zpow_left_injective (hn : n ≠ 0) : Injective ((· ^ n) : α → α) := by\n  obtain hn | hn := hn.lt_or_lt\n  · refine fun a b (hab : a ^ n = b ^ n) ↦\n      (zpow_left_strictMono _ <| Int.neg_pos_of_neg hn).injective ?_\n    rw [zpow_neg, zpow_neg, hab]\n  · exact (zpow_left_strictMono _ hn).injective\n\n"}
{"name":"zpow_left_inj","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedCommGroup α\nn : Int\na b : α\nhn : Ne n 0\n⊢ Iff (Eq (HPow.hPow a n) (HPow.hPow b n)) (Eq a b)","decl":"@[to_additive zsmul_right_inj]\nlemma zpow_left_inj (hn : n ≠ 0) : a ^ n = b ^ n ↔ a = b := (zpow_left_injective hn).eq_iff\n\n"}
{"name":"zsmul_right_inj","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedAddCommGroup α\nn : Int\na b : α\nhn : Ne n 0\n⊢ Iff (Eq (HSMul.hSMul n a) (HSMul.hSMul n b)) (Eq a b)","decl":"@[to_additive zsmul_right_inj]\nlemma zpow_left_inj (hn : n ≠ 0) : a ^ n = b ^ n ↔ a = b := (zpow_left_injective hn).eq_iff\n\n"}
{"name":"zsmul_eq_zsmul_iff'","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedAddCommGroup α\nn : Int\na b : α\nhn : Ne n 0\n⊢ Iff (Eq (HSMul.hSMul n a) (HSMul.hSMul n b)) (Eq a b)","decl":"/-- Alias of `zpow_left_inj`, for ease of discovery alongside `zsmul_le_zsmul_iff'` and\n`zsmul_lt_zsmul_iff'`. -/\n@[to_additive \"Alias of `zsmul_right_inj`, for ease of discovery alongside `zsmul_le_zsmul_iff'` and\n`zsmul_lt_zsmul_iff'`.\"]\nlemma zpow_eq_zpow_iff' (hn : n ≠ 0) : a ^ n = b ^ n ↔ a = b := zpow_left_inj hn\n\n"}
{"name":"zpow_eq_zpow_iff'","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedCommGroup α\nn : Int\na b : α\nhn : Ne n 0\n⊢ Iff (Eq (HPow.hPow a n) (HPow.hPow b n)) (Eq a b)","decl":"/-- Alias of `zpow_left_inj`, for ease of discovery alongside `zsmul_le_zsmul_iff'` and\n`zsmul_lt_zsmul_iff'`. -/\n@[to_additive \"Alias of `zsmul_right_inj`, for ease of discovery alongside `zsmul_le_zsmul_iff'` and\n`zsmul_lt_zsmul_iff'`.\"]\nlemma zpow_eq_zpow_iff' (hn : n ≠ 0) : a ^ n = b ^ n ↔ a = b := zpow_left_inj hn\n\n"}
{"name":"not_isAddCyclic_of_denselyOrdered","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝² : LinearOrderedAddCommGroup α\ninst✝¹ : DenselyOrdered α\ninst✝ : Nontrivial α\n⊢ Not (IsAddCyclic α)","decl":"variable (α) in\n/-- A nontrivial densely linear ordered commutative group can't be a cyclic group. -/\n@[to_additive\n  \"A nontrivial densely linear ordered additive commutative group can't be a cyclic group.\"]\ntheorem not_isCyclic_of_denselyOrdered [DenselyOrdered α] [Nontrivial α] : ¬IsCyclic α := by\n  intro h\n  rcases exists_zpow_surjective α with ⟨a, ha⟩\n  rcases lt_trichotomy a 1 with hlt | rfl | hlt\n  · rcases exists_between hlt with ⟨b, hab, hb⟩\n    rcases ha b with ⟨k, rfl⟩\n    suffices 0 < k ∧ k < 1 by omega\n    rw [← one_lt_inv'] at hlt\n    simp_rw [← zpow_lt_zpow_iff_right hlt]\n    simp_all\n  · rcases exists_ne (1 : α) with ⟨b, hb⟩\n    simpa [hb.symm] using ha b\n  · rcases exists_between hlt with ⟨b, hb, hba⟩\n    rcases ha b with ⟨k, rfl⟩\n    suffices 0 < k ∧ k < 1 by omega\n    simp_rw [← zpow_lt_zpow_iff_right hlt]\n    simp_all\n\n"}
{"name":"not_isCyclic_of_denselyOrdered","module":"Mathlib.Algebra.Order.Group.Basic","initialProofState":"α : Type u_1\ninst✝² : LinearOrderedCommGroup α\ninst✝¹ : DenselyOrdered α\ninst✝ : Nontrivial α\n⊢ Not (IsCyclic α)","decl":"variable (α) in\n/-- A nontrivial densely linear ordered commutative group can't be a cyclic group. -/\n@[to_additive\n  \"A nontrivial densely linear ordered additive commutative group can't be a cyclic group.\"]\ntheorem not_isCyclic_of_denselyOrdered [DenselyOrdered α] [Nontrivial α] : ¬IsCyclic α := by\n  intro h\n  rcases exists_zpow_surjective α with ⟨a, ha⟩\n  rcases lt_trichotomy a 1 with hlt | rfl | hlt\n  · rcases exists_between hlt with ⟨b, hab, hb⟩\n    rcases ha b with ⟨k, rfl⟩\n    suffices 0 < k ∧ k < 1 by omega\n    rw [← one_lt_inv'] at hlt\n    simp_rw [← zpow_lt_zpow_iff_right hlt]\n    simp_all\n  · rcases exists_ne (1 : α) with ⟨b, hb⟩\n    simpa [hb.symm] using ha b\n  · rcases exists_between hlt with ⟨b, hb, hba⟩\n    rcases ha b with ⟨k, rfl⟩\n    suffices 0 < k ∧ k < 1 by omega\n    simp_rw [← zpow_lt_zpow_iff_right hlt]\n    simp_all\n\n"}
