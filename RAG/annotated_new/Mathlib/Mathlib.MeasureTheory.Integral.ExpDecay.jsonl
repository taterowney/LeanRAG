{"name":"exp_neg_integrableOn_Ioi","module":"Mathlib.MeasureTheory.Integral.ExpDecay","initialProofState":"a b : Real\nh : LT.lt 0 b\n‚ä¢ MeasureTheory.IntegrableOn (fun x => Real.exp (HMul.hMul (Neg.neg b) x)) (Set.Ioi a) MeasureTheory.MeasureSpace.volume","decl":"/-- `exp (-b * x)` is integrable on `(a, ‚àû)`. -/\ntheorem exp_neg_integrableOn_Ioi (a : ‚Ñù) {b : ‚Ñù} (h : 0 < b) :\n    IntegrableOn (fun x : ‚Ñù => exp (-b * x)) (Ioi a) := by\n  have : Tendsto (fun x => -exp (-b * x) / b) atTop (ùìù (-0 / b)) := by\n    refine Tendsto.div_const (Tendsto.neg ?_) _\n    exact tendsto_exp_atBot.comp (tendsto_id.const_mul_atTop_of_neg (neg_neg_iff_pos.2 h))\n  refine integrableOn_Ioi_deriv_of_nonneg' (fun x _ => ?_) (fun x _ => (exp_pos _).le) this\n  simpa [h.ne'] using ((hasDerivAt_id x).const_mul b).neg.exp.neg.div_const b\n\n"}
{"name":"integrable_of_isBigO_exp_neg","module":"Mathlib.MeasureTheory.Integral.ExpDecay","initialProofState":"f : Real ‚Üí Real\na b : Real\nh0 : LT.lt 0 b\nhf : ContinuousOn f (Set.Ici a)\nho : Asymptotics.IsBigO Filter.atTop f fun x => Real.exp (HMul.hMul (Neg.neg b) x)\n‚ä¢ MeasureTheory.IntegrableOn f (Set.Ioi a) MeasureTheory.MeasureSpace.volume","decl":"/-- If `f` is continuous on `[a, ‚àû)`, and is `O (exp (-b * x))` at `‚àû` for some `b > 0`, then\n`f` is integrable on `(a, ‚àû)`. -/\ntheorem integrable_of_isBigO_exp_neg {f : ‚Ñù ‚Üí ‚Ñù} {a b : ‚Ñù} (h0 : 0 < b)\n    (hf : ContinuousOn f (Ici a)) (ho : f =O[atTop] fun x => exp (-b * x)) :\n    IntegrableOn f (Ioi a) :=\n  integrableOn_Ici_iff_integrableOn_Ioi.mp <|\n    (hf.locallyIntegrableOn measurableSet_Ici).integrableOn_of_isBigO_atTop\n    ho ‚ü®Ioi b, Ioi_mem_atTop b, exp_neg_integrableOn_Ioi b h0‚ü©\n"}
