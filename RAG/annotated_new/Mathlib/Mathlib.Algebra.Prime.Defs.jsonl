{"name":"Prime.ne_zero","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝ : CommMonoidWithZero M\np : M\nhp : Prime p\n⊢ Ne p 0","decl":"theorem ne_zero : p ≠ 0 :=\n  hp.1\n\n"}
{"name":"Prime.not_unit","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝ : CommMonoidWithZero M\np : M\nhp : Prime p\n⊢ Not (IsUnit p)","decl":"theorem not_unit : ¬IsUnit p :=\n  hp.2.1\n\n"}
{"name":"Prime.not_dvd_one","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝ : CommMonoidWithZero M\np : M\nhp : Prime p\n⊢ Not (Dvd.dvd p 1)","decl":"theorem not_dvd_one : ¬p ∣ 1 :=\n  mt (isUnit_of_dvd_one ·) hp.not_unit\n\n"}
{"name":"Prime.ne_one","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝ : CommMonoidWithZero M\np : M\nhp : Prime p\n⊢ Ne p 1","decl":"theorem ne_one : p ≠ 1 := fun h => hp.2.1 (h.symm ▸ isUnit_one)\n\n"}
{"name":"Prime.dvd_or_dvd","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝ : CommMonoidWithZero M\np : M\nhp : Prime p\na b : M\nh : Dvd.dvd p (HMul.hMul a b)\n⊢ Or (Dvd.dvd p a) (Dvd.dvd p b)","decl":"theorem dvd_or_dvd {a b : M} (h : p ∣ a * b) : p ∣ a ∨ p ∣ b :=\n  hp.2.2 a b h\n\n"}
{"name":"Prime.dvd_mul","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝ : CommMonoidWithZero M\np : M\nhp : Prime p\na b : M\n⊢ Iff (Dvd.dvd p (HMul.hMul a b)) (Or (Dvd.dvd p a) (Dvd.dvd p b))","decl":"theorem dvd_mul {a b : M} : p ∣ a * b ↔ p ∣ a ∨ p ∣ b :=\n  ⟨hp.dvd_or_dvd, (Or.elim · (dvd_mul_of_dvd_left · _) (dvd_mul_of_dvd_right · _))⟩\n\n"}
{"name":"Prime.isPrimal","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝ : CommMonoidWithZero M\np : M\nhp : Prime p\n⊢ IsPrimal p","decl":"theorem isPrimal : IsPrimal p := fun _a _b dvd ↦ (hp.dvd_or_dvd dvd).elim\n  (fun h ↦ ⟨p, 1, h, one_dvd _, (mul_one p).symm⟩) fun h ↦ ⟨1, p, one_dvd _, h, (one_mul p).symm⟩\n\n"}
{"name":"Prime.not_dvd_mul","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝ : CommMonoidWithZero M\np : M\nhp : Prime p\na b : M\nha : Not (Dvd.dvd p a)\nhb : Not (Dvd.dvd p b)\n⊢ Not (Dvd.dvd p (HMul.hMul a b))","decl":"theorem not_dvd_mul {a b : M} (ha : ¬ p ∣ a) (hb : ¬ p ∣ b) : ¬ p ∣ a * b :=\n  hp.dvd_mul.not.mpr <| not_or.mpr ⟨ha, hb⟩\n\n"}
{"name":"Prime.dvd_of_dvd_pow","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝ : CommMonoidWithZero M\np : M\nhp : Prime p\na : M\nn : Nat\nh : Dvd.dvd p (HPow.hPow a n)\n⊢ Dvd.dvd p a","decl":"theorem dvd_of_dvd_pow {a : M} {n : ℕ} (h : p ∣ a ^ n) : p ∣ a := by\n  induction n with\n  | zero =>\n    rw [pow_zero] at h\n    have := isUnit_of_dvd_one h\n    have := not_unit hp\n    contradiction\n  | succ n ih =>\n    rw [pow_succ'] at h\n    rcases dvd_or_dvd hp h with dvd_a | dvd_pow\n    · assumption\n    · exact ih dvd_pow\n\n"}
{"name":"Prime.dvd_pow_iff_dvd","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝ : CommMonoidWithZero M\np : M\nhp : Prime p\na : M\nn : Nat\nhn : Ne n 0\n⊢ Iff (Dvd.dvd p (HPow.hPow a n)) (Dvd.dvd p a)","decl":"theorem dvd_pow_iff_dvd {a : M} {n : ℕ} (hn : n ≠ 0) : p ∣ a ^ n ↔ p ∣ a :=\n  ⟨hp.dvd_of_dvd_pow, (dvd_pow · hn)⟩\n\n"}
{"name":"not_prime_zero","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝ : CommMonoidWithZero M\n⊢ Not (Prime 0)","decl":"@[simp]\ntheorem not_prime_zero : ¬Prime (0 : M) := fun h => h.ne_zero rfl\n\n"}
{"name":"not_prime_one","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝ : CommMonoidWithZero M\n⊢ Not (Prime 1)","decl":"@[simp]\ntheorem not_prime_one : ¬Prime (1 : M) := fun h => h.not_unit isUnit_one\n\n"}
{"name":"Irreducible.not_unit","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝ : Monoid M\np : M\nself : Irreducible p\n⊢ Not (IsUnit p)","decl":"/-- `Irreducible p` states that `p` is non-unit and only factors into units.\n\nWe explicitly avoid stating that `p` is non-zero, this would require a semiring. Assuming only a\nmonoid allows us to reuse irreducible for associated elements.\n-/\nstructure Irreducible [Monoid M] (p : M) : Prop where\n  /-- `p` is not a unit -/\n  not_unit : ¬IsUnit p\n  /-- if `p` factors then one factor is a unit -/\n  isUnit_or_isUnit' : ∀ a b, p = a * b → IsUnit a ∨ IsUnit b\n\n"}
{"name":"Irreducible.isUnit_or_isUnit'","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝ : Monoid M\np : M\nself : Irreducible p\na b : M\na✝ : Eq p (HMul.hMul a b)\n⊢ Or (IsUnit a) (IsUnit b)","decl":"/-- `Irreducible p` states that `p` is non-unit and only factors into units.\n\nWe explicitly avoid stating that `p` is non-zero, this would require a semiring. Assuming only a\nmonoid allows us to reuse irreducible for associated elements.\n-/\nstructure Irreducible [Monoid M] (p : M) : Prop where\n  /-- `p` is not a unit -/\n  not_unit : ¬IsUnit p\n  /-- if `p` factors then one factor is a unit -/\n  isUnit_or_isUnit' : ∀ a b, p = a * b → IsUnit a ∨ IsUnit b\n\n"}
{"name":"Irreducible.not_dvd_one","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝ : CommMonoid M\np : M\nhp : Irreducible p\n⊢ Not (Dvd.dvd p 1)","decl":"theorem not_dvd_one [CommMonoid M] {p : M} (hp : Irreducible p) : ¬p ∣ 1 :=\n  mt (isUnit_of_dvd_one ·) hp.not_unit\n\n"}
{"name":"Irreducible.isUnit_or_isUnit","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝ : Monoid M\np : M\nhp : Irreducible p\na b : M\nh : Eq p (HMul.hMul a b)\n⊢ Or (IsUnit a) (IsUnit b)","decl":"theorem isUnit_or_isUnit [Monoid M] {p : M} (hp : Irreducible p) {a b : M} (h : p = a * b) :\n    IsUnit a ∨ IsUnit b :=\n  hp.isUnit_or_isUnit' a b h\n\n"}
{"name":"irreducible_iff","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝ : Monoid M\np : M\n⊢ Iff (Irreducible p) (And (Not (IsUnit p)) (∀ (a b : M), Eq p (HMul.hMul a b) → Or (IsUnit a) (IsUnit b)))","decl":"theorem irreducible_iff [Monoid M] {p : M} :\n    Irreducible p ↔ ¬IsUnit p ∧ ∀ a b, p = a * b → IsUnit a ∨ IsUnit b :=\n  ⟨fun h => ⟨h.1, h.2⟩, fun h => ⟨h.1, h.2⟩⟩\n\n"}
{"name":"not_irreducible_one","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝ : Monoid M\n⊢ Not (Irreducible 1)","decl":"@[simp]\ntheorem not_irreducible_one [Monoid M] : ¬Irreducible (1 : M) := by simp [irreducible_iff]\n\n"}
{"name":"Irreducible.ne_one","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝ : Monoid M\np : M\na✝ : Irreducible p\n⊢ Ne p 1","decl":"theorem Irreducible.ne_one [Monoid M] : ∀ {p : M}, Irreducible p → p ≠ 1\n  | _, hp, rfl => not_irreducible_one hp\n\n"}
{"name":"not_irreducible_zero","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝ : MonoidWithZero M\n⊢ Not (Irreducible 0)","decl":"@[simp]\ntheorem not_irreducible_zero [MonoidWithZero M] : ¬Irreducible (0 : M)\n  | ⟨hn0, h⟩ =>\n    have : IsUnit (0 : M) ∨ IsUnit (0 : M) := h 0 0 (mul_zero 0).symm\n    this.elim hn0 hn0\n\n"}
{"name":"Irreducible.ne_zero","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝ : MonoidWithZero M\np : M\na✝ : Irreducible p\n⊢ Ne p 0","decl":"theorem Irreducible.ne_zero [MonoidWithZero M] : ∀ {p : M}, Irreducible p → p ≠ 0\n  | _, hp, rfl => not_irreducible_zero hp\n\n"}
{"name":"of_irreducible_mul","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_2\ninst✝ : Monoid M\nx y : M\na✝ : Irreducible (HMul.hMul x y)\n⊢ Or (IsUnit x) (IsUnit y)","decl":"theorem of_irreducible_mul {M} [Monoid M] {x y : M} : Irreducible (x * y) → IsUnit x ∨ IsUnit y\n  | ⟨_, h⟩ => h _ _ rfl\n\n"}
{"name":"irreducible_or_factor","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_2\ninst✝ : Monoid M\nx : M\nh : Not (IsUnit x)\n⊢ Or (Irreducible x) (Exists fun a => Exists fun b => And (Not (IsUnit a)) (And (Not (IsUnit b)) (Eq (HMul.hMul a b) x)))","decl":"theorem irreducible_or_factor {M} [Monoid M] (x : M) (h : ¬IsUnit x) :\n    Irreducible x ∨ ∃ a b, ¬IsUnit a ∧ ¬IsUnit b ∧ a * b = x := by\n  haveI := Classical.dec\n  refine or_iff_not_imp_right.2 fun H => ?_\n  simp? [h, irreducible_iff] at H ⊢ says\n    simp only [exists_and_left, not_exists, not_and, irreducible_iff, h, not_false_eq_true,\n      true_and] at H ⊢\n  refine fun a b h => by_contradiction fun o => ?_\n  simp? [not_or] at o says simp only [not_or] at o\n  exact H _ o.1 _ o.2 h.symm\n\n"}
{"name":"Irreducible.dvd_symm","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝ : Monoid M\np q : M\nhp : Irreducible p\nhq : Irreducible q\na✝ : Dvd.dvd p q\n⊢ Dvd.dvd q p","decl":"/-- If `p` and `q` are irreducible, then `p ∣ q` implies `q ∣ p`. -/\ntheorem Irreducible.dvd_symm [Monoid M] {p q : M} (hp : Irreducible p) (hq : Irreducible q) :\n    p ∣ q → q ∣ p := by\n  rintro ⟨q', rfl⟩\n  rw [IsUnit.mul_right_dvd (Or.resolve_left (of_irreducible_mul hq) hp.not_unit)]\n\n"}
{"name":"Irreducible.dvd_comm","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝ : Monoid M\np q : M\nhp : Irreducible p\nhq : Irreducible q\n⊢ Iff (Dvd.dvd p q) (Dvd.dvd q p)","decl":"theorem Irreducible.dvd_comm [Monoid M] {p q : M} (hp : Irreducible p) (hq : Irreducible q) :\n    p ∣ q ↔ q ∣ p :=\n  ⟨hp.dvd_symm hq, hq.dvd_symm hp⟩\n\n"}
{"name":"Irreducible.prime_of_isPrimal","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝ : CommMonoidWithZero M\na : M\nirr : Irreducible a\nprimal : IsPrimal a\n⊢ Prime a","decl":"theorem Irreducible.prime_of_isPrimal {a : M}\n    (irr : Irreducible a) (primal : IsPrimal a) : Prime a :=\n  ⟨irr.ne_zero, irr.not_unit, fun a b dvd ↦ by\n    obtain ⟨d₁, d₂, h₁, h₂, rfl⟩ := primal dvd\n    exact (of_irreducible_mul irr).symm.imp (·.mul_right_dvd.mpr h₁) (·.mul_left_dvd.mpr h₂)⟩\n\n"}
{"name":"Irreducible.prime","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝¹ : CommMonoidWithZero M\ninst✝ : DecompositionMonoid M\na : M\nirr : Irreducible a\n⊢ Prime a","decl":"theorem Irreducible.prime [DecompositionMonoid M] {a : M} (irr : Irreducible a) : Prime a :=\n  irr.prime_of_isPrimal (DecompositionMonoid.primal a)\n\n"}
{"name":"Prime.irreducible","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝ : CancelCommMonoidWithZero M\np : M\nhp : Prime p\n⊢ Irreducible p","decl":"protected theorem Prime.irreducible (hp : Prime p) : Irreducible p :=\n  ⟨hp.not_unit, fun a b ↦ by\n    rintro rfl\n    exact (hp.dvd_or_dvd dvd_rfl).symm.imp\n      (isUnit_of_dvd_one <| (mul_dvd_mul_iff_right <| right_ne_zero_of_mul hp.ne_zero).mp <|\n        dvd_mul_of_dvd_right · _)\n      (isUnit_of_dvd_one <| (mul_dvd_mul_iff_left <| left_ne_zero_of_mul hp.ne_zero).mp <|\n        dvd_mul_of_dvd_left · _)⟩\n\n"}
{"name":"irreducible_iff_prime","module":"Mathlib.Algebra.Prime.Defs","initialProofState":"M : Type u_1\ninst✝¹ : CancelCommMonoidWithZero M\ninst✝ : DecompositionMonoid M\na : M\n⊢ Iff (Irreducible a) (Prime a)","decl":"theorem irreducible_iff_prime [DecompositionMonoid M] {a : M} : Irreducible a ↔ Prime a :=\n  ⟨Irreducible.prime, Prime.irreducible⟩\n\n"}
