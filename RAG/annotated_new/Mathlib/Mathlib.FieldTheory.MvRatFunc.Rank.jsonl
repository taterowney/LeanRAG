{"name":"MvRatFunc.rank_eq_max_lift","module":"Mathlib.FieldTheory.MvRatFunc.Rank","initialProofState":"σ : Type u\nF : Type v\ninst✝¹ : Field F\ninst✝ : Nonempty σ\n⊢ Eq (Module.rank F (FractionRing (MvPolynomial σ F))) (Max.max (Max.max (Cardinal.lift.{u, v} (Cardinal.mk F)) (Cardinal.lift.{v, u} (Cardinal.mk σ))) Cardinal.aleph0)","decl":"open Cardinal in\ntheorem MvRatFunc.rank_eq_max_lift\n    {σ : Type u} {F : Type v} [Field F] [Nonempty σ] :\n    Module.rank F (FractionRing (MvPolynomial σ F)) = lift.{u} #F ⊔ lift.{v} #σ ⊔ ℵ₀ := by\n  let R := MvPolynomial σ F\n  let K := FractionRing R\n  refine ((rank_le_card _ _).trans ?_).antisymm ?_\n  · rw [FractionRing.cardinalMk, MvPolynomial.cardinalMk_eq_max_lift]\n  have hinj := IsFractionRing.injective R K\n  have h1 := (IsScalarTower.toAlgHom F R K).toLinearMap.rank_le_of_injective hinj\n  rw [MvPolynomial.rank_eq_lift, mk_finsupp_nat, lift_max, lift_aleph0, max_le_iff] at h1\n  obtain ⟨i⟩ := ‹Nonempty σ›\n  have hx : Transcendental F (algebraMap R K (MvPolynomial.X i)) :=\n    (transcendental_algebraMap_iff hinj).2 (MvPolynomial.transcendental_X F i)\n  have h2 := hx.linearIndependent_sub_inv.cardinal_lift_le_rank\n  rw [lift_id'.{v, u}, lift_umax.{v, u}] at h2\n  exact max_le (max_le h2 h1.1) h1.2\n"}
