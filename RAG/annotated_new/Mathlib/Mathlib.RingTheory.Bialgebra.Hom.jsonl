{"name":"BialgHom.map_mul'","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : CoalgebraStruct R A\ninst✝ : CoalgebraStruct R B\nself : BialgHom R A B\nx y : A\n⊢ Eq (self.toFun (HMul.hMul x y)) (HMul.hMul (self.toFun x) (self.toFun y))","decl":"/-- Given `R`-algebras `A, B` with comultiplication maps `Δ_A, Δ_B` and counit maps\n`ε_A, ε_B`, an `R`-bialgebra homomorphism `A →ₐc[R] B` is an `R`-algebra map `f` such that\n`ε_B ∘ f = ε_A` and `(f ⊗ f) ∘ Δ_A = Δ_B ∘ f`. -/\nstructure BialgHom (R A B : Type*) [CommSemiring R]\n    [Semiring A] [Algebra R A] [Semiring B] [Algebra R B]\n    [CoalgebraStruct R A] [CoalgebraStruct R B] extends A →ₗc[R] B, A →* B\n\n"}
{"name":"BialgHom.mk.injEq","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : CoalgebraStruct R A\ninst✝ : CoalgebraStruct R B\ntoCoalgHom✝ : CoalgHom R A B\nmap_one'✝ : Eq (toCoalgHom✝.toFun 1) 1\nmap_mul'✝ : ∀ (x y : A), Eq (toCoalgHom✝.toFun (HMul.hMul x y)) (HMul.hMul (toCoalgHom✝.toFun x) (toCoalgHom✝.toFun y))\ntoCoalgHom : CoalgHom R A B\nmap_one' : Eq (toCoalgHom.toFun 1) 1\nmap_mul' : ∀ (x y : A), Eq (toCoalgHom.toFun (HMul.hMul x y)) (HMul.hMul (toCoalgHom.toFun x) (toCoalgHom.toFun y))\n⊢ Eq (Eq { toCoalgHom := toCoalgHom✝, map_one' := map_one'✝, map_mul' := map_mul'✝ } { toCoalgHom := toCoalgHom, map_one' := map_one', map_mul' := map_mul' }) (Eq toCoalgHom✝ toCoalgHom)","decl":"/-- Given `R`-algebras `A, B` with comultiplication maps `Δ_A, Δ_B` and counit maps\n`ε_A, ε_B`, an `R`-bialgebra homomorphism `A →ₐc[R] B` is an `R`-algebra map `f` such that\n`ε_B ∘ f = ε_A` and `(f ⊗ f) ∘ Δ_A = Δ_B ∘ f`. -/\nstructure BialgHom (R A B : Type*) [CommSemiring R]\n    [Semiring A] [Algebra R A] [Semiring B] [Algebra R B]\n    [CoalgebraStruct R A] [CoalgebraStruct R B] extends A →ₗc[R] B, A →* B\n\n"}
{"name":"BialgHom.map_one'","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : CoalgebraStruct R A\ninst✝ : CoalgebraStruct R B\nself : BialgHom R A B\n⊢ Eq (self.toFun 1) 1","decl":"/-- Given `R`-algebras `A, B` with comultiplication maps `Δ_A, Δ_B` and counit maps\n`ε_A, ε_B`, an `R`-bialgebra homomorphism `A →ₐc[R] B` is an `R`-algebra map `f` such that\n`ε_B ∘ f = ε_A` and `(f ⊗ f) ∘ Δ_A = Δ_B ∘ f`. -/\nstructure BialgHom (R A B : Type*) [CommSemiring R]\n    [Semiring A] [Algebra R A] [Semiring B] [Algebra R B]\n    [CoalgebraStruct R A] [CoalgebraStruct R B] extends A →ₗc[R] B, A →* B\n\n"}
{"name":"BialgHom.mk.sizeOf_spec","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁹ : CommSemiring R\ninst✝⁸ : Semiring A\ninst✝⁷ : Algebra R A\ninst✝⁶ : Semiring B\ninst✝⁵ : Algebra R B\ninst✝⁴ : CoalgebraStruct R A\ninst✝³ : CoalgebraStruct R B\ninst✝² : SizeOf R\ninst✝¹ : SizeOf A\ninst✝ : SizeOf B\ntoCoalgHom : CoalgHom R A B\nmap_one' : Eq (toCoalgHom.toFun 1) 1\nmap_mul' : ∀ (x y : A), Eq (toCoalgHom.toFun (HMul.hMul x y)) (HMul.hMul (toCoalgHom.toFun x) (toCoalgHom.toFun y))\n⊢ Eq (SizeOf.sizeOf { toCoalgHom := toCoalgHom, map_one' := map_one', map_mul' := map_mul' }) (HAdd.hAdd (HAdd.hAdd 1 (SizeOf.sizeOf toCoalgHom)) (SizeOf.sizeOf map_one'))","decl":"/-- Given `R`-algebras `A, B` with comultiplication maps `Δ_A, Δ_B` and counit maps\n`ε_A, ε_B`, an `R`-bialgebra homomorphism `A →ₐc[R] B` is an `R`-algebra map `f` such that\n`ε_B ∘ f = ε_A` and `(f ⊗ f) ∘ Δ_A = Δ_B ∘ f`. -/\nstructure BialgHom (R A B : Type*) [CommSemiring R]\n    [Semiring A] [Algebra R A] [Semiring B] [Algebra R B]\n    [CoalgebraStruct R A] [CoalgebraStruct R B] extends A →ₗc[R] B, A →* B\n\n"}
{"name":"BialgHom.mk.inj","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : CoalgebraStruct R A\ninst✝ : CoalgebraStruct R B\ntoCoalgHom✝ : CoalgHom R A B\nmap_one'✝ : Eq (toCoalgHom✝.toFun 1) 1\nmap_mul'✝ : ∀ (x y : A), Eq (toCoalgHom✝.toFun (HMul.hMul x y)) (HMul.hMul (toCoalgHom✝.toFun x) (toCoalgHom✝.toFun y))\ntoCoalgHom : CoalgHom R A B\nmap_one' : Eq (toCoalgHom.toFun 1) 1\nmap_mul' : ∀ (x y : A), Eq (toCoalgHom.toFun (HMul.hMul x y)) (HMul.hMul (toCoalgHom.toFun x) (toCoalgHom.toFun y))\nx✝ : Eq { toCoalgHom := toCoalgHom✝, map_one' := map_one'✝, map_mul' := map_mul'✝ } { toCoalgHom := toCoalgHom, map_one' := map_one', map_mul' := map_mul' }\n⊢ Eq toCoalgHom✝ toCoalgHom","decl":"/-- Given `R`-algebras `A, B` with comultiplication maps `Δ_A, Δ_B` and counit maps\n`ε_A, ε_B`, an `R`-bialgebra homomorphism `A →ₐc[R] B` is an `R`-algebra map `f` such that\n`ε_B ∘ f = ε_A` and `(f ⊗ f) ∘ Δ_A = Δ_B ∘ f`. -/\nstructure BialgHom (R A B : Type*) [CommSemiring R]\n    [Semiring A] [Algebra R A] [Semiring B] [Algebra R B]\n    [CoalgebraStruct R A] [CoalgebraStruct R B] extends A →ₗc[R] B, A →* B\n\n"}
{"name":"BialgHomClass.toMonoidHomClass","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"F : Type u_1\nR : outParam (Type u_2)\nA : outParam (Type u_3)\nB : outParam (Type u_4)\ninst✝⁷ : CommSemiring R\ninst✝⁶ : Semiring A\ninst✝⁵ : Algebra R A\ninst✝⁴ : Semiring B\ninst✝³ : Algebra R B\ninst✝² : CoalgebraStruct R A\ninst✝¹ : CoalgebraStruct R B\ninst✝ : FunLike F A B\nself : BialgHomClass F R A B\n⊢ MonoidHomClass F A B","decl":"/-- `BialgHomClass F R A B` asserts `F` is a type of bundled bialgebra homomorphisms\nfrom `A` to `B`. -/\nclass BialgHomClass (F : Type*) (R A B : outParam Type*)\n    [CommSemiring R] [Semiring A] [Algebra R A] [Semiring B] [Algebra R B]\n    [CoalgebraStruct R A] [CoalgebraStruct R B] [FunLike F A B]\n    extends CoalgHomClass F R A B, MonoidHomClass F A B : Prop\n\n"}
{"name":"BialgHomClass.toCoalgHomClass","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"F : Type u_1\nR : outParam (Type u_2)\nA : outParam (Type u_3)\nB : outParam (Type u_4)\ninst✝⁷ : CommSemiring R\ninst✝⁶ : Semiring A\ninst✝⁵ : Algebra R A\ninst✝⁴ : Semiring B\ninst✝³ : Algebra R B\ninst✝² : CoalgebraStruct R A\ninst✝¹ : CoalgebraStruct R B\ninst✝ : FunLike F A B\nself : BialgHomClass F R A B\n⊢ CoalgHomClass F R A B","decl":"/-- `BialgHomClass F R A B` asserts `F` is a type of bundled bialgebra homomorphisms\nfrom `A` to `B`. -/\nclass BialgHomClass (F : Type*) (R A B : outParam Type*)\n    [CommSemiring R] [Semiring A] [Algebra R A] [Semiring B] [Algebra R B]\n    [CoalgebraStruct R A] [CoalgebraStruct R B] [FunLike F A B]\n    extends CoalgHomClass F R A B, MonoidHomClass F A B : Prop\n\n"}
{"name":"BialgHomClass.toAlgHomClass","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\nF : Type u_4\ninst✝⁸ : CommSemiring R\ninst✝⁷ : Semiring A\ninst✝⁶ : Algebra R A\ninst✝⁵ : Semiring B\ninst✝⁴ : Algebra R B\ninst✝³ : CoalgebraStruct R A\ninst✝² : CoalgebraStruct R B\ninst✝¹ : FunLike F A B\ninst✝ : BialgHomClass F R A B\n⊢ AlgHomClass F R A B","decl":"instance (priority := 100) toAlgHomClass : AlgHomClass F R A B where\n  map_mul := map_mul\n  map_one := map_one\n  map_add := map_add\n  map_zero := map_zero\n  commutes := fun c r => by\n    simp only [Algebra.algebraMap_eq_smul_one, map_smul, map_one]\n\n"}
{"name":"BialgHomClass.counitAlgHom_comp","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\nF : Type u_4\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Bialgebra R A\ninst✝³ : Semiring B\ninst✝² : Bialgebra R B\ninst✝¹ : FunLike F A B\ninst✝ : BialgHomClass F R A B\nf : F\n⊢ Eq ((Bialgebra.counitAlgHom R B).comp ↑f) (Bialgebra.counitAlgHom R A)","decl":"@[simp]\ntheorem counitAlgHom_comp (f : F) :\n    (counitAlgHom R B).comp (f : A →ₐ[R] B) = counitAlgHom R A :=\n  AlgHom.toLinearMap_injective (CoalgHomClass.counit_comp f)\n\n"}
{"name":"BialgHomClass.map_comp_comulAlgHom","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\nF : Type u_4\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Bialgebra R A\ninst✝³ : Semiring B\ninst✝² : Bialgebra R B\ninst✝¹ : FunLike F A B\ninst✝ : BialgHomClass F R A B\nf : F\n⊢ Eq ((Algebra.TensorProduct.map ↑f ↑f).comp (Bialgebra.comulAlgHom R A)) ((Bialgebra.comulAlgHom R B).comp ↑f)","decl":"@[simp]\ntheorem map_comp_comulAlgHom (f : F) :\n    (Algebra.TensorProduct.map f f).comp (comulAlgHom R A) = (comulAlgHom R B).comp f :=\n  AlgHom.toLinearMap_injective (CoalgHomClass.map_comp_comul f)\n\n"}
{"name":"BialgHom.bialgHomClass","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : CoalgebraStruct R A\ninst✝ : CoalgebraStruct R B\n⊢ BialgHomClass (BialgHom R A B) R A B","decl":"instance bialgHomClass : BialgHomClass (A →ₐc[R] B) R A B where\n  map_add := fun f => f.map_add'\n  map_smulₛₗ := fun f => f.map_smul'\n  counit_comp := fun f => f.counit_comp\n  map_comp_comul := fun f => f.map_comp_comul\n  map_mul := fun f => f.map_mul'\n  map_one := fun f => f.map_one'\n\n"}
{"name":"BialgHom.coe_coe","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁸ : CommSemiring R\ninst✝⁷ : Semiring A\ninst✝⁶ : Algebra R A\ninst✝⁵ : Semiring B\ninst✝⁴ : Algebra R B\ninst✝³ : CoalgebraStruct R A\ninst✝² : CoalgebraStruct R B\nF : Type u_6\ninst✝¹ : FunLike F A B\ninst✝ : BialgHomClass F R A B\nf : F\n⊢ Eq ⇑↑f ⇑f","decl":"@[simp]\nprotected theorem coe_coe {F : Type*} [FunLike F A B] [BialgHomClass F R A B] (f : F) :\n    ⇑(f : A →ₐc[R] B) = f :=\n  rfl\n\n"}
{"name":"BialgHom.coe_mk","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : CoalgebraStruct R A\ninst✝ : CoalgebraStruct R B\nf : CoalgHom R A B\nh : Eq (f.toFun 1) 1\nh₁ : ∀ (x y : A), Eq (f.toFun (HMul.hMul x y)) (HMul.hMul (f.toFun x) (f.toFun y))\n⊢ Eq ⇑{ toCoalgHom := f, map_one' := h, map_mul' := h₁ } ⇑f","decl":"@[simp]\ntheorem coe_mk {f : A →ₗc[R] B} (h h₁) : ((⟨f, h, h₁⟩ : A →ₐc[R] B) : A → B) = f :=\n  rfl\n\n"}
{"name":"BialgHom.coe_mks","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : CoalgebraStruct R A\ninst✝ : CoalgebraStruct R B\nf : A → B\nh₀ : ∀ (x y : A), Eq (f (HAdd.hAdd x y)) (HAdd.hAdd (f x) (f y))\nh₁ : ∀ (m : R) (x : A), Eq ({ toFun := f, map_add' := h₀ }.toFun (HSMul.hSMul m x)) (HSMul.hSMul ((RingHom.id R) m) ({ toFun := f, map_add' := h₀ }.toFun x))\nh₂ : Eq (CoalgebraStruct.counit.comp { toFun := f, map_add' := h₀, map_smul' := h₁ }) CoalgebraStruct.counit\nh₃ : Eq ((TensorProduct.map { toFun := f, map_add' := h₀, map_smul' := h₁ } { toFun := f, map_add' := h₀, map_smul' := h₁ }).comp CoalgebraStruct.comul) (CoalgebraStruct.comul.comp { toFun := f, map_add' := h₀, map_smul' := h₁ })\nh₄ : Eq ({ toFun := f, map_add' := h₀, map_smul' := h₁, counit_comp := h₂, map_comp_comul := h₃ }.toFun 1) 1\nh₅ : ∀ (x y : A), Eq ({ toFun := f, map_add' := h₀, map_smul' := h₁, counit_comp := h₂, map_comp_comul := h₃ }.toFun (HMul.hMul x y)) (HMul.hMul ({ toFun := f, map_add' := h₀, map_smul' := h₁, counit_comp := h₂, map_comp_comul := h₃ }.toFun x) ({ toFun := f, map_add' := h₀, map_smul' := h₁, counit_comp := h₂, map_comp_comul := h₃ }.toFun y))\n⊢ Eq (⇑{ toFun := f, map_add' := h₀, map_smul' := h₁, counit_comp := h₂, map_comp_comul := h₃, map_one' := h₄, map_mul' := h₅ }) f","decl":"@[norm_cast]\ntheorem coe_mks {f : A → B} (h₀ h₁ h₂ h₃ h₄ h₅) :\n    ⇑(⟨⟨⟨⟨f, h₀⟩, h₁⟩, h₂, h₃⟩, h₄, h₅⟩ : A →ₐc[R] B) = f :=\n  rfl\n\n"}
{"name":"BialgHom.coe_coalgHom_mk","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : CoalgebraStruct R A\ninst✝ : CoalgebraStruct R B\nf : CoalgHom R A B\nh : Eq (f.toFun 1) 1\nh₁ : ∀ (x y : A), Eq (f.toFun (HMul.hMul x y)) (HMul.hMul (f.toFun x) (f.toFun y))\n⊢ Eq (↑{ toCoalgHom := f, map_one' := h, map_mul' := h₁ }) f","decl":"@[simp, norm_cast]\ntheorem coe_coalgHom_mk {f : A →ₗc[R] B} (h h₁) :\n    ((⟨f, h, h₁⟩ : A →ₐc[R] B) : A →ₗc[R] B) = f := by\n  rfl\n\n"}
{"name":"BialgHom.coe_toCoalgHom","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : CoalgebraStruct R A\ninst✝ : CoalgebraStruct R B\nf : BialgHom R A B\n⊢ Eq ⇑↑f ⇑f","decl":"@[norm_cast]\ntheorem coe_toCoalgHom (f : A →ₐc[R] B) : ⇑(f : A →ₗc[R] B) = f :=\n  rfl\n\n"}
{"name":"BialgHom.coe_toLinearMap","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : CoalgebraStruct R A\ninst✝ : CoalgebraStruct R B\nf : BialgHom R A B\n⊢ Eq ⇑↑f ⇑f","decl":"@[simp, norm_cast]\ntheorem coe_toLinearMap (f : A →ₐc[R] B) : ⇑(f : A →ₗ[R] B) = f :=\n  rfl\n\n"}
{"name":"BialgHom.coe_toAlgHom","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : CoalgebraStruct R A\ninst✝ : CoalgebraStruct R B\nf : BialgHom R A B\n⊢ Eq ⇑↑f ⇑f","decl":"@[norm_cast]\ntheorem coe_toAlgHom (f : A →ₐc[R] B) : ⇑(f : A →ₐ[R] B) = f :=\n  rfl\n\n"}
{"name":"BialgHom.toAlgHom_toLinearMap","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : CoalgebraStruct R A\ninst✝ : CoalgebraStruct R B\nf : BialgHom R A B\n⊢ Eq ↑↑f ↑f","decl":"theorem toAlgHom_toLinearMap (f : A →ₐc[R] B) :\n    ((f : A →ₐ[R] B) : A →ₗ[R] B) = f := by\n  rfl\n\n"}
{"name":"BialgHom.coe_fn_injective","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : CoalgebraStruct R A\ninst✝ : CoalgebraStruct R B\n⊢ Function.Injective DFunLike.coe","decl":"theorem coe_fn_injective : @Function.Injective (A →ₐc[R] B) (A → B) (↑) :=\n  DFunLike.coe_injective\n\n"}
{"name":"BialgHom.coe_fn_inj","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : CoalgebraStruct R A\ninst✝ : CoalgebraStruct R B\nφ₁ φ₂ : BialgHom R A B\n⊢ Iff (Eq ⇑φ₁ ⇑φ₂) (Eq φ₁ φ₂)","decl":"theorem coe_fn_inj {φ₁ φ₂ : A →ₐc[R] B} : (φ₁ : A → B) = φ₂ ↔ φ₁ = φ₂ :=\n  DFunLike.coe_fn_eq\n\n"}
{"name":"BialgHom.coe_coalgHom_injective","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : CoalgebraStruct R A\ninst✝ : CoalgebraStruct R B\n⊢ Function.Injective CoalgHomClass.toCoalgHom","decl":"theorem coe_coalgHom_injective : Function.Injective ((↑) : (A →ₐc[R] B) → A →ₗc[R] B) :=\n  fun φ₁ φ₂ H => coe_fn_injective <|\n    show ((φ₁ : A →ₗc[R] B) : A → B) = ((φ₂ : A →ₗc[R] B) : A → B) from congr_arg _ H\n\n"}
{"name":"BialgHom.coe_algHom_injective","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : CoalgebraStruct R A\ninst✝ : CoalgebraStruct R B\n⊢ Function.Injective AlgHomClass.toAlgHom","decl":"theorem coe_algHom_injective : Function.Injective ((↑) : (A →ₐc[R] B) → A →ₐ[R] B) :=\n  fun φ₁ φ₂ H => coe_fn_injective <|\n    show ((φ₁ : A →ₐ[R] B) : A → B) = ((φ₂ : A →ₐ[R] B) : A → B) from congr_arg _ H\n\n"}
{"name":"BialgHom.coe_linearMap_injective","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : CoalgebraStruct R A\ninst✝ : CoalgebraStruct R B\n⊢ Function.Injective fun x => ↑x","decl":"theorem coe_linearMap_injective : Function.Injective ((↑) : (A →ₐc[R] B) → A →ₗ[R] B) :=\n  CoalgHom.coe_linearMap_injective.comp coe_coalgHom_injective\n\n"}
{"name":"BialgHom.congr_fun","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : CoalgebraStruct R A\ninst✝ : CoalgebraStruct R B\nφ₁ φ₂ : BialgHom R A B\nH : Eq φ₁ φ₂\nx : A\n⊢ Eq (φ₁ x) (φ₂ x)","decl":"protected theorem congr_fun {φ₁ φ₂ : A →ₐc[R] B} (H : φ₁ = φ₂) (x : A) : φ₁ x = φ₂ x :=\n  DFunLike.congr_fun H x\n\n"}
{"name":"BialgHom.congr_arg","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : CoalgebraStruct R A\ninst✝ : CoalgebraStruct R B\nφ : BialgHom R A B\nx y : A\nh : Eq x y\n⊢ Eq (φ x) (φ y)","decl":"protected theorem congr_arg (φ : A →ₐc[R] B) {x y : A} (h : x = y) : φ x = φ y :=\n  DFunLike.congr_arg φ h\n\n"}
{"name":"BialgHom.ext_iff","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : CoalgebraStruct R A\ninst✝ : CoalgebraStruct R B\nφ₁ φ₂ : BialgHom R A B\n⊢ Iff (Eq φ₁ φ₂) (∀ (x : A), Eq (φ₁ x) (φ₂ x))","decl":"@[ext]\ntheorem ext {φ₁ φ₂ : A →ₐc[R] B} (H : ∀ x, φ₁ x = φ₂ x) : φ₁ = φ₂ :=\n  DFunLike.ext _ _ H\n\n"}
{"name":"BialgHom.ext","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : CoalgebraStruct R A\ninst✝ : CoalgebraStruct R B\nφ₁ φ₂ : BialgHom R A B\nH : ∀ (x : A), Eq (φ₁ x) (φ₂ x)\n⊢ Eq φ₁ φ₂","decl":"@[ext]\ntheorem ext {φ₁ φ₂ : A →ₐc[R] B} (H : ∀ x, φ₁ x = φ₂ x) : φ₁ = φ₂ :=\n  DFunLike.ext _ _ H\n\n"}
{"name":"BialgHom.ext_of_ring_iff","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : Semiring A\ninst✝¹ : Algebra R A\ninst✝ : CoalgebraStruct R A\nf g : BialgHom R R A\n⊢ Iff (Eq f g) (Eq (f 1) (g 1))","decl":"@[ext high]\ntheorem ext_of_ring {f g : R →ₐc[R] A} (h : f 1 = g 1) : f = g :=\n  coe_linearMap_injective (by ext; assumption)\n\n"}
{"name":"BialgHom.ext_of_ring","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : Semiring A\ninst✝¹ : Algebra R A\ninst✝ : CoalgebraStruct R A\nf g : BialgHom R R A\nh : Eq (f 1) (g 1)\n⊢ Eq f g","decl":"@[ext high]\ntheorem ext_of_ring {f g : R →ₐc[R] A} (h : f 1 = g 1) : f = g :=\n  coe_linearMap_injective (by ext; assumption)\n\n"}
{"name":"BialgHom.mk_coe","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : CoalgebraStruct R A\ninst✝ : CoalgebraStruct R B\nf : BialgHom R A B\nh₀ : ∀ (x y : A), Eq (f (HAdd.hAdd x y)) (HAdd.hAdd (f x) (f y))\nh₁ : ∀ (m : R) (x : A), Eq ({ toFun := ⇑f, map_add' := h₀ }.toFun (HSMul.hSMul m x)) (HSMul.hSMul ((RingHom.id R) m) ({ toFun := ⇑f, map_add' := h₀ }.toFun x))\nh₂ : Eq (CoalgebraStruct.counit.comp { toFun := ⇑f, map_add' := h₀, map_smul' := h₁ }) CoalgebraStruct.counit\nh₃ : Eq ((TensorProduct.map { toFun := ⇑f, map_add' := h₀, map_smul' := h₁ } { toFun := ⇑f, map_add' := h₀, map_smul' := h₁ }).comp CoalgebraStruct.comul) (CoalgebraStruct.comul.comp { toFun := ⇑f, map_add' := h₀, map_smul' := h₁ })\nh₄ : Eq ({ toFun := ⇑f, map_add' := h₀, map_smul' := h₁, counit_comp := h₂, map_comp_comul := h₃ }.toFun 1) 1\nh₅ : ∀ (x y : A), Eq ({ toFun := ⇑f, map_add' := h₀, map_smul' := h₁, counit_comp := h₂, map_comp_comul := h₃ }.toFun (HMul.hMul x y)) (HMul.hMul ({ toFun := ⇑f, map_add' := h₀, map_smul' := h₁, counit_comp := h₂, map_comp_comul := h₃ }.toFun x) ({ toFun := ⇑f, map_add' := h₀, map_smul' := h₁, counit_comp := h₂, map_comp_comul := h₃ }.toFun y))\n⊢ Eq { toFun := ⇑f, map_add' := h₀, map_smul' := h₁, counit_comp := h₂, map_comp_comul := h₃, map_one' := h₄, map_mul' := h₅ } f","decl":"@[simp]\ntheorem mk_coe {f : A →ₐc[R] B} (h₀ h₁ h₂ h₃ h₄ h₅) :\n    (⟨⟨⟨⟨f, h₀⟩, h₁⟩, h₂, h₃⟩, h₄, h₅⟩ : A →ₐc[R] B) = f :=\n  rfl\n\n"}
{"name":"BialgHom.coe_copy","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : CoalgebraStruct R A\ninst✝ : CoalgebraStruct R B\nf : CoalgHom R A B\nf' : A → B\nh : Eq f' ⇑f\n⊢ Eq (⇑(f.copy f' h)) f'","decl":"@[simp]\ntheorem coe_copy (f : A →ₗc[R] B) (f' : A → B) (h : f' = ⇑f) : ⇑(f.copy f' h) = f' :=\n  rfl\n\n"}
{"name":"BialgHom.copy_eq","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : CoalgebraStruct R A\ninst✝ : CoalgebraStruct R B\nf : CoalgHom R A B\nf' : A → B\nh : Eq f' ⇑f\n⊢ Eq (f.copy f' h) f","decl":"theorem copy_eq (f : A →ₗc[R] B) (f' : A → B) (h : f' = ⇑f) : f.copy f' h = f :=\n  DFunLike.ext' h\n\n"}
{"name":"BialgHom.id_apply","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : Semiring A\ninst✝¹ : Algebra R A\ninst✝ : CoalgebraStruct R A\na : A\n⊢ Eq ((BialgHom.id R A) a) a","decl":"/-- Identity map as a `BialgHom`. -/\n@[simps!] protected def id : A →ₐc[R] A :=\n  { CoalgHom.id R A, AlgHom.id R A with }\n\n"}
{"name":"BialgHom.coe_id","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : Semiring A\ninst✝¹ : Algebra R A\ninst✝ : CoalgebraStruct R A\n⊢ Eq (⇑(BialgHom.id R A)) id","decl":"@[simp, norm_cast]\ntheorem coe_id : ⇑(BialgHom.id R A) = id :=\n  rfl\n\n"}
{"name":"BialgHom.id_toCoalgHom","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : Semiring A\ninst✝¹ : Algebra R A\ninst✝ : CoalgebraStruct R A\n⊢ Eq (↑(BialgHom.id R A)) (CoalgHom.id R A)","decl":"@[simp]\ntheorem id_toCoalgHom : BialgHom.id R A = CoalgHom.id R A :=\n  rfl\n\n"}
{"name":"BialgHom.id_toAlgHom","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : Semiring A\ninst✝¹ : Algebra R A\ninst✝ : CoalgebraStruct R A\n⊢ Eq (↑(BialgHom.id R A)) (AlgHom.id R A)","decl":"@[simp]\ntheorem id_toAlgHom : BialgHom.id R A = AlgHom.id R A :=\n  rfl\n\n"}
{"name":"BialgHom.comp_apply","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\nC : Type u_4\ninst✝⁹ : CommSemiring R\ninst✝⁸ : Semiring A\ninst✝⁷ : Algebra R A\ninst✝⁶ : Semiring B\ninst✝⁵ : Algebra R B\ninst✝⁴ : Semiring C\ninst✝³ : Algebra R C\ninst✝² : CoalgebraStruct R A\ninst✝¹ : CoalgebraStruct R B\ninst✝ : CoalgebraStruct R C\nφ₁ : BialgHom R B C\nφ₂ : BialgHom R A B\na✝ : A\n⊢ Eq ((φ₁.comp φ₂) a✝) (φ₁ (φ₂ a✝))","decl":"/-- Composition of bialgebra homomorphisms. -/\n@[simps!] def comp (φ₁ : B →ₐc[R] C) (φ₂ : A →ₐc[R] B) : A →ₐc[R] C :=\n  { (φ₁ : B →ₗc[R] C).comp (φ₂ : A →ₗc[R] B), (φ₁ : B →ₐ[R] C).comp (φ₂ : A →ₐ[R] B) with }\n\n"}
{"name":"BialgHom.coe_comp","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\nC : Type u_4\ninst✝⁹ : CommSemiring R\ninst✝⁸ : Semiring A\ninst✝⁷ : Algebra R A\ninst✝⁶ : Semiring B\ninst✝⁵ : Algebra R B\ninst✝⁴ : Semiring C\ninst✝³ : Algebra R C\ninst✝² : CoalgebraStruct R A\ninst✝¹ : CoalgebraStruct R B\ninst✝ : CoalgebraStruct R C\nφ₁ : BialgHom R B C\nφ₂ : BialgHom R A B\n⊢ Eq (⇑(φ₁.comp φ₂)) (Function.comp ⇑φ₁ ⇑φ₂)","decl":"@[simp]\ntheorem coe_comp (φ₁ : B →ₐc[R] C) (φ₂ : A →ₐc[R] B) : ⇑(φ₁.comp φ₂) = φ₁ ∘ φ₂ :=\n  rfl\n\n"}
{"name":"BialgHom.comp_toCoalgHom","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\nC : Type u_4\ninst✝⁹ : CommSemiring R\ninst✝⁸ : Semiring A\ninst✝⁷ : Algebra R A\ninst✝⁶ : Semiring B\ninst✝⁵ : Algebra R B\ninst✝⁴ : Semiring C\ninst✝³ : Algebra R C\ninst✝² : CoalgebraStruct R A\ninst✝¹ : CoalgebraStruct R B\ninst✝ : CoalgebraStruct R C\nφ₁ : BialgHom R B C\nφ₂ : BialgHom R A B\n⊢ Eq (↑(φ₁.comp φ₂)) ((↑φ₁).comp ↑φ₂)","decl":"@[simp]\ntheorem comp_toCoalgHom (φ₁ : B →ₐc[R] C) (φ₂ : A →ₐc[R] B) :\n    φ₁.comp φ₂ = (φ₁ : B →ₗc[R] C).comp (φ₂ : A →ₗc[R] B) :=\n  rfl\n\n"}
{"name":"BialgHom.comp_toAlgHom","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\nC : Type u_4\ninst✝⁹ : CommSemiring R\ninst✝⁸ : Semiring A\ninst✝⁷ : Algebra R A\ninst✝⁶ : Semiring B\ninst✝⁵ : Algebra R B\ninst✝⁴ : Semiring C\ninst✝³ : Algebra R C\ninst✝² : CoalgebraStruct R A\ninst✝¹ : CoalgebraStruct R B\ninst✝ : CoalgebraStruct R C\nφ₁ : BialgHom R B C\nφ₂ : BialgHom R A B\n⊢ Eq (↑(φ₁.comp φ₂)) ((↑φ₁).comp ↑φ₂)","decl":"@[simp]\ntheorem comp_toAlgHom (φ₁ : B →ₐc[R] C) (φ₂ : A →ₐc[R] B) :\n    φ₁.comp φ₂ = (φ₁ : B →ₐ[R] C).comp (φ₂ : A →ₐ[R] B) :=\n  rfl\n\n"}
{"name":"BialgHom.comp_id","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : CoalgebraStruct R A\ninst✝ : CoalgebraStruct R B\nφ : BialgHom R A B\n⊢ Eq (φ.comp (BialgHom.id R A)) φ","decl":"@[simp]\ntheorem comp_id : φ.comp (BialgHom.id R A) = φ :=\n  ext fun _x => rfl\n\n"}
{"name":"BialgHom.id_comp","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : CoalgebraStruct R A\ninst✝ : CoalgebraStruct R B\nφ : BialgHom R A B\n⊢ Eq ((BialgHom.id R B).comp φ) φ","decl":"@[simp]\ntheorem id_comp : (BialgHom.id R B).comp φ = φ :=\n  ext fun _x => rfl\n\n"}
{"name":"BialgHom.comp_assoc","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\nC : Type u_4\nD : Type u_5\ninst✝¹² : CommSemiring R\ninst✝¹¹ : Semiring A\ninst✝¹⁰ : Algebra R A\ninst✝⁹ : Semiring B\ninst✝⁸ : Algebra R B\ninst✝⁷ : Semiring C\ninst✝⁶ : Algebra R C\ninst✝⁵ : Semiring D\ninst✝⁴ : Algebra R D\ninst✝³ : CoalgebraStruct R A\ninst✝² : CoalgebraStruct R B\ninst✝¹ : CoalgebraStruct R C\ninst✝ : CoalgebraStruct R D\nφ₁ : BialgHom R C D\nφ₂ : BialgHom R B C\nφ₃ : BialgHom R A B\n⊢ Eq ((φ₁.comp φ₂).comp φ₃) (φ₁.comp (φ₂.comp φ₃))","decl":"theorem comp_assoc (φ₁ : C →ₐc[R] D) (φ₂ : B →ₐc[R] C) (φ₃ : A →ₐc[R] B) :\n    (φ₁.comp φ₂).comp φ₃ = φ₁.comp (φ₂.comp φ₃) :=\n  ext fun _x => rfl\n\n"}
{"name":"BialgHom.map_smul_of_tower","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁹ : CommSemiring R\ninst✝⁸ : Semiring A\ninst✝⁷ : Algebra R A\ninst✝⁶ : Semiring B\ninst✝⁵ : Algebra R B\ninst✝⁴ : CoalgebraStruct R A\ninst✝³ : CoalgebraStruct R B\nφ : BialgHom R A B\nR' : Type u_6\ninst✝² : SMul R' A\ninst✝¹ : SMul R' B\ninst✝ : LinearMap.CompatibleSMul A B R' R\nr : R'\nx : A\n⊢ Eq (φ (HSMul.hSMul r x)) (HSMul.hSMul r (φ x))","decl":"theorem map_smul_of_tower {R'} [SMul R' A] [SMul R' B] [LinearMap.CompatibleSMul A B R' R] (r : R')\n    (x : A) : φ (r • x) = r • φ x :=\n  φ.toLinearMap.map_smul_of_tower r x\n\n"}
{"name":"BialgHom.End_toOne_one","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : Semiring A\ninst✝¹ : Algebra R A\ninst✝ : CoalgebraStruct R A\n⊢ Eq 1 (BialgHom.id R A)","decl":"@[simps (config := .lemmasOnly) toSemigroup_toMul_mul toOne_one]\ninstance End : Monoid (A →ₐc[R] A) where\n  mul := comp\n  mul_assoc _ _ _ := rfl\n  one := BialgHom.id R A\n  one_mul _ := ext fun _ => rfl\n  mul_one _ := ext fun _ => rfl\n\n"}
{"name":"BialgHom.End_toSemigroup_toMul_mul","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : Semiring A\ninst✝¹ : Algebra R A\ninst✝ : CoalgebraStruct R A\nφ₁ φ₂ : BialgHom R A A\n⊢ Eq (HMul.hMul φ₁ φ₂) (φ₁.comp φ₂)","decl":"@[simps (config := .lemmasOnly) toSemigroup_toMul_mul toOne_one]\ninstance End : Monoid (A →ₐc[R] A) where\n  mul := comp\n  mul_assoc _ _ _ := rfl\n  one := BialgHom.id R A\n  one_mul _ := ext fun _ => rfl\n  mul_one _ := ext fun _ => rfl\n\n"}
{"name":"BialgHom.one_apply","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : Semiring A\ninst✝¹ : Algebra R A\ninst✝ : CoalgebraStruct R A\nx : A\n⊢ Eq (1 x) x","decl":"@[simp]\ntheorem one_apply (x : A) : (1 : A →ₐc[R] A) x = x :=\n  rfl\n\n"}
{"name":"BialgHom.mul_apply","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : Semiring A\ninst✝¹ : Algebra R A\ninst✝ : CoalgebraStruct R A\nφ ψ : BialgHom R A A\nx : A\n⊢ Eq ((HMul.hMul φ ψ) x) (φ (ψ x))","decl":"@[simp]\ntheorem mul_apply (φ ψ : A →ₐc[R] A) (x : A) : (φ * ψ) x = φ (ψ x) :=\n  rfl\n\n"}
{"name":"Bialgebra.counitBialgHom_apply","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Bialgebra R A\nx : A\n⊢ Eq ((Bialgebra.counitBialgHom R A) x) (CoalgebraStruct.counit x)","decl":"@[simp]\ntheorem counitBialgHom_apply (x : A) :\n    counitBialgHom R A x = Coalgebra.counit x := rfl\n\n"}
{"name":"Bialgebra.counitBialgHom_toCoalgHom","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Bialgebra R A\n⊢ Eq (↑(Bialgebra.counitBialgHom R A)) (Coalgebra.counitCoalgHom R A)","decl":"@[simp]\ntheorem counitBialgHom_toCoalgHom :\n    counitBialgHom R A = Coalgebra.counitCoalgHom R A := rfl\n\n"}
{"name":"Bialgebra.subsingleton_to_ring","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Bialgebra R A\n⊢ Subsingleton (BialgHom R A R)","decl":"instance subsingleton_to_ring : Subsingleton (A →ₐc[R] R) :=\n  ⟨fun _ _ => BialgHom.coe_coalgHom_injective (Subsingleton.elim _ _)⟩\n\n"}
{"name":"Bialgebra.ext_to_ring_iff","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Bialgebra R A\nf g : BialgHom R A R\n⊢ Iff (Eq f g) True","decl":"@[ext high]\ntheorem ext_to_ring (f g : A →ₐc[R] R) : f = g := Subsingleton.elim _ _\n\n"}
{"name":"Bialgebra.ext_to_ring","module":"Mathlib.RingTheory.Bialgebra.Hom","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Bialgebra R A\nf g : BialgHom R A R\n⊢ Eq f g","decl":"@[ext high]\ntheorem ext_to_ring (f g : A →ₐc[R] R) : f = g := Subsingleton.elim _ _\n\n"}
