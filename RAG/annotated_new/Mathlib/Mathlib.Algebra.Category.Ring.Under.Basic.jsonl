{"name":"CommRingCat.toAlgHom_id","module":"Mathlib.Algebra.Category.Ring.Under.Basic","initialProofState":"R : CommRingCat\nA : CategoryTheory.Under R\n‚ä¢ Eq (CommRingCat.toAlgHom (CategoryTheory.CategoryStruct.id A)) (AlgHom.id ‚ÜëR ‚ÜëA.right)","decl":"@[simp]\nlemma toAlgHom_id (A : Under R) : toAlgHom (ùüô A) = AlgHom.id R A := rfl\n\n"}
{"name":"CommRingCat.toAlgHom_comp","module":"Mathlib.Algebra.Category.Ring.Under.Basic","initialProofState":"R : CommRingCat\nA B C : CategoryTheory.Under R\nf : Quiver.Hom A B\ng : Quiver.Hom B C\n‚ä¢ Eq (CommRingCat.toAlgHom (CategoryTheory.CategoryStruct.comp f g)) ((CommRingCat.toAlgHom g).comp (CommRingCat.toAlgHom f))","decl":"@[simp]\nlemma toAlgHom_comp {A B C : Under R} (f : A ‚ü∂ B) (g : B ‚ü∂ C) :\n    toAlgHom (f ‚â´ g) = (toAlgHom g).comp (toAlgHom f) := rfl\n\n"}
{"name":"CommRingCat.toAlgHom_apply","module":"Mathlib.Algebra.Category.Ring.Under.Basic","initialProofState":"R : CommRingCat\nA B : CategoryTheory.Under R\nf : Quiver.Hom A B\na : ‚ÜëA.right\n‚ä¢ Eq ((CommRingCat.toAlgHom f) a) ((CategoryTheory.ConcreteCategory.hom f.right) a)","decl":"@[simp]\nlemma toAlgHom_apply {A B : Under R} (f : A ‚ü∂ B) (a : A) :\n    toAlgHom f a = f.right a :=\n  rfl\n\n"}
{"name":"CommRingCat.mkUnder_right","module":"Mathlib.Algebra.Category.Ring.Under.Basic","initialProofState":"R : CommRingCat\nA : Type u\ninst‚úù¬π : CommRing A\ninst‚úù : Algebra (‚ÜëR) A\n‚ä¢ Eq (R.mkUnder A).right (CommRingCat.of A)","decl":"variable (R) in\n/-- Make an object of `Under R` from an `R`-algebra. -/\n@[simps! hom, simps! (config := .lemmasOnly) right]\ndef mkUnder (A : Type u) [CommRing A] [Algebra R A] : Under R :=\n  Under.mk (CommRingCat.ofHom <| algebraMap R A)\n\n"}
{"name":"CommRingCat.mkUnder_hom","module":"Mathlib.Algebra.Category.Ring.Under.Basic","initialProofState":"R : CommRingCat\nA : Type u\ninst‚úù¬π : CommRing A\ninst‚úù : Algebra (‚ÜëR) A\n‚ä¢ Eq (R.mkUnder A).hom (CommRingCat.ofHom (algebraMap (‚ÜëR) A))","decl":"variable (R) in\n/-- Make an object of `Under R` from an `R`-algebra. -/\n@[simps! hom, simps! (config := .lemmasOnly) right]\ndef mkUnder (A : Type u) [CommRing A] [Algebra R A] : Under R :=\n  Under.mk (CommRingCat.ofHom <| algebraMap R A)\n\n"}
{"name":"CommRingCat.mkUnder_ext","module":"Mathlib.Algebra.Category.Ring.Under.Basic","initialProofState":"R : CommRingCat\nA : Type u\ninst‚úù¬π : CommRing A\ninst‚úù : Algebra (‚ÜëR) A\nB : CategoryTheory.Under R\nf g : Quiver.Hom (R.mkUnder A) B\nh : ‚àÄ (a : A), Eq ((CategoryTheory.ConcreteCategory.hom f.right) a) ((CategoryTheory.ConcreteCategory.hom g.right) a)\n‚ä¢ Eq f g","decl":"@[ext]\nlemma mkUnder_ext {A : Type u} [CommRing A] [Algebra R A] {B : Under R}\n    {f g : mkUnder R A ‚ü∂ B} (h : ‚àÄ a : A, f.right a = g.right a) :\n    f = g := by\n  ext x\n  exact h x\n\n"}
{"name":"CommRingCat.mkUnder_ext_iff","module":"Mathlib.Algebra.Category.Ring.Under.Basic","initialProofState":"R : CommRingCat\nA : Type u\ninst‚úù¬π : CommRing A\ninst‚úù : Algebra (‚ÜëR) A\nB : CategoryTheory.Under R\nf g : Quiver.Hom (R.mkUnder A) B\n‚ä¢ Iff (Eq f g) (‚àÄ (a : A), Eq ((CategoryTheory.ConcreteCategory.hom f.right) a) ((CategoryTheory.ConcreteCategory.hom g.right) a))","decl":"@[ext]\nlemma mkUnder_ext {A : Type u} [CommRing A] [Algebra R A] {B : Under R}\n    {f g : mkUnder R A ‚ü∂ B} (h : ‚àÄ a : A, f.right a = g.right a) :\n    f = g := by\n  ext x\n  exact h x\n\n"}
{"name":"AlgHom.toUnder_right","module":"Mathlib.Algebra.Category.Ring.Under.Basic","initialProofState":"R : CommRingCat\nA B : Type u\ninst‚úù¬≥ : CommRing A\ninst‚úù¬≤ : CommRing B\ninst‚úù¬π : Algebra (‚ÜëR) A\ninst‚úù : Algebra (‚ÜëR) B\nf : AlgHom (‚ÜëR) A B\na : A\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom f.toUnder.right) a) (f a)","decl":"@[simp]\nlemma toUnder_right {A B : Type u} [CommRing A] [CommRing B] [Algebra R A]\n    [Algebra R B] (f : A ‚Üí‚Çê[R] B) (a : A) :\n    f.toUnder.right a = f a :=\n  rfl\n\n"}
{"name":"AlgHom.toUnder_comp","module":"Mathlib.Algebra.Category.Ring.Under.Basic","initialProofState":"R : CommRingCat\nA B C : Type u\ninst‚úù‚Åµ : CommRing A\ninst‚úù‚Å¥ : CommRing B\ninst‚úù¬≥ : CommRing C\ninst‚úù¬≤ : Algebra (‚ÜëR) A\ninst‚úù¬π : Algebra (‚ÜëR) B\ninst‚úù : Algebra (‚ÜëR) C\nf : AlgHom (‚ÜëR) A B\ng : AlgHom (‚ÜëR) B C\n‚ä¢ Eq (g.comp f).toUnder (CategoryTheory.CategoryStruct.comp f.toUnder g.toUnder)","decl":"@[simp]\nlemma toUnder_comp {A B C : Type u} [CommRing A] [CommRing B] [CommRing C]\n    [Algebra R A] [Algebra R B] [Algebra R C] (f : A ‚Üí‚Çê[R] B) (g : B ‚Üí‚Çê[R] C) :\n    (g.comp f).toUnder = f.toUnder ‚â´ g.toUnder :=\n  rfl\n\n"}
{"name":"AlgEquiv.toUnder_hom_right_apply","module":"Mathlib.Algebra.Category.Ring.Under.Basic","initialProofState":"R : CommRingCat\nA B : Type u\ninst‚úù¬≥ : CommRing A\ninst‚úù¬≤ : CommRing B\ninst‚úù¬π : Algebra (‚ÜëR) A\ninst‚úù : Algebra (‚ÜëR) B\nf : AlgEquiv (‚ÜëR) A B\na : A\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom f.toUnder.hom.right) a) (f a)","decl":"@[simp]\nlemma toUnder_hom_right_apply {A B : Type u} [CommRing A] [CommRing B] [Algebra R A]\n    [Algebra R B] (f : A ‚âÉ‚Çê[R] B) (a : A) :\n    f.toUnder.hom.right a = f a := rfl\n\n"}
{"name":"AlgEquiv.toUnder_inv_right_apply","module":"Mathlib.Algebra.Category.Ring.Under.Basic","initialProofState":"R : CommRingCat\nA B : Type u\ninst‚úù¬≥ : CommRing A\ninst‚úù¬≤ : CommRing B\ninst‚úù¬π : Algebra (‚ÜëR) A\ninst‚úù : Algebra (‚ÜëR) B\nf : AlgEquiv (‚ÜëR) A B\nb : B\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom f.toUnder.inv.right) b) (f.symm b)","decl":"@[simp]\nlemma toUnder_inv_right_apply {A B : Type u} [CommRing A] [CommRing B] [Algebra R A]\n    [Algebra R B] (f : A ‚âÉ‚Çê[R] B) (b : B) :\n    f.toUnder.inv.right b = f.symm b := rfl\n\n"}
{"name":"AlgEquiv.toUnder_trans","module":"Mathlib.Algebra.Category.Ring.Under.Basic","initialProofState":"R : CommRingCat\nA B C : Type u\ninst‚úù‚Åµ : CommRing A\ninst‚úù‚Å¥ : CommRing B\ninst‚úù¬≥ : CommRing C\ninst‚úù¬≤ : Algebra (‚ÜëR) A\ninst‚úù¬π : Algebra (‚ÜëR) B\ninst‚úù : Algebra (‚ÜëR) C\nf : AlgEquiv (‚ÜëR) A B\ng : AlgEquiv (‚ÜëR) B C\n‚ä¢ Eq (f.trans g).toUnder (f.toUnder.trans g.toUnder)","decl":"@[simp]\nlemma toUnder_trans {A B C : Type u} [CommRing A] [CommRing B] [CommRing C]\n    [Algebra R A] [Algebra R B] [Algebra R C] (f : A ‚âÉ‚Çê[R] B) (g : B ‚âÉ‚Çê[R] C) :\n    (f.trans g).toUnder = f.toUnder ‚â™‚â´ g.toUnder :=\n  rfl\n\n"}
{"name":"CommRingCat.tensorProd_map_right","module":"Mathlib.Algebra.Category.Ring.Under.Basic","initialProofState":"R S : CommRingCat\ninst‚úù : Algebra ‚ÜëR ‚ÜëS\nX‚úù Y‚úù : CategoryTheory.Under R\nf : Quiver.Hom X‚úù Y‚úù\n‚ä¢ Eq ((R.tensorProd S).map f).right (CommRingCat.ofHom ‚Üë(Algebra.TensorProduct.map (AlgHom.id ‚ÜëS ‚ÜëS) (CommRingCat.toAlgHom f)))","decl":"variable (R S) in\n/-- The base change functor `A ‚Ü¶ S ‚äó[R] A`. -/\n@[simps! map_right]\ndef tensorProd : Under R ‚•§ Under S where\n  obj A := mkUnder S (S ‚äó[R] A)\n  map f := Algebra.TensorProduct.map (AlgHom.id S S) (toAlgHom f) |>.toUnder\n  map_comp {X Y Z} f g := by simp [Algebra.TensorProduct.map_id_comp]\n\n"}
{"name":"CommRingCat.pushout_inl_tensorProdObjIsoPushoutObj_inv_right","module":"Mathlib.Algebra.Category.Ring.Under.Basic","initialProofState":"R S : CommRingCat\ninst‚úù : Algebra ‚ÜëR ‚ÜëS\nA : CategoryTheory.Under R\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Limits.pushout.inl A.hom (CommRingCat.ofHom (algebraMap ‚ÜëR ‚ÜëS))) (CommRingCat.tensorProdObjIsoPushoutObj S A).inv.right) (CommRingCat.ofHom Algebra.TensorProduct.includeRight.toRingHom)","decl":"@[reassoc (attr := simp)]\nlemma pushout_inl_tensorProdObjIsoPushoutObj_inv_right (A : Under R) :\n    pushout.inl A.hom (ofHom <| algebraMap R S) ‚â´ (tensorProdObjIsoPushoutObj S A).inv.right =\n      (ofHom <| Algebra.TensorProduct.includeRight.toRingHom) := by\n  simp [tensorProdObjIsoPushoutObj]\n\n"}
{"name":"CommRingCat.pushout_inl_tensorProdObjIsoPushoutObj_inv_right_assoc","module":"Mathlib.Algebra.Category.Ring.Under.Basic","initialProofState":"R S : CommRingCat\ninst‚úù : Algebra ‚ÜëR ‚ÜëS\nA : CategoryTheory.Under R\nZ : CommRingCat\nh : Quiver.Hom (S.mkUnder (TensorProduct ‚ÜëR ‚ÜëS ‚ÜëA.right)).right Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Limits.pushout.inl A.hom (CommRingCat.ofHom (algebraMap ‚ÜëR ‚ÜëS))) (CategoryTheory.CategoryStruct.comp (CommRingCat.tensorProdObjIsoPushoutObj S A).inv.right h)) (CategoryTheory.CategoryStruct.comp (CommRingCat.ofHom Algebra.TensorProduct.includeRight.toRingHom) h)","decl":"@[reassoc (attr := simp)]\nlemma pushout_inl_tensorProdObjIsoPushoutObj_inv_right (A : Under R) :\n    pushout.inl A.hom (ofHom <| algebraMap R S) ‚â´ (tensorProdObjIsoPushoutObj S A).inv.right =\n      (ofHom <| Algebra.TensorProduct.includeRight.toRingHom) := by\n  simp [tensorProdObjIsoPushoutObj]\n\n"}
{"name":"CommRingCat.pushout_inr_tensorProdObjIsoPushoutObj_inv_right_assoc","module":"Mathlib.Algebra.Category.Ring.Under.Basic","initialProofState":"R S : CommRingCat\ninst‚úù : Algebra ‚ÜëR ‚ÜëS\nA : CategoryTheory.Under R\nZ : CommRingCat\nh : Quiver.Hom (S.mkUnder (TensorProduct ‚ÜëR ‚ÜëS ‚ÜëA.right)).right Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Limits.pushout.inr A.hom (CommRingCat.ofHom (algebraMap ‚ÜëR ‚ÜëS))) (CategoryTheory.CategoryStruct.comp (CommRingCat.tensorProdObjIsoPushoutObj S A).inv.right h)) (CategoryTheory.CategoryStruct.comp (CommRingCat.ofHom Algebra.TensorProduct.includeLeftRingHom) h)","decl":"@[reassoc (attr := simp)]\nlemma pushout_inr_tensorProdObjIsoPushoutObj_inv_right (A : Under R) :\n    pushout.inr A.hom (ofHom <| algebraMap R S) ‚â´\n      (tensorProdObjIsoPushoutObj S A).inv.right =\n      (CommRingCat.ofHom <| Algebra.TensorProduct.includeLeftRingHom) := by\n  simp [tensorProdObjIsoPushoutObj]\n\n"}
{"name":"CommRingCat.pushout_inr_tensorProdObjIsoPushoutObj_inv_right","module":"Mathlib.Algebra.Category.Ring.Under.Basic","initialProofState":"R S : CommRingCat\ninst‚úù : Algebra ‚ÜëR ‚ÜëS\nA : CategoryTheory.Under R\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Limits.pushout.inr A.hom (CommRingCat.ofHom (algebraMap ‚ÜëR ‚ÜëS))) (CommRingCat.tensorProdObjIsoPushoutObj S A).inv.right) (CommRingCat.ofHom Algebra.TensorProduct.includeLeftRingHom)","decl":"@[reassoc (attr := simp)]\nlemma pushout_inr_tensorProdObjIsoPushoutObj_inv_right (A : Under R) :\n    pushout.inr A.hom (ofHom <| algebraMap R S) ‚â´\n      (tensorProdObjIsoPushoutObj S A).inv.right =\n      (CommRingCat.ofHom <| Algebra.TensorProduct.includeLeftRingHom) := by\n  simp [tensorProdObjIsoPushoutObj]\n\n"}
{"name":"CommRingCat.tensorProdIsoPushout_app","module":"Mathlib.Algebra.Category.Ring.Under.Basic","initialProofState":"R S : CommRingCat\ninst‚úù : Algebra ‚ÜëR ‚ÜëS\nA : CategoryTheory.Under R\n‚ä¢ Eq ((R.tensorProdIsoPushout S).app A) (CommRingCat.tensorProdObjIsoPushoutObj S A)","decl":"@[simp]\nlemma tensorProdIsoPushout_app (A : Under R) :\n    (tensorProdIsoPushout R S).app A = tensorProdObjIsoPushoutObj S A :=\n  rfl\n\n"}
