{"name":"NonarchimedeanAddGroup.exists_openAddSubgroup_separating","module":"Mathlib.Topology.Algebra.Nonarchimedean.TotallyDisconnected","initialProofState":"G : Type u_1\ninst✝³ : TopologicalSpace G\ninst✝² : AddGroup G\ninst✝¹ : NonarchimedeanAddGroup G\ninst✝ : T2Space G\na b : G\nh : Ne a b\n⊢ Exists fun V => Disjoint (HVAdd.hVAdd a ↑V) (HVAdd.hVAdd b ↑V)","decl":"@[to_additive]\nlemma exists_openSubgroup_separating {a b : G} (h : a ≠ b) :\n    ∃ V : OpenSubgroup G, Disjoint (a • (V : Set G)) (b • V) := by\n  obtain ⟨u, v, _, open_v, mem_u, mem_v, dis⟩ := t2_separation (h ∘ inv_mul_eq_one.mp)\n  obtain ⟨V, hV⟩ := is_nonarchimedean v (open_v.mem_nhds mem_v)\n  use V\n  simp only [Disjoint, Set.le_eq_subset, Set.bot_eq_empty, Set.subset_empty_iff]\n  intros x mem_aV mem_bV\n  by_contra! con\n  obtain ⟨s, hs⟩ := con\n  have hsa : s ∈ a • (V : Set G) := mem_aV hs\n  have hsb : s ∈ b • (V : Set G) := mem_bV hs\n  rw [mem_leftCoset_iff] at hsa hsb\n  refine dis.subset_compl_right mem_u (hV ?_)\n  simpa [mul_assoc] using mul_mem hsa (inv_mem hsb)\n\n"}
{"name":"NonarchimedeanGroup.exists_openSubgroup_separating","module":"Mathlib.Topology.Algebra.Nonarchimedean.TotallyDisconnected","initialProofState":"G : Type u_1\ninst✝³ : TopologicalSpace G\ninst✝² : Group G\ninst✝¹ : NonarchimedeanGroup G\ninst✝ : T2Space G\na b : G\nh : Ne a b\n⊢ Exists fun V => Disjoint (HSMul.hSMul a ↑V) (HSMul.hSMul b ↑V)","decl":"@[to_additive]\nlemma exists_openSubgroup_separating {a b : G} (h : a ≠ b) :\n    ∃ V : OpenSubgroup G, Disjoint (a • (V : Set G)) (b • V) := by\n  obtain ⟨u, v, _, open_v, mem_u, mem_v, dis⟩ := t2_separation (h ∘ inv_mul_eq_one.mp)\n  obtain ⟨V, hV⟩ := is_nonarchimedean v (open_v.mem_nhds mem_v)\n  use V\n  simp only [Disjoint, Set.le_eq_subset, Set.bot_eq_empty, Set.subset_empty_iff]\n  intros x mem_aV mem_bV\n  by_contra! con\n  obtain ⟨s, hs⟩ := con\n  have hsa : s ∈ a • (V : Set G) := mem_aV hs\n  have hsb : s ∈ b • (V : Set G) := mem_bV hs\n  rw [mem_leftCoset_iff] at hsa hsb\n  refine dis.subset_compl_right mem_u (hV ?_)\n  simpa [mul_assoc] using mul_mem hsa (inv_mem hsb)\n\n"}
{"name":"NonarchimedeanAddGroup.instTotallySeparated","module":"Mathlib.Topology.Algebra.Nonarchimedean.TotallyDisconnected","initialProofState":"G : Type u_1\ninst✝ : TopologicalSpace G\n⊢ TotallySeparatedSpace G","decl":"@[to_additive]\ninstance (priority := 100) instTotallySeparated : TotallySeparatedSpace G where\n  isTotallySeparated_univ x _ y _ hxy := by\n    obtain ⟨V, dxy⟩ := exists_openSubgroup_separating hxy\n    exact ⟨_, _, V.isOpen.smul x, (V.isClosed.smul x).isOpen_compl, mem_own_leftCoset ..,\n      dxy.subset_compl_left <| mem_own_leftCoset .., by simp, disjoint_compl_right⟩\n\n"}
{"name":"NonarchimedeanGroup.instTotallySeparated","module":"Mathlib.Topology.Algebra.Nonarchimedean.TotallyDisconnected","initialProofState":"G : Type u_1\ninst✝ : TopologicalSpace G\n⊢ TotallySeparatedSpace G","decl":"@[to_additive]\ninstance (priority := 100) instTotallySeparated : TotallySeparatedSpace G where\n  isTotallySeparated_univ x _ y _ hxy := by\n    obtain ⟨V, dxy⟩ := exists_openSubgroup_separating hxy\n    exact ⟨_, _, V.isOpen.smul x, (V.isClosed.smul x).isOpen_compl, mem_own_leftCoset ..,\n      dxy.subset_compl_left <| mem_own_leftCoset .., by simp, disjoint_compl_right⟩\n\n"}
