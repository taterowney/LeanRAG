{"name":"Matrix.exp_diagonal","module":"Mathlib.Analysis.Normed.Algebra.MatrixExponential","initialProofState":"𝕂 : Type u_1\nm : Type u_2\n𝔸 : Type u_5\ninst✝⁷ : Fintype m\ninst✝⁶ : DecidableEq m\ninst✝⁵ : Field 𝕂\ninst✝⁴ : Ring 𝔸\ninst✝³ : TopologicalSpace 𝔸\ninst✝² : TopologicalRing 𝔸\ninst✝¹ : Algebra 𝕂 𝔸\ninst✝ : T2Space 𝔸\nv : m → 𝔸\n⊢ Eq (NormedSpace.exp 𝕂 (Matrix.diagonal v)) (Matrix.diagonal (NormedSpace.exp 𝕂 v))","decl":"theorem exp_diagonal (v : m → 𝔸) : exp 𝕂 (diagonal v) = diagonal (exp 𝕂 v) := by\n  simp_rw [exp_eq_tsum, diagonal_pow, ← diagonal_smul, ← diagonal_tsum]\n\n"}
{"name":"Matrix.exp_blockDiagonal","module":"Mathlib.Analysis.Normed.Algebra.MatrixExponential","initialProofState":"𝕂 : Type u_1\nm : Type u_2\nn : Type u_3\n𝔸 : Type u_5\ninst✝⁹ : Fintype m\ninst✝⁸ : DecidableEq m\ninst✝⁷ : Fintype n\ninst✝⁶ : DecidableEq n\ninst✝⁵ : Field 𝕂\ninst✝⁴ : Ring 𝔸\ninst✝³ : TopologicalSpace 𝔸\ninst✝² : TopologicalRing 𝔸\ninst✝¹ : Algebra 𝕂 𝔸\ninst✝ : T2Space 𝔸\nv : m → Matrix n n 𝔸\n⊢ Eq (NormedSpace.exp 𝕂 (Matrix.blockDiagonal v)) (Matrix.blockDiagonal (NormedSpace.exp 𝕂 v))","decl":"theorem exp_blockDiagonal (v : m → Matrix n n 𝔸) :\n    exp 𝕂 (blockDiagonal v) = blockDiagonal (exp 𝕂 v) := by\n  simp_rw [exp_eq_tsum, ← blockDiagonal_pow, ← blockDiagonal_smul, ← blockDiagonal_tsum]\n\n"}
{"name":"Matrix.exp_blockDiagonal'","module":"Mathlib.Analysis.Normed.Algebra.MatrixExponential","initialProofState":"𝕂 : Type u_1\nm : Type u_2\nn' : m → Type u_4\n𝔸 : Type u_5\ninst✝⁹ : Fintype m\ninst✝⁸ : DecidableEq m\ninst✝⁷ : (i : m) → Fintype (n' i)\ninst✝⁶ : (i : m) → DecidableEq (n' i)\ninst✝⁵ : Field 𝕂\ninst✝⁴ : Ring 𝔸\ninst✝³ : TopologicalSpace 𝔸\ninst✝² : TopologicalRing 𝔸\ninst✝¹ : Algebra 𝕂 𝔸\ninst✝ : T2Space 𝔸\nv : (i : m) → Matrix (n' i) (n' i) 𝔸\n⊢ Eq (NormedSpace.exp 𝕂 (Matrix.blockDiagonal' v)) (Matrix.blockDiagonal' (NormedSpace.exp 𝕂 v))","decl":"theorem exp_blockDiagonal' (v : ∀ i, Matrix (n' i) (n' i) 𝔸) :\n    exp 𝕂 (blockDiagonal' v) = blockDiagonal' (exp 𝕂 v) := by\n  simp_rw [exp_eq_tsum, ← blockDiagonal'_pow, ← blockDiagonal'_smul, ← blockDiagonal'_tsum]\n\n"}
{"name":"Matrix.exp_conjTranspose","module":"Mathlib.Analysis.Normed.Algebra.MatrixExponential","initialProofState":"𝕂 : Type u_1\nm : Type u_2\n𝔸 : Type u_5\ninst✝⁹ : Fintype m\ninst✝⁸ : DecidableEq m\ninst✝⁷ : Field 𝕂\ninst✝⁶ : Ring 𝔸\ninst✝⁵ : TopologicalSpace 𝔸\ninst✝⁴ : TopologicalRing 𝔸\ninst✝³ : Algebra 𝕂 𝔸\ninst✝² : T2Space 𝔸\ninst✝¹ : StarRing 𝔸\ninst✝ : ContinuousStar 𝔸\nA : Matrix m m 𝔸\n⊢ Eq (NormedSpace.exp 𝕂 A.conjTranspose) (NormedSpace.exp 𝕂 A).conjTranspose","decl":"theorem exp_conjTranspose [StarRing 𝔸] [ContinuousStar 𝔸] (A : Matrix m m 𝔸) :\n    exp 𝕂 Aᴴ = (exp 𝕂 A)ᴴ :=\n  (star_exp A).symm\n\n"}
{"name":"Matrix.IsHermitian.exp","module":"Mathlib.Analysis.Normed.Algebra.MatrixExponential","initialProofState":"𝕂 : Type u_1\nm : Type u_2\n𝔸 : Type u_5\ninst✝⁹ : Fintype m\ninst✝⁸ : DecidableEq m\ninst✝⁷ : Field 𝕂\ninst✝⁶ : Ring 𝔸\ninst✝⁵ : TopologicalSpace 𝔸\ninst✝⁴ : TopologicalRing 𝔸\ninst✝³ : Algebra 𝕂 𝔸\ninst✝² : T2Space 𝔸\ninst✝¹ : StarRing 𝔸\ninst✝ : ContinuousStar 𝔸\nA : Matrix m m 𝔸\nh : A.IsHermitian\n⊢ (NormedSpace.exp 𝕂 A).IsHermitian","decl":"theorem IsHermitian.exp [StarRing 𝔸] [ContinuousStar 𝔸] {A : Matrix m m 𝔸} (h : A.IsHermitian) :\n    (exp 𝕂 A).IsHermitian :=\n  (exp_conjTranspose _ _).symm.trans <| congr_arg _ h\n\n"}
{"name":"Matrix.exp_transpose","module":"Mathlib.Analysis.Normed.Algebra.MatrixExponential","initialProofState":"𝕂 : Type u_1\nm : Type u_2\n𝔸 : Type u_5\ninst✝⁷ : Fintype m\ninst✝⁶ : DecidableEq m\ninst✝⁵ : Field 𝕂\ninst✝⁴ : CommRing 𝔸\ninst✝³ : TopologicalSpace 𝔸\ninst✝² : TopologicalRing 𝔸\ninst✝¹ : Algebra 𝕂 𝔸\ninst✝ : T2Space 𝔸\nA : Matrix m m 𝔸\n⊢ Eq (NormedSpace.exp 𝕂 A.transpose) (NormedSpace.exp 𝕂 A).transpose","decl":"theorem exp_transpose (A : Matrix m m 𝔸) : exp 𝕂 Aᵀ = (exp 𝕂 A)ᵀ := by\n  simp_rw [exp_eq_tsum, transpose_tsum, transpose_smul, transpose_pow]\n\n"}
{"name":"Matrix.IsSymm.exp","module":"Mathlib.Analysis.Normed.Algebra.MatrixExponential","initialProofState":"𝕂 : Type u_1\nm : Type u_2\n𝔸 : Type u_5\ninst✝⁷ : Fintype m\ninst✝⁶ : DecidableEq m\ninst✝⁵ : Field 𝕂\ninst✝⁴ : CommRing 𝔸\ninst✝³ : TopologicalSpace 𝔸\ninst✝² : TopologicalRing 𝔸\ninst✝¹ : Algebra 𝕂 𝔸\ninst✝ : T2Space 𝔸\nA : Matrix m m 𝔸\nh : A.IsSymm\n⊢ (NormedSpace.exp 𝕂 A).IsSymm","decl":"theorem IsSymm.exp {A : Matrix m m 𝔸} (h : A.IsSymm) : (exp 𝕂 A).IsSymm :=\n  (exp_transpose _ _).symm.trans <| congr_arg _ h\n\n"}
{"name":"Matrix.exp_add_of_commute","module":"Mathlib.Analysis.Normed.Algebra.MatrixExponential","initialProofState":"𝕂 : Type u_1\nm : Type u_2\n𝔸 : Type u_5\ninst✝⁵ : RCLike 𝕂\ninst✝⁴ : Fintype m\ninst✝³ : DecidableEq m\ninst✝² : NormedRing 𝔸\ninst✝¹ : NormedAlgebra 𝕂 𝔸\ninst✝ : CompleteSpace 𝔸\nA B : Matrix m m 𝔸\nh : Commute A B\n⊢ Eq (NormedSpace.exp 𝕂 (HAdd.hAdd A B)) (HMul.hMul (NormedSpace.exp 𝕂 A) (NormedSpace.exp 𝕂 B))","decl":"nonrec theorem exp_add_of_commute (A B : Matrix m m 𝔸) (h : Commute A B) :\n    exp 𝕂 (A + B) = exp 𝕂 A * exp 𝕂 B := by\n  letI : SeminormedRing (Matrix m m 𝔸) := Matrix.linftyOpSemiNormedRing\n  letI : NormedRing (Matrix m m 𝔸) := Matrix.linftyOpNormedRing\n  letI : NormedAlgebra 𝕂 (Matrix m m 𝔸) := Matrix.linftyOpNormedAlgebra\n  exact exp_add_of_commute h\n\n"}
{"name":"Matrix.exp_sum_of_commute","module":"Mathlib.Analysis.Normed.Algebra.MatrixExponential","initialProofState":"𝕂 : Type u_1\nm : Type u_2\n𝔸 : Type u_5\ninst✝⁵ : RCLike 𝕂\ninst✝⁴ : Fintype m\ninst✝³ : DecidableEq m\ninst✝² : NormedRing 𝔸\ninst✝¹ : NormedAlgebra 𝕂 𝔸\ninst✝ : CompleteSpace 𝔸\nι : Type u_6\ns : Finset ι\nf : ι → Matrix m m 𝔸\nh : (↑s).Pairwise (Function.onFun Commute f)\n⊢ Eq (NormedSpace.exp 𝕂 (s.sum fun i => f i)) (s.noncommProd (fun i => NormedSpace.exp 𝕂 (f i)) ⋯)","decl":"open scoped Function in -- required for scoped `on` notation\nnonrec theorem exp_sum_of_commute {ι} (s : Finset ι) (f : ι → Matrix m m 𝔸)\n    (h : (s : Set ι).Pairwise (Commute on f)) :\n    exp 𝕂 (∑ i ∈ s, f i) =\n      s.noncommProd (fun i => exp 𝕂 (f i)) fun _ hi _ hj _ => (h.of_refl hi hj).exp 𝕂 := by\n  letI : SeminormedRing (Matrix m m 𝔸) := Matrix.linftyOpSemiNormedRing\n  letI : NormedRing (Matrix m m 𝔸) := Matrix.linftyOpNormedRing\n  letI : NormedAlgebra 𝕂 (Matrix m m 𝔸) := Matrix.linftyOpNormedAlgebra\n  exact exp_sum_of_commute s f h\n\n"}
{"name":"Matrix.exp_nsmul","module":"Mathlib.Analysis.Normed.Algebra.MatrixExponential","initialProofState":"𝕂 : Type u_1\nm : Type u_2\n𝔸 : Type u_5\ninst✝⁵ : RCLike 𝕂\ninst✝⁴ : Fintype m\ninst✝³ : DecidableEq m\ninst✝² : NormedRing 𝔸\ninst✝¹ : NormedAlgebra 𝕂 𝔸\ninst✝ : CompleteSpace 𝔸\nn : Nat\nA : Matrix m m 𝔸\n⊢ Eq (NormedSpace.exp 𝕂 (HSMul.hSMul n A)) (HPow.hPow (NormedSpace.exp 𝕂 A) n)","decl":"nonrec theorem exp_nsmul (n : ℕ) (A : Matrix m m 𝔸) : exp 𝕂 (n • A) = exp 𝕂 A ^ n := by\n  letI : SeminormedRing (Matrix m m 𝔸) := Matrix.linftyOpSemiNormedRing\n  letI : NormedRing (Matrix m m 𝔸) := Matrix.linftyOpNormedRing\n  letI : NormedAlgebra 𝕂 (Matrix m m 𝔸) := Matrix.linftyOpNormedAlgebra\n  exact exp_nsmul n A\n\n"}
{"name":"Matrix.isUnit_exp","module":"Mathlib.Analysis.Normed.Algebra.MatrixExponential","initialProofState":"𝕂 : Type u_1\nm : Type u_2\n𝔸 : Type u_5\ninst✝⁵ : RCLike 𝕂\ninst✝⁴ : Fintype m\ninst✝³ : DecidableEq m\ninst✝² : NormedRing 𝔸\ninst✝¹ : NormedAlgebra 𝕂 𝔸\ninst✝ : CompleteSpace 𝔸\nA : Matrix m m 𝔸\n⊢ IsUnit (NormedSpace.exp 𝕂 A)","decl":"nonrec theorem isUnit_exp (A : Matrix m m 𝔸) : IsUnit (exp 𝕂 A) := by\n  letI : SeminormedRing (Matrix m m 𝔸) := Matrix.linftyOpSemiNormedRing\n  letI : NormedRing (Matrix m m 𝔸) := Matrix.linftyOpNormedRing\n  letI : NormedAlgebra 𝕂 (Matrix m m 𝔸) := Matrix.linftyOpNormedAlgebra\n  exact isUnit_exp _ A\n\n"}
{"name":"Matrix.exp_units_conj","module":"Mathlib.Analysis.Normed.Algebra.MatrixExponential","initialProofState":"𝕂 : Type u_1\nm : Type u_2\n𝔸 : Type u_5\ninst✝⁵ : RCLike 𝕂\ninst✝⁴ : Fintype m\ninst✝³ : DecidableEq m\ninst✝² : NormedRing 𝔸\ninst✝¹ : NormedAlgebra 𝕂 𝔸\ninst✝ : CompleteSpace 𝔸\nU : Units (Matrix m m 𝔸)\nA : Matrix m m 𝔸\n⊢ Eq (NormedSpace.exp 𝕂 (HMul.hMul (HMul.hMul (↑U) A) ↑(Inv.inv U))) (HMul.hMul (HMul.hMul (↑U) (NormedSpace.exp 𝕂 A)) ↑(Inv.inv U))","decl":"nonrec theorem exp_units_conj (U : (Matrix m m 𝔸)ˣ) (A : Matrix m m 𝔸) :\n    exp 𝕂 (U * A * U⁻¹) = U * exp 𝕂 A * U⁻¹ := by\n  letI : SeminormedRing (Matrix m m 𝔸) := Matrix.linftyOpSemiNormedRing\n  letI : NormedRing (Matrix m m 𝔸) := Matrix.linftyOpNormedRing\n  letI : NormedAlgebra 𝕂 (Matrix m m 𝔸) := Matrix.linftyOpNormedAlgebra\n  exact exp_units_conj _ U A\n\n"}
{"name":"Matrix.exp_units_conj'","module":"Mathlib.Analysis.Normed.Algebra.MatrixExponential","initialProofState":"𝕂 : Type u_1\nm : Type u_2\n𝔸 : Type u_5\ninst✝⁵ : RCLike 𝕂\ninst✝⁴ : Fintype m\ninst✝³ : DecidableEq m\ninst✝² : NormedRing 𝔸\ninst✝¹ : NormedAlgebra 𝕂 𝔸\ninst✝ : CompleteSpace 𝔸\nU : Units (Matrix m m 𝔸)\nA : Matrix m m 𝔸\n⊢ Eq (NormedSpace.exp 𝕂 (HMul.hMul (HMul.hMul (↑(Inv.inv U)) A) ↑U)) (HMul.hMul (HMul.hMul (↑(Inv.inv U)) (NormedSpace.exp 𝕂 A)) ↑U)","decl":"theorem exp_units_conj' (U : (Matrix m m 𝔸)ˣ) (A : Matrix m m 𝔸) :\n    exp 𝕂 (U⁻¹ * A * U) = U⁻¹ * exp 𝕂 A * U :=\n  exp_units_conj 𝕂 U⁻¹ A\n\n"}
{"name":"Matrix.exp_neg","module":"Mathlib.Analysis.Normed.Algebra.MatrixExponential","initialProofState":"𝕂 : Type u_1\nm : Type u_2\n𝔸 : Type u_5\ninst✝⁵ : RCLike 𝕂\ninst✝⁴ : Fintype m\ninst✝³ : DecidableEq m\ninst✝² : NormedCommRing 𝔸\ninst✝¹ : NormedAlgebra 𝕂 𝔸\ninst✝ : CompleteSpace 𝔸\nA : Matrix m m 𝔸\n⊢ Eq (NormedSpace.exp 𝕂 (Neg.neg A)) (Inv.inv (NormedSpace.exp 𝕂 A))","decl":"theorem exp_neg (A : Matrix m m 𝔸) : exp 𝕂 (-A) = (exp 𝕂 A)⁻¹ := by\n  rw [nonsing_inv_eq_ring_inverse]\n  letI : SeminormedRing (Matrix m m 𝔸) := Matrix.linftyOpSemiNormedRing\n  letI : NormedRing (Matrix m m 𝔸) := Matrix.linftyOpNormedRing\n  letI : NormedAlgebra 𝕂 (Matrix m m 𝔸) := Matrix.linftyOpNormedAlgebra\n  exact (Ring.inverse_exp _ A).symm\n\n"}
{"name":"Matrix.exp_zsmul","module":"Mathlib.Analysis.Normed.Algebra.MatrixExponential","initialProofState":"𝕂 : Type u_1\nm : Type u_2\n𝔸 : Type u_5\ninst✝⁵ : RCLike 𝕂\ninst✝⁴ : Fintype m\ninst✝³ : DecidableEq m\ninst✝² : NormedCommRing 𝔸\ninst✝¹ : NormedAlgebra 𝕂 𝔸\ninst✝ : CompleteSpace 𝔸\nz : Int\nA : Matrix m m 𝔸\n⊢ Eq (NormedSpace.exp 𝕂 (HSMul.hSMul z A)) (HPow.hPow (NormedSpace.exp 𝕂 A) z)","decl":"theorem exp_zsmul (z : ℤ) (A : Matrix m m 𝔸) : exp 𝕂 (z • A) = exp 𝕂 A ^ z := by\n  obtain ⟨n, rfl | rfl⟩ := z.eq_nat_or_neg\n  · rw [zpow_natCast, natCast_zsmul, exp_nsmul]\n  · have : IsUnit (exp 𝕂 A).det := (Matrix.isUnit_iff_isUnit_det _).mp (isUnit_exp _ _)\n    rw [Matrix.zpow_neg this, zpow_natCast, neg_smul, exp_neg, natCast_zsmul, exp_nsmul]\n\n"}
{"name":"Matrix.exp_conj","module":"Mathlib.Analysis.Normed.Algebra.MatrixExponential","initialProofState":"𝕂 : Type u_1\nm : Type u_2\n𝔸 : Type u_5\ninst✝⁵ : RCLike 𝕂\ninst✝⁴ : Fintype m\ninst✝³ : DecidableEq m\ninst✝² : NormedCommRing 𝔸\ninst✝¹ : NormedAlgebra 𝕂 𝔸\ninst✝ : CompleteSpace 𝔸\nU A : Matrix m m 𝔸\nhy : IsUnit U\n⊢ Eq (NormedSpace.exp 𝕂 (HMul.hMul (HMul.hMul U A) (Inv.inv U))) (HMul.hMul (HMul.hMul U (NormedSpace.exp 𝕂 A)) (Inv.inv U))","decl":"theorem exp_conj (U : Matrix m m 𝔸) (A : Matrix m m 𝔸) (hy : IsUnit U) :\n    exp 𝕂 (U * A * U⁻¹) = U * exp 𝕂 A * U⁻¹ :=\n  let ⟨u, hu⟩ := hy\n  hu ▸ by simpa only [Matrix.coe_units_inv] using exp_units_conj 𝕂 u A\n\n"}
{"name":"Matrix.exp_conj'","module":"Mathlib.Analysis.Normed.Algebra.MatrixExponential","initialProofState":"𝕂 : Type u_1\nm : Type u_2\n𝔸 : Type u_5\ninst✝⁵ : RCLike 𝕂\ninst✝⁴ : Fintype m\ninst✝³ : DecidableEq m\ninst✝² : NormedCommRing 𝔸\ninst✝¹ : NormedAlgebra 𝕂 𝔸\ninst✝ : CompleteSpace 𝔸\nU A : Matrix m m 𝔸\nhy : IsUnit U\n⊢ Eq (NormedSpace.exp 𝕂 (HMul.hMul (HMul.hMul (Inv.inv U) A) U)) (HMul.hMul (HMul.hMul (Inv.inv U) (NormedSpace.exp 𝕂 A)) U)","decl":"theorem exp_conj' (U : Matrix m m 𝔸) (A : Matrix m m 𝔸) (hy : IsUnit U) :\n    exp 𝕂 (U⁻¹ * A * U) = U⁻¹ * exp 𝕂 A * U :=\n  let ⟨u, hu⟩ := hy\n  hu ▸ by simpa only [Matrix.coe_units_inv] using exp_units_conj' 𝕂 u A\n\n"}
