{"name":"CategoryTheory.Pretriangulated.Triangle.mk'.inj","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nobj‚ÇÅ‚úù obj‚ÇÇ‚úù obj‚ÇÉ‚úù : C\nmor‚ÇÅ‚úù : Quiver.Hom obj‚ÇÅ‚úù obj‚ÇÇ‚úù\nmor‚ÇÇ‚úù : Quiver.Hom obj‚ÇÇ‚úù obj‚ÇÉ‚úù\nmor‚ÇÉ‚úù : Quiver.Hom obj‚ÇÉ‚úù ((CategoryTheory.shiftFunctor C 1).obj obj‚ÇÅ‚úù)\nobj‚ÇÅ obj‚ÇÇ obj‚ÇÉ : C\nmor‚ÇÅ : Quiver.Hom obj‚ÇÅ obj‚ÇÇ\nmor‚ÇÇ : Quiver.Hom obj‚ÇÇ obj‚ÇÉ\nmor‚ÇÉ : Quiver.Hom obj‚ÇÉ ((CategoryTheory.shiftFunctor C 1).obj obj‚ÇÅ)\nx‚úù : Eq { obj‚ÇÅ := obj‚ÇÅ‚úù, obj‚ÇÇ := obj‚ÇÇ‚úù, obj‚ÇÉ := obj‚ÇÉ‚úù, mor‚ÇÅ := mor‚ÇÅ‚úù, mor‚ÇÇ := mor‚ÇÇ‚úù, mor‚ÇÉ := mor‚ÇÉ‚úù } { obj‚ÇÅ := obj‚ÇÅ, obj‚ÇÇ := obj‚ÇÇ, obj‚ÇÉ := obj‚ÇÉ, mor‚ÇÅ := mor‚ÇÅ, mor‚ÇÇ := mor‚ÇÇ, mor‚ÇÉ := mor‚ÇÉ }\n‚ä¢ And (Eq obj‚ÇÅ‚úù obj‚ÇÅ) (And (Eq obj‚ÇÇ‚úù obj‚ÇÇ) (And (Eq obj‚ÇÉ‚úù obj‚ÇÉ) (And (HEq mor‚ÇÅ‚úù mor‚ÇÅ) (And (HEq mor‚ÇÇ‚úù mor‚ÇÇ) (HEq mor‚ÇÉ‚úù mor‚ÇÉ)))))","decl":"/-- A triangle in `C` is a sextuple `(X,Y,Z,f,g,h)` where `X,Y,Z` are objects of `C`,\nand `f : X ‚ü∂ Y`, `g : Y ‚ü∂ Z`, `h : Z ‚ü∂ X‚ü¶1‚üß` are morphisms in `C`. -/\n@[stacks 0144]\nstructure Triangle where mk' ::\n  /-- the first object of a triangle -/\n  obj‚ÇÅ : C\n  /-- the second object of a triangle -/\n  obj‚ÇÇ : C\n  /-- the third object of a triangle -/\n  obj‚ÇÉ : C\n  /-- the first morphism of a triangle -/\n  mor‚ÇÅ : obj‚ÇÅ ‚ü∂ obj‚ÇÇ\n  /-- the second morphism of a triangle -/\n  mor‚ÇÇ : obj‚ÇÇ ‚ü∂ obj‚ÇÉ\n  /-- the third morphism of a triangle -/\n  mor‚ÇÉ : obj‚ÇÉ ‚ü∂ obj‚ÇÅ‚ü¶(1 : ‚Ñ§)‚üß\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.mk'.sizeOf_spec","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≤ : CategoryTheory.Category.{v, u} C\ninst‚úù¬π : CategoryTheory.HasShift C Int\ninst‚úù : SizeOf C\nobj‚ÇÅ obj‚ÇÇ obj‚ÇÉ : C\nmor‚ÇÅ : Quiver.Hom obj‚ÇÅ obj‚ÇÇ\nmor‚ÇÇ : Quiver.Hom obj‚ÇÇ obj‚ÇÉ\nmor‚ÇÉ : Quiver.Hom obj‚ÇÉ ((CategoryTheory.shiftFunctor C 1).obj obj‚ÇÅ)\n‚ä¢ Eq (SizeOf.sizeOf { obj‚ÇÅ := obj‚ÇÅ, obj‚ÇÇ := obj‚ÇÇ, obj‚ÇÉ := obj‚ÇÉ, mor‚ÇÅ := mor‚ÇÅ, mor‚ÇÇ := mor‚ÇÇ, mor‚ÇÉ := mor‚ÇÉ }) (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd 1 (SizeOf.sizeOf obj‚ÇÅ)) (SizeOf.sizeOf obj‚ÇÇ)) (SizeOf.sizeOf obj‚ÇÉ)) (SizeOf.sizeOf mor‚ÇÅ)) (SizeOf.sizeOf mor‚ÇÇ)) (SizeOf.sizeOf mor‚ÇÉ))","decl":"/-- A triangle in `C` is a sextuple `(X,Y,Z,f,g,h)` where `X,Y,Z` are objects of `C`,\nand `f : X ‚ü∂ Y`, `g : Y ‚ü∂ Z`, `h : Z ‚ü∂ X‚ü¶1‚üß` are morphisms in `C`. -/\n@[stacks 0144]\nstructure Triangle where mk' ::\n  /-- the first object of a triangle -/\n  obj‚ÇÅ : C\n  /-- the second object of a triangle -/\n  obj‚ÇÇ : C\n  /-- the third object of a triangle -/\n  obj‚ÇÉ : C\n  /-- the first morphism of a triangle -/\n  mor‚ÇÅ : obj‚ÇÅ ‚ü∂ obj‚ÇÇ\n  /-- the second morphism of a triangle -/\n  mor‚ÇÇ : obj‚ÇÇ ‚ü∂ obj‚ÇÉ\n  /-- the third morphism of a triangle -/\n  mor‚ÇÉ : obj‚ÇÉ ‚ü∂ obj‚ÇÅ‚ü¶(1 : ‚Ñ§)‚üß\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.mk'.injEq","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nobj‚ÇÅ‚úù obj‚ÇÇ‚úù obj‚ÇÉ‚úù : C\nmor‚ÇÅ‚úù : Quiver.Hom obj‚ÇÅ‚úù obj‚ÇÇ‚úù\nmor‚ÇÇ‚úù : Quiver.Hom obj‚ÇÇ‚úù obj‚ÇÉ‚úù\nmor‚ÇÉ‚úù : Quiver.Hom obj‚ÇÉ‚úù ((CategoryTheory.shiftFunctor C 1).obj obj‚ÇÅ‚úù)\nobj‚ÇÅ obj‚ÇÇ obj‚ÇÉ : C\nmor‚ÇÅ : Quiver.Hom obj‚ÇÅ obj‚ÇÇ\nmor‚ÇÇ : Quiver.Hom obj‚ÇÇ obj‚ÇÉ\nmor‚ÇÉ : Quiver.Hom obj‚ÇÉ ((CategoryTheory.shiftFunctor C 1).obj obj‚ÇÅ)\n‚ä¢ Eq (Eq { obj‚ÇÅ := obj‚ÇÅ‚úù, obj‚ÇÇ := obj‚ÇÇ‚úù, obj‚ÇÉ := obj‚ÇÉ‚úù, mor‚ÇÅ := mor‚ÇÅ‚úù, mor‚ÇÇ := mor‚ÇÇ‚úù, mor‚ÇÉ := mor‚ÇÉ‚úù } { obj‚ÇÅ := obj‚ÇÅ, obj‚ÇÇ := obj‚ÇÇ, obj‚ÇÉ := obj‚ÇÉ, mor‚ÇÅ := mor‚ÇÅ, mor‚ÇÇ := mor‚ÇÇ, mor‚ÇÉ := mor‚ÇÉ }) (And (Eq obj‚ÇÅ‚úù obj‚ÇÅ) (And (Eq obj‚ÇÇ‚úù obj‚ÇÇ) (And (Eq obj‚ÇÉ‚úù obj‚ÇÉ) (And (HEq mor‚ÇÅ‚úù mor‚ÇÅ) (And (HEq mor‚ÇÇ‚úù mor‚ÇÇ) (HEq mor‚ÇÉ‚úù mor‚ÇÉ))))))","decl":"/-- A triangle in `C` is a sextuple `(X,Y,Z,f,g,h)` where `X,Y,Z` are objects of `C`,\nand `f : X ‚ü∂ Y`, `g : Y ‚ü∂ Z`, `h : Z ‚ü∂ X‚ü¶1‚üß` are morphisms in `C`. -/\n@[stacks 0144]\nstructure Triangle where mk' ::\n  /-- the first object of a triangle -/\n  obj‚ÇÅ : C\n  /-- the second object of a triangle -/\n  obj‚ÇÇ : C\n  /-- the third object of a triangle -/\n  obj‚ÇÉ : C\n  /-- the first morphism of a triangle -/\n  mor‚ÇÅ : obj‚ÇÅ ‚ü∂ obj‚ÇÇ\n  /-- the second morphism of a triangle -/\n  mor‚ÇÇ : obj‚ÇÇ ‚ü∂ obj‚ÇÉ\n  /-- the third morphism of a triangle -/\n  mor‚ÇÉ : obj‚ÇÉ ‚ü∂ obj‚ÇÅ‚ü¶(1 : ‚Ñ§)‚üß\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.mk_mor‚ÇÅ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nX Y Z : C\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\nh : Quiver.Hom Z ((CategoryTheory.shiftFunctor C 1).obj X)\n‚ä¢ Eq (CategoryTheory.Pretriangulated.Triangle.mk f g h).mor‚ÇÅ f","decl":"/-- A triangle `(X,Y,Z,f,g,h)` in `C` is defined by the morphisms `f : X ‚ü∂ Y`, `g : Y ‚ü∂ Z`\nand `h : Z ‚ü∂ X‚ü¶1‚üß`.\n-/\n@[simps]\ndef Triangle.mk {X Y Z : C} (f : X ‚ü∂ Y) (g : Y ‚ü∂ Z) (h : Z ‚ü∂ X‚ü¶(1 : ‚Ñ§)‚üß) : Triangle C where\n  obj‚ÇÅ := X\n  obj‚ÇÇ := Y\n  obj‚ÇÉ := Z\n  mor‚ÇÅ := f\n  mor‚ÇÇ := g\n  mor‚ÇÉ := h\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.mk_obj‚ÇÉ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nX Y Z : C\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\nh : Quiver.Hom Z ((CategoryTheory.shiftFunctor C 1).obj X)\n‚ä¢ Eq (CategoryTheory.Pretriangulated.Triangle.mk f g h).obj‚ÇÉ Z","decl":"/-- A triangle `(X,Y,Z,f,g,h)` in `C` is defined by the morphisms `f : X ‚ü∂ Y`, `g : Y ‚ü∂ Z`\nand `h : Z ‚ü∂ X‚ü¶1‚üß`.\n-/\n@[simps]\ndef Triangle.mk {X Y Z : C} (f : X ‚ü∂ Y) (g : Y ‚ü∂ Z) (h : Z ‚ü∂ X‚ü¶(1 : ‚Ñ§)‚üß) : Triangle C where\n  obj‚ÇÅ := X\n  obj‚ÇÇ := Y\n  obj‚ÇÉ := Z\n  mor‚ÇÅ := f\n  mor‚ÇÇ := g\n  mor‚ÇÉ := h\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.mk_mor‚ÇÇ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nX Y Z : C\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\nh : Quiver.Hom Z ((CategoryTheory.shiftFunctor C 1).obj X)\n‚ä¢ Eq (CategoryTheory.Pretriangulated.Triangle.mk f g h).mor‚ÇÇ g","decl":"/-- A triangle `(X,Y,Z,f,g,h)` in `C` is defined by the morphisms `f : X ‚ü∂ Y`, `g : Y ‚ü∂ Z`\nand `h : Z ‚ü∂ X‚ü¶1‚üß`.\n-/\n@[simps]\ndef Triangle.mk {X Y Z : C} (f : X ‚ü∂ Y) (g : Y ‚ü∂ Z) (h : Z ‚ü∂ X‚ü¶(1 : ‚Ñ§)‚üß) : Triangle C where\n  obj‚ÇÅ := X\n  obj‚ÇÇ := Y\n  obj‚ÇÉ := Z\n  mor‚ÇÅ := f\n  mor‚ÇÇ := g\n  mor‚ÇÉ := h\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.mk_mor‚ÇÉ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nX Y Z : C\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\nh : Quiver.Hom Z ((CategoryTheory.shiftFunctor C 1).obj X)\n‚ä¢ Eq (CategoryTheory.Pretriangulated.Triangle.mk f g h).mor‚ÇÉ h","decl":"/-- A triangle `(X,Y,Z,f,g,h)` in `C` is defined by the morphisms `f : X ‚ü∂ Y`, `g : Y ‚ü∂ Z`\nand `h : Z ‚ü∂ X‚ü¶1‚üß`.\n-/\n@[simps]\ndef Triangle.mk {X Y Z : C} (f : X ‚ü∂ Y) (g : Y ‚ü∂ Z) (h : Z ‚ü∂ X‚ü¶(1 : ‚Ñ§)‚üß) : Triangle C where\n  obj‚ÇÅ := X\n  obj‚ÇÇ := Y\n  obj‚ÇÉ := Z\n  mor‚ÇÅ := f\n  mor‚ÇÇ := g\n  mor‚ÇÉ := h\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.mk_obj‚ÇÇ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nX Y Z : C\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\nh : Quiver.Hom Z ((CategoryTheory.shiftFunctor C 1).obj X)\n‚ä¢ Eq (CategoryTheory.Pretriangulated.Triangle.mk f g h).obj‚ÇÇ Y","decl":"/-- A triangle `(X,Y,Z,f,g,h)` in `C` is defined by the morphisms `f : X ‚ü∂ Y`, `g : Y ‚ü∂ Z`\nand `h : Z ‚ü∂ X‚ü¶1‚üß`.\n-/\n@[simps]\ndef Triangle.mk {X Y Z : C} (f : X ‚ü∂ Y) (g : Y ‚ü∂ Z) (h : Z ‚ü∂ X‚ü¶(1 : ‚Ñ§)‚üß) : Triangle C where\n  obj‚ÇÅ := X\n  obj‚ÇÇ := Y\n  obj‚ÇÉ := Z\n  mor‚ÇÅ := f\n  mor‚ÇÇ := g\n  mor‚ÇÉ := h\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.mk_obj‚ÇÅ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nX Y Z : C\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\nh : Quiver.Hom Z ((CategoryTheory.shiftFunctor C 1).obj X)\n‚ä¢ Eq (CategoryTheory.Pretriangulated.Triangle.mk f g h).obj‚ÇÅ X","decl":"/-- A triangle `(X,Y,Z,f,g,h)` in `C` is defined by the morphisms `f : X ‚ü∂ Y`, `g : Y ‚ü∂ Z`\nand `h : Z ‚ü∂ X‚ü¶1‚üß`.\n-/\n@[simps]\ndef Triangle.mk {X Y Z : C} (f : X ‚ü∂ Y) (g : Y ‚ü∂ Z) (h : Z ‚ü∂ X‚ü¶(1 : ‚Ñ§)‚üß) : Triangle C where\n  obj‚ÇÅ := X\n  obj‚ÇÇ := Y\n  obj‚ÇÉ := Z\n  mor‚ÇÅ := f\n  mor‚ÇÇ := g\n  mor‚ÇÉ := h\n\n"}
{"name":"CategoryTheory.Pretriangulated.contractibleTriangle_mor‚ÇÉ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\ninst‚úù¬π : CategoryTheory.Limits.HasZeroObject C\ninst‚úù : CategoryTheory.Limits.HasZeroMorphisms C\nX : C\n‚ä¢ Eq (CategoryTheory.Pretriangulated.contractibleTriangle X).mor‚ÇÉ 0","decl":"/-- For each object in `C`, there is a triangle of the form `(X,X,0,ùüô X,0,0)`\n-/\n@[simps!]\ndef contractibleTriangle (X : C) : Triangle C :=\n  Triangle.mk (ùüô X) (0 : X ‚ü∂ 0) 0\n\n"}
{"name":"CategoryTheory.Pretriangulated.contractibleTriangle_obj‚ÇÅ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\ninst‚úù¬π : CategoryTheory.Limits.HasZeroObject C\ninst‚úù : CategoryTheory.Limits.HasZeroMorphisms C\nX : C\n‚ä¢ Eq (CategoryTheory.Pretriangulated.contractibleTriangle X).obj‚ÇÅ X","decl":"/-- For each object in `C`, there is a triangle of the form `(X,X,0,ùüô X,0,0)`\n-/\n@[simps!]\ndef contractibleTriangle (X : C) : Triangle C :=\n  Triangle.mk (ùüô X) (0 : X ‚ü∂ 0) 0\n\n"}
{"name":"CategoryTheory.Pretriangulated.contractibleTriangle_mor‚ÇÅ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\ninst‚úù¬π : CategoryTheory.Limits.HasZeroObject C\ninst‚úù : CategoryTheory.Limits.HasZeroMorphisms C\nX : C\n‚ä¢ Eq (CategoryTheory.Pretriangulated.contractibleTriangle X).mor‚ÇÅ (CategoryTheory.CategoryStruct.id X)","decl":"/-- For each object in `C`, there is a triangle of the form `(X,X,0,ùüô X,0,0)`\n-/\n@[simps!]\ndef contractibleTriangle (X : C) : Triangle C :=\n  Triangle.mk (ùüô X) (0 : X ‚ü∂ 0) 0\n\n"}
{"name":"CategoryTheory.Pretriangulated.contractibleTriangle_obj‚ÇÉ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\ninst‚úù¬π : CategoryTheory.Limits.HasZeroObject C\ninst‚úù : CategoryTheory.Limits.HasZeroMorphisms C\nX : C\n‚ä¢ Eq (CategoryTheory.Pretriangulated.contractibleTriangle X).obj‚ÇÉ 0","decl":"/-- For each object in `C`, there is a triangle of the form `(X,X,0,ùüô X,0,0)`\n-/\n@[simps!]\ndef contractibleTriangle (X : C) : Triangle C :=\n  Triangle.mk (ùüô X) (0 : X ‚ü∂ 0) 0\n\n"}
{"name":"CategoryTheory.Pretriangulated.contractibleTriangle_obj‚ÇÇ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\ninst‚úù¬π : CategoryTheory.Limits.HasZeroObject C\ninst‚úù : CategoryTheory.Limits.HasZeroMorphisms C\nX : C\n‚ä¢ Eq (CategoryTheory.Pretriangulated.contractibleTriangle X).obj‚ÇÇ X","decl":"/-- For each object in `C`, there is a triangle of the form `(X,X,0,ùüô X,0,0)`\n-/\n@[simps!]\ndef contractibleTriangle (X : C) : Triangle C :=\n  Triangle.mk (ùüô X) (0 : X ‚ü∂ 0) 0\n\n"}
{"name":"CategoryTheory.Pretriangulated.contractibleTriangle_mor‚ÇÇ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\ninst‚úù¬π : CategoryTheory.Limits.HasZeroObject C\ninst‚úù : CategoryTheory.Limits.HasZeroMorphisms C\nX : C\n‚ä¢ Eq (CategoryTheory.Pretriangulated.contractibleTriangle X).mor‚ÇÇ 0","decl":"/-- For each object in `C`, there is a triangle of the form `(X,X,0,ùüô X,0,0)`\n-/\n@[simps!]\ndef contractibleTriangle (X : C) : Triangle C :=\n  Triangle.mk (ùüô X) (0 : X ‚ü∂ 0) 0\n\n"}
{"name":"CategoryTheory.Pretriangulated.TriangleMorphism.ext_iff","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nT‚ÇÅ T‚ÇÇ : CategoryTheory.Pretriangulated.Triangle C\nx y : CategoryTheory.Pretriangulated.TriangleMorphism T‚ÇÅ T‚ÇÇ\n‚ä¢ Iff (Eq x y) (And (Eq x.hom‚ÇÅ y.hom‚ÇÅ) (And (Eq x.hom‚ÇÇ y.hom‚ÇÇ) (Eq x.hom‚ÇÉ y.hom‚ÇÉ)))","decl":"/-- A morphism of triangles `(X,Y,Z,f,g,h) ‚ü∂ (X',Y',Z',f',g',h')` in `C` is a triple of morphisms\n`a : X ‚ü∂ X'`, `b : Y ‚ü∂ Y'`, `c : Z ‚ü∂ Z'` such that\n`a ‚â´ f' = f ‚â´ b`, `b ‚â´ g' = g ‚â´ c`, and `a‚ü¶1‚üß' ‚â´ h = h' ‚â´ c`.\nIn other words, we have a commutative diagram:\n```\n     f      g      h\n  X  ‚îÄ‚îÄ‚îÄ> Y  ‚îÄ‚îÄ‚îÄ> Z  ‚îÄ‚îÄ‚îÄ> X‚ü¶1‚üß\n  ‚îÇ       ‚îÇ       ‚îÇ        ‚îÇ\n  ‚îÇa      ‚îÇb      ‚îÇc       ‚îÇa‚ü¶1‚üß'\n  V       V       V        V\n  X' ‚îÄ‚îÄ‚îÄ> Y' ‚îÄ‚îÄ‚îÄ> Z' ‚îÄ‚îÄ‚îÄ> X'‚ü¶1‚üß\n     f'     g'     h'\n```\n-/\n@[ext, stacks 0144]\nstructure TriangleMorphism (T‚ÇÅ : Triangle C) (T‚ÇÇ : Triangle C) where\n  /-- the first morphism in a triangle morphism -/\n  hom‚ÇÅ : T‚ÇÅ.obj‚ÇÅ ‚ü∂ T‚ÇÇ.obj‚ÇÅ\n  /-- the second morphism in a triangle morphism -/\n  hom‚ÇÇ : T‚ÇÅ.obj‚ÇÇ ‚ü∂ T‚ÇÇ.obj‚ÇÇ\n  /-- the third morphism in a triangle morphism -/\n  hom‚ÇÉ : T‚ÇÅ.obj‚ÇÉ ‚ü∂ T‚ÇÇ.obj‚ÇÉ\n  /-- the first commutative square of a triangle morphism -/\n  comm‚ÇÅ : T‚ÇÅ.mor‚ÇÅ ‚â´ hom‚ÇÇ = hom‚ÇÅ ‚â´ T‚ÇÇ.mor‚ÇÅ := by aesop_cat\n  /-- the second commutative square of a triangle morphism -/\n  comm‚ÇÇ : T‚ÇÅ.mor‚ÇÇ ‚â´ hom‚ÇÉ = hom‚ÇÇ ‚â´ T‚ÇÇ.mor‚ÇÇ := by aesop_cat\n  /-- the third commutative square of a triangle morphism -/\n  comm‚ÇÉ : T‚ÇÅ.mor‚ÇÉ ‚â´ hom‚ÇÅ‚ü¶1‚üß' = hom‚ÇÉ ‚â´ T‚ÇÇ.mor‚ÇÉ := by aesop_cat\n\n"}
{"name":"CategoryTheory.Pretriangulated.TriangleMorphism.mk.sizeOf_spec","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≤ : CategoryTheory.Category.{v, u} C\ninst‚úù¬π : CategoryTheory.HasShift C Int\nT‚ÇÅ T‚ÇÇ : CategoryTheory.Pretriangulated.Triangle C\ninst‚úù : SizeOf C\nhom‚ÇÅ : Quiver.Hom T‚ÇÅ.obj‚ÇÅ T‚ÇÇ.obj‚ÇÅ\nhom‚ÇÇ : Quiver.Hom T‚ÇÅ.obj‚ÇÇ T‚ÇÇ.obj‚ÇÇ\nhom‚ÇÉ : Quiver.Hom T‚ÇÅ.obj‚ÇÉ T‚ÇÇ.obj‚ÇÉ\ncomm‚ÇÅ : autoParam (Eq (CategoryTheory.CategoryStruct.comp T‚ÇÅ.mor‚ÇÅ hom‚ÇÇ) (CategoryTheory.CategoryStruct.comp hom‚ÇÅ T‚ÇÇ.mor‚ÇÅ)) _auto‚úù\ncomm‚ÇÇ : autoParam (Eq (CategoryTheory.CategoryStruct.comp T‚ÇÅ.mor‚ÇÇ hom‚ÇÉ) (CategoryTheory.CategoryStruct.comp hom‚ÇÇ T‚ÇÇ.mor‚ÇÇ)) _auto‚úù\ncomm‚ÇÉ : autoParam (Eq (CategoryTheory.CategoryStruct.comp T‚ÇÅ.mor‚ÇÉ ((CategoryTheory.shiftFunctor C 1).map hom‚ÇÅ)) (CategoryTheory.CategoryStruct.comp hom‚ÇÉ T‚ÇÇ.mor‚ÇÉ)) _auto‚úù\n‚ä¢ Eq (SizeOf.sizeOf { hom‚ÇÅ := hom‚ÇÅ, hom‚ÇÇ := hom‚ÇÇ, hom‚ÇÉ := hom‚ÇÉ, comm‚ÇÅ := comm‚ÇÅ, comm‚ÇÇ := comm‚ÇÇ, comm‚ÇÉ := comm‚ÇÉ }) (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd 1 (SizeOf.sizeOf hom‚ÇÅ)) (SizeOf.sizeOf hom‚ÇÇ)) (SizeOf.sizeOf hom‚ÇÉ)) (SizeOf.sizeOf comm‚ÇÅ)) (SizeOf.sizeOf comm‚ÇÇ)) (SizeOf.sizeOf comm‚ÇÉ))","decl":"/-- A morphism of triangles `(X,Y,Z,f,g,h) ‚ü∂ (X',Y',Z',f',g',h')` in `C` is a triple of morphisms\n`a : X ‚ü∂ X'`, `b : Y ‚ü∂ Y'`, `c : Z ‚ü∂ Z'` such that\n`a ‚â´ f' = f ‚â´ b`, `b ‚â´ g' = g ‚â´ c`, and `a‚ü¶1‚üß' ‚â´ h = h' ‚â´ c`.\nIn other words, we have a commutative diagram:\n```\n     f      g      h\n  X  ‚îÄ‚îÄ‚îÄ> Y  ‚îÄ‚îÄ‚îÄ> Z  ‚îÄ‚îÄ‚îÄ> X‚ü¶1‚üß\n  ‚îÇ       ‚îÇ       ‚îÇ        ‚îÇ\n  ‚îÇa      ‚îÇb      ‚îÇc       ‚îÇa‚ü¶1‚üß'\n  V       V       V        V\n  X' ‚îÄ‚îÄ‚îÄ> Y' ‚îÄ‚îÄ‚îÄ> Z' ‚îÄ‚îÄ‚îÄ> X'‚ü¶1‚üß\n     f'     g'     h'\n```\n-/\n@[ext, stacks 0144]\nstructure TriangleMorphism (T‚ÇÅ : Triangle C) (T‚ÇÇ : Triangle C) where\n  /-- the first morphism in a triangle morphism -/\n  hom‚ÇÅ : T‚ÇÅ.obj‚ÇÅ ‚ü∂ T‚ÇÇ.obj‚ÇÅ\n  /-- the second morphism in a triangle morphism -/\n  hom‚ÇÇ : T‚ÇÅ.obj‚ÇÇ ‚ü∂ T‚ÇÇ.obj‚ÇÇ\n  /-- the third morphism in a triangle morphism -/\n  hom‚ÇÉ : T‚ÇÅ.obj‚ÇÉ ‚ü∂ T‚ÇÇ.obj‚ÇÉ\n  /-- the first commutative square of a triangle morphism -/\n  comm‚ÇÅ : T‚ÇÅ.mor‚ÇÅ ‚â´ hom‚ÇÇ = hom‚ÇÅ ‚â´ T‚ÇÇ.mor‚ÇÅ := by aesop_cat\n  /-- the second commutative square of a triangle morphism -/\n  comm‚ÇÇ : T‚ÇÅ.mor‚ÇÇ ‚â´ hom‚ÇÉ = hom‚ÇÇ ‚â´ T‚ÇÇ.mor‚ÇÇ := by aesop_cat\n  /-- the third commutative square of a triangle morphism -/\n  comm‚ÇÉ : T‚ÇÅ.mor‚ÇÉ ‚â´ hom‚ÇÅ‚ü¶1‚üß' = hom‚ÇÉ ‚â´ T‚ÇÇ.mor‚ÇÉ := by aesop_cat\n\n"}
{"name":"CategoryTheory.Pretriangulated.TriangleMorphism.mk.injEq","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nT‚ÇÅ T‚ÇÇ : CategoryTheory.Pretriangulated.Triangle C\nhom‚ÇÅ‚úù : Quiver.Hom T‚ÇÅ.obj‚ÇÅ T‚ÇÇ.obj‚ÇÅ\nhom‚ÇÇ‚úù : Quiver.Hom T‚ÇÅ.obj‚ÇÇ T‚ÇÇ.obj‚ÇÇ\nhom‚ÇÉ‚úù : Quiver.Hom T‚ÇÅ.obj‚ÇÉ T‚ÇÇ.obj‚ÇÉ\ncomm‚ÇÅ‚úù : autoParam (Eq (CategoryTheory.CategoryStruct.comp T‚ÇÅ.mor‚ÇÅ hom‚ÇÇ‚úù) (CategoryTheory.CategoryStruct.comp hom‚ÇÅ‚úù T‚ÇÇ.mor‚ÇÅ)) _auto‚úù\ncomm‚ÇÇ‚úù : autoParam (Eq (CategoryTheory.CategoryStruct.comp T‚ÇÅ.mor‚ÇÇ hom‚ÇÉ‚úù) (CategoryTheory.CategoryStruct.comp hom‚ÇÇ‚úù T‚ÇÇ.mor‚ÇÇ)) _auto‚úù\ncomm‚ÇÉ‚úù : autoParam (Eq (CategoryTheory.CategoryStruct.comp T‚ÇÅ.mor‚ÇÉ ((CategoryTheory.shiftFunctor C 1).map hom‚ÇÅ‚úù)) (CategoryTheory.CategoryStruct.comp hom‚ÇÉ‚úù T‚ÇÇ.mor‚ÇÉ)) _auto‚úù\nhom‚ÇÅ : Quiver.Hom T‚ÇÅ.obj‚ÇÅ T‚ÇÇ.obj‚ÇÅ\nhom‚ÇÇ : Quiver.Hom T‚ÇÅ.obj‚ÇÇ T‚ÇÇ.obj‚ÇÇ\nhom‚ÇÉ : Quiver.Hom T‚ÇÅ.obj‚ÇÉ T‚ÇÇ.obj‚ÇÉ\ncomm‚ÇÅ : autoParam (Eq (CategoryTheory.CategoryStruct.comp T‚ÇÅ.mor‚ÇÅ hom‚ÇÇ) (CategoryTheory.CategoryStruct.comp hom‚ÇÅ T‚ÇÇ.mor‚ÇÅ)) _auto‚úù\ncomm‚ÇÇ : autoParam (Eq (CategoryTheory.CategoryStruct.comp T‚ÇÅ.mor‚ÇÇ hom‚ÇÉ) (CategoryTheory.CategoryStruct.comp hom‚ÇÇ T‚ÇÇ.mor‚ÇÇ)) _auto‚úù\ncomm‚ÇÉ : autoParam (Eq (CategoryTheory.CategoryStruct.comp T‚ÇÅ.mor‚ÇÉ ((CategoryTheory.shiftFunctor C 1).map hom‚ÇÅ)) (CategoryTheory.CategoryStruct.comp hom‚ÇÉ T‚ÇÇ.mor‚ÇÉ)) _auto‚úù\n‚ä¢ Eq (Eq { hom‚ÇÅ := hom‚ÇÅ‚úù, hom‚ÇÇ := hom‚ÇÇ‚úù, hom‚ÇÉ := hom‚ÇÉ‚úù, comm‚ÇÅ := comm‚ÇÅ‚úù, comm‚ÇÇ := comm‚ÇÇ‚úù, comm‚ÇÉ := comm‚ÇÉ‚úù } { hom‚ÇÅ := hom‚ÇÅ, hom‚ÇÇ := hom‚ÇÇ, hom‚ÇÉ := hom‚ÇÉ, comm‚ÇÅ := comm‚ÇÅ, comm‚ÇÇ := comm‚ÇÇ, comm‚ÇÉ := comm‚ÇÉ }) (And (Eq hom‚ÇÅ‚úù hom‚ÇÅ) (And (Eq hom‚ÇÇ‚úù hom‚ÇÇ) (Eq hom‚ÇÉ‚úù hom‚ÇÉ)))","decl":"/-- A morphism of triangles `(X,Y,Z,f,g,h) ‚ü∂ (X',Y',Z',f',g',h')` in `C` is a triple of morphisms\n`a : X ‚ü∂ X'`, `b : Y ‚ü∂ Y'`, `c : Z ‚ü∂ Z'` such that\n`a ‚â´ f' = f ‚â´ b`, `b ‚â´ g' = g ‚â´ c`, and `a‚ü¶1‚üß' ‚â´ h = h' ‚â´ c`.\nIn other words, we have a commutative diagram:\n```\n     f      g      h\n  X  ‚îÄ‚îÄ‚îÄ> Y  ‚îÄ‚îÄ‚îÄ> Z  ‚îÄ‚îÄ‚îÄ> X‚ü¶1‚üß\n  ‚îÇ       ‚îÇ       ‚îÇ        ‚îÇ\n  ‚îÇa      ‚îÇb      ‚îÇc       ‚îÇa‚ü¶1‚üß'\n  V       V       V        V\n  X' ‚îÄ‚îÄ‚îÄ> Y' ‚îÄ‚îÄ‚îÄ> Z' ‚îÄ‚îÄ‚îÄ> X'‚ü¶1‚üß\n     f'     g'     h'\n```\n-/\n@[ext, stacks 0144]\nstructure TriangleMorphism (T‚ÇÅ : Triangle C) (T‚ÇÇ : Triangle C) where\n  /-- the first morphism in a triangle morphism -/\n  hom‚ÇÅ : T‚ÇÅ.obj‚ÇÅ ‚ü∂ T‚ÇÇ.obj‚ÇÅ\n  /-- the second morphism in a triangle morphism -/\n  hom‚ÇÇ : T‚ÇÅ.obj‚ÇÇ ‚ü∂ T‚ÇÇ.obj‚ÇÇ\n  /-- the third morphism in a triangle morphism -/\n  hom‚ÇÉ : T‚ÇÅ.obj‚ÇÉ ‚ü∂ T‚ÇÇ.obj‚ÇÉ\n  /-- the first commutative square of a triangle morphism -/\n  comm‚ÇÅ : T‚ÇÅ.mor‚ÇÅ ‚â´ hom‚ÇÇ = hom‚ÇÅ ‚â´ T‚ÇÇ.mor‚ÇÅ := by aesop_cat\n  /-- the second commutative square of a triangle morphism -/\n  comm‚ÇÇ : T‚ÇÅ.mor‚ÇÇ ‚â´ hom‚ÇÉ = hom‚ÇÇ ‚â´ T‚ÇÇ.mor‚ÇÇ := by aesop_cat\n  /-- the third commutative square of a triangle morphism -/\n  comm‚ÇÉ : T‚ÇÅ.mor‚ÇÉ ‚â´ hom‚ÇÅ‚ü¶1‚üß' = hom‚ÇÉ ‚â´ T‚ÇÇ.mor‚ÇÉ := by aesop_cat\n\n"}
{"name":"CategoryTheory.Pretriangulated.TriangleMorphism.mk.inj","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nT‚ÇÅ T‚ÇÇ : CategoryTheory.Pretriangulated.Triangle C\nhom‚ÇÅ‚úù : Quiver.Hom T‚ÇÅ.obj‚ÇÅ T‚ÇÇ.obj‚ÇÅ\nhom‚ÇÇ‚úù : Quiver.Hom T‚ÇÅ.obj‚ÇÇ T‚ÇÇ.obj‚ÇÇ\nhom‚ÇÉ‚úù : Quiver.Hom T‚ÇÅ.obj‚ÇÉ T‚ÇÇ.obj‚ÇÉ\ncomm‚ÇÅ‚úù : autoParam (Eq (CategoryTheory.CategoryStruct.comp T‚ÇÅ.mor‚ÇÅ hom‚ÇÇ‚úù) (CategoryTheory.CategoryStruct.comp hom‚ÇÅ‚úù T‚ÇÇ.mor‚ÇÅ)) _auto‚úù\ncomm‚ÇÇ‚úù : autoParam (Eq (CategoryTheory.CategoryStruct.comp T‚ÇÅ.mor‚ÇÇ hom‚ÇÉ‚úù) (CategoryTheory.CategoryStruct.comp hom‚ÇÇ‚úù T‚ÇÇ.mor‚ÇÇ)) _auto‚úù\ncomm‚ÇÉ‚úù : autoParam (Eq (CategoryTheory.CategoryStruct.comp T‚ÇÅ.mor‚ÇÉ ((CategoryTheory.shiftFunctor C 1).map hom‚ÇÅ‚úù)) (CategoryTheory.CategoryStruct.comp hom‚ÇÉ‚úù T‚ÇÇ.mor‚ÇÉ)) _auto‚úù\nhom‚ÇÅ : Quiver.Hom T‚ÇÅ.obj‚ÇÅ T‚ÇÇ.obj‚ÇÅ\nhom‚ÇÇ : Quiver.Hom T‚ÇÅ.obj‚ÇÇ T‚ÇÇ.obj‚ÇÇ\nhom‚ÇÉ : Quiver.Hom T‚ÇÅ.obj‚ÇÉ T‚ÇÇ.obj‚ÇÉ\ncomm‚ÇÅ : autoParam (Eq (CategoryTheory.CategoryStruct.comp T‚ÇÅ.mor‚ÇÅ hom‚ÇÇ) (CategoryTheory.CategoryStruct.comp hom‚ÇÅ T‚ÇÇ.mor‚ÇÅ)) _auto‚úù\ncomm‚ÇÇ : autoParam (Eq (CategoryTheory.CategoryStruct.comp T‚ÇÅ.mor‚ÇÇ hom‚ÇÉ) (CategoryTheory.CategoryStruct.comp hom‚ÇÇ T‚ÇÇ.mor‚ÇÇ)) _auto‚úù\ncomm‚ÇÉ : autoParam (Eq (CategoryTheory.CategoryStruct.comp T‚ÇÅ.mor‚ÇÉ ((CategoryTheory.shiftFunctor C 1).map hom‚ÇÅ)) (CategoryTheory.CategoryStruct.comp hom‚ÇÉ T‚ÇÇ.mor‚ÇÉ)) _auto‚úù\nx‚úù : Eq { hom‚ÇÅ := hom‚ÇÅ‚úù, hom‚ÇÇ := hom‚ÇÇ‚úù, hom‚ÇÉ := hom‚ÇÉ‚úù, comm‚ÇÅ := comm‚ÇÅ‚úù, comm‚ÇÇ := comm‚ÇÇ‚úù, comm‚ÇÉ := comm‚ÇÉ‚úù } { hom‚ÇÅ := hom‚ÇÅ, hom‚ÇÇ := hom‚ÇÇ, hom‚ÇÉ := hom‚ÇÉ, comm‚ÇÅ := comm‚ÇÅ, comm‚ÇÇ := comm‚ÇÇ, comm‚ÇÉ := comm‚ÇÉ }\n‚ä¢ And (Eq hom‚ÇÅ‚úù hom‚ÇÅ) (And (Eq hom‚ÇÇ‚úù hom‚ÇÇ) (Eq hom‚ÇÉ‚úù hom‚ÇÉ))","decl":"/-- A morphism of triangles `(X,Y,Z,f,g,h) ‚ü∂ (X',Y',Z',f',g',h')` in `C` is a triple of morphisms\n`a : X ‚ü∂ X'`, `b : Y ‚ü∂ Y'`, `c : Z ‚ü∂ Z'` such that\n`a ‚â´ f' = f ‚â´ b`, `b ‚â´ g' = g ‚â´ c`, and `a‚ü¶1‚üß' ‚â´ h = h' ‚â´ c`.\nIn other words, we have a commutative diagram:\n```\n     f      g      h\n  X  ‚îÄ‚îÄ‚îÄ> Y  ‚îÄ‚îÄ‚îÄ> Z  ‚îÄ‚îÄ‚îÄ> X‚ü¶1‚üß\n  ‚îÇ       ‚îÇ       ‚îÇ        ‚îÇ\n  ‚îÇa      ‚îÇb      ‚îÇc       ‚îÇa‚ü¶1‚üß'\n  V       V       V        V\n  X' ‚îÄ‚îÄ‚îÄ> Y' ‚îÄ‚îÄ‚îÄ> Z' ‚îÄ‚îÄ‚îÄ> X'‚ü¶1‚üß\n     f'     g'     h'\n```\n-/\n@[ext, stacks 0144]\nstructure TriangleMorphism (T‚ÇÅ : Triangle C) (T‚ÇÇ : Triangle C) where\n  /-- the first morphism in a triangle morphism -/\n  hom‚ÇÅ : T‚ÇÅ.obj‚ÇÅ ‚ü∂ T‚ÇÇ.obj‚ÇÅ\n  /-- the second morphism in a triangle morphism -/\n  hom‚ÇÇ : T‚ÇÅ.obj‚ÇÇ ‚ü∂ T‚ÇÇ.obj‚ÇÇ\n  /-- the third morphism in a triangle morphism -/\n  hom‚ÇÉ : T‚ÇÅ.obj‚ÇÉ ‚ü∂ T‚ÇÇ.obj‚ÇÉ\n  /-- the first commutative square of a triangle morphism -/\n  comm‚ÇÅ : T‚ÇÅ.mor‚ÇÅ ‚â´ hom‚ÇÇ = hom‚ÇÅ ‚â´ T‚ÇÇ.mor‚ÇÅ := by aesop_cat\n  /-- the second commutative square of a triangle morphism -/\n  comm‚ÇÇ : T‚ÇÅ.mor‚ÇÇ ‚â´ hom‚ÇÉ = hom‚ÇÇ ‚â´ T‚ÇÇ.mor‚ÇÇ := by aesop_cat\n  /-- the third commutative square of a triangle morphism -/\n  comm‚ÇÉ : T‚ÇÅ.mor‚ÇÉ ‚â´ hom‚ÇÅ‚ü¶1‚üß' = hom‚ÇÉ ‚â´ T‚ÇÇ.mor‚ÇÉ := by aesop_cat\n\n"}
{"name":"CategoryTheory.Pretriangulated.TriangleMorphism.comm‚ÇÇ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nT‚ÇÅ T‚ÇÇ : CategoryTheory.Pretriangulated.Triangle C\nself : CategoryTheory.Pretriangulated.TriangleMorphism T‚ÇÅ T‚ÇÇ\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp T‚ÇÅ.mor‚ÇÇ self.hom‚ÇÉ) (CategoryTheory.CategoryStruct.comp self.hom‚ÇÇ T‚ÇÇ.mor‚ÇÇ)","decl":"/-- A morphism of triangles `(X,Y,Z,f,g,h) ‚ü∂ (X',Y',Z',f',g',h')` in `C` is a triple of morphisms\n`a : X ‚ü∂ X'`, `b : Y ‚ü∂ Y'`, `c : Z ‚ü∂ Z'` such that\n`a ‚â´ f' = f ‚â´ b`, `b ‚â´ g' = g ‚â´ c`, and `a‚ü¶1‚üß' ‚â´ h = h' ‚â´ c`.\nIn other words, we have a commutative diagram:\n```\n     f      g      h\n  X  ‚îÄ‚îÄ‚îÄ> Y  ‚îÄ‚îÄ‚îÄ> Z  ‚îÄ‚îÄ‚îÄ> X‚ü¶1‚üß\n  ‚îÇ       ‚îÇ       ‚îÇ        ‚îÇ\n  ‚îÇa      ‚îÇb      ‚îÇc       ‚îÇa‚ü¶1‚üß'\n  V       V       V        V\n  X' ‚îÄ‚îÄ‚îÄ> Y' ‚îÄ‚îÄ‚îÄ> Z' ‚îÄ‚îÄ‚îÄ> X'‚ü¶1‚üß\n     f'     g'     h'\n```\n-/\n@[ext, stacks 0144]\nstructure TriangleMorphism (T‚ÇÅ : Triangle C) (T‚ÇÇ : Triangle C) where\n  /-- the first morphism in a triangle morphism -/\n  hom‚ÇÅ : T‚ÇÅ.obj‚ÇÅ ‚ü∂ T‚ÇÇ.obj‚ÇÅ\n  /-- the second morphism in a triangle morphism -/\n  hom‚ÇÇ : T‚ÇÅ.obj‚ÇÇ ‚ü∂ T‚ÇÇ.obj‚ÇÇ\n  /-- the third morphism in a triangle morphism -/\n  hom‚ÇÉ : T‚ÇÅ.obj‚ÇÉ ‚ü∂ T‚ÇÇ.obj‚ÇÉ\n  /-- the first commutative square of a triangle morphism -/\n  comm‚ÇÅ : T‚ÇÅ.mor‚ÇÅ ‚â´ hom‚ÇÇ = hom‚ÇÅ ‚â´ T‚ÇÇ.mor‚ÇÅ := by aesop_cat\n  /-- the second commutative square of a triangle morphism -/\n  comm‚ÇÇ : T‚ÇÅ.mor‚ÇÇ ‚â´ hom‚ÇÉ = hom‚ÇÇ ‚â´ T‚ÇÇ.mor‚ÇÇ := by aesop_cat\n  /-- the third commutative square of a triangle morphism -/\n  comm‚ÇÉ : T‚ÇÅ.mor‚ÇÉ ‚â´ hom‚ÇÅ‚ü¶1‚üß' = hom‚ÇÉ ‚â´ T‚ÇÇ.mor‚ÇÉ := by aesop_cat\n\n"}
{"name":"CategoryTheory.Pretriangulated.TriangleMorphism.ext","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nT‚ÇÅ T‚ÇÇ : CategoryTheory.Pretriangulated.Triangle C\nx y : CategoryTheory.Pretriangulated.TriangleMorphism T‚ÇÅ T‚ÇÇ\nhom‚ÇÅ : Eq x.hom‚ÇÅ y.hom‚ÇÅ\nhom‚ÇÇ : Eq x.hom‚ÇÇ y.hom‚ÇÇ\nhom‚ÇÉ : Eq x.hom‚ÇÉ y.hom‚ÇÉ\n‚ä¢ Eq x y","decl":"/-- A morphism of triangles `(X,Y,Z,f,g,h) ‚ü∂ (X',Y',Z',f',g',h')` in `C` is a triple of morphisms\n`a : X ‚ü∂ X'`, `b : Y ‚ü∂ Y'`, `c : Z ‚ü∂ Z'` such that\n`a ‚â´ f' = f ‚â´ b`, `b ‚â´ g' = g ‚â´ c`, and `a‚ü¶1‚üß' ‚â´ h = h' ‚â´ c`.\nIn other words, we have a commutative diagram:\n```\n     f      g      h\n  X  ‚îÄ‚îÄ‚îÄ> Y  ‚îÄ‚îÄ‚îÄ> Z  ‚îÄ‚îÄ‚îÄ> X‚ü¶1‚üß\n  ‚îÇ       ‚îÇ       ‚îÇ        ‚îÇ\n  ‚îÇa      ‚îÇb      ‚îÇc       ‚îÇa‚ü¶1‚üß'\n  V       V       V        V\n  X' ‚îÄ‚îÄ‚îÄ> Y' ‚îÄ‚îÄ‚îÄ> Z' ‚îÄ‚îÄ‚îÄ> X'‚ü¶1‚üß\n     f'     g'     h'\n```\n-/\n@[ext, stacks 0144]\nstructure TriangleMorphism (T‚ÇÅ : Triangle C) (T‚ÇÇ : Triangle C) where\n  /-- the first morphism in a triangle morphism -/\n  hom‚ÇÅ : T‚ÇÅ.obj‚ÇÅ ‚ü∂ T‚ÇÇ.obj‚ÇÅ\n  /-- the second morphism in a triangle morphism -/\n  hom‚ÇÇ : T‚ÇÅ.obj‚ÇÇ ‚ü∂ T‚ÇÇ.obj‚ÇÇ\n  /-- the third morphism in a triangle morphism -/\n  hom‚ÇÉ : T‚ÇÅ.obj‚ÇÉ ‚ü∂ T‚ÇÇ.obj‚ÇÉ\n  /-- the first commutative square of a triangle morphism -/\n  comm‚ÇÅ : T‚ÇÅ.mor‚ÇÅ ‚â´ hom‚ÇÇ = hom‚ÇÅ ‚â´ T‚ÇÇ.mor‚ÇÅ := by aesop_cat\n  /-- the second commutative square of a triangle morphism -/\n  comm‚ÇÇ : T‚ÇÅ.mor‚ÇÇ ‚â´ hom‚ÇÉ = hom‚ÇÇ ‚â´ T‚ÇÇ.mor‚ÇÇ := by aesop_cat\n  /-- the third commutative square of a triangle morphism -/\n  comm‚ÇÉ : T‚ÇÅ.mor‚ÇÉ ‚â´ hom‚ÇÅ‚ü¶1‚üß' = hom‚ÇÉ ‚â´ T‚ÇÇ.mor‚ÇÉ := by aesop_cat\n\n"}
{"name":"CategoryTheory.Pretriangulated.TriangleMorphism.comm‚ÇÉ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nT‚ÇÅ T‚ÇÇ : CategoryTheory.Pretriangulated.Triangle C\nself : CategoryTheory.Pretriangulated.TriangleMorphism T‚ÇÅ T‚ÇÇ\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp T‚ÇÅ.mor‚ÇÉ ((CategoryTheory.shiftFunctor C 1).map self.hom‚ÇÅ)) (CategoryTheory.CategoryStruct.comp self.hom‚ÇÉ T‚ÇÇ.mor‚ÇÉ)","decl":"/-- A morphism of triangles `(X,Y,Z,f,g,h) ‚ü∂ (X',Y',Z',f',g',h')` in `C` is a triple of morphisms\n`a : X ‚ü∂ X'`, `b : Y ‚ü∂ Y'`, `c : Z ‚ü∂ Z'` such that\n`a ‚â´ f' = f ‚â´ b`, `b ‚â´ g' = g ‚â´ c`, and `a‚ü¶1‚üß' ‚â´ h = h' ‚â´ c`.\nIn other words, we have a commutative diagram:\n```\n     f      g      h\n  X  ‚îÄ‚îÄ‚îÄ> Y  ‚îÄ‚îÄ‚îÄ> Z  ‚îÄ‚îÄ‚îÄ> X‚ü¶1‚üß\n  ‚îÇ       ‚îÇ       ‚îÇ        ‚îÇ\n  ‚îÇa      ‚îÇb      ‚îÇc       ‚îÇa‚ü¶1‚üß'\n  V       V       V        V\n  X' ‚îÄ‚îÄ‚îÄ> Y' ‚îÄ‚îÄ‚îÄ> Z' ‚îÄ‚îÄ‚îÄ> X'‚ü¶1‚üß\n     f'     g'     h'\n```\n-/\n@[ext, stacks 0144]\nstructure TriangleMorphism (T‚ÇÅ : Triangle C) (T‚ÇÇ : Triangle C) where\n  /-- the first morphism in a triangle morphism -/\n  hom‚ÇÅ : T‚ÇÅ.obj‚ÇÅ ‚ü∂ T‚ÇÇ.obj‚ÇÅ\n  /-- the second morphism in a triangle morphism -/\n  hom‚ÇÇ : T‚ÇÅ.obj‚ÇÇ ‚ü∂ T‚ÇÇ.obj‚ÇÇ\n  /-- the third morphism in a triangle morphism -/\n  hom‚ÇÉ : T‚ÇÅ.obj‚ÇÉ ‚ü∂ T‚ÇÇ.obj‚ÇÉ\n  /-- the first commutative square of a triangle morphism -/\n  comm‚ÇÅ : T‚ÇÅ.mor‚ÇÅ ‚â´ hom‚ÇÇ = hom‚ÇÅ ‚â´ T‚ÇÇ.mor‚ÇÅ := by aesop_cat\n  /-- the second commutative square of a triangle morphism -/\n  comm‚ÇÇ : T‚ÇÅ.mor‚ÇÇ ‚â´ hom‚ÇÉ = hom‚ÇÇ ‚â´ T‚ÇÇ.mor‚ÇÇ := by aesop_cat\n  /-- the third commutative square of a triangle morphism -/\n  comm‚ÇÉ : T‚ÇÅ.mor‚ÇÉ ‚â´ hom‚ÇÅ‚ü¶1‚üß' = hom‚ÇÉ ‚â´ T‚ÇÇ.mor‚ÇÉ := by aesop_cat\n\n"}
{"name":"CategoryTheory.Pretriangulated.TriangleMorphism.comm‚ÇÅ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nT‚ÇÅ T‚ÇÇ : CategoryTheory.Pretriangulated.Triangle C\nself : CategoryTheory.Pretriangulated.TriangleMorphism T‚ÇÅ T‚ÇÇ\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp T‚ÇÅ.mor‚ÇÅ self.hom‚ÇÇ) (CategoryTheory.CategoryStruct.comp self.hom‚ÇÅ T‚ÇÇ.mor‚ÇÅ)","decl":"/-- A morphism of triangles `(X,Y,Z,f,g,h) ‚ü∂ (X',Y',Z',f',g',h')` in `C` is a triple of morphisms\n`a : X ‚ü∂ X'`, `b : Y ‚ü∂ Y'`, `c : Z ‚ü∂ Z'` such that\n`a ‚â´ f' = f ‚â´ b`, `b ‚â´ g' = g ‚â´ c`, and `a‚ü¶1‚üß' ‚â´ h = h' ‚â´ c`.\nIn other words, we have a commutative diagram:\n```\n     f      g      h\n  X  ‚îÄ‚îÄ‚îÄ> Y  ‚îÄ‚îÄ‚îÄ> Z  ‚îÄ‚îÄ‚îÄ> X‚ü¶1‚üß\n  ‚îÇ       ‚îÇ       ‚îÇ        ‚îÇ\n  ‚îÇa      ‚îÇb      ‚îÇc       ‚îÇa‚ü¶1‚üß'\n  V       V       V        V\n  X' ‚îÄ‚îÄ‚îÄ> Y' ‚îÄ‚îÄ‚îÄ> Z' ‚îÄ‚îÄ‚îÄ> X'‚ü¶1‚üß\n     f'     g'     h'\n```\n-/\n@[ext, stacks 0144]\nstructure TriangleMorphism (T‚ÇÅ : Triangle C) (T‚ÇÇ : Triangle C) where\n  /-- the first morphism in a triangle morphism -/\n  hom‚ÇÅ : T‚ÇÅ.obj‚ÇÅ ‚ü∂ T‚ÇÇ.obj‚ÇÅ\n  /-- the second morphism in a triangle morphism -/\n  hom‚ÇÇ : T‚ÇÅ.obj‚ÇÇ ‚ü∂ T‚ÇÇ.obj‚ÇÇ\n  /-- the third morphism in a triangle morphism -/\n  hom‚ÇÉ : T‚ÇÅ.obj‚ÇÉ ‚ü∂ T‚ÇÇ.obj‚ÇÉ\n  /-- the first commutative square of a triangle morphism -/\n  comm‚ÇÅ : T‚ÇÅ.mor‚ÇÅ ‚â´ hom‚ÇÇ = hom‚ÇÅ ‚â´ T‚ÇÇ.mor‚ÇÅ := by aesop_cat\n  /-- the second commutative square of a triangle morphism -/\n  comm‚ÇÇ : T‚ÇÅ.mor‚ÇÇ ‚â´ hom‚ÇÉ = hom‚ÇÇ ‚â´ T‚ÇÇ.mor‚ÇÇ := by aesop_cat\n  /-- the third commutative square of a triangle morphism -/\n  comm‚ÇÉ : T‚ÇÅ.mor‚ÇÉ ‚â´ hom‚ÇÅ‚ü¶1‚üß' = hom‚ÇÉ ‚â´ T‚ÇÇ.mor‚ÇÉ := by aesop_cat\n\n"}
{"name":"CategoryTheory.Pretriangulated.TriangleMorphism.comm‚ÇÇ_assoc","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nT‚ÇÅ T‚ÇÇ : CategoryTheory.Pretriangulated.Triangle C\nself : CategoryTheory.Pretriangulated.TriangleMorphism T‚ÇÅ T‚ÇÇ\nZ : C\nh : Quiver.Hom T‚ÇÇ.obj‚ÇÉ Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp T‚ÇÅ.mor‚ÇÇ (CategoryTheory.CategoryStruct.comp self.hom‚ÇÉ h)) (CategoryTheory.CategoryStruct.comp self.hom‚ÇÇ (CategoryTheory.CategoryStruct.comp T‚ÇÇ.mor‚ÇÇ h))","decl":"attribute [reassoc (attr := simp)] TriangleMorphism.comm‚ÇÅ TriangleMorphism.comm‚ÇÇ\n  TriangleMorphism.comm‚ÇÉ\n\n"}
{"name":"CategoryTheory.Pretriangulated.TriangleMorphism.comm‚ÇÅ_assoc","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nT‚ÇÅ T‚ÇÇ : CategoryTheory.Pretriangulated.Triangle C\nself : CategoryTheory.Pretriangulated.TriangleMorphism T‚ÇÅ T‚ÇÇ\nZ : C\nh : Quiver.Hom T‚ÇÇ.obj‚ÇÇ Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp T‚ÇÅ.mor‚ÇÅ (CategoryTheory.CategoryStruct.comp self.hom‚ÇÇ h)) (CategoryTheory.CategoryStruct.comp self.hom‚ÇÅ (CategoryTheory.CategoryStruct.comp T‚ÇÇ.mor‚ÇÅ h))","decl":"attribute [reassoc (attr := simp)] TriangleMorphism.comm‚ÇÅ TriangleMorphism.comm‚ÇÇ\n  TriangleMorphism.comm‚ÇÉ\n\n"}
{"name":"CategoryTheory.Pretriangulated.TriangleMorphism.comm‚ÇÉ_assoc","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nT‚ÇÅ T‚ÇÇ : CategoryTheory.Pretriangulated.Triangle C\nself : CategoryTheory.Pretriangulated.TriangleMorphism T‚ÇÅ T‚ÇÇ\nZ : C\nh : Quiver.Hom ((CategoryTheory.shiftFunctor C 1).obj T‚ÇÇ.obj‚ÇÅ) Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp T‚ÇÅ.mor‚ÇÉ (CategoryTheory.CategoryStruct.comp ((CategoryTheory.shiftFunctor C 1).map self.hom‚ÇÅ) h)) (CategoryTheory.CategoryStruct.comp self.hom‚ÇÉ (CategoryTheory.CategoryStruct.comp T‚ÇÇ.mor‚ÇÉ h))","decl":"attribute [reassoc (attr := simp)] TriangleMorphism.comm‚ÇÅ TriangleMorphism.comm‚ÇÇ\n  TriangleMorphism.comm‚ÇÉ\n\n"}
{"name":"CategoryTheory.Pretriangulated.triangleMorphismId_hom‚ÇÇ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nT : CategoryTheory.Pretriangulated.Triangle C\n‚ä¢ Eq (CategoryTheory.Pretriangulated.triangleMorphismId T).hom‚ÇÇ (CategoryTheory.CategoryStruct.id T.obj‚ÇÇ)","decl":"/-- The identity triangle morphism.\n-/\n@[simps]\ndef triangleMorphismId (T : Triangle C) : TriangleMorphism T T where\n  hom‚ÇÅ := ùüô T.obj‚ÇÅ\n  hom‚ÇÇ := ùüô T.obj‚ÇÇ\n  hom‚ÇÉ := ùüô T.obj‚ÇÉ\n\n"}
{"name":"CategoryTheory.Pretriangulated.triangleMorphismId_hom‚ÇÅ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nT : CategoryTheory.Pretriangulated.Triangle C\n‚ä¢ Eq (CategoryTheory.Pretriangulated.triangleMorphismId T).hom‚ÇÅ (CategoryTheory.CategoryStruct.id T.obj‚ÇÅ)","decl":"/-- The identity triangle morphism.\n-/\n@[simps]\ndef triangleMorphismId (T : Triangle C) : TriangleMorphism T T where\n  hom‚ÇÅ := ùüô T.obj‚ÇÅ\n  hom‚ÇÇ := ùüô T.obj‚ÇÇ\n  hom‚ÇÉ := ùüô T.obj‚ÇÉ\n\n"}
{"name":"CategoryTheory.Pretriangulated.triangleMorphismId_hom‚ÇÉ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nT : CategoryTheory.Pretriangulated.Triangle C\n‚ä¢ Eq (CategoryTheory.Pretriangulated.triangleMorphismId T).hom‚ÇÉ (CategoryTheory.CategoryStruct.id T.obj‚ÇÉ)","decl":"/-- The identity triangle morphism.\n-/\n@[simps]\ndef triangleMorphismId (T : Triangle C) : TriangleMorphism T T where\n  hom‚ÇÅ := ùüô T.obj‚ÇÅ\n  hom‚ÇÇ := ùüô T.obj‚ÇÇ\n  hom‚ÇÉ := ùüô T.obj‚ÇÉ\n\n"}
{"name":"CategoryTheory.Pretriangulated.TriangleMorphism.comp_hom‚ÇÅ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nT‚ÇÅ T‚ÇÇ T‚ÇÉ : CategoryTheory.Pretriangulated.Triangle C\nf : CategoryTheory.Pretriangulated.TriangleMorphism T‚ÇÅ T‚ÇÇ\ng : CategoryTheory.Pretriangulated.TriangleMorphism T‚ÇÇ T‚ÇÉ\n‚ä¢ Eq (f.comp g).hom‚ÇÅ (CategoryTheory.CategoryStruct.comp f.hom‚ÇÅ g.hom‚ÇÅ)","decl":"/-- Composition of triangle morphisms gives a triangle morphism.\n-/\n@[simps]\ndef TriangleMorphism.comp (f : TriangleMorphism T‚ÇÅ T‚ÇÇ) (g : TriangleMorphism T‚ÇÇ T‚ÇÉ) :\n    TriangleMorphism T‚ÇÅ T‚ÇÉ where\n  hom‚ÇÅ := f.hom‚ÇÅ ‚â´ g.hom‚ÇÅ\n  hom‚ÇÇ := f.hom‚ÇÇ ‚â´ g.hom‚ÇÇ\n  hom‚ÇÉ := f.hom‚ÇÉ ‚â´ g.hom‚ÇÉ\n\n"}
{"name":"CategoryTheory.Pretriangulated.TriangleMorphism.comp_hom‚ÇÉ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nT‚ÇÅ T‚ÇÇ T‚ÇÉ : CategoryTheory.Pretriangulated.Triangle C\nf : CategoryTheory.Pretriangulated.TriangleMorphism T‚ÇÅ T‚ÇÇ\ng : CategoryTheory.Pretriangulated.TriangleMorphism T‚ÇÇ T‚ÇÉ\n‚ä¢ Eq (f.comp g).hom‚ÇÉ (CategoryTheory.CategoryStruct.comp f.hom‚ÇÉ g.hom‚ÇÉ)","decl":"/-- Composition of triangle morphisms gives a triangle morphism.\n-/\n@[simps]\ndef TriangleMorphism.comp (f : TriangleMorphism T‚ÇÅ T‚ÇÇ) (g : TriangleMorphism T‚ÇÇ T‚ÇÉ) :\n    TriangleMorphism T‚ÇÅ T‚ÇÉ where\n  hom‚ÇÅ := f.hom‚ÇÅ ‚â´ g.hom‚ÇÅ\n  hom‚ÇÇ := f.hom‚ÇÇ ‚â´ g.hom‚ÇÇ\n  hom‚ÇÉ := f.hom‚ÇÉ ‚â´ g.hom‚ÇÉ\n\n"}
{"name":"CategoryTheory.Pretriangulated.TriangleMorphism.comp_hom‚ÇÇ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nT‚ÇÅ T‚ÇÇ T‚ÇÉ : CategoryTheory.Pretriangulated.Triangle C\nf : CategoryTheory.Pretriangulated.TriangleMorphism T‚ÇÅ T‚ÇÇ\ng : CategoryTheory.Pretriangulated.TriangleMorphism T‚ÇÇ T‚ÇÉ\n‚ä¢ Eq (f.comp g).hom‚ÇÇ (CategoryTheory.CategoryStruct.comp f.hom‚ÇÇ g.hom‚ÇÇ)","decl":"/-- Composition of triangle morphisms gives a triangle morphism.\n-/\n@[simps]\ndef TriangleMorphism.comp (f : TriangleMorphism T‚ÇÅ T‚ÇÇ) (g : TriangleMorphism T‚ÇÇ T‚ÇÉ) :\n    TriangleMorphism T‚ÇÅ T‚ÇÉ where\n  hom‚ÇÅ := f.hom‚ÇÅ ‚â´ g.hom‚ÇÅ\n  hom‚ÇÇ := f.hom‚ÇÇ ‚â´ g.hom‚ÇÇ\n  hom‚ÇÉ := f.hom‚ÇÉ ‚â´ g.hom‚ÇÉ\n\n"}
{"name":"CategoryTheory.Pretriangulated.triangleCategory_comp","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nX‚úù Y‚úù Z‚úù : CategoryTheory.Pretriangulated.Triangle C\nf : Quiver.Hom X‚úù Y‚úù\ng : Quiver.Hom Y‚úù Z‚úù\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp f g) (CategoryTheory.Pretriangulated.TriangleMorphism.comp f g)","decl":"/-- Triangles with triangle morphisms form a category.\n-/\n@[simps]\ninstance triangleCategory : Category (Triangle C) where\n  Hom A B := TriangleMorphism A B\n  id A := triangleMorphismId A\n  comp f g := f.comp g\n\n"}
{"name":"CategoryTheory.Pretriangulated.triangleCategory_id","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA : CategoryTheory.Pretriangulated.Triangle C\n‚ä¢ Eq (CategoryTheory.CategoryStruct.id A) (CategoryTheory.Pretriangulated.triangleMorphismId A)","decl":"/-- Triangles with triangle morphisms form a category.\n-/\n@[simps]\ninstance triangleCategory : Category (Triangle C) where\n  Hom A B := TriangleMorphism A B\n  id A := triangleMorphismId A\n  comp f g := f.comp g\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.hom_ext","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA B : CategoryTheory.Pretriangulated.Triangle C\nf g : Quiver.Hom A B\nh‚ÇÅ : Eq f.hom‚ÇÅ g.hom‚ÇÅ\nh‚ÇÇ : Eq f.hom‚ÇÇ g.hom‚ÇÇ\nh‚ÇÉ : Eq f.hom‚ÇÉ g.hom‚ÇÉ\n‚ä¢ Eq f g","decl":"@[ext]\nlemma Triangle.hom_ext {A B : Triangle C} (f g : A ‚ü∂ B)\n    (h‚ÇÅ : f.hom‚ÇÅ = g.hom‚ÇÅ) (h‚ÇÇ : f.hom‚ÇÇ = g.hom‚ÇÇ) (h‚ÇÉ : f.hom‚ÇÉ = g.hom‚ÇÉ) : f = g :=\n  TriangleMorphism.ext h‚ÇÅ h‚ÇÇ h‚ÇÉ\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.hom_ext_iff","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA B : CategoryTheory.Pretriangulated.Triangle C\nf g : Quiver.Hom A B\n‚ä¢ Iff (Eq f g) (And (Eq f.hom‚ÇÅ g.hom‚ÇÅ) (And (Eq f.hom‚ÇÇ g.hom‚ÇÇ) (Eq f.hom‚ÇÉ g.hom‚ÇÉ)))","decl":"@[ext]\nlemma Triangle.hom_ext {A B : Triangle C} (f g : A ‚ü∂ B)\n    (h‚ÇÅ : f.hom‚ÇÅ = g.hom‚ÇÅ) (h‚ÇÇ : f.hom‚ÇÇ = g.hom‚ÇÇ) (h‚ÇÉ : f.hom‚ÇÉ = g.hom‚ÇÉ) : f = g :=\n  TriangleMorphism.ext h‚ÇÅ h‚ÇÇ h‚ÇÉ\n\n"}
{"name":"CategoryTheory.Pretriangulated.id_hom‚ÇÅ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA : CategoryTheory.Pretriangulated.Triangle C\n‚ä¢ Eq (CategoryTheory.CategoryStruct.id A).hom‚ÇÅ (CategoryTheory.CategoryStruct.id A.obj‚ÇÅ)","decl":"@[simp]\nlemma id_hom‚ÇÅ (A : Triangle C) : TriangleMorphism.hom‚ÇÅ (ùüô A) = ùüô _ := rfl\n"}
{"name":"CategoryTheory.Pretriangulated.id_hom‚ÇÇ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA : CategoryTheory.Pretriangulated.Triangle C\n‚ä¢ Eq (CategoryTheory.CategoryStruct.id A).hom‚ÇÇ (CategoryTheory.CategoryStruct.id A.obj‚ÇÇ)","decl":"@[simp]\nlemma id_hom‚ÇÇ (A : Triangle C) : TriangleMorphism.hom‚ÇÇ (ùüô A) = ùüô _ := rfl\n"}
{"name":"CategoryTheory.Pretriangulated.id_hom‚ÇÉ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA : CategoryTheory.Pretriangulated.Triangle C\n‚ä¢ Eq (CategoryTheory.CategoryStruct.id A).hom‚ÇÉ (CategoryTheory.CategoryStruct.id A.obj‚ÇÉ)","decl":"@[simp]\nlemma id_hom‚ÇÉ (A : Triangle C) : TriangleMorphism.hom‚ÇÉ (ùüô A) = ùüô _ := rfl\n\n"}
{"name":"CategoryTheory.Pretriangulated.comp_hom‚ÇÅ_assoc","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nX Y Z‚úù : CategoryTheory.Pretriangulated.Triangle C\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z‚úù\nZ : C\nh : Quiver.Hom Z‚úù.obj‚ÇÅ Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.comp f g).hom‚ÇÅ h) (CategoryTheory.CategoryStruct.comp f.hom‚ÇÅ (CategoryTheory.CategoryStruct.comp g.hom‚ÇÅ h))","decl":"@[simp, reassoc]\nlemma comp_hom‚ÇÅ {X Y Z : Triangle C} (f : X ‚ü∂ Y) (g : Y ‚ü∂ Z) :\n    (f ‚â´ g).hom‚ÇÅ = f.hom‚ÇÅ ‚â´ g.hom‚ÇÅ := rfl\n"}
{"name":"CategoryTheory.Pretriangulated.comp_hom‚ÇÅ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nX Y Z : CategoryTheory.Pretriangulated.Triangle C\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp f g).hom‚ÇÅ (CategoryTheory.CategoryStruct.comp f.hom‚ÇÅ g.hom‚ÇÅ)","decl":"@[simp, reassoc]\nlemma comp_hom‚ÇÅ {X Y Z : Triangle C} (f : X ‚ü∂ Y) (g : Y ‚ü∂ Z) :\n    (f ‚â´ g).hom‚ÇÅ = f.hom‚ÇÅ ‚â´ g.hom‚ÇÅ := rfl\n"}
{"name":"CategoryTheory.Pretriangulated.comp_hom‚ÇÇ_assoc","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nX Y Z‚úù : CategoryTheory.Pretriangulated.Triangle C\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z‚úù\nZ : C\nh : Quiver.Hom Z‚úù.obj‚ÇÇ Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.comp f g).hom‚ÇÇ h) (CategoryTheory.CategoryStruct.comp f.hom‚ÇÇ (CategoryTheory.CategoryStruct.comp g.hom‚ÇÇ h))","decl":"@[simp, reassoc]\nlemma comp_hom‚ÇÇ {X Y Z : Triangle C} (f : X ‚ü∂ Y) (g : Y ‚ü∂ Z) :\n    (f ‚â´ g).hom‚ÇÇ = f.hom‚ÇÇ ‚â´ g.hom‚ÇÇ := rfl\n"}
{"name":"CategoryTheory.Pretriangulated.comp_hom‚ÇÇ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nX Y Z : CategoryTheory.Pretriangulated.Triangle C\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp f g).hom‚ÇÇ (CategoryTheory.CategoryStruct.comp f.hom‚ÇÇ g.hom‚ÇÇ)","decl":"@[simp, reassoc]\nlemma comp_hom‚ÇÇ {X Y Z : Triangle C} (f : X ‚ü∂ Y) (g : Y ‚ü∂ Z) :\n    (f ‚â´ g).hom‚ÇÇ = f.hom‚ÇÇ ‚â´ g.hom‚ÇÇ := rfl\n"}
{"name":"CategoryTheory.Pretriangulated.comp_hom‚ÇÉ_assoc","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nX Y Z‚úù : CategoryTheory.Pretriangulated.Triangle C\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z‚úù\nZ : C\nh : Quiver.Hom Z‚úù.obj‚ÇÉ Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.CategoryStruct.comp f g).hom‚ÇÉ h) (CategoryTheory.CategoryStruct.comp f.hom‚ÇÉ (CategoryTheory.CategoryStruct.comp g.hom‚ÇÉ h))","decl":"@[simp, reassoc]\nlemma comp_hom‚ÇÉ {X Y Z : Triangle C} (f : X ‚ü∂ Y) (g : Y ‚ü∂ Z) :\n    (f ‚â´ g).hom‚ÇÉ = f.hom‚ÇÉ ‚â´ g.hom‚ÇÉ := rfl\n\n"}
{"name":"CategoryTheory.Pretriangulated.comp_hom‚ÇÉ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nX Y Z : CategoryTheory.Pretriangulated.Triangle C\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp f g).hom‚ÇÉ (CategoryTheory.CategoryStruct.comp f.hom‚ÇÉ g.hom‚ÇÉ)","decl":"@[simp, reassoc]\nlemma comp_hom‚ÇÉ {X Y Z : Triangle C} (f : X ‚ü∂ Y) (g : Y ‚ü∂ Z) :\n    (f ‚â´ g).hom‚ÇÉ = f.hom‚ÇÉ ‚â´ g.hom‚ÇÉ := rfl\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.homMk_hom‚ÇÉ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA B : CategoryTheory.Pretriangulated.Triangle C\nhom‚ÇÅ : Quiver.Hom A.obj‚ÇÅ B.obj‚ÇÅ\nhom‚ÇÇ : Quiver.Hom A.obj‚ÇÇ B.obj‚ÇÇ\nhom‚ÇÉ : Quiver.Hom A.obj‚ÇÉ B.obj‚ÇÉ\ncomm‚ÇÅ : autoParam (Eq (CategoryTheory.CategoryStruct.comp A.mor‚ÇÅ hom‚ÇÇ) (CategoryTheory.CategoryStruct.comp hom‚ÇÅ B.mor‚ÇÅ)) _auto‚úù\ncomm‚ÇÇ : autoParam (Eq (CategoryTheory.CategoryStruct.comp A.mor‚ÇÇ hom‚ÇÉ) (CategoryTheory.CategoryStruct.comp hom‚ÇÇ B.mor‚ÇÇ)) _auto‚úù\ncomm‚ÇÉ : autoParam (Eq (CategoryTheory.CategoryStruct.comp A.mor‚ÇÉ ((CategoryTheory.shiftFunctor C 1).map hom‚ÇÅ)) (CategoryTheory.CategoryStruct.comp hom‚ÇÉ B.mor‚ÇÉ)) _auto‚úù\n‚ä¢ Eq (A.homMk B hom‚ÇÅ hom‚ÇÇ hom‚ÇÉ comm‚ÇÅ comm‚ÇÇ comm‚ÇÉ).hom‚ÇÉ hom‚ÇÉ","decl":"@[simps]\ndef Triangle.homMk (A B : Triangle C)\n    (hom‚ÇÅ : A.obj‚ÇÅ ‚ü∂ B.obj‚ÇÅ) (hom‚ÇÇ : A.obj‚ÇÇ ‚ü∂ B.obj‚ÇÇ) (hom‚ÇÉ : A.obj‚ÇÉ ‚ü∂ B.obj‚ÇÉ)\n    (comm‚ÇÅ : A.mor‚ÇÅ ‚â´ hom‚ÇÇ = hom‚ÇÅ ‚â´ B.mor‚ÇÅ := by aesop_cat)\n    (comm‚ÇÇ : A.mor‚ÇÇ ‚â´ hom‚ÇÉ = hom‚ÇÇ ‚â´ B.mor‚ÇÇ := by aesop_cat)\n    (comm‚ÇÉ : A.mor‚ÇÉ ‚â´ hom‚ÇÅ‚ü¶1‚üß' = hom‚ÇÉ ‚â´ B.mor‚ÇÉ := by aesop_cat) :\n    A ‚ü∂ B where\n  hom‚ÇÅ := hom‚ÇÅ\n  hom‚ÇÇ := hom‚ÇÇ\n  hom‚ÇÉ := hom‚ÇÉ\n  comm‚ÇÅ := comm‚ÇÅ\n  comm‚ÇÇ := comm‚ÇÇ\n  comm‚ÇÉ := comm‚ÇÉ\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.homMk_hom‚ÇÅ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA B : CategoryTheory.Pretriangulated.Triangle C\nhom‚ÇÅ : Quiver.Hom A.obj‚ÇÅ B.obj‚ÇÅ\nhom‚ÇÇ : Quiver.Hom A.obj‚ÇÇ B.obj‚ÇÇ\nhom‚ÇÉ : Quiver.Hom A.obj‚ÇÉ B.obj‚ÇÉ\ncomm‚ÇÅ : autoParam (Eq (CategoryTheory.CategoryStruct.comp A.mor‚ÇÅ hom‚ÇÇ) (CategoryTheory.CategoryStruct.comp hom‚ÇÅ B.mor‚ÇÅ)) _auto‚úù\ncomm‚ÇÇ : autoParam (Eq (CategoryTheory.CategoryStruct.comp A.mor‚ÇÇ hom‚ÇÉ) (CategoryTheory.CategoryStruct.comp hom‚ÇÇ B.mor‚ÇÇ)) _auto‚úù\ncomm‚ÇÉ : autoParam (Eq (CategoryTheory.CategoryStruct.comp A.mor‚ÇÉ ((CategoryTheory.shiftFunctor C 1).map hom‚ÇÅ)) (CategoryTheory.CategoryStruct.comp hom‚ÇÉ B.mor‚ÇÉ)) _auto‚úù\n‚ä¢ Eq (A.homMk B hom‚ÇÅ hom‚ÇÇ hom‚ÇÉ comm‚ÇÅ comm‚ÇÇ comm‚ÇÉ).hom‚ÇÅ hom‚ÇÅ","decl":"@[simps]\ndef Triangle.homMk (A B : Triangle C)\n    (hom‚ÇÅ : A.obj‚ÇÅ ‚ü∂ B.obj‚ÇÅ) (hom‚ÇÇ : A.obj‚ÇÇ ‚ü∂ B.obj‚ÇÇ) (hom‚ÇÉ : A.obj‚ÇÉ ‚ü∂ B.obj‚ÇÉ)\n    (comm‚ÇÅ : A.mor‚ÇÅ ‚â´ hom‚ÇÇ = hom‚ÇÅ ‚â´ B.mor‚ÇÅ := by aesop_cat)\n    (comm‚ÇÇ : A.mor‚ÇÇ ‚â´ hom‚ÇÉ = hom‚ÇÇ ‚â´ B.mor‚ÇÇ := by aesop_cat)\n    (comm‚ÇÉ : A.mor‚ÇÉ ‚â´ hom‚ÇÅ‚ü¶1‚üß' = hom‚ÇÉ ‚â´ B.mor‚ÇÉ := by aesop_cat) :\n    A ‚ü∂ B where\n  hom‚ÇÅ := hom‚ÇÅ\n  hom‚ÇÇ := hom‚ÇÇ\n  hom‚ÇÉ := hom‚ÇÉ\n  comm‚ÇÅ := comm‚ÇÅ\n  comm‚ÇÇ := comm‚ÇÇ\n  comm‚ÇÉ := comm‚ÇÉ\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.homMk_hom‚ÇÇ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA B : CategoryTheory.Pretriangulated.Triangle C\nhom‚ÇÅ : Quiver.Hom A.obj‚ÇÅ B.obj‚ÇÅ\nhom‚ÇÇ : Quiver.Hom A.obj‚ÇÇ B.obj‚ÇÇ\nhom‚ÇÉ : Quiver.Hom A.obj‚ÇÉ B.obj‚ÇÉ\ncomm‚ÇÅ : autoParam (Eq (CategoryTheory.CategoryStruct.comp A.mor‚ÇÅ hom‚ÇÇ) (CategoryTheory.CategoryStruct.comp hom‚ÇÅ B.mor‚ÇÅ)) _auto‚úù\ncomm‚ÇÇ : autoParam (Eq (CategoryTheory.CategoryStruct.comp A.mor‚ÇÇ hom‚ÇÉ) (CategoryTheory.CategoryStruct.comp hom‚ÇÇ B.mor‚ÇÇ)) _auto‚úù\ncomm‚ÇÉ : autoParam (Eq (CategoryTheory.CategoryStruct.comp A.mor‚ÇÉ ((CategoryTheory.shiftFunctor C 1).map hom‚ÇÅ)) (CategoryTheory.CategoryStruct.comp hom‚ÇÉ B.mor‚ÇÉ)) _auto‚úù\n‚ä¢ Eq (A.homMk B hom‚ÇÅ hom‚ÇÇ hom‚ÇÉ comm‚ÇÅ comm‚ÇÇ comm‚ÇÉ).hom‚ÇÇ hom‚ÇÇ","decl":"@[simps]\ndef Triangle.homMk (A B : Triangle C)\n    (hom‚ÇÅ : A.obj‚ÇÅ ‚ü∂ B.obj‚ÇÅ) (hom‚ÇÇ : A.obj‚ÇÇ ‚ü∂ B.obj‚ÇÇ) (hom‚ÇÉ : A.obj‚ÇÉ ‚ü∂ B.obj‚ÇÉ)\n    (comm‚ÇÅ : A.mor‚ÇÅ ‚â´ hom‚ÇÇ = hom‚ÇÅ ‚â´ B.mor‚ÇÅ := by aesop_cat)\n    (comm‚ÇÇ : A.mor‚ÇÇ ‚â´ hom‚ÇÉ = hom‚ÇÇ ‚â´ B.mor‚ÇÇ := by aesop_cat)\n    (comm‚ÇÉ : A.mor‚ÇÉ ‚â´ hom‚ÇÅ‚ü¶1‚üß' = hom‚ÇÉ ‚â´ B.mor‚ÇÉ := by aesop_cat) :\n    A ‚ü∂ B where\n  hom‚ÇÅ := hom‚ÇÅ\n  hom‚ÇÇ := hom‚ÇÇ\n  hom‚ÇÉ := hom‚ÇÉ\n  comm‚ÇÅ := comm‚ÇÅ\n  comm‚ÇÇ := comm‚ÇÇ\n  comm‚ÇÉ := comm‚ÇÉ\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.isoMk_hom","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA B : CategoryTheory.Pretriangulated.Triangle C\niso‚ÇÅ : CategoryTheory.Iso A.obj‚ÇÅ B.obj‚ÇÅ\niso‚ÇÇ : CategoryTheory.Iso A.obj‚ÇÇ B.obj‚ÇÇ\niso‚ÇÉ : CategoryTheory.Iso A.obj‚ÇÉ B.obj‚ÇÉ\ncomm‚ÇÅ : autoParam (Eq (CategoryTheory.CategoryStruct.comp A.mor‚ÇÅ iso‚ÇÇ.hom) (CategoryTheory.CategoryStruct.comp iso‚ÇÅ.hom B.mor‚ÇÅ)) _auto‚úù\ncomm‚ÇÇ : autoParam (Eq (CategoryTheory.CategoryStruct.comp A.mor‚ÇÇ iso‚ÇÉ.hom) (CategoryTheory.CategoryStruct.comp iso‚ÇÇ.hom B.mor‚ÇÇ)) _auto‚úù\ncomm‚ÇÉ : autoParam (Eq (CategoryTheory.CategoryStruct.comp A.mor‚ÇÉ ((CategoryTheory.shiftFunctor C 1).map iso‚ÇÅ.hom)) (CategoryTheory.CategoryStruct.comp iso‚ÇÉ.hom B.mor‚ÇÉ)) _auto‚úù\n‚ä¢ Eq (A.isoMk B iso‚ÇÅ iso‚ÇÇ iso‚ÇÉ comm‚ÇÅ comm‚ÇÇ comm‚ÇÉ).hom (A.homMk B iso‚ÇÅ.hom iso‚ÇÇ.hom iso‚ÇÉ.hom comm‚ÇÅ comm‚ÇÇ comm‚ÇÉ)","decl":"@[simps]\ndef Triangle.isoMk (A B : Triangle C)\n    (iso‚ÇÅ : A.obj‚ÇÅ ‚âÖ B.obj‚ÇÅ) (iso‚ÇÇ : A.obj‚ÇÇ ‚âÖ B.obj‚ÇÇ) (iso‚ÇÉ : A.obj‚ÇÉ ‚âÖ B.obj‚ÇÉ)\n    (comm‚ÇÅ : A.mor‚ÇÅ ‚â´ iso‚ÇÇ.hom = iso‚ÇÅ.hom ‚â´ B.mor‚ÇÅ := by aesop_cat)\n    (comm‚ÇÇ : A.mor‚ÇÇ ‚â´ iso‚ÇÉ.hom = iso‚ÇÇ.hom ‚â´ B.mor‚ÇÇ := by aesop_cat)\n    (comm‚ÇÉ : A.mor‚ÇÉ ‚â´ iso‚ÇÅ.hom‚ü¶1‚üß' = iso‚ÇÉ.hom ‚â´ B.mor‚ÇÉ := by aesop_cat) : A ‚âÖ B where\n  hom := Triangle.homMk _ _ iso‚ÇÅ.hom iso‚ÇÇ.hom iso‚ÇÉ.hom comm‚ÇÅ comm‚ÇÇ comm‚ÇÉ\n  inv := Triangle.homMk _ _ iso‚ÇÅ.inv iso‚ÇÇ.inv iso‚ÇÉ.inv\n    (by simp only [‚Üê cancel_mono iso‚ÇÇ.hom, assoc, Iso.inv_hom_id, comp_id,\n      comm‚ÇÅ, Iso.inv_hom_id_assoc])\n    (by simp only [‚Üê cancel_mono iso‚ÇÉ.hom, assoc, Iso.inv_hom_id, comp_id,\n      comm‚ÇÇ, Iso.inv_hom_id_assoc])\n    (by simp only [‚Üê cancel_mono (iso‚ÇÅ.hom‚ü¶(1 : ‚Ñ§)‚üß'), Category.assoc, comm‚ÇÉ,\n      Iso.inv_hom_id_assoc, ‚Üê Functor.map_comp, Iso.inv_hom_id,\n      Functor.map_id, Category.comp_id])\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.isoMk_inv","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA B : CategoryTheory.Pretriangulated.Triangle C\niso‚ÇÅ : CategoryTheory.Iso A.obj‚ÇÅ B.obj‚ÇÅ\niso‚ÇÇ : CategoryTheory.Iso A.obj‚ÇÇ B.obj‚ÇÇ\niso‚ÇÉ : CategoryTheory.Iso A.obj‚ÇÉ B.obj‚ÇÉ\ncomm‚ÇÅ : autoParam (Eq (CategoryTheory.CategoryStruct.comp A.mor‚ÇÅ iso‚ÇÇ.hom) (CategoryTheory.CategoryStruct.comp iso‚ÇÅ.hom B.mor‚ÇÅ)) _auto‚úù\ncomm‚ÇÇ : autoParam (Eq (CategoryTheory.CategoryStruct.comp A.mor‚ÇÇ iso‚ÇÉ.hom) (CategoryTheory.CategoryStruct.comp iso‚ÇÇ.hom B.mor‚ÇÇ)) _auto‚úù\ncomm‚ÇÉ : autoParam (Eq (CategoryTheory.CategoryStruct.comp A.mor‚ÇÉ ((CategoryTheory.shiftFunctor C 1).map iso‚ÇÅ.hom)) (CategoryTheory.CategoryStruct.comp iso‚ÇÉ.hom B.mor‚ÇÉ)) _auto‚úù\n‚ä¢ Eq (A.isoMk B iso‚ÇÅ iso‚ÇÇ iso‚ÇÉ comm‚ÇÅ comm‚ÇÇ comm‚ÇÉ).inv (B.homMk A iso‚ÇÅ.inv iso‚ÇÇ.inv iso‚ÇÉ.inv ‚ãØ ‚ãØ ‚ãØ)","decl":"@[simps]\ndef Triangle.isoMk (A B : Triangle C)\n    (iso‚ÇÅ : A.obj‚ÇÅ ‚âÖ B.obj‚ÇÅ) (iso‚ÇÇ : A.obj‚ÇÇ ‚âÖ B.obj‚ÇÇ) (iso‚ÇÉ : A.obj‚ÇÉ ‚âÖ B.obj‚ÇÉ)\n    (comm‚ÇÅ : A.mor‚ÇÅ ‚â´ iso‚ÇÇ.hom = iso‚ÇÅ.hom ‚â´ B.mor‚ÇÅ := by aesop_cat)\n    (comm‚ÇÇ : A.mor‚ÇÇ ‚â´ iso‚ÇÉ.hom = iso‚ÇÇ.hom ‚â´ B.mor‚ÇÇ := by aesop_cat)\n    (comm‚ÇÉ : A.mor‚ÇÉ ‚â´ iso‚ÇÅ.hom‚ü¶1‚üß' = iso‚ÇÉ.hom ‚â´ B.mor‚ÇÉ := by aesop_cat) : A ‚âÖ B where\n  hom := Triangle.homMk _ _ iso‚ÇÅ.hom iso‚ÇÇ.hom iso‚ÇÉ.hom comm‚ÇÅ comm‚ÇÇ comm‚ÇÉ\n  inv := Triangle.homMk _ _ iso‚ÇÅ.inv iso‚ÇÇ.inv iso‚ÇÉ.inv\n    (by simp only [‚Üê cancel_mono iso‚ÇÇ.hom, assoc, Iso.inv_hom_id, comp_id,\n      comm‚ÇÅ, Iso.inv_hom_id_assoc])\n    (by simp only [‚Üê cancel_mono iso‚ÇÉ.hom, assoc, Iso.inv_hom_id, comp_id,\n      comm‚ÇÇ, Iso.inv_hom_id_assoc])\n    (by simp only [‚Üê cancel_mono (iso‚ÇÅ.hom‚ü¶(1 : ‚Ñ§)‚üß'), Category.assoc, comm‚ÇÉ,\n      Iso.inv_hom_id_assoc, ‚Üê Functor.map_comp, Iso.inv_hom_id,\n      Functor.map_id, Category.comp_id])\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.isIso_of_isIsos","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA B : CategoryTheory.Pretriangulated.Triangle C\nf : Quiver.Hom A B\nh‚ÇÅ : CategoryTheory.IsIso f.hom‚ÇÅ\nh‚ÇÇ : CategoryTheory.IsIso f.hom‚ÇÇ\nh‚ÇÉ : CategoryTheory.IsIso f.hom‚ÇÉ\n‚ä¢ CategoryTheory.IsIso f","decl":"lemma Triangle.isIso_of_isIsos {A B : Triangle C} (f : A ‚ü∂ B)\n    (h‚ÇÅ : IsIso f.hom‚ÇÅ) (h‚ÇÇ : IsIso f.hom‚ÇÇ) (h‚ÇÉ : IsIso f.hom‚ÇÉ) : IsIso f := by\n  let e := Triangle.isoMk A B (asIso f.hom‚ÇÅ) (asIso f.hom‚ÇÇ) (asIso f.hom‚ÇÉ)\n    (by simp) (by simp) (by simp)\n  exact (inferInstance : IsIso e.hom)\n\n"}
{"name":"CategoryTheory.Iso.hom_inv_id_triangle_hom‚ÇÅ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA B : CategoryTheory.Pretriangulated.Triangle C\ne : CategoryTheory.Iso A B\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp e.hom.hom‚ÇÅ e.inv.hom‚ÇÅ) (CategoryTheory.CategoryStruct.id A.obj‚ÇÅ)","decl":"@[reassoc (attr := simp)]\nlemma _root_.CategoryTheory.Iso.hom_inv_id_triangle_hom‚ÇÅ {A B : Triangle C} (e : A ‚âÖ B) :\n    e.hom.hom‚ÇÅ ‚â´ e.inv.hom‚ÇÅ = ùüô _ := by rw [‚Üê comp_hom‚ÇÅ, e.hom_inv_id, id_hom‚ÇÅ]\n"}
{"name":"CategoryTheory.Iso.hom_inv_id_triangle_hom‚ÇÅ_assoc","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA B : CategoryTheory.Pretriangulated.Triangle C\ne : CategoryTheory.Iso A B\nZ : C\nh : Quiver.Hom A.obj‚ÇÅ Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp e.hom.hom‚ÇÅ (CategoryTheory.CategoryStruct.comp e.inv.hom‚ÇÅ h)) h","decl":"@[reassoc (attr := simp)]\nlemma _root_.CategoryTheory.Iso.hom_inv_id_triangle_hom‚ÇÅ {A B : Triangle C} (e : A ‚âÖ B) :\n    e.hom.hom‚ÇÅ ‚â´ e.inv.hom‚ÇÅ = ùüô _ := by rw [‚Üê comp_hom‚ÇÅ, e.hom_inv_id, id_hom‚ÇÅ]\n"}
{"name":"CategoryTheory.Iso.hom_inv_id_triangle_hom‚ÇÇ_assoc","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA B : CategoryTheory.Pretriangulated.Triangle C\ne : CategoryTheory.Iso A B\nZ : C\nh : Quiver.Hom A.obj‚ÇÇ Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp e.hom.hom‚ÇÇ (CategoryTheory.CategoryStruct.comp e.inv.hom‚ÇÇ h)) h","decl":"@[reassoc (attr := simp)]\nlemma _root_.CategoryTheory.Iso.hom_inv_id_triangle_hom‚ÇÇ {A B : Triangle C} (e : A ‚âÖ B) :\n    e.hom.hom‚ÇÇ ‚â´ e.inv.hom‚ÇÇ = ùüô _ := by rw [‚Üê comp_hom‚ÇÇ, e.hom_inv_id, id_hom‚ÇÇ]\n"}
{"name":"CategoryTheory.Iso.hom_inv_id_triangle_hom‚ÇÇ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA B : CategoryTheory.Pretriangulated.Triangle C\ne : CategoryTheory.Iso A B\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp e.hom.hom‚ÇÇ e.inv.hom‚ÇÇ) (CategoryTheory.CategoryStruct.id A.obj‚ÇÇ)","decl":"@[reassoc (attr := simp)]\nlemma _root_.CategoryTheory.Iso.hom_inv_id_triangle_hom‚ÇÇ {A B : Triangle C} (e : A ‚âÖ B) :\n    e.hom.hom‚ÇÇ ‚â´ e.inv.hom‚ÇÇ = ùüô _ := by rw [‚Üê comp_hom‚ÇÇ, e.hom_inv_id, id_hom‚ÇÇ]\n"}
{"name":"CategoryTheory.Iso.hom_inv_id_triangle_hom‚ÇÉ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA B : CategoryTheory.Pretriangulated.Triangle C\ne : CategoryTheory.Iso A B\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp e.hom.hom‚ÇÉ e.inv.hom‚ÇÉ) (CategoryTheory.CategoryStruct.id A.obj‚ÇÉ)","decl":"@[reassoc (attr := simp)]\nlemma _root_.CategoryTheory.Iso.hom_inv_id_triangle_hom‚ÇÉ {A B : Triangle C} (e : A ‚âÖ B) :\n    e.hom.hom‚ÇÉ ‚â´ e.inv.hom‚ÇÉ = ùüô _ := by rw [‚Üê comp_hom‚ÇÉ, e.hom_inv_id, id_hom‚ÇÉ]\n\n"}
{"name":"CategoryTheory.Iso.hom_inv_id_triangle_hom‚ÇÉ_assoc","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA B : CategoryTheory.Pretriangulated.Triangle C\ne : CategoryTheory.Iso A B\nZ : C\nh : Quiver.Hom A.obj‚ÇÉ Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp e.hom.hom‚ÇÉ (CategoryTheory.CategoryStruct.comp e.inv.hom‚ÇÉ h)) h","decl":"@[reassoc (attr := simp)]\nlemma _root_.CategoryTheory.Iso.hom_inv_id_triangle_hom‚ÇÉ {A B : Triangle C} (e : A ‚âÖ B) :\n    e.hom.hom‚ÇÉ ‚â´ e.inv.hom‚ÇÉ = ùüô _ := by rw [‚Üê comp_hom‚ÇÉ, e.hom_inv_id, id_hom‚ÇÉ]\n\n"}
{"name":"CategoryTheory.Iso.inv_hom_id_triangle_hom‚ÇÅ_assoc","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA B : CategoryTheory.Pretriangulated.Triangle C\ne : CategoryTheory.Iso A B\nZ : C\nh : Quiver.Hom B.obj‚ÇÅ Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp e.inv.hom‚ÇÅ (CategoryTheory.CategoryStruct.comp e.hom.hom‚ÇÅ h)) h","decl":"@[reassoc (attr := simp)]\nlemma _root_.CategoryTheory.Iso.inv_hom_id_triangle_hom‚ÇÅ {A B : Triangle C} (e : A ‚âÖ B) :\n    e.inv.hom‚ÇÅ ‚â´ e.hom.hom‚ÇÅ = ùüô _ := by rw [‚Üê comp_hom‚ÇÅ, e.inv_hom_id, id_hom‚ÇÅ]\n"}
{"name":"CategoryTheory.Iso.inv_hom_id_triangle_hom‚ÇÅ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA B : CategoryTheory.Pretriangulated.Triangle C\ne : CategoryTheory.Iso A B\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp e.inv.hom‚ÇÅ e.hom.hom‚ÇÅ) (CategoryTheory.CategoryStruct.id B.obj‚ÇÅ)","decl":"@[reassoc (attr := simp)]\nlemma _root_.CategoryTheory.Iso.inv_hom_id_triangle_hom‚ÇÅ {A B : Triangle C} (e : A ‚âÖ B) :\n    e.inv.hom‚ÇÅ ‚â´ e.hom.hom‚ÇÅ = ùüô _ := by rw [‚Üê comp_hom‚ÇÅ, e.inv_hom_id, id_hom‚ÇÅ]\n"}
{"name":"CategoryTheory.Iso.inv_hom_id_triangle_hom‚ÇÇ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA B : CategoryTheory.Pretriangulated.Triangle C\ne : CategoryTheory.Iso A B\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp e.inv.hom‚ÇÇ e.hom.hom‚ÇÇ) (CategoryTheory.CategoryStruct.id B.obj‚ÇÇ)","decl":"@[reassoc (attr := simp)]\nlemma _root_.CategoryTheory.Iso.inv_hom_id_triangle_hom‚ÇÇ {A B : Triangle C} (e : A ‚âÖ B) :\n    e.inv.hom‚ÇÇ ‚â´ e.hom.hom‚ÇÇ = ùüô _ := by rw [‚Üê comp_hom‚ÇÇ, e.inv_hom_id, id_hom‚ÇÇ]\n"}
{"name":"CategoryTheory.Iso.inv_hom_id_triangle_hom‚ÇÇ_assoc","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA B : CategoryTheory.Pretriangulated.Triangle C\ne : CategoryTheory.Iso A B\nZ : C\nh : Quiver.Hom B.obj‚ÇÇ Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp e.inv.hom‚ÇÇ (CategoryTheory.CategoryStruct.comp e.hom.hom‚ÇÇ h)) h","decl":"@[reassoc (attr := simp)]\nlemma _root_.CategoryTheory.Iso.inv_hom_id_triangle_hom‚ÇÇ {A B : Triangle C} (e : A ‚âÖ B) :\n    e.inv.hom‚ÇÇ ‚â´ e.hom.hom‚ÇÇ = ùüô _ := by rw [‚Üê comp_hom‚ÇÇ, e.inv_hom_id, id_hom‚ÇÇ]\n"}
{"name":"CategoryTheory.Iso.inv_hom_id_triangle_hom‚ÇÉ_assoc","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA B : CategoryTheory.Pretriangulated.Triangle C\ne : CategoryTheory.Iso A B\nZ : C\nh : Quiver.Hom B.obj‚ÇÉ Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp e.inv.hom‚ÇÉ (CategoryTheory.CategoryStruct.comp e.hom.hom‚ÇÉ h)) h","decl":"@[reassoc (attr := simp)]\nlemma _root_.CategoryTheory.Iso.inv_hom_id_triangle_hom‚ÇÉ {A B : Triangle C} (e : A ‚âÖ B) :\n    e.inv.hom‚ÇÉ ‚â´ e.hom.hom‚ÇÉ = ùüô _ := by rw [‚Üê comp_hom‚ÇÉ, e.inv_hom_id, id_hom‚ÇÉ]\n\n"}
{"name":"CategoryTheory.Iso.inv_hom_id_triangle_hom‚ÇÉ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA B : CategoryTheory.Pretriangulated.Triangle C\ne : CategoryTheory.Iso A B\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp e.inv.hom‚ÇÉ e.hom.hom‚ÇÉ) (CategoryTheory.CategoryStruct.id B.obj‚ÇÉ)","decl":"@[reassoc (attr := simp)]\nlemma _root_.CategoryTheory.Iso.inv_hom_id_triangle_hom‚ÇÉ {A B : Triangle C} (e : A ‚âÖ B) :\n    e.inv.hom‚ÇÉ ‚â´ e.hom.hom‚ÇÉ = ùüô _ := by rw [‚Üê comp_hom‚ÇÉ, e.inv_hom_id, id_hom‚ÇÉ]\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.eqToHom_hom‚ÇÅ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA B : CategoryTheory.Pretriangulated.Triangle C\nh : Eq A B\n‚ä¢ Eq (CategoryTheory.eqToHom h).hom‚ÇÅ (CategoryTheory.eqToHom ‚ãØ)","decl":"lemma Triangle.eqToHom_hom‚ÇÅ {A B : Triangle C} (h : A = B) :\n    (eqToHom h).hom‚ÇÅ = eqToHom (by subst h; rfl) := by subst h; rfl\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.eqToHom_hom‚ÇÇ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA B : CategoryTheory.Pretriangulated.Triangle C\nh : Eq A B\n‚ä¢ Eq (CategoryTheory.eqToHom h).hom‚ÇÇ (CategoryTheory.eqToHom ‚ãØ)","decl":"lemma Triangle.eqToHom_hom‚ÇÇ {A B : Triangle C} (h : A = B) :\n    (eqToHom h).hom‚ÇÇ = eqToHom (by subst h; rfl) := by subst h; rfl\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.eqToHom_hom‚ÇÉ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nA B : CategoryTheory.Pretriangulated.Triangle C\nh : Eq A B\n‚ä¢ Eq (CategoryTheory.eqToHom h).hom‚ÇÉ (CategoryTheory.eqToHom ‚ãØ)","decl":"lemma Triangle.eqToHom_hom‚ÇÉ {A B : Triangle C} (h : A = B) :\n    (eqToHom h).hom‚ÇÉ = eqToHom (by subst h; rfl) := by subst h; rfl\n\n"}
{"name":"CategoryTheory.Pretriangulated.binaryBiproductTriangle_obj‚ÇÇ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\nX‚ÇÅ X‚ÇÇ : C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\ninst‚úù : CategoryTheory.Limits.HasBinaryBiproduct X‚ÇÅ X‚ÇÇ\n‚ä¢ Eq (CategoryTheory.Pretriangulated.binaryBiproductTriangle X‚ÇÅ X‚ÇÇ).obj‚ÇÇ (CategoryTheory.Limits.biprod X‚ÇÅ X‚ÇÇ)","decl":"/-- The obvious triangle `X‚ÇÅ ‚ü∂ X‚ÇÅ ‚äû X‚ÇÇ ‚ü∂ X‚ÇÇ ‚ü∂ X‚ÇÅ‚ü¶1‚üß`. -/\n@[simps!]\ndef binaryBiproductTriangle (X‚ÇÅ X‚ÇÇ : C) [HasZeroMorphisms C] [HasBinaryBiproduct X‚ÇÅ X‚ÇÇ] :\n    Triangle C :=\n  Triangle.mk biprod.inl (Limits.biprod.snd : X‚ÇÅ ‚äû X‚ÇÇ ‚ü∂ _) 0\n\n"}
{"name":"CategoryTheory.Pretriangulated.binaryBiproductTriangle_obj‚ÇÉ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\nX‚ÇÅ X‚ÇÇ : C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\ninst‚úù : CategoryTheory.Limits.HasBinaryBiproduct X‚ÇÅ X‚ÇÇ\n‚ä¢ Eq (CategoryTheory.Pretriangulated.binaryBiproductTriangle X‚ÇÅ X‚ÇÇ).obj‚ÇÉ X‚ÇÇ","decl":"/-- The obvious triangle `X‚ÇÅ ‚ü∂ X‚ÇÅ ‚äû X‚ÇÇ ‚ü∂ X‚ÇÇ ‚ü∂ X‚ÇÅ‚ü¶1‚üß`. -/\n@[simps!]\ndef binaryBiproductTriangle (X‚ÇÅ X‚ÇÇ : C) [HasZeroMorphisms C] [HasBinaryBiproduct X‚ÇÅ X‚ÇÇ] :\n    Triangle C :=\n  Triangle.mk biprod.inl (Limits.biprod.snd : X‚ÇÅ ‚äû X‚ÇÇ ‚ü∂ _) 0\n\n"}
{"name":"CategoryTheory.Pretriangulated.binaryBiproductTriangle_mor‚ÇÇ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\nX‚ÇÅ X‚ÇÇ : C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\ninst‚úù : CategoryTheory.Limits.HasBinaryBiproduct X‚ÇÅ X‚ÇÇ\n‚ä¢ Eq (CategoryTheory.Pretriangulated.binaryBiproductTriangle X‚ÇÅ X‚ÇÇ).mor‚ÇÇ CategoryTheory.Limits.biprod.snd","decl":"/-- The obvious triangle `X‚ÇÅ ‚ü∂ X‚ÇÅ ‚äû X‚ÇÇ ‚ü∂ X‚ÇÇ ‚ü∂ X‚ÇÅ‚ü¶1‚üß`. -/\n@[simps!]\ndef binaryBiproductTriangle (X‚ÇÅ X‚ÇÇ : C) [HasZeroMorphisms C] [HasBinaryBiproduct X‚ÇÅ X‚ÇÇ] :\n    Triangle C :=\n  Triangle.mk biprod.inl (Limits.biprod.snd : X‚ÇÅ ‚äû X‚ÇÇ ‚ü∂ _) 0\n\n"}
{"name":"CategoryTheory.Pretriangulated.binaryBiproductTriangle_mor‚ÇÅ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\nX‚ÇÅ X‚ÇÇ : C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\ninst‚úù : CategoryTheory.Limits.HasBinaryBiproduct X‚ÇÅ X‚ÇÇ\n‚ä¢ Eq (CategoryTheory.Pretriangulated.binaryBiproductTriangle X‚ÇÅ X‚ÇÇ).mor‚ÇÅ CategoryTheory.Limits.biprod.inl","decl":"/-- The obvious triangle `X‚ÇÅ ‚ü∂ X‚ÇÅ ‚äû X‚ÇÇ ‚ü∂ X‚ÇÇ ‚ü∂ X‚ÇÅ‚ü¶1‚üß`. -/\n@[simps!]\ndef binaryBiproductTriangle (X‚ÇÅ X‚ÇÇ : C) [HasZeroMorphisms C] [HasBinaryBiproduct X‚ÇÅ X‚ÇÇ] :\n    Triangle C :=\n  Triangle.mk biprod.inl (Limits.biprod.snd : X‚ÇÅ ‚äû X‚ÇÇ ‚ü∂ _) 0\n\n"}
{"name":"CategoryTheory.Pretriangulated.binaryBiproductTriangle_obj‚ÇÅ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\nX‚ÇÅ X‚ÇÇ : C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\ninst‚úù : CategoryTheory.Limits.HasBinaryBiproduct X‚ÇÅ X‚ÇÇ\n‚ä¢ Eq (CategoryTheory.Pretriangulated.binaryBiproductTriangle X‚ÇÅ X‚ÇÇ).obj‚ÇÅ X‚ÇÅ","decl":"/-- The obvious triangle `X‚ÇÅ ‚ü∂ X‚ÇÅ ‚äû X‚ÇÇ ‚ü∂ X‚ÇÇ ‚ü∂ X‚ÇÅ‚ü¶1‚üß`. -/\n@[simps!]\ndef binaryBiproductTriangle (X‚ÇÅ X‚ÇÇ : C) [HasZeroMorphisms C] [HasBinaryBiproduct X‚ÇÅ X‚ÇÇ] :\n    Triangle C :=\n  Triangle.mk biprod.inl (Limits.biprod.snd : X‚ÇÅ ‚äû X‚ÇÇ ‚ü∂ _) 0\n\n"}
{"name":"CategoryTheory.Pretriangulated.binaryBiproductTriangle_mor‚ÇÉ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\nX‚ÇÅ X‚ÇÇ : C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\ninst‚úù : CategoryTheory.Limits.HasBinaryBiproduct X‚ÇÅ X‚ÇÇ\n‚ä¢ Eq (CategoryTheory.Pretriangulated.binaryBiproductTriangle X‚ÇÅ X‚ÇÇ).mor‚ÇÉ 0","decl":"/-- The obvious triangle `X‚ÇÅ ‚ü∂ X‚ÇÅ ‚äû X‚ÇÇ ‚ü∂ X‚ÇÇ ‚ü∂ X‚ÇÅ‚ü¶1‚üß`. -/\n@[simps!]\ndef binaryBiproductTriangle (X‚ÇÅ X‚ÇÇ : C) [HasZeroMorphisms C] [HasBinaryBiproduct X‚ÇÅ X‚ÇÇ] :\n    Triangle C :=\n  Triangle.mk biprod.inl (Limits.biprod.snd : X‚ÇÅ ‚äû X‚ÇÇ ‚ü∂ _) 0\n\n"}
{"name":"CategoryTheory.Pretriangulated.binaryProductTriangle_mor‚ÇÅ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\nX‚ÇÅ X‚ÇÇ : C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\ninst‚úù : CategoryTheory.Limits.HasBinaryProduct X‚ÇÅ X‚ÇÇ\n‚ä¢ Eq (CategoryTheory.Pretriangulated.binaryProductTriangle X‚ÇÅ X‚ÇÇ).mor‚ÇÅ (CategoryTheory.Limits.prod.lift (CategoryTheory.CategoryStruct.id X‚ÇÅ) 0)","decl":"/-- The obvious triangle `X‚ÇÅ ‚ü∂ X‚ÇÅ ‚®Ø X‚ÇÇ ‚ü∂ X‚ÇÇ ‚ü∂ X‚ÇÅ‚ü¶1‚üß`. -/\n@[simps!]\ndef binaryProductTriangle (X‚ÇÅ X‚ÇÇ : C) [HasZeroMorphisms C] [HasBinaryProduct X‚ÇÅ X‚ÇÇ] :\n    Triangle C :=\n  Triangle.mk ((Limits.prod.lift (ùüô X‚ÇÅ) 0)) (Limits.prod.snd : X‚ÇÅ ‚®Ø X‚ÇÇ ‚ü∂ _) 0\n\n"}
{"name":"CategoryTheory.Pretriangulated.binaryProductTriangle_mor‚ÇÉ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\nX‚ÇÅ X‚ÇÇ : C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\ninst‚úù : CategoryTheory.Limits.HasBinaryProduct X‚ÇÅ X‚ÇÇ\n‚ä¢ Eq (CategoryTheory.Pretriangulated.binaryProductTriangle X‚ÇÅ X‚ÇÇ).mor‚ÇÉ 0","decl":"/-- The obvious triangle `X‚ÇÅ ‚ü∂ X‚ÇÅ ‚®Ø X‚ÇÇ ‚ü∂ X‚ÇÇ ‚ü∂ X‚ÇÅ‚ü¶1‚üß`. -/\n@[simps!]\ndef binaryProductTriangle (X‚ÇÅ X‚ÇÇ : C) [HasZeroMorphisms C] [HasBinaryProduct X‚ÇÅ X‚ÇÇ] :\n    Triangle C :=\n  Triangle.mk ((Limits.prod.lift (ùüô X‚ÇÅ) 0)) (Limits.prod.snd : X‚ÇÅ ‚®Ø X‚ÇÇ ‚ü∂ _) 0\n\n"}
{"name":"CategoryTheory.Pretriangulated.binaryProductTriangle_obj‚ÇÉ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\nX‚ÇÅ X‚ÇÇ : C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\ninst‚úù : CategoryTheory.Limits.HasBinaryProduct X‚ÇÅ X‚ÇÇ\n‚ä¢ Eq (CategoryTheory.Pretriangulated.binaryProductTriangle X‚ÇÅ X‚ÇÇ).obj‚ÇÉ X‚ÇÇ","decl":"/-- The obvious triangle `X‚ÇÅ ‚ü∂ X‚ÇÅ ‚®Ø X‚ÇÇ ‚ü∂ X‚ÇÇ ‚ü∂ X‚ÇÅ‚ü¶1‚üß`. -/\n@[simps!]\ndef binaryProductTriangle (X‚ÇÅ X‚ÇÇ : C) [HasZeroMorphisms C] [HasBinaryProduct X‚ÇÅ X‚ÇÇ] :\n    Triangle C :=\n  Triangle.mk ((Limits.prod.lift (ùüô X‚ÇÅ) 0)) (Limits.prod.snd : X‚ÇÅ ‚®Ø X‚ÇÇ ‚ü∂ _) 0\n\n"}
{"name":"CategoryTheory.Pretriangulated.binaryProductTriangle_obj‚ÇÅ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\nX‚ÇÅ X‚ÇÇ : C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\ninst‚úù : CategoryTheory.Limits.HasBinaryProduct X‚ÇÅ X‚ÇÇ\n‚ä¢ Eq (CategoryTheory.Pretriangulated.binaryProductTriangle X‚ÇÅ X‚ÇÇ).obj‚ÇÅ X‚ÇÅ","decl":"/-- The obvious triangle `X‚ÇÅ ‚ü∂ X‚ÇÅ ‚®Ø X‚ÇÇ ‚ü∂ X‚ÇÇ ‚ü∂ X‚ÇÅ‚ü¶1‚üß`. -/\n@[simps!]\ndef binaryProductTriangle (X‚ÇÅ X‚ÇÇ : C) [HasZeroMorphisms C] [HasBinaryProduct X‚ÇÅ X‚ÇÇ] :\n    Triangle C :=\n  Triangle.mk ((Limits.prod.lift (ùüô X‚ÇÅ) 0)) (Limits.prod.snd : X‚ÇÅ ‚®Ø X‚ÇÇ ‚ü∂ _) 0\n\n"}
{"name":"CategoryTheory.Pretriangulated.binaryProductTriangle_obj‚ÇÇ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\nX‚ÇÅ X‚ÇÇ : C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\ninst‚úù : CategoryTheory.Limits.HasBinaryProduct X‚ÇÅ X‚ÇÇ\n‚ä¢ Eq (CategoryTheory.Pretriangulated.binaryProductTriangle X‚ÇÅ X‚ÇÇ).obj‚ÇÇ (CategoryTheory.Limits.prod X‚ÇÅ X‚ÇÇ)","decl":"/-- The obvious triangle `X‚ÇÅ ‚ü∂ X‚ÇÅ ‚®Ø X‚ÇÇ ‚ü∂ X‚ÇÇ ‚ü∂ X‚ÇÅ‚ü¶1‚üß`. -/\n@[simps!]\ndef binaryProductTriangle (X‚ÇÅ X‚ÇÇ : C) [HasZeroMorphisms C] [HasBinaryProduct X‚ÇÅ X‚ÇÇ] :\n    Triangle C :=\n  Triangle.mk ((Limits.prod.lift (ùüô X‚ÇÅ) 0)) (Limits.prod.snd : X‚ÇÅ ‚®Ø X‚ÇÇ ‚ü∂ _) 0\n\n"}
{"name":"CategoryTheory.Pretriangulated.binaryProductTriangle_mor‚ÇÇ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\nX‚ÇÅ X‚ÇÇ : C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\ninst‚úù : CategoryTheory.Limits.HasBinaryProduct X‚ÇÅ X‚ÇÇ\n‚ä¢ Eq (CategoryTheory.Pretriangulated.binaryProductTriangle X‚ÇÅ X‚ÇÇ).mor‚ÇÇ CategoryTheory.Limits.prod.snd","decl":"/-- The obvious triangle `X‚ÇÅ ‚ü∂ X‚ÇÅ ‚®Ø X‚ÇÇ ‚ü∂ X‚ÇÇ ‚ü∂ X‚ÇÅ‚ü¶1‚üß`. -/\n@[simps!]\ndef binaryProductTriangle (X‚ÇÅ X‚ÇÇ : C) [HasZeroMorphisms C] [HasBinaryProduct X‚ÇÅ X‚ÇÇ] :\n    Triangle C :=\n  Triangle.mk ((Limits.prod.lift (ùüô X‚ÇÅ) 0)) (Limits.prod.snd : X‚ÇÅ ‚®Ø X‚ÇÇ ‚ü∂ _) 0\n\n"}
{"name":"CategoryTheory.Pretriangulated.binaryProductTriangleIsoBinaryBiproductTriangle_inv_hom‚ÇÇ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\nX‚ÇÅ X‚ÇÇ : C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\ninst‚úù : CategoryTheory.Limits.HasBinaryBiproduct X‚ÇÅ X‚ÇÇ\n‚ä¢ Eq (CategoryTheory.Pretriangulated.binaryProductTriangleIsoBinaryBiproductTriangle X‚ÇÅ X‚ÇÇ).inv.hom‚ÇÇ (CategoryTheory.Limits.prod.lift CategoryTheory.Limits.biprod.fst CategoryTheory.Limits.biprod.snd)","decl":"/-- The canonical isomorphism of triangles\n`binaryProductTriangle X‚ÇÅ X‚ÇÇ ‚âÖ binaryBiproductTriangle X‚ÇÅ X‚ÇÇ`. -/\n@[simps!]\ndef binaryProductTriangleIsoBinaryBiproductTriangle\n    (X‚ÇÅ X‚ÇÇ : C) [HasZeroMorphisms C] [HasBinaryBiproduct X‚ÇÅ X‚ÇÇ] :\n    binaryProductTriangle X‚ÇÅ X‚ÇÇ ‚âÖ binaryBiproductTriangle X‚ÇÅ X‚ÇÇ :=\n  Triangle.isoMk _ _ (Iso.refl _) (biprod.isoProd X‚ÇÅ X‚ÇÇ).symm (Iso.refl _)\n    (by aesop_cat) (by simp) (by simp)\n\n"}
{"name":"CategoryTheory.Pretriangulated.binaryProductTriangleIsoBinaryBiproductTriangle_hom_hom‚ÇÉ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\nX‚ÇÅ X‚ÇÇ : C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\ninst‚úù : CategoryTheory.Limits.HasBinaryBiproduct X‚ÇÅ X‚ÇÇ\n‚ä¢ Eq (CategoryTheory.Pretriangulated.binaryProductTriangleIsoBinaryBiproductTriangle X‚ÇÅ X‚ÇÇ).hom.hom‚ÇÉ (CategoryTheory.CategoryStruct.id X‚ÇÇ)","decl":"/-- The canonical isomorphism of triangles\n`binaryProductTriangle X‚ÇÅ X‚ÇÇ ‚âÖ binaryBiproductTriangle X‚ÇÅ X‚ÇÇ`. -/\n@[simps!]\ndef binaryProductTriangleIsoBinaryBiproductTriangle\n    (X‚ÇÅ X‚ÇÇ : C) [HasZeroMorphisms C] [HasBinaryBiproduct X‚ÇÅ X‚ÇÇ] :\n    binaryProductTriangle X‚ÇÅ X‚ÇÇ ‚âÖ binaryBiproductTriangle X‚ÇÅ X‚ÇÇ :=\n  Triangle.isoMk _ _ (Iso.refl _) (biprod.isoProd X‚ÇÅ X‚ÇÇ).symm (Iso.refl _)\n    (by aesop_cat) (by simp) (by simp)\n\n"}
{"name":"CategoryTheory.Pretriangulated.binaryProductTriangleIsoBinaryBiproductTriangle_hom_hom‚ÇÇ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\nX‚ÇÅ X‚ÇÇ : C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\ninst‚úù : CategoryTheory.Limits.HasBinaryBiproduct X‚ÇÅ X‚ÇÇ\n‚ä¢ Eq (CategoryTheory.Pretriangulated.binaryProductTriangleIsoBinaryBiproductTriangle X‚ÇÅ X‚ÇÇ).hom.hom‚ÇÇ (CategoryTheory.Limits.biprod.lift CategoryTheory.Limits.prod.fst CategoryTheory.Limits.prod.snd)","decl":"/-- The canonical isomorphism of triangles\n`binaryProductTriangle X‚ÇÅ X‚ÇÇ ‚âÖ binaryBiproductTriangle X‚ÇÅ X‚ÇÇ`. -/\n@[simps!]\ndef binaryProductTriangleIsoBinaryBiproductTriangle\n    (X‚ÇÅ X‚ÇÇ : C) [HasZeroMorphisms C] [HasBinaryBiproduct X‚ÇÅ X‚ÇÇ] :\n    binaryProductTriangle X‚ÇÅ X‚ÇÇ ‚âÖ binaryBiproductTriangle X‚ÇÅ X‚ÇÇ :=\n  Triangle.isoMk _ _ (Iso.refl _) (biprod.isoProd X‚ÇÅ X‚ÇÇ).symm (Iso.refl _)\n    (by aesop_cat) (by simp) (by simp)\n\n"}
{"name":"CategoryTheory.Pretriangulated.binaryProductTriangleIsoBinaryBiproductTriangle_hom_hom‚ÇÅ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\nX‚ÇÅ X‚ÇÇ : C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\ninst‚úù : CategoryTheory.Limits.HasBinaryBiproduct X‚ÇÅ X‚ÇÇ\n‚ä¢ Eq (CategoryTheory.Pretriangulated.binaryProductTriangleIsoBinaryBiproductTriangle X‚ÇÅ X‚ÇÇ).hom.hom‚ÇÅ (CategoryTheory.CategoryStruct.id X‚ÇÅ)","decl":"/-- The canonical isomorphism of triangles\n`binaryProductTriangle X‚ÇÅ X‚ÇÇ ‚âÖ binaryBiproductTriangle X‚ÇÅ X‚ÇÇ`. -/\n@[simps!]\ndef binaryProductTriangleIsoBinaryBiproductTriangle\n    (X‚ÇÅ X‚ÇÇ : C) [HasZeroMorphisms C] [HasBinaryBiproduct X‚ÇÅ X‚ÇÇ] :\n    binaryProductTriangle X‚ÇÅ X‚ÇÇ ‚âÖ binaryBiproductTriangle X‚ÇÅ X‚ÇÇ :=\n  Triangle.isoMk _ _ (Iso.refl _) (biprod.isoProd X‚ÇÅ X‚ÇÇ).symm (Iso.refl _)\n    (by aesop_cat) (by simp) (by simp)\n\n"}
{"name":"CategoryTheory.Pretriangulated.binaryProductTriangleIsoBinaryBiproductTriangle_inv_hom‚ÇÅ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\nX‚ÇÅ X‚ÇÇ : C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\ninst‚úù : CategoryTheory.Limits.HasBinaryBiproduct X‚ÇÅ X‚ÇÇ\n‚ä¢ Eq (CategoryTheory.Pretriangulated.binaryProductTriangleIsoBinaryBiproductTriangle X‚ÇÅ X‚ÇÇ).inv.hom‚ÇÅ (CategoryTheory.CategoryStruct.id X‚ÇÅ)","decl":"/-- The canonical isomorphism of triangles\n`binaryProductTriangle X‚ÇÅ X‚ÇÇ ‚âÖ binaryBiproductTriangle X‚ÇÅ X‚ÇÇ`. -/\n@[simps!]\ndef binaryProductTriangleIsoBinaryBiproductTriangle\n    (X‚ÇÅ X‚ÇÇ : C) [HasZeroMorphisms C] [HasBinaryBiproduct X‚ÇÅ X‚ÇÇ] :\n    binaryProductTriangle X‚ÇÅ X‚ÇÇ ‚âÖ binaryBiproductTriangle X‚ÇÅ X‚ÇÇ :=\n  Triangle.isoMk _ _ (Iso.refl _) (biprod.isoProd X‚ÇÅ X‚ÇÇ).symm (Iso.refl _)\n    (by aesop_cat) (by simp) (by simp)\n\n"}
{"name":"CategoryTheory.Pretriangulated.binaryProductTriangleIsoBinaryBiproductTriangle_inv_hom‚ÇÉ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\nX‚ÇÅ X‚ÇÇ : C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\ninst‚úù : CategoryTheory.Limits.HasBinaryBiproduct X‚ÇÅ X‚ÇÇ\n‚ä¢ Eq (CategoryTheory.Pretriangulated.binaryProductTriangleIsoBinaryBiproductTriangle X‚ÇÅ X‚ÇÇ).inv.hom‚ÇÉ (CategoryTheory.CategoryStruct.id X‚ÇÇ)","decl":"/-- The canonical isomorphism of triangles\n`binaryProductTriangle X‚ÇÅ X‚ÇÇ ‚âÖ binaryBiproductTriangle X‚ÇÅ X‚ÇÇ`. -/\n@[simps!]\ndef binaryProductTriangleIsoBinaryBiproductTriangle\n    (X‚ÇÅ X‚ÇÇ : C) [HasZeroMorphisms C] [HasBinaryBiproduct X‚ÇÅ X‚ÇÇ] :\n    binaryProductTriangle X‚ÇÅ X‚ÇÇ ‚âÖ binaryBiproductTriangle X‚ÇÅ X‚ÇÇ :=\n  Triangle.isoMk _ _ (Iso.refl _) (biprod.isoProd X‚ÇÅ X‚ÇÇ).symm (Iso.refl _)\n    (by aesop_cat) (by simp) (by simp)\n\n"}
{"name":"CategoryTheory.Pretriangulated.productTriangle_mor‚ÇÇ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù‚Åµ : CategoryTheory.Category.{v, u} C\ninst‚úù‚Å¥ : CategoryTheory.HasShift C Int\nJ : Type u_1\nT : J ‚Üí CategoryTheory.Pretriangulated.Triangle C\ninst‚úù¬≥ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÅ\ninst‚úù¬≤ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÇ\ninst‚úù¬π : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÉ\ninst‚úù : CategoryTheory.Limits.HasProduct fun j => (CategoryTheory.shiftFunctor C 1).obj (T j).obj‚ÇÅ\n‚ä¢ Eq (CategoryTheory.Pretriangulated.productTriangle T).mor‚ÇÇ (CategoryTheory.Limits.Pi.map fun j => (T j).mor‚ÇÇ)","decl":"/-- The product of a family of triangles. -/\n@[simps!]\ndef productTriangle : Triangle C :=\n  Triangle.mk (Limits.Pi.map (fun j => (T j).mor‚ÇÅ))\n    (Limits.Pi.map (fun j => (T j).mor‚ÇÇ))\n    (Limits.Pi.map (fun j => (T j).mor‚ÇÉ) ‚â´ inv (piComparison _ _))\n\n"}
{"name":"CategoryTheory.Pretriangulated.productTriangle_obj‚ÇÇ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù‚Åµ : CategoryTheory.Category.{v, u} C\ninst‚úù‚Å¥ : CategoryTheory.HasShift C Int\nJ : Type u_1\nT : J ‚Üí CategoryTheory.Pretriangulated.Triangle C\ninst‚úù¬≥ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÅ\ninst‚úù¬≤ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÇ\ninst‚úù¬π : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÉ\ninst‚úù : CategoryTheory.Limits.HasProduct fun j => (CategoryTheory.shiftFunctor C 1).obj (T j).obj‚ÇÅ\n‚ä¢ Eq (CategoryTheory.Pretriangulated.productTriangle T).obj‚ÇÇ (CategoryTheory.Limits.piObj fun j => (T j).obj‚ÇÇ)","decl":"/-- The product of a family of triangles. -/\n@[simps!]\ndef productTriangle : Triangle C :=\n  Triangle.mk (Limits.Pi.map (fun j => (T j).mor‚ÇÅ))\n    (Limits.Pi.map (fun j => (T j).mor‚ÇÇ))\n    (Limits.Pi.map (fun j => (T j).mor‚ÇÉ) ‚â´ inv (piComparison _ _))\n\n"}
{"name":"CategoryTheory.Pretriangulated.productTriangle_mor‚ÇÅ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù‚Åµ : CategoryTheory.Category.{v, u} C\ninst‚úù‚Å¥ : CategoryTheory.HasShift C Int\nJ : Type u_1\nT : J ‚Üí CategoryTheory.Pretriangulated.Triangle C\ninst‚úù¬≥ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÅ\ninst‚úù¬≤ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÇ\ninst‚úù¬π : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÉ\ninst‚úù : CategoryTheory.Limits.HasProduct fun j => (CategoryTheory.shiftFunctor C 1).obj (T j).obj‚ÇÅ\n‚ä¢ Eq (CategoryTheory.Pretriangulated.productTriangle T).mor‚ÇÅ (CategoryTheory.Limits.Pi.map fun j => (T j).mor‚ÇÅ)","decl":"/-- The product of a family of triangles. -/\n@[simps!]\ndef productTriangle : Triangle C :=\n  Triangle.mk (Limits.Pi.map (fun j => (T j).mor‚ÇÅ))\n    (Limits.Pi.map (fun j => (T j).mor‚ÇÇ))\n    (Limits.Pi.map (fun j => (T j).mor‚ÇÉ) ‚â´ inv (piComparison _ _))\n\n"}
{"name":"CategoryTheory.Pretriangulated.productTriangle_obj‚ÇÅ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù‚Åµ : CategoryTheory.Category.{v, u} C\ninst‚úù‚Å¥ : CategoryTheory.HasShift C Int\nJ : Type u_1\nT : J ‚Üí CategoryTheory.Pretriangulated.Triangle C\ninst‚úù¬≥ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÅ\ninst‚úù¬≤ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÇ\ninst‚úù¬π : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÉ\ninst‚úù : CategoryTheory.Limits.HasProduct fun j => (CategoryTheory.shiftFunctor C 1).obj (T j).obj‚ÇÅ\n‚ä¢ Eq (CategoryTheory.Pretriangulated.productTriangle T).obj‚ÇÅ (CategoryTheory.Limits.piObj fun j => (T j).obj‚ÇÅ)","decl":"/-- The product of a family of triangles. -/\n@[simps!]\ndef productTriangle : Triangle C :=\n  Triangle.mk (Limits.Pi.map (fun j => (T j).mor‚ÇÅ))\n    (Limits.Pi.map (fun j => (T j).mor‚ÇÇ))\n    (Limits.Pi.map (fun j => (T j).mor‚ÇÉ) ‚â´ inv (piComparison _ _))\n\n"}
{"name":"CategoryTheory.Pretriangulated.productTriangle_mor‚ÇÉ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù‚Åµ : CategoryTheory.Category.{v, u} C\ninst‚úù‚Å¥ : CategoryTheory.HasShift C Int\nJ : Type u_1\nT : J ‚Üí CategoryTheory.Pretriangulated.Triangle C\ninst‚úù¬≥ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÅ\ninst‚úù¬≤ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÇ\ninst‚úù¬π : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÉ\ninst‚úù : CategoryTheory.Limits.HasProduct fun j => (CategoryTheory.shiftFunctor C 1).obj (T j).obj‚ÇÅ\n‚ä¢ Eq (CategoryTheory.Pretriangulated.productTriangle T).mor‚ÇÉ (CategoryTheory.CategoryStruct.comp (CategoryTheory.Limits.Pi.map fun j => (T j).mor‚ÇÉ) (CategoryTheory.inv (CategoryTheory.Limits.piComparison (CategoryTheory.shiftFunctor C 1) fun j => (T j).obj‚ÇÅ)))","decl":"/-- The product of a family of triangles. -/\n@[simps!]\ndef productTriangle : Triangle C :=\n  Triangle.mk (Limits.Pi.map (fun j => (T j).mor‚ÇÅ))\n    (Limits.Pi.map (fun j => (T j).mor‚ÇÇ))\n    (Limits.Pi.map (fun j => (T j).mor‚ÇÉ) ‚â´ inv (piComparison _ _))\n\n"}
{"name":"CategoryTheory.Pretriangulated.productTriangle_obj‚ÇÉ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù‚Åµ : CategoryTheory.Category.{v, u} C\ninst‚úù‚Å¥ : CategoryTheory.HasShift C Int\nJ : Type u_1\nT : J ‚Üí CategoryTheory.Pretriangulated.Triangle C\ninst‚úù¬≥ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÅ\ninst‚úù¬≤ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÇ\ninst‚úù¬π : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÉ\ninst‚úù : CategoryTheory.Limits.HasProduct fun j => (CategoryTheory.shiftFunctor C 1).obj (T j).obj‚ÇÅ\n‚ä¢ Eq (CategoryTheory.Pretriangulated.productTriangle T).obj‚ÇÉ (CategoryTheory.Limits.piObj fun j => (T j).obj‚ÇÉ)","decl":"/-- The product of a family of triangles. -/\n@[simps!]\ndef productTriangle : Triangle C :=\n  Triangle.mk (Limits.Pi.map (fun j => (T j).mor‚ÇÅ))\n    (Limits.Pi.map (fun j => (T j).mor‚ÇÇ))\n    (Limits.Pi.map (fun j => (T j).mor‚ÇÉ) ‚â´ inv (piComparison _ _))\n\n"}
{"name":"CategoryTheory.Pretriangulated.productTriangle.œÄ_hom‚ÇÉ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù‚Åµ : CategoryTheory.Category.{v, u} C\ninst‚úù‚Å¥ : CategoryTheory.HasShift C Int\nJ : Type u_1\nT : J ‚Üí CategoryTheory.Pretriangulated.Triangle C\ninst‚úù¬≥ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÅ\ninst‚úù¬≤ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÇ\ninst‚úù¬π : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÉ\ninst‚úù : CategoryTheory.Limits.HasProduct fun j => (CategoryTheory.shiftFunctor C 1).obj (T j).obj‚ÇÅ\nj : J\n‚ä¢ Eq (CategoryTheory.Pretriangulated.productTriangle.œÄ T j).hom‚ÇÉ (CategoryTheory.Limits.Pi.œÄ (fun j => (T j).obj‚ÇÉ) j)","decl":"/-- A projection from the product of a family of triangles. -/\n@[simps]\ndef productTriangle.œÄ (j : J) :\n    productTriangle T ‚ü∂ T j where\n  hom‚ÇÅ := Pi.œÄ _ j\n  hom‚ÇÇ := Pi.œÄ _ j\n  hom‚ÇÉ := Pi.œÄ _ j\n  comm‚ÇÉ := by\n    dsimp\n    rw [‚Üê piComparison_comp_œÄ, assoc, IsIso.inv_hom_id_assoc]\n    simp only [limMap_œÄ, Discrete.natTrans_app]\n\n"}
{"name":"CategoryTheory.Pretriangulated.productTriangle.œÄ_hom‚ÇÇ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù‚Åµ : CategoryTheory.Category.{v, u} C\ninst‚úù‚Å¥ : CategoryTheory.HasShift C Int\nJ : Type u_1\nT : J ‚Üí CategoryTheory.Pretriangulated.Triangle C\ninst‚úù¬≥ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÅ\ninst‚úù¬≤ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÇ\ninst‚úù¬π : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÉ\ninst‚úù : CategoryTheory.Limits.HasProduct fun j => (CategoryTheory.shiftFunctor C 1).obj (T j).obj‚ÇÅ\nj : J\n‚ä¢ Eq (CategoryTheory.Pretriangulated.productTriangle.œÄ T j).hom‚ÇÇ (CategoryTheory.Limits.Pi.œÄ (fun j => (T j).obj‚ÇÇ) j)","decl":"/-- A projection from the product of a family of triangles. -/\n@[simps]\ndef productTriangle.œÄ (j : J) :\n    productTriangle T ‚ü∂ T j where\n  hom‚ÇÅ := Pi.œÄ _ j\n  hom‚ÇÇ := Pi.œÄ _ j\n  hom‚ÇÉ := Pi.œÄ _ j\n  comm‚ÇÉ := by\n    dsimp\n    rw [‚Üê piComparison_comp_œÄ, assoc, IsIso.inv_hom_id_assoc]\n    simp only [limMap_œÄ, Discrete.natTrans_app]\n\n"}
{"name":"CategoryTheory.Pretriangulated.productTriangle.œÄ_hom‚ÇÅ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù‚Åµ : CategoryTheory.Category.{v, u} C\ninst‚úù‚Å¥ : CategoryTheory.HasShift C Int\nJ : Type u_1\nT : J ‚Üí CategoryTheory.Pretriangulated.Triangle C\ninst‚úù¬≥ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÅ\ninst‚úù¬≤ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÇ\ninst‚úù¬π : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÉ\ninst‚úù : CategoryTheory.Limits.HasProduct fun j => (CategoryTheory.shiftFunctor C 1).obj (T j).obj‚ÇÅ\nj : J\n‚ä¢ Eq (CategoryTheory.Pretriangulated.productTriangle.œÄ T j).hom‚ÇÅ (CategoryTheory.Limits.Pi.œÄ (fun j => (T j).obj‚ÇÅ) j)","decl":"/-- A projection from the product of a family of triangles. -/\n@[simps]\ndef productTriangle.œÄ (j : J) :\n    productTriangle T ‚ü∂ T j where\n  hom‚ÇÅ := Pi.œÄ _ j\n  hom‚ÇÇ := Pi.œÄ _ j\n  hom‚ÇÉ := Pi.œÄ _ j\n  comm‚ÇÉ := by\n    dsimp\n    rw [‚Üê piComparison_comp_œÄ, assoc, IsIso.inv_hom_id_assoc]\n    simp only [limMap_œÄ, Discrete.natTrans_app]\n\n"}
{"name":"CategoryTheory.Pretriangulated.productTriangle.lift_hom‚ÇÉ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù‚Åµ : CategoryTheory.Category.{v, u} C\ninst‚úù‚Å¥ : CategoryTheory.HasShift C Int\nJ : Type u_1\nT : J ‚Üí CategoryTheory.Pretriangulated.Triangle C\ninst‚úù¬≥ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÅ\ninst‚úù¬≤ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÇ\ninst‚úù¬π : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÉ\ninst‚úù : CategoryTheory.Limits.HasProduct fun j => (CategoryTheory.shiftFunctor C 1).obj (T j).obj‚ÇÅ\nT' : CategoryTheory.Pretriangulated.Triangle C\nœÜ : (j : J) ‚Üí Quiver.Hom T' (T j)\n‚ä¢ Eq (CategoryTheory.Pretriangulated.productTriangle.lift T œÜ).hom‚ÇÉ (CategoryTheory.Limits.Pi.lift fun j => (œÜ j).hom‚ÇÉ)","decl":"/-- A family of morphisms `T' ‚ü∂ T j` lifts to a morphism `T' ‚ü∂ productTriangle T`. -/\n@[simps]\ndef productTriangle.lift {T' : Triangle C} (œÜ : ‚àÄ j, T' ‚ü∂ T j) :\n    T' ‚ü∂ productTriangle T where\n  hom‚ÇÅ := Pi.lift (fun j => (œÜ j).hom‚ÇÅ)\n  hom‚ÇÇ := Pi.lift (fun j => (œÜ j).hom‚ÇÇ)\n  hom‚ÇÉ := Pi.lift (fun j => (œÜ j).hom‚ÇÉ)\n  comm‚ÇÉ := by\n    dsimp\n    rw [‚Üê cancel_mono (piComparison _ _), assoc, assoc, assoc, IsIso.inv_hom_id, comp_id]\n    aesop_cat\n\n"}
{"name":"CategoryTheory.Pretriangulated.productTriangle.lift_hom‚ÇÇ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù‚Åµ : CategoryTheory.Category.{v, u} C\ninst‚úù‚Å¥ : CategoryTheory.HasShift C Int\nJ : Type u_1\nT : J ‚Üí CategoryTheory.Pretriangulated.Triangle C\ninst‚úù¬≥ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÅ\ninst‚úù¬≤ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÇ\ninst‚úù¬π : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÉ\ninst‚úù : CategoryTheory.Limits.HasProduct fun j => (CategoryTheory.shiftFunctor C 1).obj (T j).obj‚ÇÅ\nT' : CategoryTheory.Pretriangulated.Triangle C\nœÜ : (j : J) ‚Üí Quiver.Hom T' (T j)\n‚ä¢ Eq (CategoryTheory.Pretriangulated.productTriangle.lift T œÜ).hom‚ÇÇ (CategoryTheory.Limits.Pi.lift fun j => (œÜ j).hom‚ÇÇ)","decl":"/-- A family of morphisms `T' ‚ü∂ T j` lifts to a morphism `T' ‚ü∂ productTriangle T`. -/\n@[simps]\ndef productTriangle.lift {T' : Triangle C} (œÜ : ‚àÄ j, T' ‚ü∂ T j) :\n    T' ‚ü∂ productTriangle T where\n  hom‚ÇÅ := Pi.lift (fun j => (œÜ j).hom‚ÇÅ)\n  hom‚ÇÇ := Pi.lift (fun j => (œÜ j).hom‚ÇÇ)\n  hom‚ÇÉ := Pi.lift (fun j => (œÜ j).hom‚ÇÉ)\n  comm‚ÇÉ := by\n    dsimp\n    rw [‚Üê cancel_mono (piComparison _ _), assoc, assoc, assoc, IsIso.inv_hom_id, comp_id]\n    aesop_cat\n\n"}
{"name":"CategoryTheory.Pretriangulated.productTriangle.lift_hom‚ÇÅ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù‚Åµ : CategoryTheory.Category.{v, u} C\ninst‚úù‚Å¥ : CategoryTheory.HasShift C Int\nJ : Type u_1\nT : J ‚Üí CategoryTheory.Pretriangulated.Triangle C\ninst‚úù¬≥ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÅ\ninst‚úù¬≤ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÇ\ninst‚úù¬π : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÉ\ninst‚úù : CategoryTheory.Limits.HasProduct fun j => (CategoryTheory.shiftFunctor C 1).obj (T j).obj‚ÇÅ\nT' : CategoryTheory.Pretriangulated.Triangle C\nœÜ : (j : J) ‚Üí Quiver.Hom T' (T j)\n‚ä¢ Eq (CategoryTheory.Pretriangulated.productTriangle.lift T œÜ).hom‚ÇÅ (CategoryTheory.Limits.Pi.lift fun j => (œÜ j).hom‚ÇÅ)","decl":"/-- A family of morphisms `T' ‚ü∂ T j` lifts to a morphism `T' ‚ü∂ productTriangle T`. -/\n@[simps]\ndef productTriangle.lift {T' : Triangle C} (œÜ : ‚àÄ j, T' ‚ü∂ T j) :\n    T' ‚ü∂ productTriangle T where\n  hom‚ÇÅ := Pi.lift (fun j => (œÜ j).hom‚ÇÅ)\n  hom‚ÇÇ := Pi.lift (fun j => (œÜ j).hom‚ÇÇ)\n  hom‚ÇÉ := Pi.lift (fun j => (œÜ j).hom‚ÇÉ)\n  comm‚ÇÉ := by\n    dsimp\n    rw [‚Üê cancel_mono (piComparison _ _), assoc, assoc, assoc, IsIso.inv_hom_id, comp_id]\n    aesop_cat\n\n"}
{"name":"CategoryTheory.Pretriangulated.productTriangle.zero‚ÇÉ‚ÇÅ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù‚Å∂ : CategoryTheory.Category.{v, u} C\ninst‚úù‚Åµ : CategoryTheory.HasShift C Int\nJ : Type u_1\nT : J ‚Üí CategoryTheory.Pretriangulated.Triangle C\ninst‚úù‚Å¥ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÅ\ninst‚úù¬≥ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÇ\ninst‚úù¬≤ : CategoryTheory.Limits.HasProduct fun j => (T j).obj‚ÇÉ\ninst‚úù¬π : CategoryTheory.Limits.HasProduct fun j => (CategoryTheory.shiftFunctor C 1).obj (T j).obj‚ÇÅ\ninst‚úù : CategoryTheory.Limits.HasZeroMorphisms C\nh : ‚àÄ (j : J), Eq (CategoryTheory.CategoryStruct.comp (T j).mor‚ÇÉ ((CategoryTheory.shiftFunctor C 1).map (T j).mor‚ÇÅ)) 0\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Pretriangulated.productTriangle T).mor‚ÇÉ ((CategoryTheory.shiftFunctor C 1).map (CategoryTheory.Pretriangulated.productTriangle T).mor‚ÇÅ)) 0","decl":"lemma productTriangle.zero‚ÇÉ‚ÇÅ [HasZeroMorphisms C]\n    (h : ‚àÄ j, (T j).mor‚ÇÉ ‚â´ (T j).mor‚ÇÅ‚ü¶(1 : ‚Ñ§)‚üß' = 0) :\n    (productTriangle T).mor‚ÇÉ ‚â´ (productTriangle T).mor‚ÇÅ‚ü¶1‚üß' = 0 := by\n  have : HasProduct (fun j => (T j).obj‚ÇÇ‚ü¶(1 : ‚Ñ§)‚üß) :=\n    ‚ü®_, isLimitFanMkObjOfIsLimit (shiftFunctor C (1 : ‚Ñ§)) _ _\n      (productIsProduct (fun j => (T j).obj‚ÇÇ))‚ü©\n  dsimp\n  change _ ‚â´ (Pi.lift (fun j => Pi.œÄ _ j ‚â´ (T j).mor‚ÇÅ))‚ü¶(1 : ‚Ñ§)‚üß' = 0\n  rw [assoc, ‚Üê cancel_mono (piComparison _ _), zero_comp, assoc, assoc]\n  ext j\n  simp only [map_lift_piComparison, assoc, limit.lift_œÄ, Fan.mk_œÄ_app, zero_comp,\n    Functor.map_comp, ‚Üê piComparison_comp_œÄ_assoc, IsIso.inv_hom_id_assoc,\n    limMap_œÄ_assoc, Discrete.natTrans_app, h j, comp_zero]\n\n"}
{"name":"CategoryTheory.Pretriangulated.contractibleTriangleFunctor_map_hom‚ÇÉ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\ninst‚úù¬π : CategoryTheory.Limits.HasZeroObject C\ninst‚úù : CategoryTheory.Limits.HasZeroMorphisms C\nX‚úù Y‚úù : C\nf : Quiver.Hom X‚úù Y‚úù\n‚ä¢ Eq ((CategoryTheory.Pretriangulated.contractibleTriangleFunctor C).map f).hom‚ÇÉ 0","decl":"variable (C) in\n/-- The functor `C ‚•§ Triangle C` which sends `X` to `contractibleTriangle X`. -/\n@[simps]\ndef contractibleTriangleFunctor [HasZeroObject C] [HasZeroMorphisms C] : C ‚•§ Triangle C where\n  obj X := contractibleTriangle X\n  map f :=\n    { hom‚ÇÅ := f\n      hom‚ÇÇ := f\n      hom‚ÇÉ := 0 }\n\n"}
{"name":"CategoryTheory.Pretriangulated.contractibleTriangleFunctor_obj","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\ninst‚úù¬π : CategoryTheory.Limits.HasZeroObject C\ninst‚úù : CategoryTheory.Limits.HasZeroMorphisms C\nX : C\n‚ä¢ Eq ((CategoryTheory.Pretriangulated.contractibleTriangleFunctor C).obj X) (CategoryTheory.Pretriangulated.contractibleTriangle X)","decl":"variable (C) in\n/-- The functor `C ‚•§ Triangle C` which sends `X` to `contractibleTriangle X`. -/\n@[simps]\ndef contractibleTriangleFunctor [HasZeroObject C] [HasZeroMorphisms C] : C ‚•§ Triangle C where\n  obj X := contractibleTriangle X\n  map f :=\n    { hom‚ÇÅ := f\n      hom‚ÇÇ := f\n      hom‚ÇÉ := 0 }\n\n"}
{"name":"CategoryTheory.Pretriangulated.contractibleTriangleFunctor_map_hom‚ÇÇ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\ninst‚úù¬π : CategoryTheory.Limits.HasZeroObject C\ninst‚úù : CategoryTheory.Limits.HasZeroMorphisms C\nX‚úù Y‚úù : C\nf : Quiver.Hom X‚úù Y‚úù\n‚ä¢ Eq ((CategoryTheory.Pretriangulated.contractibleTriangleFunctor C).map f).hom‚ÇÇ f","decl":"variable (C) in\n/-- The functor `C ‚•§ Triangle C` which sends `X` to `contractibleTriangle X`. -/\n@[simps]\ndef contractibleTriangleFunctor [HasZeroObject C] [HasZeroMorphisms C] : C ‚•§ Triangle C where\n  obj X := contractibleTriangle X\n  map f :=\n    { hom‚ÇÅ := f\n      hom‚ÇÇ := f\n      hom‚ÇÉ := 0 }\n\n"}
{"name":"CategoryTheory.Pretriangulated.contractibleTriangleFunctor_map_hom‚ÇÅ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≥ : CategoryTheory.Category.{v, u} C\ninst‚úù¬≤ : CategoryTheory.HasShift C Int\ninst‚úù¬π : CategoryTheory.Limits.HasZeroObject C\ninst‚úù : CategoryTheory.Limits.HasZeroMorphisms C\nX‚úù Y‚úù : C\nf : Quiver.Hom X‚úù Y‚úù\n‚ä¢ Eq ((CategoryTheory.Pretriangulated.contractibleTriangleFunctor C).map f).hom‚ÇÅ f","decl":"variable (C) in\n/-- The functor `C ‚•§ Triangle C` which sends `X` to `contractibleTriangle X`. -/\n@[simps]\ndef contractibleTriangleFunctor [HasZeroObject C] [HasZeroMorphisms C] : C ‚•§ Triangle C where\n  obj X := contractibleTriangle X\n  map f :=\n    { hom‚ÇÅ := f\n      hom‚ÇÇ := f\n      hom‚ÇÉ := 0 }\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.œÄ‚ÇÅ_obj","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nT : CategoryTheory.Pretriangulated.Triangle C\n‚ä¢ Eq (CategoryTheory.Pretriangulated.Triangle.œÄ‚ÇÅ.obj T) T.obj‚ÇÅ","decl":"/-- The first projection `Triangle C ‚•§ C`. -/\n@[simps]\ndef œÄ‚ÇÅ : Triangle C ‚•§ C where\n  obj T := T.obj‚ÇÅ\n  map f := f.hom‚ÇÅ\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.œÄ‚ÇÅ_map","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nX‚úù Y‚úù : CategoryTheory.Pretriangulated.Triangle C\nf : Quiver.Hom X‚úù Y‚úù\n‚ä¢ Eq (CategoryTheory.Pretriangulated.Triangle.œÄ‚ÇÅ.map f) f.hom‚ÇÅ","decl":"/-- The first projection `Triangle C ‚•§ C`. -/\n@[simps]\ndef œÄ‚ÇÅ : Triangle C ‚•§ C where\n  obj T := T.obj‚ÇÅ\n  map f := f.hom‚ÇÅ\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.œÄ‚ÇÇ_map","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nX‚úù Y‚úù : CategoryTheory.Pretriangulated.Triangle C\nf : Quiver.Hom X‚úù Y‚úù\n‚ä¢ Eq (CategoryTheory.Pretriangulated.Triangle.œÄ‚ÇÇ.map f) f.hom‚ÇÇ","decl":"/-- The second projection `Triangle C ‚•§ C`. -/\n@[simps]\ndef œÄ‚ÇÇ : Triangle C ‚•§ C where\n  obj T := T.obj‚ÇÇ\n  map f := f.hom‚ÇÇ\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.œÄ‚ÇÇ_obj","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nT : CategoryTheory.Pretriangulated.Triangle C\n‚ä¢ Eq (CategoryTheory.Pretriangulated.Triangle.œÄ‚ÇÇ.obj T) T.obj‚ÇÇ","decl":"/-- The second projection `Triangle C ‚•§ C`. -/\n@[simps]\ndef œÄ‚ÇÇ : Triangle C ‚•§ C where\n  obj T := T.obj‚ÇÇ\n  map f := f.hom‚ÇÇ\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.œÄ‚ÇÉ_obj","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nT : CategoryTheory.Pretriangulated.Triangle C\n‚ä¢ Eq (CategoryTheory.Pretriangulated.Triangle.œÄ‚ÇÉ.obj T) T.obj‚ÇÉ","decl":"/-- The third projection `Triangle C ‚•§ C`. -/\n@[simps]\ndef œÄ‚ÇÉ : Triangle C ‚•§ C where\n  obj T := T.obj‚ÇÉ\n  map f := f.hom‚ÇÉ\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.œÄ‚ÇÉ_map","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.HasShift C Int\nX‚úù Y‚úù : CategoryTheory.Pretriangulated.Triangle C\nf : Quiver.Hom X‚úù Y‚úù\n‚ä¢ Eq (CategoryTheory.Pretriangulated.Triangle.œÄ‚ÇÉ.map f) f.hom‚ÇÉ","decl":"/-- The third projection `Triangle C ‚•§ C`. -/\n@[simps]\ndef œÄ‚ÇÉ : Triangle C ‚•§ C where\n  obj T := T.obj‚ÇÉ\n  map f := f.hom‚ÇÉ\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.instIsIsoHom‚ÇÅ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≤ : CategoryTheory.Category.{v, u} C\ninst‚úù¬π : CategoryTheory.HasShift C Int\nA B : CategoryTheory.Pretriangulated.Triangle C\nœÜ : Quiver.Hom A B\ninst‚úù : CategoryTheory.IsIso œÜ\n‚ä¢ CategoryTheory.IsIso œÜ.hom‚ÇÅ","decl":"instance : IsIso œÜ.hom‚ÇÅ := (inferInstance : IsIso (œÄ‚ÇÅ.map œÜ))\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.instIsIsoHom‚ÇÇ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≤ : CategoryTheory.Category.{v, u} C\ninst‚úù¬π : CategoryTheory.HasShift C Int\nA B : CategoryTheory.Pretriangulated.Triangle C\nœÜ : Quiver.Hom A B\ninst‚úù : CategoryTheory.IsIso œÜ\n‚ä¢ CategoryTheory.IsIso œÜ.hom‚ÇÇ","decl":"instance : IsIso œÜ.hom‚ÇÇ := (inferInstance : IsIso (œÄ‚ÇÇ.map œÜ))\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.instIsIsoHom‚ÇÉ","module":"Mathlib.CategoryTheory.Triangulated.Basic","initialProofState":"C : Type u\ninst‚úù¬≤ : CategoryTheory.Category.{v, u} C\ninst‚úù¬π : CategoryTheory.HasShift C Int\nA B : CategoryTheory.Pretriangulated.Triangle C\nœÜ : Quiver.Hom A B\ninst‚úù : CategoryTheory.IsIso œÜ\n‚ä¢ CategoryTheory.IsIso œÜ.hom‚ÇÉ","decl":"instance : IsIso œÜ.hom‚ÇÉ := (inferInstance : IsIso (œÄ‚ÇÉ.map œÜ))\n\n"}
