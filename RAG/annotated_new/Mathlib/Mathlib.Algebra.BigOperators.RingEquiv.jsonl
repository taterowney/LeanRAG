{"name":"RingEquiv.map_list_prod","module":"Mathlib.Algebra.BigOperators.RingEquiv","initialProofState":"R : Type u_2\nS : Type u_3\ninst✝¹ : Semiring R\ninst✝ : Semiring S\nf : RingEquiv R S\nl : List R\n⊢ Eq (f l.prod) (List.map (⇑f) l).prod","decl":"protected theorem map_list_prod [Semiring R] [Semiring S] (f : R ≃+* S) (l : List R) :\n    f l.prod = (l.map f).prod := map_list_prod f l\n\n"}
{"name":"RingEquiv.map_list_sum","module":"Mathlib.Algebra.BigOperators.RingEquiv","initialProofState":"R : Type u_2\nS : Type u_3\ninst✝¹ : NonAssocSemiring R\ninst✝ : NonAssocSemiring S\nf : RingEquiv R S\nl : List R\n⊢ Eq (f l.sum) (List.map (⇑f) l).sum","decl":"protected theorem map_list_sum [NonAssocSemiring R] [NonAssocSemiring S] (f : R ≃+* S)\n    (l : List R) : f l.sum = (l.map f).sum := map_list_sum f l\n\n"}
{"name":"RingEquiv.unop_map_list_prod","module":"Mathlib.Algebra.BigOperators.RingEquiv","initialProofState":"R : Type u_2\nS : Type u_3\ninst✝¹ : Semiring R\ninst✝ : Semiring S\nf : RingEquiv R (MulOpposite S)\nl : List R\n⊢ Eq (MulOpposite.unop (f l.prod)) (List.map (Function.comp MulOpposite.unop ⇑f) l).reverse.prod","decl":"/-- An isomorphism into the opposite ring acts on the product by acting on the reversed elements -/\nprotected theorem unop_map_list_prod [Semiring R] [Semiring S] (f : R ≃+* Sᵐᵒᵖ) (l : List R) :\n    MulOpposite.unop (f l.prod) = (l.map (MulOpposite.unop ∘ f)).reverse.prod :=\n  unop_map_list_prod f l\n\n"}
{"name":"RingEquiv.map_multiset_prod","module":"Mathlib.Algebra.BigOperators.RingEquiv","initialProofState":"R : Type u_2\nS : Type u_3\ninst✝¹ : CommSemiring R\ninst✝ : CommSemiring S\nf : RingEquiv R S\ns : Multiset R\n⊢ Eq (f s.prod) (Multiset.map (⇑f) s).prod","decl":"protected theorem map_multiset_prod [CommSemiring R] [CommSemiring S] (f : R ≃+* S)\n    (s : Multiset R) : f s.prod = (s.map f).prod :=\n  map_multiset_prod f s\n\n"}
{"name":"RingEquiv.map_multiset_sum","module":"Mathlib.Algebra.BigOperators.RingEquiv","initialProofState":"R : Type u_2\nS : Type u_3\ninst✝¹ : NonAssocSemiring R\ninst✝ : NonAssocSemiring S\nf : RingEquiv R S\ns : Multiset R\n⊢ Eq (f s.sum) (Multiset.map (⇑f) s).sum","decl":"protected theorem map_multiset_sum [NonAssocSemiring R] [NonAssocSemiring S] (f : R ≃+* S)\n    (s : Multiset R) : f s.sum = (s.map f).sum :=\n  map_multiset_sum f s\n\n"}
{"name":"RingEquiv.map_prod","module":"Mathlib.Algebra.BigOperators.RingEquiv","initialProofState":"α : Type u_1\nR : Type u_2\nS : Type u_3\ninst✝¹ : CommSemiring R\ninst✝ : CommSemiring S\ng : RingEquiv R S\nf : α → R\ns : Finset α\n⊢ Eq (g (s.prod fun x => f x)) (s.prod fun x => g (f x))","decl":"protected theorem map_prod [CommSemiring R] [CommSemiring S] (g : R ≃+* S) (f : α → R)\n    (s : Finset α) : g (∏ x ∈ s, f x) = ∏ x ∈ s, g (f x) :=\n  map_prod g f s\n\n"}
{"name":"RingEquiv.map_sum","module":"Mathlib.Algebra.BigOperators.RingEquiv","initialProofState":"α : Type u_1\nR : Type u_2\nS : Type u_3\ninst✝¹ : NonAssocSemiring R\ninst✝ : NonAssocSemiring S\ng : RingEquiv R S\nf : α → R\ns : Finset α\n⊢ Eq (g (s.sum fun x => f x)) (s.sum fun x => g (f x))","decl":"protected theorem map_sum [NonAssocSemiring R] [NonAssocSemiring S] (g : R ≃+* S) (f : α → R)\n    (s : Finset α) : g (∑ x ∈ s, f x) = ∑ x ∈ s, g (f x) :=\n  map_sum g f s\n\n"}
