{"name":"ZMod.ker_intCastRingHom","module":"Mathlib.RingTheory.ZMod","initialProofState":"n : Nat\n⊢ Eq (RingHom.ker (Int.castRingHom (ZMod n))) (Ideal.span (Singleton.singleton ↑n))","decl":"/-- The ring homomorphism `ℤ → ZMod n` has kernel generated by `n`. -/\ntheorem ZMod.ker_intCastRingHom (n : ℕ) :\n    RingHom.ker (Int.castRingHom (ZMod n)) = Ideal.span ({(n : ℤ)} : Set ℤ) := by\n  ext\n  rw [Ideal.mem_span_singleton, RingHom.mem_ker, Int.coe_castRingHom,\n    ZMod.intCast_zmod_eq_zero_iff_dvd]\n\n"}
{"name":"ZMod.ringHom_eq_of_ker_eq","module":"Mathlib.RingTheory.ZMod","initialProofState":"n : Nat\nR : Type u_1\ninst✝ : CommRing R\nf g : RingHom R (ZMod n)\nh : Eq (RingHom.ker f) (RingHom.ker g)\n⊢ Eq f g","decl":"/-- Two ring homomorphisms into `ZMod n` with equal kernels are equal. -/\ntheorem ZMod.ringHom_eq_of_ker_eq {n : ℕ} {R : Type*} [CommRing R] (f g : R →+* ZMod n)\n    (h : RingHom.ker f = RingHom.ker g) : f = g := by\n  have := f.liftOfRightInverse_comp _ (ZMod.ringHom_rightInverse f) ⟨g, le_of_eq h⟩\n  rw [Subtype.coe_mk] at this\n  rw [← this, RingHom.ext_zmod (f.liftOfRightInverse _ _ ⟨g, _⟩) _, RingHom.id_comp]\n\n"}
{"name":"isReduced_zmod","module":"Mathlib.RingTheory.ZMod","initialProofState":"n : Nat\n⊢ Iff (IsReduced (ZMod n)) (Or (Squarefree n) (Eq n 0))","decl":"/-- `ZMod n` is reduced iff `n` is square-free (or `n=0`). -/\n@[simp]\ntheorem isReduced_zmod {n : ℕ} : IsReduced (ZMod n) ↔ Squarefree n ∨ n = 0 := by\n  rw [← RingHom.ker_isRadical_iff_reduced_of_surjective\n      (ZMod.ringHom_surjective <| Int.castRingHom <| ZMod n),\n      ZMod.ker_intCastRingHom, ← isRadical_iff_span_singleton, isRadical_iff_squarefree_or_zero,\n      Int.squarefree_natCast, Nat.cast_eq_zero]\n\n"}
{"name":"instIsReducedZModOfFactSquarefreeNat","module":"Mathlib.RingTheory.ZMod","initialProofState":"n : Nat\ninst✝ : Fact (Squarefree n)\n⊢ IsReduced (ZMod n)","decl":"instance {n : ℕ} [Fact <| Squarefree n] : IsReduced (ZMod n) :=\n  isReduced_zmod.2 <| Or.inl <| Fact.out\n"}
