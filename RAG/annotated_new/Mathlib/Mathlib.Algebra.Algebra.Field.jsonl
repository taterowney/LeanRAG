{"name":"algebraMap.coe_inj","module":"Mathlib.Algebra.Algebra.Field","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : Field R\ninst✝² : CommSemiring A\ninst✝¹ : Nontrivial A\ninst✝ : Algebra R A\na b : R\n⊢ Iff (Eq ↑a ↑b) (Eq a b)","decl":"@[norm_cast, simp]\ntheorem coe_inj {a b : R} : (↑a : A) = ↑b ↔ a = b :=\n  (algebraMap R A).injective.eq_iff\n\n"}
{"name":"algebraMap.lift_map_eq_zero_iff","module":"Mathlib.Algebra.Algebra.Field","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : Field R\ninst✝² : CommSemiring A\ninst✝¹ : Nontrivial A\ninst✝ : Algebra R A\na : R\n⊢ Iff (Eq (↑a) 0) (Eq a 0)","decl":"@[norm_cast]\ntheorem lift_map_eq_zero_iff (a : R) : (↑a : A) = 0 ↔ a = 0 := map_eq_zero _\n\n"}
{"name":"algebraMap.coe_inv","module":"Mathlib.Algebra.Algebra.Field","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝² : Semifield R\ninst✝¹ : DivisionSemiring A\ninst✝ : Algebra R A\nr : R\n⊢ Eq (↑(Inv.inv r)) (Inv.inv ↑r)","decl":"@[norm_cast]\ntheorem coe_inv (r : R) : ↑r⁻¹ = ((↑r)⁻¹ : A) :=\n  map_inv₀ (algebraMap R A) r\n\n"}
{"name":"algebraMap.coe_div","module":"Mathlib.Algebra.Algebra.Field","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝² : Semifield R\ninst✝¹ : DivisionSemiring A\ninst✝ : Algebra R A\nr s : R\n⊢ Eq (↑(HDiv.hDiv r s)) (HDiv.hDiv ↑r ↑s)","decl":"@[norm_cast]\ntheorem coe_div (r s : R) : ↑(r / s) = (↑r / ↑s : A) :=\n  map_div₀ (algebraMap R A) r s\n\n"}
{"name":"algebraMap.coe_zpow","module":"Mathlib.Algebra.Algebra.Field","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝² : Semifield R\ninst✝¹ : DivisionSemiring A\ninst✝ : Algebra R A\nr : R\nz : Int\n⊢ Eq (↑(HPow.hPow r z)) (HPow.hPow (↑r) z)","decl":"@[norm_cast]\ntheorem coe_zpow (r : R) (z : ℤ) : ↑(r ^ z) = (r : A) ^ z :=\n  map_zpow₀ (algebraMap R A) r z\n\n"}
{"name":"algebraMap.coe_ratCast","module":"Mathlib.Algebra.Algebra.Field","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝² : Field R\ninst✝¹ : DivisionRing A\ninst✝ : Algebra R A\nq : Rat\n⊢ Eq ↑↑q ↑q","decl":"@[norm_cast]\ntheorem coe_ratCast (q : ℚ) : ↑(q : R) = (q : A) := map_ratCast (algebraMap R A) q\n\n"}
