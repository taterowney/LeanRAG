{"name":"Finset.map_add_left_Icc","module":"Mathlib.Algebra.Order.Interval.Finset","initialProofState":"α : Type u_2\ninst✝² : OrderedCancelAddCommMonoid α\ninst✝¹ : ExistsAddOfLE α\ninst✝ : LocallyFiniteOrder α\na b c : α\n⊢ Eq (Finset.map (addLeftEmbedding c) (Finset.Icc a b)) (Finset.Icc (HAdd.hAdd c a) (HAdd.hAdd c b))","decl":"@[simp] lemma map_add_left_Icc (a b c : α) :\n    (Icc a b).map (addLeftEmbedding c) = Icc (c + a) (c + b) := by\n  rw [← coe_inj, coe_map, coe_Icc, coe_Icc]\n  exact Set.image_const_add_Icc _ _ _\n\n"}
{"name":"Finset.map_add_right_Icc","module":"Mathlib.Algebra.Order.Interval.Finset","initialProofState":"α : Type u_2\ninst✝² : OrderedCancelAddCommMonoid α\ninst✝¹ : ExistsAddOfLE α\ninst✝ : LocallyFiniteOrder α\na b c : α\n⊢ Eq (Finset.map (addRightEmbedding c) (Finset.Icc a b)) (Finset.Icc (HAdd.hAdd a c) (HAdd.hAdd b c))","decl":"@[simp] lemma map_add_right_Icc (a b c : α) :\n    (Icc a b).map (addRightEmbedding c) = Icc (a + c) (b + c) := by\n  rw [← coe_inj, coe_map, coe_Icc, coe_Icc]\n  exact Set.image_add_const_Icc _ _ _\n\n"}
{"name":"Finset.map_add_left_Ico","module":"Mathlib.Algebra.Order.Interval.Finset","initialProofState":"α : Type u_2\ninst✝² : OrderedCancelAddCommMonoid α\ninst✝¹ : ExistsAddOfLE α\ninst✝ : LocallyFiniteOrder α\na b c : α\n⊢ Eq (Finset.map (addLeftEmbedding c) (Finset.Ico a b)) (Finset.Ico (HAdd.hAdd c a) (HAdd.hAdd c b))","decl":"@[simp] lemma map_add_left_Ico (a b c : α) :\n    (Ico a b).map (addLeftEmbedding c) = Ico (c + a) (c + b) := by\n  rw [← coe_inj, coe_map, coe_Ico, coe_Ico]\n  exact Set.image_const_add_Ico _ _ _\n\n"}
{"name":"Finset.map_add_right_Ico","module":"Mathlib.Algebra.Order.Interval.Finset","initialProofState":"α : Type u_2\ninst✝² : OrderedCancelAddCommMonoid α\ninst✝¹ : ExistsAddOfLE α\ninst✝ : LocallyFiniteOrder α\na b c : α\n⊢ Eq (Finset.map (addRightEmbedding c) (Finset.Ico a b)) (Finset.Ico (HAdd.hAdd a c) (HAdd.hAdd b c))","decl":"@[simp] lemma map_add_right_Ico (a b c : α) :\n    (Ico a b).map (addRightEmbedding c) = Ico (a + c) (b + c) := by\n  rw [← coe_inj, coe_map, coe_Ico, coe_Ico]\n  exact Set.image_add_const_Ico _ _ _\n\n"}
{"name":"Finset.map_add_left_Ioc","module":"Mathlib.Algebra.Order.Interval.Finset","initialProofState":"α : Type u_2\ninst✝² : OrderedCancelAddCommMonoid α\ninst✝¹ : ExistsAddOfLE α\ninst✝ : LocallyFiniteOrder α\na b c : α\n⊢ Eq (Finset.map (addLeftEmbedding c) (Finset.Ioc a b)) (Finset.Ioc (HAdd.hAdd c a) (HAdd.hAdd c b))","decl":"@[simp] lemma map_add_left_Ioc (a b c : α) :\n    (Ioc a b).map (addLeftEmbedding c) = Ioc (c + a) (c + b) := by\n  rw [← coe_inj, coe_map, coe_Ioc, coe_Ioc]\n  exact Set.image_const_add_Ioc _ _ _\n\n"}
{"name":"Finset.map_add_right_Ioc","module":"Mathlib.Algebra.Order.Interval.Finset","initialProofState":"α : Type u_2\ninst✝² : OrderedCancelAddCommMonoid α\ninst✝¹ : ExistsAddOfLE α\ninst✝ : LocallyFiniteOrder α\na b c : α\n⊢ Eq (Finset.map (addRightEmbedding c) (Finset.Ioc a b)) (Finset.Ioc (HAdd.hAdd a c) (HAdd.hAdd b c))","decl":"@[simp] lemma map_add_right_Ioc (a b c : α) :\n    (Ioc a b).map (addRightEmbedding c) = Ioc (a + c) (b + c) := by\n  rw [← coe_inj, coe_map, coe_Ioc, coe_Ioc]\n  exact Set.image_add_const_Ioc _ _ _\n\n"}
{"name":"Finset.map_add_left_Ioo","module":"Mathlib.Algebra.Order.Interval.Finset","initialProofState":"α : Type u_2\ninst✝² : OrderedCancelAddCommMonoid α\ninst✝¹ : ExistsAddOfLE α\ninst✝ : LocallyFiniteOrder α\na b c : α\n⊢ Eq (Finset.map (addLeftEmbedding c) (Finset.Ioo a b)) (Finset.Ioo (HAdd.hAdd c a) (HAdd.hAdd c b))","decl":"@[simp] lemma map_add_left_Ioo (a b c : α) :\n    (Ioo a b).map (addLeftEmbedding c) = Ioo (c + a) (c + b) := by\n  rw [← coe_inj, coe_map, coe_Ioo, coe_Ioo]\n  exact Set.image_const_add_Ioo _ _ _\n\n"}
{"name":"Finset.map_add_right_Ioo","module":"Mathlib.Algebra.Order.Interval.Finset","initialProofState":"α : Type u_2\ninst✝² : OrderedCancelAddCommMonoid α\ninst✝¹ : ExistsAddOfLE α\ninst✝ : LocallyFiniteOrder α\na b c : α\n⊢ Eq (Finset.map (addRightEmbedding c) (Finset.Ioo a b)) (Finset.Ioo (HAdd.hAdd a c) (HAdd.hAdd b c))","decl":"@[simp] lemma map_add_right_Ioo (a b c : α) :\n    (Ioo a b).map (addRightEmbedding c) = Ioo (a + c) (b + c) := by\n  rw [← coe_inj, coe_map, coe_Ioo, coe_Ioo]\n  exact Set.image_add_const_Ioo _ _ _\n\n"}
{"name":"Finset.image_add_left_Icc","module":"Mathlib.Algebra.Order.Interval.Finset","initialProofState":"α : Type u_2\ninst✝³ : OrderedCancelAddCommMonoid α\ninst✝² : ExistsAddOfLE α\ninst✝¹ : LocallyFiniteOrder α\ninst✝ : DecidableEq α\na b c : α\n⊢ Eq (Finset.image (fun x => HAdd.hAdd c x) (Finset.Icc a b)) (Finset.Icc (HAdd.hAdd c a) (HAdd.hAdd c b))","decl":"@[simp] lemma image_add_left_Icc (a b c : α) : (Icc a b).image (c + ·) = Icc (c + a) (c + b) := by\n  rw [← map_add_left_Icc, map_eq_image, addLeftEmbedding, Embedding.coeFn_mk]\n\n"}
{"name":"Finset.image_add_left_Ico","module":"Mathlib.Algebra.Order.Interval.Finset","initialProofState":"α : Type u_2\ninst✝³ : OrderedCancelAddCommMonoid α\ninst✝² : ExistsAddOfLE α\ninst✝¹ : LocallyFiniteOrder α\ninst✝ : DecidableEq α\na b c : α\n⊢ Eq (Finset.image (fun x => HAdd.hAdd c x) (Finset.Ico a b)) (Finset.Ico (HAdd.hAdd c a) (HAdd.hAdd c b))","decl":"@[simp] lemma image_add_left_Ico (a b c : α) : (Ico a b).image (c + ·) = Ico (c + a) (c + b) := by\n  rw [← map_add_left_Ico, map_eq_image, addLeftEmbedding, Embedding.coeFn_mk]\n\n"}
{"name":"Finset.image_add_left_Ioc","module":"Mathlib.Algebra.Order.Interval.Finset","initialProofState":"α : Type u_2\ninst✝³ : OrderedCancelAddCommMonoid α\ninst✝² : ExistsAddOfLE α\ninst✝¹ : LocallyFiniteOrder α\ninst✝ : DecidableEq α\na b c : α\n⊢ Eq (Finset.image (fun x => HAdd.hAdd c x) (Finset.Ioc a b)) (Finset.Ioc (HAdd.hAdd c a) (HAdd.hAdd c b))","decl":"@[simp] lemma image_add_left_Ioc (a b c : α) : (Ioc a b).image (c + ·) = Ioc (c + a) (c + b) := by\n  rw [← map_add_left_Ioc, map_eq_image, addLeftEmbedding, Embedding.coeFn_mk]\n\n"}
{"name":"Finset.image_add_left_Ioo","module":"Mathlib.Algebra.Order.Interval.Finset","initialProofState":"α : Type u_2\ninst✝³ : OrderedCancelAddCommMonoid α\ninst✝² : ExistsAddOfLE α\ninst✝¹ : LocallyFiniteOrder α\ninst✝ : DecidableEq α\na b c : α\n⊢ Eq (Finset.image (fun x => HAdd.hAdd c x) (Finset.Ioo a b)) (Finset.Ioo (HAdd.hAdd c a) (HAdd.hAdd c b))","decl":"@[simp] lemma image_add_left_Ioo (a b c : α) : (Ioo a b).image (c + ·) = Ioo (c + a) (c + b) := by\n  rw [← map_add_left_Ioo, map_eq_image, addLeftEmbedding, Embedding.coeFn_mk]\n\n"}
{"name":"Finset.image_add_right_Icc","module":"Mathlib.Algebra.Order.Interval.Finset","initialProofState":"α : Type u_2\ninst✝³ : OrderedCancelAddCommMonoid α\ninst✝² : ExistsAddOfLE α\ninst✝¹ : LocallyFiniteOrder α\ninst✝ : DecidableEq α\na b c : α\n⊢ Eq (Finset.image (fun x => HAdd.hAdd x c) (Finset.Icc a b)) (Finset.Icc (HAdd.hAdd a c) (HAdd.hAdd b c))","decl":"@[simp] lemma image_add_right_Icc (a b c : α) : (Icc a b).image (· + c) = Icc (a + c) (b + c) := by\n  rw [← map_add_right_Icc, map_eq_image, addRightEmbedding, Embedding.coeFn_mk]\n\n"}
{"name":"Finset.image_add_right_Ico","module":"Mathlib.Algebra.Order.Interval.Finset","initialProofState":"α : Type u_2\ninst✝³ : OrderedCancelAddCommMonoid α\ninst✝² : ExistsAddOfLE α\ninst✝¹ : LocallyFiniteOrder α\ninst✝ : DecidableEq α\na b c : α\n⊢ Eq (Finset.image (fun x => HAdd.hAdd x c) (Finset.Ico a b)) (Finset.Ico (HAdd.hAdd a c) (HAdd.hAdd b c))","decl":"@[simp] lemma image_add_right_Ico (a b c : α) : (Ico a b).image (· + c) = Ico (a + c) (b + c) := by\n  rw [← map_add_right_Ico, map_eq_image, addRightEmbedding, Embedding.coeFn_mk]\n\n"}
{"name":"Finset.image_add_right_Ioc","module":"Mathlib.Algebra.Order.Interval.Finset","initialProofState":"α : Type u_2\ninst✝³ : OrderedCancelAddCommMonoid α\ninst✝² : ExistsAddOfLE α\ninst✝¹ : LocallyFiniteOrder α\ninst✝ : DecidableEq α\na b c : α\n⊢ Eq (Finset.image (fun x => HAdd.hAdd x c) (Finset.Ioc a b)) (Finset.Ioc (HAdd.hAdd a c) (HAdd.hAdd b c))","decl":"@[simp] lemma image_add_right_Ioc (a b c : α) : (Ioc a b).image (· + c) = Ioc (a + c) (b + c) := by\n  rw [← map_add_right_Ioc, map_eq_image, addRightEmbedding, Embedding.coeFn_mk]\n\n"}
{"name":"Finset.image_add_right_Ioo","module":"Mathlib.Algebra.Order.Interval.Finset","initialProofState":"α : Type u_2\ninst✝³ : OrderedCancelAddCommMonoid α\ninst✝² : ExistsAddOfLE α\ninst✝¹ : LocallyFiniteOrder α\ninst✝ : DecidableEq α\na b c : α\n⊢ Eq (Finset.image (fun x => HAdd.hAdd x c) (Finset.Ioo a b)) (Finset.Ioo (HAdd.hAdd a c) (HAdd.hAdd b c))","decl":"@[simp] lemma image_add_right_Ioo (a b c : α) : (Ioo a b).image (· + c) = Ioo (a + c) (b + c) := by\n  rw [← map_add_right_Ioo, map_eq_image, addRightEmbedding, Embedding.coeFn_mk]\n\n"}
