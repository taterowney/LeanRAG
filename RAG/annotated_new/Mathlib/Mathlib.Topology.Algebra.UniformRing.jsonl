{"name":"UniformSpace.Completion.coe_one","module":"Mathlib.Topology.Algebra.UniformRing","initialProofState":"α : Type u_1\ninst✝¹ : Ring α\ninst✝ : UniformSpace α\n⊢ Eq (↑1) 1","decl":"@[norm_cast]\ntheorem coe_one : ((1 : α) : Completion α) = 1 :=\n  rfl\n\n"}
{"name":"UniformSpace.Completion.coe_mul","module":"Mathlib.Topology.Algebra.UniformRing","initialProofState":"α : Type u_1\ninst✝² : Ring α\ninst✝¹ : UniformSpace α\ninst✝ : TopologicalRing α\na b : α\n⊢ Eq (↑(HMul.hMul a b)) (HMul.hMul ↑a ↑b)","decl":"@[norm_cast]\ntheorem coe_mul (a b : α) : ((a * b : α) : Completion α) = a * b :=\n  ((isDenseInducing_coe.prodMap isDenseInducing_coe).extend_eq\n      ((continuous_coe α).comp (@continuous_mul α _ _ _)) (a, b)).symm\n\n"}
{"name":"UniformSpace.Completion.instContinuousMul","module":"Mathlib.Topology.Algebra.UniformRing","initialProofState":"α : Type u_1\ninst✝¹ : Ring α\ninst✝ : UniformSpace α\n⊢ ContinuousMul (UniformSpace.Completion α)","decl":"instance : ContinuousMul (Completion α) where\n  continuous_mul := by\n    let m := (AddMonoidHom.mul : α →+ α →+ α).compr₂ toCompl\n    have : Continuous fun p : α × α => m p.1 p.2 := (continuous_coe α).comp continuous_mul\n    have di : IsDenseInducing (toCompl : α → Completion α) := isDenseInducing_coe\n    exact (di.extend_Z_bilin di this :)\n\n"}
{"name":"UniformSpace.Completion.continuous_mul","module":"Mathlib.Topology.Algebra.UniformRing","initialProofState":"α : Type u_1\ninst✝³ : Ring α\ninst✝² : UniformSpace α\ninst✝¹ : TopologicalRing α\ninst✝ : UniformAddGroup α\n⊢ Continuous fun p => HMul.hMul p.1 p.2","decl":"@[deprecated _root_.continuous_mul (since := \"2024-12-21\")]\nprotected theorem continuous_mul : Continuous fun p : Completion α × Completion α => p.1 * p.2 :=\n  _root_.continuous_mul\n\n"}
{"name":"UniformSpace.Completion.Continuous.mul","module":"Mathlib.Topology.Algebra.UniformRing","initialProofState":"α : Type u_1\ninst✝⁴ : Ring α\ninst✝³ : UniformSpace α\ninst✝² : TopologicalRing α\ninst✝¹ : UniformAddGroup α\nβ : Type u_2\ninst✝ : TopologicalSpace β\nf g : β → UniformSpace.Completion α\nhf : Continuous f\nhg : Continuous g\n⊢ Continuous fun b => HMul.hMul (f b) (g b)","decl":"@[deprecated _root_.Continuous.mul (since := \"2024-12-21\")]\nprotected theorem Continuous.mul {β : Type*} [TopologicalSpace β] {f g : β → Completion α}\n    (hf : Continuous f) (hg : Continuous g) : Continuous fun b => f b * g b :=\n  hf.mul hg\n\n"}
{"name":"UniformSpace.Completion.continuous_coeRingHom","module":"Mathlib.Topology.Algebra.UniformRing","initialProofState":"α : Type u_1\ninst✝³ : Ring α\ninst✝² : UniformSpace α\ninst✝¹ : TopologicalRing α\ninst✝ : UniformAddGroup α\n⊢ Continuous ⇑UniformSpace.Completion.coeRingHom","decl":"theorem continuous_coeRingHom : Continuous (coeRingHom : α → Completion α) :=\n  continuous_coe α\n\n"}
{"name":"UniformSpace.Completion.extensionHom_coe","module":"Mathlib.Topology.Algebra.UniformRing","initialProofState":"α : Type u_1\ninst✝⁹ : Ring α\ninst✝⁸ : UniformSpace α\ninst✝⁷ : TopologicalRing α\ninst✝⁶ : UniformAddGroup α\nβ : Type u\ninst✝⁵ : UniformSpace β\ninst✝⁴ : Ring β\ninst✝³ : UniformAddGroup β\ninst✝² : TopologicalRing β\nf : RingHom α β\nhf : Continuous ⇑f\ninst✝¹ : CompleteSpace β\ninst✝ : T0Space β\na : α\n⊢ Eq ((UniformSpace.Completion.extensionHom f hf) ↑a) (f a)","decl":"theorem extensionHom_coe [CompleteSpace β] [T0Space β] (a : α) :\n    Completion.extensionHom f hf a = f a := by\n  simp only [Completion.extensionHom, RingHom.coe_mk, MonoidHom.coe_mk, OneHom.coe_mk,\n    UniformSpace.Completion.extension_coe <| uniformContinuous_addMonoidHom_of_continuous hf]\n\n"}
{"name":"UniformSpace.Completion.topologicalRing","module":"Mathlib.Topology.Algebra.UniformRing","initialProofState":"α : Type u_1\ninst✝² : Ring α\ninst✝¹ : UniformSpace α\ninst✝ : UniformAddGroup α\n⊢ TopologicalRing (UniformSpace.Completion α)","decl":"instance topologicalRing : TopologicalRing (Completion α) where\n  continuous_add := continuous_add\n  continuous_mul := continuous_mul\n\n"}
{"name":"UniformSpace.Completion.map_smul_eq_mul_coe","module":"Mathlib.Topology.Algebra.UniformRing","initialProofState":"A : Type u_2\ninst✝⁶ : Ring A\ninst✝⁵ : UniformSpace A\ninst✝⁴ : UniformAddGroup A\ninst✝³ : TopologicalRing A\nR : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Algebra R A\ninst✝ : UniformContinuousConstSMul R A\nr : R\n⊢ Eq (UniformSpace.Completion.map fun x => HSMul.hSMul r x) fun x => HMul.hMul (↑((algebraMap R A) r)) x","decl":"@[simp]\ntheorem map_smul_eq_mul_coe (r : R) :\n    Completion.map (r • ·) = ((algebraMap R A r : Completion A) * ·) := by\n  ext x\n  refine Completion.induction_on x ?_ fun a => ?_\n  · exact isClosed_eq Completion.continuous_map (continuous_mul_left _)\n  · simp_rw [map_coe (uniformContinuous_const_smul r) a, Algebra.smul_def, coe_mul]\n\n"}
{"name":"UniformSpace.Completion.algebraMap_def","module":"Mathlib.Topology.Algebra.UniformRing","initialProofState":"A : Type u_2\ninst✝⁶ : Ring A\ninst✝⁵ : UniformSpace A\ninst✝⁴ : UniformAddGroup A\ninst✝³ : TopologicalRing A\nR : Type u_3\ninst✝² : CommSemiring R\ninst✝¹ : Algebra R A\ninst✝ : UniformContinuousConstSMul R A\nr : R\n⊢ Eq ((algebraMap R (UniformSpace.Completion A)) r) ↑((algebraMap R A) r)","decl":"theorem algebraMap_def (r : R) :\n    algebraMap R (Completion A) r = (algebraMap R A r : Completion A) :=\n  rfl\n\n"}
{"name":"UniformSpace.inseparableSetoid_ring","module":"Mathlib.Topology.Algebra.UniformRing","initialProofState":"α : Type u_2\ninst✝² : CommRing α\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalRing α\n⊢ Eq (inseparableSetoid α) (Submodule.quotientRel Bot.bot.closure)","decl":"theorem inseparableSetoid_ring (α) [CommRing α] [TopologicalSpace α] [TopologicalRing α] :\n    inseparableSetoid α = Submodule.quotientRel (Ideal.closure ⊥) :=\n  Setoid.ext fun x y =>\n    addGroup_inseparable_iff.trans <| .trans (by rfl) (Submodule.quotientRel_def _).symm\n\n"}
{"name":"UniformSpace.topologicalRing","module":"Mathlib.Topology.Algebra.UniformRing","initialProofState":"α : Type u_1\ninst✝² : CommRing α\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalRing α\n⊢ TopologicalRing (SeparationQuotient α)","decl":"instance topologicalRing [CommRing α] [TopologicalSpace α] [TopologicalRing α] :\n    TopologicalRing (SeparationQuotient α) where\n  toContinuousAdd :=\n    (sepQuotHomeomorphRingQuot α).isInducing.continuousAdd (sepQuotRingEquivRingQuot α)\n  toContinuousMul :=\n    (sepQuotHomeomorphRingQuot α).isInducing.continuousMul (sepQuotRingEquivRingQuot α)\n  toContinuousNeg :=\n    (sepQuotHomeomorphRingQuot α).isInducing.continuousNeg <|\n      map_neg (sepQuotRingEquivRingQuot α)\n\n"}
