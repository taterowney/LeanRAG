{"name":"MeasureTheory.Lp.coeFn_le","module":"Mathlib.MeasureTheory.Function.LpOrder","initialProofState":"α : Type u_1\nE : Type u_2\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\np : ENNReal\ninst✝ : NormedLatticeAddCommGroup E\nf g : Subtype fun x => Membership.mem (MeasureTheory.Lp E p μ) x\n⊢ Iff ((MeasureTheory.ae μ).EventuallyLE ↑↑f ↑↑g) (LE.le f g)","decl":"theorem coeFn_le (f g : Lp E p μ) : f ≤ᵐ[μ] g ↔ f ≤ g := by\n  rw [← Subtype.coe_le_coe, ← AEEqFun.coeFn_le]\n\n"}
{"name":"MeasureTheory.Lp.coeFn_nonneg","module":"Mathlib.MeasureTheory.Function.LpOrder","initialProofState":"α : Type u_1\nE : Type u_2\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\np : ENNReal\ninst✝ : NormedLatticeAddCommGroup E\nf : Subtype fun x => Membership.mem (MeasureTheory.Lp E p μ) x\n⊢ Iff ((MeasureTheory.ae μ).EventuallyLE 0 ↑↑f) (LE.le 0 f)","decl":"theorem coeFn_nonneg (f : Lp E p μ) : 0 ≤ᵐ[μ] f ↔ 0 ≤ f := by\n  rw [← coeFn_le]\n  have h0 := Lp.coeFn_zero E p μ\n  constructor <;> intro h <;> filter_upwards [h, h0] with _ _ h2\n  · rwa [h2]\n  · rwa [← h2]\n\n"}
{"name":"MeasureTheory.Lp.instAddLeftMono","module":"Mathlib.MeasureTheory.Function.LpOrder","initialProofState":"α : Type u_1\nE : Type u_2\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\np : ENNReal\ninst✝ : NormedLatticeAddCommGroup E\n⊢ AddLeftMono (Subtype fun x => Membership.mem (MeasureTheory.Lp E p μ) x)","decl":"instance instAddLeftMono : AddLeftMono (Lp E p μ) := by\n  refine ⟨fun f g₁ g₂ hg₁₂ => ?_⟩\n  rw [← coeFn_le] at hg₁₂ ⊢\n  filter_upwards [coeFn_add f g₁, coeFn_add f g₂, hg₁₂] with _ h1 h2 h3\n  rw [h1, h2, Pi.add_apply, Pi.add_apply]\n  exact add_le_add le_rfl h3\n\n"}
{"name":"MeasureTheory.Memℒp.sup","module":"Mathlib.MeasureTheory.Function.LpOrder","initialProofState":"α : Type u_1\nE : Type u_2\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\np : ENNReal\ninst✝ : NormedLatticeAddCommGroup E\nf g : α → E\nhf : MeasureTheory.Memℒp f p μ\nhg : MeasureTheory.Memℒp g p μ\n⊢ MeasureTheory.Memℒp (Max.max f g) p μ","decl":"theorem _root_.MeasureTheory.Memℒp.sup {f g : α → E} (hf : Memℒp f p μ) (hg : Memℒp g p μ) :\n    Memℒp (f ⊔ g) p μ :=\n  Memℒp.mono' (hf.norm.add hg.norm) (hf.1.sup hg.1)\n    (Filter.Eventually.of_forall fun x => norm_sup_le_add (f x) (g x))\n\n"}
{"name":"MeasureTheory.Memℒp.inf","module":"Mathlib.MeasureTheory.Function.LpOrder","initialProofState":"α : Type u_1\nE : Type u_2\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\np : ENNReal\ninst✝ : NormedLatticeAddCommGroup E\nf g : α → E\nhf : MeasureTheory.Memℒp f p μ\nhg : MeasureTheory.Memℒp g p μ\n⊢ MeasureTheory.Memℒp (Min.min f g) p μ","decl":"theorem _root_.MeasureTheory.Memℒp.inf {f g : α → E} (hf : Memℒp f p μ) (hg : Memℒp g p μ) :\n    Memℒp (f ⊓ g) p μ :=\n  Memℒp.mono' (hf.norm.add hg.norm) (hf.1.inf hg.1)\n    (Filter.Eventually.of_forall fun x => norm_inf_le_add (f x) (g x))\n\n"}
{"name":"MeasureTheory.Memℒp.abs","module":"Mathlib.MeasureTheory.Function.LpOrder","initialProofState":"α : Type u_1\nE : Type u_2\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\np : ENNReal\ninst✝ : NormedLatticeAddCommGroup E\nf : α → E\nhf : MeasureTheory.Memℒp f p μ\n⊢ MeasureTheory.Memℒp (abs f) p μ","decl":"theorem _root_.MeasureTheory.Memℒp.abs {f : α → E} (hf : Memℒp f p μ) : Memℒp |f| p μ :=\n  hf.sup hf.neg\n\n"}
{"name":"MeasureTheory.Lp.coeFn_sup","module":"Mathlib.MeasureTheory.Function.LpOrder","initialProofState":"α : Type u_1\nE : Type u_2\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\np : ENNReal\ninst✝ : NormedLatticeAddCommGroup E\nf g : Subtype fun x => Membership.mem (MeasureTheory.Lp E p μ) x\n⊢ (MeasureTheory.ae μ).EventuallyEq (↑↑(Max.max f g)) (Max.max ↑↑f ↑↑g)","decl":"theorem coeFn_sup (f g : Lp E p μ) : ⇑(f ⊔ g) =ᵐ[μ] ⇑f ⊔ ⇑g :=\n  AEEqFun.coeFn_sup _ _\n\n"}
{"name":"MeasureTheory.Lp.coeFn_inf","module":"Mathlib.MeasureTheory.Function.LpOrder","initialProofState":"α : Type u_1\nE : Type u_2\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\np : ENNReal\ninst✝ : NormedLatticeAddCommGroup E\nf g : Subtype fun x => Membership.mem (MeasureTheory.Lp E p μ) x\n⊢ (MeasureTheory.ae μ).EventuallyEq (↑↑(Min.min f g)) (Min.min ↑↑f ↑↑g)","decl":"theorem coeFn_inf (f g : Lp E p μ) : ⇑(f ⊓ g) =ᵐ[μ] ⇑f ⊓ ⇑g :=\n  AEEqFun.coeFn_inf _ _\n\n"}
{"name":"MeasureTheory.Lp.coeFn_abs","module":"Mathlib.MeasureTheory.Function.LpOrder","initialProofState":"α : Type u_1\nE : Type u_2\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\np : ENNReal\ninst✝ : NormedLatticeAddCommGroup E\nf : Subtype fun x => Membership.mem (MeasureTheory.Lp E p μ) x\n⊢ (MeasureTheory.ae μ).EventuallyEq ↑↑(abs f) fun x => abs (↑↑f x)","decl":"theorem coeFn_abs (f : Lp E p μ) : ⇑|f| =ᵐ[μ] fun x => |f x| :=\n  AEEqFun.coeFn_abs _\n\n"}
