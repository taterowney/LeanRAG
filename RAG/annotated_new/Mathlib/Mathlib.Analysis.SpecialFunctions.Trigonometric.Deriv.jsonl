{"name":"Complex.hasStrictDerivAt_sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Complex\n⊢ HasStrictDerivAt Complex.sin (Complex.cos x) x","decl":"/-- The complex sine function is everywhere strictly differentiable, with the derivative `cos x`. -/\ntheorem hasStrictDerivAt_sin (x : ℂ) : HasStrictDerivAt sin (cos x) x := by\n  simp only [cos, div_eq_mul_inv]\n  convert ((((hasStrictDerivAt_id x).neg.mul_const I).cexp.sub\n    ((hasStrictDerivAt_id x).mul_const I).cexp).mul_const I).mul_const (2 : ℂ)⁻¹ using 1\n  simp only [Function.comp, id]\n  rw [sub_mul, mul_assoc, mul_assoc, I_mul_I, neg_one_mul, neg_neg, mul_one, one_mul, mul_assoc,\n    I_mul_I, mul_neg_one, sub_neg_eq_add, add_comm]\n\n"}
{"name":"Complex.hasDerivAt_sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Complex\n⊢ HasDerivAt Complex.sin (Complex.cos x) x","decl":"/-- The complex sine function is everywhere differentiable, with the derivative `cos x`. -/\ntheorem hasDerivAt_sin (x : ℂ) : HasDerivAt sin (cos x) x :=\n  (hasStrictDerivAt_sin x).hasDerivAt\n\n"}
{"name":"Complex.contDiff_sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"n : WithTop ENat\n⊢ ContDiff Complex n Complex.sin","decl":"theorem contDiff_sin {n} : ContDiff ℂ n sin :=\n  (((contDiff_neg.mul contDiff_const).cexp.sub (contDiff_id.mul contDiff_const).cexp).mul\n    contDiff_const).div_const _\n\n"}
{"name":"Complex.differentiable_sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ Differentiable Complex Complex.sin","decl":"@[simp]\ntheorem differentiable_sin : Differentiable ℂ sin := fun x => (hasDerivAt_sin x).differentiableAt\n\n"}
{"name":"Complex.differentiableAt_sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Complex\n⊢ DifferentiableAt Complex Complex.sin x","decl":"@[simp]\ntheorem differentiableAt_sin {x : ℂ} : DifferentiableAt ℂ sin x :=\n  differentiable_sin x\n\n"}
{"name":"Complex.deriv_sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ Eq (deriv Complex.sin) Complex.cos","decl":"@[simp]\ntheorem deriv_sin : deriv sin = cos :=\n  funext fun x => (hasDerivAt_sin x).deriv\n\n"}
{"name":"Complex.hasStrictDerivAt_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Complex\n⊢ HasStrictDerivAt Complex.cos (Neg.neg (Complex.sin x)) x","decl":"/-- The complex cosine function is everywhere strictly differentiable, with the derivative\n`-sin x`. -/\ntheorem hasStrictDerivAt_cos (x : ℂ) : HasStrictDerivAt cos (-sin x) x := by\n  simp only [sin, div_eq_mul_inv, neg_mul_eq_neg_mul]\n  convert (((hasStrictDerivAt_id x).mul_const I).cexp.add\n    ((hasStrictDerivAt_id x).neg.mul_const I).cexp).mul_const (2 : ℂ)⁻¹ using 1\n  simp only [Function.comp, id]\n  ring\n\n"}
{"name":"Complex.hasDerivAt_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Complex\n⊢ HasDerivAt Complex.cos (Neg.neg (Complex.sin x)) x","decl":"/-- The complex cosine function is everywhere differentiable, with the derivative `-sin x`. -/\ntheorem hasDerivAt_cos (x : ℂ) : HasDerivAt cos (-sin x) x :=\n  (hasStrictDerivAt_cos x).hasDerivAt\n\n"}
{"name":"Complex.contDiff_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"n : WithTop ENat\n⊢ ContDiff Complex n Complex.cos","decl":"theorem contDiff_cos {n} : ContDiff ℂ n cos :=\n  ((contDiff_id.mul contDiff_const).cexp.add (contDiff_neg.mul contDiff_const).cexp).div_const _\n\n"}
{"name":"Complex.differentiable_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ Differentiable Complex Complex.cos","decl":"@[simp]\ntheorem differentiable_cos : Differentiable ℂ cos := fun x => (hasDerivAt_cos x).differentiableAt\n\n"}
{"name":"Complex.differentiableAt_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Complex\n⊢ DifferentiableAt Complex Complex.cos x","decl":"@[simp]\ntheorem differentiableAt_cos {x : ℂ} : DifferentiableAt ℂ cos x :=\n  differentiable_cos x\n\n"}
{"name":"Complex.deriv_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Complex\n⊢ Eq (deriv Complex.cos x) (Neg.neg (Complex.sin x))","decl":"theorem deriv_cos {x : ℂ} : deriv cos x = -sin x :=\n  (hasDerivAt_cos x).deriv\n\n"}
{"name":"Complex.deriv_cos'","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ Eq (deriv Complex.cos) fun x => Neg.neg (Complex.sin x)","decl":"@[simp]\ntheorem deriv_cos' : deriv cos = fun x => -sin x :=\n  funext fun _ => deriv_cos\n\n"}
{"name":"Complex.hasStrictDerivAt_sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Complex\n⊢ HasStrictDerivAt Complex.sinh (Complex.cosh x) x","decl":"/-- The complex hyperbolic sine function is everywhere strictly differentiable, with the derivative\n`cosh x`. -/\ntheorem hasStrictDerivAt_sinh (x : ℂ) : HasStrictDerivAt sinh (cosh x) x := by\n  simp only [cosh, div_eq_mul_inv]\n  convert ((hasStrictDerivAt_exp x).sub (hasStrictDerivAt_id x).neg.cexp).mul_const (2 : ℂ)⁻¹\n    using 1\n  rw [id, mul_neg_one, sub_eq_add_neg, neg_neg]\n\n"}
{"name":"Complex.hasDerivAt_sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Complex\n⊢ HasDerivAt Complex.sinh (Complex.cosh x) x","decl":"/-- The complex hyperbolic sine function is everywhere differentiable, with the derivative\n`cosh x`. -/\ntheorem hasDerivAt_sinh (x : ℂ) : HasDerivAt sinh (cosh x) x :=\n  (hasStrictDerivAt_sinh x).hasDerivAt\n\n"}
{"name":"Complex.contDiff_sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"n : WithTop ENat\n⊢ ContDiff Complex n Complex.sinh","decl":"theorem contDiff_sinh {n} : ContDiff ℂ n sinh :=\n  (contDiff_exp.sub contDiff_neg.cexp).div_const _\n\n"}
{"name":"Complex.differentiable_sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ Differentiable Complex Complex.sinh","decl":"@[simp]\ntheorem differentiable_sinh : Differentiable ℂ sinh := fun x => (hasDerivAt_sinh x).differentiableAt\n\n"}
{"name":"Complex.differentiableAt_sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Complex\n⊢ DifferentiableAt Complex Complex.sinh x","decl":"@[simp]\ntheorem differentiableAt_sinh {x : ℂ} : DifferentiableAt ℂ sinh x :=\n  differentiable_sinh x\n\n"}
{"name":"Complex.deriv_sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ Eq (deriv Complex.sinh) Complex.cosh","decl":"@[simp]\ntheorem deriv_sinh : deriv sinh = cosh :=\n  funext fun x => (hasDerivAt_sinh x).deriv\n\n"}
{"name":"Complex.hasStrictDerivAt_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Complex\n⊢ HasStrictDerivAt Complex.cosh (Complex.sinh x) x","decl":"/-- The complex hyperbolic cosine function is everywhere strictly differentiable, with the\nderivative `sinh x`. -/\ntheorem hasStrictDerivAt_cosh (x : ℂ) : HasStrictDerivAt cosh (sinh x) x := by\n  simp only [sinh, div_eq_mul_inv]\n  convert ((hasStrictDerivAt_exp x).add (hasStrictDerivAt_id x).neg.cexp).mul_const (2 : ℂ)⁻¹\n    using 1\n  rw [id, mul_neg_one, sub_eq_add_neg]\n\n"}
{"name":"Complex.hasDerivAt_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Complex\n⊢ HasDerivAt Complex.cosh (Complex.sinh x) x","decl":"/-- The complex hyperbolic cosine function is everywhere differentiable, with the derivative\n`sinh x`. -/\ntheorem hasDerivAt_cosh (x : ℂ) : HasDerivAt cosh (sinh x) x :=\n  (hasStrictDerivAt_cosh x).hasDerivAt\n\n"}
{"name":"Complex.contDiff_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"n : WithTop ENat\n⊢ ContDiff Complex n Complex.cosh","decl":"theorem contDiff_cosh {n} : ContDiff ℂ n cosh :=\n  (contDiff_exp.add contDiff_neg.cexp).div_const _\n\n"}
{"name":"Complex.differentiable_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ Differentiable Complex Complex.cosh","decl":"@[simp]\ntheorem differentiable_cosh : Differentiable ℂ cosh := fun x => (hasDerivAt_cosh x).differentiableAt\n\n"}
{"name":"Complex.differentiableAt_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Complex\n⊢ DifferentiableAt Complex Complex.cosh x","decl":"@[simp]\ntheorem differentiableAt_cosh {x : ℂ} : DifferentiableAt ℂ cosh x :=\n  differentiable_cosh x\n\n"}
{"name":"Complex.deriv_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ Eq (deriv Complex.cosh) Complex.sinh","decl":"@[simp]\ntheorem deriv_cosh : deriv cosh = sinh :=\n  funext fun x => (hasDerivAt_cosh x).deriv\n\n"}
{"name":"HasStrictDerivAt.ccos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Complex → Complex\nf' x : Complex\nhf : HasStrictDerivAt f f' x\n⊢ HasStrictDerivAt (fun x => Complex.cos (f x)) (HMul.hMul (Neg.neg (Complex.sin (f x))) f') x","decl":"theorem HasStrictDerivAt.ccos (hf : HasStrictDerivAt f f' x) :\n    HasStrictDerivAt (fun x => Complex.cos (f x)) (-Complex.sin (f x) * f') x :=\n  (Complex.hasStrictDerivAt_cos (f x)).comp x hf\n\n"}
{"name":"HasDerivAt.ccos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Complex → Complex\nf' x : Complex\nhf : HasDerivAt f f' x\n⊢ HasDerivAt (fun x => Complex.cos (f x)) (HMul.hMul (Neg.neg (Complex.sin (f x))) f') x","decl":"theorem HasDerivAt.ccos (hf : HasDerivAt f f' x) :\n    HasDerivAt (fun x => Complex.cos (f x)) (-Complex.sin (f x) * f') x :=\n  (Complex.hasDerivAt_cos (f x)).comp x hf\n\n"}
{"name":"HasDerivWithinAt.ccos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Complex → Complex\nf' x : Complex\ns : Set Complex\nhf : HasDerivWithinAt f f' s x\n⊢ HasDerivWithinAt (fun x => Complex.cos (f x)) (HMul.hMul (Neg.neg (Complex.sin (f x))) f') s x","decl":"theorem HasDerivWithinAt.ccos (hf : HasDerivWithinAt f f' s x) :\n    HasDerivWithinAt (fun x => Complex.cos (f x)) (-Complex.sin (f x) * f') s x :=\n  (Complex.hasDerivAt_cos (f x)).comp_hasDerivWithinAt x hf\n\n"}
{"name":"derivWithin_ccos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Complex → Complex\nx : Complex\ns : Set Complex\nhf : DifferentiableWithinAt Complex f s x\nhxs : UniqueDiffWithinAt Complex s x\n⊢ Eq (derivWithin (fun x => Complex.cos (f x)) s x) (HMul.hMul (Neg.neg (Complex.sin (f x))) (derivWithin f s x))","decl":"theorem derivWithin_ccos (hf : DifferentiableWithinAt ℂ f s x) (hxs : UniqueDiffWithinAt ℂ s x) :\n    derivWithin (fun x => Complex.cos (f x)) s x = -Complex.sin (f x) * derivWithin f s x :=\n  hf.hasDerivWithinAt.ccos.derivWithin hxs\n\n"}
{"name":"deriv_ccos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Complex → Complex\nx : Complex\nhc : DifferentiableAt Complex f x\n⊢ Eq (deriv (fun x => Complex.cos (f x)) x) (HMul.hMul (Neg.neg (Complex.sin (f x))) (deriv f x))","decl":"@[simp]\ntheorem deriv_ccos (hc : DifferentiableAt ℂ f x) :\n    deriv (fun x => Complex.cos (f x)) x = -Complex.sin (f x) * deriv f x :=\n  hc.hasDerivAt.ccos.deriv\n\n"}
{"name":"HasStrictDerivAt.csin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Complex → Complex\nf' x : Complex\nhf : HasStrictDerivAt f f' x\n⊢ HasStrictDerivAt (fun x => Complex.sin (f x)) (HMul.hMul (Complex.cos (f x)) f') x","decl":"theorem HasStrictDerivAt.csin (hf : HasStrictDerivAt f f' x) :\n    HasStrictDerivAt (fun x => Complex.sin (f x)) (Complex.cos (f x) * f') x :=\n  (Complex.hasStrictDerivAt_sin (f x)).comp x hf\n\n"}
{"name":"HasDerivAt.csin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Complex → Complex\nf' x : Complex\nhf : HasDerivAt f f' x\n⊢ HasDerivAt (fun x => Complex.sin (f x)) (HMul.hMul (Complex.cos (f x)) f') x","decl":"theorem HasDerivAt.csin (hf : HasDerivAt f f' x) :\n    HasDerivAt (fun x => Complex.sin (f x)) (Complex.cos (f x) * f') x :=\n  (Complex.hasDerivAt_sin (f x)).comp x hf\n\n"}
{"name":"HasDerivWithinAt.csin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Complex → Complex\nf' x : Complex\ns : Set Complex\nhf : HasDerivWithinAt f f' s x\n⊢ HasDerivWithinAt (fun x => Complex.sin (f x)) (HMul.hMul (Complex.cos (f x)) f') s x","decl":"theorem HasDerivWithinAt.csin (hf : HasDerivWithinAt f f' s x) :\n    HasDerivWithinAt (fun x => Complex.sin (f x)) (Complex.cos (f x) * f') s x :=\n  (Complex.hasDerivAt_sin (f x)).comp_hasDerivWithinAt x hf\n\n"}
{"name":"derivWithin_csin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Complex → Complex\nx : Complex\ns : Set Complex\nhf : DifferentiableWithinAt Complex f s x\nhxs : UniqueDiffWithinAt Complex s x\n⊢ Eq (derivWithin (fun x => Complex.sin (f x)) s x) (HMul.hMul (Complex.cos (f x)) (derivWithin f s x))","decl":"theorem derivWithin_csin (hf : DifferentiableWithinAt ℂ f s x) (hxs : UniqueDiffWithinAt ℂ s x) :\n    derivWithin (fun x => Complex.sin (f x)) s x = Complex.cos (f x) * derivWithin f s x :=\n  hf.hasDerivWithinAt.csin.derivWithin hxs\n\n"}
{"name":"deriv_csin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Complex → Complex\nx : Complex\nhc : DifferentiableAt Complex f x\n⊢ Eq (deriv (fun x => Complex.sin (f x)) x) (HMul.hMul (Complex.cos (f x)) (deriv f x))","decl":"@[simp]\ntheorem deriv_csin (hc : DifferentiableAt ℂ f x) :\n    deriv (fun x => Complex.sin (f x)) x = Complex.cos (f x) * deriv f x :=\n  hc.hasDerivAt.csin.deriv\n\n"}
{"name":"HasStrictDerivAt.ccosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Complex → Complex\nf' x : Complex\nhf : HasStrictDerivAt f f' x\n⊢ HasStrictDerivAt (fun x => Complex.cosh (f x)) (HMul.hMul (Complex.sinh (f x)) f') x","decl":"theorem HasStrictDerivAt.ccosh (hf : HasStrictDerivAt f f' x) :\n    HasStrictDerivAt (fun x => Complex.cosh (f x)) (Complex.sinh (f x) * f') x :=\n  (Complex.hasStrictDerivAt_cosh (f x)).comp x hf\n\n"}
{"name":"HasDerivAt.ccosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Complex → Complex\nf' x : Complex\nhf : HasDerivAt f f' x\n⊢ HasDerivAt (fun x => Complex.cosh (f x)) (HMul.hMul (Complex.sinh (f x)) f') x","decl":"theorem HasDerivAt.ccosh (hf : HasDerivAt f f' x) :\n    HasDerivAt (fun x => Complex.cosh (f x)) (Complex.sinh (f x) * f') x :=\n  (Complex.hasDerivAt_cosh (f x)).comp x hf\n\n"}
{"name":"HasDerivWithinAt.ccosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Complex → Complex\nf' x : Complex\ns : Set Complex\nhf : HasDerivWithinAt f f' s x\n⊢ HasDerivWithinAt (fun x => Complex.cosh (f x)) (HMul.hMul (Complex.sinh (f x)) f') s x","decl":"theorem HasDerivWithinAt.ccosh (hf : HasDerivWithinAt f f' s x) :\n    HasDerivWithinAt (fun x => Complex.cosh (f x)) (Complex.sinh (f x) * f') s x :=\n  (Complex.hasDerivAt_cosh (f x)).comp_hasDerivWithinAt x hf\n\n"}
{"name":"derivWithin_ccosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Complex → Complex\nx : Complex\ns : Set Complex\nhf : DifferentiableWithinAt Complex f s x\nhxs : UniqueDiffWithinAt Complex s x\n⊢ Eq (derivWithin (fun x => Complex.cosh (f x)) s x) (HMul.hMul (Complex.sinh (f x)) (derivWithin f s x))","decl":"theorem derivWithin_ccosh (hf : DifferentiableWithinAt ℂ f s x) (hxs : UniqueDiffWithinAt ℂ s x) :\n    derivWithin (fun x => Complex.cosh (f x)) s x = Complex.sinh (f x) * derivWithin f s x :=\n  hf.hasDerivWithinAt.ccosh.derivWithin hxs\n\n"}
{"name":"deriv_ccosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Complex → Complex\nx : Complex\nhc : DifferentiableAt Complex f x\n⊢ Eq (deriv (fun x => Complex.cosh (f x)) x) (HMul.hMul (Complex.sinh (f x)) (deriv f x))","decl":"@[simp]\ntheorem deriv_ccosh (hc : DifferentiableAt ℂ f x) :\n    deriv (fun x => Complex.cosh (f x)) x = Complex.sinh (f x) * deriv f x :=\n  hc.hasDerivAt.ccosh.deriv\n\n"}
{"name":"HasStrictDerivAt.csinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Complex → Complex\nf' x : Complex\nhf : HasStrictDerivAt f f' x\n⊢ HasStrictDerivAt (fun x => Complex.sinh (f x)) (HMul.hMul (Complex.cosh (f x)) f') x","decl":"theorem HasStrictDerivAt.csinh (hf : HasStrictDerivAt f f' x) :\n    HasStrictDerivAt (fun x => Complex.sinh (f x)) (Complex.cosh (f x) * f') x :=\n  (Complex.hasStrictDerivAt_sinh (f x)).comp x hf\n\n"}
{"name":"HasDerivAt.csinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Complex → Complex\nf' x : Complex\nhf : HasDerivAt f f' x\n⊢ HasDerivAt (fun x => Complex.sinh (f x)) (HMul.hMul (Complex.cosh (f x)) f') x","decl":"theorem HasDerivAt.csinh (hf : HasDerivAt f f' x) :\n    HasDerivAt (fun x => Complex.sinh (f x)) (Complex.cosh (f x) * f') x :=\n  (Complex.hasDerivAt_sinh (f x)).comp x hf\n\n"}
{"name":"HasDerivWithinAt.csinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Complex → Complex\nf' x : Complex\ns : Set Complex\nhf : HasDerivWithinAt f f' s x\n⊢ HasDerivWithinAt (fun x => Complex.sinh (f x)) (HMul.hMul (Complex.cosh (f x)) f') s x","decl":"theorem HasDerivWithinAt.csinh (hf : HasDerivWithinAt f f' s x) :\n    HasDerivWithinAt (fun x => Complex.sinh (f x)) (Complex.cosh (f x) * f') s x :=\n  (Complex.hasDerivAt_sinh (f x)).comp_hasDerivWithinAt x hf\n\n"}
{"name":"derivWithin_csinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Complex → Complex\nx : Complex\ns : Set Complex\nhf : DifferentiableWithinAt Complex f s x\nhxs : UniqueDiffWithinAt Complex s x\n⊢ Eq (derivWithin (fun x => Complex.sinh (f x)) s x) (HMul.hMul (Complex.cosh (f x)) (derivWithin f s x))","decl":"theorem derivWithin_csinh (hf : DifferentiableWithinAt ℂ f s x) (hxs : UniqueDiffWithinAt ℂ s x) :\n    derivWithin (fun x => Complex.sinh (f x)) s x = Complex.cosh (f x) * derivWithin f s x :=\n  hf.hasDerivWithinAt.csinh.derivWithin hxs\n\n"}
{"name":"deriv_csinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Complex → Complex\nx : Complex\nhc : DifferentiableAt Complex f x\n⊢ Eq (deriv (fun x => Complex.sinh (f x)) x) (HMul.hMul (Complex.cosh (f x)) (deriv f x))","decl":"@[simp]\ntheorem deriv_csinh (hc : DifferentiableAt ℂ f x) :\n    deriv (fun x => Complex.sinh (f x)) x = Complex.cosh (f x) * deriv f x :=\n  hc.hasDerivAt.csinh.deriv\n\n"}
{"name":"HasStrictFDerivAt.ccos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nf' : ContinuousLinearMap (RingHom.id Complex) E Complex\nx : E\nhf : HasStrictFDerivAt f f' x\n⊢ HasStrictFDerivAt (fun x => Complex.cos (f x)) (HSMul.hSMul (Neg.neg (Complex.sin (f x))) f') x","decl":"theorem HasStrictFDerivAt.ccos (hf : HasStrictFDerivAt f f' x) :\n    HasStrictFDerivAt (fun x => Complex.cos (f x)) (-Complex.sin (f x) • f') x :=\n  (Complex.hasStrictDerivAt_cos (f x)).comp_hasStrictFDerivAt x hf\n\n"}
{"name":"HasFDerivAt.ccos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nf' : ContinuousLinearMap (RingHom.id Complex) E Complex\nx : E\nhf : HasFDerivAt f f' x\n⊢ HasFDerivAt (fun x => Complex.cos (f x)) (HSMul.hSMul (Neg.neg (Complex.sin (f x))) f') x","decl":"theorem HasFDerivAt.ccos (hf : HasFDerivAt f f' x) :\n    HasFDerivAt (fun x => Complex.cos (f x)) (-Complex.sin (f x) • f') x :=\n  (Complex.hasDerivAt_cos (f x)).comp_hasFDerivAt x hf\n\n"}
{"name":"HasFDerivWithinAt.ccos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nf' : ContinuousLinearMap (RingHom.id Complex) E Complex\nx : E\ns : Set E\nhf : HasFDerivWithinAt f f' s x\n⊢ HasFDerivWithinAt (fun x => Complex.cos (f x)) (HSMul.hSMul (Neg.neg (Complex.sin (f x))) f') s x","decl":"theorem HasFDerivWithinAt.ccos (hf : HasFDerivWithinAt f f' s x) :\n    HasFDerivWithinAt (fun x => Complex.cos (f x)) (-Complex.sin (f x) • f') s x :=\n  (Complex.hasDerivAt_cos (f x)).comp_hasFDerivWithinAt x hf\n\n"}
{"name":"DifferentiableWithinAt.ccos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nx : E\ns : Set E\nhf : DifferentiableWithinAt Complex f s x\n⊢ DifferentiableWithinAt Complex (fun x => Complex.cos (f x)) s x","decl":"theorem DifferentiableWithinAt.ccos (hf : DifferentiableWithinAt ℂ f s x) :\n    DifferentiableWithinAt ℂ (fun x => Complex.cos (f x)) s x :=\n  hf.hasFDerivWithinAt.ccos.differentiableWithinAt\n\n"}
{"name":"DifferentiableAt.ccos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nx : E\nhc : DifferentiableAt Complex f x\n⊢ DifferentiableAt Complex (fun x => Complex.cos (f x)) x","decl":"@[simp, fun_prop]\ntheorem DifferentiableAt.ccos (hc : DifferentiableAt ℂ f x) :\n    DifferentiableAt ℂ (fun x => Complex.cos (f x)) x :=\n  hc.hasFDerivAt.ccos.differentiableAt\n\n"}
{"name":"DifferentiableOn.ccos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\ns : Set E\nhc : DifferentiableOn Complex f s\n⊢ DifferentiableOn Complex (fun x => Complex.cos (f x)) s","decl":"theorem DifferentiableOn.ccos (hc : DifferentiableOn ℂ f s) :\n    DifferentiableOn ℂ (fun x => Complex.cos (f x)) s := fun x h => (hc x h).ccos\n\n"}
{"name":"Differentiable.ccos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nhc : Differentiable Complex f\n⊢ Differentiable Complex fun x => Complex.cos (f x)","decl":"@[simp, fun_prop]\ntheorem Differentiable.ccos (hc : Differentiable ℂ f) :\n    Differentiable ℂ fun x => Complex.cos (f x) := fun x => (hc x).ccos\n\n"}
{"name":"fderivWithin_ccos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nx : E\ns : Set E\nhf : DifferentiableWithinAt Complex f s x\nhxs : UniqueDiffWithinAt Complex s x\n⊢ Eq (fderivWithin Complex (fun x => Complex.cos (f x)) s x) (HSMul.hSMul (Neg.neg (Complex.sin (f x))) (fderivWithin Complex f s x))","decl":"theorem fderivWithin_ccos (hf : DifferentiableWithinAt ℂ f s x) (hxs : UniqueDiffWithinAt ℂ s x) :\n    fderivWithin ℂ (fun x => Complex.cos (f x)) s x = -Complex.sin (f x) • fderivWithin ℂ f s x :=\n  hf.hasFDerivWithinAt.ccos.fderivWithin hxs\n\n"}
{"name":"fderiv_ccos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nx : E\nhc : DifferentiableAt Complex f x\n⊢ Eq (fderiv Complex (fun x => Complex.cos (f x)) x) (HSMul.hSMul (Neg.neg (Complex.sin (f x))) (fderiv Complex f x))","decl":"@[simp]\ntheorem fderiv_ccos (hc : DifferentiableAt ℂ f x) :\n    fderiv ℂ (fun x => Complex.cos (f x)) x = -Complex.sin (f x) • fderiv ℂ f x :=\n  hc.hasFDerivAt.ccos.fderiv\n\n"}
{"name":"ContDiff.ccos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nn : WithTop ENat\nh : ContDiff Complex n f\n⊢ ContDiff Complex n fun x => Complex.cos (f x)","decl":"theorem ContDiff.ccos {n} (h : ContDiff ℂ n f) : ContDiff ℂ n fun x => Complex.cos (f x) :=\n  Complex.contDiff_cos.comp h\n\n"}
{"name":"ContDiffAt.ccos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nx : E\nn : WithTop ENat\nhf : ContDiffAt Complex n f x\n⊢ ContDiffAt Complex n (fun x => Complex.cos (f x)) x","decl":"theorem ContDiffAt.ccos {n} (hf : ContDiffAt ℂ n f x) :\n    ContDiffAt ℂ n (fun x => Complex.cos (f x)) x :=\n  Complex.contDiff_cos.contDiffAt.comp x hf\n\n"}
{"name":"ContDiffOn.ccos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\ns : Set E\nn : WithTop ENat\nhf : ContDiffOn Complex n f s\n⊢ ContDiffOn Complex n (fun x => Complex.cos (f x)) s","decl":"theorem ContDiffOn.ccos {n} (hf : ContDiffOn ℂ n f s) :\n    ContDiffOn ℂ n (fun x => Complex.cos (f x)) s :=\n  Complex.contDiff_cos.comp_contDiffOn hf\n\n"}
{"name":"ContDiffWithinAt.ccos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nx : E\ns : Set E\nn : WithTop ENat\nhf : ContDiffWithinAt Complex n f s x\n⊢ ContDiffWithinAt Complex n (fun x => Complex.cos (f x)) s x","decl":"theorem ContDiffWithinAt.ccos {n} (hf : ContDiffWithinAt ℂ n f s x) :\n    ContDiffWithinAt ℂ n (fun x => Complex.cos (f x)) s x :=\n  Complex.contDiff_cos.contDiffAt.comp_contDiffWithinAt x hf\n\n"}
{"name":"HasStrictFDerivAt.csin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nf' : ContinuousLinearMap (RingHom.id Complex) E Complex\nx : E\nhf : HasStrictFDerivAt f f' x\n⊢ HasStrictFDerivAt (fun x => Complex.sin (f x)) (HSMul.hSMul (Complex.cos (f x)) f') x","decl":"theorem HasStrictFDerivAt.csin (hf : HasStrictFDerivAt f f' x) :\n    HasStrictFDerivAt (fun x => Complex.sin (f x)) (Complex.cos (f x) • f') x :=\n  (Complex.hasStrictDerivAt_sin (f x)).comp_hasStrictFDerivAt x hf\n\n"}
{"name":"HasFDerivAt.csin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nf' : ContinuousLinearMap (RingHom.id Complex) E Complex\nx : E\nhf : HasFDerivAt f f' x\n⊢ HasFDerivAt (fun x => Complex.sin (f x)) (HSMul.hSMul (Complex.cos (f x)) f') x","decl":"theorem HasFDerivAt.csin (hf : HasFDerivAt f f' x) :\n    HasFDerivAt (fun x => Complex.sin (f x)) (Complex.cos (f x) • f') x :=\n  (Complex.hasDerivAt_sin (f x)).comp_hasFDerivAt x hf\n\n"}
{"name":"HasFDerivWithinAt.csin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nf' : ContinuousLinearMap (RingHom.id Complex) E Complex\nx : E\ns : Set E\nhf : HasFDerivWithinAt f f' s x\n⊢ HasFDerivWithinAt (fun x => Complex.sin (f x)) (HSMul.hSMul (Complex.cos (f x)) f') s x","decl":"theorem HasFDerivWithinAt.csin (hf : HasFDerivWithinAt f f' s x) :\n    HasFDerivWithinAt (fun x => Complex.sin (f x)) (Complex.cos (f x) • f') s x :=\n  (Complex.hasDerivAt_sin (f x)).comp_hasFDerivWithinAt x hf\n\n"}
{"name":"DifferentiableWithinAt.csin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nx : E\ns : Set E\nhf : DifferentiableWithinAt Complex f s x\n⊢ DifferentiableWithinAt Complex (fun x => Complex.sin (f x)) s x","decl":"theorem DifferentiableWithinAt.csin (hf : DifferentiableWithinAt ℂ f s x) :\n    DifferentiableWithinAt ℂ (fun x => Complex.sin (f x)) s x :=\n  hf.hasFDerivWithinAt.csin.differentiableWithinAt\n\n"}
{"name":"DifferentiableAt.csin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nx : E\nhc : DifferentiableAt Complex f x\n⊢ DifferentiableAt Complex (fun x => Complex.sin (f x)) x","decl":"@[simp, fun_prop]\ntheorem DifferentiableAt.csin (hc : DifferentiableAt ℂ f x) :\n    DifferentiableAt ℂ (fun x => Complex.sin (f x)) x :=\n  hc.hasFDerivAt.csin.differentiableAt\n\n"}
{"name":"DifferentiableOn.csin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\ns : Set E\nhc : DifferentiableOn Complex f s\n⊢ DifferentiableOn Complex (fun x => Complex.sin (f x)) s","decl":"theorem DifferentiableOn.csin (hc : DifferentiableOn ℂ f s) :\n    DifferentiableOn ℂ (fun x => Complex.sin (f x)) s := fun x h => (hc x h).csin\n\n"}
{"name":"Differentiable.csin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nhc : Differentiable Complex f\n⊢ Differentiable Complex fun x => Complex.sin (f x)","decl":"@[simp, fun_prop]\ntheorem Differentiable.csin (hc : Differentiable ℂ f) :\n    Differentiable ℂ fun x => Complex.sin (f x) := fun x => (hc x).csin\n\n"}
{"name":"fderivWithin_csin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nx : E\ns : Set E\nhf : DifferentiableWithinAt Complex f s x\nhxs : UniqueDiffWithinAt Complex s x\n⊢ Eq (fderivWithin Complex (fun x => Complex.sin (f x)) s x) (HSMul.hSMul (Complex.cos (f x)) (fderivWithin Complex f s x))","decl":"theorem fderivWithin_csin (hf : DifferentiableWithinAt ℂ f s x) (hxs : UniqueDiffWithinAt ℂ s x) :\n    fderivWithin ℂ (fun x => Complex.sin (f x)) s x = Complex.cos (f x) • fderivWithin ℂ f s x :=\n  hf.hasFDerivWithinAt.csin.fderivWithin hxs\n\n"}
{"name":"fderiv_csin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nx : E\nhc : DifferentiableAt Complex f x\n⊢ Eq (fderiv Complex (fun x => Complex.sin (f x)) x) (HSMul.hSMul (Complex.cos (f x)) (fderiv Complex f x))","decl":"@[simp]\ntheorem fderiv_csin (hc : DifferentiableAt ℂ f x) :\n    fderiv ℂ (fun x => Complex.sin (f x)) x = Complex.cos (f x) • fderiv ℂ f x :=\n  hc.hasFDerivAt.csin.fderiv\n\n"}
{"name":"ContDiff.csin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nn : WithTop ENat\nh : ContDiff Complex n f\n⊢ ContDiff Complex n fun x => Complex.sin (f x)","decl":"theorem ContDiff.csin {n} (h : ContDiff ℂ n f) : ContDiff ℂ n fun x => Complex.sin (f x) :=\n  Complex.contDiff_sin.comp h\n\n"}
{"name":"ContDiffAt.csin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nx : E\nn : WithTop ENat\nhf : ContDiffAt Complex n f x\n⊢ ContDiffAt Complex n (fun x => Complex.sin (f x)) x","decl":"theorem ContDiffAt.csin {n} (hf : ContDiffAt ℂ n f x) :\n    ContDiffAt ℂ n (fun x => Complex.sin (f x)) x :=\n  Complex.contDiff_sin.contDiffAt.comp x hf\n\n"}
{"name":"ContDiffOn.csin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\ns : Set E\nn : WithTop ENat\nhf : ContDiffOn Complex n f s\n⊢ ContDiffOn Complex n (fun x => Complex.sin (f x)) s","decl":"theorem ContDiffOn.csin {n} (hf : ContDiffOn ℂ n f s) :\n    ContDiffOn ℂ n (fun x => Complex.sin (f x)) s :=\n  Complex.contDiff_sin.comp_contDiffOn hf\n\n"}
{"name":"ContDiffWithinAt.csin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nx : E\ns : Set E\nn : WithTop ENat\nhf : ContDiffWithinAt Complex n f s x\n⊢ ContDiffWithinAt Complex n (fun x => Complex.sin (f x)) s x","decl":"theorem ContDiffWithinAt.csin {n} (hf : ContDiffWithinAt ℂ n f s x) :\n    ContDiffWithinAt ℂ n (fun x => Complex.sin (f x)) s x :=\n  Complex.contDiff_sin.contDiffAt.comp_contDiffWithinAt x hf\n\n"}
{"name":"HasStrictFDerivAt.ccosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nf' : ContinuousLinearMap (RingHom.id Complex) E Complex\nx : E\nhf : HasStrictFDerivAt f f' x\n⊢ HasStrictFDerivAt (fun x => Complex.cosh (f x)) (HSMul.hSMul (Complex.sinh (f x)) f') x","decl":"theorem HasStrictFDerivAt.ccosh (hf : HasStrictFDerivAt f f' x) :\n    HasStrictFDerivAt (fun x => Complex.cosh (f x)) (Complex.sinh (f x) • f') x :=\n  (Complex.hasStrictDerivAt_cosh (f x)).comp_hasStrictFDerivAt x hf\n\n"}
{"name":"HasFDerivAt.ccosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nf' : ContinuousLinearMap (RingHom.id Complex) E Complex\nx : E\nhf : HasFDerivAt f f' x\n⊢ HasFDerivAt (fun x => Complex.cosh (f x)) (HSMul.hSMul (Complex.sinh (f x)) f') x","decl":"theorem HasFDerivAt.ccosh (hf : HasFDerivAt f f' x) :\n    HasFDerivAt (fun x => Complex.cosh (f x)) (Complex.sinh (f x) • f') x :=\n  (Complex.hasDerivAt_cosh (f x)).comp_hasFDerivAt x hf\n\n"}
{"name":"HasFDerivWithinAt.ccosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nf' : ContinuousLinearMap (RingHom.id Complex) E Complex\nx : E\ns : Set E\nhf : HasFDerivWithinAt f f' s x\n⊢ HasFDerivWithinAt (fun x => Complex.cosh (f x)) (HSMul.hSMul (Complex.sinh (f x)) f') s x","decl":"theorem HasFDerivWithinAt.ccosh (hf : HasFDerivWithinAt f f' s x) :\n    HasFDerivWithinAt (fun x => Complex.cosh (f x)) (Complex.sinh (f x) • f') s x :=\n  (Complex.hasDerivAt_cosh (f x)).comp_hasFDerivWithinAt x hf\n\n"}
{"name":"DifferentiableWithinAt.ccosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nx : E\ns : Set E\nhf : DifferentiableWithinAt Complex f s x\n⊢ DifferentiableWithinAt Complex (fun x => Complex.cosh (f x)) s x","decl":"theorem DifferentiableWithinAt.ccosh (hf : DifferentiableWithinAt ℂ f s x) :\n    DifferentiableWithinAt ℂ (fun x => Complex.cosh (f x)) s x :=\n  hf.hasFDerivWithinAt.ccosh.differentiableWithinAt\n\n"}
{"name":"DifferentiableAt.ccosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nx : E\nhc : DifferentiableAt Complex f x\n⊢ DifferentiableAt Complex (fun x => Complex.cosh (f x)) x","decl":"@[simp, fun_prop]\ntheorem DifferentiableAt.ccosh (hc : DifferentiableAt ℂ f x) :\n    DifferentiableAt ℂ (fun x => Complex.cosh (f x)) x :=\n  hc.hasFDerivAt.ccosh.differentiableAt\n\n"}
{"name":"DifferentiableOn.ccosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\ns : Set E\nhc : DifferentiableOn Complex f s\n⊢ DifferentiableOn Complex (fun x => Complex.cosh (f x)) s","decl":"theorem DifferentiableOn.ccosh (hc : DifferentiableOn ℂ f s) :\n    DifferentiableOn ℂ (fun x => Complex.cosh (f x)) s := fun x h => (hc x h).ccosh\n\n"}
{"name":"Differentiable.ccosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nhc : Differentiable Complex f\n⊢ Differentiable Complex fun x => Complex.cosh (f x)","decl":"@[simp, fun_prop]\ntheorem Differentiable.ccosh (hc : Differentiable ℂ f) :\n    Differentiable ℂ fun x => Complex.cosh (f x) := fun x => (hc x).ccosh\n\n"}
{"name":"fderivWithin_ccosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nx : E\ns : Set E\nhf : DifferentiableWithinAt Complex f s x\nhxs : UniqueDiffWithinAt Complex s x\n⊢ Eq (fderivWithin Complex (fun x => Complex.cosh (f x)) s x) (HSMul.hSMul (Complex.sinh (f x)) (fderivWithin Complex f s x))","decl":"theorem fderivWithin_ccosh (hf : DifferentiableWithinAt ℂ f s x) (hxs : UniqueDiffWithinAt ℂ s x) :\n    fderivWithin ℂ (fun x => Complex.cosh (f x)) s x = Complex.sinh (f x) • fderivWithin ℂ f s x :=\n  hf.hasFDerivWithinAt.ccosh.fderivWithin hxs\n\n"}
{"name":"fderiv_ccosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nx : E\nhc : DifferentiableAt Complex f x\n⊢ Eq (fderiv Complex (fun x => Complex.cosh (f x)) x) (HSMul.hSMul (Complex.sinh (f x)) (fderiv Complex f x))","decl":"@[simp]\ntheorem fderiv_ccosh (hc : DifferentiableAt ℂ f x) :\n    fderiv ℂ (fun x => Complex.cosh (f x)) x = Complex.sinh (f x) • fderiv ℂ f x :=\n  hc.hasFDerivAt.ccosh.fderiv\n\n"}
{"name":"ContDiff.ccosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nn : WithTop ENat\nh : ContDiff Complex n f\n⊢ ContDiff Complex n fun x => Complex.cosh (f x)","decl":"theorem ContDiff.ccosh {n} (h : ContDiff ℂ n f) : ContDiff ℂ n fun x => Complex.cosh (f x) :=\n  Complex.contDiff_cosh.comp h\n\n"}
{"name":"ContDiffAt.ccosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nx : E\nn : WithTop ENat\nhf : ContDiffAt Complex n f x\n⊢ ContDiffAt Complex n (fun x => Complex.cosh (f x)) x","decl":"theorem ContDiffAt.ccosh {n} (hf : ContDiffAt ℂ n f x) :\n    ContDiffAt ℂ n (fun x => Complex.cosh (f x)) x :=\n  Complex.contDiff_cosh.contDiffAt.comp x hf\n\n"}
{"name":"ContDiffOn.ccosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\ns : Set E\nn : WithTop ENat\nhf : ContDiffOn Complex n f s\n⊢ ContDiffOn Complex n (fun x => Complex.cosh (f x)) s","decl":"theorem ContDiffOn.ccosh {n} (hf : ContDiffOn ℂ n f s) :\n    ContDiffOn ℂ n (fun x => Complex.cosh (f x)) s :=\n  Complex.contDiff_cosh.comp_contDiffOn hf\n\n"}
{"name":"ContDiffWithinAt.ccosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nx : E\ns : Set E\nn : WithTop ENat\nhf : ContDiffWithinAt Complex n f s x\n⊢ ContDiffWithinAt Complex n (fun x => Complex.cosh (f x)) s x","decl":"theorem ContDiffWithinAt.ccosh {n} (hf : ContDiffWithinAt ℂ n f s x) :\n    ContDiffWithinAt ℂ n (fun x => Complex.cosh (f x)) s x :=\n  Complex.contDiff_cosh.contDiffAt.comp_contDiffWithinAt x hf\n\n"}
{"name":"HasStrictFDerivAt.csinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nf' : ContinuousLinearMap (RingHom.id Complex) E Complex\nx : E\nhf : HasStrictFDerivAt f f' x\n⊢ HasStrictFDerivAt (fun x => Complex.sinh (f x)) (HSMul.hSMul (Complex.cosh (f x)) f') x","decl":"theorem HasStrictFDerivAt.csinh (hf : HasStrictFDerivAt f f' x) :\n    HasStrictFDerivAt (fun x => Complex.sinh (f x)) (Complex.cosh (f x) • f') x :=\n  (Complex.hasStrictDerivAt_sinh (f x)).comp_hasStrictFDerivAt x hf\n\n"}
{"name":"HasFDerivAt.csinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nf' : ContinuousLinearMap (RingHom.id Complex) E Complex\nx : E\nhf : HasFDerivAt f f' x\n⊢ HasFDerivAt (fun x => Complex.sinh (f x)) (HSMul.hSMul (Complex.cosh (f x)) f') x","decl":"theorem HasFDerivAt.csinh (hf : HasFDerivAt f f' x) :\n    HasFDerivAt (fun x => Complex.sinh (f x)) (Complex.cosh (f x) • f') x :=\n  (Complex.hasDerivAt_sinh (f x)).comp_hasFDerivAt x hf\n\n"}
{"name":"HasFDerivWithinAt.csinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nf' : ContinuousLinearMap (RingHom.id Complex) E Complex\nx : E\ns : Set E\nhf : HasFDerivWithinAt f f' s x\n⊢ HasFDerivWithinAt (fun x => Complex.sinh (f x)) (HSMul.hSMul (Complex.cosh (f x)) f') s x","decl":"theorem HasFDerivWithinAt.csinh (hf : HasFDerivWithinAt f f' s x) :\n    HasFDerivWithinAt (fun x => Complex.sinh (f x)) (Complex.cosh (f x) • f') s x :=\n  (Complex.hasDerivAt_sinh (f x)).comp_hasFDerivWithinAt x hf\n\n"}
{"name":"DifferentiableWithinAt.csinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nx : E\ns : Set E\nhf : DifferentiableWithinAt Complex f s x\n⊢ DifferentiableWithinAt Complex (fun x => Complex.sinh (f x)) s x","decl":"theorem DifferentiableWithinAt.csinh (hf : DifferentiableWithinAt ℂ f s x) :\n    DifferentiableWithinAt ℂ (fun x => Complex.sinh (f x)) s x :=\n  hf.hasFDerivWithinAt.csinh.differentiableWithinAt\n\n"}
{"name":"DifferentiableAt.csinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nx : E\nhc : DifferentiableAt Complex f x\n⊢ DifferentiableAt Complex (fun x => Complex.sinh (f x)) x","decl":"@[simp, fun_prop]\ntheorem DifferentiableAt.csinh (hc : DifferentiableAt ℂ f x) :\n    DifferentiableAt ℂ (fun x => Complex.sinh (f x)) x :=\n  hc.hasFDerivAt.csinh.differentiableAt\n\n"}
{"name":"DifferentiableOn.csinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\ns : Set E\nhc : DifferentiableOn Complex f s\n⊢ DifferentiableOn Complex (fun x => Complex.sinh (f x)) s","decl":"theorem DifferentiableOn.csinh (hc : DifferentiableOn ℂ f s) :\n    DifferentiableOn ℂ (fun x => Complex.sinh (f x)) s := fun x h => (hc x h).csinh\n\n"}
{"name":"Differentiable.csinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nhc : Differentiable Complex f\n⊢ Differentiable Complex fun x => Complex.sinh (f x)","decl":"@[simp, fun_prop]\ntheorem Differentiable.csinh (hc : Differentiable ℂ f) :\n    Differentiable ℂ fun x => Complex.sinh (f x) := fun x => (hc x).csinh\n\n"}
{"name":"fderivWithin_csinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nx : E\ns : Set E\nhf : DifferentiableWithinAt Complex f s x\nhxs : UniqueDiffWithinAt Complex s x\n⊢ Eq (fderivWithin Complex (fun x => Complex.sinh (f x)) s x) (HSMul.hSMul (Complex.cosh (f x)) (fderivWithin Complex f s x))","decl":"theorem fderivWithin_csinh (hf : DifferentiableWithinAt ℂ f s x) (hxs : UniqueDiffWithinAt ℂ s x) :\n    fderivWithin ℂ (fun x => Complex.sinh (f x)) s x = Complex.cosh (f x) • fderivWithin ℂ f s x :=\n  hf.hasFDerivWithinAt.csinh.fderivWithin hxs\n\n"}
{"name":"fderiv_csinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nx : E\nhc : DifferentiableAt Complex f x\n⊢ Eq (fderiv Complex (fun x => Complex.sinh (f x)) x) (HSMul.hSMul (Complex.cosh (f x)) (fderiv Complex f x))","decl":"@[simp]\ntheorem fderiv_csinh (hc : DifferentiableAt ℂ f x) :\n    fderiv ℂ (fun x => Complex.sinh (f x)) x = Complex.cosh (f x) • fderiv ℂ f x :=\n  hc.hasFDerivAt.csinh.fderiv\n\n"}
{"name":"ContDiff.csinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nn : WithTop ENat\nh : ContDiff Complex n f\n⊢ ContDiff Complex n fun x => Complex.sinh (f x)","decl":"theorem ContDiff.csinh {n} (h : ContDiff ℂ n f) : ContDiff ℂ n fun x => Complex.sinh (f x) :=\n  Complex.contDiff_sinh.comp h\n\n"}
{"name":"ContDiffAt.csinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nx : E\nn : WithTop ENat\nhf : ContDiffAt Complex n f x\n⊢ ContDiffAt Complex n (fun x => Complex.sinh (f x)) x","decl":"theorem ContDiffAt.csinh {n} (hf : ContDiffAt ℂ n f x) :\n    ContDiffAt ℂ n (fun x => Complex.sinh (f x)) x :=\n  Complex.contDiff_sinh.contDiffAt.comp x hf\n\n"}
{"name":"ContDiffOn.csinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\ns : Set E\nn : WithTop ENat\nhf : ContDiffOn Complex n f s\n⊢ ContDiffOn Complex n (fun x => Complex.sinh (f x)) s","decl":"theorem ContDiffOn.csinh {n} (hf : ContDiffOn ℂ n f s) :\n    ContDiffOn ℂ n (fun x => Complex.sinh (f x)) s :=\n  Complex.contDiff_sinh.comp_contDiffOn hf\n\n"}
{"name":"ContDiffWithinAt.csinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Complex E\nf : E → Complex\nx : E\ns : Set E\nn : WithTop ENat\nhf : ContDiffWithinAt Complex n f s x\n⊢ ContDiffWithinAt Complex n (fun x => Complex.sinh (f x)) s x","decl":"theorem ContDiffWithinAt.csinh {n} (hf : ContDiffWithinAt ℂ n f s x) :\n    ContDiffWithinAt ℂ n (fun x => Complex.sinh (f x)) s x :=\n  Complex.contDiff_sinh.contDiffAt.comp_contDiffWithinAt x hf\n\n"}
{"name":"Real.hasStrictDerivAt_sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Real\n⊢ HasStrictDerivAt Real.sin (Real.cos x) x","decl":"theorem hasStrictDerivAt_sin (x : ℝ) : HasStrictDerivAt sin (cos x) x :=\n  (Complex.hasStrictDerivAt_sin x).real_of_complex\n\n"}
{"name":"Real.hasDerivAt_sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Real\n⊢ HasDerivAt Real.sin (Real.cos x) x","decl":"theorem hasDerivAt_sin (x : ℝ) : HasDerivAt sin (cos x) x :=\n  (hasStrictDerivAt_sin x).hasDerivAt\n\n"}
{"name":"Real.contDiff_sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"n : WithTop ENat\n⊢ ContDiff Real n Real.sin","decl":"theorem contDiff_sin {n} : ContDiff ℝ n sin :=\n  Complex.contDiff_sin.real_of_complex\n\n"}
{"name":"Real.differentiable_sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ Differentiable Real Real.sin","decl":"@[simp]\ntheorem differentiable_sin : Differentiable ℝ sin := fun x => (hasDerivAt_sin x).differentiableAt\n\n"}
{"name":"Real.differentiableAt_sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Real\n⊢ DifferentiableAt Real Real.sin x","decl":"@[simp]\ntheorem differentiableAt_sin : DifferentiableAt ℝ sin x :=\n  differentiable_sin x\n\n"}
{"name":"Real.deriv_sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ Eq (deriv Real.sin) Real.cos","decl":"@[simp]\ntheorem deriv_sin : deriv sin = cos :=\n  funext fun x => (hasDerivAt_sin x).deriv\n\n"}
{"name":"Real.hasStrictDerivAt_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Real\n⊢ HasStrictDerivAt Real.cos (Neg.neg (Real.sin x)) x","decl":"theorem hasStrictDerivAt_cos (x : ℝ) : HasStrictDerivAt cos (-sin x) x :=\n  (Complex.hasStrictDerivAt_cos x).real_of_complex\n\n"}
{"name":"Real.hasDerivAt_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Real\n⊢ HasDerivAt Real.cos (Neg.neg (Real.sin x)) x","decl":"theorem hasDerivAt_cos (x : ℝ) : HasDerivAt cos (-sin x) x :=\n  (Complex.hasDerivAt_cos x).real_of_complex\n\n"}
{"name":"Real.contDiff_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"n : WithTop ENat\n⊢ ContDiff Real n Real.cos","decl":"theorem contDiff_cos {n} : ContDiff ℝ n cos :=\n  Complex.contDiff_cos.real_of_complex\n\n"}
{"name":"Real.differentiable_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ Differentiable Real Real.cos","decl":"@[simp]\ntheorem differentiable_cos : Differentiable ℝ cos := fun x => (hasDerivAt_cos x).differentiableAt\n\n"}
{"name":"Real.differentiableAt_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Real\n⊢ DifferentiableAt Real Real.cos x","decl":"@[simp]\ntheorem differentiableAt_cos : DifferentiableAt ℝ cos x :=\n  differentiable_cos x\n\n"}
{"name":"Real.deriv_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Real\n⊢ Eq (deriv Real.cos x) (Neg.neg (Real.sin x))","decl":"theorem deriv_cos : deriv cos x = -sin x :=\n  (hasDerivAt_cos x).deriv\n\n"}
{"name":"Real.deriv_cos'","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ Eq (deriv Real.cos) fun x => Neg.neg (Real.sin x)","decl":"@[simp]\ntheorem deriv_cos' : deriv cos = fun x => -sin x :=\n  funext fun _ => deriv_cos\n\n"}
{"name":"Real.hasStrictDerivAt_sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Real\n⊢ HasStrictDerivAt Real.sinh (Real.cosh x) x","decl":"theorem hasStrictDerivAt_sinh (x : ℝ) : HasStrictDerivAt sinh (cosh x) x :=\n  (Complex.hasStrictDerivAt_sinh x).real_of_complex\n\n"}
{"name":"Real.hasDerivAt_sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Real\n⊢ HasDerivAt Real.sinh (Real.cosh x) x","decl":"theorem hasDerivAt_sinh (x : ℝ) : HasDerivAt sinh (cosh x) x :=\n  (Complex.hasDerivAt_sinh x).real_of_complex\n\n"}
{"name":"Real.contDiff_sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"n : WithTop ENat\n⊢ ContDiff Real n Real.sinh","decl":"theorem contDiff_sinh {n} : ContDiff ℝ n sinh :=\n  Complex.contDiff_sinh.real_of_complex\n\n"}
{"name":"Real.differentiable_sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ Differentiable Real Real.sinh","decl":"@[simp]\ntheorem differentiable_sinh : Differentiable ℝ sinh := fun x => (hasDerivAt_sinh x).differentiableAt\n\n"}
{"name":"Real.differentiableAt_sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Real\n⊢ DifferentiableAt Real Real.sinh x","decl":"@[simp]\ntheorem differentiableAt_sinh : DifferentiableAt ℝ sinh x :=\n  differentiable_sinh x\n\n"}
{"name":"Real.deriv_sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ Eq (deriv Real.sinh) Real.cosh","decl":"@[simp]\ntheorem deriv_sinh : deriv sinh = cosh :=\n  funext fun x => (hasDerivAt_sinh x).deriv\n\n"}
{"name":"Real.hasStrictDerivAt_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Real\n⊢ HasStrictDerivAt Real.cosh (Real.sinh x) x","decl":"theorem hasStrictDerivAt_cosh (x : ℝ) : HasStrictDerivAt cosh (sinh x) x :=\n  (Complex.hasStrictDerivAt_cosh x).real_of_complex\n\n"}
{"name":"Real.hasDerivAt_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Real\n⊢ HasDerivAt Real.cosh (Real.sinh x) x","decl":"theorem hasDerivAt_cosh (x : ℝ) : HasDerivAt cosh (sinh x) x :=\n  (Complex.hasDerivAt_cosh x).real_of_complex\n\n"}
{"name":"Real.contDiff_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"n : WithTop ENat\n⊢ ContDiff Real n Real.cosh","decl":"theorem contDiff_cosh {n} : ContDiff ℝ n cosh :=\n  Complex.contDiff_cosh.real_of_complex\n\n"}
{"name":"Real.differentiable_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ Differentiable Real Real.cosh","decl":"@[simp]\ntheorem differentiable_cosh : Differentiable ℝ cosh := fun x => (hasDerivAt_cosh x).differentiableAt\n\n"}
{"name":"Real.differentiableAt_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Real\n⊢ DifferentiableAt Real Real.cosh x","decl":"@[simp]\ntheorem differentiableAt_cosh : DifferentiableAt ℝ cosh x :=\n  differentiable_cosh x\n\n"}
{"name":"Real.deriv_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ Eq (deriv Real.cosh) Real.sinh","decl":"@[simp]\ntheorem deriv_cosh : deriv cosh = sinh :=\n  funext fun x => (hasDerivAt_cosh x).deriv\n\n"}
{"name":"Real.sinh_strictMono","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ StrictMono Real.sinh","decl":"/-- `sinh` is strictly monotone. -/\ntheorem sinh_strictMono : StrictMono sinh :=\n  strictMono_of_deriv_pos <| by rw [Real.deriv_sinh]; exact cosh_pos\n\n"}
{"name":"Real.sinh_injective","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ Function.Injective Real.sinh","decl":"/-- `sinh` is injective, `∀ a b, sinh a = sinh b → a = b`. -/\ntheorem sinh_injective : Function.Injective sinh :=\n  sinh_strictMono.injective\n\n"}
{"name":"Real.sinh_inj","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x y : Real\n⊢ Iff (Eq (Real.sinh x) (Real.sinh y)) (Eq x y)","decl":"@[simp]\ntheorem sinh_inj : sinh x = sinh y ↔ x = y :=\n  sinh_injective.eq_iff\n\n"}
{"name":"Real.sinh_le_sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x y : Real\n⊢ Iff (LE.le (Real.sinh x) (Real.sinh y)) (LE.le x y)","decl":"@[simp]\ntheorem sinh_le_sinh : sinh x ≤ sinh y ↔ x ≤ y :=\n  sinh_strictMono.le_iff_le\n\n"}
{"name":"Real.sinh_lt_sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x y : Real\n⊢ Iff (LT.lt (Real.sinh x) (Real.sinh y)) (LT.lt x y)","decl":"@[simp]\ntheorem sinh_lt_sinh : sinh x < sinh y ↔ x < y :=\n  sinh_strictMono.lt_iff_lt\n\n"}
{"name":"Real.sinh_eq_zero","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Real\n⊢ Iff (Eq (Real.sinh x) 0) (Eq x 0)","decl":"@[simp] lemma sinh_eq_zero : sinh x = 0 ↔ x = 0 := by rw [← @sinh_inj x, sinh_zero]\n\n"}
{"name":"Real.sinh_ne_zero","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Real\n⊢ Iff (Ne (Real.sinh x) 0) (Ne x 0)","decl":"lemma sinh_ne_zero : sinh x ≠ 0 ↔ x ≠ 0 := sinh_eq_zero.not\n\n"}
{"name":"Real.sinh_pos_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Real\n⊢ Iff (LT.lt 0 (Real.sinh x)) (LT.lt 0 x)","decl":"@[simp]\ntheorem sinh_pos_iff : 0 < sinh x ↔ 0 < x := by simpa only [sinh_zero] using @sinh_lt_sinh 0 x\n\n"}
{"name":"Real.sinh_nonpos_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Real\n⊢ Iff (LE.le (Real.sinh x) 0) (LE.le x 0)","decl":"@[simp]\ntheorem sinh_nonpos_iff : sinh x ≤ 0 ↔ x ≤ 0 := by simpa only [sinh_zero] using @sinh_le_sinh x 0\n\n"}
{"name":"Real.sinh_neg_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Real\n⊢ Iff (LT.lt (Real.sinh x) 0) (LT.lt x 0)","decl":"@[simp]\ntheorem sinh_neg_iff : sinh x < 0 ↔ x < 0 := by simpa only [sinh_zero] using @sinh_lt_sinh x 0\n\n"}
{"name":"Real.sinh_nonneg_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Real\n⊢ Iff (LE.le 0 (Real.sinh x)) (LE.le 0 x)","decl":"@[simp]\ntheorem sinh_nonneg_iff : 0 ≤ sinh x ↔ 0 ≤ x := by simpa only [sinh_zero] using @sinh_le_sinh 0 x\n\n"}
{"name":"Real.abs_sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Real\n⊢ Eq (abs (Real.sinh x)) (Real.sinh (abs x))","decl":"theorem abs_sinh (x : ℝ) : |sinh x| = sinh |x| := by\n  cases le_total x 0 <;> simp [abs_of_nonneg, abs_of_nonpos, *]\n\n"}
{"name":"Real.cosh_strictMonoOn","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ StrictMonoOn Real.cosh (Set.Ici 0)","decl":"theorem cosh_strictMonoOn : StrictMonoOn cosh (Ici 0) :=\n  strictMonoOn_of_deriv_pos (convex_Ici _) continuous_cosh.continuousOn fun x hx => by\n    rw [interior_Ici, mem_Ioi] at hx; rwa [deriv_cosh, sinh_pos_iff]\n\n"}
{"name":"Real.cosh_le_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x y : Real\n⊢ Iff (LE.le (Real.cosh x) (Real.cosh y)) (LE.le (abs x) (abs y))","decl":"@[simp]\ntheorem cosh_le_cosh : cosh x ≤ cosh y ↔ |x| ≤ |y| :=\n  cosh_abs x ▸ cosh_abs y ▸ cosh_strictMonoOn.le_iff_le (abs_nonneg x) (abs_nonneg y)\n\n"}
{"name":"Real.cosh_lt_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x y : Real\n⊢ Iff (LT.lt (Real.cosh x) (Real.cosh y)) (LT.lt (abs x) (abs y))","decl":"@[simp]\ntheorem cosh_lt_cosh : cosh x < cosh y ↔ |x| < |y| :=\n  lt_iff_lt_of_le_iff_le cosh_le_cosh\n\n"}
{"name":"Real.one_le_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Real\n⊢ LE.le 1 (Real.cosh x)","decl":"@[simp]\ntheorem one_le_cosh (x : ℝ) : 1 ≤ cosh x :=\n  cosh_zero ▸ cosh_le_cosh.2 (by simp only [_root_.abs_zero, _root_.abs_nonneg])\n\n"}
{"name":"Real.one_lt_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Real\n⊢ Iff (LT.lt 1 (Real.cosh x)) (Ne x 0)","decl":"@[simp]\ntheorem one_lt_cosh : 1 < cosh x ↔ x ≠ 0 :=\n  cosh_zero ▸ cosh_lt_cosh.trans (by simp only [_root_.abs_zero, abs_pos])\n\n"}
{"name":"Real.sinh_sub_id_strictMono","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ StrictMono fun x => HSub.hSub (Real.sinh x) x","decl":"theorem sinh_sub_id_strictMono : StrictMono fun x => sinh x - x := by\n  -- Porting note: `by simp; abel` was just `by simp` in mathlib3.\n  refine strictMono_of_odd_strictMonoOn_nonneg (fun x => by simp; abel) ?_\n  refine strictMonoOn_of_deriv_pos (convex_Ici _) ?_ fun x hx => ?_\n  · exact (continuous_sinh.sub continuous_id).continuousOn\n  · rw [interior_Ici, mem_Ioi] at hx\n    rw [deriv_sub, deriv_sinh, deriv_id'', sub_pos, one_lt_cosh]\n    exacts [hx.ne', differentiableAt_sinh, differentiableAt_id]\n\n"}
{"name":"Real.self_le_sinh_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Real\n⊢ Iff (LE.le x (Real.sinh x)) (LE.le 0 x)","decl":"@[simp]\ntheorem self_le_sinh_iff : x ≤ sinh x ↔ 0 ≤ x :=\n  calc\n    x ≤ sinh x ↔ sinh 0 - 0 ≤ sinh x - x := by simp\n    _ ↔ 0 ≤ x := sinh_sub_id_strictMono.le_iff_le\n\n"}
{"name":"Real.sinh_le_self_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Real\n⊢ Iff (LE.le (Real.sinh x) x) (LE.le x 0)","decl":"@[simp]\ntheorem sinh_le_self_iff : sinh x ≤ x ↔ x ≤ 0 :=\n  calc\n    sinh x ≤ x ↔ sinh x - x ≤ sinh 0 - 0 := by simp\n    _ ↔ x ≤ 0 := sinh_sub_id_strictMono.le_iff_le\n\n"}
{"name":"Real.self_lt_sinh_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Real\n⊢ Iff (LT.lt x (Real.sinh x)) (LT.lt 0 x)","decl":"@[simp]\ntheorem self_lt_sinh_iff : x < sinh x ↔ 0 < x :=\n  lt_iff_lt_of_le_iff_le sinh_le_self_iff\n\n"}
{"name":"Real.sinh_lt_self_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"x : Real\n⊢ Iff (LT.lt (Real.sinh x) x) (LT.lt x 0)","decl":"@[simp]\ntheorem sinh_lt_self_iff : sinh x < x ↔ x < 0 :=\n  lt_iff_lt_of_le_iff_le self_le_sinh_iff\n\n"}
{"name":"HasStrictDerivAt.cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Real → Real\nf' x : Real\nhf : HasStrictDerivAt f f' x\n⊢ HasStrictDerivAt (fun x => Real.cos (f x)) (HMul.hMul (Neg.neg (Real.sin (f x))) f') x","decl":"theorem HasStrictDerivAt.cos (hf : HasStrictDerivAt f f' x) :\n    HasStrictDerivAt (fun x => Real.cos (f x)) (-Real.sin (f x) * f') x :=\n  (Real.hasStrictDerivAt_cos (f x)).comp x hf\n\n"}
{"name":"HasDerivAt.cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Real → Real\nf' x : Real\nhf : HasDerivAt f f' x\n⊢ HasDerivAt (fun x => Real.cos (f x)) (HMul.hMul (Neg.neg (Real.sin (f x))) f') x","decl":"theorem HasDerivAt.cos (hf : HasDerivAt f f' x) :\n    HasDerivAt (fun x => Real.cos (f x)) (-Real.sin (f x) * f') x :=\n  (Real.hasDerivAt_cos (f x)).comp x hf\n\n"}
{"name":"HasDerivWithinAt.cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Real → Real\nf' x : Real\ns : Set Real\nhf : HasDerivWithinAt f f' s x\n⊢ HasDerivWithinAt (fun x => Real.cos (f x)) (HMul.hMul (Neg.neg (Real.sin (f x))) f') s x","decl":"theorem HasDerivWithinAt.cos (hf : HasDerivWithinAt f f' s x) :\n    HasDerivWithinAt (fun x => Real.cos (f x)) (-Real.sin (f x) * f') s x :=\n  (Real.hasDerivAt_cos (f x)).comp_hasDerivWithinAt x hf\n\n"}
{"name":"derivWithin_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Real → Real\nx : Real\ns : Set Real\nhf : DifferentiableWithinAt Real f s x\nhxs : UniqueDiffWithinAt Real s x\n⊢ Eq (derivWithin (fun x => Real.cos (f x)) s x) (HMul.hMul (Neg.neg (Real.sin (f x))) (derivWithin f s x))","decl":"theorem derivWithin_cos (hf : DifferentiableWithinAt ℝ f s x) (hxs : UniqueDiffWithinAt ℝ s x) :\n    derivWithin (fun x => Real.cos (f x)) s x = -Real.sin (f x) * derivWithin f s x :=\n  hf.hasDerivWithinAt.cos.derivWithin hxs\n\n"}
{"name":"deriv_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Real → Real\nx : Real\nhc : DifferentiableAt Real f x\n⊢ Eq (deriv (fun x => Real.cos (f x)) x) (HMul.hMul (Neg.neg (Real.sin (f x))) (deriv f x))","decl":"@[simp]\ntheorem deriv_cos (hc : DifferentiableAt ℝ f x) :\n    deriv (fun x => Real.cos (f x)) x = -Real.sin (f x) * deriv f x :=\n  hc.hasDerivAt.cos.deriv\n\n"}
{"name":"HasStrictDerivAt.sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Real → Real\nf' x : Real\nhf : HasStrictDerivAt f f' x\n⊢ HasStrictDerivAt (fun x => Real.sin (f x)) (HMul.hMul (Real.cos (f x)) f') x","decl":"theorem HasStrictDerivAt.sin (hf : HasStrictDerivAt f f' x) :\n    HasStrictDerivAt (fun x => Real.sin (f x)) (Real.cos (f x) * f') x :=\n  (Real.hasStrictDerivAt_sin (f x)).comp x hf\n\n"}
{"name":"HasDerivAt.sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Real → Real\nf' x : Real\nhf : HasDerivAt f f' x\n⊢ HasDerivAt (fun x => Real.sin (f x)) (HMul.hMul (Real.cos (f x)) f') x","decl":"theorem HasDerivAt.sin (hf : HasDerivAt f f' x) :\n    HasDerivAt (fun x => Real.sin (f x)) (Real.cos (f x) * f') x :=\n  (Real.hasDerivAt_sin (f x)).comp x hf\n\n"}
{"name":"HasDerivWithinAt.sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Real → Real\nf' x : Real\ns : Set Real\nhf : HasDerivWithinAt f f' s x\n⊢ HasDerivWithinAt (fun x => Real.sin (f x)) (HMul.hMul (Real.cos (f x)) f') s x","decl":"theorem HasDerivWithinAt.sin (hf : HasDerivWithinAt f f' s x) :\n    HasDerivWithinAt (fun x => Real.sin (f x)) (Real.cos (f x) * f') s x :=\n  (Real.hasDerivAt_sin (f x)).comp_hasDerivWithinAt x hf\n\n"}
{"name":"derivWithin_sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Real → Real\nx : Real\ns : Set Real\nhf : DifferentiableWithinAt Real f s x\nhxs : UniqueDiffWithinAt Real s x\n⊢ Eq (derivWithin (fun x => Real.sin (f x)) s x) (HMul.hMul (Real.cos (f x)) (derivWithin f s x))","decl":"theorem derivWithin_sin (hf : DifferentiableWithinAt ℝ f s x) (hxs : UniqueDiffWithinAt ℝ s x) :\n    derivWithin (fun x => Real.sin (f x)) s x = Real.cos (f x) * derivWithin f s x :=\n  hf.hasDerivWithinAt.sin.derivWithin hxs\n\n"}
{"name":"deriv_sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Real → Real\nx : Real\nhc : DifferentiableAt Real f x\n⊢ Eq (deriv (fun x => Real.sin (f x)) x) (HMul.hMul (Real.cos (f x)) (deriv f x))","decl":"@[simp]\ntheorem deriv_sin (hc : DifferentiableAt ℝ f x) :\n    deriv (fun x => Real.sin (f x)) x = Real.cos (f x) * deriv f x :=\n  hc.hasDerivAt.sin.deriv\n\n"}
{"name":"HasStrictDerivAt.cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Real → Real\nf' x : Real\nhf : HasStrictDerivAt f f' x\n⊢ HasStrictDerivAt (fun x => Real.cosh (f x)) (HMul.hMul (Real.sinh (f x)) f') x","decl":"theorem HasStrictDerivAt.cosh (hf : HasStrictDerivAt f f' x) :\n    HasStrictDerivAt (fun x => Real.cosh (f x)) (Real.sinh (f x) * f') x :=\n  (Real.hasStrictDerivAt_cosh (f x)).comp x hf\n\n"}
{"name":"HasDerivAt.cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Real → Real\nf' x : Real\nhf : HasDerivAt f f' x\n⊢ HasDerivAt (fun x => Real.cosh (f x)) (HMul.hMul (Real.sinh (f x)) f') x","decl":"theorem HasDerivAt.cosh (hf : HasDerivAt f f' x) :\n    HasDerivAt (fun x => Real.cosh (f x)) (Real.sinh (f x) * f') x :=\n  (Real.hasDerivAt_cosh (f x)).comp x hf\n\n"}
{"name":"HasDerivWithinAt.cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Real → Real\nf' x : Real\ns : Set Real\nhf : HasDerivWithinAt f f' s x\n⊢ HasDerivWithinAt (fun x => Real.cosh (f x)) (HMul.hMul (Real.sinh (f x)) f') s x","decl":"theorem HasDerivWithinAt.cosh (hf : HasDerivWithinAt f f' s x) :\n    HasDerivWithinAt (fun x => Real.cosh (f x)) (Real.sinh (f x) * f') s x :=\n  (Real.hasDerivAt_cosh (f x)).comp_hasDerivWithinAt x hf\n\n"}
{"name":"derivWithin_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Real → Real\nx : Real\ns : Set Real\nhf : DifferentiableWithinAt Real f s x\nhxs : UniqueDiffWithinAt Real s x\n⊢ Eq (derivWithin (fun x => Real.cosh (f x)) s x) (HMul.hMul (Real.sinh (f x)) (derivWithin f s x))","decl":"theorem derivWithin_cosh (hf : DifferentiableWithinAt ℝ f s x) (hxs : UniqueDiffWithinAt ℝ s x) :\n    derivWithin (fun x => Real.cosh (f x)) s x = Real.sinh (f x) * derivWithin f s x :=\n  hf.hasDerivWithinAt.cosh.derivWithin hxs\n\n"}
{"name":"deriv_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Real → Real\nx : Real\nhc : DifferentiableAt Real f x\n⊢ Eq (deriv (fun x => Real.cosh (f x)) x) (HMul.hMul (Real.sinh (f x)) (deriv f x))","decl":"@[simp]\ntheorem deriv_cosh (hc : DifferentiableAt ℝ f x) :\n    deriv (fun x => Real.cosh (f x)) x = Real.sinh (f x) * deriv f x :=\n  hc.hasDerivAt.cosh.deriv\n\n"}
{"name":"HasStrictDerivAt.sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Real → Real\nf' x : Real\nhf : HasStrictDerivAt f f' x\n⊢ HasStrictDerivAt (fun x => Real.sinh (f x)) (HMul.hMul (Real.cosh (f x)) f') x","decl":"theorem HasStrictDerivAt.sinh (hf : HasStrictDerivAt f f' x) :\n    HasStrictDerivAt (fun x => Real.sinh (f x)) (Real.cosh (f x) * f') x :=\n  (Real.hasStrictDerivAt_sinh (f x)).comp x hf\n\n"}
{"name":"HasDerivAt.sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Real → Real\nf' x : Real\nhf : HasDerivAt f f' x\n⊢ HasDerivAt (fun x => Real.sinh (f x)) (HMul.hMul (Real.cosh (f x)) f') x","decl":"theorem HasDerivAt.sinh (hf : HasDerivAt f f' x) :\n    HasDerivAt (fun x => Real.sinh (f x)) (Real.cosh (f x) * f') x :=\n  (Real.hasDerivAt_sinh (f x)).comp x hf\n\n"}
{"name":"HasDerivWithinAt.sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Real → Real\nf' x : Real\ns : Set Real\nhf : HasDerivWithinAt f f' s x\n⊢ HasDerivWithinAt (fun x => Real.sinh (f x)) (HMul.hMul (Real.cosh (f x)) f') s x","decl":"theorem HasDerivWithinAt.sinh (hf : HasDerivWithinAt f f' s x) :\n    HasDerivWithinAt (fun x => Real.sinh (f x)) (Real.cosh (f x) * f') s x :=\n  (Real.hasDerivAt_sinh (f x)).comp_hasDerivWithinAt x hf\n\n"}
{"name":"derivWithin_sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Real → Real\nx : Real\ns : Set Real\nhf : DifferentiableWithinAt Real f s x\nhxs : UniqueDiffWithinAt Real s x\n⊢ Eq (derivWithin (fun x => Real.sinh (f x)) s x) (HMul.hMul (Real.cosh (f x)) (derivWithin f s x))","decl":"theorem derivWithin_sinh (hf : DifferentiableWithinAt ℝ f s x) (hxs : UniqueDiffWithinAt ℝ s x) :\n    derivWithin (fun x => Real.sinh (f x)) s x = Real.cosh (f x) * derivWithin f s x :=\n  hf.hasDerivWithinAt.sinh.derivWithin hxs\n\n"}
{"name":"deriv_sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"f : Real → Real\nx : Real\nhc : DifferentiableAt Real f x\n⊢ Eq (deriv (fun x => Real.sinh (f x)) x) (HMul.hMul (Real.cosh (f x)) (deriv f x))","decl":"@[simp]\ntheorem deriv_sinh (hc : DifferentiableAt ℝ f x) :\n    deriv (fun x => Real.sinh (f x)) x = Real.cosh (f x) * deriv f x :=\n  hc.hasDerivAt.sinh.deriv\n\n"}
{"name":"HasStrictFDerivAt.cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nf' : ContinuousLinearMap (RingHom.id Real) E Real\nx : E\nhf : HasStrictFDerivAt f f' x\n⊢ HasStrictFDerivAt (fun x => Real.cos (f x)) (HSMul.hSMul (Neg.neg (Real.sin (f x))) f') x","decl":"theorem HasStrictFDerivAt.cos (hf : HasStrictFDerivAt f f' x) :\n    HasStrictFDerivAt (fun x => Real.cos (f x)) (-Real.sin (f x) • f') x :=\n  (Real.hasStrictDerivAt_cos (f x)).comp_hasStrictFDerivAt x hf\n\n"}
{"name":"HasFDerivAt.cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nf' : ContinuousLinearMap (RingHom.id Real) E Real\nx : E\nhf : HasFDerivAt f f' x\n⊢ HasFDerivAt (fun x => Real.cos (f x)) (HSMul.hSMul (Neg.neg (Real.sin (f x))) f') x","decl":"theorem HasFDerivAt.cos (hf : HasFDerivAt f f' x) :\n    HasFDerivAt (fun x => Real.cos (f x)) (-Real.sin (f x) • f') x :=\n  (Real.hasDerivAt_cos (f x)).comp_hasFDerivAt x hf\n\n"}
{"name":"HasFDerivWithinAt.cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nf' : ContinuousLinearMap (RingHom.id Real) E Real\nx : E\ns : Set E\nhf : HasFDerivWithinAt f f' s x\n⊢ HasFDerivWithinAt (fun x => Real.cos (f x)) (HSMul.hSMul (Neg.neg (Real.sin (f x))) f') s x","decl":"theorem HasFDerivWithinAt.cos (hf : HasFDerivWithinAt f f' s x) :\n    HasFDerivWithinAt (fun x => Real.cos (f x)) (-Real.sin (f x) • f') s x :=\n  (Real.hasDerivAt_cos (f x)).comp_hasFDerivWithinAt x hf\n\n"}
{"name":"DifferentiableWithinAt.cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\ns : Set E\nhf : DifferentiableWithinAt Real f s x\n⊢ DifferentiableWithinAt Real (fun x => Real.cos (f x)) s x","decl":"theorem DifferentiableWithinAt.cos (hf : DifferentiableWithinAt ℝ f s x) :\n    DifferentiableWithinAt ℝ (fun x => Real.cos (f x)) s x :=\n  hf.hasFDerivWithinAt.cos.differentiableWithinAt\n\n"}
{"name":"DifferentiableAt.cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\nhc : DifferentiableAt Real f x\n⊢ DifferentiableAt Real (fun x => Real.cos (f x)) x","decl":"@[simp, fun_prop]\ntheorem DifferentiableAt.cos (hc : DifferentiableAt ℝ f x) :\n    DifferentiableAt ℝ (fun x => Real.cos (f x)) x :=\n  hc.hasFDerivAt.cos.differentiableAt\n\n"}
{"name":"DifferentiableOn.cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\ns : Set E\nhc : DifferentiableOn Real f s\n⊢ DifferentiableOn Real (fun x => Real.cos (f x)) s","decl":"theorem DifferentiableOn.cos (hc : DifferentiableOn ℝ f s) :\n    DifferentiableOn ℝ (fun x => Real.cos (f x)) s := fun x h => (hc x h).cos\n\n"}
{"name":"Differentiable.cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nhc : Differentiable Real f\n⊢ Differentiable Real fun x => Real.cos (f x)","decl":"@[simp, fun_prop]\ntheorem Differentiable.cos (hc : Differentiable ℝ f) : Differentiable ℝ fun x => Real.cos (f x) :=\n  fun x => (hc x).cos\n\n"}
{"name":"fderivWithin_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\ns : Set E\nhf : DifferentiableWithinAt Real f s x\nhxs : UniqueDiffWithinAt Real s x\n⊢ Eq (fderivWithin Real (fun x => Real.cos (f x)) s x) (HSMul.hSMul (Neg.neg (Real.sin (f x))) (fderivWithin Real f s x))","decl":"theorem fderivWithin_cos (hf : DifferentiableWithinAt ℝ f s x) (hxs : UniqueDiffWithinAt ℝ s x) :\n    fderivWithin ℝ (fun x => Real.cos (f x)) s x = -Real.sin (f x) • fderivWithin ℝ f s x :=\n  hf.hasFDerivWithinAt.cos.fderivWithin hxs\n\n"}
{"name":"fderiv_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\nhc : DifferentiableAt Real f x\n⊢ Eq (fderiv Real (fun x => Real.cos (f x)) x) (HSMul.hSMul (Neg.neg (Real.sin (f x))) (fderiv Real f x))","decl":"@[simp]\ntheorem fderiv_cos (hc : DifferentiableAt ℝ f x) :\n    fderiv ℝ (fun x => Real.cos (f x)) x = -Real.sin (f x) • fderiv ℝ f x :=\n  hc.hasFDerivAt.cos.fderiv\n\n"}
{"name":"ContDiff.cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nn : WithTop ENat\nh : ContDiff Real n f\n⊢ ContDiff Real n fun x => Real.cos (f x)","decl":"theorem ContDiff.cos {n} (h : ContDiff ℝ n f) : ContDiff ℝ n fun x => Real.cos (f x) :=\n  Real.contDiff_cos.comp h\n\n"}
{"name":"ContDiffAt.cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\nn : WithTop ENat\nhf : ContDiffAt Real n f x\n⊢ ContDiffAt Real n (fun x => Real.cos (f x)) x","decl":"theorem ContDiffAt.cos {n} (hf : ContDiffAt ℝ n f x) : ContDiffAt ℝ n (fun x => Real.cos (f x)) x :=\n  Real.contDiff_cos.contDiffAt.comp x hf\n\n"}
{"name":"ContDiffOn.cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\ns : Set E\nn : WithTop ENat\nhf : ContDiffOn Real n f s\n⊢ ContDiffOn Real n (fun x => Real.cos (f x)) s","decl":"theorem ContDiffOn.cos {n} (hf : ContDiffOn ℝ n f s) : ContDiffOn ℝ n (fun x => Real.cos (f x)) s :=\n  Real.contDiff_cos.comp_contDiffOn hf\n\n"}
{"name":"ContDiffWithinAt.cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\ns : Set E\nn : WithTop ENat\nhf : ContDiffWithinAt Real n f s x\n⊢ ContDiffWithinAt Real n (fun x => Real.cos (f x)) s x","decl":"theorem ContDiffWithinAt.cos {n} (hf : ContDiffWithinAt ℝ n f s x) :\n    ContDiffWithinAt ℝ n (fun x => Real.cos (f x)) s x :=\n  Real.contDiff_cos.contDiffAt.comp_contDiffWithinAt x hf\n\n"}
{"name":"HasStrictFDerivAt.sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nf' : ContinuousLinearMap (RingHom.id Real) E Real\nx : E\nhf : HasStrictFDerivAt f f' x\n⊢ HasStrictFDerivAt (fun x => Real.sin (f x)) (HSMul.hSMul (Real.cos (f x)) f') x","decl":"theorem HasStrictFDerivAt.sin (hf : HasStrictFDerivAt f f' x) :\n    HasStrictFDerivAt (fun x => Real.sin (f x)) (Real.cos (f x) • f') x :=\n  (Real.hasStrictDerivAt_sin (f x)).comp_hasStrictFDerivAt x hf\n\n"}
{"name":"HasFDerivAt.sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nf' : ContinuousLinearMap (RingHom.id Real) E Real\nx : E\nhf : HasFDerivAt f f' x\n⊢ HasFDerivAt (fun x => Real.sin (f x)) (HSMul.hSMul (Real.cos (f x)) f') x","decl":"theorem HasFDerivAt.sin (hf : HasFDerivAt f f' x) :\n    HasFDerivAt (fun x => Real.sin (f x)) (Real.cos (f x) • f') x :=\n  (Real.hasDerivAt_sin (f x)).comp_hasFDerivAt x hf\n\n"}
{"name":"HasFDerivWithinAt.sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nf' : ContinuousLinearMap (RingHom.id Real) E Real\nx : E\ns : Set E\nhf : HasFDerivWithinAt f f' s x\n⊢ HasFDerivWithinAt (fun x => Real.sin (f x)) (HSMul.hSMul (Real.cos (f x)) f') s x","decl":"theorem HasFDerivWithinAt.sin (hf : HasFDerivWithinAt f f' s x) :\n    HasFDerivWithinAt (fun x => Real.sin (f x)) (Real.cos (f x) • f') s x :=\n  (Real.hasDerivAt_sin (f x)).comp_hasFDerivWithinAt x hf\n\n"}
{"name":"DifferentiableWithinAt.sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\ns : Set E\nhf : DifferentiableWithinAt Real f s x\n⊢ DifferentiableWithinAt Real (fun x => Real.sin (f x)) s x","decl":"theorem DifferentiableWithinAt.sin (hf : DifferentiableWithinAt ℝ f s x) :\n    DifferentiableWithinAt ℝ (fun x => Real.sin (f x)) s x :=\n  hf.hasFDerivWithinAt.sin.differentiableWithinAt\n\n"}
{"name":"DifferentiableAt.sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\nhc : DifferentiableAt Real f x\n⊢ DifferentiableAt Real (fun x => Real.sin (f x)) x","decl":"@[simp, fun_prop]\ntheorem DifferentiableAt.sin (hc : DifferentiableAt ℝ f x) :\n    DifferentiableAt ℝ (fun x => Real.sin (f x)) x :=\n  hc.hasFDerivAt.sin.differentiableAt\n\n"}
{"name":"DifferentiableOn.sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\ns : Set E\nhc : DifferentiableOn Real f s\n⊢ DifferentiableOn Real (fun x => Real.sin (f x)) s","decl":"theorem DifferentiableOn.sin (hc : DifferentiableOn ℝ f s) :\n    DifferentiableOn ℝ (fun x => Real.sin (f x)) s := fun x h => (hc x h).sin\n\n"}
{"name":"Differentiable.sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nhc : Differentiable Real f\n⊢ Differentiable Real fun x => Real.sin (f x)","decl":"@[simp, fun_prop]\ntheorem Differentiable.sin (hc : Differentiable ℝ f) : Differentiable ℝ fun x => Real.sin (f x) :=\n  fun x => (hc x).sin\n\n"}
{"name":"fderivWithin_sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\ns : Set E\nhf : DifferentiableWithinAt Real f s x\nhxs : UniqueDiffWithinAt Real s x\n⊢ Eq (fderivWithin Real (fun x => Real.sin (f x)) s x) (HSMul.hSMul (Real.cos (f x)) (fderivWithin Real f s x))","decl":"theorem fderivWithin_sin (hf : DifferentiableWithinAt ℝ f s x) (hxs : UniqueDiffWithinAt ℝ s x) :\n    fderivWithin ℝ (fun x => Real.sin (f x)) s x = Real.cos (f x) • fderivWithin ℝ f s x :=\n  hf.hasFDerivWithinAt.sin.fderivWithin hxs\n\n"}
{"name":"fderiv_sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\nhc : DifferentiableAt Real f x\n⊢ Eq (fderiv Real (fun x => Real.sin (f x)) x) (HSMul.hSMul (Real.cos (f x)) (fderiv Real f x))","decl":"@[simp]\ntheorem fderiv_sin (hc : DifferentiableAt ℝ f x) :\n    fderiv ℝ (fun x => Real.sin (f x)) x = Real.cos (f x) • fderiv ℝ f x :=\n  hc.hasFDerivAt.sin.fderiv\n\n"}
{"name":"ContDiff.sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nn : WithTop ENat\nh : ContDiff Real n f\n⊢ ContDiff Real n fun x => Real.sin (f x)","decl":"theorem ContDiff.sin {n} (h : ContDiff ℝ n f) : ContDiff ℝ n fun x => Real.sin (f x) :=\n  Real.contDiff_sin.comp h\n\n"}
{"name":"ContDiffAt.sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\nn : WithTop ENat\nhf : ContDiffAt Real n f x\n⊢ ContDiffAt Real n (fun x => Real.sin (f x)) x","decl":"theorem ContDiffAt.sin {n} (hf : ContDiffAt ℝ n f x) : ContDiffAt ℝ n (fun x => Real.sin (f x)) x :=\n  Real.contDiff_sin.contDiffAt.comp x hf\n\n"}
{"name":"ContDiffOn.sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\ns : Set E\nn : WithTop ENat\nhf : ContDiffOn Real n f s\n⊢ ContDiffOn Real n (fun x => Real.sin (f x)) s","decl":"theorem ContDiffOn.sin {n} (hf : ContDiffOn ℝ n f s) : ContDiffOn ℝ n (fun x => Real.sin (f x)) s :=\n  Real.contDiff_sin.comp_contDiffOn hf\n\n"}
{"name":"ContDiffWithinAt.sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\ns : Set E\nn : WithTop ENat\nhf : ContDiffWithinAt Real n f s x\n⊢ ContDiffWithinAt Real n (fun x => Real.sin (f x)) s x","decl":"theorem ContDiffWithinAt.sin {n} (hf : ContDiffWithinAt ℝ n f s x) :\n    ContDiffWithinAt ℝ n (fun x => Real.sin (f x)) s x :=\n  Real.contDiff_sin.contDiffAt.comp_contDiffWithinAt x hf\n\n"}
{"name":"HasStrictFDerivAt.cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nf' : ContinuousLinearMap (RingHom.id Real) E Real\nx : E\nhf : HasStrictFDerivAt f f' x\n⊢ HasStrictFDerivAt (fun x => Real.cosh (f x)) (HSMul.hSMul (Real.sinh (f x)) f') x","decl":"theorem HasStrictFDerivAt.cosh (hf : HasStrictFDerivAt f f' x) :\n    HasStrictFDerivAt (fun x => Real.cosh (f x)) (Real.sinh (f x) • f') x :=\n  (Real.hasStrictDerivAt_cosh (f x)).comp_hasStrictFDerivAt x hf\n\n"}
{"name":"HasFDerivAt.cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nf' : ContinuousLinearMap (RingHom.id Real) E Real\nx : E\nhf : HasFDerivAt f f' x\n⊢ HasFDerivAt (fun x => Real.cosh (f x)) (HSMul.hSMul (Real.sinh (f x)) f') x","decl":"theorem HasFDerivAt.cosh (hf : HasFDerivAt f f' x) :\n    HasFDerivAt (fun x => Real.cosh (f x)) (Real.sinh (f x) • f') x :=\n  (Real.hasDerivAt_cosh (f x)).comp_hasFDerivAt x hf\n\n"}
{"name":"HasFDerivWithinAt.cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nf' : ContinuousLinearMap (RingHom.id Real) E Real\nx : E\ns : Set E\nhf : HasFDerivWithinAt f f' s x\n⊢ HasFDerivWithinAt (fun x => Real.cosh (f x)) (HSMul.hSMul (Real.sinh (f x)) f') s x","decl":"theorem HasFDerivWithinAt.cosh (hf : HasFDerivWithinAt f f' s x) :\n    HasFDerivWithinAt (fun x => Real.cosh (f x)) (Real.sinh (f x) • f') s x :=\n  (Real.hasDerivAt_cosh (f x)).comp_hasFDerivWithinAt x hf\n\n"}
{"name":"DifferentiableWithinAt.cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\ns : Set E\nhf : DifferentiableWithinAt Real f s x\n⊢ DifferentiableWithinAt Real (fun x => Real.cosh (f x)) s x","decl":"theorem DifferentiableWithinAt.cosh (hf : DifferentiableWithinAt ℝ f s x) :\n    DifferentiableWithinAt ℝ (fun x => Real.cosh (f x)) s x :=\n  hf.hasFDerivWithinAt.cosh.differentiableWithinAt\n\n"}
{"name":"DifferentiableAt.cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\nhc : DifferentiableAt Real f x\n⊢ DifferentiableAt Real (fun x => Real.cosh (f x)) x","decl":"@[simp, fun_prop]\ntheorem DifferentiableAt.cosh (hc : DifferentiableAt ℝ f x) :\n    DifferentiableAt ℝ (fun x => Real.cosh (f x)) x :=\n  hc.hasFDerivAt.cosh.differentiableAt\n\n"}
{"name":"DifferentiableOn.cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\ns : Set E\nhc : DifferentiableOn Real f s\n⊢ DifferentiableOn Real (fun x => Real.cosh (f x)) s","decl":"theorem DifferentiableOn.cosh (hc : DifferentiableOn ℝ f s) :\n    DifferentiableOn ℝ (fun x => Real.cosh (f x)) s := fun x h => (hc x h).cosh\n\n"}
{"name":"Differentiable.cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nhc : Differentiable Real f\n⊢ Differentiable Real fun x => Real.cosh (f x)","decl":"@[simp, fun_prop]\ntheorem Differentiable.cosh (hc : Differentiable ℝ f) : Differentiable ℝ fun x => Real.cosh (f x) :=\n  fun x => (hc x).cosh\n\n"}
{"name":"fderivWithin_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\ns : Set E\nhf : DifferentiableWithinAt Real f s x\nhxs : UniqueDiffWithinAt Real s x\n⊢ Eq (fderivWithin Real (fun x => Real.cosh (f x)) s x) (HSMul.hSMul (Real.sinh (f x)) (fderivWithin Real f s x))","decl":"theorem fderivWithin_cosh (hf : DifferentiableWithinAt ℝ f s x) (hxs : UniqueDiffWithinAt ℝ s x) :\n    fderivWithin ℝ (fun x => Real.cosh (f x)) s x = Real.sinh (f x) • fderivWithin ℝ f s x :=\n  hf.hasFDerivWithinAt.cosh.fderivWithin hxs\n\n"}
{"name":"fderiv_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\nhc : DifferentiableAt Real f x\n⊢ Eq (fderiv Real (fun x => Real.cosh (f x)) x) (HSMul.hSMul (Real.sinh (f x)) (fderiv Real f x))","decl":"@[simp]\ntheorem fderiv_cosh (hc : DifferentiableAt ℝ f x) :\n    fderiv ℝ (fun x => Real.cosh (f x)) x = Real.sinh (f x) • fderiv ℝ f x :=\n  hc.hasFDerivAt.cosh.fderiv\n\n"}
{"name":"ContDiff.cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nn : WithTop ENat\nh : ContDiff Real n f\n⊢ ContDiff Real n fun x => Real.cosh (f x)","decl":"theorem ContDiff.cosh {n} (h : ContDiff ℝ n f) : ContDiff ℝ n fun x => Real.cosh (f x) :=\n  Real.contDiff_cosh.comp h\n\n"}
{"name":"ContDiffAt.cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\nn : WithTop ENat\nhf : ContDiffAt Real n f x\n⊢ ContDiffAt Real n (fun x => Real.cosh (f x)) x","decl":"theorem ContDiffAt.cosh {n} (hf : ContDiffAt ℝ n f x) :\n    ContDiffAt ℝ n (fun x => Real.cosh (f x)) x :=\n  Real.contDiff_cosh.contDiffAt.comp x hf\n\n"}
{"name":"ContDiffOn.cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\ns : Set E\nn : WithTop ENat\nhf : ContDiffOn Real n f s\n⊢ ContDiffOn Real n (fun x => Real.cosh (f x)) s","decl":"theorem ContDiffOn.cosh {n} (hf : ContDiffOn ℝ n f s) :\n    ContDiffOn ℝ n (fun x => Real.cosh (f x)) s :=\n  Real.contDiff_cosh.comp_contDiffOn hf\n\n"}
{"name":"ContDiffWithinAt.cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\ns : Set E\nn : WithTop ENat\nhf : ContDiffWithinAt Real n f s x\n⊢ ContDiffWithinAt Real n (fun x => Real.cosh (f x)) s x","decl":"theorem ContDiffWithinAt.cosh {n} (hf : ContDiffWithinAt ℝ n f s x) :\n    ContDiffWithinAt ℝ n (fun x => Real.cosh (f x)) s x :=\n  Real.contDiff_cosh.contDiffAt.comp_contDiffWithinAt x hf\n\n"}
{"name":"HasStrictFDerivAt.sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nf' : ContinuousLinearMap (RingHom.id Real) E Real\nx : E\nhf : HasStrictFDerivAt f f' x\n⊢ HasStrictFDerivAt (fun x => Real.sinh (f x)) (HSMul.hSMul (Real.cosh (f x)) f') x","decl":"theorem HasStrictFDerivAt.sinh (hf : HasStrictFDerivAt f f' x) :\n    HasStrictFDerivAt (fun x => Real.sinh (f x)) (Real.cosh (f x) • f') x :=\n  (Real.hasStrictDerivAt_sinh (f x)).comp_hasStrictFDerivAt x hf\n\n"}
{"name":"HasFDerivAt.sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nf' : ContinuousLinearMap (RingHom.id Real) E Real\nx : E\nhf : HasFDerivAt f f' x\n⊢ HasFDerivAt (fun x => Real.sinh (f x)) (HSMul.hSMul (Real.cosh (f x)) f') x","decl":"theorem HasFDerivAt.sinh (hf : HasFDerivAt f f' x) :\n    HasFDerivAt (fun x => Real.sinh (f x)) (Real.cosh (f x) • f') x :=\n  (Real.hasDerivAt_sinh (f x)).comp_hasFDerivAt x hf\n\n"}
{"name":"HasFDerivWithinAt.sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nf' : ContinuousLinearMap (RingHom.id Real) E Real\nx : E\ns : Set E\nhf : HasFDerivWithinAt f f' s x\n⊢ HasFDerivWithinAt (fun x => Real.sinh (f x)) (HSMul.hSMul (Real.cosh (f x)) f') s x","decl":"theorem HasFDerivWithinAt.sinh (hf : HasFDerivWithinAt f f' s x) :\n    HasFDerivWithinAt (fun x => Real.sinh (f x)) (Real.cosh (f x) • f') s x :=\n  (Real.hasDerivAt_sinh (f x)).comp_hasFDerivWithinAt x hf\n\n"}
{"name":"DifferentiableWithinAt.sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\ns : Set E\nhf : DifferentiableWithinAt Real f s x\n⊢ DifferentiableWithinAt Real (fun x => Real.sinh (f x)) s x","decl":"theorem DifferentiableWithinAt.sinh (hf : DifferentiableWithinAt ℝ f s x) :\n    DifferentiableWithinAt ℝ (fun x => Real.sinh (f x)) s x :=\n  hf.hasFDerivWithinAt.sinh.differentiableWithinAt\n\n"}
{"name":"DifferentiableAt.sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\nhc : DifferentiableAt Real f x\n⊢ DifferentiableAt Real (fun x => Real.sinh (f x)) x","decl":"@[simp, fun_prop]\ntheorem DifferentiableAt.sinh (hc : DifferentiableAt ℝ f x) :\n    DifferentiableAt ℝ (fun x => Real.sinh (f x)) x :=\n  hc.hasFDerivAt.sinh.differentiableAt\n\n"}
{"name":"DifferentiableOn.sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\ns : Set E\nhc : DifferentiableOn Real f s\n⊢ DifferentiableOn Real (fun x => Real.sinh (f x)) s","decl":"theorem DifferentiableOn.sinh (hc : DifferentiableOn ℝ f s) :\n    DifferentiableOn ℝ (fun x => Real.sinh (f x)) s := fun x h => (hc x h).sinh\n\n"}
{"name":"Differentiable.sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nhc : Differentiable Real f\n⊢ Differentiable Real fun x => Real.sinh (f x)","decl":"@[simp, fun_prop]\ntheorem Differentiable.sinh (hc : Differentiable ℝ f) : Differentiable ℝ fun x => Real.sinh (f x) :=\n  fun x => (hc x).sinh\n\n"}
{"name":"fderivWithin_sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\ns : Set E\nhf : DifferentiableWithinAt Real f s x\nhxs : UniqueDiffWithinAt Real s x\n⊢ Eq (fderivWithin Real (fun x => Real.sinh (f x)) s x) (HSMul.hSMul (Real.cosh (f x)) (fderivWithin Real f s x))","decl":"theorem fderivWithin_sinh (hf : DifferentiableWithinAt ℝ f s x) (hxs : UniqueDiffWithinAt ℝ s x) :\n    fderivWithin ℝ (fun x => Real.sinh (f x)) s x = Real.cosh (f x) • fderivWithin ℝ f s x :=\n  hf.hasFDerivWithinAt.sinh.fderivWithin hxs\n\n"}
{"name":"fderiv_sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\nhc : DifferentiableAt Real f x\n⊢ Eq (fderiv Real (fun x => Real.sinh (f x)) x) (HSMul.hSMul (Real.cosh (f x)) (fderiv Real f x))","decl":"@[simp]\ntheorem fderiv_sinh (hc : DifferentiableAt ℝ f x) :\n    fderiv ℝ (fun x => Real.sinh (f x)) x = Real.cosh (f x) • fderiv ℝ f x :=\n  hc.hasFDerivAt.sinh.fderiv\n\n"}
{"name":"ContDiff.sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nn : WithTop ENat\nh : ContDiff Real n f\n⊢ ContDiff Real n fun x => Real.sinh (f x)","decl":"theorem ContDiff.sinh {n} (h : ContDiff ℝ n f) : ContDiff ℝ n fun x => Real.sinh (f x) :=\n  Real.contDiff_sinh.comp h\n\n"}
{"name":"ContDiffAt.sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\nn : WithTop ENat\nhf : ContDiffAt Real n f x\n⊢ ContDiffAt Real n (fun x => Real.sinh (f x)) x","decl":"theorem ContDiffAt.sinh {n} (hf : ContDiffAt ℝ n f x) :\n    ContDiffAt ℝ n (fun x => Real.sinh (f x)) x :=\n  Real.contDiff_sinh.contDiffAt.comp x hf\n\n"}
{"name":"ContDiffOn.sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\ns : Set E\nn : WithTop ENat\nhf : ContDiffOn Real n f s\n⊢ ContDiffOn Real n (fun x => Real.sinh (f x)) s","decl":"theorem ContDiffOn.sinh {n} (hf : ContDiffOn ℝ n f s) :\n    ContDiffOn ℝ n (fun x => Real.sinh (f x)) s :=\n  Real.contDiff_sinh.comp_contDiffOn hf\n\n"}
{"name":"ContDiffWithinAt.sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\ns : Set E\nn : WithTop ENat\nhf : ContDiffWithinAt Real n f s x\n⊢ ContDiffWithinAt Real n (fun x => Real.sinh (f x)) s x","decl":"theorem ContDiffWithinAt.sinh {n} (hf : ContDiffWithinAt ℝ n f s x) :\n    ContDiffWithinAt ℝ n (fun x => Real.sinh (f x)) s x :=\n  Real.contDiff_sinh.contDiffAt.comp_contDiffWithinAt x hf\n\n"}
{"name":"Complex.logDeriv_sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ Eq (logDeriv Complex.sin) Complex.cot","decl":"@[simp]\ntheorem Complex.logDeriv_sin : logDeriv (Complex.sin) = Complex.cot := by\n  ext\n  rw [logDeriv, Complex.deriv_sin, Pi.div_apply, Complex.cot]\n\n"}
{"name":"Real.logDeriv_sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ Eq (logDeriv Real.sin) Real.cot","decl":"@[simp]\ntheorem Real.logDeriv_sin : logDeriv (Real.sin) = Real.cot := by\n  ext\n  rw [logDeriv, Real.deriv_sin, Pi.div_apply, Real.cot_eq_cos_div_sin]\n\n"}
{"name":"Complex.logDeriv_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ Eq (logDeriv Complex.cos) (Neg.neg Complex.tan)","decl":"@[simp]\ntheorem Complex.logDeriv_cos : logDeriv (Complex.cos) = -Complex.tan := by\n  ext\n  rw [logDeriv, Complex.deriv_cos', Pi.div_apply, Pi.neg_apply, Complex.tan, neg_div]\n\n"}
{"name":"Real.logDeriv_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ Eq (logDeriv Real.cos) (Neg.neg Real.tan)","decl":"@[simp]\ntheorem Real.logDeriv_cos : logDeriv (Real.cos) = -Real.tan := by\n  ext\n  rw [logDeriv, Real.deriv_cos', Pi.div_apply, Pi.neg_apply, neg_div, Real.tan_eq_sin_div_cos ]\n\n"}
{"name":"Complex.logDeriv_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ Eq (logDeriv Complex.cosh) Complex.tanh","decl":"@[simp]\ntheorem Complex.logDeriv_cosh : logDeriv (Complex.cosh) = Complex.tanh := by\n  ext\n  rw [logDeriv, Complex.deriv_cosh, Pi.div_apply, Complex.tanh]\n\n"}
{"name":"Real.logDeriv_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ Eq (logDeriv Real.cosh) Real.tanh","decl":"@[simp]\ntheorem Real.logDeriv_cosh : logDeriv (Real.cosh) = Real.tanh := by\n  ext\n  rw [logDeriv, Real.deriv_cosh, Pi.div_apply, Real.tanh_eq_sinh_div_cosh]\n\n"}
{"name":"Complex.LogDeriv_exp","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ Eq (logDeriv Complex.exp) 1","decl":"@[simp]\ntheorem Complex.LogDeriv_exp : logDeriv (Complex.exp) = 1 := by\n  ext\n  rw [logDeriv, Complex.deriv_exp, Pi.div_apply, ← exp_sub, sub_self, exp_zero, Pi.one_apply]\n\n"}
{"name":"Real.LogDeriv_exp","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv","initialProofState":"⊢ Eq (logDeriv Real.exp) 1","decl":"@[simp]\ntheorem Real.LogDeriv_exp : logDeriv (Real.exp) = 1 := by\n  ext\n  rw [logDeriv, Real.deriv_exp, Pi.div_apply, ← exp_sub, sub_self, exp_zero, Pi.one_apply]\n\n"}
