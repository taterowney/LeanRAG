{"name":"Nat.exists_prime_mul_pow_lt_factorial","module":"Mathlib.Algebra.Order.Floor.Prime","initialProofState":"n a c : Nat\n⊢ Exists fun p => And (GT.gt p n) (And (Nat.Prime p) (LT.lt (HMul.hMul a (HPow.hPow c p)) (HSub.hSub p 1).factorial))","decl":"@[deprecated eventually_mul_pow_lt_factorial_sub (since := \"2024-09-25\")]\ntheorem Nat.exists_prime_mul_pow_lt_factorial (n a c : ℕ) :\n    ∃ p > n, p.Prime ∧ a * c ^ p < (p - 1)! :=\n  ((Filter.frequently_atTop.mpr Nat.exists_infinite_primes).and_eventually\n    (eventually_mul_pow_lt_factorial_sub a c 1)).forall_exists_of_atTop (n + 1)\n\n"}
{"name":"FloorRing.exists_prime_mul_pow_lt_factorial","module":"Mathlib.Algebra.Order.Floor.Prime","initialProofState":"K : Type u_1\ninst✝¹ : LinearOrderedRing K\ninst✝ : FloorRing K\nn : Nat\na c : K\n⊢ Exists fun p => And (GT.gt p n) (And (Nat.Prime p) (LT.lt (HMul.hMul a (HPow.hPow c p)) ↑(HSub.hSub p 1).factorial))","decl":"@[deprecated FloorSemiring.eventually_mul_pow_lt_factorial_sub (since := \"2024-09-25\")]\ntheorem exists_prime_mul_pow_lt_factorial [LinearOrderedRing K] [FloorRing K] (n : ℕ) (a c : K) :\n    ∃ p > n, p.Prime ∧ a * c ^ p < (p - 1)! :=\n  ((Filter.frequently_atTop.mpr Nat.exists_infinite_primes).and_eventually\n    (FloorSemiring.eventually_mul_pow_lt_factorial_sub a c 1)).forall_exists_of_atTop (n + 1)\n\n"}
{"name":"FloorRing.exists_prime_mul_pow_div_factorial_lt_one","module":"Mathlib.Algebra.Order.Floor.Prime","initialProofState":"K : Type u_1\ninst✝¹ : LinearOrderedField K\ninst✝ : FloorRing K\nn : Nat\na c : K\n⊢ Exists fun p => And (GT.gt p n) (And (Nat.Prime p) (LT.lt (HDiv.hDiv (HMul.hMul a (HPow.hPow c p)) ↑(HSub.hSub p 1).factorial) 1))","decl":"@[deprecated FloorSemiring.tendsto_mul_pow_div_factorial_sub_atTop (since := \"2024-09-25\")]\ntheorem exists_prime_mul_pow_div_factorial_lt_one [LinearOrderedField K] [FloorRing K]\n    (n : ℕ) (a c : K) :\n    ∃ p > n, p.Prime ∧ a * c ^ p / (p - 1)! < 1 :=\n  letI := Preorder.topology K\n  haveI : OrderTopology K := ⟨rfl⟩\n  ((Filter.frequently_atTop.mpr Nat.exists_infinite_primes).and_eventually\n    (Filter.Tendsto.eventually_lt_const zero_lt_one\n      (FloorSemiring.tendsto_mul_pow_div_factorial_sub_atTop a c 1))).forall_exists_of_atTop\n    (n + 1)\n\n"}
