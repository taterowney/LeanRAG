{"name":"eq_of_mul_eq_add_eq_one","module":"Mathlib.Algebra.Order.Ring.Idempotent","initialProofState":"α : Type u_1\ninst✝ : Semiring α\na b c : α\nmul : Eq (HMul.hMul a b) (HMul.hMul c a)\nadd_ab : Eq (HAdd.hAdd a b) 1\nadd_ac : Eq (HAdd.hAdd a c) 1\n⊢ Eq b c","decl":"lemma eq_of_mul_eq_add_eq_one [Semiring α] (a : α) {b c : α}\n    (mul : a * b = c * a) (add_ab : a + b = 1) (add_ac : a + c = 1) :\n    b = c :=\n  calc b = (a + c) * b := by rw [add_ac, one_mul]\n       _ = c * (a + b) := by rw [add_mul, mul, mul_add]\n       _ = c := by rw [add_ab, mul_one]\n\n"}
{"name":"mul_eq_zero_add_eq_one_ext_left","module":"Mathlib.Algebra.Order.Ring.Idempotent","initialProofState":"α : Type u_1\ninst✝ : CommSemiring α\na b : Subtype fun a => And (Eq (HMul.hMul a.1 a.2) 0) (Eq (HAdd.hAdd a.1 a.2) 1)\neq : Eq (↑a).1 (↑b).1\n⊢ Eq a b","decl":"lemma mul_eq_zero_add_eq_one_ext_left (eq : a.1.1 = b.1.1) : a = b := by\n  refine Subtype.ext <| Prod.ext_iff.mpr ⟨eq, eq_of_mul_eq_add_eq_one a.1.1 ?_ a.2.2 ?_⟩\n  · rw [a.2.1, mul_comm, eq, b.2.1]\n  · rw [eq, b.2.2]\n\n"}
{"name":"mul_eq_zero_add_eq_one_ext_right","module":"Mathlib.Algebra.Order.Ring.Idempotent","initialProofState":"α : Type u_1\ninst✝ : CommSemiring α\na b : Subtype fun a => And (Eq (HMul.hMul a.1 a.2) 0) (Eq (HAdd.hAdd a.1 a.2) 1)\neq : Eq (↑a).2 (↑b).2\n⊢ Eq a b","decl":"lemma mul_eq_zero_add_eq_one_ext_right (eq : a.1.2 = b.1.2) : a = b := by\n  refine Subtype.ext <| Prod.ext_iff.mpr ⟨eq_of_mul_eq_add_eq_one a.1.2 ?_ ?_ ?_, eq⟩\n  · rw [mul_comm, a.2.1, eq, b.2.1]\n  · rw [add_comm, a.2.2]\n  · rw [add_comm, eq, b.2.2]\n\n"}
