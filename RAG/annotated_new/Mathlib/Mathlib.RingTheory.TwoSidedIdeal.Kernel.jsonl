{"name":"TwoSidedIdeal.ker_ringCon","module":"Mathlib.RingTheory.TwoSidedIdeal.Kernel","initialProofState":"R : Type u_1\nS : Type u_2\ninst✝³ : NonUnitalNonAssocRing R\ninst✝² : NonUnitalNonAssocSemiring S\nF : Type u_3\ninst✝¹ : FunLike F R S\ninst✝ : NonUnitalRingHomClass F R S\nf : F\nx y : R\n⊢ Iff ((TwoSidedIdeal.ker f).ringCon x y) (Eq (f x) (f y))","decl":"@[simp]\nlemma ker_ringCon {x y : R} : (ker f).ringCon x y ↔ f x = f y := Iff.rfl\n\n"}
{"name":"TwoSidedIdeal.mem_ker","module":"Mathlib.RingTheory.TwoSidedIdeal.Kernel","initialProofState":"R : Type u_1\nS : Type u_2\ninst✝³ : NonUnitalNonAssocRing R\ninst✝² : NonUnitalNonAssocSemiring S\nF : Type u_3\ninst✝¹ : FunLike F R S\ninst✝ : NonUnitalRingHomClass F R S\nf : F\nx : R\n⊢ Iff (Membership.mem (TwoSidedIdeal.ker f) x) (Eq (f x) 0)","decl":"lemma mem_ker {x : R} : x ∈ ker f ↔ f x = 0 := by\n  rw [mem_iff, ker_ringCon, map_zero]\n\n"}
{"name":"TwoSidedIdeal.ker_eq_bot","module":"Mathlib.RingTheory.TwoSidedIdeal.Kernel","initialProofState":"R : Type u_1\nS : Type u_2\ninst✝³ : NonUnitalNonAssocRing R\ninst✝² : NonUnitalNonAssocSemiring S\nF : Type u_3\ninst✝¹ : FunLike F R S\ninst✝ : NonUnitalRingHomClass F R S\nf : F\n⊢ Iff (Eq (TwoSidedIdeal.ker f) Bot.bot) (Function.Injective ⇑f)","decl":"lemma ker_eq_bot : ker f = ⊥ ↔ Function.Injective f := by\n  fconstructor\n  · intro h x y hxy\n    simpa [h, rel_iff, mem_bot, sub_eq_zero] using show (ker f).ringCon x y from hxy\n  · exact fun h ↦ eq_bot_iff.2 fun x hx => h hx\n\n"}
{"name":"TwoSidedIdeal.ker_ringCon_mk'","module":"Mathlib.RingTheory.TwoSidedIdeal.Kernel","initialProofState":"R : Type u_4\ninst✝ : NonAssocRing R\nI : TwoSidedIdeal R\n⊢ Eq (TwoSidedIdeal.ker I.ringCon.mk') I","decl":"/--\nThe kernel of the ring homomorphism `R → R⧸I` is `I`.\n-/\n@[simp]\nlemma ker_ringCon_mk' (I : TwoSidedIdeal R) : ker I.ringCon.mk' = I :=\n  le_antisymm\n    (fun _ h => by simpa using I.rel_iff _ _ |>.1 (Quotient.eq'.1 h))\n    (fun _ h => Quotient.sound' <| I.rel_iff _ _ |>.2 (by simpa using h))\n\n"}
