{"name":"ModuleCat.AlternatingMap.ext","module":"Mathlib.Algebra.Category.ModuleCat.ExteriorPower","initialProofState":"R : Type u\ninst✝ : CommRing R\nM : ModuleCat R\nN : ModuleCat R\nn : Nat\nφ φ' : M.AlternatingMap N n\nh : ∀ (x : Fin n → ↑M), Eq (φ x) (φ' x)\n⊢ Eq φ φ'","decl":"@[ext]\nlemma ext {φ φ' : M.AlternatingMap N n} (h : ∀ (x : Fin n → M), φ x = φ' x ) :\n    φ = φ' :=\n  _root_.AlternatingMap.ext h\n\n"}
{"name":"ModuleCat.AlternatingMap.ext_iff","module":"Mathlib.Algebra.Category.ModuleCat.ExteriorPower","initialProofState":"R : Type u\ninst✝ : CommRing R\nM : ModuleCat R\nN : ModuleCat R\nn : Nat\nφ φ' : M.AlternatingMap N n\n⊢ Iff (Eq φ φ') (∀ (x : Fin n → ↑M), Eq (φ x) (φ' x))","decl":"@[ext]\nlemma ext {φ φ' : M.AlternatingMap N n} (h : ∀ (x : Fin n → M), φ x = φ' x ) :\n    φ = φ' :=\n  _root_.AlternatingMap.ext h\n\n"}
{"name":"ModuleCat.AlternatingMap.postcomp_apply","module":"Mathlib.Algebra.Category.ModuleCat.ExteriorPower","initialProofState":"R : Type u\ninst✝ : CommRing R\nM : ModuleCat R\nN : ModuleCat R\nn : Nat\nφ : M.AlternatingMap N n\nN' : ModuleCat R\ng : Quiver.Hom N N'\nx : Fin n → ↑M\n⊢ Eq ((φ.postcomp g) x) ((CategoryTheory.ConcreteCategory.hom g) (φ x))","decl":"@[simp]\nlemma postcomp_apply (x : Fin n → M) :\n    φ.postcomp g x = g (φ x) := rfl\n\n"}
{"name":"ModuleCat.exteriorPower.hom_ext_iff","module":"Mathlib.Algebra.Category.ModuleCat.ExteriorPower","initialProofState":"R : Type u\ninst✝ : CommRing R\nM : ModuleCat R\nN : ModuleCat R\nn : Nat\nf g : Quiver.Hom (M.exteriorPower n) N\n⊢ Iff (Eq f g) (Eq (ModuleCat.exteriorPower.mk.postcomp f) (ModuleCat.exteriorPower.mk.postcomp g))","decl":"@[ext]\nlemma hom_ext {M : ModuleCat.{v} R} {N : ModuleCat.{max u v} R} {n : ℕ}\n    {f g : M.exteriorPower n ⟶ N}\n    (h : mk.postcomp f = mk.postcomp g) : f = g := by\n  ext : 1\n  exact exteriorPower.linearMap_ext h\n\n"}
{"name":"ModuleCat.exteriorPower.hom_ext","module":"Mathlib.Algebra.Category.ModuleCat.ExteriorPower","initialProofState":"R : Type u\ninst✝ : CommRing R\nM : ModuleCat R\nN : ModuleCat R\nn : Nat\nf g : Quiver.Hom (M.exteriorPower n) N\nh : Eq (ModuleCat.exteriorPower.mk.postcomp f) (ModuleCat.exteriorPower.mk.postcomp g)\n⊢ Eq f g","decl":"@[ext]\nlemma hom_ext {M : ModuleCat.{v} R} {N : ModuleCat.{max u v} R} {n : ℕ}\n    {f g : M.exteriorPower n ⟶ N}\n    (h : mk.postcomp f = mk.postcomp g) : f = g := by\n  ext : 1\n  exact exteriorPower.linearMap_ext h\n\n"}
{"name":"ModuleCat.exteriorPower.desc_mk","module":"Mathlib.Algebra.Category.ModuleCat.ExteriorPower","initialProofState":"R : Type u\ninst✝ : CommRing R\nM : ModuleCat R\nn : Nat\nN : ModuleCat R\nφ : M.AlternatingMap N n\nx : Fin n → ↑M\n⊢ Eq ((CategoryTheory.ConcreteCategory.hom (ModuleCat.exteriorPower.desc φ)) (ModuleCat.exteriorPower.mk x)) (φ x)","decl":"@[simp]\nlemma desc_mk {M : ModuleCat.{v} R} {n : ℕ} {N : ModuleCat.{max u v} R}\n    (φ : M.AlternatingMap N n) (x : Fin n → M) :\n    desc φ (mk x) = φ x := by\n  apply exteriorPower.alternatingMapLinearEquiv_apply_ιMulti\n\n"}
{"name":"ModuleCat.exteriorPower.map_mk","module":"Mathlib.Algebra.Category.ModuleCat.ExteriorPower","initialProofState":"R : Type u\ninst✝ : CommRing R\nM N : ModuleCat R\nf : Quiver.Hom M N\nn : Nat\nx : Fin n → ↑M\n⊢ Eq ((CategoryTheory.ConcreteCategory.hom (ModuleCat.exteriorPower.map f n)) (ModuleCat.exteriorPower.mk x)) (ModuleCat.exteriorPower.mk (Function.comp (⇑(CategoryTheory.ConcreteCategory.hom f)) x))","decl":"@[simp]\nlemma map_mk {M N : ModuleCat.{v} R} (f : M ⟶ N) {n : ℕ} (x : Fin n → M) :\n    map f n (mk x) = mk (f ∘ x) := by\n  apply exteriorPower.map_apply_ιMulti\n\n"}
