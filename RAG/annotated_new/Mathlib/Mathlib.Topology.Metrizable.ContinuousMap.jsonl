{"name":"ContinuousMap.instPseudoMetrizableSpace","module":"Mathlib.Topology.Metrizable.ContinuousMap","initialProofState":"X : Type u_1\nY : Type u_2\ninst✝⁴ : TopologicalSpace X\ninst✝³ : WeaklyLocallyCompactSpace X\ninst✝² : SigmaCompactSpace X\ninst✝¹ : TopologicalSpace Y\ninst✝ : TopologicalSpace.PseudoMetrizableSpace Y\n⊢ TopologicalSpace.PseudoMetrizableSpace (ContinuousMap X Y)","decl":"instance [PseudoMetrizableSpace Y] : PseudoMetrizableSpace C(X, Y) :=\n  let _ := pseudoMetrizableSpacePseudoMetric Y\n  inferInstance\n\n"}
{"name":"ContinuousMap.instMetrizableSpace","module":"Mathlib.Topology.Metrizable.ContinuousMap","initialProofState":"X : Type u_1\nY : Type u_2\ninst✝⁴ : TopologicalSpace X\ninst✝³ : WeaklyLocallyCompactSpace X\ninst✝² : SigmaCompactSpace X\ninst✝¹ : TopologicalSpace Y\ninst✝ : TopologicalSpace.MetrizableSpace Y\n⊢ TopologicalSpace.MetrizableSpace (ContinuousMap X Y)","decl":"instance [MetrizableSpace Y] : MetrizableSpace C(X, Y) :=\n  let _ := metrizableSpaceMetric Y\n  UniformSpace.metrizableSpace\n\n"}
