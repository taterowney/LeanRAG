{"name":"ContinuousLinearMap.measurable","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.ContinuousLinearMap","initialProofState":"𝕜 : Type u_2\ninst✝⁸ : NormedField 𝕜\nE : Type u_3\ninst✝⁷ : NormedAddCommGroup E\ninst✝⁶ : NormedSpace 𝕜 E\ninst✝⁵ : MeasurableSpace E\ninst✝⁴ : OpensMeasurableSpace E\nF : Type u_4\ninst✝³ : NormedAddCommGroup F\ninst✝² : NormedSpace 𝕜 F\ninst✝¹ : MeasurableSpace F\ninst✝ : BorelSpace F\nL : ContinuousLinearMap (RingHom.id 𝕜) E F\n⊢ Measurable ⇑L","decl":"@[fun_prop, measurability]\nprotected theorem measurable (L : E →L[𝕜] F) : Measurable L :=\n  L.continuous.measurable\n\n"}
{"name":"ContinuousLinearMap.measurable_comp","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.ContinuousLinearMap","initialProofState":"α : Type u_1\ninst✝⁹ : MeasurableSpace α\n𝕜 : Type u_2\ninst✝⁸ : NormedField 𝕜\nE : Type u_3\ninst✝⁷ : NormedAddCommGroup E\ninst✝⁶ : NormedSpace 𝕜 E\ninst✝⁵ : MeasurableSpace E\ninst✝⁴ : OpensMeasurableSpace E\nF : Type u_4\ninst✝³ : NormedAddCommGroup F\ninst✝² : NormedSpace 𝕜 F\ninst✝¹ : MeasurableSpace F\ninst✝ : BorelSpace F\nL : ContinuousLinearMap (RingHom.id 𝕜) E F\nφ : α → E\nφ_meas : Measurable φ\n⊢ Measurable fun a => L (φ a)","decl":"@[fun_prop]\ntheorem measurable_comp (L : E →L[𝕜] F) {φ : α → E} (φ_meas : Measurable φ) :\n    Measurable fun a : α => L (φ a) :=\n  L.measurable.comp φ_meas\n\n"}
{"name":"ContinuousLinearMap.instBorelSpace","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.ContinuousLinearMap","initialProofState":"𝕜 : Type u_2\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_3\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nF : Type u_4\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\n⊢ BorelSpace (ContinuousLinearMap (RingHom.id 𝕜) E F)","decl":"instance instBorelSpace : BorelSpace (E →L[𝕜] F) :=\n  ⟨rfl⟩\n\n"}
{"name":"ContinuousLinearMap.measurable_apply","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.ContinuousLinearMap","initialProofState":"𝕜 : Type u_2\ninst✝⁶ : NontriviallyNormedField 𝕜\nE : Type u_3\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : NormedSpace 𝕜 E\nF : Type u_4\ninst✝³ : NormedAddCommGroup F\ninst✝² : NormedSpace 𝕜 F\ninst✝¹ : MeasurableSpace F\ninst✝ : BorelSpace F\nx : E\n⊢ Measurable fun f => f x","decl":"@[fun_prop, measurability]\ntheorem measurable_apply [MeasurableSpace F] [BorelSpace F] (x : E) :\n    Measurable fun f : E →L[𝕜] F => f x :=\n  (apply 𝕜 F x).continuous.measurable\n\n"}
{"name":"ContinuousLinearMap.measurable_apply'","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.ContinuousLinearMap","initialProofState":"𝕜 : Type u_2\ninst✝⁸ : NontriviallyNormedField 𝕜\nE : Type u_3\ninst✝⁷ : NormedAddCommGroup E\ninst✝⁶ : NormedSpace 𝕜 E\nF : Type u_4\ninst✝⁵ : NormedAddCommGroup F\ninst✝⁴ : NormedSpace 𝕜 F\ninst✝³ : MeasurableSpace E\ninst✝² : OpensMeasurableSpace E\ninst✝¹ : MeasurableSpace F\ninst✝ : BorelSpace F\n⊢ Measurable fun x f => f x","decl":"@[measurability]\ntheorem measurable_apply' [MeasurableSpace E] [OpensMeasurableSpace E] [MeasurableSpace F]\n    [BorelSpace F] : Measurable fun (x : E) (f : E →L[𝕜] F) => f x :=\n  measurable_pi_lambda _ fun f => f.measurable\n\n"}
{"name":"ContinuousLinearMap.measurable_coe","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.ContinuousLinearMap","initialProofState":"𝕜 : Type u_2\ninst✝⁶ : NontriviallyNormedField 𝕜\nE : Type u_3\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : NormedSpace 𝕜 E\nF : Type u_4\ninst✝³ : NormedAddCommGroup F\ninst✝² : NormedSpace 𝕜 F\ninst✝¹ : MeasurableSpace F\ninst✝ : BorelSpace F\n⊢ Measurable fun f x => f x","decl":"@[measurability]\ntheorem measurable_coe [MeasurableSpace F] [BorelSpace F] :\n    Measurable fun (f : E →L[𝕜] F) (x : E) => f x :=\n  measurable_pi_lambda _ measurable_apply\n\n"}
{"name":"Measurable.apply_continuousLinearMap","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.ContinuousLinearMap","initialProofState":"α : Type u_1\ninst✝⁷ : MeasurableSpace α\n𝕜 : Type u_2\ninst✝⁶ : NontriviallyNormedField 𝕜\nE : Type u_3\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : NormedSpace 𝕜 E\ninst✝³ : MeasurableSpace E\ninst✝² : BorelSpace E\nF : Type u_4\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nφ : α → ContinuousLinearMap (RingHom.id 𝕜) F E\nhφ : Measurable φ\nv : F\n⊢ Measurable fun a => (φ a) v","decl":"@[fun_prop, measurability]\ntheorem Measurable.apply_continuousLinearMap {φ : α → F →L[𝕜] E} (hφ : Measurable φ) (v : F) :\n    Measurable fun a => φ a v :=\n  (ContinuousLinearMap.apply 𝕜 E v).measurable.comp hφ\n\n"}
{"name":"AEMeasurable.apply_continuousLinearMap","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.ContinuousLinearMap","initialProofState":"α : Type u_1\ninst✝⁷ : MeasurableSpace α\n𝕜 : Type u_2\ninst✝⁶ : NontriviallyNormedField 𝕜\nE : Type u_3\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : NormedSpace 𝕜 E\ninst✝³ : MeasurableSpace E\ninst✝² : BorelSpace E\nF : Type u_4\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nφ : α → ContinuousLinearMap (RingHom.id 𝕜) F E\nμ : MeasureTheory.Measure α\nhφ : AEMeasurable φ μ\nv : F\n⊢ AEMeasurable (fun a => (φ a) v) μ","decl":"@[measurability]\ntheorem AEMeasurable.apply_continuousLinearMap {φ : α → F →L[𝕜] E} {μ : Measure α}\n    (hφ : AEMeasurable φ μ) (v : F) : AEMeasurable (fun a => φ a v) μ :=\n  (ContinuousLinearMap.apply 𝕜 E v).measurable.comp_aemeasurable hφ\n\n"}
{"name":"measurable_smul_const","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.ContinuousLinearMap","initialProofState":"α : Type u_1\ninst✝⁸ : MeasurableSpace α\n𝕜 : Type u_2\ninst✝⁷ : NontriviallyNormedField 𝕜\ninst✝⁶ : CompleteSpace 𝕜\ninst✝⁵ : MeasurableSpace 𝕜\ninst✝⁴ : BorelSpace 𝕜\nE : Type u_3\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\ninst✝¹ : MeasurableSpace E\ninst✝ : BorelSpace E\nf : α → 𝕜\nc : E\nhc : Ne c 0\n⊢ Iff (Measurable fun x => HSMul.hSMul (f x) c) (Measurable f)","decl":"theorem measurable_smul_const {f : α → 𝕜} {c : E} (hc : c ≠ 0) :\n    (Measurable fun x => f x • c) ↔ Measurable f :=\n  (isClosedEmbedding_smul_left hc).measurableEmbedding.measurable_comp_iff\n\n"}
{"name":"aemeasurable_smul_const","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.ContinuousLinearMap","initialProofState":"α : Type u_1\ninst✝⁸ : MeasurableSpace α\n𝕜 : Type u_2\ninst✝⁷ : NontriviallyNormedField 𝕜\ninst✝⁶ : CompleteSpace 𝕜\ninst✝⁵ : MeasurableSpace 𝕜\ninst✝⁴ : BorelSpace 𝕜\nE : Type u_3\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\ninst✝¹ : MeasurableSpace E\ninst✝ : BorelSpace E\nf : α → 𝕜\nμ : MeasureTheory.Measure α\nc : E\nhc : Ne c 0\n⊢ Iff (AEMeasurable (fun x => HSMul.hSMul (f x) c) μ) (AEMeasurable f μ)","decl":"theorem aemeasurable_smul_const {f : α → 𝕜} {μ : Measure α} {c : E} (hc : c ≠ 0) :\n    AEMeasurable (fun x => f x • c) μ ↔ AEMeasurable f μ :=\n  (isClosedEmbedding_smul_left hc).measurableEmbedding.aemeasurable_comp_iff\n\n"}
