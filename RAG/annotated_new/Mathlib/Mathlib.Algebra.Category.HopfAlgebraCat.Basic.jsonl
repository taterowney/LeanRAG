{"name":"HopfAlgebraCat.mk.inj","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù : CommRing R\ncarrier‚úù : Type v\ninstRing‚úù : Ring carrier‚úù\ninstHopfAlgebra‚úù : HopfAlgebra R carrier‚úù\ncarrier : Type v\ninstRing : Ring carrier\ninstHopfAlgebra : HopfAlgebra R carrier\nx‚úù : Eq (HopfAlgebraCat.mk carrier‚úù) (HopfAlgebraCat.mk carrier)\n‚ä¢ And (Eq carrier‚úù carrier) (And (HEq instRing‚úù instRing) (HEq instHopfAlgebra‚úù instHopfAlgebra))","decl":"/-- The category of `R`-Hopf algebras. -/\nstructure HopfAlgebraCat where\n  /-- The underlying type. -/\n  carrier : Type v\n  [instRing : Ring carrier]\n  [instHopfAlgebra : HopfAlgebra R carrier]\n\n"}
{"name":"HopfAlgebraCat.mk.injEq","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù : CommRing R\ncarrier‚úù : Type v\ninstRing‚úù : Ring carrier‚úù\ninstHopfAlgebra‚úù : HopfAlgebra R carrier‚úù\ncarrier : Type v\ninstRing : Ring carrier\ninstHopfAlgebra : HopfAlgebra R carrier\n‚ä¢ Eq (Eq (HopfAlgebraCat.mk carrier‚úù) (HopfAlgebraCat.mk carrier)) (And (Eq carrier‚úù carrier) (And (HEq instRing‚úù instRing) (HEq instHopfAlgebra‚úù instHopfAlgebra)))","decl":"/-- The category of `R`-Hopf algebras. -/\nstructure HopfAlgebraCat where\n  /-- The underlying type. -/\n  carrier : Type v\n  [instRing : Ring carrier]\n  [instHopfAlgebra : HopfAlgebra R carrier]\n\n"}
{"name":"HopfAlgebraCat.mk.sizeOf_spec","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù¬π : CommRing R\ninst‚úù : SizeOf R\ncarrier : Type v\ninstRing : Ring carrier\ninstHopfAlgebra : HopfAlgebra R carrier\n‚ä¢ Eq (SizeOf.sizeOf (HopfAlgebraCat.mk carrier)) (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd 1 (SizeOf.sizeOf carrier)) (SizeOf.sizeOf instRing)) (SizeOf.sizeOf instHopfAlgebra))","decl":"/-- The category of `R`-Hopf algebras. -/\nstructure HopfAlgebraCat where\n  /-- The underlying type. -/\n  carrier : Type v\n  [instRing : Ring carrier]\n  [instHopfAlgebra : HopfAlgebra R carrier]\n\n"}
{"name":"HopfAlgebraCat.of_carrier","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù¬≤ : CommRing R\nX : Type v\ninst‚úù¬π : Ring X\ninst‚úù : HopfAlgebra R X\n‚ä¢ Eq (HopfAlgebraCat.of R X).carrier X","decl":"/-- The object in the category of `R`-Hopf algebras associated to an `R`-Hopf algebra. -/\n@[simps]\ndef of (X : Type v) [Ring X] [HopfAlgebra R X] :\n    HopfAlgebraCat R where\n  carrier := X\n\n"}
{"name":"HopfAlgebraCat.of_instRing","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù¬≤ : CommRing R\nX : Type v\ninst‚úù¬π : Ring X\ninst‚úù : HopfAlgebra R X\n‚ä¢ Eq (HopfAlgebraCat.of R X).instRing inst‚úù¬π","decl":"/-- The object in the category of `R`-Hopf algebras associated to an `R`-Hopf algebra. -/\n@[simps]\ndef of (X : Type v) [Ring X] [HopfAlgebra R X] :\n    HopfAlgebraCat R where\n  carrier := X\n\n"}
{"name":"HopfAlgebraCat.of_instHopfAlgebra","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù¬≤ : CommRing R\nX : Type v\ninst‚úù¬π : Ring X\ninst‚úù : HopfAlgebra R X\n‚ä¢ Eq (HopfAlgebraCat.of R X).instHopfAlgebra inst‚úù","decl":"/-- The object in the category of `R`-Hopf algebras associated to an `R`-Hopf algebra. -/\n@[simps]\ndef of (X : Type v) [Ring X] [HopfAlgebra R X] :\n    HopfAlgebraCat R where\n  carrier := X\n\n"}
{"name":"HopfAlgebraCat.of_comul","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù¬≤ : CommRing R\nX : Type v\ninst‚úù¬π : Ring X\ninst‚úù : HopfAlgebra R X\n‚ä¢ Eq CoalgebraStruct.comul CoalgebraStruct.comul","decl":"@[simp]\nlemma of_comul {X : Type v} [Ring X] [HopfAlgebra R X] :\n    Coalgebra.comul (A := of R X) = Coalgebra.comul (R := R) (A := X) := rfl\n\n"}
{"name":"HopfAlgebraCat.of_counit","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù¬≤ : CommRing R\nX : Type v\ninst‚úù¬π : Ring X\ninst‚úù : HopfAlgebra R X\n‚ä¢ Eq CoalgebraStruct.counit CoalgebraStruct.counit","decl":"@[simp]\nlemma of_counit {X : Type v} [Ring X] [HopfAlgebra R X] :\n    Coalgebra.counit (A := of R X) = Coalgebra.counit (R := R) (A := X) := rfl\n\n"}
{"name":"HopfAlgebraCat.Hom.ext_iff","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù : CommRing R\nV W : HopfAlgebraCat R\nx y : V.Hom W\n‚ä¢ Iff (Eq x y) (Eq x.toBialgHom y.toBialgHom)","decl":"/-- A type alias for `BialgHom` to avoid confusion between the categorical and\nalgebraic spellings of composition. -/\n@[ext]\nstructure Hom (V W : HopfAlgebraCat.{v} R) where\n  /-- The underlying `BialgHom`. -/\n  toBialgHom : V ‚Üí‚Çêc[R] W\n\n"}
{"name":"HopfAlgebraCat.Hom.mk.inj","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù : CommRing R\nV W : HopfAlgebraCat R\ntoBialgHom‚úù toBialgHom : BialgHom R V.carrier W.carrier\nx‚úù : Eq { toBialgHom := toBialgHom‚úù } { toBialgHom := toBialgHom }\n‚ä¢ Eq toBialgHom‚úù toBialgHom","decl":"/-- A type alias for `BialgHom` to avoid confusion between the categorical and\nalgebraic spellings of composition. -/\n@[ext]\nstructure Hom (V W : HopfAlgebraCat.{v} R) where\n  /-- The underlying `BialgHom`. -/\n  toBialgHom : V ‚Üí‚Çêc[R] W\n\n"}
{"name":"HopfAlgebraCat.Hom.ext","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù : CommRing R\nV W : HopfAlgebraCat R\nx y : V.Hom W\ntoBialgHom : Eq x.toBialgHom y.toBialgHom\n‚ä¢ Eq x y","decl":"/-- A type alias for `BialgHom` to avoid confusion between the categorical and\nalgebraic spellings of composition. -/\n@[ext]\nstructure Hom (V W : HopfAlgebraCat.{v} R) where\n  /-- The underlying `BialgHom`. -/\n  toBialgHom : V ‚Üí‚Çêc[R] W\n\n"}
{"name":"HopfAlgebraCat.Hom.mk.injEq","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù : CommRing R\nV W : HopfAlgebraCat R\ntoBialgHom‚úù toBialgHom : BialgHom R V.carrier W.carrier\n‚ä¢ Eq (Eq { toBialgHom := toBialgHom‚úù } { toBialgHom := toBialgHom }) (Eq toBialgHom‚úù toBialgHom)","decl":"/-- A type alias for `BialgHom` to avoid confusion between the categorical and\nalgebraic spellings of composition. -/\n@[ext]\nstructure Hom (V W : HopfAlgebraCat.{v} R) where\n  /-- The underlying `BialgHom`. -/\n  toBialgHom : V ‚Üí‚Çêc[R] W\n\n"}
{"name":"HopfAlgebraCat.Hom.mk.sizeOf_spec","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù¬π : CommRing R\nV W : HopfAlgebraCat R\ninst‚úù : SizeOf R\ntoBialgHom : BialgHom R V.carrier W.carrier\n‚ä¢ Eq (SizeOf.sizeOf { toBialgHom := toBialgHom }) (HAdd.hAdd 1 (SizeOf.sizeOf toBialgHom))","decl":"/-- A type alias for `BialgHom` to avoid confusion between the categorical and\nalgebraic spellings of composition. -/\n@[ext]\nstructure Hom (V W : HopfAlgebraCat.{v} R) where\n  /-- The underlying `BialgHom`. -/\n  toBialgHom : V ‚Üí‚Çêc[R] W\n\n"}
{"name":"HopfAlgebraCat.Hom.toBialgHom_injective","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù : CommRing R\nV W : HopfAlgebraCat R\n‚ä¢ Function.Injective HopfAlgebraCat.Hom.toBialgHom","decl":"lemma Hom.toBialgHom_injective (V W : HopfAlgebraCat.{v} R) :\n    Function.Injective (Hom.toBialgHom : Hom V W ‚Üí _) :=\n  fun ‚ü®f‚ü© ‚ü®g‚ü© _ => by congr\n\n"}
{"name":"HopfAlgebraCat.hom_ext","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù : CommRing R\nX Y : HopfAlgebraCat R\nf g : Quiver.Hom X Y\nh : Eq f.toBialgHom g.toBialgHom\n‚ä¢ Eq f g","decl":"@[ext]\nlemma hom_ext {X Y : HopfAlgebraCat.{v} R} (f g : X ‚ü∂ Y) (h : f.toBialgHom = g.toBialgHom) :\n    f = g :=\n  Hom.ext h\n\n"}
{"name":"HopfAlgebraCat.hom_ext_iff","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù : CommRing R\nX Y : HopfAlgebraCat R\nf g : Quiver.Hom X Y\n‚ä¢ Iff (Eq f g) (Eq f.toBialgHom g.toBialgHom)","decl":"@[ext]\nlemma hom_ext {X Y : HopfAlgebraCat.{v} R} (f g : X ‚ü∂ Y) (h : f.toBialgHom = g.toBialgHom) :\n    f = g :=\n  Hom.ext h\n\n"}
{"name":"HopfAlgebraCat.toBialgHom_comp","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù : CommRing R\nX Y Z : HopfAlgebraCat R\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp f g).toBialgHom (g.toBialgHom.comp f.toBialgHom)","decl":"@[simp] theorem toBialgHom_comp {X Y Z : HopfAlgebraCat.{v} R} (f : X ‚ü∂ Y) (g : Y ‚ü∂ Z) :\n    (f ‚â´ g).toBialgHom = g.toBialgHom.comp f.toBialgHom :=\n  rfl\n\n"}
{"name":"HopfAlgebraCat.toBialgHom_id","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù : CommRing R\nM : HopfAlgebraCat R\n‚ä¢ Eq (CategoryTheory.CategoryStruct.id M).toBialgHom (BialgHom.id R M.carrier)","decl":"@[simp] theorem toBialgHom_id {M : HopfAlgebraCat.{v} R} :\n    Hom.toBialgHom (ùüô M) = BialgHom.id _ _ :=\n  rfl\n\n"}
{"name":"HopfAlgebraCat.forget‚ÇÇ_bialgebra_obj","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù : CommRing R\nX : HopfAlgebraCat R\n‚ä¢ Eq ((CategoryTheory.forget‚ÇÇ (HopfAlgebraCat R) (BialgebraCat R)).obj X) (BialgebraCat.of R X.carrier)","decl":"@[simp]\ntheorem forget‚ÇÇ_bialgebra_obj (X : HopfAlgebraCat R) :\n    (forget‚ÇÇ (HopfAlgebraCat R) (BialgebraCat R)).obj X = BialgebraCat.of R X :=\n  rfl\n\n"}
{"name":"HopfAlgebraCat.forget‚ÇÇ_bialgebra_map","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù : CommRing R\nX Y : HopfAlgebraCat R\nf : Quiver.Hom X Y\n‚ä¢ Eq ((CategoryTheory.forget‚ÇÇ (HopfAlgebraCat R) (BialgebraCat R)).map f) (BialgebraCat.ofHom f.toBialgHom)","decl":"@[simp]\ntheorem forget‚ÇÇ_bialgebra_map (X Y : HopfAlgebraCat R) (f : X ‚ü∂ Y) :\n    (forget‚ÇÇ (HopfAlgebraCat R) (BialgebraCat R)).map f = BialgebraCat.ofHom f.toBialgHom :=\n  rfl\n\n"}
{"name":"BialgEquiv.toHopfAlgebraCatIso_inv_toBialgHom","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù‚Å¥ : CommRing R\nX Y : Type v\ninst‚úù¬≥ : Ring X\ninst‚úù¬≤ : Ring Y\ninst‚úù¬π : HopfAlgebra R X\ninst‚úù : HopfAlgebra R Y\ne : BialgEquiv R X Y\n‚ä¢ Eq e.toHopfAlgebraCatIso.inv.toBialgHom ‚Üëe.symm","decl":"/-- Build an isomorphism in the category `HopfAlgebraCat R` from a\n`BialgEquiv`. -/\n@[simps]\ndef toHopfAlgebraCatIso (e : X ‚âÉ‚Çêc[R] Y) : HopfAlgebraCat.of R X ‚âÖ HopfAlgebraCat.of R Y where\n  hom := HopfAlgebraCat.ofHom e\n  inv := HopfAlgebraCat.ofHom e.symm\n  hom_inv_id := Hom.ext <| DFunLike.ext _ _ e.left_inv\n  inv_hom_id := Hom.ext <| DFunLike.ext _ _ e.right_inv\n\n"}
{"name":"BialgEquiv.toHopfAlgebraCatIso_hom_toBialgHom","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù‚Å¥ : CommRing R\nX Y : Type v\ninst‚úù¬≥ : Ring X\ninst‚úù¬≤ : Ring Y\ninst‚úù¬π : HopfAlgebra R X\ninst‚úù : HopfAlgebra R Y\ne : BialgEquiv R X Y\n‚ä¢ Eq e.toHopfAlgebraCatIso.hom.toBialgHom ‚Üëe","decl":"/-- Build an isomorphism in the category `HopfAlgebraCat R` from a\n`BialgEquiv`. -/\n@[simps]\ndef toHopfAlgebraCatIso (e : X ‚âÉ‚Çêc[R] Y) : HopfAlgebraCat.of R X ‚âÖ HopfAlgebraCat.of R Y where\n  hom := HopfAlgebraCat.ofHom e\n  inv := HopfAlgebraCat.ofHom e.symm\n  hom_inv_id := Hom.ext <| DFunLike.ext _ _ e.left_inv\n  inv_hom_id := Hom.ext <| DFunLike.ext _ _ e.right_inv\n\n"}
{"name":"BialgEquiv.toHopfAlgebraCatIso_refl","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù¬≤ : CommRing R\nX : Type v\ninst‚úù¬π : Ring X\ninst‚úù : HopfAlgebra R X\n‚ä¢ Eq (BialgEquiv.refl R X).toHopfAlgebraCatIso (CategoryTheory.Iso.refl (HopfAlgebraCat.of R X))","decl":"@[simp] theorem toHopfAlgebraCatIso_refl :\n    toHopfAlgebraCatIso (BialgEquiv.refl R X) = .refl _ :=\n  rfl\n\n"}
{"name":"BialgEquiv.toHopfAlgebraCatIso_symm","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù‚Å¥ : CommRing R\nX Y : Type v\ninst‚úù¬≥ : Ring X\ninst‚úù¬≤ : Ring Y\ninst‚úù¬π : HopfAlgebra R X\ninst‚úù : HopfAlgebra R Y\ne : BialgEquiv R X Y\n‚ä¢ Eq e.symm.toHopfAlgebraCatIso e.toHopfAlgebraCatIso.symm","decl":"@[simp] theorem toHopfAlgebraCatIso_symm (e : X ‚âÉ‚Çêc[R] Y) :\n    toHopfAlgebraCatIso e.symm = (toHopfAlgebraCatIso e).symm :=\n  rfl\n\n"}
{"name":"BialgEquiv.toHopfAlgebraCatIso_trans","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù‚Å∂ : CommRing R\nX Y Z : Type v\ninst‚úù‚Åµ : Ring X\ninst‚úù‚Å¥ : Ring Y\ninst‚úù¬≥ : Ring Z\ninst‚úù¬≤ : HopfAlgebra R X\ninst‚úù¬π : HopfAlgebra R Y\ninst‚úù : HopfAlgebra R Z\ne : BialgEquiv R X Y\nf : BialgEquiv R Y Z\n‚ä¢ Eq (e.trans f).toHopfAlgebraCatIso (e.toHopfAlgebraCatIso.trans f.toHopfAlgebraCatIso)","decl":"@[simp] theorem toHopfAlgebraCatIso_trans (e : X ‚âÉ‚Çêc[R] Y) (f : Y ‚âÉ‚Çêc[R] Z) :\n    toHopfAlgebraCatIso (e.trans f) = toHopfAlgebraCatIso e ‚â™‚â´ toHopfAlgebraCatIso f :=\n  rfl\n\n"}
{"name":"CategoryTheory.Iso.toHopfAlgEquiv_toBialgHom","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù : CommRing R\nX Y : HopfAlgebraCat R\ni : CategoryTheory.Iso X Y\n‚ä¢ Eq (‚Üëi.toHopfAlgEquiv) i.hom.toBialgHom","decl":"@[simp] theorem toHopfAlgEquiv_toBialgHom (i : X ‚âÖ Y) :\n    (i.toHopfAlgEquiv : X ‚Üí‚Çêc[R] Y) = i.hom.1 := rfl\n\n"}
{"name":"CategoryTheory.Iso.toHopfAlgEquiv_refl","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù : CommRing R\nX : HopfAlgebraCat R\n‚ä¢ Eq (CategoryTheory.Iso.refl X).toHopfAlgEquiv (BialgEquiv.refl R X.carrier)","decl":"@[simp] theorem toHopfAlgEquiv_refl : toHopfAlgEquiv (.refl X) = .refl _ _ :=\n  rfl\n\n"}
{"name":"CategoryTheory.Iso.toHopfAlgEquiv_symm","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù : CommRing R\nX Y : HopfAlgebraCat R\ne : CategoryTheory.Iso X Y\n‚ä¢ Eq e.symm.toHopfAlgEquiv e.toHopfAlgEquiv.symm","decl":"@[simp] theorem toHopfAlgEquiv_symm (e : X ‚âÖ Y) :\n    toHopfAlgEquiv e.symm = (toHopfAlgEquiv e).symm :=\n  rfl\n\n"}
{"name":"CategoryTheory.Iso.toHopfAlgEquiv_trans","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù : CommRing R\nX Y Z : HopfAlgebraCat R\ne : CategoryTheory.Iso X Y\nf : CategoryTheory.Iso Y Z\n‚ä¢ Eq (e.trans f).toHopfAlgEquiv (e.toHopfAlgEquiv.trans f.toHopfAlgEquiv)","decl":"@[simp] theorem toHopfAlgEquiv_trans (e : X ‚âÖ Y) (f : Y ‚âÖ Z) :\n    toHopfAlgEquiv (e ‚â™‚â´ f) = e.toHopfAlgEquiv.trans f.toHopfAlgEquiv :=\n  rfl\n\n"}
{"name":"HopfAlgebraCat.forget_reflects_isos","module":"Mathlib.Algebra.Category.HopfAlgebraCat.Basic","initialProofState":"R : Type u\ninst‚úù : CommRing R\n‚ä¢ (CategoryTheory.forget (HopfAlgebraCat R)).ReflectsIsomorphisms","decl":"instance HopfAlgebraCat.forget_reflects_isos :\n    (forget (HopfAlgebraCat.{v} R)).ReflectsIsomorphisms where\n  reflects {X Y} f _ := by\n    let i := asIso ((forget (HopfAlgebraCat.{v} R)).map f)\n    let e : X ‚âÉ‚Çêc[R] Y := { f.toBialgHom, i.toEquiv with }\n    exact ‚ü®e.toHopfAlgebraCatIso.isIso_hom.1‚ü©\n"}
