{"name":"LinearIsometryEquiv.coe_toMeasureEquiv","module":"Mathlib.MeasureTheory.Measure.Haar.InnerProductSpace","initialProofState":"E : Type u_2\nF : Type u_3\ninst✝⁷ : NormedAddCommGroup F\ninst✝⁶ : InnerProductSpace Real F\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : InnerProductSpace Real E\ninst✝³ : MeasurableSpace E\ninst✝² : BorelSpace E\ninst✝¹ : MeasurableSpace F\ninst✝ : BorelSpace F\nf : LinearIsometryEquiv (RingHom.id Real) E F\n⊢ Eq ⇑f.toMeasureEquiv ⇑f","decl":"@[simp] theorem coe_toMeasureEquiv : (f.toMeasureEquiv : E → F) = f := rfl\n\n"}
{"name":"LinearIsometryEquiv.toMeasureEquiv_symm","module":"Mathlib.MeasureTheory.Measure.Haar.InnerProductSpace","initialProofState":"E : Type u_2\nF : Type u_3\ninst✝⁷ : NormedAddCommGroup F\ninst✝⁶ : InnerProductSpace Real F\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : InnerProductSpace Real E\ninst✝³ : MeasurableSpace E\ninst✝² : BorelSpace E\ninst✝¹ : MeasurableSpace F\ninst✝ : BorelSpace F\nf : LinearIsometryEquiv (RingHom.id Real) E F\n⊢ Eq f.toMeasureEquiv.symm f.symm.toMeasureEquiv","decl":"theorem toMeasureEquiv_symm : f.toMeasureEquiv.symm = f.symm.toMeasureEquiv := rfl\n\n"}
{"name":"Orientation.measure_orthonormalBasis","module":"Mathlib.MeasureTheory.Measure.Haar.InnerProductSpace","initialProofState":"ι : Type u_1\nF : Type u_3\ninst✝⁵ : NormedAddCommGroup F\ninst✝⁴ : InnerProductSpace Real F\ninst✝³ : MeasurableSpace F\ninst✝² : BorelSpace F\ninst✝¹ : Fintype ι\ninst✝ : FiniteDimensional Real F\nn : Nat\n_i : Fact (Eq (Module.finrank Real F) n)\no : Orientation Real F (Fin n)\nb : OrthonormalBasis ι Real F\n⊢ Eq (o.volumeForm.measure (parallelepiped ⇑b)) 1","decl":"/-- The volume form coming from an orientation in an inner product space gives measure `1` to the\nparallelepiped associated to any orthonormal basis. This is a rephrasing of\n`abs_volumeForm_apply_of_orthonormal` in terms of measures. -/\ntheorem Orientation.measure_orthonormalBasis (o : Orientation ℝ F (Fin n))\n    (b : OrthonormalBasis ι ℝ F) : o.volumeForm.measure (parallelepiped b) = 1 := by\n  have e : ι ≃ Fin n := by\n    refine Fintype.equivFinOfCardEq ?_\n    rw [← _i.out, finrank_eq_card_basis b.toBasis]\n  have A : ⇑b = b.reindex e ∘ e := by\n    ext x\n    simp only [OrthonormalBasis.coe_reindex, Function.comp_apply, Equiv.symm_apply_apply]\n  rw [A, parallelepiped_comp_equiv, AlternatingMap.measure_parallelepiped,\n    o.abs_volumeForm_apply_of_orthonormal, ENNReal.ofReal_one]\n\n"}
{"name":"Orientation.measure_eq_volume","module":"Mathlib.MeasureTheory.Measure.Haar.InnerProductSpace","initialProofState":"F : Type u_3\ninst✝⁴ : NormedAddCommGroup F\ninst✝³ : InnerProductSpace Real F\ninst✝² : MeasurableSpace F\ninst✝¹ : BorelSpace F\ninst✝ : FiniteDimensional Real F\nn : Nat\n_i : Fact (Eq (Module.finrank Real F) n)\no : Orientation Real F (Fin n)\n⊢ Eq o.volumeForm.measure MeasureTheory.MeasureSpace.volume","decl":"/-- In an oriented inner product space, the measure coming from the canonical volume form\nassociated to an orientation coincides with the volume. -/\ntheorem Orientation.measure_eq_volume (o : Orientation ℝ F (Fin n)) :\n    o.volumeForm.measure = volume := by\n  have A : o.volumeForm.measure (stdOrthonormalBasis ℝ F).toBasis.parallelepiped = 1 :=\n    Orientation.measure_orthonormalBasis o (stdOrthonormalBasis ℝ F)\n  rw [addHaarMeasure_unique o.volumeForm.measure\n    (stdOrthonormalBasis ℝ F).toBasis.parallelepiped, A, one_smul]\n  simp only [volume, Basis.addHaar]\n\n"}
{"name":"OrthonormalBasis.volume_parallelepiped","module":"Mathlib.MeasureTheory.Measure.Haar.InnerProductSpace","initialProofState":"ι : Type u_1\nF : Type u_3\ninst✝⁵ : NormedAddCommGroup F\ninst✝⁴ : InnerProductSpace Real F\ninst✝³ : MeasurableSpace F\ninst✝² : BorelSpace F\ninst✝¹ : Fintype ι\ninst✝ : FiniteDimensional Real F\nb : OrthonormalBasis ι Real F\n⊢ Eq (MeasureTheory.MeasureSpace.volume (parallelepiped ⇑b)) 1","decl":"/-- The volume measure in a finite-dimensional inner product space gives measure `1` to the\nparallelepiped spanned by any orthonormal basis. -/\ntheorem OrthonormalBasis.volume_parallelepiped (b : OrthonormalBasis ι ℝ F) :\n    volume (parallelepiped b) = 1 := by\n  haveI : Fact (finrank ℝ F = finrank ℝ F) := ⟨rfl⟩\n  let o := (stdOrthonormalBasis ℝ F).toBasis.orientation\n  rw [← o.measure_eq_volume]\n  exact o.measure_orthonormalBasis b\n\n"}
{"name":"OrthonormalBasis.addHaar_eq_volume","module":"Mathlib.MeasureTheory.Measure.Haar.InnerProductSpace","initialProofState":"ι : Type u_4\nF : Type u_5\ninst✝⁵ : Fintype ι\ninst✝⁴ : NormedAddCommGroup F\ninst✝³ : InnerProductSpace Real F\ninst✝² : FiniteDimensional Real F\ninst✝¹ : MeasurableSpace F\ninst✝ : BorelSpace F\nb : OrthonormalBasis ι Real F\n⊢ Eq b.toBasis.addHaar MeasureTheory.MeasureSpace.volume","decl":"/-- The Haar measure defined by any orthonormal basis of a finite-dimensional inner product space\nis equal to its volume measure. -/\ntheorem OrthonormalBasis.addHaar_eq_volume {ι F : Type*} [Fintype ι] [NormedAddCommGroup F]\n    [InnerProductSpace ℝ F] [FiniteDimensional ℝ F] [MeasurableSpace F] [BorelSpace F]\n    (b : OrthonormalBasis ι ℝ F) :\n    b.toBasis.addHaar = volume := by\n  rw [Basis.addHaar_eq_iff]\n  exact b.volume_parallelepiped\n\n"}
{"name":"OrthonormalBasis.measurePreserving_measurableEquiv","module":"Mathlib.MeasureTheory.Measure.Haar.InnerProductSpace","initialProofState":"ι : Type u_1\nF : Type u_3\ninst✝⁵ : NormedAddCommGroup F\ninst✝⁴ : InnerProductSpace Real F\ninst✝³ : MeasurableSpace F\ninst✝² : BorelSpace F\ninst✝¹ : Fintype ι\ninst✝ : FiniteDimensional Real F\nb : OrthonormalBasis ι Real F\n⊢ MeasureTheory.MeasurePreserving (⇑b.measurableEquiv) MeasureTheory.MeasureSpace.volume MeasureTheory.MeasureSpace.volume","decl":"/-- The measurable equivalence defined by an orthonormal basis is volume preserving. -/\ntheorem OrthonormalBasis.measurePreserving_measurableEquiv (b : OrthonormalBasis ι ℝ F) :\n    MeasurePreserving b.measurableEquiv volume volume := by\n  convert (b.measurableEquiv.symm.measurable.measurePreserving _).symm\n  rw [← (EuclideanSpace.basisFun ι ℝ).addHaar_eq_volume]\n  erw [MeasurableEquiv.coe_toEquiv_symm, Basis.map_addHaar _ b.repr.symm.toContinuousLinearEquiv]\n  exact b.addHaar_eq_volume.symm\n\n"}
{"name":"OrthonormalBasis.measurePreserving_repr","module":"Mathlib.MeasureTheory.Measure.Haar.InnerProductSpace","initialProofState":"ι : Type u_1\nF : Type u_3\ninst✝⁵ : NormedAddCommGroup F\ninst✝⁴ : InnerProductSpace Real F\ninst✝³ : MeasurableSpace F\ninst✝² : BorelSpace F\ninst✝¹ : Fintype ι\ninst✝ : FiniteDimensional Real F\nb : OrthonormalBasis ι Real F\n⊢ MeasureTheory.MeasurePreserving (⇑b.repr) MeasureTheory.MeasureSpace.volume MeasureTheory.MeasureSpace.volume","decl":"theorem OrthonormalBasis.measurePreserving_repr (b : OrthonormalBasis ι ℝ F) :\n    MeasurePreserving b.repr volume volume := b.measurePreserving_measurableEquiv\n\n"}
{"name":"OrthonormalBasis.measurePreserving_repr_symm","module":"Mathlib.MeasureTheory.Measure.Haar.InnerProductSpace","initialProofState":"ι : Type u_1\nF : Type u_3\ninst✝⁵ : NormedAddCommGroup F\ninst✝⁴ : InnerProductSpace Real F\ninst✝³ : MeasurableSpace F\ninst✝² : BorelSpace F\ninst✝¹ : Fintype ι\ninst✝ : FiniteDimensional Real F\nb : OrthonormalBasis ι Real F\n⊢ MeasureTheory.MeasurePreserving (⇑b.repr.symm) MeasureTheory.MeasureSpace.volume MeasureTheory.MeasureSpace.volume","decl":"theorem OrthonormalBasis.measurePreserving_repr_symm (b : OrthonormalBasis ι ℝ F) :\n    MeasurePreserving b.repr.symm volume volume := b.measurePreserving_measurableEquiv.symm\n\n"}
{"name":"EuclideanSpace.volume_preserving_measurableEquiv","module":"Mathlib.MeasureTheory.Measure.Haar.InnerProductSpace","initialProofState":"ι : Type u_4\ninst✝ : Fintype ι\n⊢ MeasureTheory.MeasurePreserving (⇑(EuclideanSpace.measurableEquiv ι)) MeasureTheory.MeasureSpace.volume MeasureTheory.MeasureSpace.volume","decl":"/-- The measure equivalence between `EuclideanSpace ℝ ι` and `ι → ℝ` is volume preserving. -/\ntheorem EuclideanSpace.volume_preserving_measurableEquiv :\n    MeasurePreserving (EuclideanSpace.measurableEquiv ι) := by\n  suffices volume = map (EuclideanSpace.measurableEquiv ι).symm volume by\n    convert ((EuclideanSpace.measurableEquiv ι).symm.measurable.measurePreserving _).symm\n  rw [← addHaarMeasure_eq_volume_pi, ← Basis.parallelepiped_basisFun, ← Basis.addHaar_def,\n    coe_measurableEquiv_symm, ← PiLp.continuousLinearEquiv_symm_apply 2 ℝ, Basis.map_addHaar]\n  exact (EuclideanSpace.basisFun _ _).addHaar_eq_volume.symm\n\n"}
{"name":"PiLp.volume_preserving_equiv","module":"Mathlib.MeasureTheory.Measure.Haar.InnerProductSpace","initialProofState":"ι : Type u_4\ninst✝ : Fintype ι\n⊢ MeasureTheory.MeasurePreserving (⇑(WithLp.equiv 2 (ι → Real))) MeasureTheory.MeasureSpace.volume MeasureTheory.MeasureSpace.volume","decl":"/-- A copy of `EuclideanSpace.volume_preserving_measurableEquiv` for the canonical spelling of the\nequivalence. -/\ntheorem PiLp.volume_preserving_equiv : MeasurePreserving (WithLp.equiv 2 (ι → ℝ)) :=\n  EuclideanSpace.volume_preserving_measurableEquiv ι\n\n"}
{"name":"PiLp.volume_preserving_equiv_symm","module":"Mathlib.MeasureTheory.Measure.Haar.InnerProductSpace","initialProofState":"ι : Type u_4\ninst✝ : Fintype ι\n⊢ MeasureTheory.MeasurePreserving (⇑(WithLp.equiv 2 (ι → Real)).symm) MeasureTheory.MeasureSpace.volume MeasureTheory.MeasureSpace.volume","decl":"/-- The reverse direction of `PiLp.volume_preserving_measurableEquiv`, since\n`MeasurePreserving.symm` only works for `MeasurableEquiv`s. -/\ntheorem PiLp.volume_preserving_equiv_symm : MeasurePreserving (WithLp.equiv 2 (ι → ℝ)).symm :=\n  (EuclideanSpace.volume_preserving_measurableEquiv ι).symm\n\n"}
{"name":"volume_euclideanSpace_eq_dirac","module":"Mathlib.MeasureTheory.Measure.Haar.InnerProductSpace","initialProofState":"ι : Type u_4\ninst✝¹ : Fintype ι\ninst✝ : IsEmpty ι\n⊢ Eq MeasureTheory.MeasureSpace.volume (MeasureTheory.Measure.dirac 0)","decl":"lemma volume_euclideanSpace_eq_dirac [IsEmpty ι] :\n    (volume : Measure (EuclideanSpace ℝ ι)) = Measure.dirac 0 := by\n  rw [← ((EuclideanSpace.volume_preserving_measurableEquiv ι).symm).map_eq,\n    volume_pi_eq_dirac 0, map_dirac (MeasurableEquiv.measurable _),\n    EuclideanSpace.coe_measurableEquiv_symm, WithLp.equiv_symm_zero]\n\n"}
{"name":"LinearIsometryEquiv.measurePreserving","module":"Mathlib.MeasureTheory.Measure.Haar.InnerProductSpace","initialProofState":"E : Type u_2\nF : Type u_3\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : InnerProductSpace Real F\ninst✝⁷ : NormedAddCommGroup E\ninst✝⁶ : InnerProductSpace Real E\ninst✝⁵ : MeasurableSpace E\ninst✝⁴ : BorelSpace E\ninst✝³ : MeasurableSpace F\ninst✝² : BorelSpace F\ninst✝¹ : FiniteDimensional Real E\ninst✝ : FiniteDimensional Real F\nf : LinearIsometryEquiv (RingHom.id Real) E F\n⊢ MeasureTheory.MeasurePreserving (⇑f) MeasureTheory.MeasureSpace.volume MeasureTheory.MeasureSpace.volume","decl":"/-- Every linear isometry on a real finite dimensional Hilbert space is measure-preserving. -/\ntheorem measurePreserving (f : E ≃ₗᵢ[ℝ] F) :\n    MeasurePreserving f := by\n  refine ⟨f.continuous.measurable, ?_⟩\n  rcases exists_orthonormalBasis ℝ E with ⟨w, b, _hw⟩\n  erw [← OrthonormalBasis.addHaar_eq_volume b, ← OrthonormalBasis.addHaar_eq_volume (b.map f),\n    Basis.map_addHaar _ f.toContinuousLinearEquiv]\n  congr\n\n"}
