{"name":"dense_iInter_of_isOpen_nat","module":"Mathlib.Topology.Baire.Lemmas","initialProofState":"X : Type u_1\ninst✝¹ : TopologicalSpace X\ninst✝ : BaireSpace X\nf : Nat → Set X\nho : ∀ (n : Nat), IsOpen (f n)\nhd : ∀ (n : Nat), Dense (f n)\n⊢ Dense (Set.iInter fun n => f n)","decl":"/-- Definition of a Baire space. -/\ntheorem dense_iInter_of_isOpen_nat {f : ℕ → Set X} (ho : ∀ n, IsOpen (f n))\n    (hd : ∀ n, Dense (f n)) : Dense (⋂ n, f n) :=\n  BaireSpace.baire_property f ho hd\n\n"}
{"name":"dense_sInter_of_isOpen","module":"Mathlib.Topology.Baire.Lemmas","initialProofState":"X : Type u_1\ninst✝¹ : TopologicalSpace X\ninst✝ : BaireSpace X\nS : Set (Set X)\nho : ∀ (s : Set X), Membership.mem S s → IsOpen s\nhS : S.Countable\nhd : ∀ (s : Set X), Membership.mem S s → Dense s\n⊢ Dense S.sInter","decl":"/-- Baire theorem: a countable intersection of dense open sets is dense. Formulated here with ⋂₀. -/\ntheorem dense_sInter_of_isOpen {S : Set (Set X)} (ho : ∀ s ∈ S, IsOpen s) (hS : S.Countable)\n    (hd : ∀ s ∈ S, Dense s) : Dense (⋂₀ S) := by\n  rcases S.eq_empty_or_nonempty with h | h\n  · simp [h]\n  · rcases hS.exists_eq_range h with ⟨f, rfl⟩\n    exact dense_iInter_of_isOpen_nat (forall_mem_range.1 ho) (forall_mem_range.1 hd)\n\n"}
{"name":"dense_biInter_of_isOpen","module":"Mathlib.Topology.Baire.Lemmas","initialProofState":"X : Type u_1\nα : Type u_2\ninst✝¹ : TopologicalSpace X\ninst✝ : BaireSpace X\nS : Set α\nf : α → Set X\nho : ∀ (s : α), Membership.mem S s → IsOpen (f s)\nhS : S.Countable\nhd : ∀ (s : α), Membership.mem S s → Dense (f s)\n⊢ Dense (Set.iInter fun s => Set.iInter fun h => f s)","decl":"/-- Baire theorem: a countable intersection of dense open sets is dense. Formulated here with\nan index set which is a countable set in any type. -/\ntheorem dense_biInter_of_isOpen {S : Set α} {f : α → Set X} (ho : ∀ s ∈ S, IsOpen (f s))\n    (hS : S.Countable) (hd : ∀ s ∈ S, Dense (f s)) : Dense (⋂ s ∈ S, f s) := by\n  rw [← sInter_image]\n  refine dense_sInter_of_isOpen ?_ (hS.image _) ?_ <;> rwa [forall_mem_image]\n\n"}
{"name":"dense_iInter_of_isOpen","module":"Mathlib.Topology.Baire.Lemmas","initialProofState":"X : Type u_1\nι : Sort u_3\ninst✝² : TopologicalSpace X\ninst✝¹ : BaireSpace X\ninst✝ : Countable ι\nf : ι → Set X\nho : ∀ (i : ι), IsOpen (f i)\nhd : ∀ (i : ι), Dense (f i)\n⊢ Dense (Set.iInter fun s => f s)","decl":"/-- Baire theorem: a countable intersection of dense open sets is dense. Formulated here with\nan index set which is a countable type. -/\ntheorem dense_iInter_of_isOpen [Countable ι] {f : ι → Set X} (ho : ∀ i, IsOpen (f i))\n    (hd : ∀ i, Dense (f i)) : Dense (⋂ s, f s) :=\n  dense_sInter_of_isOpen (forall_mem_range.2 ho) (countable_range _) (forall_mem_range.2 hd)\n\n"}
{"name":"mem_residual","module":"Mathlib.Topology.Baire.Lemmas","initialProofState":"X : Type u_1\ninst✝¹ : TopologicalSpace X\ninst✝ : BaireSpace X\ns : Set X\n⊢ Iff (Membership.mem (residual X) s) (Exists fun t => And (HasSubset.Subset t s) (And (IsGδ t) (Dense t)))","decl":"/-- A set is residual (comeagre) if and only if it includes a dense `Gδ` set. -/\ntheorem mem_residual {s : Set X} : s ∈ residual X ↔ ∃ t ⊆ s, IsGδ t ∧ Dense t := by\n  constructor\n  · rw [mem_residual_iff]\n    rintro ⟨S, hSo, hSd, Sct, Ss⟩\n    refine ⟨_, Ss, ⟨_, fun t ht => hSo _ ht, Sct, rfl⟩, ?_⟩\n    exact dense_sInter_of_isOpen hSo Sct hSd\n  rintro ⟨t, ts, ho, hd⟩\n  exact mem_of_superset (residual_of_dense_Gδ ho hd) ts\n\n"}
{"name":"eventually_residual","module":"Mathlib.Topology.Baire.Lemmas","initialProofState":"X : Type u_1\ninst✝¹ : TopologicalSpace X\ninst✝ : BaireSpace X\np : X → Prop\n⊢ Iff (Filter.Eventually (fun x => p x) (residual X)) (Exists fun t => And (IsGδ t) (And (Dense t) (∀ (x : X), Membership.mem t x → p x)))","decl":"/-- A property holds on a residual (comeagre) set if and only if it holds on some dense `Gδ` set. -/\ntheorem eventually_residual {p : X → Prop} :\n    (∀ᶠ x in residual X, p x) ↔ ∃ t : Set X, IsGδ t ∧ Dense t ∧ ∀ x ∈ t, p x := by\n  simp only [Filter.Eventually, mem_residual, subset_def, mem_setOf_eq]\n  tauto\n\n"}
{"name":"dense_of_mem_residual","module":"Mathlib.Topology.Baire.Lemmas","initialProofState":"X : Type u_1\ninst✝¹ : TopologicalSpace X\ninst✝ : BaireSpace X\ns : Set X\nhs : Membership.mem (residual X) s\n⊢ Dense s","decl":"theorem dense_of_mem_residual {s : Set X} (hs : s ∈ residual X) : Dense s :=\n  let ⟨_, hts, _, hd⟩ := mem_residual.1 hs\n  hd.mono hts\n\n"}
{"name":"dense_sInter_of_Gδ","module":"Mathlib.Topology.Baire.Lemmas","initialProofState":"X : Type u_1\ninst✝¹ : TopologicalSpace X\ninst✝ : BaireSpace X\nS : Set (Set X)\nho : ∀ (s : Set X), Membership.mem S s → IsGδ s\nhS : S.Countable\nhd : ∀ (s : Set X), Membership.mem S s → Dense s\n⊢ Dense S.sInter","decl":"/-- Baire theorem: a countable intersection of dense Gδ sets is dense. Formulated here with ⋂₀. -/\ntheorem dense_sInter_of_Gδ {S : Set (Set X)} (ho : ∀ s ∈ S, IsGδ s) (hS : S.Countable)\n    (hd : ∀ s ∈ S, Dense s) : Dense (⋂₀ S) :=\n  dense_of_mem_residual ((countable_sInter_mem hS).mpr\n    (fun _ hs => residual_of_dense_Gδ (ho _ hs) (hd _ hs)))\n\n"}
{"name":"dense_iInter_of_Gδ","module":"Mathlib.Topology.Baire.Lemmas","initialProofState":"X : Type u_1\nι : Sort u_3\ninst✝² : TopologicalSpace X\ninst✝¹ : BaireSpace X\ninst✝ : Countable ι\nf : ι → Set X\nho : ∀ (s : ι), IsGδ (f s)\nhd : ∀ (s : ι), Dense (f s)\n⊢ Dense (Set.iInter fun s => f s)","decl":"/-- Baire theorem: a countable intersection of dense Gδ sets is dense. Formulated here with\nan index set which is a countable type. -/\ntheorem dense_iInter_of_Gδ [Countable ι] {f : ι → Set X} (ho : ∀ s, IsGδ (f s))\n    (hd : ∀ s, Dense (f s)) : Dense (⋂ s, f s) :=\n  dense_sInter_of_Gδ (forall_mem_range.2 ‹_›) (countable_range _) (forall_mem_range.2 ‹_›)\n\n"}
{"name":"dense_biInter_of_Gδ","module":"Mathlib.Topology.Baire.Lemmas","initialProofState":"X : Type u_1\nα : Type u_2\ninst✝¹ : TopologicalSpace X\ninst✝ : BaireSpace X\nS : Set α\nf : (x : α) → Membership.mem S x → Set X\nho : ∀ (s : α) (H : Membership.mem S s), IsGδ (f s H)\nhS : S.Countable\nhd : ∀ (s : α) (H : Membership.mem S s), Dense (f s H)\n⊢ Dense (Set.iInter fun s => Set.iInter fun h => f s h)","decl":"/-- Baire theorem: a countable intersection of dense Gδ sets is dense. Formulated here with\nan index set which is a countable set in any type. -/\ntheorem dense_biInter_of_Gδ {S : Set α} {f : ∀ x ∈ S, Set X} (ho : ∀ s (H : s ∈ S), IsGδ (f s H))\n    (hS : S.Countable) (hd : ∀ s (H : s ∈ S), Dense (f s H)) : Dense (⋂ s ∈ S, f s ‹_›) := by\n  rw [biInter_eq_iInter]\n  haveI := hS.to_subtype\n  exact dense_iInter_of_Gδ (fun s => ho s s.2) fun s => hd s s.2\n\n"}
{"name":"Dense.inter_of_Gδ","module":"Mathlib.Topology.Baire.Lemmas","initialProofState":"X : Type u_1\ninst✝¹ : TopologicalSpace X\ninst✝ : BaireSpace X\ns t : Set X\nhs : IsGδ s\nht : IsGδ t\nhsc : Dense s\nhtc : Dense t\n⊢ Dense (Inter.inter s t)","decl":"/-- Baire theorem: the intersection of two dense Gδ sets is dense. -/\ntheorem Dense.inter_of_Gδ {s t : Set X} (hs : IsGδ s) (ht : IsGδ t) (hsc : Dense s)\n    (htc : Dense t) : Dense (s ∩ t) := by\n  rw [inter_eq_iInter]\n  apply dense_iInter_of_Gδ <;> simp [Bool.forall_bool, *]\n\n"}
{"name":"IsGδ.dense_iUnion_interior_of_closed","module":"Mathlib.Topology.Baire.Lemmas","initialProofState":"X : Type u_1\nι : Sort u_3\ninst✝² : TopologicalSpace X\ninst✝¹ : BaireSpace X\ninst✝ : Countable ι\ns : Set X\nhs : IsGδ s\nhd : Dense s\nf : ι → Set X\nhc : ∀ (i : ι), IsClosed (f i)\nhU : HasSubset.Subset s (Set.iUnion fun i => f i)\n⊢ Dense (Set.iUnion fun i => interior (f i))","decl":"/-- If a countable family of closed sets cover a dense `Gδ` set, then the union of their interiors\nis dense. Formulated here with `⋃`. -/\ntheorem IsGδ.dense_iUnion_interior_of_closed [Countable ι] {s : Set X} (hs : IsGδ s) (hd : Dense s)\n    {f : ι → Set X} (hc : ∀ i, IsClosed (f i)) (hU : s ⊆ ⋃ i, f i) :\n    Dense (⋃ i, interior (f i)) := by\n  let g i := (frontier (f i))ᶜ\n  have hgo : ∀ i, IsOpen (g i) := fun i => isClosed_frontier.isOpen_compl\n  have hgd : Dense (⋂ i, g i) := by\n    refine dense_iInter_of_isOpen hgo fun i x => ?_\n    rw [closure_compl, interior_frontier (hc _)]\n    exact id\n  refine (hd.inter_of_Gδ hs (.iInter_of_isOpen fun i => (hgo i)) hgd).mono ?_\n  rintro x ⟨hxs, hxg⟩\n  rw [mem_iInter] at hxg\n  rcases mem_iUnion.1 (hU hxs) with ⟨i, hi⟩\n  exact mem_iUnion.2 ⟨i, self_diff_frontier (f i) ▸ ⟨hi, hxg _⟩⟩\n\n"}
{"name":"IsGδ.dense_biUnion_interior_of_closed","module":"Mathlib.Topology.Baire.Lemmas","initialProofState":"X : Type u_1\nα : Type u_2\ninst✝¹ : TopologicalSpace X\ninst✝ : BaireSpace X\nt : Set α\ns : Set X\nhs : IsGδ s\nhd : Dense s\nht : t.Countable\nf : α → Set X\nhc : ∀ (i : α), Membership.mem t i → IsClosed (f i)\nhU : HasSubset.Subset s (Set.iUnion fun i => Set.iUnion fun h => f i)\n⊢ Dense (Set.iUnion fun i => Set.iUnion fun h => interior (f i))","decl":"/-- If a countable family of closed sets cover a dense `Gδ` set, then the union of their interiors\nis dense. Formulated here with a union over a countable set in any type. -/\ntheorem IsGδ.dense_biUnion_interior_of_closed {t : Set α} {s : Set X} (hs : IsGδ s) (hd : Dense s)\n    (ht : t.Countable) {f : α → Set X} (hc : ∀ i ∈ t, IsClosed (f i)) (hU : s ⊆ ⋃ i ∈ t, f i) :\n    Dense (⋃ i ∈ t, interior (f i)) := by\n  haveI := ht.to_subtype\n  simp only [biUnion_eq_iUnion, SetCoe.forall'] at *\n  exact hs.dense_iUnion_interior_of_closed hd hc hU\n\n"}
{"name":"IsGδ.dense_sUnion_interior_of_closed","module":"Mathlib.Topology.Baire.Lemmas","initialProofState":"X : Type u_1\ninst✝¹ : TopologicalSpace X\ninst✝ : BaireSpace X\nT : Set (Set X)\ns : Set X\nhs : IsGδ s\nhd : Dense s\nhc : T.Countable\nhc' : ∀ (t : Set X), Membership.mem T t → IsClosed t\nhU : HasSubset.Subset s T.sUnion\n⊢ Dense (Set.iUnion fun t => Set.iUnion fun h => interior t)","decl":"/-- If a countable family of closed sets cover a dense `Gδ` set, then the union of their interiors\nis dense. Formulated here with `⋃₀`. -/\ntheorem IsGδ.dense_sUnion_interior_of_closed {T : Set (Set X)} {s : Set X} (hs : IsGδ s)\n    (hd : Dense s) (hc : T.Countable) (hc' : ∀ t ∈ T, IsClosed t) (hU : s ⊆ ⋃₀ T) :\n    Dense (⋃ t ∈ T, interior t) :=\n  hs.dense_biUnion_interior_of_closed hd hc hc' <| by rwa [← sUnion_eq_biUnion]\n\n"}
{"name":"dense_biUnion_interior_of_closed","module":"Mathlib.Topology.Baire.Lemmas","initialProofState":"X : Type u_1\nα : Type u_2\ninst✝¹ : TopologicalSpace X\ninst✝ : BaireSpace X\nS : Set α\nf : α → Set X\nhc : ∀ (s : α), Membership.mem S s → IsClosed (f s)\nhS : S.Countable\nhU : Eq (Set.iUnion fun s => Set.iUnion fun h => f s) Set.univ\n⊢ Dense (Set.iUnion fun s => Set.iUnion fun h => interior (f s))","decl":"/-- Baire theorem: if countably many closed sets cover the whole space, then their interiors\nare dense. Formulated here with an index set which is a countable set in any type. -/\ntheorem dense_biUnion_interior_of_closed {S : Set α} {f : α → Set X} (hc : ∀ s ∈ S, IsClosed (f s))\n    (hS : S.Countable) (hU : ⋃ s ∈ S, f s = univ) : Dense (⋃ s ∈ S, interior (f s)) :=\n  IsGδ.univ.dense_biUnion_interior_of_closed dense_univ hS hc hU.ge\n\n"}
{"name":"dense_sUnion_interior_of_closed","module":"Mathlib.Topology.Baire.Lemmas","initialProofState":"X : Type u_1\ninst✝¹ : TopologicalSpace X\ninst✝ : BaireSpace X\nS : Set (Set X)\nhc : ∀ (s : Set X), Membership.mem S s → IsClosed s\nhS : S.Countable\nhU : Eq S.sUnion Set.univ\n⊢ Dense (Set.iUnion fun s => Set.iUnion fun h => interior s)","decl":"/-- Baire theorem: if countably many closed sets cover the whole space, then their interiors\nare dense. Formulated here with `⋃₀`. -/\ntheorem dense_sUnion_interior_of_closed {S : Set (Set X)} (hc : ∀ s ∈ S, IsClosed s)\n    (hS : S.Countable) (hU : ⋃₀ S = univ) : Dense (⋃ s ∈ S, interior s) :=\n  IsGδ.univ.dense_sUnion_interior_of_closed dense_univ hS hc hU.ge\n\n"}
{"name":"dense_iUnion_interior_of_closed","module":"Mathlib.Topology.Baire.Lemmas","initialProofState":"X : Type u_1\nι : Sort u_3\ninst✝² : TopologicalSpace X\ninst✝¹ : BaireSpace X\ninst✝ : Countable ι\nf : ι → Set X\nhc : ∀ (i : ι), IsClosed (f i)\nhU : Eq (Set.iUnion fun i => f i) Set.univ\n⊢ Dense (Set.iUnion fun i => interior (f i))","decl":"/-- Baire theorem: if countably many closed sets cover the whole space, then their interiors\nare dense. Formulated here with an index set which is a countable type. -/\ntheorem dense_iUnion_interior_of_closed [Countable ι] {f : ι → Set X} (hc : ∀ i, IsClosed (f i))\n    (hU : ⋃ i, f i = univ) : Dense (⋃ i, interior (f i)) :=\n  IsGδ.univ.dense_iUnion_interior_of_closed dense_univ hc hU.ge\n\n"}
{"name":"nonempty_interior_of_iUnion_of_closed","module":"Mathlib.Topology.Baire.Lemmas","initialProofState":"X : Type u_1\nι : Sort u_3\ninst✝³ : TopologicalSpace X\ninst✝² : BaireSpace X\ninst✝¹ : Nonempty X\ninst✝ : Countable ι\nf : ι → Set X\nhc : ∀ (i : ι), IsClosed (f i)\nhU : Eq (Set.iUnion fun i => f i) Set.univ\n⊢ Exists fun i => (interior (f i)).Nonempty","decl":"/-- One of the most useful consequences of Baire theorem: if a countable union of closed sets\ncovers the space, then one of the sets has nonempty interior. -/\ntheorem nonempty_interior_of_iUnion_of_closed [Nonempty X] [Countable ι] {f : ι → Set X}\n    (hc : ∀ i, IsClosed (f i)) (hU : ⋃ i, f i = univ) : ∃ i, (interior <| f i).Nonempty := by\n  simpa using (dense_iUnion_interior_of_closed hc hU).nonempty\n\n"}
