{"name":"CocompactMapClass.norm_le","module":"Mathlib.Analysis.Normed.Group.CocompactMap","initialProofState":"E : Type u_2\nF : Type u_3\n𝓕 : Type u_4\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedAddCommGroup F\nf : 𝓕\ninst✝² : ProperSpace F\ninst✝¹ : FunLike 𝓕 E F\ninst✝ : CocompactMapClass 𝓕 E F\nε : Real\n⊢ Exists fun r => ∀ (x : E), LT.lt r (Norm.norm x) → LT.lt ε (Norm.norm (f x))","decl":"theorem CocompactMapClass.norm_le [ProperSpace F] [FunLike 𝓕 E F] [CocompactMapClass 𝓕 E F]\n    (ε : ℝ) : ∃ r : ℝ, ∀ x : E, r < ‖x‖ → ε < ‖f x‖ := by\n  have h := cocompact_tendsto f\n  rw [tendsto_def] at h\n  specialize h (Metric.closedBall 0 ε)ᶜ (mem_cocompact_of_closedBall_compl_subset 0 ⟨ε, rfl.subset⟩)\n  rcases closedBall_compl_subset_of_mem_cocompact h 0 with ⟨r, hr⟩\n  use r\n  intro x hx\n  suffices x ∈ f⁻¹' (Metric.closedBall 0 ε)ᶜ by aesop\n  apply hr\n  simp [hx]\n\n"}
{"name":"Filter.tendsto_cocompact_cocompact_of_norm","module":"Mathlib.Analysis.Normed.Group.CocompactMap","initialProofState":"E : Type u_2\nF : Type u_3\ninst✝² : NormedAddCommGroup E\ninst✝¹ : NormedAddCommGroup F\ninst✝ : ProperSpace E\nf : E → F\nh : ∀ (ε : Real), Exists fun r => ∀ (x : E), LT.lt r (Norm.norm x) → LT.lt ε (Norm.norm (f x))\n⊢ Filter.Tendsto f (Filter.cocompact E) (Filter.cocompact F)","decl":"theorem Filter.tendsto_cocompact_cocompact_of_norm [ProperSpace E] {f : E → F}\n    (h : ∀ ε : ℝ, ∃ r : ℝ, ∀ x : E, r < ‖x‖ → ε < ‖f x‖) :\n    Tendsto f (cocompact E) (cocompact F) := by\n  rw [tendsto_def]\n  intro s hs\n  rcases closedBall_compl_subset_of_mem_cocompact hs 0 with ⟨ε, hε⟩\n  rcases h ε with ⟨r, hr⟩\n  apply mem_cocompact_of_closedBall_compl_subset 0\n  use r\n  intro x hx\n  simp only [Set.mem_compl_iff, Metric.mem_closedBall, dist_zero_right, not_le] at hx\n  apply hε\n  simp [hr x hx]\n\n"}
{"name":"ContinuousMapClass.toCocompactMapClass_of_norm","module":"Mathlib.Analysis.Normed.Group.CocompactMap","initialProofState":"E : Type u_2\nF : Type u_3\n𝓕 : Type u_4\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedAddCommGroup F\ninst✝² : ProperSpace E\ninst✝¹ : FunLike 𝓕 E F\ninst✝ : ContinuousMapClass 𝓕 E F\nh : ∀ (f : 𝓕) (ε : Real), Exists fun r => ∀ (x : E), LT.lt r (Norm.norm x) → LT.lt ε (Norm.norm (f x))\n⊢ CocompactMapClass 𝓕 E F","decl":"theorem ContinuousMapClass.toCocompactMapClass_of_norm [ProperSpace E] [FunLike 𝓕 E F]\n    [ContinuousMapClass 𝓕 E F] (h : ∀ (f : 𝓕) (ε : ℝ), ∃ r : ℝ, ∀ x : E, r < ‖x‖ → ε < ‖f x‖) :\n    CocompactMapClass 𝓕 E F where\n  cocompact_tendsto := (tendsto_cocompact_cocompact_of_norm <| h ·)\n"}
