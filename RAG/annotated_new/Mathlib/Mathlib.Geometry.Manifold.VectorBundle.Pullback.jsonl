{"name":"ContMDiffVectorBundle.pullback","module":"Mathlib.Geometry.Manifold.VectorBundle.Pullback","initialProofState":"𝕜 : Type u_1\nB : Type u_2\nB' : Type u_3\nF : Type u_4\nE : B → Type u_5\nn : WithTop ENat\ninst✝¹⁸ : NontriviallyNormedField 𝕜\ninst✝¹⁷ : (x : B) → AddCommMonoid (E x)\ninst✝¹⁶ : (x : B) → Module 𝕜 (E x)\ninst✝¹⁵ : NormedAddCommGroup F\ninst✝¹⁴ : NormedSpace 𝕜 F\ninst✝¹³ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝¹² : (x : B) → TopologicalSpace (E x)\nEB : Type u_6\ninst✝¹¹ : NormedAddCommGroup EB\ninst✝¹⁰ : NormedSpace 𝕜 EB\nHB : Type u_7\ninst✝⁹ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝⁸ : TopologicalSpace B\ninst✝⁷ : ChartedSpace HB B\nEB' : Type u_8\ninst✝⁶ : NormedAddCommGroup EB'\ninst✝⁵ : NormedSpace 𝕜 EB'\nHB' : Type u_9\ninst✝⁴ : TopologicalSpace HB'\nIB' : ModelWithCorners 𝕜 EB' HB'\ninst✝³ : TopologicalSpace B'\ninst✝² : ChartedSpace HB' B'\ninst✝¹ : FiberBundle F E\ninst✝ : VectorBundle 𝕜 F E\nf : ContMDiffMap IB' IB B' B n\n⊢ ContMDiffVectorBundle n F (Bundle.Pullback (⇑f) E) IB'","decl":"/-- For a `C^n` vector bundle `E` over a manifold `B` and a `C^n` map `f : B' → B`, the pullback\nvector bundle `f *ᵖ E` is a `C^n` vector bundle. -/\ninstance ContMDiffVectorBundle.pullback : ContMDiffVectorBundle n F (f *ᵖ E) IB' where\n  contMDiffOn_coordChangeL := by\n    rintro _ _ ⟨e, he, rfl⟩ ⟨e', he', rfl⟩\n    refine ((contMDiffOn_coordChangeL e e').comp f.contMDiff.contMDiffOn fun b hb => hb).congr ?_\n    rintro b (hb : f b ∈ e.baseSet ∩ e'.baseSet); ext v\n    show ((e.pullback f).coordChangeL 𝕜 (e'.pullback f) b) v = (e.coordChangeL 𝕜 e' (f b)) v\n    rw [e.coordChangeL_apply e' hb, (e.pullback f).coordChangeL_apply' _]\n    exacts [rfl, hb]\n"}
