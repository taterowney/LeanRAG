{"name":"completelyRegularSpace_iff","module":"Mathlib.Topology.Separation.CompletelyRegular","initialProofState":"X : Type u\ninst✝ : TopologicalSpace X\n⊢ Iff (CompletelyRegularSpace X) (∀ (x : X) (K : Set X), IsClosed K → Not (Membership.mem K x) → Exists fun f => And (Continuous f) (And (Eq (f x) 0) (Set.EqOn f 1 K)))","decl":"/-- A space is completely regular if points can be separated from closed sets via\n  continuous functions to the unit interval. -/\n@[mk_iff]\nclass CompletelyRegularSpace (X : Type u) [TopologicalSpace X] : Prop where\n  completely_regular : ∀ (x : X), ∀ K : Set X, IsClosed K → x ∉ K →\n    ∃ f : X → I, Continuous f ∧ f x = 0 ∧ EqOn f 1 K\n\n"}
{"name":"CompletelyRegularSpace.completely_regular","module":"Mathlib.Topology.Separation.CompletelyRegular","initialProofState":"X : Type u\ninst✝ : TopologicalSpace X\nself : CompletelyRegularSpace X\nx : X\nK : Set X\na✝¹ : IsClosed K\na✝ : Not (Membership.mem K x)\n⊢ Exists fun f => And (Continuous f) (And (Eq (f x) 0) (Set.EqOn f 1 K))","decl":"/-- A space is completely regular if points can be separated from closed sets via\n  continuous functions to the unit interval. -/\n@[mk_iff]\nclass CompletelyRegularSpace (X : Type u) [TopologicalSpace X] : Prop where\n  completely_regular : ∀ (x : X), ∀ K : Set X, IsClosed K → x ∉ K →\n    ∃ f : X → I, Continuous f ∧ f x = 0 ∧ EqOn f 1 K\n\n"}
{"name":"CompletelyRegularSpace.instRegularSpace","module":"Mathlib.Topology.Separation.CompletelyRegular","initialProofState":"X : Type u\ninst✝¹ : TopologicalSpace X\ninst✝ : CompletelyRegularSpace X\n⊢ RegularSpace X","decl":"instance CompletelyRegularSpace.instRegularSpace [CompletelyRegularSpace X] : RegularSpace X := by\n  rw [regularSpace_iff]\n  intro s a hs ha\n  obtain ⟨f, cf, hf, hhf⟩ := CompletelyRegularSpace.completely_regular a s hs ha\n  apply disjoint_of_map (f := f)\n  apply Disjoint.mono (cf.tendsto_nhdsSet_nhds hhf) cf.continuousAt\n  exact disjoint_nhds_nhds.mpr (hf.symm ▸ zero_ne_one).symm\n\n"}
{"name":"NormalSpace.instCompletelyRegularSpace","module":"Mathlib.Topology.Separation.CompletelyRegular","initialProofState":"X : Type u\ninst✝¹ : TopologicalSpace X\ninst✝ : NormalSpace X\n⊢ CompletelyRegularSpace X","decl":"instance NormalSpace.instCompletelyRegularSpace [NormalSpace X] : CompletelyRegularSpace X := by\n  rw [completelyRegularSpace_iff]\n  intro x K hK hx\n  have cx : IsClosed {x} := T1Space.t1 x\n  have d : Disjoint {x} K := by rwa [Set.disjoint_iff, subset_empty_iff, singleton_inter_eq_empty]\n  let ⟨⟨f, cf⟩, hfx, hfK, hficc⟩ := exists_continuous_zero_one_of_isClosed cx hK d\n  let g : X → I := fun x => ⟨f x, hficc x⟩\n  have cg : Continuous g := cf.subtype_mk hficc\n  have hgx : g x = 0 := Subtype.ext (hfx (mem_singleton_iff.mpr (Eq.refl x)))\n  have hgK : EqOn g 1 K := fun k hk => Subtype.ext (hfK hk)\n  exact ⟨g, cg, hgx, hgK⟩\n\n"}
{"name":"T35Space.toT1Space","module":"Mathlib.Topology.Separation.CompletelyRegular","initialProofState":"X : Type u\ninst✝ : TopologicalSpace X\nself : T35Space X\n⊢ T1Space X","decl":"/-- A T₃.₅ space is a completely regular space that is also T1. -/\n@[mk_iff]\nclass T35Space (X : Type u) [TopologicalSpace X] extends T1Space X, CompletelyRegularSpace X : Prop\n\n"}
{"name":"t35Space_iff","module":"Mathlib.Topology.Separation.CompletelyRegular","initialProofState":"X : Type u\ninst✝ : TopologicalSpace X\n⊢ Iff (T35Space X) (And (T1Space X) (CompletelyRegularSpace X))","decl":"/-- A T₃.₅ space is a completely regular space that is also T1. -/\n@[mk_iff]\nclass T35Space (X : Type u) [TopologicalSpace X] extends T1Space X, CompletelyRegularSpace X : Prop\n\n"}
{"name":"T35Space.toCompletelyRegularSpace","module":"Mathlib.Topology.Separation.CompletelyRegular","initialProofState":"X : Type u\ninst✝ : TopologicalSpace X\nself : T35Space X\n⊢ CompletelyRegularSpace X","decl":"/-- A T₃.₅ space is a completely regular space that is also T1. -/\n@[mk_iff]\nclass T35Space (X : Type u) [TopologicalSpace X] extends T1Space X, CompletelyRegularSpace X : Prop\n\n"}
{"name":"T35Space.instT3space","module":"Mathlib.Topology.Separation.CompletelyRegular","initialProofState":"X : Type u\ninst✝² : TopologicalSpace X\ninst✝¹ : T1Space X\ninst✝ : T35Space X\n⊢ T3Space X","decl":"instance T35Space.instT3space [T35Space X] : T3Space X := {}\n\n"}
{"name":"T4Space.instT35Space","module":"Mathlib.Topology.Separation.CompletelyRegular","initialProofState":"X : Type u\ninst✝² : TopologicalSpace X\ninst✝¹ : T1Space X\ninst✝ : T4Space X\n⊢ T35Space X","decl":"instance T4Space.instT35Space [T4Space X] : T35Space X := {}\n\n"}
{"name":"separatesPoints_continuous_of_t35Space","module":"Mathlib.Topology.Separation.CompletelyRegular","initialProofState":"X : Type u\ninst✝² : TopologicalSpace X\ninst✝¹ : T1Space X\ninst✝ : T35Space X\n⊢ Set.SeparatesPoints Continuous","decl":"lemma separatesPoints_continuous_of_t35Space [T35Space X] :\n    SeparatesPoints (Continuous : Set (X → ℝ)) := by\n  intro x y x_ne_y\n  obtain ⟨f, f_cont, f_zero, f_one⟩ :=\n    CompletelyRegularSpace.completely_regular x {y} isClosed_singleton x_ne_y\n  exact ⟨fun x ↦ f x, continuous_subtype_val.comp f_cont, by aesop⟩\n\n"}
{"name":"separatesPoints_continuous_of_t35Space_Icc","module":"Mathlib.Topology.Separation.CompletelyRegular","initialProofState":"X : Type u\ninst✝² : TopologicalSpace X\ninst✝¹ : T1Space X\ninst✝ : T35Space X\n⊢ Set.SeparatesPoints Continuous","decl":"lemma separatesPoints_continuous_of_t35Space_Icc [T35Space X] :\n    SeparatesPoints (Continuous : Set (X → I)) := by\n  intro x y x_ne_y\n  obtain ⟨f, f_cont, f_zero, f_one⟩ :=\n    CompletelyRegularSpace.completely_regular x {y} isClosed_singleton x_ne_y\n  exact ⟨f, f_cont, by aesop⟩\n\n"}
{"name":"injective_stoneCechUnit_of_t35Space","module":"Mathlib.Topology.Separation.CompletelyRegular","initialProofState":"X : Type u\ninst✝² : TopologicalSpace X\ninst✝¹ : T1Space X\ninst✝ : T35Space X\n⊢ Function.Injective stoneCechUnit","decl":"lemma injective_stoneCechUnit_of_t35Space [T35Space X] :\n    Function.Injective (stoneCechUnit : X → StoneCech X) := by\n  intros a b hab\n  contrapose hab\n  obtain ⟨f, fc, fab⟩ := separatesPoints_continuous_of_t35Space_Icc hab\n  exact fun q ↦ fab (eq_if_stoneCechUnit_eq fc q)\n"}
