{"name":"Subalgebra.fg_bot_toSubmodule","module":"Mathlib.RingTheory.Finiteness.Subalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\n⊢ (Subalgebra.toSubmodule Bot.bot).FG","decl":"theorem fg_bot_toSubmodule  : (⊥ : Subalgebra R A).toSubmodule.FG :=\n  ⟨{1}, by simp [Algebra.toSubmodule_bot, one_eq_span]⟩\n\n"}
{"name":"Subalgebra.finite_bot","module":"Mathlib.RingTheory.Finiteness.Subalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\n⊢ Module.Finite R (Subtype fun x => Membership.mem Bot.bot x)","decl":"instance finite_bot : Module.Finite R (⊥ : Subalgebra R A) :=\n  Module.Finite.range (Algebra.linearMap R A)\n\n"}
{"name":"Submodule.fg_unit","module":"Mathlib.RingTheory.Finiteness.Subalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nI : Units (Submodule R A)\n⊢ (↑I).FG","decl":"theorem fg_unit {R A : Type*} [CommSemiring R] [Semiring A] [Algebra R A] (I : (Submodule R A)ˣ) :\n    (I : Submodule R A).FG := by\n  obtain ⟨T, T', hT, hT', one_mem⟩ := mem_span_mul_finite_of_mem_mul (I.mul_inv ▸ one_le.mp le_rfl)\n  refine ⟨T, span_eq_of_le _ hT ?_⟩\n  rw [← one_mul I, ← mul_one (span R (T : Set A))]\n  conv_rhs => rw [← I.inv_mul, ← mul_assoc]\n  refine mul_le_mul_left (le_trans ?_ <| mul_le_mul_right <| span_le.mpr hT')\n  rwa [Units.val_one, span_mul_span, one_le]\n\n"}
{"name":"Submodule.fg_of_isUnit","module":"Mathlib.RingTheory.Finiteness.Subalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nI : Submodule R A\nhI : IsUnit I\n⊢ I.FG","decl":"theorem fg_of_isUnit {R A : Type*} [CommSemiring R] [Semiring A] [Algebra R A] {I : Submodule R A}\n    (hI : IsUnit I) : I.FG :=\n  fg_unit hI.unit\n\n"}
{"name":"Submodule.FG.mul","module":"Mathlib.RingTheory.Finiteness.Subalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nM N : Submodule R A\nhm : M.FG\nhn : N.FG\n⊢ (HMul.hMul M N).FG","decl":"theorem FG.mul (hm : M.FG) (hn : N.FG) : (M * N).FG := by\n  rw [mul_eq_map₂]; exact hm.map₂ _ hn\n\n"}
{"name":"Submodule.FG.pow","module":"Mathlib.RingTheory.Finiteness.Subalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nM : Submodule R A\nh : M.FG\nn : Nat\n⊢ (HPow.hPow M n).FG","decl":"theorem FG.pow (h : M.FG) (n : ℕ) : (M ^ n).FG :=\n  Nat.recOn n ⟨{1}, by simp [one_eq_span]⟩ fun n ih => by simpa [pow_succ] using ih.mul h\n\n"}
