{"name":"QuotientAddGroup.instCompactSpaceQuotientAddSubgroup","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝² : TopologicalSpace G\ninst✝¹ : AddGroup G\ninst✝ : CompactSpace G\nN : AddSubgroup G\n⊢ CompactSpace (HasQuotient.Quotient G N)","decl":"@[to_additive]\ninstance [CompactSpace G] (N : Subgroup G) : CompactSpace (G ⧸ N) :=\n  Quotient.compactSpace\n\n"}
{"name":"QuotientGroup.instCompactSpaceQuotientSubgroup","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝² : TopologicalSpace G\ninst✝¹ : Group G\ninst✝ : CompactSpace G\nN : Subgroup G\n⊢ CompactSpace (HasQuotient.Quotient G N)","decl":"@[to_additive]\ninstance [CompactSpace G] (N : Subgroup G) : CompactSpace (G ⧸ N) :=\n  Quotient.compactSpace\n\n"}
{"name":"QuotientAddGroup.isQuotientMap_mk","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝¹ : TopologicalSpace G\ninst✝ : AddGroup G\nN : AddSubgroup G\n⊢ Topology.IsQuotientMap QuotientAddGroup.mk","decl":"@[to_additive]\ntheorem isQuotientMap_mk (N : Subgroup G) : IsQuotientMap (mk : G → G ⧸ N) :=\n  isQuotientMap_quot_mk\n\n"}
{"name":"QuotientGroup.isQuotientMap_mk","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝¹ : TopologicalSpace G\ninst✝ : Group G\nN : Subgroup G\n⊢ Topology.IsQuotientMap QuotientGroup.mk","decl":"@[to_additive]\ntheorem isQuotientMap_mk (N : Subgroup G) : IsQuotientMap (mk : G → G ⧸ N) :=\n  isQuotientMap_quot_mk\n\n"}
{"name":"QuotientGroup.quotientMap_mk","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝¹ : TopologicalSpace G\ninst✝ : Group G\nN : Subgroup G\n⊢ Topology.IsQuotientMap QuotientGroup.mk","decl":"@[deprecated (since := \"2024-10-22\")]\nalias quotientMap_mk := isQuotientMap_mk\n\n"}
{"name":"QuotientGroup.continuous_mk","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝¹ : TopologicalSpace G\ninst✝ : Group G\nN : Subgroup G\n⊢ Continuous QuotientGroup.mk","decl":"@[to_additive]\ntheorem continuous_mk {N : Subgroup G} : Continuous (mk : G → G ⧸ N) :=\n  continuous_quot_mk\n\n"}
{"name":"QuotientAddGroup.continuous_mk","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝¹ : TopologicalSpace G\ninst✝ : AddGroup G\nN : AddSubgroup G\n⊢ Continuous QuotientAddGroup.mk","decl":"@[to_additive]\ntheorem continuous_mk {N : Subgroup G} : Continuous (mk : G → G ⧸ N) :=\n  continuous_quot_mk\n\n"}
{"name":"QuotientGroup.isOpenMap_coe","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝² : TopologicalSpace G\ninst✝¹ : Group G\ninst✝ : ContinuousMul G\nN : Subgroup G\n⊢ IsOpenMap QuotientGroup.mk","decl":"@[to_additive]\ntheorem isOpenMap_coe : IsOpenMap ((↑) : G → G ⧸ N) := isOpenMap_quotient_mk'_mul\n\n"}
{"name":"QuotientAddGroup.isOpenMap_coe","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝² : TopologicalSpace G\ninst✝¹ : AddGroup G\ninst✝ : ContinuousAdd G\nN : AddSubgroup G\n⊢ IsOpenMap QuotientAddGroup.mk","decl":"@[to_additive]\ntheorem isOpenMap_coe : IsOpenMap ((↑) : G → G ⧸ N) := isOpenMap_quotient_mk'_mul\n\n"}
{"name":"QuotientAddGroup.isOpenQuotientMap_mk","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝² : TopologicalSpace G\ninst✝¹ : AddGroup G\ninst✝ : ContinuousAdd G\nN : AddSubgroup G\n⊢ IsOpenQuotientMap QuotientAddGroup.mk","decl":"@[to_additive]\ntheorem isOpenQuotientMap_mk : IsOpenQuotientMap (mk : G → G ⧸ N) :=\n  MulAction.isOpenQuotientMap_quotientMk\n\n"}
{"name":"QuotientGroup.isOpenQuotientMap_mk","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝² : TopologicalSpace G\ninst✝¹ : Group G\ninst✝ : ContinuousMul G\nN : Subgroup G\n⊢ IsOpenQuotientMap QuotientGroup.mk","decl":"@[to_additive]\ntheorem isOpenQuotientMap_mk : IsOpenQuotientMap (mk : G → G ⧸ N) :=\n  MulAction.isOpenQuotientMap_quotientMk\n\n"}
{"name":"QuotientGroup.dense_preimage_mk","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝² : TopologicalSpace G\ninst✝¹ : Group G\ninst✝ : ContinuousMul G\nN : Subgroup G\ns : Set (HasQuotient.Quotient G N)\n⊢ Iff (Dense (Set.preimage QuotientGroup.mk s)) (Dense s)","decl":"@[to_additive (attr := simp)]\ntheorem dense_preimage_mk {s : Set (G ⧸ N)} : Dense ((↑) ⁻¹' s : Set G) ↔ Dense s :=\n  isOpenQuotientMap_mk.dense_preimage_iff\n\n"}
{"name":"QuotientAddGroup.dense_preimage_mk","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝² : TopologicalSpace G\ninst✝¹ : AddGroup G\ninst✝ : ContinuousAdd G\nN : AddSubgroup G\ns : Set (HasQuotient.Quotient G N)\n⊢ Iff (Dense (Set.preimage QuotientAddGroup.mk s)) (Dense s)","decl":"@[to_additive (attr := simp)]\ntheorem dense_preimage_mk {s : Set (G ⧸ N)} : Dense ((↑) ⁻¹' s : Set G) ↔ Dense s :=\n  isOpenQuotientMap_mk.dense_preimage_iff\n\n"}
{"name":"QuotientGroup.dense_image_mk","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝² : TopologicalSpace G\ninst✝¹ : Group G\ninst✝ : ContinuousMul G\nN : Subgroup G\ns : Set G\n⊢ Iff (Dense (Set.image QuotientGroup.mk s)) (Dense (HMul.hMul s ↑N))","decl":"@[to_additive]\ntheorem dense_image_mk {s : Set G} :\n    Dense (mk '' s : Set (G ⧸ N)) ↔ Dense (s * (N : Set G)) := by\n  rw [← dense_preimage_mk, preimage_image_mk_eq_mul]\n\n"}
{"name":"QuotientAddGroup.dense_image_mk","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝² : TopologicalSpace G\ninst✝¹ : AddGroup G\ninst✝ : ContinuousAdd G\nN : AddSubgroup G\ns : Set G\n⊢ Iff (Dense (Set.image QuotientAddGroup.mk s)) (Dense (HAdd.hAdd s ↑N))","decl":"@[to_additive]\ntheorem dense_image_mk {s : Set G} :\n    Dense (mk '' s : Set (G ⧸ N)) ↔ Dense (s * (N : Set G)) := by\n  rw [← dense_preimage_mk, preimage_image_mk_eq_mul]\n\n"}
{"name":"QuotientAddGroup.instContinuousVAdd","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝¹ : TopologicalSpace G\ninst✝ : AddGroup G\nN : AddSubgroup G\n⊢ ContinuousVAdd G (HasQuotient.Quotient G N)","decl":"@[to_additive]\ninstance instContinuousSMul : ContinuousSMul G (G ⧸ N) where\n  continuous_smul := by\n    rw [← (IsOpenQuotientMap.id.prodMap isOpenQuotientMap_mk).continuous_comp_iff]\n    exact continuous_mk.comp continuous_mul\n\n"}
{"name":"QuotientGroup.instContinuousSMul","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝¹ : TopologicalSpace G\ninst✝ : Group G\nN : Subgroup G\n⊢ ContinuousSMul G (HasQuotient.Quotient G N)","decl":"@[to_additive]\ninstance instContinuousSMul : ContinuousSMul G (G ⧸ N) where\n  continuous_smul := by\n    rw [← (IsOpenQuotientMap.id.prodMap isOpenQuotientMap_mk).continuous_comp_iff]\n    exact continuous_mk.comp continuous_mul\n\n"}
{"name":"QuotientGroup.instContinuousConstSMul","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝¹ : TopologicalSpace G\ninst✝ : Group G\nN : Subgroup G\n⊢ ContinuousConstSMul G (HasQuotient.Quotient G N)","decl":"@[to_additive]\ninstance instContinuousConstSMul : ContinuousConstSMul G (G ⧸ N) := inferInstance\n\n"}
{"name":"QuotientAddGroup.instContinuousConstVAdd","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝¹ : TopologicalSpace G\ninst✝ : AddGroup G\nN : AddSubgroup G\n⊢ ContinuousConstVAdd G (HasQuotient.Quotient G N)","decl":"@[to_additive]\ninstance instContinuousConstSMul : ContinuousConstSMul G (G ⧸ N) := inferInstance\n\n"}
{"name":"QuotientGroup.instLocallyCompactSpace","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝³ : TopologicalSpace G\ninst✝² : Group G\ninst✝¹ : ContinuousMul G\ninst✝ : LocallyCompactSpace G\nN : Subgroup G\n⊢ LocallyCompactSpace (HasQuotient.Quotient G N)","decl":"/-- A quotient of a locally compact group is locally compact. -/\n@[to_additive]\ninstance instLocallyCompactSpace [LocallyCompactSpace G] (N : Subgroup G) :\n    LocallyCompactSpace (G ⧸ N) :=\n  QuotientGroup.isOpenQuotientMap_mk.locallyCompactSpace\n\n"}
{"name":"QuotientAddGroup.instLocallyCompactSpace","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝³ : TopologicalSpace G\ninst✝² : AddGroup G\ninst✝¹ : ContinuousAdd G\ninst✝ : LocallyCompactSpace G\nN : AddSubgroup G\n⊢ LocallyCompactSpace (HasQuotient.Quotient G N)","decl":"/-- A quotient of a locally compact group is locally compact. -/\n@[to_additive]\ninstance instLocallyCompactSpace [LocallyCompactSpace G] (N : Subgroup G) :\n    LocallyCompactSpace (G ⧸ N) :=\n  QuotientGroup.isOpenQuotientMap_mk.locallyCompactSpace\n\n"}
{"name":"QuotientAddGroup.continuous_smul₁","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝² : TopologicalSpace G\ninst✝¹ : AddGroup G\ninst✝ : ContinuousAdd G\nN : AddSubgroup G\nx : HasQuotient.Quotient G N\n⊢ Continuous fun g => HVAdd.hVAdd g x","decl":"@[to_additive (attr := deprecated \"No deprecation message was provided.\" (since := \"2024-10-05\"))]\ntheorem continuous_smul₁ (x : G ⧸ N) : Continuous fun g : G => g • x :=\n  continuous_id.smul continuous_const\n\n"}
{"name":"QuotientGroup.continuous_smul₁","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝² : TopologicalSpace G\ninst✝¹ : Group G\ninst✝ : ContinuousMul G\nN : Subgroup G\nx : HasQuotient.Quotient G N\n⊢ Continuous fun g => HSMul.hSMul g x","decl":"@[to_additive (attr := deprecated \"No deprecation message was provided.\" (since := \"2024-10-05\"))]\ntheorem continuous_smul₁ (x : G ⧸ N) : Continuous fun g : G => g • x :=\n  continuous_id.smul continuous_const\n\n"}
{"name":"QuotientAddGroup.nhds_eq","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝² : TopologicalSpace G\ninst✝¹ : AddGroup G\ninst✝ : ContinuousAdd G\nN : AddSubgroup G\nx : G\n⊢ Eq (nhds ↑x) (Filter.map QuotientAddGroup.mk (nhds x))","decl":"/-- Neighborhoods in the quotient are precisely the map of neighborhoods in the prequotient. -/\n@[to_additive\n  \"Neighborhoods in the quotient are precisely the map of neighborhoods in the prequotient.\"]\ntheorem nhds_eq (x : G) : 𝓝 (x : G ⧸ N) = Filter.map (↑) (𝓝 x) :=\n  (isOpenQuotientMap_mk.map_nhds_eq _).symm\n\n"}
{"name":"QuotientGroup.nhds_eq","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝² : TopologicalSpace G\ninst✝¹ : Group G\ninst✝ : ContinuousMul G\nN : Subgroup G\nx : G\n⊢ Eq (nhds ↑x) (Filter.map QuotientGroup.mk (nhds x))","decl":"/-- Neighborhoods in the quotient are precisely the map of neighborhoods in the prequotient. -/\n@[to_additive\n  \"Neighborhoods in the quotient are precisely the map of neighborhoods in the prequotient.\"]\ntheorem nhds_eq (x : G) : 𝓝 (x : G ⧸ N) = Filter.map (↑) (𝓝 x) :=\n  (isOpenQuotientMap_mk.map_nhds_eq _).symm\n\n"}
{"name":"QuotientGroup.instFirstCountableTopology","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝³ : TopologicalSpace G\ninst✝² : Group G\ninst✝¹ : ContinuousMul G\nN : Subgroup G\ninst✝ : FirstCountableTopology G\n⊢ FirstCountableTopology (HasQuotient.Quotient G N)","decl":"@[to_additive]\ninstance instFirstCountableTopology [FirstCountableTopology G] :\n    FirstCountableTopology (G ⧸ N) where\n  nhds_generated_countable := mk_surjective.forall.2 fun x ↦ nhds_eq N x ▸ inferInstance\n\n"}
{"name":"QuotientAddGroup.instFirstCountableTopology","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝³ : TopologicalSpace G\ninst✝² : AddGroup G\ninst✝¹ : ContinuousAdd G\nN : AddSubgroup G\ninst✝ : FirstCountableTopology G\n⊢ FirstCountableTopology (HasQuotient.Quotient G N)","decl":"@[to_additive]\ninstance instFirstCountableTopology [FirstCountableTopology G] :\n    FirstCountableTopology (G ⧸ N) where\n  nhds_generated_countable := mk_surjective.forall.2 fun x ↦ nhds_eq N x ▸ inferInstance\n\n"}
{"name":"QuotientGroup.instSecondCountableTopology","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝³ : TopologicalSpace G\ninst✝² : Group G\ninst✝¹ : ContinuousMul G\nN : Subgroup G\ninst✝ : SecondCountableTopology G\n⊢ SecondCountableTopology (HasQuotient.Quotient G N)","decl":"/-- The quotient of a second countable topological group by a subgroup is second countable. -/\n@[to_additive\n  \"The quotient of a second countable additive topological group by a subgroup is second\n  countable.\"]\ninstance instSecondCountableTopology [SecondCountableTopology G] :\n    SecondCountableTopology (G ⧸ N) :=\n  ContinuousConstSMul.secondCountableTopology\n\n"}
{"name":"QuotientAddGroup.instSecondCountableTopology","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝³ : TopologicalSpace G\ninst✝² : AddGroup G\ninst✝¹ : ContinuousAdd G\nN : AddSubgroup G\ninst✝ : SecondCountableTopology G\n⊢ SecondCountableTopology (HasQuotient.Quotient G N)","decl":"/-- The quotient of a second countable topological group by a subgroup is second countable. -/\n@[to_additive\n  \"The quotient of a second countable additive topological group by a subgroup is second\n  countable.\"]\ninstance instSecondCountableTopology [SecondCountableTopology G] :\n    SecondCountableTopology (G ⧸ N) :=\n  ContinuousConstSMul.secondCountableTopology\n\n"}
{"name":"QuotientGroup.nhds_one_isCountablyGenerated","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝⁴ : TopologicalSpace G\ninst✝³ : Group G\ninst✝² : ContinuousMul G\nN : Subgroup G\ninst✝¹ : FirstCountableTopology G\ninst✝ : N.Normal\n⊢ (nhds 1).IsCountablyGenerated","decl":"@[to_additive (attr := deprecated \"No deprecation message was provided.\" (since := \"2024-08-05\"))]\ntheorem nhds_one_isCountablyGenerated [FirstCountableTopology G] [N.Normal] :\n    (𝓝 (1 : G ⧸ N)).IsCountablyGenerated :=\n  inferInstance\n\n"}
{"name":"QuotientAddGroup.nhds_zero_isCountablyGenerated","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝⁴ : TopologicalSpace G\ninst✝³ : AddGroup G\ninst✝² : ContinuousAdd G\nN : AddSubgroup G\ninst✝¹ : FirstCountableTopology G\ninst✝ : N.Normal\n⊢ (nhds 0).IsCountablyGenerated","decl":"@[to_additive (attr := deprecated \"No deprecation message was provided.\" (since := \"2024-08-05\"))]\ntheorem nhds_one_isCountablyGenerated [FirstCountableTopology G] [N.Normal] :\n    (𝓝 (1 : G ⧸ N)).IsCountablyGenerated :=\n  inferInstance\n\n"}
{"name":"QuotientGroup.instTopologicalGroup","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝³ : TopologicalSpace G\ninst✝² : Group G\ninst✝¹ : TopologicalGroup G\nN : Subgroup G\ninst✝ : N.Normal\n⊢ TopologicalGroup (HasQuotient.Quotient G N)","decl":"@[to_additive]\ninstance instTopologicalGroup [N.Normal] : TopologicalGroup (G ⧸ N) where\n  continuous_mul := by\n    rw [← (isOpenQuotientMap_mk.prodMap isOpenQuotientMap_mk).continuous_comp_iff]\n    exact continuous_mk.comp continuous_mul\n  continuous_inv := continuous_inv.quotient_map' _\n\n"}
{"name":"QuotientAddGroup.instTopologicalAddGroup","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝³ : TopologicalSpace G\ninst✝² : AddGroup G\ninst✝¹ : TopologicalAddGroup G\nN : AddSubgroup G\ninst✝ : N.Normal\n⊢ TopologicalAddGroup (HasQuotient.Quotient G N)","decl":"@[to_additive]\ninstance instTopologicalGroup [N.Normal] : TopologicalGroup (G ⧸ N) where\n  continuous_mul := by\n    rw [← (isOpenQuotientMap_mk.prodMap isOpenQuotientMap_mk).continuous_comp_iff]\n    exact continuous_mk.comp continuous_mul\n  continuous_inv := continuous_inv.quotient_map' _\n\n"}
{"name":"topologicalAddGroup_quotient","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝³ : TopologicalSpace G\ninst✝² : AddGroup G\ninst✝¹ : TopologicalAddGroup G\nN : AddSubgroup G\ninst✝ : N.Normal\n⊢ TopologicalAddGroup (HasQuotient.Quotient G N)","decl":"@[to_additive (attr := deprecated \"No deprecation message was provided.\" (since := \"2024-08-05\"))]\ntheorem _root_.topologicalGroup_quotient [N.Normal] : TopologicalGroup (G ⧸ N) :=\n  instTopologicalGroup N\n\n"}
{"name":"topologicalGroup_quotient","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝³ : TopologicalSpace G\ninst✝² : Group G\ninst✝¹ : TopologicalGroup G\nN : Subgroup G\ninst✝ : N.Normal\n⊢ TopologicalGroup (HasQuotient.Quotient G N)","decl":"@[to_additive (attr := deprecated \"No deprecation message was provided.\" (since := \"2024-08-05\"))]\ntheorem _root_.topologicalGroup_quotient [N.Normal] : TopologicalGroup (G ⧸ N) :=\n  instTopologicalGroup N\n\n"}
{"name":"QuotientGroup.isClosedMap_coe","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝² : TopologicalSpace G\ninst✝¹ : Group G\ninst✝ : TopologicalGroup G\nH : Subgroup G\nhH : IsCompact ↑H\n⊢ IsClosedMap QuotientGroup.mk","decl":"@[to_additive]\ntheorem isClosedMap_coe {H : Subgroup G} (hH : IsCompact (H : Set G)) :\n    IsClosedMap ((↑) : G → G ⧸ H) := by\n  intro t ht\n  rw [← (isQuotientMap_mk H).isClosed_preimage, preimage_image_mk_eq_mul]\n  exact ht.mul_right_of_isCompact hH\n\n"}
{"name":"QuotientAddGroup.isClosedMap_coe","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝² : TopologicalSpace G\ninst✝¹ : AddGroup G\ninst✝ : TopologicalAddGroup G\nH : AddSubgroup G\nhH : IsCompact ↑H\n⊢ IsClosedMap QuotientAddGroup.mk","decl":"@[to_additive]\ntheorem isClosedMap_coe {H : Subgroup G} (hH : IsCompact (H : Set G)) :\n    IsClosedMap ((↑) : G → G ⧸ H) := by\n  intro t ht\n  rw [← (isQuotientMap_mk H).isClosed_preimage, preimage_image_mk_eq_mul]\n  exact ht.mul_right_of_isCompact hH\n\n"}
{"name":"QuotientGroup.instT3Space","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝² : TopologicalSpace G\ninst✝¹ : Group G\nN : Subgroup G\ninst✝ : N.Normal\nhN : IsClosed ↑N\n⊢ T3Space (HasQuotient.Quotient G N)","decl":"@[to_additive]\ninstance instT3Space [N.Normal] [hN : IsClosed (N : Set G)] : T3Space (G ⧸ N) := by\n  rw [← QuotientGroup.ker_mk' N] at hN\n  haveI := TopologicalGroup.t1Space (G ⧸ N) ((isQuotientMap_mk N).isClosed_preimage.mp hN)\n  infer_instance\n\n"}
{"name":"QuotientAddGroup.instT3Space","module":"Mathlib.Topology.Algebra.Group.Quotient","initialProofState":"G : Type u_1\ninst✝² : TopologicalSpace G\ninst✝¹ : AddGroup G\nN : AddSubgroup G\ninst✝ : N.Normal\nhN : IsClosed ↑N\n⊢ T3Space (HasQuotient.Quotient G N)","decl":"@[to_additive]\ninstance instT3Space [N.Normal] [hN : IsClosed (N : Set G)] : T3Space (G ⧸ N) := by\n  rw [← QuotientGroup.ker_mk' N] at hN\n  haveI := TopologicalGroup.t1Space (G ⧸ N) ((isQuotientMap_mk N).isClosed_preimage.mp hN)\n  infer_instance\n\n"}
