{"name":"IsTopologicallyNilpotent.map","module":"Mathlib.Topology.Algebra.TopologicallyNilpotent","initialProofState":"R : Type u_1\nS : Type u_2\ninst‚úù‚Åµ : TopologicalSpace R\ninst‚úù‚Å¥ : MonoidWithZero R\ninst‚úù¬≥ : MonoidWithZero S\ninst‚úù¬≤ : TopologicalSpace S\nF : Type u_3\ninst‚úù¬π : FunLike F R S\ninst‚úù : MonoidWithZeroHomClass F R S\nœÜ : F\nhœÜ : Continuous ‚áëœÜ\na : R\nha : IsTopologicallyNilpotent a\n‚ä¢ IsTopologicallyNilpotent (œÜ a)","decl":"/-- The image of a topologically nilpotent element under a continuous morphism\n  is topologically nilpotent -/\ntheorem map {F : Type*} [FunLike F R S] [MonoidWithZeroHomClass F R S]\n    {œÜ : F} (hœÜ : Continuous œÜ) {a : R} (ha : IsTopologicallyNilpotent a) :\n    IsTopologicallyNilpotent (œÜ a) := by\n  unfold IsTopologicallyNilpotent at ha ‚ä¢\n  simp_rw [‚Üê map_pow]\n  exact (map_zero œÜ ‚ñ∏ hœÜ.tendsto 0).comp ha\n\n"}
{"name":"IsTopologicallyNilpotent.zero","module":"Mathlib.Topology.Algebra.TopologicallyNilpotent","initialProofState":"R : Type u_1\ninst‚úù¬π : TopologicalSpace R\ninst‚úù : MonoidWithZero R\n‚ä¢ IsTopologicallyNilpotent 0","decl":"/-- `0` is topologically nilpotent -/\ntheorem zero : IsTopologicallyNilpotent (0 : R) :=\n  tendsto_atTop_of_eventually_const (i‚ÇÄ := 1)\n    (fun _ hi => by rw [zero_pow (Nat.ne_zero_iff_zero_lt.mpr hi)])\n\n"}
{"name":"IsTopologicallyNilpotent.exists_pow_mem_of_mem_nhds","module":"Mathlib.Topology.Algebra.TopologicallyNilpotent","initialProofState":"R : Type u_1\ninst‚úù¬π : TopologicalSpace R\ninst‚úù : MonoidWithZero R\na : R\nha : IsTopologicallyNilpotent a\nv : Set R\nhv : Membership.mem (nhds 0) v\n‚ä¢ Exists fun n => Membership.mem v (HPow.hPow a n)","decl":"theorem exists_pow_mem_of_mem_nhds {a : R} (ha : IsTopologicallyNilpotent a)\n    {v : Set R} (hv : v ‚àà ùìù 0) :\n    ‚àÉ n, a ^ n ‚àà v :=\n  (ha.eventually_mem hv).exists\n\n"}
{"name":"IsTopologicallyNilpotent.mul_right_of_commute","module":"Mathlib.Topology.Algebra.TopologicallyNilpotent","initialProofState":"R : Type u_1\ninst‚úù¬≤ : TopologicalSpace R\ninst‚úù¬π : Ring R\ninst‚úù : IsLinearTopology (MulOpposite R) R\na b : R\nha : IsTopologicallyNilpotent a\nhab : Commute a b\n‚ä¢ IsTopologicallyNilpotent (HMul.hMul a b)","decl":"/-- If `a` and `b` commute and `a` is topologically nilpotent,\n  then `a * b` is topologically nilpotent. -/\ntheorem mul_right_of_commute [IsLinearTopology R·µê·µí·µñ R]\n    {a b : R} (ha : IsTopologicallyNilpotent a) (hab : Commute a b) :\n    IsTopologicallyNilpotent (a * b) := by\n  simp_rw [IsTopologicallyNilpotent, hab.mul_pow]\n  exact IsLinearTopology.tendsto_mul_zero_of_left _ _ ha\n\n"}
{"name":"IsTopologicallyNilpotent.mul_left_of_commute","module":"Mathlib.Topology.Algebra.TopologicallyNilpotent","initialProofState":"R : Type u_1\ninst‚úù¬≤ : TopologicalSpace R\ninst‚úù¬π : Ring R\ninst‚úù : IsLinearTopology R R\na b : R\nhb : IsTopologicallyNilpotent b\nhab : Commute a b\n‚ä¢ IsTopologicallyNilpotent (HMul.hMul a b)","decl":"/-- If `a` and `b` commute and `b` is topologically nilpotent,\n  then `a * b` is topologically nilpotent. -/\n theorem mul_left_of_commute [IsLinearTopology R R] {a b : R}\n    (hb : IsTopologicallyNilpotent b) (hab : Commute a b) :\n    IsTopologicallyNilpotent (a * b) := by\n  simp_rw [IsTopologicallyNilpotent, hab.mul_pow]\n  exact IsLinearTopology.tendsto_mul_zero_of_right _ _ hb\n\n"}
{"name":"IsTopologicallyNilpotent.add_of_commute","module":"Mathlib.Topology.Algebra.TopologicallyNilpotent","initialProofState":"R : Type u_1\ninst‚úù¬≤ : TopologicalSpace R\ninst‚úù¬π : Ring R\ninst‚úù : IsLinearTopology R R\na b : R\nha : IsTopologicallyNilpotent a\nhb : IsTopologicallyNilpotent b\nh : Commute a b\n‚ä¢ IsTopologicallyNilpotent (HAdd.hAdd a b)","decl":"/-- If `a` and `b` are topologically nilpotent and commute,\n  then `a + b` is topologically nilpotent. -/\ntheorem add_of_commute [IsLinearTopology R R] {a b : R}\n    (ha : IsTopologicallyNilpotent a) (hb : IsTopologicallyNilpotent b) (h : Commute a b) :\n    IsTopologicallyNilpotent (a + b) := by\n  simp only [IsTopologicallyNilpotent, atTop_basis.tendsto_iff IsLinearTopology.hasBasis_ideal,\n    true_and]\n  intro I I_mem_nhds\n  obtain ‚ü®na, ha‚ü© := ha.exists_pow_mem_of_mem_nhds I_mem_nhds\n  obtain ‚ü®nb, hb‚ü© := hb.exists_pow_mem_of_mem_nhds I_mem_nhds\n  exact ‚ü®na + nb, fun m hm ‚Ü¶\n    I.add_pow_mem_of_pow_mem_of_le_of_commute ha hb (le_trans hm (Nat.le_add_right _ _)) h‚ü©\n\n"}
{"name":"IsTopologicallyNilpotent.mul_right","module":"Mathlib.Topology.Algebra.TopologicallyNilpotent","initialProofState":"R : Type u_1\ninst‚úù¬≤ : TopologicalSpace R\ninst‚úù¬π : CommRing R\ninst‚úù : IsLinearTopology R R\na : R\nha : IsTopologicallyNilpotent a\nb : R\n‚ä¢ IsTopologicallyNilpotent (HMul.hMul a b)","decl":"/-- If `a` is topologically nilpotent, then `a * b` is topologically nilpotent. -/\ntheorem mul_right {a : R} (ha : IsTopologicallyNilpotent a) (b : R) :\n    IsTopologicallyNilpotent (a * b) :=\n  ha.mul_right_of_commute (Commute.all ..)\n\n"}
{"name":"IsTopologicallyNilpotent.mul_left","module":"Mathlib.Topology.Algebra.TopologicallyNilpotent","initialProofState":"R : Type u_1\ninst‚úù¬≤ : TopologicalSpace R\ninst‚úù¬π : CommRing R\ninst‚úù : IsLinearTopology R R\na b : R\nhb : IsTopologicallyNilpotent b\n‚ä¢ IsTopologicallyNilpotent (HMul.hMul a b)","decl":"/-- If `b` is topologically nilpotent, then `a * b` is topologically nilpotent. -/\n theorem mul_left (a : R) {b : R} (hb : IsTopologicallyNilpotent b) :\n    IsTopologicallyNilpotent (a * b) :=\n  hb.mul_left_of_commute (Commute.all ..)\n\n"}
{"name":"IsTopologicallyNilpotent.add","module":"Mathlib.Topology.Algebra.TopologicallyNilpotent","initialProofState":"R : Type u_1\ninst‚úù¬≤ : TopologicalSpace R\ninst‚úù¬π : CommRing R\ninst‚úù : IsLinearTopology R R\na b : R\nha : IsTopologicallyNilpotent a\nhb : IsTopologicallyNilpotent b\n‚ä¢ IsTopologicallyNilpotent (HAdd.hAdd a b)","decl":"/-- If `a` and `b` are topologically nilpotent, then `a + b` is topologically nilpotent. -/\ntheorem add {a b : R} (ha : IsTopologicallyNilpotent a) (hb : IsTopologicallyNilpotent b) :\n    IsTopologicallyNilpotent (a + b) :=\n  ha.add_of_commute hb (Commute.all ..)\n\n"}
