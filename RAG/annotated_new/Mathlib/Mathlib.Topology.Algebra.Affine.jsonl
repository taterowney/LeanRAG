{"name":"AffineMap.continuous_iff","module":"Mathlib.Topology.Algebra.Affine","initialProofState":"R : Type u_1\nE : Type u_2\nF : Type u_3\ninst✝⁷ : AddCommGroup E\ninst✝⁶ : TopologicalSpace E\ninst✝⁵ : AddCommGroup F\ninst✝⁴ : TopologicalSpace F\ninst✝³ : TopologicalAddGroup F\ninst✝² : Ring R\ninst✝¹ : Module R E\ninst✝ : Module R F\nf : AffineMap R E F\n⊢ Iff (Continuous ⇑f) (Continuous ⇑f.linear)","decl":"/-- An affine map is continuous iff its underlying linear map is continuous. See also\n`AffineMap.continuous_linear_iff`. -/\ntheorem continuous_iff {f : E →ᵃ[R] F} : Continuous f ↔ Continuous f.linear := by\n  constructor\n  · intro hc\n    rw [decomp' f]\n    exact hc.sub continuous_const\n  · intro hc\n    rw [decomp f]\n    exact hc.add continuous_const\n\n"}
{"name":"AffineMap.lineMap_continuous","module":"Mathlib.Topology.Algebra.Affine","initialProofState":"R : Type u_1\nF : Type u_3\ninst✝⁶ : AddCommGroup F\ninst✝⁵ : TopologicalSpace F\ninst✝⁴ : TopologicalAddGroup F\ninst✝³ : Ring R\ninst✝² : Module R F\ninst✝¹ : TopologicalSpace R\ninst✝ : ContinuousSMul R F\np v : F\n⊢ Continuous ⇑(AffineMap.lineMap p v)","decl":"/-- The line map is continuous. -/\n@[continuity]\ntheorem lineMap_continuous [TopologicalSpace R] [ContinuousSMul R F] {p v : F} :\n    Continuous (lineMap p v : R →ᵃ[R] F) :=\n  continuous_iff.mpr <|\n    (continuous_id.smul continuous_const).add <| @continuous_const _ _ _ _ (0 : F)\n\n"}
{"name":"AffineMap.homothety_continuous","module":"Mathlib.Topology.Algebra.Affine","initialProofState":"R : Type u_1\nF : Type u_3\ninst✝⁵ : AddCommGroup F\ninst✝⁴ : TopologicalSpace F\ninst✝³ : TopologicalAddGroup F\ninst✝² : CommRing R\ninst✝¹ : Module R F\ninst✝ : ContinuousConstSMul R F\nx : F\nt : R\n⊢ Continuous ⇑(AffineMap.homothety x t)","decl":"@[continuity]\ntheorem homothety_continuous (x : F) (t : R) : Continuous <| homothety x t := by\n  suffices ⇑(homothety x t) = fun y => t • (y - x) + x by\n    rw [this]\n    exact ((continuous_id.sub continuous_const).const_smul _).add continuous_const\n    -- Porting note: proof was `by continuity`\n  ext y\n  simp [homothety_apply]\n\n"}
{"name":"AffineMap.homothety_isOpenMap","module":"Mathlib.Topology.Algebra.Affine","initialProofState":"R : Type u_1\nF : Type u_3\ninst✝⁵ : AddCommGroup F\ninst✝⁴ : TopologicalSpace F\ninst✝³ : TopologicalAddGroup F\ninst✝² : Field R\ninst✝¹ : Module R F\ninst✝ : ContinuousConstSMul R F\nx : F\nt : R\nht : Ne t 0\n⊢ IsOpenMap ⇑(AffineMap.homothety x t)","decl":"theorem homothety_isOpenMap (x : F) (t : R) (ht : t ≠ 0) : IsOpenMap <| homothety x t := by\n  apply IsOpenMap.of_inverse (homothety_continuous x t⁻¹) <;> intro e <;>\n    simp [← AffineMap.comp_apply, ← homothety_mul, ht]\n\n"}
