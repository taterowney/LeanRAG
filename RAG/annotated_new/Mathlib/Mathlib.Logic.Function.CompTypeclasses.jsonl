{"name":"CompTriple.comp_eq","module":"Mathlib.Logic.Function.CompTypeclasses","initialProofState":"M : Type u_1\nN : Type u_2\nP : Type u_3\nφ : M → N\nψ : N → P\nχ : outParam (M → P)\nself : CompTriple φ ψ χ\n⊢ Eq (Function.comp ψ φ) χ","decl":"/-- Class of composing triples -/\nclass CompTriple {M N P : Type*} (φ : M → N) (ψ : N → P) (χ : outParam (M → P)) : Prop where\n  /-- The maps form a commuting triangle -/\n  comp_eq : ψ.comp φ = χ\n\n"}
{"name":"CompTriple.IsId.eq_id","module":"Mathlib.Logic.Function.CompTypeclasses","initialProofState":"M : Type u_1\nσ : M → M\nself : CompTriple.IsId σ\n⊢ Eq σ id","decl":"/-- Class of Id maps -/\nclass IsId {M : Type*} (σ : M → M) : Prop where\n  eq_id : σ = id\n\n"}
{"name":"CompTriple.instIsIdId","module":"Mathlib.Logic.Function.CompTypeclasses","initialProofState":"M : Type u_1\n⊢ CompTriple.IsId id","decl":"instance {M : Type*} : IsId (@id M) where\n  eq_id := rfl\n\n"}
{"name":"CompTriple.instComp_id","module":"Mathlib.Logic.Function.CompTypeclasses","initialProofState":"N : Type u_1\nP : Type u_2\nφ : N → N\ninst✝ : CompTriple.IsId φ\nψ : N → P\n⊢ CompTriple φ ψ ψ","decl":"instance instComp_id {N P : Type*} {φ : N → N} [IsId φ] {ψ : N → P} :\n    CompTriple φ ψ ψ where\n  comp_eq := by simp only [IsId.eq_id, Function.comp_id]\n\n"}
{"name":"CompTriple.instId_comp","module":"Mathlib.Logic.Function.CompTypeclasses","initialProofState":"M : Type u_1\nN : Type u_2\nφ : M → N\nψ : N → N\ninst✝ : CompTriple.IsId ψ\n⊢ CompTriple φ ψ φ","decl":"instance instId_comp {M N : Type*} {φ : M → N} {ψ : N → N} [IsId ψ] :\n    CompTriple φ ψ φ where\n  comp_eq := by simp only [IsId.eq_id, Function.id_comp]\n\n"}
{"name":"CompTriple.comp","module":"Mathlib.Logic.Function.CompTypeclasses","initialProofState":"M : Type u_1\nN : Type u_2\nP : Type u_3\nφ : M → N\nψ : N → P\n⊢ CompTriple φ ψ (Function.comp ψ φ)","decl":"/-- `φ`, `ψ` and `ψ ∘ φ` for` a `CompTriple` -/\ntheorem comp {M N P : Type*}\n    {φ : M → N} {ψ : N → P} :\n    CompTriple φ ψ  (ψ.comp φ) where\n  comp_eq := rfl\n\n"}
{"name":"CompTriple.comp_inv","module":"Mathlib.Logic.Function.CompTypeclasses","initialProofState":"M : Type u_1\nN : Type u_2\nφ : M → N\nψ : N → M\nh : Function.RightInverse φ ψ\nχ : M → M\ninst✝ : CompTriple.IsId χ\n⊢ CompTriple φ ψ χ","decl":"lemma comp_inv {M N : Type*} {φ : M → N} {ψ : N → M}\n    (h : Function.RightInverse φ ψ) {χ : M → M} [IsId χ] :\n    CompTriple φ ψ χ where\n  comp_eq := by simp only [IsId.eq_id, h.id]\n\n"}
{"name":"CompTriple.comp_apply","module":"Mathlib.Logic.Function.CompTypeclasses","initialProofState":"M : Type u_1\nN : Type u_2\nP : Type u_3\nφ : M → N\nψ : N → P\nχ : M → P\nh : CompTriple φ ψ χ\nx : M\n⊢ Eq (ψ (φ x)) (χ x)","decl":"lemma comp_apply {M N P : Type*}\n    {φ : M → N} {ψ : N → P} {χ : M → P} (h : CompTriple φ ψ χ) (x : M) :\n    ψ (φ x) = χ x := by\n  rw [← h.comp_eq, Function.comp_apply]\n\n"}
