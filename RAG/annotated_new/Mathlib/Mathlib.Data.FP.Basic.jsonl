{"name":"FP.RMode.NE.sizeOf_spec","module":"Mathlib.Data.FP.Basic","initialProofState":"⊢ Eq (SizeOf.sizeOf FP.RMode.NE) 1","decl":"@[nolint docBlame]\ninductive RMode\n  | NE -- round to nearest even\n  deriving Inhabited\n\n"}
{"name":"FP.FloatCfg.precPos","module":"Mathlib.Data.FP.Basic","initialProofState":"self : FP.FloatCfg\n⊢ LT.lt 0 FP.FloatCfg.prec","decl":"@[nolint docBlame]\nclass FloatCfg where\n  (prec emax : ℕ)\n  precPos : 0 < prec\n  precMax : prec ≤ emax\n"}
{"name":"FP.FloatCfg.precMax","module":"Mathlib.Data.FP.Basic","initialProofState":"self : FP.FloatCfg\n⊢ LE.le FP.FloatCfg.prec FP.FloatCfg.emax","decl":"@[nolint docBlame]\nclass FloatCfg where\n  (prec emax : ℕ)\n  precPos : 0 < prec\n  precMax : prec ≤ emax\n"}
{"name":"FP.Float.finite.inj","module":"Mathlib.Data.FP.Basic","initialProofState":"C : FP.FloatCfg\na✝³ : Bool\ne✝ : Int\nm✝ : Nat\na✝² : FP.ValidFinite e✝ m✝\na✝¹ : Bool\ne : Int\nm : Nat\na✝ : FP.ValidFinite e m\nx✝ : Eq (FP.Float.finite a✝³ e✝ m✝ a✝²) (FP.Float.finite a✝¹ e m a✝)\n⊢ And (Eq a✝³ a✝¹) (And (Eq e✝ e) (Eq m✝ m))","decl":"@[nolint docBlame]\ninductive Float\n  | inf : Bool → Float\n  | nan : Float\n  | finite : Bool → ∀ e m, ValidFinite e m → Float\n\n"}
{"name":"FP.Float.nan.sizeOf_spec","module":"Mathlib.Data.FP.Basic","initialProofState":"C : FP.FloatCfg\n⊢ Eq (SizeOf.sizeOf FP.Float.nan) 1","decl":"@[nolint docBlame]\ninductive Float\n  | inf : Bool → Float\n  | nan : Float\n  | finite : Bool → ∀ e m, ValidFinite e m → Float\n\n"}
{"name":"FP.Float.inf.sizeOf_spec","module":"Mathlib.Data.FP.Basic","initialProofState":"C : FP.FloatCfg\na✝ : Bool\n⊢ Eq (SizeOf.sizeOf (FP.Float.inf a✝)) (HAdd.hAdd 1 (SizeOf.sizeOf a✝))","decl":"@[nolint docBlame]\ninductive Float\n  | inf : Bool → Float\n  | nan : Float\n  | finite : Bool → ∀ e m, ValidFinite e m → Float\n\n"}
{"name":"FP.Float.inf.inj","module":"Mathlib.Data.FP.Basic","initialProofState":"C : FP.FloatCfg\na✝¹ a✝ : Bool\nx✝ : Eq (FP.Float.inf a✝¹) (FP.Float.inf a✝)\n⊢ Eq a✝¹ a✝","decl":"@[nolint docBlame]\ninductive Float\n  | inf : Bool → Float\n  | nan : Float\n  | finite : Bool → ∀ e m, ValidFinite e m → Float\n\n"}
{"name":"FP.Float.finite.injEq","module":"Mathlib.Data.FP.Basic","initialProofState":"C : FP.FloatCfg\na✝³ : Bool\ne✝ : Int\nm✝ : Nat\na✝² : FP.ValidFinite e✝ m✝\na✝¹ : Bool\ne : Int\nm : Nat\na✝ : FP.ValidFinite e m\n⊢ Eq (Eq (FP.Float.finite a✝³ e✝ m✝ a✝²) (FP.Float.finite a✝¹ e m a✝)) (And (Eq a✝³ a✝¹) (And (Eq e✝ e) (Eq m✝ m)))","decl":"@[nolint docBlame]\ninductive Float\n  | inf : Bool → Float\n  | nan : Float\n  | finite : Bool → ∀ e m, ValidFinite e m → Float\n\n"}
{"name":"FP.Float.finite.sizeOf_spec","module":"Mathlib.Data.FP.Basic","initialProofState":"C : FP.FloatCfg\na✝¹ : Bool\ne : Int\nm : Nat\na✝ : FP.ValidFinite e m\n⊢ Eq (SizeOf.sizeOf (FP.Float.finite a✝¹ e m a✝)) (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd 1 (SizeOf.sizeOf a✝¹)) (SizeOf.sizeOf e)) (SizeOf.sizeOf m)) (SizeOf.sizeOf a✝))","decl":"@[nolint docBlame]\ninductive Float\n  | inf : Bool → Float\n  | nan : Float\n  | finite : Bool → ∀ e m, ValidFinite e m → Float\n\n"}
{"name":"FP.Float.inf.injEq","module":"Mathlib.Data.FP.Basic","initialProofState":"C : FP.FloatCfg\na✝¹ a✝ : Bool\n⊢ Eq (Eq (FP.Float.inf a✝¹) (FP.Float.inf a✝)) (Eq a✝¹ a✝)","decl":"@[nolint docBlame]\ninductive Float\n  | inf : Bool → Float\n  | nan : Float\n  | finite : Bool → ∀ e m, ValidFinite e m → Float\n\n"}
{"name":"FP.Float.Zero.valid","module":"Mathlib.Data.FP.Basic","initialProofState":"C : FP.FloatCfg\n⊢ FP.ValidFinite FP.emin 0","decl":"theorem Float.Zero.valid : ValidFinite emin 0 :=\n  ⟨by\n    rw [add_sub_assoc]\n    apply le_add_of_nonneg_right\n    apply sub_nonneg_of_le\n    apply Int.ofNat_le_ofNat_of_le\n    exact C.precPos,\n    suffices prec ≤ 2 * emax by\n      rw [← Int.ofNat_le] at this\n      rw [← sub_nonneg] at *\n      simp only [emin, emax] at *\n      omega\n    le_trans C.precMax (Nat.le_mul_of_pos_left _ Nat.zero_lt_two),\n    by (rw [max_eq_right]; simp [sub_eq_add_neg, Int.ofNat_zero_le])⟩\n\n"}
