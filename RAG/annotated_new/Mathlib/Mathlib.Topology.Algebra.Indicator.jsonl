{"name":"continuous_mulIndicator","module":"Mathlib.Topology.Algebra.Indicator","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\nf : α → β\ns : Set α\ninst✝ : One β\nhs : ∀ (a : α), Membership.mem (frontier s) a → Eq (f a) 1\nhf : ContinuousOn f (closure s)\n⊢ Continuous (s.mulIndicator f)","decl":"@[to_additive]\nlemma continuous_mulIndicator (hs : ∀ a ∈ frontier s, f a = 1) (hf : ContinuousOn f (closure s)) :\n    Continuous (mulIndicator s f) := by\n  classical exact continuous_piecewise hs hf continuousOn_const\n\n"}
{"name":"continuous_indicator","module":"Mathlib.Topology.Algebra.Indicator","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\nf : α → β\ns : Set α\ninst✝ : Zero β\nhs : ∀ (a : α), Membership.mem (frontier s) a → Eq (f a) 0\nhf : ContinuousOn f (closure s)\n⊢ Continuous (s.indicator f)","decl":"@[to_additive]\nlemma continuous_mulIndicator (hs : ∀ a ∈ frontier s, f a = 1) (hf : ContinuousOn f (closure s)) :\n    Continuous (mulIndicator s f) := by\n  classical exact continuous_piecewise hs hf continuousOn_const\n\n"}
{"name":"Continuous.indicator","module":"Mathlib.Topology.Algebra.Indicator","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\nf : α → β\ns : Set α\ninst✝ : Zero β\nhs : ∀ (a : α), Membership.mem (frontier s) a → Eq (f a) 0\nhf : Continuous f\n⊢ Continuous (s.indicator f)","decl":"@[to_additive]\nprotected lemma Continuous.mulIndicator (hs : ∀ a ∈ frontier s, f a = 1) (hf : Continuous f) :\n    Continuous (mulIndicator s f) := by\n  classical exact hf.piecewise hs continuous_const\n\n"}
{"name":"Continuous.mulIndicator","module":"Mathlib.Topology.Algebra.Indicator","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\nf : α → β\ns : Set α\ninst✝ : One β\nhs : ∀ (a : α), Membership.mem (frontier s) a → Eq (f a) 1\nhf : Continuous f\n⊢ Continuous (s.mulIndicator f)","decl":"@[to_additive]\nprotected lemma Continuous.mulIndicator (hs : ∀ a ∈ frontier s, f a = 1) (hf : Continuous f) :\n    Continuous (mulIndicator s f) := by\n  classical exact hf.piecewise hs continuous_const\n\n"}
{"name":"ContinuousOn.continuousAt_indicator","module":"Mathlib.Topology.Algebra.Indicator","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\nf : α → β\ns : Set α\ninst✝ : Zero β\nhf : ContinuousOn f (interior s)\nx : α\nhx : Not (Membership.mem (frontier s) x)\n⊢ ContinuousAt (s.indicator f) x","decl":"@[to_additive]\ntheorem ContinuousOn.continuousAt_mulIndicator (hf : ContinuousOn f (interior s)) {x : α}\n    (hx : x ∉ frontier s) :\n    ContinuousAt (s.mulIndicator f) x := by\n  rw [← Set.mem_compl_iff, compl_frontier_eq_union_interior] at hx\n  obtain h | h := hx\n  · have hs : interior s ∈ 𝓝 x := mem_interior_iff_mem_nhds.mp (by rwa [interior_interior])\n    exact ContinuousAt.congr (hf.continuousAt hs) <| Filter.eventuallyEq_iff_exists_mem.mpr\n      ⟨interior s, hs, Set.eqOn_mulIndicator.symm.mono interior_subset⟩\n  · exact ContinuousAt.congr continuousAt_const <| Filter.eventuallyEq_iff_exists_mem.mpr\n      ⟨sᶜ, mem_interior_iff_mem_nhds.mp h, Set.eqOn_mulIndicator'.symm⟩\n\n"}
{"name":"ContinuousOn.continuousAt_mulIndicator","module":"Mathlib.Topology.Algebra.Indicator","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\nf : α → β\ns : Set α\ninst✝ : One β\nhf : ContinuousOn f (interior s)\nx : α\nhx : Not (Membership.mem (frontier s) x)\n⊢ ContinuousAt (s.mulIndicator f) x","decl":"@[to_additive]\ntheorem ContinuousOn.continuousAt_mulIndicator (hf : ContinuousOn f (interior s)) {x : α}\n    (hx : x ∉ frontier s) :\n    ContinuousAt (s.mulIndicator f) x := by\n  rw [← Set.mem_compl_iff, compl_frontier_eq_union_interior] at hx\n  obtain h | h := hx\n  · have hs : interior s ∈ 𝓝 x := mem_interior_iff_mem_nhds.mp (by rwa [interior_interior])\n    exact ContinuousAt.congr (hf.continuousAt hs) <| Filter.eventuallyEq_iff_exists_mem.mpr\n      ⟨interior s, hs, Set.eqOn_mulIndicator.symm.mono interior_subset⟩\n  · exact ContinuousAt.congr continuousAt_const <| Filter.eventuallyEq_iff_exists_mem.mpr\n      ⟨sᶜ, mem_interior_iff_mem_nhds.mp h, Set.eqOn_mulIndicator'.symm⟩\n\n"}
{"name":"IsClopen.continuous_indicator","module":"Mathlib.Topology.Algebra.Indicator","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\nf : α → β\ns : Set α\ninst✝ : Zero β\nhs : IsClopen s\nhf : Continuous f\n⊢ Continuous (s.indicator f)","decl":"@[to_additive]\nlemma IsClopen.continuous_mulIndicator (hs : IsClopen s) (hf : Continuous f) :\n    Continuous (s.mulIndicator f) :=\n  hf.mulIndicator (by simp [isClopen_iff_frontier_eq_empty.mp hs])\n"}
{"name":"IsClopen.continuous_mulIndicator","module":"Mathlib.Topology.Algebra.Indicator","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\nf : α → β\ns : Set α\ninst✝ : One β\nhs : IsClopen s\nhf : Continuous f\n⊢ Continuous (s.mulIndicator f)","decl":"@[to_additive]\nlemma IsClopen.continuous_mulIndicator (hs : IsClopen s) (hf : Continuous f) :\n    Continuous (s.mulIndicator f) :=\n  hf.mulIndicator (by simp [isClopen_iff_frontier_eq_empty.mp hs])\n"}
