{"name":"NonUnitalContinuousFunctionalCalculus.exists_cfc_of_predicate","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : outParam (A → Prop)\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nself : NonUnitalContinuousFunctionalCalculus R p\na : A\na✝ : p a\n⊢ Exists fun φ => And (Topology.IsClosedEmbedding ⇑φ) (And (Eq (φ { toContinuousMap := ContinuousMap.restrict (quasispectrum R a) (ContinuousMap.id R), map_zero' := ⋯ }) a) (And (∀ (f : ContinuousMapZero (↑(quasispectrum R a)) R), Eq (quasispectrum R (φ f)) (Set.range ⇑f)) (∀ (f : ContinuousMapZero (↑(quasispectrum R a)) R), p (φ f))))","decl":"/-- A non-unital star `R`-algebra `A` has a *continuous functional calculus* for elements\nsatisfying the property `p : A → Prop` if\n\n+ for every such element `a : A` there is a non-unital star algebra homomorphism\n  `cfcₙHom : C(quasispectrum R a, R)₀ →⋆ₙₐ[R] A` sending the (restriction of) the identity map\n  to `a`.\n+ `cfcₙHom` is a closed embedding for which the quasispectrum of the image of function `f` is its\n  range.\n+ `cfcₙHom` preserves the property `p`.\n\nThe property `p` is marked as an `outParam` so that the user need not specify it. In practice,\n\n+ for `R := ℂ`, we choose `p := IsStarNormal`,\n+ for `R := ℝ`, we choose `p := IsSelfAdjoint`,\n+ for `R := ℝ≥0`, we choose `p := (0 ≤ ·)`.\n\nInstead of directly providing the data we opt instead for a `Prop` class. In all relevant cases,\nthe continuous functional calculus is uniquely determined, and utilizing this approach\nprevents diamonds or problems arising from multiple instances. -/\nclass NonUnitalContinuousFunctionalCalculus (R : Type*) {A : Type*} (p : outParam (A → Prop))\n    [CommSemiring R] [Nontrivial R] [StarRing R] [MetricSpace R] [TopologicalSemiring R]\n    [ContinuousStar R] [NonUnitalRing A] [StarRing A] [TopologicalSpace A] [Module R A]\n    [IsScalarTower R A A] [SMulCommClass R A A] : Prop where\n  predicate_zero : p 0\n  [compactSpace_quasispectrum : ∀ a : A, CompactSpace (σₙ R a)]\n  exists_cfc_of_predicate : ∀ a, p a → ∃ φ : C(σₙ R a, R)₀ →⋆ₙₐ[R] A,\n    IsClosedEmbedding φ ∧ φ ⟨(ContinuousMap.id R).restrict <| σₙ R a, rfl⟩ = a ∧\n      (∀ f, σₙ R (φ f) = Set.range f) ∧ ∀ f, p (φ f)\n\n-- this instance should not be activated everywhere but it is useful when developing generic API\n-- for the continuous functional calculus\n"}
{"name":"NonUnitalContinuousFunctionalCalculus.predicate_zero","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : outParam (A → Prop)\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nself : NonUnitalContinuousFunctionalCalculus R p\n⊢ p 0","decl":"/-- A non-unital star `R`-algebra `A` has a *continuous functional calculus* for elements\nsatisfying the property `p : A → Prop` if\n\n+ for every such element `a : A` there is a non-unital star algebra homomorphism\n  `cfcₙHom : C(quasispectrum R a, R)₀ →⋆ₙₐ[R] A` sending the (restriction of) the identity map\n  to `a`.\n+ `cfcₙHom` is a closed embedding for which the quasispectrum of the image of function `f` is its\n  range.\n+ `cfcₙHom` preserves the property `p`.\n\nThe property `p` is marked as an `outParam` so that the user need not specify it. In practice,\n\n+ for `R := ℂ`, we choose `p := IsStarNormal`,\n+ for `R := ℝ`, we choose `p := IsSelfAdjoint`,\n+ for `R := ℝ≥0`, we choose `p := (0 ≤ ·)`.\n\nInstead of directly providing the data we opt instead for a `Prop` class. In all relevant cases,\nthe continuous functional calculus is uniquely determined, and utilizing this approach\nprevents diamonds or problems arising from multiple instances. -/\nclass NonUnitalContinuousFunctionalCalculus (R : Type*) {A : Type*} (p : outParam (A → Prop))\n    [CommSemiring R] [Nontrivial R] [StarRing R] [MetricSpace R] [TopologicalSemiring R]\n    [ContinuousStar R] [NonUnitalRing A] [StarRing A] [TopologicalSpace A] [Module R A]\n    [IsScalarTower R A A] [SMulCommClass R A A] : Prop where\n  predicate_zero : p 0\n  [compactSpace_quasispectrum : ∀ a : A, CompactSpace (σₙ R a)]\n  exists_cfc_of_predicate : ∀ a, p a → ∃ φ : C(σₙ R a, R)₀ →⋆ₙₐ[R] A,\n    IsClosedEmbedding φ ∧ φ ⟨(ContinuousMap.id R).restrict <| σₙ R a, rfl⟩ = a ∧\n      (∀ f, σₙ R (φ f) = Set.range f) ∧ ∀ f, p (φ f)\n\n-- this instance should not be activated everywhere but it is useful when developing generic API\n-- for the continuous functional calculus\n"}
{"name":"NonUnitalContinuousFunctionalCalculus.compactSpace_quasispectrum","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : outParam (A → Prop)\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nself : NonUnitalContinuousFunctionalCalculus R p\na : A\n⊢ CompactSpace ↑(quasispectrum R a)","decl":"/-- A non-unital star `R`-algebra `A` has a *continuous functional calculus* for elements\nsatisfying the property `p : A → Prop` if\n\n+ for every such element `a : A` there is a non-unital star algebra homomorphism\n  `cfcₙHom : C(quasispectrum R a, R)₀ →⋆ₙₐ[R] A` sending the (restriction of) the identity map\n  to `a`.\n+ `cfcₙHom` is a closed embedding for which the quasispectrum of the image of function `f` is its\n  range.\n+ `cfcₙHom` preserves the property `p`.\n\nThe property `p` is marked as an `outParam` so that the user need not specify it. In practice,\n\n+ for `R := ℂ`, we choose `p := IsStarNormal`,\n+ for `R := ℝ`, we choose `p := IsSelfAdjoint`,\n+ for `R := ℝ≥0`, we choose `p := (0 ≤ ·)`.\n\nInstead of directly providing the data we opt instead for a `Prop` class. In all relevant cases,\nthe continuous functional calculus is uniquely determined, and utilizing this approach\nprevents diamonds or problems arising from multiple instances. -/\nclass NonUnitalContinuousFunctionalCalculus (R : Type*) {A : Type*} (p : outParam (A → Prop))\n    [CommSemiring R] [Nontrivial R] [StarRing R] [MetricSpace R] [TopologicalSemiring R]\n    [ContinuousStar R] [NonUnitalRing A] [StarRing A] [TopologicalSpace A] [Module R A]\n    [IsScalarTower R A A] [SMulCommClass R A A] : Prop where\n  predicate_zero : p 0\n  [compactSpace_quasispectrum : ∀ a : A, CompactSpace (σₙ R a)]\n  exists_cfc_of_predicate : ∀ a, p a → ∃ φ : C(σₙ R a, R)₀ →⋆ₙₐ[R] A,\n    IsClosedEmbedding φ ∧ φ ⟨(ContinuousMap.id R).restrict <| σₙ R a, rfl⟩ = a ∧\n      (∀ f, σₙ R (φ f) = Set.range f) ∧ ∀ f, p (φ f)\n\n-- this instance should not be activated everywhere but it is useful when developing generic API\n-- for the continuous functional calculus\n"}
{"name":"ContinuousMapZero.UniqueHom.eq_of_continuous_of_map_id","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝¹² : CommSemiring R\ninst✝¹¹ : StarRing R\ninst✝¹⁰ : MetricSpace R\ninst✝⁹ : TopologicalSemiring R\ninst✝⁸ : ContinuousStar R\ninst✝⁷ : NonUnitalRing A\ninst✝⁶ : StarRing A\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Module R A\ninst✝³ : IsScalarTower R A A\ninst✝² : SMulCommClass R A A\nself : ContinuousMapZero.UniqueHom R A\ns : Set R\ninst✝¹ : CompactSpace ↑s\ninst✝ : Zero ↑s\nh0 : Eq (↑0) 0\nφ ψ : NonUnitalStarAlgHom R (ContinuousMapZero (↑s) R) A\nhφ : Continuous ⇑φ\nhψ : Continuous ⇑ψ\nh : Eq (φ { toContinuousMap := ContinuousMap.restrict s (ContinuousMap.id R), map_zero' := h0 }) (ψ { toContinuousMap := ContinuousMap.restrict s (ContinuousMap.id R), map_zero' := h0 })\n⊢ Eq φ ψ","decl":"/-- A class guaranteeing that the non-unital continuous functional calculus is uniquely determined\nby the properties that it is a continuous non-unital star algebra homomorphism mapping the\n(restriction of) the identity to `a`. This is the necessary tool used to establish `cfcₙHom_comp`\nand the more common variant `cfcₙ_comp`.\n\nThis class will have instances in each of the common cases `ℂ`, `ℝ` and `ℝ≥0` as a consequence of\nthe Stone-Weierstrass theorem. -/\nclass ContinuousMapZero.UniqueHom (R A : Type*) [CommSemiring R] [StarRing R]\n    [MetricSpace R] [TopologicalSemiring R] [ContinuousStar R] [NonUnitalRing A] [StarRing A]\n    [TopologicalSpace A] [Module R A] [IsScalarTower R A A] [SMulCommClass R A A] : Prop where\n  eq_of_continuous_of_map_id (s : Set R) [CompactSpace s] [Zero s] (h0 : (0 : s) = (0 : R))\n    (φ ψ : C(s, R)₀ →⋆ₙₐ[R] A) (hφ : Continuous φ) (hψ : Continuous ψ)\n    (h : φ (⟨.restrict s <| .id R, h0⟩) = ψ (⟨.restrict s <| .id R, h0⟩)) :\n    φ = ψ\n\n"}
{"name":"NonUnitalContinuousFunctionalCalculus.isCompact_quasispectrum","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\na : A\n⊢ IsCompact (quasispectrum R a)","decl":"include instCFCₙ in\nlemma NonUnitalContinuousFunctionalCalculus.isCompact_quasispectrum (a : A) :\n    IsCompact (σₙ R a) :=\n  isCompact_iff_compactSpace.mpr inferInstance\n\n"}
{"name":"NonUnitalStarAlgHom.ext_continuousMap","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝¹³ : CommSemiring R\ninst✝¹² : Nontrivial R\ninst✝¹¹ : StarRing R\ninst✝¹⁰ : MetricSpace R\ninst✝⁹ : TopologicalSemiring R\ninst✝⁸ : ContinuousStar R\ninst✝⁷ : NonUnitalRing A\ninst✝⁶ : StarRing A\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Module R A\ninst✝³ : IsScalarTower R A A\ninst✝² : SMulCommClass R A A\ninst✝¹ : ContinuousMapZero.UniqueHom R A\na : A\ninst✝ : CompactSpace ↑(quasispectrum R a)\nφ ψ : NonUnitalStarAlgHom R (ContinuousMapZero (↑(quasispectrum R a)) R) A\nhφ : Continuous ⇑φ\nhψ : Continuous ⇑ψ\nh : Eq (φ { toContinuousMap := ContinuousMap.restrict (quasispectrum R a) (ContinuousMap.id R), map_zero' := ⋯ }) (ψ { toContinuousMap := ContinuousMap.restrict (quasispectrum R a) (ContinuousMap.id R), map_zero' := ⋯ })\n⊢ Eq φ ψ","decl":"lemma NonUnitalStarAlgHom.ext_continuousMap [UniqueHom R A]\n    (a : A) [CompactSpace (σₙ R a)] (φ ψ : C(σₙ R a, R)₀ →⋆ₙₐ[R] A)\n    (hφ : Continuous φ) (hψ : Continuous ψ)\n    (h : φ ⟨.restrict (σₙ R a) <| .id R, rfl⟩ = ψ ⟨.restrict (σₙ R a) <| .id R, rfl⟩) :\n    φ = ψ :=\n  UniqueHom.eq_of_continuous_of_map_id _ (by simp) φ ψ hφ hψ h\n\n"}
{"name":"cfcₙHom_isClosedEmbedding","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\na : A\nha : p a\n⊢ Topology.IsClosedEmbedding ⇑(cfcₙHom ha)","decl":"lemma cfcₙHom_isClosedEmbedding :\n    IsClosedEmbedding <| (cfcₙHom ha : C(σₙ R a, R)₀ →⋆ₙₐ[R] A) :=\n  (NonUnitalContinuousFunctionalCalculus.exists_cfc_of_predicate a ha).choose_spec.1\n\n"}
{"name":"cfcₙHom_closedEmbedding","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\na : A\nha : p a\n⊢ Topology.IsClosedEmbedding ⇑(cfcₙHom ha)","decl":"@[deprecated (since := \"2024-10-20\")]\nalias cfcₙHom_closedEmbedding := cfcₙHom_isClosedEmbedding\n\n"}
{"name":"cfcₙHom_continuous","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\na : A\nha : p a\n⊢ Continuous ⇑(cfcₙHom ha)","decl":"@[fun_prop]\nlemma cfcₙHom_continuous : Continuous (cfcₙHom ha : C(σₙ R a, R)₀ →⋆ₙₐ[R] A) :=\n  cfcₙHom_isClosedEmbedding ha |>.continuous\n\n"}
{"name":"cfcₙHom_id","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\na : A\nha : p a\n⊢ Eq ((cfcₙHom ha) { toContinuousMap := ContinuousMap.restrict (quasispectrum R a) (ContinuousMap.id R), map_zero' := ⋯ }) a","decl":"lemma cfcₙHom_id :\n    cfcₙHom ha ⟨(ContinuousMap.id R).restrict <| σₙ R a, rfl⟩ = a :=\n  (NonUnitalContinuousFunctionalCalculus.exists_cfc_of_predicate a ha).choose_spec.2.1\n\n"}
{"name":"cfcₙHom_map_quasispectrum","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\na : A\nha : p a\nf : ContinuousMapZero (↑(quasispectrum R a)) R\n⊢ Eq (quasispectrum R ((cfcₙHom ha) f)) (Set.range ⇑f)","decl":"/-- The **spectral mapping theorem** for the non-unital continuous functional calculus. -/\nlemma cfcₙHom_map_quasispectrum (f : C(σₙ R a, R)₀) :\n    σₙ R (cfcₙHom ha f) = Set.range f :=\n  (NonUnitalContinuousFunctionalCalculus.exists_cfc_of_predicate a ha).choose_spec.2.2.1 f\n\n"}
{"name":"cfcₙHom_predicate","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\na : A\nha : p a\nf : ContinuousMapZero (↑(quasispectrum R a)) R\n⊢ p ((cfcₙHom ha) f)","decl":"lemma cfcₙHom_predicate (f : C(σₙ R a, R)₀) :\n    p (cfcₙHom ha f) :=\n  (NonUnitalContinuousFunctionalCalculus.exists_cfc_of_predicate a ha).choose_spec.2.2.2 f\n\n"}
{"name":"cfcₙHom_eq_of_continuous_of_map_id","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹² : CommSemiring R\ninst✝¹¹ : Nontrivial R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalSemiring R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : NonUnitalRing A\ninst✝⁵ : StarRing A\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Module R A\ninst✝² : IsScalarTower R A A\ninst✝¹ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\na : A\nha : p a\ninst✝ : ContinuousMapZero.UniqueHom R A\nφ : NonUnitalStarAlgHom R (ContinuousMapZero (↑(quasispectrum R a)) R) A\nhφ₁ : Continuous ⇑φ\nhφ₂ : Eq (φ { toContinuousMap := ContinuousMap.restrict (quasispectrum R a) (ContinuousMap.id R), map_zero' := ⋯ }) a\n⊢ Eq (cfcₙHom ha) φ","decl":"open scoped NonUnitalContinuousFunctionalCalculus in\nlemma cfcₙHom_eq_of_continuous_of_map_id [UniqueHom R A]\n    (φ : C(σₙ R a, R)₀ →⋆ₙₐ[R] A) (hφ₁ : Continuous φ)\n    (hφ₂ : φ ⟨.restrict (σₙ R a) <| .id R, rfl⟩ = a) : cfcₙHom ha = φ :=\n  (cfcₙHom ha).ext_continuousMap a φ (cfcₙHom_isClosedEmbedding ha).continuous hφ₁ <| by\n    rw [cfcₙHom_id ha, hφ₂]\n\n"}
{"name":"cfcₙHom_comp","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹² : CommSemiring R\ninst✝¹¹ : Nontrivial R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalSemiring R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : NonUnitalRing A\ninst✝⁵ : StarRing A\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Module R A\ninst✝² : IsScalarTower R A A\ninst✝¹ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\na : A\nha : p a\ninst✝ : ContinuousMapZero.UniqueHom R A\nf : ContinuousMapZero (↑(quasispectrum R a)) R\nf' : ContinuousMapZero ↑(quasispectrum R a) ↑(quasispectrum R ((cfcₙHom ha) f))\nhff' : ∀ (x : ↑(quasispectrum R a)), Eq (f x) ↑(f' x)\ng : ContinuousMapZero (↑(quasispectrum R ((cfcₙHom ha) f))) R\n⊢ Eq ((cfcₙHom ha) (g.comp f')) ((cfcₙHom ⋯) g)","decl":"theorem cfcₙHom_comp [UniqueHom R A] (f : C(σₙ R a, R)₀)\n    (f' : C(σₙ R a, σₙ R (cfcₙHom ha f))₀)\n    (hff' : ∀ x, f x = f' x) (g : C(σₙ R (cfcₙHom ha f), R)₀) :\n    cfcₙHom ha (g.comp f') = cfcₙHom (cfcₙHom_predicate ha f) g := by\n  let ψ : C(σₙ R (cfcₙHom ha f), R)₀ →⋆ₙₐ[R] C(σₙ R a, R)₀ :=\n    { toFun := (ContinuousMapZero.comp · f')\n      map_smul' := fun _ _ ↦ rfl\n      map_add' := fun _ _ ↦ rfl\n      map_mul' := fun _ _ ↦ rfl\n      map_zero' := rfl\n      map_star' := fun _ ↦ rfl }\n  let φ : C(σₙ R (cfcₙHom ha f), R)₀ →⋆ₙₐ[R] A := (cfcₙHom ha).comp ψ\n  suffices cfcₙHom (cfcₙHom_predicate ha f) = φ from DFunLike.congr_fun this.symm g\n  refine cfcₙHom_eq_of_continuous_of_map_id (cfcₙHom_predicate ha f) φ ?_ ?_\n  · refine (cfcₙHom_isClosedEmbedding ha).continuous.comp <| continuous_induced_rng.mpr ?_\n    exact f'.toContinuousMap.continuous_precomp.comp continuous_induced_dom\n  · simp only [φ, ψ, NonUnitalStarAlgHom.comp_apply, NonUnitalStarAlgHom.coe_mk',\n      NonUnitalAlgHom.coe_mk]\n    congr\n    ext x\n    simp [hff']\n\n"}
{"name":"cfcₙL_apply","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\na✝ : A\nha : p a✝\na : ContinuousMapZero (↑(quasispectrum R a✝)) R\n⊢ Eq ((cfcₙL ha) a) ((cfcₙHom ha) a)","decl":"/-- `cfcₙHom` bundled as a continuous linear map. -/\n@[simps apply]\nnoncomputable def cfcₙL {a : A} (ha : p a) : C(σₙ R a, R)₀ →L[R] A :=\n  { cfcₙHom ha with\n    toFun := cfcₙHom ha\n    map_smul' := map_smul _\n    cont := (cfcₙHom_isClosedEmbedding ha).continuous }\n\n"}
{"name":"cfcₙ_def","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_3\nA : Type u_4\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\nf : R → R\na : A\n⊢ Eq (cfcₙ f a) (dite (And (p a) (And (ContinuousOn f (quasispectrum R a)) (Eq (f 0) 0))) (fun h => (cfcₙHom ⋯) { toFun := (quasispectrum R a).restrict f, continuous_toFun := ⋯, map_zero' := ⋯ }) fun h => 0)","decl":"open Classical in\n/-- This is the *continuous functional calculus* of an element `a : A` in a non-unital algebra\napplied to bare functions.  When either `a` does not satisfy the predicate `p` (i.e., `a` is not\n`IsStarNormal`, `IsSelfAdjoint`, or `0 ≤ a` when `R` is `ℂ`, `ℝ`, or `ℝ≥0`, respectively), or when\n`f : R → R` is not continuous on the quasispectrum of `a` or `f 0 ≠ 0`, then `cfcₙ f a` returns the\njunk value `0`.\n\nThis is the primary declaration intended for widespread use of the continuous functional calculus\nfor non-unital algebras, and all the API applies to this declaration. For more information, see the\nmodule documentation for `Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital`. -/\nnoncomputable irreducible_def cfcₙ (f : R → R) (a : A) : A :=\n  if h : p a ∧ ContinuousOn f (σₙ R a) ∧ f 0 = 0\n    then cfcₙHom h.1 ⟨⟨_, h.2.1.restrict⟩, h.2.2⟩\n    else 0\n\n"}
{"name":"cfcₙ_apply","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\nf : R → R\na : A\nhf : autoParam (ContinuousOn f (quasispectrum R a)) _auto✝\nhf0 : autoParam (Eq (f 0) 0) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Eq (cfcₙ f a) ((cfcₙHom ha) { toFun := (quasispectrum R a).restrict f, continuous_toFun := ⋯, map_zero' := hf0 })","decl":"lemma cfcₙ_apply : cfcₙ f a = cfcₙHom (a := a) ha ⟨⟨_, hf.restrict⟩, hf0⟩ := by\n  rw [cfcₙ_def, dif_pos ⟨ha, hf, hf0⟩]\n\n"}
{"name":"cfcₙ_apply_pi","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\nι : Type u_3\nf : ι → R → R\na : A\nha : autoParam (p a) _auto✝\nhf : autoParam (∀ (i : ι), ContinuousOn (f i) (quasispectrum R a)) _auto✝\nhf0 : autoParam (∀ (i : ι), Eq (f i 0) 0) _auto✝\n⊢ Eq (fun i => cfcₙ (f i) a) fun i => (cfcₙHom ha) { toFun := (quasispectrum R a).restrict (f i), continuous_toFun := ⋯, map_zero' := ⋯ }","decl":"lemma cfcₙ_apply_pi {ι : Type*} (f : ι → R → R) (a : A) (ha := by cfc_tac)\n    (hf : ∀ i, ContinuousOn (f i) (σₙ R a) := by cfc_cont_tac)\n    (hf0 : ∀ i, f i 0 = 0 := by cfc_zero_tac) :\n    (fun i => cfcₙ (f i) a) = (fun i => cfcₙHom (a := a) ha ⟨⟨_, (hf i).restrict⟩, hf0 i⟩) := by\n  ext i\n  simp only [cfcₙ_apply (f i) a (hf i) (hf0 i)]\n\n"}
{"name":"cfcₙ_apply_of_not_and_and","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\nf : R → R\na : A\nha : Not (And (p a) (And (ContinuousOn f (quasispectrum R a)) (Eq (f 0) 0)))\n⊢ Eq (cfcₙ f a) 0","decl":"lemma cfcₙ_apply_of_not_and_and {f : R → R} (a : A)\n    (ha : ¬ (p a ∧ ContinuousOn f (σₙ R a) ∧ f 0 = 0)) :\n    cfcₙ f a = 0 := by\n  rw [cfcₙ_def, dif_neg ha]\n\n"}
{"name":"cfcₙ_apply_of_not_predicate","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\nf : R → R\na : A\nha : Not (p a)\n⊢ Eq (cfcₙ f a) 0","decl":"lemma cfcₙ_apply_of_not_predicate {f : R → R} (a : A) (ha : ¬ p a) :\n    cfcₙ f a = 0 := by\n  rw [cfcₙ_def, dif_neg (not_and_of_not_left _ ha)]\n\n"}
{"name":"cfcₙ_apply_of_not_continuousOn","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\nf : R → R\na : A\nhf : Not (ContinuousOn f (quasispectrum R a))\n⊢ Eq (cfcₙ f a) 0","decl":"lemma cfcₙ_apply_of_not_continuousOn {f : R → R} (a : A) (hf : ¬ ContinuousOn f (σₙ R a)) :\n    cfcₙ f a = 0 := by\n  rw [cfcₙ_def, dif_neg (not_and_of_not_right _ (not_and_of_not_left _ hf))]\n\n"}
{"name":"cfcₙ_apply_of_not_map_zero","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\nf : R → R\na : A\nhf : Not (Eq (f 0) 0)\n⊢ Eq (cfcₙ f a) 0","decl":"lemma cfcₙ_apply_of_not_map_zero {f : R → R} (a : A) (hf : ¬ f 0 = 0) :\n    cfcₙ f a = 0 := by\n  rw [cfcₙ_def, dif_neg (not_and_of_not_right _ (not_and_of_not_right _ hf))]\n\n"}
{"name":"cfcₙHom_eq_cfcₙ_extend","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\na : A\ng : R → R\nha : p a\nf : ContinuousMapZero (↑(quasispectrum R a)) R\n⊢ Eq ((cfcₙHom ha) f) (cfcₙ (Function.extend Subtype.val (⇑f) g) a)","decl":"lemma cfcₙHom_eq_cfcₙ_extend {a : A} (g : R → R) (ha : p a) (f : C(σₙ R a, R)₀) :\n    cfcₙHom ha f = cfcₙ (Function.extend Subtype.val f g) a := by\n  have h : f = (σₙ R a).restrict (Function.extend Subtype.val f g) := by\n    ext; simp [Subtype.val_injective.extend_apply]\n  have hg : ContinuousOn (Function.extend Subtype.val f g) (σₙ R a) :=\n    continuousOn_iff_continuous_restrict.mpr <| h ▸ map_continuous f\n  have hg0 : (Function.extend Subtype.val f g) 0 = 0 := by\n    rw [← quasispectrum.coe_zero (R := R) a, Subtype.val_injective.extend_apply]\n    exact map_zero f\n  rw [cfcₙ_apply ..]\n  congr!\n\n"}
{"name":"cfcₙ_cases","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\nP : A → Prop\na : A\nf : R → R\nh₀ : P 0\nhaf : ∀ (hf : ContinuousOn f (quasispectrum R a)) (h0 : Eq ({ toFun := (quasispectrum R a).restrict f, continuous_toFun := ⋯ } 0) 0) (ha : p a), P ((cfcₙHom ha) { toFun := (quasispectrum R a).restrict f, continuous_toFun := ⋯, map_zero' := h0 })\n⊢ P (cfcₙ f a)","decl":"lemma cfcₙ_cases (P : A → Prop) (a : A) (f : R → R) (h₀ : P 0)\n    (haf : ∀ (hf : ContinuousOn f (σₙ R a)) h0 ha, P (cfcₙHom ha ⟨⟨_, hf.restrict⟩, h0⟩)) :\n    P (cfcₙ f a) := by\n  by_cases h : ContinuousOn f (σₙ R a) ∧ f 0 = 0 ∧ p a\n  · rw [cfcₙ_apply f a h.1 h.2.1 h.2.2]\n    exact haf h.1 h.2.1 h.2.2\n  · simp only [not_and_or] at h\n    obtain (h | h | h) := h\n    · rwa [cfcₙ_apply_of_not_continuousOn _ h]\n    · rwa [cfcₙ_apply_of_not_map_zero _ h]\n    · rwa [cfcₙ_apply_of_not_predicate _ h]\n\n"}
{"name":"cfcₙ_commute_cfcₙ","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\nf g : R → R\na : A\n⊢ Commute (cfcₙ f a) (cfcₙ g a)","decl":"lemma cfcₙ_commute_cfcₙ (f g : R → R) (a : A) : Commute (cfcₙ f a) (cfcₙ g a) := by\n  refine cfcₙ_cases (fun x ↦ Commute x (cfcₙ g a)) a f (by simp) fun hf hf0 ha ↦ ?_\n  refine cfcₙ_cases (fun x ↦ Commute _ x) a g (by simp) fun hg hg0 _ ↦ ?_\n  exact Commute.all _ _ |>.map _\n\n"}
{"name":"cfcₙ_id","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\na : A\nha : autoParam (p a) _auto✝\n⊢ Eq (cfcₙ id a) a","decl":"variable (R) in\ninclude ha in\nlemma cfcₙ_id : cfcₙ (id : R → R) a = a :=\n  cfcₙ_apply (id : R → R) a ▸ cfcₙHom_id (p := p) ha\n\n"}
{"name":"cfcₙ_id'","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\na : A\nha : autoParam (p a) _auto✝\n⊢ Eq (cfcₙ (fun x => x) a) a","decl":"variable (R) in\ninclude ha in\nlemma cfcₙ_id' : cfcₙ (fun x : R ↦ x) a = a := cfcₙ_id R a\n\n"}
{"name":"cfcₙ_map_quasispectrum","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\nf : R → R\na : A\nhf : autoParam (ContinuousOn f (quasispectrum R a)) _auto✝\nhf0 : autoParam (Eq (f 0) 0) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Eq (quasispectrum R (cfcₙ f a)) (Set.image f (quasispectrum R a))","decl":"include ha hf hf0 in\n/-- The **spectral mapping theorem** for the non-unital continuous functional calculus. -/\nlemma cfcₙ_map_quasispectrum : σₙ R (cfcₙ f a) = f '' σₙ R a := by\n  simp [cfcₙ_apply f a, cfcₙHom_map_quasispectrum (p := p)]\n\n"}
{"name":"cfcₙ_predicate_zero","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\n⊢ p 0","decl":"variable (R) in\ninclude R in\nlemma cfcₙ_predicate_zero : p 0 :=\n  NonUnitalContinuousFunctionalCalculus.predicate_zero (R := R)\n\n"}
{"name":"cfcₙ_predicate","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\nf : R → R\na : A\n⊢ p (cfcₙ f a)","decl":"lemma cfcₙ_predicate (f : R → R) (a : A) : p (cfcₙ f a) :=\n  cfcₙ_cases p a f (cfcₙ_predicate_zero R) fun _ _ _ ↦ cfcₙHom_predicate ..\n\n"}
{"name":"cfcₙ_congr","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\nf g : R → R\na : A\nhfg : Set.EqOn f g (quasispectrum R a)\n⊢ Eq (cfcₙ f a) (cfcₙ g a)","decl":"lemma cfcₙ_congr {f g : R → R} {a : A} (hfg : (σₙ R a).EqOn f g) :\n    cfcₙ f a = cfcₙ g a := by\n  by_cases h : p a ∧ ContinuousOn g (σₙ R a) ∧ g 0 = 0\n  · rw [cfcₙ_apply f a (h.2.1.congr hfg) (hfg (quasispectrum.zero_mem R a) ▸ h.2.2) h.1,\n      cfcₙ_apply g a h.2.1 h.2.2 h.1]\n    congr\n    exact Set.restrict_eq_iff.mpr hfg\n  · simp only [not_and_or] at h\n    obtain (ha | hg | h0) := h\n    · simp [cfcₙ_apply_of_not_predicate a ha]\n    · rw [cfcₙ_apply_of_not_continuousOn a hg, cfcₙ_apply_of_not_continuousOn]\n      exact fun hf ↦ hg (hf.congr hfg.symm)\n    · rw [cfcₙ_apply_of_not_map_zero a h0, cfcₙ_apply_of_not_map_zero]\n      exact fun hf ↦ h0 (hfg (quasispectrum.zero_mem R a) ▸ hf)\n\n"}
{"name":"eqOn_of_cfcₙ_eq_cfcₙ","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\nf g : R → R\na : A\nh : Eq (cfcₙ f a) (cfcₙ g a)\nha : autoParam (p a) _auto✝\nhf : autoParam (ContinuousOn f (quasispectrum R a)) _auto✝\nhf0 : autoParam (Eq (f 0) 0) _auto✝\nhg : autoParam (ContinuousOn g (quasispectrum R a)) _auto✝\nhg0 : autoParam (Eq (g 0) 0) _auto✝\n⊢ Set.EqOn f g (quasispectrum R a)","decl":"lemma eqOn_of_cfcₙ_eq_cfcₙ {f g : R → R} {a : A} (h : cfcₙ f a = cfcₙ g a) (ha : p a := by cfc_tac)\n    (hf : ContinuousOn f (σₙ R a) := by cfc_cont_tac) (hf0 : f 0 = 0 := by cfc_zero_tac)\n    (hg : ContinuousOn g (σₙ R a) := by cfc_cont_tac) (hg0 : g 0 = 0 := by cfc_zero_tac) :\n    (σₙ R a).EqOn f g := by\n  rw [cfcₙ_apply f a, cfcₙ_apply g a] at h\n  have := (cfcₙHom_isClosedEmbedding (show p a from ha) (R := R)).injective h\n  intro x hx\n  congrm($(this) ⟨x, hx⟩)\n\n"}
{"name":"cfcₙ_eq_cfcₙ_iff_eqOn","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\nf g : R → R\na : A\nha : autoParam (p a) _auto✝\nhf : autoParam (ContinuousOn f (quasispectrum R a)) _auto✝\nhf0 : autoParam (Eq (f 0) 0) _auto✝\nhg : autoParam (ContinuousOn g (quasispectrum R a)) _auto✝\nhg0 : autoParam (Eq (g 0) 0) _auto✝\n⊢ Iff (Eq (cfcₙ f a) (cfcₙ g a)) (Set.EqOn f g (quasispectrum R a))","decl":"lemma cfcₙ_eq_cfcₙ_iff_eqOn {f g : R → R} {a : A} (ha : p a := by cfc_tac)\n    (hf : ContinuousOn f (σₙ R a) := by cfc_cont_tac) (hf0 : f 0 = 0 := by cfc_zero_tac)\n    (hg : ContinuousOn g (σₙ R a) := by cfc_cont_tac) (hg0 : g 0 = 0 := by cfc_zero_tac) :\n    cfcₙ f a = cfcₙ g a ↔ (σₙ R a).EqOn f g :=\n  ⟨eqOn_of_cfcₙ_eq_cfcₙ, cfcₙ_congr⟩\n\n"}
{"name":"cfcₙ_zero","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\na : A\n⊢ Eq (cfcₙ 0 a) 0","decl":"@[simp]\nlemma cfcₙ_zero : cfcₙ (0 : R → R) a = 0 := by\n  by_cases ha : p a\n  · exact cfcₙ_apply (0 : R → R) a ▸ map_zero (cfcₙHom ha)\n  · rw [cfcₙ_apply_of_not_predicate a ha]\n\n"}
{"name":"cfcₙ_const_zero","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\na : A\n⊢ Eq (cfcₙ (fun x => 0) a) 0","decl":"@[simp]\nlemma cfcₙ_const_zero : cfcₙ (fun _ : R ↦ 0) a = 0 := cfcₙ_zero R a\n\n"}
{"name":"cfcₙ_mul","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\nf g : R → R\na : A\nhf : autoParam (ContinuousOn f (quasispectrum R a)) _auto✝\nhf0 : autoParam (Eq (f 0) 0) _auto✝\nhg : autoParam (ContinuousOn g (quasispectrum R a)) _auto✝\nhg0 : autoParam (Eq (g 0) 0) _auto✝\n⊢ Eq (cfcₙ (fun x => HMul.hMul (f x) (g x)) a) (HMul.hMul (cfcₙ f a) (cfcₙ g a))","decl":"include hf hf0 hg hg0 in\nlemma cfcₙ_mul : cfcₙ (fun x ↦ f x * g x) a = cfcₙ f a * cfcₙ g a := by\n  by_cases ha : p a\n  · rw [cfcₙ_apply f a, cfcₙ_apply g a, ← map_mul, cfcₙ_apply _ a]\n    congr\n  · simp [cfcₙ_apply_of_not_predicate a ha]\n\n"}
{"name":"cfcₙ_add","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\nf g : R → R\na : A\nhf : autoParam (ContinuousOn f (quasispectrum R a)) _auto✝\nhf0 : autoParam (Eq (f 0) 0) _auto✝\nhg : autoParam (ContinuousOn g (quasispectrum R a)) _auto✝\nhg0 : autoParam (Eq (g 0) 0) _auto✝\n⊢ Eq (cfcₙ (fun x => HAdd.hAdd (f x) (g x)) a) (HAdd.hAdd (cfcₙ f a) (cfcₙ g a))","decl":"include hf hf0 hg hg0 in\nlemma cfcₙ_add : cfcₙ (fun x ↦ f x + g x) a = cfcₙ f a + cfcₙ g a := by\n  by_cases ha : p a\n  · rw [cfcₙ_apply f a, cfcₙ_apply g a, cfcₙ_apply _ a]\n    simp_rw [← map_add]\n    congr\n  · simp [cfcₙ_apply_of_not_predicate a ha]\n\n"}
{"name":"cfcₙ_sum","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\nι : Type u_3\nf : ι → R → R\na : A\ns : Finset ι\nhf : autoParam (∀ (i : ι), Membership.mem s i → ContinuousOn (f i) (quasispectrum R a)) _auto✝\nhf0 : autoParam (∀ (i : ι), Membership.mem s i → Eq (f i 0) 0) _auto✝\n⊢ Eq (cfcₙ (s.sum fun i => f i) a) (s.sum fun i => cfcₙ (f i) a)","decl":"open Finset in\nlemma cfcₙ_sum {ι : Type*} (f : ι → R → R) (a : A) (s : Finset ι)\n    (hf : ∀ i ∈ s, ContinuousOn (f i) (σₙ R a) := by cfc_cont_tac)\n    (hf0 : ∀ i ∈ s, f i 0 = 0 := by cfc_zero_tac) :\n    cfcₙ (∑ i ∈ s, f i) a = ∑ i ∈ s, cfcₙ (f i) a := by\n  by_cases ha : p a\n  · have hsum : s.sum f = fun z => ∑ i ∈ s, f i z := by ext; simp\n    have hf' : ContinuousOn (∑ i : s, f i) (σₙ R a) := by\n      rw [sum_coe_sort s, hsum]\n      exact continuousOn_finset_sum s fun i hi => hf i hi\n    rw [← sum_coe_sort s, ← sum_coe_sort s]\n    rw [cfcₙ_apply_pi _ a _ (fun ⟨i, hi⟩ => hf i hi), ← map_sum, cfcₙ_apply _ a hf']\n    congr 1\n    ext\n    simp\n  · simp [cfcₙ_apply_of_not_predicate a ha]\n\n"}
{"name":"cfcₙ_sum_univ","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹² : CommSemiring R\ninst✝¹¹ : Nontrivial R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalSemiring R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : NonUnitalRing A\ninst✝⁵ : StarRing A\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Module R A\ninst✝² : IsScalarTower R A A\ninst✝¹ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\nι : Type u_3\ninst✝ : Fintype ι\nf : ι → R → R\na : A\nhf : autoParam (∀ (i : ι), ContinuousOn (f i) (quasispectrum R a)) _auto✝\nhf0 : autoParam (∀ (i : ι), Eq (f i 0) 0) _auto✝\n⊢ Eq (cfcₙ (Finset.univ.sum fun i => f i) a) (Finset.univ.sum fun i => cfcₙ (f i) a)","decl":"open Finset in\nlemma cfcₙ_sum_univ {ι : Type*} [Fintype ι] (f : ι → R → R) (a : A)\n    (hf : ∀ i, ContinuousOn (f i) (σₙ R a) := by cfc_cont_tac)\n    (hf0 : ∀ i, f i 0 = 0 := by cfc_zero_tac) :\n    cfcₙ (∑ i, f i) a = ∑ i, cfcₙ (f i) a :=\n  cfcₙ_sum f a _ (fun i _ ↦ hf i) (fun i _ ↦ hf0 i)\n\n"}
{"name":"cfcₙ_smul","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹⁶ : CommSemiring R\ninst✝¹⁵ : Nontrivial R\ninst✝¹⁴ : StarRing R\ninst✝¹³ : MetricSpace R\ninst✝¹² : TopologicalSemiring R\ninst✝¹¹ : ContinuousStar R\ninst✝¹⁰ : NonUnitalRing A\ninst✝⁹ : StarRing A\ninst✝⁸ : TopologicalSpace A\ninst✝⁷ : Module R A\ninst✝⁶ : IsScalarTower R A A\ninst✝⁵ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\nS : Type u_3\ninst✝⁴ : SMulZeroClass S R\ninst✝³ : ContinuousConstSMul S R\ninst✝² : SMulZeroClass S A\ninst✝¹ : IsScalarTower S R A\ninst✝ : IsScalarTower S R (R → R)\ns : S\nf : R → R\na : A\nhf : autoParam (ContinuousOn f (quasispectrum R a)) _auto✝\nh0 : autoParam (Eq (f 0) 0) _auto✝\n⊢ Eq (cfcₙ (fun x => HSMul.hSMul s (f x)) a) (HSMul.hSMul s (cfcₙ f a))","decl":"lemma cfcₙ_smul {S : Type*} [SMulZeroClass S R] [ContinuousConstSMul S R]\n    [SMulZeroClass S A] [IsScalarTower S R A] [IsScalarTower S R (R → R)]\n    (s : S) (f : R → R) (a : A) (hf : ContinuousOn f (σₙ R a) := by cfc_cont_tac)\n    (h0 : f 0 = 0 := by cfc_zero_tac) :\n    cfcₙ (fun x ↦ s • f x) a = s • cfcₙ f a := by\n  by_cases ha : p a\n  · rw [cfcₙ_apply f a, cfcₙ_apply _ a]\n    simp_rw [← Pi.smul_def, ← smul_one_smul R s _]\n    rw [← map_smul]\n    congr\n  · simp [cfcₙ_apply_of_not_predicate a ha]\n\n"}
{"name":"cfcₙ_const_mul","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\nr : R\nf : R → R\na : A\nhf : autoParam (ContinuousOn f (quasispectrum R a)) _auto✝\nh0 : autoParam (Eq (f 0) 0) _auto✝\n⊢ Eq (cfcₙ (fun x => HMul.hMul r (f x)) a) (HSMul.hSMul r (cfcₙ f a))","decl":"lemma cfcₙ_const_mul (r : R) (f : R → R) (a : A) (hf : ContinuousOn f (σₙ R a) := by cfc_cont_tac)\n    (h0 : f 0 = 0 := by cfc_zero_tac) :\n    cfcₙ (fun x ↦ r * f x) a = r • cfcₙ f a :=\n  cfcₙ_smul r f a\n\n"}
{"name":"cfcₙ_star","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\nf : R → R\na : A\n⊢ Eq (cfcₙ (fun x => Star.star (f x)) a) (Star.star (cfcₙ f a))","decl":"lemma cfcₙ_star : cfcₙ (fun x ↦ star (f x)) a = star (cfcₙ f a) := by\n  by_cases h : p a ∧ ContinuousOn f (σₙ R a) ∧ f 0 = 0\n  · obtain ⟨ha, hf, h0⟩ := h\n    rw [cfcₙ_apply f a, ← map_star, cfcₙ_apply _ a]\n    congr\n  · simp only [not_and_or] at h\n    obtain (ha | hf | h0) := h\n    · simp [cfcₙ_apply_of_not_predicate a ha]\n    · rw [cfcₙ_apply_of_not_continuousOn a hf, cfcₙ_apply_of_not_continuousOn, star_zero]\n      exact fun hf_star ↦ hf <| by simpa using hf_star.star\n    · rw [cfcₙ_apply_of_not_map_zero a h0, cfcₙ_apply_of_not_map_zero, star_zero]\n      exact fun hf0 ↦ h0 <| by simpa using congr(star $(hf0))\n\n"}
{"name":"cfcₙ_smul_id","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹⁶ : CommSemiring R\ninst✝¹⁵ : Nontrivial R\ninst✝¹⁴ : StarRing R\ninst✝¹³ : MetricSpace R\ninst✝¹² : TopologicalSemiring R\ninst✝¹¹ : ContinuousStar R\ninst✝¹⁰ : NonUnitalRing A\ninst✝⁹ : StarRing A\ninst✝⁸ : TopologicalSpace A\ninst✝⁷ : Module R A\ninst✝⁶ : IsScalarTower R A A\ninst✝⁵ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\nS : Type u_3\ninst✝⁴ : SMulZeroClass S R\ninst✝³ : ContinuousConstSMul S R\ninst✝² : SMulZeroClass S A\ninst✝¹ : IsScalarTower S R A\ninst✝ : IsScalarTower S R (R → R)\ns : S\na : A\nha : autoParam (p a) _auto✝\n⊢ Eq (cfcₙ (fun x => HSMul.hSMul s x) a) (HSMul.hSMul s a)","decl":"lemma cfcₙ_smul_id {S : Type*} [SMulZeroClass S R] [ContinuousConstSMul S R]\n    [SMulZeroClass S A] [IsScalarTower S R A] [IsScalarTower S R (R → R)]\n    (s : S) (a : A) (ha : p a := by cfc_tac) : cfcₙ (s • · : R → R) a = s • a := by\n  rw [cfcₙ_smul s _ a, cfcₙ_id' R a]\n\n"}
{"name":"cfcₙ_const_mul_id","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\nr : R\na : A\nha : autoParam (p a) _auto✝\n⊢ Eq (cfcₙ (fun x => HMul.hMul r x) a) (HSMul.hSMul r a)","decl":"lemma cfcₙ_const_mul_id (r : R) (a : A) (ha : p a := by cfc_tac) : cfcₙ (r * ·) a = r • a :=\n  cfcₙ_smul_id r a\n\n"}
{"name":"cfcₙ_star_id","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\na : A\nha : autoParam (p a) _auto✝\n⊢ Eq (cfcₙ (fun x => Star.star x) a) (Star.star a)","decl":"include ha in\nlemma cfcₙ_star_id : cfcₙ (star · : R → R) a = star a := by\n  rw [cfcₙ_star _ a, cfcₙ_id' R a]\n\n"}
{"name":"cfcₙ_comp","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹² : CommSemiring R\ninst✝¹¹ : Nontrivial R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalSemiring R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : NonUnitalRing A\ninst✝⁵ : StarRing A\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Module R A\ninst✝² : IsScalarTower R A A\ninst✝¹ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\ninst✝ : ContinuousMapZero.UniqueHom R A\ng f : R → R\na : A\nhg : autoParam (ContinuousOn g (Set.image f (quasispectrum R a))) _auto✝\nhg0 : autoParam (Eq (g 0) 0) _auto✝\nhf : autoParam (ContinuousOn f (quasispectrum R a)) _auto✝\nhf0 : autoParam (Eq (f 0) 0) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Eq (cfcₙ (Function.comp g f) a) (cfcₙ g (cfcₙ f a))","decl":"lemma cfcₙ_comp (g f : R → R) (a : A)\n    (hg : ContinuousOn g (f '' σₙ R a) := by cfc_cont_tac) (hg0 : g 0 = 0 := by cfc_zero_tac)\n    (hf : ContinuousOn f (σₙ R a) := by cfc_cont_tac) (hf0 : f 0 = 0 := by cfc_zero_tac)\n    (ha : p a := by cfc_tac) :\n    cfcₙ (g ∘ f) a = cfcₙ g (cfcₙ f a) := by\n  have := hg.comp hf <| (σₙ R a).mapsTo_image f\n  have sp_eq :\n      σₙ R (cfcₙHom (show p a from ha) ⟨ContinuousMap.mk _ hf.restrict, hf0⟩) = f '' (σₙ R a) := by\n    rw [cfcₙHom_map_quasispectrum (by exact ha) _]\n    ext\n    simp\n  rw [cfcₙ_apply .., cfcₙ_apply f a,\n    cfcₙ_apply _ _ (by convert hg) (ha := cfcₙHom_predicate (show p a from ha) _),\n    ← cfcₙHom_comp _ _]\n  swap\n  · exact ⟨.mk _ <| hf.restrict.codRestrict fun x ↦ by rw [sp_eq]; use x.1; simp, Subtype.ext hf0⟩\n  · congr\n  · exact fun _ ↦ rfl\n\n"}
{"name":"cfcₙ_comp'","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹² : CommSemiring R\ninst✝¹¹ : Nontrivial R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalSemiring R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : NonUnitalRing A\ninst✝⁵ : StarRing A\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Module R A\ninst✝² : IsScalarTower R A A\ninst✝¹ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\ninst✝ : ContinuousMapZero.UniqueHom R A\ng f : R → R\na : A\nhg : autoParam (ContinuousOn g (Set.image f (quasispectrum R a))) _auto✝\nhg0 : autoParam (Eq (g 0) 0) _auto✝\nhf : autoParam (ContinuousOn f (quasispectrum R a)) _auto✝\nhf0 : autoParam (Eq (f 0) 0) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Eq (cfcₙ (fun x => g (f x)) a) (cfcₙ g (cfcₙ f a))","decl":"lemma cfcₙ_comp' (g f : R → R) (a : A)\n    (hg : ContinuousOn g (f '' σₙ R a) := by cfc_cont_tac) (hg0 : g 0 = 0 := by cfc_zero_tac)\n    (hf : ContinuousOn f (σₙ R a) := by cfc_cont_tac) (hf0 : f 0 = 0 := by cfc_zero_tac)\n    (ha : p a := by cfc_tac) :\n    cfcₙ (g <| f ·) a = cfcₙ g (cfcₙ f a) :=\n  cfcₙ_comp g f a\n\n"}
{"name":"cfcₙ_comp_smul","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹⁷ : CommSemiring R\ninst✝¹⁶ : Nontrivial R\ninst✝¹⁵ : StarRing R\ninst✝¹⁴ : MetricSpace R\ninst✝¹³ : TopologicalSemiring R\ninst✝¹² : ContinuousStar R\ninst✝¹¹ : NonUnitalRing A\ninst✝¹⁰ : StarRing A\ninst✝⁹ : TopologicalSpace A\ninst✝⁸ : Module R A\ninst✝⁷ : IsScalarTower R A A\ninst✝⁶ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\ninst✝⁵ : ContinuousMapZero.UniqueHom R A\nS : Type u_3\ninst✝⁴ : SMulZeroClass S R\ninst✝³ : ContinuousConstSMul S R\ninst✝² : SMulZeroClass S A\ninst✝¹ : IsScalarTower S R A\ninst✝ : IsScalarTower S R (R → R)\ns : S\nf : R → R\na : A\nhf : autoParam (ContinuousOn f (Set.image (fun x => HSMul.hSMul s x) (quasispectrum R a))) _auto✝\nhf0 : autoParam (Eq (f 0) 0) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Eq (cfcₙ (fun x => f (HSMul.hSMul s x)) a) (cfcₙ f (HSMul.hSMul s a))","decl":"lemma cfcₙ_comp_smul {S : Type*} [SMulZeroClass S R] [ContinuousConstSMul S R]\n    [SMulZeroClass S A] [IsScalarTower S R A] [IsScalarTower S R (R → R)]\n    (s : S) (f : R → R) (a : A) (hf : ContinuousOn f ((s • ·) '' (σₙ R a)) := by cfc_cont_tac)\n    (hf0 : f 0 = 0 := by cfc_zero_tac) (ha : p a := by cfc_tac) :\n    cfcₙ (f <| s • ·) a = cfcₙ f (s • a) := by\n  rw [cfcₙ_comp' f (s • ·) a, cfcₙ_smul_id s a]\n\n"}
{"name":"cfcₙ_comp_const_mul","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹² : CommSemiring R\ninst✝¹¹ : Nontrivial R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalSemiring R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : NonUnitalRing A\ninst✝⁵ : StarRing A\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Module R A\ninst✝² : IsScalarTower R A A\ninst✝¹ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\ninst✝ : ContinuousMapZero.UniqueHom R A\nr : R\nf : R → R\na : A\nhf : autoParam (ContinuousOn f (Set.image (fun x => HMul.hMul r x) (quasispectrum R a))) _auto✝\nhf0 : autoParam (Eq (f 0) 0) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Eq (cfcₙ (fun x => f (HMul.hMul r x)) a) (cfcₙ f (HSMul.hSMul r a))","decl":"lemma cfcₙ_comp_const_mul (r : R) (f : R → R) (a : A)\n    (hf : ContinuousOn f ((r * ·) '' (σₙ R a)) := by cfc_cont_tac)\n    (hf0 : f 0 = 0 := by cfc_zero_tac) (ha : p a := by cfc_tac) :\n    cfcₙ (f <| r * ·) a = cfcₙ f (r • a) := by\n  rw [cfcₙ_comp' f (r * ·) a, cfcₙ_const_mul_id r a]\n\n"}
{"name":"cfcₙ_comp_star","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹² : CommSemiring R\ninst✝¹¹ : Nontrivial R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalSemiring R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : NonUnitalRing A\ninst✝⁵ : StarRing A\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Module R A\ninst✝² : IsScalarTower R A A\ninst✝¹ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\nf : R → R\na : A\ninst✝ : ContinuousMapZero.UniqueHom R A\nhf : autoParam (ContinuousOn f (Set.image Star.star (quasispectrum R a))) _auto✝\nhf0 : autoParam (Eq (f 0) 0) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Eq (cfcₙ (fun x => f (Star.star x)) a) (cfcₙ f (Star.star a))","decl":"lemma cfcₙ_comp_star (hf : ContinuousOn f (star '' (σₙ R a)) := by cfc_cont_tac)\n    (hf0 : f 0 = 0 := by cfc_zero_tac) (ha : p a := by cfc_tac) :\n    cfcₙ (f <| star ·) a = cfcₙ f (star a) := by\n  rw [cfcₙ_comp' f star a, cfcₙ_star_id a]\n\n"}
{"name":"CFC.eq_zero_of_quasispectrum_eq_zero","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\na : A\nh_spec : HasSubset.Subset (quasispectrum R a) (Singleton.singleton 0)\nha : autoParam (p a) _auto✝\n⊢ Eq a 0","decl":"lemma CFC.eq_zero_of_quasispectrum_eq_zero (h_spec : σₙ R a ⊆ {0}) (ha : p a := by cfc_tac) :\n    a = 0 := by\n  simpa [cfcₙ_id R a] using cfcₙ_congr (a := a) (f := id) (g := fun _ : R ↦ 0) fun x ↦ by simp_all\n\n"}
{"name":"CFC.quasispectrum_zero_eq","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\n⊢ Eq (quasispectrum R 0) (Singleton.singleton 0)","decl":"include instCFCₙ in\nlemma CFC.quasispectrum_zero_eq : σₙ R (0 : A) = {0} := by\n  refine Set.eq_singleton_iff_unique_mem.mpr ⟨quasispectrum.zero_mem R 0, fun x hx ↦ ?_⟩\n  rw [← cfcₙ_zero R (0 : A),\n    cfcₙ_map_quasispectrum _ _ (by cfc_cont_tac) (by cfc_zero_tac) (cfcₙ_predicate_zero R)] at hx\n  simp_all\n\n"}
{"name":"cfcₙ_apply_zero","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\nf : R → R\n⊢ Eq (cfcₙ f 0) 0","decl":"@[simp] lemma cfcₙ_apply_zero {f : R → R} : cfcₙ f (0 : A) = 0 := by\n  by_cases hf0 : f 0 = 0\n  · nth_rw 2 [← cfcₙ_zero R 0]\n    apply cfcₙ_congr\n    simpa [CFC.quasispectrum_zero_eq]\n  · exact cfcₙ_apply_of_not_map_zero _ hf0\n\n"}
{"name":"IsStarNormal.cfcₙ_map","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\nf : R → R\na : A\n⊢ IsStarNormal (cfcₙ f a)","decl":"@[simp]\ninstance IsStarNormal.cfcₙ_map (f : R → R) (a : A) : IsStarNormal (cfcₙ f a) where\n  star_comm_self := by\n    refine cfcₙ_cases (fun x ↦ Commute (star x) x) _ _ (Commute.zero_right _) fun _ _ _ ↦ ?_\n    simp only [Commute, SemiconjBy]\n    rw [← cfcₙ_apply f a, ← cfcₙ_star, ← cfcₙ_mul .., ← cfcₙ_mul ..]\n    congr! 2\n    exact mul_comm _ _\n\n-- The following two lemmas are just `cfcₙ_predicate`, but specific enough for the `@[simp]` tag.\n"}
{"name":"IsSelfAdjoint.cfcₙ","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝¹² : CommSemiring R\ninst✝¹¹ : Nontrivial R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalSemiring R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : NonUnitalRing A\ninst✝⁵ : StarRing A\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Module R A\ninst✝² : IsScalarTower R A A\ninst✝¹ : SMulCommClass R A A\ninst✝ : NonUnitalContinuousFunctionalCalculus R IsSelfAdjoint\nf : R → R\na : A\n⊢ IsSelfAdjoint (cfcₙ f a)","decl":"@[simp]\nprotected lemma IsSelfAdjoint.cfcₙ\n    [NonUnitalContinuousFunctionalCalculus R (IsSelfAdjoint : A → Prop)] {f : R → R} {a : A} :\n    IsSelfAdjoint (cfcₙ f a) :=\n  cfcₙ_predicate _ _\n\n"}
{"name":"cfcₙ_nonneg_of_predicate","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝¹³ : CommSemiring R\ninst✝¹² : Nontrivial R\ninst✝¹¹ : StarRing R\ninst✝¹⁰ : MetricSpace R\ninst✝⁹ : TopologicalSemiring R\ninst✝⁸ : ContinuousStar R\ninst✝⁷ : NonUnitalRing A\ninst✝⁶ : StarRing A\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Module R A\ninst✝³ : IsScalarTower R A A\ninst✝² : SMulCommClass R A A\ninst✝¹ : PartialOrder A\ninst✝ : NonUnitalContinuousFunctionalCalculus R fun a => LE.le 0 a\nf : R → R\na : A\n⊢ LE.le 0 (cfcₙ f a)","decl":"@[simp]\nlemma cfcₙ_nonneg_of_predicate [PartialOrder A]\n    [NonUnitalContinuousFunctionalCalculus R (fun (a : A) => 0 ≤ a)] {f : R → R} {a : A} :\n    0 ≤ cfcₙ f a :=\n  cfcₙ_predicate _ _\n\n"}
{"name":"cfcₙ_sub","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹² : CommRing R\ninst✝¹¹ : Nontrivial R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalRing R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : Module R A\ninst✝² : IsScalarTower R A A\ninst✝¹ : SMulCommClass R A A\ninst✝ : NonUnitalContinuousFunctionalCalculus R p\nf g : R → R\na : A\nhf : autoParam (ContinuousOn f (quasispectrum R a)) _auto✝\nhf0 : autoParam (Eq (f 0) 0) _auto✝\nhg : autoParam (ContinuousOn g (quasispectrum R a)) _auto✝\nhg0 : autoParam (Eq (g 0) 0) _auto✝\n⊢ Eq (cfcₙ (fun x => HSub.hSub (f x) (g x)) a) (HSub.hSub (cfcₙ f a) (cfcₙ g a))","decl":"include hf hf0 hg hg0 in\nlemma cfcₙ_sub : cfcₙ (fun x ↦ f x - g x) a = cfcₙ f a - cfcₙ g a := by\n  by_cases ha : p a\n  · rw [cfcₙ_apply f a, cfcₙ_apply g a, ← map_sub, cfcₙ_apply ..]\n    congr\n  · simp [cfcₙ_apply_of_not_predicate a ha]\n\n"}
{"name":"cfcₙ_neg","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹² : CommRing R\ninst✝¹¹ : Nontrivial R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalRing R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : Module R A\ninst✝² : IsScalarTower R A A\ninst✝¹ : SMulCommClass R A A\ninst✝ : NonUnitalContinuousFunctionalCalculus R p\nf : R → R\na : A\n⊢ Eq (cfcₙ (fun x => Neg.neg (f x)) a) (Neg.neg (cfcₙ f a))","decl":"lemma cfcₙ_neg : cfcₙ (fun x ↦ - (f x)) a = - (cfcₙ f a) := by\n  by_cases h : p a ∧ ContinuousOn f (σₙ R a) ∧ f 0 = 0\n  · obtain ⟨ha, hf, h0⟩ := h\n    rw [cfcₙ_apply f a, ← map_neg, cfcₙ_apply ..]\n    congr\n  · simp only [not_and_or] at h\n    obtain (ha | hf | h0) := h\n    · simp [cfcₙ_apply_of_not_predicate a ha]\n    · rw [cfcₙ_apply_of_not_continuousOn a hf, cfcₙ_apply_of_not_continuousOn, neg_zero]\n      exact fun hf_neg ↦ hf <| by simpa using hf_neg.neg\n    · rw [cfcₙ_apply_of_not_map_zero a h0, cfcₙ_apply_of_not_map_zero, neg_zero]\n      exact (h0 <| neg_eq_zero.mp ·)\n\n"}
{"name":"cfcₙ_neg_id","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹² : CommRing R\ninst✝¹¹ : Nontrivial R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalRing R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : Module R A\ninst✝² : IsScalarTower R A A\ninst✝¹ : SMulCommClass R A A\ninst✝ : NonUnitalContinuousFunctionalCalculus R p\na : A\nha : autoParam (p a) _auto✝\n⊢ Eq (cfcₙ (fun x => Neg.neg x) a) (Neg.neg a)","decl":"lemma cfcₙ_neg_id (ha : p a := by cfc_tac) :\n    cfcₙ (- · : R → R) a = -a := by\n  rw [cfcₙ_neg .., cfcₙ_id' R a]\n\n"}
{"name":"cfcₙ_comp_neg","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹³ : CommRing R\ninst✝¹² : Nontrivial R\ninst✝¹¹ : StarRing R\ninst✝¹⁰ : MetricSpace R\ninst✝⁹ : TopologicalRing R\ninst✝⁸ : ContinuousStar R\ninst✝⁷ : TopologicalSpace A\ninst✝⁶ : NonUnitalRing A\ninst✝⁵ : StarRing A\ninst✝⁴ : Module R A\ninst✝³ : IsScalarTower R A A\ninst✝² : SMulCommClass R A A\ninst✝¹ : NonUnitalContinuousFunctionalCalculus R p\nf : R → R\na : A\ninst✝ : ContinuousMapZero.UniqueHom R A\nhf : autoParam (ContinuousOn f (Set.image (fun x => Neg.neg x) (quasispectrum R a))) _auto✝\nh0 : autoParam (Eq (f 0) 0) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Eq (cfcₙ (fun x => f (Neg.neg x)) a) (cfcₙ f (Neg.neg a))","decl":"lemma cfcₙ_comp_neg (hf : ContinuousOn f ((- ·) '' (σₙ R a)) := by cfc_cont_tac)\n    (h0 : f 0 = 0 := by cfc_zero_tac) (ha : p a := by cfc_tac) :\n    cfcₙ (f <| - ·) a = cfcₙ f (-a) := by\n  rw [cfcₙ_comp' .., cfcₙ_neg_id _]\n\n"}
{"name":"cfcₙHom_mono","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹⁵ : OrderedCommSemiring R\ninst✝¹⁴ : Nontrivial R\ninst✝¹³ : StarRing R\ninst✝¹² : MetricSpace R\ninst✝¹¹ : TopologicalSemiring R\ninst✝¹⁰ : ContinuousStar R\ninst✝⁹ : ∀ (α : Type u_1) [inst : Zero α] [inst_1 : TopologicalSpace α], StarOrderedRing (ContinuousMapZero α R)\ninst✝⁸ : TopologicalSpace A\ninst✝⁷ : NonUnitalRing A\ninst✝⁶ : StarRing A\ninst✝⁵ : PartialOrder A\ninst✝⁴ : StarOrderedRing A\ninst✝³ : Module R A\ninst✝² : IsScalarTower R A A\ninst✝¹ : SMulCommClass R A A\ninst✝ : NonUnitalContinuousFunctionalCalculus R p\na : A\nha : p a\nf g : ContinuousMapZero (↑(quasispectrum R a)) R\nhfg : LE.le f g\n⊢ LE.le ((cfcₙHom ha) f) ((cfcₙHom ha) g)","decl":"lemma cfcₙHom_mono {a : A} (ha : p a) {f g : C(σₙ R a, R)₀} (hfg : f ≤ g) :\n    cfcₙHom ha f ≤ cfcₙHom ha g :=\n  OrderHomClass.mono (cfcₙHom ha) hfg\n\n"}
{"name":"cfcₙHom_nonneg_iff","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹⁶ : OrderedCommSemiring R\ninst✝¹⁵ : Nontrivial R\ninst✝¹⁴ : StarRing R\ninst✝¹³ : MetricSpace R\ninst✝¹² : TopologicalSemiring R\ninst✝¹¹ : ContinuousStar R\ninst✝¹⁰ : ∀ (α : Type u_3) [inst : Zero α] [inst_1 : TopologicalSpace α], StarOrderedRing (ContinuousMapZero α R)\ninst✝⁹ : TopologicalSpace A\ninst✝⁸ : NonUnitalRing A\ninst✝⁷ : StarRing A\ninst✝⁶ : PartialOrder A\ninst✝⁵ : StarOrderedRing A\ninst✝⁴ : Module R A\ninst✝³ : IsScalarTower R A A\ninst✝² : SMulCommClass R A A\ninst✝¹ : NonUnitalContinuousFunctionalCalculus R p\ninst✝ : NonnegSpectrumClass R A\na : A\nha : p a\nf : ContinuousMapZero (↑(quasispectrum R a)) R\n⊢ Iff (LE.le 0 ((cfcₙHom ha) f)) (LE.le 0 f)","decl":"lemma cfcₙHom_nonneg_iff [NonnegSpectrumClass R A] {a : A} (ha : p a) {f : C(σₙ R a, R)₀} :\n    0 ≤ cfcₙHom ha f ↔ 0 ≤ f := by\n  constructor\n  · exact fun hf x ↦\n      (cfcₙHom_map_quasispectrum ha (R := R) _ ▸ quasispectrum_nonneg_of_nonneg (cfcₙHom ha f) hf)\n      _ ⟨x, rfl⟩\n  · simpa using (cfcₙHom_mono ha (f := 0) (g := f) ·)\n\n"}
{"name":"cfcₙ_mono","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹⁵ : OrderedCommSemiring R\ninst✝¹⁴ : Nontrivial R\ninst✝¹³ : StarRing R\ninst✝¹² : MetricSpace R\ninst✝¹¹ : TopologicalSemiring R\ninst✝¹⁰ : ContinuousStar R\ninst✝⁹ : ∀ (α : Type u_3) [inst : Zero α] [inst_1 : TopologicalSpace α], StarOrderedRing (ContinuousMapZero α R)\ninst✝⁸ : TopologicalSpace A\ninst✝⁷ : NonUnitalRing A\ninst✝⁶ : StarRing A\ninst✝⁵ : PartialOrder A\ninst✝⁴ : StarOrderedRing A\ninst✝³ : Module R A\ninst✝² : IsScalarTower R A A\ninst✝¹ : SMulCommClass R A A\ninst✝ : NonUnitalContinuousFunctionalCalculus R p\nf g : R → R\na : A\nh : ∀ (x : R), Membership.mem (quasispectrum R a) x → LE.le (f x) (g x)\nhf : autoParam (ContinuousOn f (quasispectrum R a)) _auto✝\nhg : autoParam (ContinuousOn g (quasispectrum R a)) _auto✝\nhf0 : autoParam (Eq (f 0) 0) _auto✝\nhg0 : autoParam (Eq (g 0) 0) _auto✝\n⊢ LE.le (cfcₙ f a) (cfcₙ g a)","decl":"lemma cfcₙ_mono {f g : R → R} {a : A} (h : ∀ x ∈ σₙ R a, f x ≤ g x)\n    (hf : ContinuousOn f (σₙ R a) := by cfc_cont_tac)\n    (hg : ContinuousOn g (σₙ R a) := by cfc_cont_tac)\n    (hf0 : f 0 = 0 := by cfc_zero_tac) (hg0 : g 0 = 0 := by cfc_zero_tac) :\n    cfcₙ f a ≤ cfcₙ g a := by\n  by_cases ha : p a\n  · rw [cfcₙ_apply f a, cfcₙ_apply g a]\n    exact cfcₙHom_mono ha fun x ↦ h x.1 x.2\n  · simp only [cfcₙ_apply_of_not_predicate _ ha, le_rfl]\n\n"}
{"name":"cfcₙ_nonneg_iff","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹⁶ : OrderedCommSemiring R\ninst✝¹⁵ : Nontrivial R\ninst✝¹⁴ : StarRing R\ninst✝¹³ : MetricSpace R\ninst✝¹² : TopologicalSemiring R\ninst✝¹¹ : ContinuousStar R\ninst✝¹⁰ : ∀ (α : Type u_3) [inst : Zero α] [inst_1 : TopologicalSpace α], StarOrderedRing (ContinuousMapZero α R)\ninst✝⁹ : TopologicalSpace A\ninst✝⁸ : NonUnitalRing A\ninst✝⁷ : StarRing A\ninst✝⁶ : PartialOrder A\ninst✝⁵ : StarOrderedRing A\ninst✝⁴ : Module R A\ninst✝³ : IsScalarTower R A A\ninst✝² : SMulCommClass R A A\ninst✝¹ : NonUnitalContinuousFunctionalCalculus R p\ninst✝ : NonnegSpectrumClass R A\nf : R → R\na : A\nhf : autoParam (ContinuousOn f (quasispectrum R a)) _auto✝\nh0 : autoParam (Eq (f 0) 0) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Iff (LE.le 0 (cfcₙ f a)) (∀ (x : R), Membership.mem (quasispectrum R a) x → LE.le 0 (f x))","decl":"lemma cfcₙ_nonneg_iff [NonnegSpectrumClass R A] (f : R → R) (a : A)\n    (hf : ContinuousOn f (σₙ R a) := by cfc_cont_tac)\n    (h0 : f 0 = 0 := by cfc_zero_tac) (ha : p a := by cfc_tac) :\n    0 ≤ cfcₙ f a ↔ ∀ x ∈ σₙ R a, 0 ≤ f x := by\n  rw [cfcₙ_apply .., cfcₙHom_nonneg_iff, ContinuousMapZero.le_def]\n  simp only [ContinuousMapZero.coe_mk, ContinuousMap.coe_mk, Set.restrict_apply, Subtype.forall]\n  congr!\n\n"}
{"name":"StarOrderedRing.nonneg_iff_quasispectrum_nonneg","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹⁶ : OrderedCommSemiring R\ninst✝¹⁵ : Nontrivial R\ninst✝¹⁴ : StarRing R\ninst✝¹³ : MetricSpace R\ninst✝¹² : TopologicalSemiring R\ninst✝¹¹ : ContinuousStar R\ninst✝¹⁰ : ∀ (α : Type u_3) [inst : Zero α] [inst_1 : TopologicalSpace α], StarOrderedRing (ContinuousMapZero α R)\ninst✝⁹ : TopologicalSpace A\ninst✝⁸ : NonUnitalRing A\ninst✝⁷ : StarRing A\ninst✝⁶ : PartialOrder A\ninst✝⁵ : StarOrderedRing A\ninst✝⁴ : Module R A\ninst✝³ : IsScalarTower R A A\ninst✝² : SMulCommClass R A A\ninst✝¹ : NonUnitalContinuousFunctionalCalculus R p\ninst✝ : NonnegSpectrumClass R A\na : A\nha : autoParam (p a) _auto✝\n⊢ Iff (LE.le 0 a) (∀ (x : R), Membership.mem (quasispectrum R a) x → LE.le 0 x)","decl":"lemma StarOrderedRing.nonneg_iff_quasispectrum_nonneg [NonnegSpectrumClass R A] (a : A)\n    (ha : p a := by cfc_tac) : 0 ≤ a ↔ ∀ x ∈ quasispectrum R a, 0 ≤ x := by\n  have := cfcₙ_nonneg_iff (id : R → R) a (by fun_prop)\n  simpa [cfcₙ_id _ a ha] using this\n\n"}
{"name":"cfcₙ_nonneg","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹⁵ : OrderedCommSemiring R\ninst✝¹⁴ : Nontrivial R\ninst✝¹³ : StarRing R\ninst✝¹² : MetricSpace R\ninst✝¹¹ : TopologicalSemiring R\ninst✝¹⁰ : ContinuousStar R\ninst✝⁹ : ∀ (α : Type u_3) [inst : Zero α] [inst_1 : TopologicalSpace α], StarOrderedRing (ContinuousMapZero α R)\ninst✝⁸ : TopologicalSpace A\ninst✝⁷ : NonUnitalRing A\ninst✝⁶ : StarRing A\ninst✝⁵ : PartialOrder A\ninst✝⁴ : StarOrderedRing A\ninst✝³ : Module R A\ninst✝² : IsScalarTower R A A\ninst✝¹ : SMulCommClass R A A\ninst✝ : NonUnitalContinuousFunctionalCalculus R p\nf : R → R\na : A\nh : ∀ (x : R), Membership.mem (quasispectrum R a) x → LE.le 0 (f x)\n⊢ LE.le 0 (cfcₙ f a)","decl":"lemma cfcₙ_nonneg {f : R → R} {a : A} (h : ∀ x ∈ σₙ R a, 0 ≤ f x) :\n    0 ≤ cfcₙ f a := by\n  by_cases hf : ContinuousOn f (σₙ R a) ∧ f 0 = 0\n  · obtain ⟨h₁, h₂⟩ := hf\n    simpa using cfcₙ_mono h\n  · simp only [not_and_or] at hf\n    obtain (hf | hf) := hf\n    · simp only [cfcₙ_apply_of_not_continuousOn _ hf, le_rfl]\n    · simp only [cfcₙ_apply_of_not_map_zero _ hf, le_rfl]\n\n"}
{"name":"cfcₙ_nonpos","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹⁵ : OrderedCommSemiring R\ninst✝¹⁴ : Nontrivial R\ninst✝¹³ : StarRing R\ninst✝¹² : MetricSpace R\ninst✝¹¹ : TopologicalSemiring R\ninst✝¹⁰ : ContinuousStar R\ninst✝⁹ : ∀ (α : Type u_3) [inst : Zero α] [inst_1 : TopologicalSpace α], StarOrderedRing (ContinuousMapZero α R)\ninst✝⁸ : TopologicalSpace A\ninst✝⁷ : NonUnitalRing A\ninst✝⁶ : StarRing A\ninst✝⁵ : PartialOrder A\ninst✝⁴ : StarOrderedRing A\ninst✝³ : Module R A\ninst✝² : IsScalarTower R A A\ninst✝¹ : SMulCommClass R A A\ninst✝ : NonUnitalContinuousFunctionalCalculus R p\nf : R → R\na : A\nh : ∀ (x : R), Membership.mem (quasispectrum R a) x → LE.le (f x) 0\n⊢ LE.le (cfcₙ f a) 0","decl":"lemma cfcₙ_nonpos (f : R → R) (a : A) (h : ∀ x ∈ σₙ R a, f x ≤ 0) :\n    cfcₙ f a ≤ 0 := by\n  by_cases hf : ContinuousOn f (σₙ R a) ∧ f 0 = 0\n  · obtain ⟨h₁, h₂⟩ := hf\n    simpa using cfcₙ_mono h\n  · simp only [not_and_or] at hf\n    obtain (hf | hf) := hf\n    · simp only [cfcₙ_apply_of_not_continuousOn _ hf, le_rfl]\n    · simp only [cfcₙ_apply_of_not_map_zero _ hf, le_rfl]\n\n"}
{"name":"cfcₙHom_le_iff","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹⁶ : OrderedCommRing R\ninst✝¹⁵ : Nontrivial R\ninst✝¹⁴ : StarRing R\ninst✝¹³ : MetricSpace R\ninst✝¹² : TopologicalRing R\ninst✝¹¹ : ContinuousStar R\ninst✝¹⁰ : ∀ (α : Type u_3) [inst : Zero α] [inst_1 : TopologicalSpace α], StarOrderedRing (ContinuousMapZero α R)\ninst✝⁹ : TopologicalSpace A\ninst✝⁸ : NonUnitalRing A\ninst✝⁷ : StarRing A\ninst✝⁶ : PartialOrder A\ninst✝⁵ : StarOrderedRing A\ninst✝⁴ : Module R A\ninst✝³ : IsScalarTower R A A\ninst✝² : SMulCommClass R A A\ninst✝¹ : NonUnitalContinuousFunctionalCalculus R p\ninst✝ : NonnegSpectrumClass R A\na : A\nha : p a\nf g : ContinuousMapZero (↑(quasispectrum R a)) R\n⊢ Iff (LE.le ((cfcₙHom ha) f) ((cfcₙHom ha) g)) (LE.le f g)","decl":"lemma cfcₙHom_le_iff {a : A} (ha : p a) {f g : C(σₙ R a, R)₀} :\n    cfcₙHom ha f ≤ cfcₙHom ha g ↔ f ≤ g := by\n  rw [← sub_nonneg, ← map_sub, cfcₙHom_nonneg_iff, sub_nonneg]\n\n"}
{"name":"cfcₙ_le_iff","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹⁶ : OrderedCommRing R\ninst✝¹⁵ : Nontrivial R\ninst✝¹⁴ : StarRing R\ninst✝¹³ : MetricSpace R\ninst✝¹² : TopologicalRing R\ninst✝¹¹ : ContinuousStar R\ninst✝¹⁰ : ∀ (α : Type u_3) [inst : Zero α] [inst_1 : TopologicalSpace α], StarOrderedRing (ContinuousMapZero α R)\ninst✝⁹ : TopologicalSpace A\ninst✝⁸ : NonUnitalRing A\ninst✝⁷ : StarRing A\ninst✝⁶ : PartialOrder A\ninst✝⁵ : StarOrderedRing A\ninst✝⁴ : Module R A\ninst✝³ : IsScalarTower R A A\ninst✝² : SMulCommClass R A A\ninst✝¹ : NonUnitalContinuousFunctionalCalculus R p\ninst✝ : NonnegSpectrumClass R A\nf g : R → R\na : A\nhf : autoParam (ContinuousOn f (quasispectrum R a)) _auto✝\nhg : autoParam (ContinuousOn g (quasispectrum R a)) _auto✝\nhf0 : autoParam (Eq (f 0) 0) _auto✝\nhg0 : autoParam (Eq (g 0) 0) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Iff (LE.le (cfcₙ f a) (cfcₙ g a)) (∀ (x : R), Membership.mem (quasispectrum R a) x → LE.le (f x) (g x))","decl":"lemma cfcₙ_le_iff (f g : R → R) (a : A) (hf : ContinuousOn f (σₙ R a) := by cfc_cont_tac)\n    (hg : ContinuousOn g (σₙ R a) := by cfc_cont_tac) (hf0 : f 0 = 0 := by cfc_zero_tac)\n    (hg0 : g 0 = 0 := by cfc_zero_tac) (ha : p a := by cfc_tac) :\n    cfcₙ f a ≤ cfcₙ g a ↔ ∀ x ∈ σₙ R a, f x ≤ g x := by\n  rw [cfcₙ_apply f a, cfcₙ_apply g a, cfcₙHom_le_iff (show p a from ha), ContinuousMapZero.le_def]\n  simp\n\n"}
{"name":"cfcₙ_nonpos_iff","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹⁶ : OrderedCommRing R\ninst✝¹⁵ : Nontrivial R\ninst✝¹⁴ : StarRing R\ninst✝¹³ : MetricSpace R\ninst✝¹² : TopologicalRing R\ninst✝¹¹ : ContinuousStar R\ninst✝¹⁰ : ∀ (α : Type u_3) [inst : Zero α] [inst_1 : TopologicalSpace α], StarOrderedRing (ContinuousMapZero α R)\ninst✝⁹ : TopologicalSpace A\ninst✝⁸ : NonUnitalRing A\ninst✝⁷ : StarRing A\ninst✝⁶ : PartialOrder A\ninst✝⁵ : StarOrderedRing A\ninst✝⁴ : Module R A\ninst✝³ : IsScalarTower R A A\ninst✝² : SMulCommClass R A A\ninst✝¹ : NonUnitalContinuousFunctionalCalculus R p\ninst✝ : NonnegSpectrumClass R A\nf : R → R\na : A\nhf : autoParam (ContinuousOn f (quasispectrum R a)) _auto✝\nh0 : autoParam (Eq (f 0) 0) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Iff (LE.le (cfcₙ f a) 0) (∀ (x : R), Membership.mem (quasispectrum R a) x → LE.le (f x) 0)","decl":"lemma cfcₙ_nonpos_iff (f : R → R) (a : A) (hf : ContinuousOn f (σₙ R a) := by cfc_cont_tac)\n    (h0 : f 0 = 0 := by cfc_zero_tac) (ha : p a := by cfc_tac) :\n    cfcₙ f a ≤ 0 ↔ ∀ x ∈ σₙ R a, f x ≤ 0 := by\n  simp_rw [← neg_nonneg, ← cfcₙ_neg]\n  exact cfcₙ_nonneg_iff (fun x ↦ -f x) a\n\n"}
{"name":"cfcₙHomSuperset_apply","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\na : A\nha : p a\ns : Set R\nhs : HasSubset.Subset (quasispectrum R a) s\na✝ : ContinuousMapZero (↑s) R\n⊢ Eq ((cfcₙHomSuperset ha hs) a✝) ((cfcₙHom ha) (a✝.comp { toFun := Subtype.map id hs, continuous_toFun := ⋯, map_zero' := ⋯ }))","decl":"/-- The composition of `cfcₙHom` with the natural embedding `C(s, R)₀ → C(quasispectrum R a, R)₀`\nwhenever `quasispectrum R a ⊆ s`.\n\nThis is sometimes necessary in order to consider the same continuous functions applied to multiple\ndistinct elements, with the added constraint that `cfcₙ` does not suffice. This can occur, for\nexample, if it is necessary to use uniqueness of this continuous functional calculus. A practical\nexample can be found in the proof of `CFC.posPart_negPart_unique`. -/\n@[simps!]\nnoncomputable def cfcₙHomSuperset {a : A} (ha : p a) {s : Set R} (hs : σₙ R a ⊆ s) :\n    letI : Zero s := ⟨0, hs (quasispectrum.zero_mem R a)⟩\n    C(s, R)₀ →⋆ₙₐ[R] A :=\n  letI : Zero s := ⟨0, hs (quasispectrum.zero_mem R a)⟩\n  cfcₙHom ha (R := R) |>.comp <| ContinuousMapZero.nonUnitalStarAlgHom_precomp R <|\n    ⟨⟨_, continuous_id.subtype_map hs⟩, rfl⟩\n\n"}
{"name":"cfcₙHomSuperset_continuous","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\na : A\nha : p a\ns : Set R\nhs : HasSubset.Subset (quasispectrum R a) s\n⊢ Continuous ⇑(cfcₙHomSuperset ha hs)","decl":"lemma cfcₙHomSuperset_continuous {a : A} (ha : p a) {s : Set R} (hs : σₙ R a ⊆ s) :\n    Continuous (cfcₙHomSuperset ha hs) :=\n  letI : Zero s := ⟨0, hs (quasispectrum.zero_mem R a)⟩\n  (cfcₙHom_continuous ha).comp <| ContinuousMapZero.continuous_comp_left _\n\n"}
{"name":"cfcₙHomSuperset_id","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\na : A\nha : p a\ns : Set R\nhs : HasSubset.Subset (quasispectrum R a) s\n⊢ Eq ((cfcₙHomSuperset ha hs) { toContinuousMap := ContinuousMap.restrict s (ContinuousMap.id R), map_zero' := ⋯ }) a","decl":"lemma cfcₙHomSuperset_id {a : A} (ha : p a) {s : Set R} (hs : σₙ R a ⊆ s) :\n    letI : Zero s := ⟨0, hs (quasispectrum.zero_mem R a)⟩\n    cfcₙHomSuperset ha hs ⟨.restrict s <| .id R, rfl⟩ = a :=\n  cfcₙHom_id ha\n\n"}
{"name":"cfcₙHomSuperset_id'","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : Nontrivial R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ninstCFCₙ : NonUnitalContinuousFunctionalCalculus R p\na : A\nha : p a\ns : Set R\nhs : HasSubset.Subset (quasispectrum R a) s\n⊢ Eq ((cfcₙHomSuperset ha hs) (ContinuousMapZero.id ⋯)) a","decl":"/-- this version uses `ContinuousMapZero.id`. -/\nlemma cfcₙHomSuperset_id' {a : A} (ha : p a) {s : Set R} (hs : σₙ R a ⊆ s) :\n    letI : Zero s := ⟨0, hs (quasispectrum.zero_mem R a)⟩\n    cfcₙHomSuperset ha hs (.id rfl) = a :=\n  cfcₙHom_id ha\n\n"}
{"name":"cfcₙHom_of_cfcHom_map_quasispectrum","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁹ : Semifield R\ninst✝⁸ : StarRing R\ninst✝⁷ : MetricSpace R\ninst✝⁶ : TopologicalSemiring R\ninst✝⁵ : ContinuousStar R\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : TopologicalSpace A\ninst✝¹ : Algebra R A\ninst✝ : ContinuousFunctionalCalculus R p\na : A\nha : p a\nf : ContinuousMapZero (↑(quasispectrum R a)) R\n⊢ Eq (quasispectrum R ((cfcₙHom_of_cfcHom R ha) f)) (Set.range ⇑f)","decl":"lemma cfcₙHom_of_cfcHom_map_quasispectrum {a : A} (ha : p a) :\n    ∀ f : C(σₙ R a, R)₀, σₙ R (cfcₙHom_of_cfcHom R ha f) = range f := by\n  intro f\n  simp only [cfcₙHom_of_cfcHom]\n  rw [quasispectrum_eq_spectrum_union_zero]\n  simp only [NonUnitalStarAlgHom.comp_assoc, NonUnitalStarAlgHom.comp_apply,\n    NonUnitalStarAlgHom.coe_coe]\n  rw [cfcHom_map_spectrum ha]\n  ext x\n  constructor\n  · rintro (⟨x, rfl⟩ | rfl)\n    · exact ⟨⟨x.1, spectrum_subset_quasispectrum R a x.2⟩, rfl⟩\n    · exact ⟨0, map_zero f⟩\n  · rintro ⟨x, rfl⟩\n    have hx := x.2\n    simp_rw [quasispectrum_eq_spectrum_union_zero R a] at hx\n    obtain (hx | hx) := hx\n    · exact Or.inl ⟨⟨x.1, hx⟩, rfl⟩\n    · apply Or.inr\n      simp only [Set.mem_singleton_iff] at hx ⊢\n      rw [show x = 0 from Subtype.val_injective hx, map_zero]\n\n"}
{"name":"isClosedEmbedding_cfcₙHom_of_cfcHom","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹⁰ : Semifield R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : Ring A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Algebra R A\ninst✝¹ : ContinuousFunctionalCalculus R p\ninst✝ : CompleteSpace R\na : A\nha : p a\n⊢ Topology.IsClosedEmbedding ⇑(cfcₙHom_of_cfcHom R ha)","decl":"lemma isClosedEmbedding_cfcₙHom_of_cfcHom {a : A} (ha : p a) :\n    IsClosedEmbedding (cfcₙHom_of_cfcHom R ha) := by\n  let f : C(spectrum R a, σₙ R a) :=\n    ⟨_, continuous_inclusion <| spectrum_subset_quasispectrum R a⟩\n  refine (cfcHom_isClosedEmbedding ha).comp <|\n    (IsUniformInducing.isUniformEmbedding ⟨?_⟩).isClosedEmbedding\n  have := uniformSpace_eq_inf_precomp_of_cover (β := R) f (0 : C(Unit, σₙ R a))\n    (map_continuous f).isProperMap (map_continuous 0).isProperMap <| by\n      simp only [← Subtype.val_injective.image_injective.eq_iff, f, ContinuousMap.coe_mk,\n        ContinuousMap.coe_zero, range_zero, image_union, image_singleton,\n        quasispectrum.coe_zero, ← range_comp, val_comp_inclusion, image_univ, Subtype.range_coe,\n        quasispectrum_eq_spectrum_union_zero]\n  simp_rw [ContinuousMapZero.instUniformSpace, this, uniformity_comap,\n    @inf_uniformity _ (.comap _ _) (.comap _ _), uniformity_comap, Filter.comap_inf,\n    Filter.comap_comap]\n  refine .symm <| inf_eq_left.mpr <| le_top.trans <| eq_top_iff.mp ?_\n  have : ∀ U ∈ 𝓤 (C(Unit, R)), (0, 0) ∈ U := fun U hU ↦ refl_mem_uniformity hU\n  convert Filter.comap_const_of_mem this with ⟨u, v⟩ <;>\n  ext ⟨x, rfl⟩ <;> [exact map_zero u; exact map_zero v]\n\n"}
{"name":"closedEmbedding_cfcₙHom_of_cfcHom","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹⁰ : Semifield R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : Ring A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Algebra R A\ninst✝¹ : ContinuousFunctionalCalculus R p\ninst✝ : CompleteSpace R\na : A\nha : p a\n⊢ Topology.IsClosedEmbedding ⇑(cfcₙHom_of_cfcHom R ha)","decl":"@[deprecated (since := \"2024-10-20\")]\nalias closedEmbedding_cfcₙHom_of_cfcHom := isClosedEmbedding_cfcₙHom_of_cfcHom\n\n"}
{"name":"ContinuousFunctionalCalculus.toNonUnital","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹⁰ : Semifield R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : Ring A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Algebra R A\ninst✝¹ : ContinuousFunctionalCalculus R p\ninst✝ : CompleteSpace R\n⊢ NonUnitalContinuousFunctionalCalculus R p","decl":"instance ContinuousFunctionalCalculus.toNonUnital : NonUnitalContinuousFunctionalCalculus R p where\n  predicate_zero := cfc_predicate_zero R\n  compactSpace_quasispectrum a := by\n    have h_cpct : CompactSpace (spectrum R a) := inferInstance\n    simp only [← isCompact_iff_compactSpace, quasispectrum_eq_spectrum_union_zero] at h_cpct ⊢\n    exact h_cpct |>.union isCompact_singleton\n  exists_cfc_of_predicate _ ha :=\n    ⟨cfcₙHom_of_cfcHom R ha,\n      isClosedEmbedding_cfcₙHom_of_cfcHom ha,\n      cfcHom_id ha,\n      cfcₙHom_of_cfcHom_map_quasispectrum ha,\n      fun _ ↦ cfcHom_predicate ha _⟩\n\n"}
{"name":"cfcₙHom_eq_cfcₙHom_of_cfcHom","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : Semifield R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalSemiring R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : Ring A\ninst✝⁵ : StarRing A\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Algebra R A\ninst✝² : ContinuousFunctionalCalculus R p\ninst✝¹ : CompleteSpace R\ninst✝ : ContinuousMapZero.UniqueHom R A\na : A\nha : p a\n⊢ Eq (cfcₙHom ha) (cfcₙHom_of_cfcHom R ha)","decl":"open scoped NonUnitalContinuousFunctionalCalculus in\nlemma cfcₙHom_eq_cfcₙHom_of_cfcHom [ContinuousMapZero.UniqueHom R A] {a : A}\n    (ha : p a) : cfcₙHom (R := R) ha = cfcₙHom_of_cfcHom R ha := by\n  refine ContinuousMapZero.UniqueHom.eq_of_continuous_of_map_id\n      (σₙ R a) ?_ _ _ ?_ ?_ ?_\n  · simp\n  · exact (cfcₙHom_isClosedEmbedding (R := R) ha).continuous\n  · exact (isClosedEmbedding_cfcₙHom_of_cfcHom ha).continuous\n  · simpa only [cfcₙHom_id (R := R) ha] using (cfcHom_id ha).symm\n\n"}
{"name":"cfcₙ_eq_cfc","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.NonUnital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : Semifield R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalSemiring R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : Ring A\ninst✝⁵ : StarRing A\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Algebra R A\ninst✝² : ContinuousFunctionalCalculus R p\ninst✝¹ : CompleteSpace R\ninst✝ : ContinuousMapZero.UniqueHom R A\nf : R → R\na : A\nhf : autoParam (ContinuousOn f (quasispectrum R a)) _auto✝\nhf0 : autoParam (Eq (f 0) 0) _auto✝\n⊢ Eq (cfcₙ f a) (cfc f a)","decl":"/-- When `cfc` is applied to a function that maps zero to zero, it is equivalent to using\n`cfcₙ`. -/\nlemma cfcₙ_eq_cfc [ContinuousMapZero.UniqueHom R A] {f : R → R} {a : A}\n    (hf : ContinuousOn f (σₙ R a) := by cfc_cont_tac) (hf0 : f 0 = 0 := by cfc_zero_tac) :\n    cfcₙ f a = cfc f a := by\n  by_cases ha : p a\n  · have hf' := hf.mono <| spectrum_subset_quasispectrum R a\n    rw [cfc_apply f a ha hf', cfcₙ_apply f a hf, cfcₙHom_eq_cfcₙHom_of_cfcHom, cfcₙHom_of_cfcHom]\n    dsimp only [NonUnitalStarAlgHom.comp_apply, toContinuousMapHom_apply,\n      NonUnitalStarAlgHom.coe_coe, compStarAlgHom'_apply]\n    congr\n  · simp [cfc_apply_of_not_predicate a ha, cfcₙ_apply_of_not_predicate (R := R) a ha]\n\n"}
