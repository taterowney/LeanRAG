{"name":"CategoryTheory.Functor.FullyFaithful.additive_ofFullyFaithful","module":"Mathlib.CategoryTheory.Preadditive.Transfer","initialProofState":"C : Type u₁\ninst✝² : CategoryTheory.Category.{v₁, u₁} C\nD : Type u₂\ninst✝¹ : CategoryTheory.Category.{v₂, u₂} D\ninst✝ : CategoryTheory.Preadditive D\nF : CategoryTheory.Functor C D\nhF : F.FullyFaithful\n⊢ F.Additive","decl":"/-- The preadditive structure on `C` induced by a fully faithful functor `F : C ⥤ D` makes `F` an\nadditive functor. -/\nlemma additive_ofFullyFaithful :\n    letI : Preadditive C := Preadditive.ofFullyFaithful hF\n    F.Additive :=\n  letI : Preadditive C := Preadditive.ofFullyFaithful hF\n  { map_add := by simp [Equiv.add_def] }\n\n"}
{"name":"CategoryTheory.Equivalence.additive_inverse_of_FullyFaithful","module":"Mathlib.CategoryTheory.Preadditive.Transfer","initialProofState":"C : Type u₁\ninst✝² : CategoryTheory.Category.{v₁, u₁} C\nD : Type u₂\ninst✝¹ : CategoryTheory.Category.{v₂, u₂} D\ninst✝ : CategoryTheory.Preadditive D\ne : CategoryTheory.Equivalence C D\n⊢ e.inverse.Additive","decl":"/-- The preadditive structure on `C` induced by an equivalence `e : C ≌ D` makes `e.inverse` an\nadditive functor. -/\nlemma additive_inverse_of_FullyFaithful (e : C ≌ D) :\n    letI : Preadditive C := ofFullyFaithful e.fullyFaithfulFunctor\n    e.inverse.Additive :=\n  letI : Preadditive C := ofFullyFaithful e.fullyFaithfulFunctor\n  letI : e.functor.Additive := e.fullyFaithfulFunctor.additive_ofFullyFaithful\n  e.inverse_additive\n\n"}
