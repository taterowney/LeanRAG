{"name":"cfcₙAux_id","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"𝕜 : Type u_1\nA : Type u_2\ninst✝⁷ : RCLike 𝕜\ninst✝⁶ : NonUnitalNormedRing A\ninst✝⁵ : StarRing A\ninst✝⁴ : NormedSpace 𝕜 A\ninst✝³ : IsScalarTower 𝕜 A A\ninst✝² : SMulCommClass 𝕜 A A\ninst✝¹ : StarModule 𝕜 A\np : A → Prop\np₁ : Unitization 𝕜 A → Prop\nhp₁ : ∀ {x : A}, Iff (p₁ ↑x) (p x)\na : A\nha : p a\ninst✝ : ContinuousFunctionalCalculus 𝕜 p₁\n⊢ Eq ((cfcₙAux ⋯ a ha) (ContinuousMapZero.id ⋯)) ↑a","decl":"lemma cfcₙAux_id : cfcₙAux hp₁ a ha (ContinuousMapZero.id rfl) = a := cfcHom_id (hp₁.mpr ha)\n\n"}
{"name":"isClosedEmbedding_cfcₙAux","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"𝕜 : Type u_1\nA : Type u_2\ninst✝⁷ : RCLike 𝕜\ninst✝⁶ : NonUnitalNormedRing A\ninst✝⁵ : StarRing A\ninst✝⁴ : NormedSpace 𝕜 A\ninst✝³ : IsScalarTower 𝕜 A A\ninst✝² : SMulCommClass 𝕜 A A\ninst✝¹ : StarModule 𝕜 A\np : A → Prop\np₁ : Unitization 𝕜 A → Prop\nhp₁ : ∀ {x : A}, Iff (p₁ ↑x) (p x)\na : A\nha : p a\ninst✝ : ContinuousFunctionalCalculus 𝕜 p₁\n⊢ Topology.IsClosedEmbedding ⇑(cfcₙAux ⋯ a ha)","decl":"open Unitization in\nlemma isClosedEmbedding_cfcₙAux : IsClosedEmbedding (cfcₙAux hp₁ a ha) := by\n  simp only [cfcₙAux, NonUnitalStarAlgHom.coe_comp]\n  refine ((cfcHom_isClosedEmbedding (hp₁.mpr ha)).comp ?_).comp\n    ContinuousMapZero.isClosedEmbedding_toContinuousMap\n  let e : C(σₙ 𝕜 a, 𝕜) ≃ₜ C(σ 𝕜 (a : A⁺¹), 𝕜) :=\n    (Homeomorph.setCongr (quasispectrum_eq_spectrum_inr' 𝕜 𝕜 a)).arrowCongr (.refl _)\n  exact e.isClosedEmbedding\n\n"}
{"name":"closedEmbedding_cfcₙAux","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"𝕜 : Type u_1\nA : Type u_2\ninst✝⁷ : RCLike 𝕜\ninst✝⁶ : NonUnitalNormedRing A\ninst✝⁵ : StarRing A\ninst✝⁴ : NormedSpace 𝕜 A\ninst✝³ : IsScalarTower 𝕜 A A\ninst✝² : SMulCommClass 𝕜 A A\ninst✝¹ : StarModule 𝕜 A\np : A → Prop\np₁ : Unitization 𝕜 A → Prop\nhp₁ : ∀ {x : A}, Iff (p₁ ↑x) (p x)\na : A\nha : p a\ninst✝ : ContinuousFunctionalCalculus 𝕜 p₁\n⊢ Topology.IsClosedEmbedding ⇑(cfcₙAux ⋯ a ha)","decl":"@[deprecated (since := \"2024-10-20\")]\nalias closedEmbedding_cfcₙAux := isClosedEmbedding_cfcₙAux\n\n"}
{"name":"spec_cfcₙAux","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"𝕜 : Type u_1\nA : Type u_2\ninst✝⁷ : RCLike 𝕜\ninst✝⁶ : NonUnitalNormedRing A\ninst✝⁵ : StarRing A\ninst✝⁴ : NormedSpace 𝕜 A\ninst✝³ : IsScalarTower 𝕜 A A\ninst✝² : SMulCommClass 𝕜 A A\ninst✝¹ : StarModule 𝕜 A\np : A → Prop\np₁ : Unitization 𝕜 A → Prop\nhp₁ : ∀ {x : A}, Iff (p₁ ↑x) (p x)\na : A\nha : p a\ninst✝ : ContinuousFunctionalCalculus 𝕜 p₁\nf : ContinuousMapZero (↑(quasispectrum 𝕜 a)) 𝕜\n⊢ Eq (spectrum 𝕜 ((cfcₙAux ⋯ a ha) f)) (Set.range ⇑f)","decl":"lemma spec_cfcₙAux (f : C(σₙ 𝕜 a, 𝕜)₀) : σ 𝕜 (cfcₙAux hp₁ a ha f) = Set.range f := by\n  rw [cfcₙAux, NonUnitalStarAlgHom.comp_assoc, NonUnitalStarAlgHom.comp_apply]\n  simp only [NonUnitalStarAlgHom.comp_apply, NonUnitalStarAlgHom.coe_coe]\n  rw [cfcHom_map_spectrum (hp₁.mpr ha) (R := 𝕜) _]\n  ext x\n  constructor\n  all_goals rintro ⟨x, rfl⟩\n  · exact ⟨⟨x, (Unitization.quasispectrum_eq_spectrum_inr' 𝕜 𝕜 a).symm ▸ x.property⟩, rfl⟩\n  · exact ⟨⟨x, Unitization.quasispectrum_eq_spectrum_inr' 𝕜 𝕜 a ▸ x.property⟩, rfl⟩\n\n"}
{"name":"cfcₙAux_mem_range_inr","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"𝕜 : Type u_1\nA : Type u_2\ninst✝⁸ : RCLike 𝕜\ninst✝⁷ : NonUnitalNormedRing A\ninst✝⁶ : StarRing A\ninst✝⁵ : NormedSpace 𝕜 A\ninst✝⁴ : IsScalarTower 𝕜 A A\ninst✝³ : SMulCommClass 𝕜 A A\ninst✝² : StarModule 𝕜 A\np : A → Prop\np₁ : Unitization 𝕜 A → Prop\nhp₁ : ∀ {x : A}, Iff (p₁ ↑x) (p x)\na : A\nha : p a\ninst✝¹ : ContinuousFunctionalCalculus 𝕜 p₁\ninst✝ : CompleteSpace A\nf : ContinuousMapZero (↑(quasispectrum 𝕜 a)) 𝕜\n⊢ Membership.mem (NonUnitalStarAlgHom.range (Unitization.inrNonUnitalStarAlgHom 𝕜 A)) ((cfcₙAux ⋯ a ha) f)","decl":"lemma cfcₙAux_mem_range_inr (f : C(σₙ 𝕜 a, 𝕜)₀) :\n    cfcₙAux hp₁ a ha f ∈ NonUnitalStarAlgHom.range (Unitization.inrNonUnitalStarAlgHom 𝕜 A) := by\n  have h₁ := (isClosedEmbedding_cfcₙAux hp₁ a ha).continuous.range_subset_closure_image_dense\n    (ContinuousMapZero.adjoin_id_dense (s := σₙ 𝕜 a) rfl) ⟨f, rfl⟩\n  rw [← SetLike.mem_coe]\n  refine closure_minimal ?_ ?_ h₁\n  · rw [← NonUnitalStarSubalgebra.coe_map, SetLike.coe_subset_coe, NonUnitalStarSubalgebra.map_le]\n    apply NonUnitalStarAlgebra.adjoin_le\n    apply Set.singleton_subset_iff.mpr\n    rw [SetLike.mem_coe, NonUnitalStarSubalgebra.mem_comap, cfcₙAux_id hp₁ a ha]\n    exact ⟨a, rfl⟩\n  · have : Continuous (Unitization.fst (R := 𝕜) (A := A)) :=\n      Unitization.uniformEquivProd.continuous.fst\n    simp only [NonUnitalStarAlgHom.coe_range]\n    convert IsClosed.preimage this (isClosed_singleton (x := 0))\n    aesop\n\n"}
{"name":"RCLike.nonUnitalContinuousFunctionalCalculus","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"𝕜 : Type u_1\nA : Type u_2\ninst✝⁹ : RCLike 𝕜\ninst✝⁸ : NonUnitalNormedRing A\ninst✝⁷ : StarRing A\ninst✝⁶ : NormedSpace 𝕜 A\ninst✝⁵ : IsScalarTower 𝕜 A A\ninst✝⁴ : SMulCommClass 𝕜 A A\ninst✝³ : StarModule 𝕜 A\np : A → Prop\np₁ : Unitization 𝕜 A → Prop\nhp₁ : ∀ {x : A}, Iff (p₁ ↑x) (p x)\ninst✝² : ContinuousFunctionalCalculus 𝕜 p₁\ninst✝¹ : CompleteSpace A\ninst✝ : CStarRing A\n⊢ NonUnitalContinuousFunctionalCalculus 𝕜 p","decl":"include hp₁ in\nopen Unitization NonUnitalStarAlgHom in\ntheorem RCLike.nonUnitalContinuousFunctionalCalculus :\n    NonUnitalContinuousFunctionalCalculus 𝕜 (p : A → Prop) where\n  predicate_zero := by\n    rw [← hp₁, Unitization.inr_zero 𝕜]\n    exact cfc_predicate_zero 𝕜\n  exists_cfc_of_predicate a ha := by\n    let ψ : C(σₙ 𝕜 a, 𝕜)₀ →⋆ₙₐ[𝕜] A := comp (inrRangeEquiv 𝕜 A).symm <|\n      codRestrict (cfcₙAux hp₁ a ha) _ (cfcₙAux_mem_range_inr hp₁ a ha)\n    have coe_ψ (f : C(σₙ 𝕜 a, 𝕜)₀) : ψ f = cfcₙAux hp₁ a ha f :=\n      congr_arg Subtype.val <| (inrRangeEquiv 𝕜 A).apply_symm_apply\n        ⟨cfcₙAux hp₁ a ha f, cfcₙAux_mem_range_inr hp₁ a ha f⟩\n    refine ⟨ψ, ?isClosedEmbedding, ?map_id, fun f ↦ ?map_spec, fun f ↦ ?isStarNormal⟩\n    case isClosedEmbedding =>\n      apply isometry_inr (𝕜 := 𝕜) (A := A) |>.isClosedEmbedding |>.of_comp_iff.mp\n      have : inr ∘ ψ = cfcₙAux hp₁ a ha := by ext1; rw [Function.comp_apply, coe_ψ]\n      exact this ▸ isClosedEmbedding_cfcₙAux hp₁ a ha\n    case map_id => exact inr_injective (R := 𝕜) <| coe_ψ _ ▸ cfcₙAux_id hp₁ a ha\n    case map_spec =>\n      exact quasispectrum_eq_spectrum_inr' 𝕜 𝕜 (ψ f) ▸ coe_ψ _ ▸ spec_cfcₙAux hp₁ a ha f\n    case isStarNormal => exact hp₁.mp <| coe_ψ _ ▸ cfcHom_predicate (R := 𝕜) (hp₁.mpr ha) _\n\n"}
{"name":"isSelfAdjoint_iff_isStarNormal_and_quasispectrumRestricts","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"A : Type u_1\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : Module Complex A\ninst✝² : IsScalarTower Complex A A\ninst✝¹ : SMulCommClass Complex A A\ninst✝ : NonUnitalContinuousFunctionalCalculus Complex IsStarNormal\na : A\n⊢ Iff (IsSelfAdjoint a) (And (IsStarNormal a) (QuasispectrumRestricts a ⇑Complex.reCLM))","decl":"/-- An element in a non-unital C⋆-algebra is selfadjoint if and only if it is normal and its\nquasispectrum is contained in `ℝ`. -/\nlemma isSelfAdjoint_iff_isStarNormal_and_quasispectrumRestricts {a : A} :\n    IsSelfAdjoint a ↔ IsStarNormal a ∧ QuasispectrumRestricts a Complex.reCLM := by\n  refine ⟨fun ha ↦ ⟨ha.isStarNormal, ⟨fun x hx ↦ ?_, Complex.ofReal_re⟩⟩, ?_⟩\n  · have := eqOn_of_cfcₙ_eq_cfcₙ <|\n      (cfcₙ_star (id : ℂ → ℂ) a).symm ▸ (cfcₙ_id ℂ a).symm ▸ ha.star_eq\n    exact Complex.conj_eq_iff_re.mp (by simpa using this hx)\n  · rintro ⟨ha₁, ha₂⟩\n    rw [isSelfAdjoint_iff]\n    nth_rw 2 [← cfcₙ_id ℂ a]\n    rw [← cfcₙ_star_id a (R := ℂ)]\n    refine cfcₙ_congr fun x hx ↦ ?_\n    obtain ⟨x, -, rfl⟩ := ha₂.algebraMap_image.symm ▸ hx\n    exact Complex.conj_ofReal _\n\n"}
{"name":"IsSelfAdjoint.quasispectrumRestricts","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"A : Type u_1\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : Module Complex A\ninst✝² : IsScalarTower Complex A A\ninst✝¹ : SMulCommClass Complex A A\ninst✝ : NonUnitalContinuousFunctionalCalculus Complex IsStarNormal\na : A\na✝ : IsSelfAdjoint a\n⊢ And (IsStarNormal a) (QuasispectrumRestricts a ⇑Complex.reCLM)","decl":"alias ⟨IsSelfAdjoint.quasispectrumRestricts, _⟩ :=\n  isSelfAdjoint_iff_isStarNormal_and_quasispectrumRestricts\n\n"}
{"name":"QuasispectrumRestricts.isSelfAdjoint","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"A : Type u_1\ninst✝⁷ : TopologicalSpace A\ninst✝⁶ : NonUnitalRing A\ninst✝⁵ : StarRing A\ninst✝⁴ : Module Complex A\ninst✝³ : IsScalarTower Complex A A\ninst✝² : SMulCommClass Complex A A\ninst✝¹ : NonUnitalContinuousFunctionalCalculus Complex IsStarNormal\na : A\nha : QuasispectrumRestricts a ⇑Complex.reCLM\ninst✝ : IsStarNormal a\n⊢ IsSelfAdjoint a","decl":"/-- A normal element whose `ℂ`-quasispectrum is contained in `ℝ` is selfadjoint. -/\nlemma QuasispectrumRestricts.isSelfAdjoint (a : A) (ha : QuasispectrumRestricts a Complex.reCLM)\n    [IsStarNormal a] : IsSelfAdjoint a :=\n  isSelfAdjoint_iff_isStarNormal_and_quasispectrumRestricts.mpr ⟨‹_›, ha⟩\n\n"}
{"name":"IsSelfAdjoint.instNonUnitalContinuousFunctionalCalculus","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"A : Type u_1\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : NonUnitalRing A\ninst✝⁴ : StarRing A\ninst✝³ : Module Complex A\ninst✝² : IsScalarTower Complex A A\ninst✝¹ : SMulCommClass Complex A A\ninst✝ : NonUnitalContinuousFunctionalCalculus Complex IsStarNormal\n⊢ NonUnitalContinuousFunctionalCalculus Real IsSelfAdjoint","decl":"instance IsSelfAdjoint.instNonUnitalContinuousFunctionalCalculus :\n    NonUnitalContinuousFunctionalCalculus ℝ (IsSelfAdjoint : A → Prop) :=\n  QuasispectrumRestricts.cfc (q := IsStarNormal) (p := IsSelfAdjoint) Complex.reCLM\n    Complex.isometry_ofReal.isUniformEmbedding (.zero _)\n    (fun _ ↦ isSelfAdjoint_iff_isStarNormal_and_quasispectrumRestricts)\n\n"}
{"name":"isSelfAdjoint_iff_isStarNormal_and_spectrumRestricts","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"A : Type u_1\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : Algebra Complex A\ninst✝ : ContinuousFunctionalCalculus Complex IsStarNormal\na : A\n⊢ Iff (IsSelfAdjoint a) (And (IsStarNormal a) (SpectrumRestricts a ⇑Complex.reCLM))","decl":"/-- An element in a C⋆-algebra is selfadjoint if and only if it is normal and its spectrum is\ncontained in `ℝ`. -/\nlemma isSelfAdjoint_iff_isStarNormal_and_spectrumRestricts {a : A} :\n    IsSelfAdjoint a ↔ IsStarNormal a ∧ SpectrumRestricts a Complex.reCLM := by\n  refine ⟨fun ha ↦ ⟨ha.isStarNormal, .of_rightInvOn Complex.ofReal_re fun x hx ↦ ?_⟩, ?_⟩\n  · have := eqOn_of_cfc_eq_cfc <| (cfc_star (id : ℂ → ℂ) a).symm ▸ (cfc_id ℂ a).symm ▸ ha.star_eq\n    exact Complex.conj_eq_iff_re.mp (by simpa using this hx)\n  · rintro ⟨ha₁, ha₂⟩\n    rw [isSelfAdjoint_iff]\n    nth_rw 2 [← cfc_id ℂ a]\n    rw [← cfc_star_id a (R := ℂ)]\n    refine cfc_congr fun x hx ↦ ?_\n    obtain ⟨x, -, rfl⟩ := ha₂.algebraMap_image.symm ▸ hx\n    exact Complex.conj_ofReal _\n\n-- TODO: REMOVE (duplicate; see comment on `isSelfAdjoint_iff_isStarNormal_and_spectrumRestricts`)\n"}
{"name":"IsSelfAdjoint.spectrumRestricts","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"A : Type u_1\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : Algebra Complex A\ninst✝ : ContinuousFunctionalCalculus Complex IsStarNormal\na : A\nha : IsSelfAdjoint a\n⊢ SpectrumRestricts a ⇑Complex.reCLM","decl":"lemma IsSelfAdjoint.spectrumRestricts {a : A} (ha : IsSelfAdjoint a) :\n    SpectrumRestricts a Complex.reCLM :=\n  isSelfAdjoint_iff_isStarNormal_and_spectrumRestricts.mp ha |>.right\n\n-- TODO: REMOVE (duplicate; see comment on `isSelfAdjoint_iff_isStarNormal_and_spectrumRestricts`)\n"}
{"name":"SpectrumRestricts.isSelfAdjoint","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"A : Type u_1\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : Algebra Complex A\ninst✝¹ : ContinuousFunctionalCalculus Complex IsStarNormal\na : A\nha : SpectrumRestricts a ⇑Complex.reCLM\ninst✝ : IsStarNormal a\n⊢ IsSelfAdjoint a","decl":"/-- A normal element whose `ℂ`-spectrum is contained in `ℝ` is selfadjoint. -/\nlemma SpectrumRestricts.isSelfAdjoint (a : A) (ha : SpectrumRestricts a Complex.reCLM)\n    [IsStarNormal a] : IsSelfAdjoint a :=\n  isSelfAdjoint_iff_isStarNormal_and_spectrumRestricts.mpr ⟨‹_›, ha⟩\n\n"}
{"name":"IsSelfAdjoint.instContinuousFunctionalCalculus","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"A : Type u_1\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : Algebra Complex A\ninst✝ : ContinuousFunctionalCalculus Complex IsStarNormal\n⊢ ContinuousFunctionalCalculus Real IsSelfAdjoint","decl":"instance IsSelfAdjoint.instContinuousFunctionalCalculus :\n    ContinuousFunctionalCalculus ℝ (IsSelfAdjoint : A → Prop) :=\n  SpectrumRestricts.cfc (q := IsStarNormal) (p := IsSelfAdjoint) Complex.reCLM\n    Complex.isometry_ofReal.isUniformEmbedding (.zero _)\n    (fun _ ↦ isSelfAdjoint_iff_isStarNormal_and_spectrumRestricts)\n\n"}
{"name":"IsSelfAdjoint.spectrum_nonempty","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"A : Type u_2\ninst✝⁵ : Ring A\ninst✝⁴ : StarRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Algebra Real A\ninst✝¹ : ContinuousFunctionalCalculus Real IsSelfAdjoint\ninst✝ : Nontrivial A\na : A\nha : IsSelfAdjoint a\n⊢ (spectrum Real a).Nonempty","decl":"lemma IsSelfAdjoint.spectrum_nonempty {A : Type*} [Ring A] [StarRing A]\n    [TopologicalSpace A] [Algebra ℝ A] [ContinuousFunctionalCalculus ℝ (IsSelfAdjoint : A → Prop)]\n    [Nontrivial A] {a : A} (ha : IsSelfAdjoint a) : (σ ℝ a).Nonempty :=\n  CFC.spectrum_nonempty ℝ a ha\n\n"}
{"name":"CFC.exists_sqrt_of_isSelfAdjoint_of_quasispectrumRestricts","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"A : Type u_1\ninst✝⁶ : NonUnitalRing A\ninst✝⁵ : StarRing A\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Module Real A\ninst✝² : IsScalarTower Real A A\ninst✝¹ : SMulCommClass Real A A\ninst✝ : NonUnitalContinuousFunctionalCalculus Real IsSelfAdjoint\na : A\nha₁ : IsSelfAdjoint a\nha₂ : QuasispectrumRestricts a ⇑ContinuousMap.realToNNReal\n⊢ Exists fun x => And (IsSelfAdjoint x) (And (QuasispectrumRestricts x ⇑ContinuousMap.realToNNReal) (Eq (HMul.hMul x x) a))","decl":"lemma CFC.exists_sqrt_of_isSelfAdjoint_of_quasispectrumRestricts {A : Type*} [NonUnitalRing A]\n    [StarRing A] [TopologicalSpace A] [Module ℝ A] [IsScalarTower ℝ A A] [SMulCommClass ℝ A A ]\n    [NonUnitalContinuousFunctionalCalculus ℝ (IsSelfAdjoint : A → Prop)]\n    {a : A} (ha₁ : IsSelfAdjoint a) (ha₂ : QuasispectrumRestricts a ContinuousMap.realToNNReal) :\n    ∃ x : A, IsSelfAdjoint x ∧ QuasispectrumRestricts x ContinuousMap.realToNNReal ∧ x * x = a := by\n  use cfcₙ Real.sqrt a, cfcₙ_predicate Real.sqrt a\n  constructor\n  · simpa only [QuasispectrumRestricts.nnreal_iff, cfcₙ_map_quasispectrum Real.sqrt a,\n      Set.mem_image, forall_exists_index, and_imp, forall_apply_eq_imp_iff₂]\n        using fun x _ ↦ Real.sqrt_nonneg x\n  · rw [← cfcₙ_mul ..]\n    nth_rw 2 [← cfcₙ_id ℝ a]\n    apply cfcₙ_congr fun x hx ↦ ?_\n    rw [QuasispectrumRestricts.nnreal_iff] at ha₂\n    apply ha₂ x at hx\n    simp [← sq, Real.sq_sqrt hx]\n\n"}
{"name":"nonneg_iff_isSelfAdjoint_and_quasispectrumRestricts","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"A : Type u_1\ninst✝⁹ : NonUnitalRing A\ninst✝⁸ : PartialOrder A\ninst✝⁷ : StarRing A\ninst✝⁶ : StarOrderedRing A\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Module Real A\ninst✝³ : IsScalarTower Real A A\ninst✝² : SMulCommClass Real A A\ninst✝¹ : NonUnitalContinuousFunctionalCalculus Real IsSelfAdjoint\ninst✝ : NonnegSpectrumClass Real A\na : A\n⊢ Iff (LE.le 0 a) (And (IsSelfAdjoint a) (QuasispectrumRestricts a ⇑ContinuousMap.realToNNReal))","decl":"lemma nonneg_iff_isSelfAdjoint_and_quasispectrumRestricts {a : A} :\n    0 ≤ a ↔ IsSelfAdjoint a ∧ QuasispectrumRestricts a ContinuousMap.realToNNReal := by\n  refine ⟨fun ha ↦ ⟨.of_nonneg ha, .nnreal_of_nonneg ha⟩, ?_⟩\n  rintro ⟨ha₁, ha₂⟩\n  obtain ⟨x, hx, -, rfl⟩ := CFC.exists_sqrt_of_isSelfAdjoint_of_quasispectrumRestricts ha₁ ha₂\n  simpa [sq, hx.star_eq] using star_mul_self_nonneg x\n\n"}
{"name":"Nonneg.instNonUnitalContinuousFunctionalCalculus","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"A : Type u_1\ninst✝⁹ : NonUnitalRing A\ninst✝⁸ : PartialOrder A\ninst✝⁷ : StarRing A\ninst✝⁶ : StarOrderedRing A\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Module Real A\ninst✝³ : IsScalarTower Real A A\ninst✝² : SMulCommClass Real A A\ninst✝¹ : NonUnitalContinuousFunctionalCalculus Real IsSelfAdjoint\ninst✝ : NonnegSpectrumClass Real A\n⊢ NonUnitalContinuousFunctionalCalculus NNReal fun x => LE.le 0 x","decl":"open NNReal in\ninstance Nonneg.instNonUnitalContinuousFunctionalCalculus :\n    NonUnitalContinuousFunctionalCalculus ℝ≥0 (fun x : A ↦ 0 ≤ x) :=\n  QuasispectrumRestricts.cfc (q := IsSelfAdjoint) ContinuousMap.realToNNReal\n    isUniformEmbedding_subtype_val le_rfl\n    (fun _ ↦ nonneg_iff_isSelfAdjoint_and_quasispectrumRestricts)\n\n"}
{"name":"NNReal.spectrum_nonempty","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"A : Type u_2\ninst✝⁶ : Ring A\ninst✝⁵ : StarRing A\ninst✝⁴ : PartialOrder A\ninst✝³ : TopologicalSpace A\ninst✝² : Algebra NNReal A\ninst✝¹ : ContinuousFunctionalCalculus NNReal fun x => LE.le 0 x\ninst✝ : Nontrivial A\na : A\nha : LE.le 0 a\n⊢ (spectrum NNReal a).Nonempty","decl":"open NNReal in\nlemma NNReal.spectrum_nonempty {A : Type*} [Ring A] [StarRing A] [PartialOrder A]\n    [TopologicalSpace A] [Algebra ℝ≥0 A] [ContinuousFunctionalCalculus ℝ≥0 (fun x : A ↦ 0 ≤ x)]\n    [Nontrivial A] {a : A} (ha : 0 ≤ a) : (spectrum ℝ≥0 a).Nonempty :=\n  CFC.spectrum_nonempty ℝ≥0 a ha\n\n"}
{"name":"CFC.exists_sqrt_of_isSelfAdjoint_of_spectrumRestricts","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"A : Type u_1\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : TopologicalSpace A\ninst✝¹ : Algebra Real A\ninst✝ : ContinuousFunctionalCalculus Real IsSelfAdjoint\na : A\nha₁ : IsSelfAdjoint a\nha₂ : SpectrumRestricts a ⇑ContinuousMap.realToNNReal\n⊢ Exists fun x => And (IsSelfAdjoint x) (And (SpectrumRestricts x ⇑ContinuousMap.realToNNReal) (Eq (HPow.hPow x 2) a))","decl":"lemma CFC.exists_sqrt_of_isSelfAdjoint_of_spectrumRestricts {A : Type*} [Ring A] [StarRing A]\n    [TopologicalSpace A] [Algebra ℝ A] [ContinuousFunctionalCalculus ℝ (IsSelfAdjoint : A → Prop)]\n    {a : A} (ha₁ : IsSelfAdjoint a) (ha₂ : SpectrumRestricts a ContinuousMap.realToNNReal) :\n    ∃ x : A, IsSelfAdjoint x ∧ SpectrumRestricts x ContinuousMap.realToNNReal ∧ x ^ 2 = a := by\n  use cfc Real.sqrt a, cfc_predicate Real.sqrt a\n  constructor\n  · simpa only [SpectrumRestricts.nnreal_iff, cfc_map_spectrum Real.sqrt a, Set.mem_image,\n      forall_exists_index, and_imp, forall_apply_eq_imp_iff₂] using fun x _ ↦ Real.sqrt_nonneg x\n  · rw [← cfc_pow ..]\n    nth_rw 2 [← cfc_id ℝ a]\n    apply cfc_congr fun x hx ↦ ?_\n    rw [SpectrumRestricts.nnreal_iff] at ha₂\n    apply ha₂ x at hx\n    simp [Real.sq_sqrt hx]\n\n"}
{"name":"nonneg_iff_isSelfAdjoint_and_spectrumRestricts","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"A : Type u_1\ninst✝⁷ : Ring A\ninst✝⁶ : PartialOrder A\ninst✝⁵ : StarRing A\ninst✝⁴ : StarOrderedRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Algebra Real A\ninst✝¹ : ContinuousFunctionalCalculus Real IsSelfAdjoint\ninst✝ : NonnegSpectrumClass Real A\na : A\n⊢ Iff (LE.le 0 a) (And (IsSelfAdjoint a) (SpectrumRestricts a ⇑ContinuousMap.realToNNReal))","decl":"lemma nonneg_iff_isSelfAdjoint_and_spectrumRestricts {a : A} :\n    0 ≤ a ↔ IsSelfAdjoint a ∧ SpectrumRestricts a ContinuousMap.realToNNReal := by\n  refine ⟨fun ha ↦ ⟨.of_nonneg ha, .nnreal_of_nonneg ha⟩, ?_⟩\n  rintro ⟨ha₁, ha₂⟩\n  obtain ⟨x, hx, -, rfl⟩ := CFC.exists_sqrt_of_isSelfAdjoint_of_spectrumRestricts ha₁ ha₂\n  simpa [sq, hx.star_eq] using star_mul_self_nonneg x\n\n"}
{"name":"Nonneg.instContinuousFunctionalCalculus","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"A : Type u_1\ninst✝⁷ : Ring A\ninst✝⁶ : PartialOrder A\ninst✝⁵ : StarRing A\ninst✝⁴ : StarOrderedRing A\ninst✝³ : TopologicalSpace A\ninst✝² : Algebra Real A\ninst✝¹ : ContinuousFunctionalCalculus Real IsSelfAdjoint\ninst✝ : NonnegSpectrumClass Real A\n⊢ ContinuousFunctionalCalculus NNReal fun x => LE.le 0 x","decl":"open NNReal in\ninstance Nonneg.instContinuousFunctionalCalculus :\n    ContinuousFunctionalCalculus ℝ≥0 (fun x : A ↦ 0 ≤ x) :=\n  SpectrumRestricts.cfc (q := IsSelfAdjoint) ContinuousMap.realToNNReal\n    isUniformEmbedding_subtype_val le_rfl (fun _ ↦ nonneg_iff_isSelfAdjoint_and_spectrumRestricts)\n\n"}
{"name":"cfcHom_real_eq_restrict","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"A : Type u_1\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : Algebra Complex A\ninst✝¹ : ContinuousFunctionalCalculus Complex IsStarNormal\ninst✝ : T2Space A\na : A\nha : IsSelfAdjoint a\n⊢ Eq (cfcHom ha) (SpectrumRestricts.starAlgHom (cfcHom ⋯) ⋯)","decl":"lemma cfcHom_real_eq_restrict {a : A} (ha : IsSelfAdjoint a) :\n    cfcHom ha =\n      ha.spectrumRestricts.starAlgHom (R := ℝ) (S := ℂ)\n        (cfcHom ha.isStarNormal) (f := Complex.reCLM) :=\n  ha.spectrumRestricts.cfcHom_eq_restrict _ Complex.isometry_ofReal.isUniformEmbedding\n    ha ha.isStarNormal\n\n"}
{"name":"cfc_real_eq_complex","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"A : Type u_1\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : Algebra Complex A\ninst✝¹ : ContinuousFunctionalCalculus Complex IsStarNormal\ninst✝ : T2Space A\na : A\nf : Real → Real\nha : autoParam (IsSelfAdjoint a) _auto✝\n⊢ Eq (cfc f a) (cfc (fun x => ↑(f x.re)) a)","decl":"lemma cfc_real_eq_complex {a : A} (f : ℝ → ℝ) (ha : IsSelfAdjoint a := by cfc_tac)  :\n    cfc f a = cfc (fun x ↦ f x.re : ℂ → ℂ) a := by\n  replace ha : IsSelfAdjoint a := ha -- hack to avoid issues caused by autoParam\n  exact ha.spectrumRestricts.cfc_eq_restrict (f := Complex.reCLM)\n    Complex.isometry_ofReal.isUniformEmbedding ha ha.isStarNormal f\n\n"}
{"name":"cfcₙHom_real_eq_restrict","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"A : Type u_1\ninst✝⁷ : TopologicalSpace A\ninst✝⁶ : NonUnitalRing A\ninst✝⁵ : StarRing A\ninst✝⁴ : Module Complex A\ninst✝³ : IsScalarTower Complex A A\ninst✝² : SMulCommClass Complex A A\ninst✝¹ : T2Space A\ninst✝ : NonUnitalContinuousFunctionalCalculus Complex IsStarNormal\na : A\nha : IsSelfAdjoint a\n⊢ Eq (cfcₙHom ha) (QuasispectrumRestricts.nonUnitalStarAlgHom (cfcₙHom ⋯) ⋯)","decl":"lemma cfcₙHom_real_eq_restrict {a : A} (ha : IsSelfAdjoint a) :\n    cfcₙHom ha = (ha.quasispectrumRestricts.2).nonUnitalStarAlgHom (cfcₙHom ha.isStarNormal)\n      (R := ℝ) (S := ℂ) (f := Complex.reCLM) :=\n  ha.quasispectrumRestricts.2.cfcₙHom_eq_restrict _ Complex.isometry_ofReal.isUniformEmbedding\n    ha ha.isStarNormal\n\n"}
{"name":"cfcₙ_real_eq_complex","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"A : Type u_1\ninst✝⁷ : TopologicalSpace A\ninst✝⁶ : NonUnitalRing A\ninst✝⁵ : StarRing A\ninst✝⁴ : Module Complex A\ninst✝³ : IsScalarTower Complex A A\ninst✝² : SMulCommClass Complex A A\ninst✝¹ : T2Space A\ninst✝ : NonUnitalContinuousFunctionalCalculus Complex IsStarNormal\na : A\nf : Real → Real\nha : autoParam (IsSelfAdjoint a) _auto✝\n⊢ Eq (cfcₙ f a) (cfcₙ (fun x => ↑(f x.re)) a)","decl":"lemma cfcₙ_real_eq_complex {a : A} (f : ℝ → ℝ) (ha : IsSelfAdjoint a := by cfc_tac)  :\n    cfcₙ f a = cfcₙ (fun x ↦ f x.re : ℂ → ℂ) a := by\n  replace ha : IsSelfAdjoint a := ha -- hack to avoid issues caused by autoParam\n  exact ha.quasispectrumRestricts.2.cfcₙ_eq_restrict (f := Complex.reCLM)\n    Complex.isometry_ofReal.isUniformEmbedding ha ha.isStarNormal f\n\n"}
{"name":"cfcHom_nnreal_eq_restrict","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"A : Type u_1\ninst✝⁹ : TopologicalSpace A\ninst✝⁸ : Ring A\ninst✝⁷ : PartialOrder A\ninst✝⁶ : StarRing A\ninst✝⁵ : StarOrderedRing A\ninst✝⁴ : Algebra Real A\ninst✝³ : TopologicalRing A\ninst✝² : T2Space A\ninst✝¹ : ContinuousFunctionalCalculus Real IsSelfAdjoint\ninst✝ : NonnegSpectrumClass Real A\na : A\nha : LE.le 0 a\n⊢ Eq (cfcHom ha) (SpectrumRestricts.starAlgHom (cfcHom ⋯) ⋯)","decl":"lemma cfcHom_nnreal_eq_restrict {a : A} (ha : 0 ≤ a) :\n    cfcHom ha = (SpectrumRestricts.nnreal_of_nonneg ha).starAlgHom\n      (cfcHom (IsSelfAdjoint.of_nonneg ha)) := by\n  apply (SpectrumRestricts.nnreal_of_nonneg ha).cfcHom_eq_restrict _ isUniformEmbedding_subtype_val\n\n"}
{"name":"cfc_nnreal_eq_real","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"A : Type u_1\ninst✝⁹ : TopologicalSpace A\ninst✝⁸ : Ring A\ninst✝⁷ : PartialOrder A\ninst✝⁶ : StarRing A\ninst✝⁵ : StarOrderedRing A\ninst✝⁴ : Algebra Real A\ninst✝³ : TopologicalRing A\ninst✝² : T2Space A\ninst✝¹ : ContinuousFunctionalCalculus Real IsSelfAdjoint\ninst✝ : NonnegSpectrumClass Real A\na : A\nf : NNReal → NNReal\nha : autoParam (LE.le 0 a) _auto✝\n⊢ Eq (cfc f a) (cfc (fun x => ↑(f x.toNNReal)) a)","decl":"lemma cfc_nnreal_eq_real {a : A} (f : ℝ≥0 → ℝ≥0) (ha : 0 ≤ a := by cfc_tac)  :\n    cfc f a = cfc (fun x ↦ f x.toNNReal : ℝ → ℝ) a := by\n  replace ha : 0 ≤ a := ha -- hack to avoid issues caused by autoParam\n  apply (SpectrumRestricts.nnreal_of_nonneg ha).cfc_eq_restrict _\n    isUniformEmbedding_subtype_val ha (.of_nonneg ha)\n\n"}
{"name":"cfcₙHom_nnreal_eq_restrict","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"A : Type u_1\ninst✝¹¹ : TopologicalSpace A\ninst✝¹⁰ : NonUnitalRing A\ninst✝⁹ : PartialOrder A\ninst✝⁸ : StarRing A\ninst✝⁷ : StarOrderedRing A\ninst✝⁶ : Module Real A\ninst✝⁵ : TopologicalRing A\ninst✝⁴ : IsScalarTower Real A A\ninst✝³ : SMulCommClass Real A A\ninst✝² : T2Space A\ninst✝¹ : NonUnitalContinuousFunctionalCalculus Real IsSelfAdjoint\ninst✝ : NonnegSpectrumClass Real A\na : A\nha : LE.le 0 a\n⊢ Eq (cfcₙHom ha) (QuasispectrumRestricts.nonUnitalStarAlgHom (cfcₙHom ⋯) ⋯)","decl":"lemma cfcₙHom_nnreal_eq_restrict {a : A} (ha : 0 ≤ a) :\n    cfcₙHom ha = (QuasispectrumRestricts.nnreal_of_nonneg ha).nonUnitalStarAlgHom\n      (cfcₙHom (IsSelfAdjoint.of_nonneg ha)) := by\n  apply (QuasispectrumRestricts.nnreal_of_nonneg ha).cfcₙHom_eq_restrict _\n    isUniformEmbedding_subtype_val\n\n"}
{"name":"cfcₙ_nnreal_eq_real","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Instances","initialProofState":"A : Type u_1\ninst✝¹¹ : TopologicalSpace A\ninst✝¹⁰ : NonUnitalRing A\ninst✝⁹ : PartialOrder A\ninst✝⁸ : StarRing A\ninst✝⁷ : StarOrderedRing A\ninst✝⁶ : Module Real A\ninst✝⁵ : TopologicalRing A\ninst✝⁴ : IsScalarTower Real A A\ninst✝³ : SMulCommClass Real A A\ninst✝² : T2Space A\ninst✝¹ : NonUnitalContinuousFunctionalCalculus Real IsSelfAdjoint\ninst✝ : NonnegSpectrumClass Real A\na : A\nf : NNReal → NNReal\nha : autoParam (LE.le 0 a) _auto✝\n⊢ Eq (cfcₙ f a) (cfcₙ (fun x => ↑(f x.toNNReal)) a)","decl":"lemma cfcₙ_nnreal_eq_real {a : A} (f : ℝ≥0 → ℝ≥0) (ha : 0 ≤ a := by cfc_tac)  :\n    cfcₙ f a = cfcₙ (fun x ↦ f x.toNNReal : ℝ → ℝ) a := by\n  replace ha : 0 ≤ a := ha -- hack to avoid issues caused by autoParam\n  apply (QuasispectrumRestricts.nnreal_of_nonneg ha).cfcₙ_eq_restrict _\n    isUniformEmbedding_subtype_val ha (.of_nonneg ha)\n\n"}
