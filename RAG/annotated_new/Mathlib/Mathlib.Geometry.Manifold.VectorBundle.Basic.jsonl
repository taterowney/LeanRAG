{"name":"FiberBundle.chartedSpace'_chartAt","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"B : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝⁴ : TopologicalSpace F\ninst✝³ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝² : (x : B) → TopologicalSpace (E x)\ninst✝¹ : TopologicalSpace B\ninst✝ : FiberBundle F E\nx : Bundle.TotalSpace F E\n⊢ Eq (chartAt (Prod B F) x) (FiberBundle.trivializationAt F E x.proj).toPartialHomeomorph","decl":"theorem FiberBundle.chartedSpace'_chartAt (x : TotalSpace F E) :\n    chartAt (B × F) x = (trivializationAt F E x.proj).toPartialHomeomorph :=\n  rfl\n\n/- Porting note: In Lean 3, the next instance was inside a section with locally reducible\n`ModelProd` and it used `ModelProd B F` as the intermediate space. Using `B × F` in the middle\ngives the same instance.\n-/\n--attribute [local reducible] ModelProd\n\n"}
{"name":"FiberBundle.chartedSpace_chartAt","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"B : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝⁶ : TopologicalSpace F\ninst✝⁵ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁴ : (x : B) → TopologicalSpace (E x)\nHB : Type u_7\ninst✝³ : TopologicalSpace HB\ninst✝² : TopologicalSpace B\ninst✝¹ : ChartedSpace HB B\ninst✝ : FiberBundle F E\nx : Bundle.TotalSpace F E\n⊢ Eq (chartAt (ModelProd HB F) x) ((FiberBundle.trivializationAt F E x.proj).trans ((chartAt HB x.proj).prod (PartialHomeomorph.refl F)))","decl":"theorem FiberBundle.chartedSpace_chartAt (x : TotalSpace F E) :\n    chartAt (ModelProd HB F) x =\n      (trivializationAt F E x.proj).toPartialHomeomorph ≫ₕ\n        (chartAt HB x.proj).prod (PartialHomeomorph.refl F) := by\n  dsimp only [chartAt_comp, prodChartedSpace_chartAt, FiberBundle.chartedSpace'_chartAt,\n    chartAt_self_eq]\n  rw [Trivialization.coe_coe, Trivialization.coe_fst' _ (mem_baseSet_trivializationAt F E x.proj)]\n\n"}
{"name":"FiberBundle.chartedSpace_chartAt_symm_fst","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"B : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝⁶ : TopologicalSpace F\ninst✝⁵ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁴ : (x : B) → TopologicalSpace (E x)\nHB : Type u_7\ninst✝³ : TopologicalSpace HB\ninst✝² : TopologicalSpace B\ninst✝¹ : ChartedSpace HB B\ninst✝ : FiberBundle F E\nx : Bundle.TotalSpace F E\ny : ModelProd HB F\nhy : Membership.mem (chartAt (ModelProd HB F) x).target y\n⊢ Eq (↑(chartAt (ModelProd HB F) x).symm y).proj (↑(chartAt HB x.proj).symm y.1)","decl":"theorem FiberBundle.chartedSpace_chartAt_symm_fst (x : TotalSpace F E) (y : ModelProd HB F)\n    (hy : y ∈ (chartAt (ModelProd HB F) x).target) :\n    ((chartAt (ModelProd HB F) x).symm y).proj = (chartAt HB x.proj).symm y.1 := by\n  simp only [FiberBundle.chartedSpace_chartAt, mfld_simps] at hy ⊢\n  exact (trivializationAt F E x.proj).proj_symm_apply hy.2\n\n"}
{"name":"FiberBundle.extChartAt","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁰ : NontriviallyNormedField 𝕜\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\ninst✝⁷ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁶ : (x : B) → TopologicalSpace (E x)\nEB : Type u_7\ninst✝⁵ : NormedAddCommGroup EB\ninst✝⁴ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝³ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝² : TopologicalSpace B\ninst✝¹ : ChartedSpace HB B\ninst✝ : FiberBundle F E\nx : Bundle.TotalSpace F E\n⊢ Eq (extChartAt (IB.prod (modelWithCornersSelf 𝕜 F)) x) ((FiberBundle.trivializationAt F E x.proj).trans ((extChartAt IB x.proj).prod (PartialEquiv.refl F)))","decl":"protected theorem FiberBundle.extChartAt (x : TotalSpace F E) :\n    extChartAt (IB.prod 𝓘(𝕜, F)) x =\n      (trivializationAt F E x.proj).toPartialEquiv ≫\n        (extChartAt IB x.proj).prod (PartialEquiv.refl F) := by\n  simp_rw [extChartAt, FiberBundle.chartedSpace_chartAt, extend]\n  simp only [PartialEquiv.trans_assoc, mfld_simps]\n  -- Porting note: should not be needed\n  rw [PartialEquiv.prod_trans, PartialEquiv.refl_trans]\n\n"}
{"name":"FiberBundle.extChartAt_target","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁰ : NontriviallyNormedField 𝕜\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\ninst✝⁷ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁶ : (x : B) → TopologicalSpace (E x)\nEB : Type u_7\ninst✝⁵ : NormedAddCommGroup EB\ninst✝⁴ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝³ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝² : TopologicalSpace B\ninst✝¹ : ChartedSpace HB B\ninst✝ : FiberBundle F E\nx : Bundle.TotalSpace F E\n⊢ Eq (extChartAt (IB.prod (modelWithCornersSelf 𝕜 F)) x).target (SProd.sprod (Inter.inter (extChartAt IB x.proj).target (Set.preimage (↑(extChartAt IB x.proj).symm) (FiberBundle.trivializationAt F E x.proj).baseSet)) Set.univ)","decl":"protected theorem FiberBundle.extChartAt_target (x : TotalSpace F E) :\n    (extChartAt (IB.prod 𝓘(𝕜, F)) x).target =\n      ((extChartAt IB x.proj).target ∩\n        (extChartAt IB x.proj).symm ⁻¹' (trivializationAt F E x.proj).baseSet) ×ˢ univ := by\n  rw [FiberBundle.extChartAt, PartialEquiv.trans_target, Trivialization.target_eq, inter_prod]\n  rfl\n\n"}
{"name":"FiberBundle.writtenInExtChartAt_trivializationAt","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁰ : NontriviallyNormedField 𝕜\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\ninst✝⁷ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁶ : (x : B) → TopologicalSpace (E x)\nEB : Type u_7\ninst✝⁵ : NormedAddCommGroup EB\ninst✝⁴ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝³ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝² : TopologicalSpace B\ninst✝¹ : ChartedSpace HB B\ninst✝ : FiberBundle F E\nx : Bundle.TotalSpace F E\ny : Prod EB F\nhy : Membership.mem (extChartAt (IB.prod (modelWithCornersSelf 𝕜 F)) x).target y\n⊢ Eq (writtenInExtChartAt (IB.prod (modelWithCornersSelf 𝕜 F)) (IB.prod (modelWithCornersSelf 𝕜 F)) x (↑(FiberBundle.trivializationAt F E x.proj)) y) y","decl":"theorem FiberBundle.writtenInExtChartAt_trivializationAt {x : TotalSpace F E} {y}\n    (hy : y ∈ (extChartAt (IB.prod 𝓘(𝕜, F)) x).target) :\n    writtenInExtChartAt (IB.prod 𝓘(𝕜, F)) (IB.prod 𝓘(𝕜, F)) x\n      (trivializationAt F E x.proj) y = y :=\n  writtenInExtChartAt_chartAt_comp _ hy\n\n"}
{"name":"FiberBundle.writtenInExtChartAt_trivializationAt_symm","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁰ : NontriviallyNormedField 𝕜\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\ninst✝⁷ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁶ : (x : B) → TopologicalSpace (E x)\nEB : Type u_7\ninst✝⁵ : NormedAddCommGroup EB\ninst✝⁴ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝³ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝² : TopologicalSpace B\ninst✝¹ : ChartedSpace HB B\ninst✝ : FiberBundle F E\nx : Bundle.TotalSpace F E\ny : Prod EB F\nhy : Membership.mem (extChartAt (IB.prod (modelWithCornersSelf 𝕜 F)) x).target y\n⊢ Eq (writtenInExtChartAt (IB.prod (modelWithCornersSelf 𝕜 F)) (IB.prod (modelWithCornersSelf 𝕜 F)) (↑(FiberBundle.trivializationAt F E x.proj) x) (↑(FiberBundle.trivializationAt F E x.proj).symm) y) y","decl":"theorem FiberBundle.writtenInExtChartAt_trivializationAt_symm {x : TotalSpace F E} {y}\n    (hy : y ∈ (extChartAt (IB.prod 𝓘(𝕜, F)) x).target) :\n    writtenInExtChartAt (IB.prod 𝓘(𝕜, F)) (IB.prod 𝓘(𝕜, F)) (trivializationAt F E x.proj x)\n      (trivializationAt F E x.proj).toPartialHomeomorph.symm y = y :=\n  writtenInExtChartAt_chartAt_symm_comp _ hy\n\n"}
{"name":"Bundle.contMDiffWithinAt_totalSpace","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝¹⁵ : NontriviallyNormedField 𝕜\ninst✝¹⁴ : NormedAddCommGroup F\ninst✝¹³ : NormedSpace 𝕜 F\ninst✝¹² : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝¹¹ : (x : B) → TopologicalSpace (E x)\nEB : Type u_7\ninst✝¹⁰ : NormedAddCommGroup EB\ninst✝⁹ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝⁸ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\nEM : Type u_10\ninst✝⁷ : NormedAddCommGroup EM\ninst✝⁶ : NormedSpace 𝕜 EM\nHM : Type u_11\ninst✝⁵ : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝⁴ : TopologicalSpace M\ninst✝³ : ChartedSpace HM M\ninst✝² : TopologicalSpace B\ninst✝¹ : ChartedSpace HB B\ninst✝ : FiberBundle F E\nf : M → Bundle.TotalSpace F E\ns : Set M\nx₀ : M\n⊢ Iff (ContMDiffWithinAt IM (IB.prod (modelWithCornersSelf 𝕜 F)) n f s x₀) (And (ContMDiffWithinAt IM IB n (fun x => (f x).proj) s x₀) (ContMDiffWithinAt IM (modelWithCornersSelf 𝕜 F) n (fun x => (↑(FiberBundle.trivializationAt F E (f x₀).proj) (f x)).2) s x₀))","decl":"/-- Characterization of `C^n` functions into a vector bundle. -/\ntheorem contMDiffWithinAt_totalSpace (f : M → TotalSpace F E) {s : Set M} {x₀ : M} :\n    ContMDiffWithinAt IM (IB.prod 𝓘(𝕜, F)) n f s x₀ ↔\n      ContMDiffWithinAt IM IB n (fun x => (f x).proj) s x₀ ∧\n      ContMDiffWithinAt IM 𝓘(𝕜, F) n (fun x ↦ (trivializationAt F E (f x₀).proj (f x)).2) s x₀ := by\n  simp (config := { singlePass := true }) only [contMDiffWithinAt_iff_target]\n  rw [and_and_and_comm, ← FiberBundle.continuousWithinAt_totalSpace, and_congr_right_iff]\n  intro hf\n  simp_rw [modelWithCornersSelf_prod, FiberBundle.extChartAt, Function.comp_def,\n    PartialEquiv.trans_apply, PartialEquiv.prod_coe, PartialEquiv.refl_coe,\n    extChartAt_self_apply, modelWithCornersSelf_coe, Function.id_def, ← chartedSpaceSelf_prod]\n  refine (contMDiffWithinAt_prod_iff _).trans (and_congr ?_ Iff.rfl)\n  have h1 : (fun x => (f x).proj) ⁻¹' (trivializationAt F E (f x₀).proj).baseSet ∈ 𝓝[s] x₀ :=\n    ((FiberBundle.continuous_proj F E).continuousWithinAt.comp hf (mapsTo_image f s))\n      ((Trivialization.open_baseSet _).mem_nhds (mem_baseSet_trivializationAt F E _))\n  refine EventuallyEq.contMDiffWithinAt_iff (eventually_of_mem h1 fun x hx => ?_) ?_\n  · simp_rw [Function.comp, PartialHomeomorph.coe_coe, Trivialization.coe_coe]\n    rw [Trivialization.coe_fst']\n    exact hx\n  · simp only [mfld_simps]\n\n"}
{"name":"Bundle.contMDiffAt_totalSpace","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝¹⁵ : NontriviallyNormedField 𝕜\ninst✝¹⁴ : NormedAddCommGroup F\ninst✝¹³ : NormedSpace 𝕜 F\ninst✝¹² : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝¹¹ : (x : B) → TopologicalSpace (E x)\nEB : Type u_7\ninst✝¹⁰ : NormedAddCommGroup EB\ninst✝⁹ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝⁸ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\nEM : Type u_10\ninst✝⁷ : NormedAddCommGroup EM\ninst✝⁶ : NormedSpace 𝕜 EM\nHM : Type u_11\ninst✝⁵ : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝⁴ : TopologicalSpace M\ninst✝³ : ChartedSpace HM M\ninst✝² : TopologicalSpace B\ninst✝¹ : ChartedSpace HB B\ninst✝ : FiberBundle F E\nf : M → Bundle.TotalSpace F E\nx₀ : M\n⊢ Iff (ContMDiffAt IM (IB.prod (modelWithCornersSelf 𝕜 F)) n f x₀) (And (ContMDiffAt IM IB n (fun x => (f x).proj) x₀) (ContMDiffAt IM (modelWithCornersSelf 𝕜 F) n (fun x => (↑(FiberBundle.trivializationAt F E (f x₀).proj) (f x)).2) x₀))","decl":"/-- Characterization of `C^n` functions into a vector bundle. -/\ntheorem contMDiffAt_totalSpace (f : M → TotalSpace F E) (x₀ : M) :\n    ContMDiffAt IM (IB.prod 𝓘(𝕜, F)) n f x₀ ↔\n      ContMDiffAt IM IB n (fun x => (f x).proj) x₀ ∧\n        ContMDiffAt IM 𝓘(𝕜, F) n (fun x => (trivializationAt F E (f x₀).proj (f x)).2) x₀ := by\n  simp_rw [← contMDiffWithinAt_univ]; exact contMDiffWithinAt_totalSpace f\n\n"}
{"name":"Bundle.contMDiffWithinAt_section","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁰ : NontriviallyNormedField 𝕜\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\ninst✝⁷ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁶ : (x : B) → TopologicalSpace (E x)\nEB : Type u_7\ninst✝⁵ : NormedAddCommGroup EB\ninst✝⁴ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝³ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝² : TopologicalSpace B\ninst✝¹ : ChartedSpace HB B\ninst✝ : FiberBundle F E\ns : (x : B) → E x\na : Set B\nx₀ : B\n⊢ Iff (ContMDiffWithinAt IB (IB.prod (modelWithCornersSelf 𝕜 F)) n (fun x => Bundle.TotalSpace.mk' F x (s x)) a x₀) (ContMDiffWithinAt IB (modelWithCornersSelf 𝕜 F) n (fun x => (↑(FiberBundle.trivializationAt F E x₀) { proj := x, snd := s x }).2) a x₀)","decl":"/-- Characterization of `C^n` sections within a set at a point of a vector bundle. -/\ntheorem contMDiffWithinAt_section (s : ∀ x, E x) (a : Set B) (x₀ : B) :\n    ContMDiffWithinAt IB (IB.prod 𝓘(𝕜, F)) n (fun x => TotalSpace.mk' F x (s x)) a x₀ ↔\n      ContMDiffWithinAt IB 𝓘(𝕜, F) n (fun x ↦ (trivializationAt F E x₀ ⟨x, s x⟩).2) a x₀ := by\n  simp_rw [contMDiffWithinAt_totalSpace, and_iff_right_iff_imp]; intro; exact contMDiffWithinAt_id\n\n"}
{"name":"Bundle.contMDiffAt_section","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁰ : NontriviallyNormedField 𝕜\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\ninst✝⁷ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁶ : (x : B) → TopologicalSpace (E x)\nEB : Type u_7\ninst✝⁵ : NormedAddCommGroup EB\ninst✝⁴ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝³ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝² : TopologicalSpace B\ninst✝¹ : ChartedSpace HB B\ninst✝ : FiberBundle F E\ns : (x : B) → E x\nx₀ : B\n⊢ Iff (ContMDiffAt IB (IB.prod (modelWithCornersSelf 𝕜 F)) n (fun x => Bundle.TotalSpace.mk' F x (s x)) x₀) (ContMDiffAt IB (modelWithCornersSelf 𝕜 F) n (fun x => (↑(FiberBundle.trivializationAt F E x₀) { proj := x, snd := s x }).2) x₀)","decl":"/-- Characterization of `C^n` sections of a vector bundle. -/\ntheorem contMDiffAt_section (s : ∀ x, E x) (x₀ : B) :\n    ContMDiffAt IB (IB.prod 𝓘(𝕜, F)) n (fun x => TotalSpace.mk' F x (s x)) x₀ ↔\n      ContMDiffAt IB 𝓘(𝕜, F) n (fun x ↦ (trivializationAt F E x₀ ⟨x, s x⟩).2) x₀ := by\n  simp_rw [contMDiffAt_totalSpace, and_iff_right_iff_imp]; intro; exact contMDiffAt_id\n\n"}
{"name":"Bundle.contMDiff_proj","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁰ : NontriviallyNormedField 𝕜\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\ninst✝⁷ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁶ : (x : B) → TopologicalSpace (E x)\nEB : Type u_7\ninst✝⁵ : NormedAddCommGroup EB\ninst✝⁴ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝³ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝² : TopologicalSpace B\ninst✝¹ : ChartedSpace HB B\ninst✝ : FiberBundle F E\n⊢ ContMDiff (IB.prod (modelWithCornersSelf 𝕜 F)) IB n Bundle.TotalSpace.proj","decl":"theorem contMDiff_proj : ContMDiff (IB.prod 𝓘(𝕜, F)) IB n (π F E) := fun x ↦ by\n  have : ContMDiffAt (IB.prod 𝓘(𝕜, F)) (IB.prod 𝓘(𝕜, F)) n id x := contMDiffAt_id\n  rw [contMDiffAt_totalSpace] at this\n  exact this.1\n\n"}
{"name":"Bundle.smooth_proj","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁰ : NontriviallyNormedField 𝕜\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\ninst✝⁷ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁶ : (x : B) → TopologicalSpace (E x)\nEB : Type u_7\ninst✝⁵ : NormedAddCommGroup EB\ninst✝⁴ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝³ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝² : TopologicalSpace B\ninst✝¹ : ChartedSpace HB B\ninst✝ : FiberBundle F E\n⊢ ContMDiff (IB.prod (modelWithCornersSelf 𝕜 F)) IB n Bundle.TotalSpace.proj","decl":"@[deprecated (since := \"2024-11-21\")] alias smooth_proj := contMDiff_proj\n\n"}
{"name":"Bundle.contMDiffOn_proj","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁰ : NontriviallyNormedField 𝕜\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\ninst✝⁷ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁶ : (x : B) → TopologicalSpace (E x)\nEB : Type u_7\ninst✝⁵ : NormedAddCommGroup EB\ninst✝⁴ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝³ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝² : TopologicalSpace B\ninst✝¹ : ChartedSpace HB B\ninst✝ : FiberBundle F E\ns : Set (Bundle.TotalSpace F E)\n⊢ ContMDiffOn (IB.prod (modelWithCornersSelf 𝕜 F)) IB n Bundle.TotalSpace.proj s","decl":"theorem contMDiffOn_proj {s : Set (TotalSpace F E)} :\n    ContMDiffOn (IB.prod 𝓘(𝕜, F)) IB n (π F E) s :=\n  (Bundle.contMDiff_proj E).contMDiffOn\n\n"}
{"name":"Bundle.smoothOn_proj","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁰ : NontriviallyNormedField 𝕜\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\ninst✝⁷ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁶ : (x : B) → TopologicalSpace (E x)\nEB : Type u_7\ninst✝⁵ : NormedAddCommGroup EB\ninst✝⁴ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝³ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝² : TopologicalSpace B\ninst✝¹ : ChartedSpace HB B\ninst✝ : FiberBundle F E\ns : Set (Bundle.TotalSpace F E)\n⊢ ContMDiffOn (IB.prod (modelWithCornersSelf 𝕜 F)) IB n Bundle.TotalSpace.proj s","decl":"@[deprecated (since := \"2024-11-21\")] alias smoothOn_proj := contMDiffOn_proj\n\n"}
{"name":"Bundle.contMDiffAt_proj","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁰ : NontriviallyNormedField 𝕜\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\ninst✝⁷ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁶ : (x : B) → TopologicalSpace (E x)\nEB : Type u_7\ninst✝⁵ : NormedAddCommGroup EB\ninst✝⁴ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝³ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝² : TopologicalSpace B\ninst✝¹ : ChartedSpace HB B\ninst✝ : FiberBundle F E\np : Bundle.TotalSpace F E\n⊢ ContMDiffAt (IB.prod (modelWithCornersSelf 𝕜 F)) IB n Bundle.TotalSpace.proj p","decl":"theorem contMDiffAt_proj {p : TotalSpace F E} : ContMDiffAt (IB.prod 𝓘(𝕜, F)) IB n (π F E) p :=\n  (Bundle.contMDiff_proj E).contMDiffAt\n\n"}
{"name":"Bundle.smoothAt_proj","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁰ : NontriviallyNormedField 𝕜\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\ninst✝⁷ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁶ : (x : B) → TopologicalSpace (E x)\nEB : Type u_7\ninst✝⁵ : NormedAddCommGroup EB\ninst✝⁴ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝³ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝² : TopologicalSpace B\ninst✝¹ : ChartedSpace HB B\ninst✝ : FiberBundle F E\np : Bundle.TotalSpace F E\n⊢ ContMDiffAt (IB.prod (modelWithCornersSelf 𝕜 F)) IB n Bundle.TotalSpace.proj p","decl":"@[deprecated (since := \"2024-11-21\")] alias smoothAt_proj := contMDiffAt_proj\n\n"}
{"name":"Bundle.contMDiffWithinAt_proj","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁰ : NontriviallyNormedField 𝕜\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\ninst✝⁷ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁶ : (x : B) → TopologicalSpace (E x)\nEB : Type u_7\ninst✝⁵ : NormedAddCommGroup EB\ninst✝⁴ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝³ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝² : TopologicalSpace B\ninst✝¹ : ChartedSpace HB B\ninst✝ : FiberBundle F E\ns : Set (Bundle.TotalSpace F E)\np : Bundle.TotalSpace F E\n⊢ ContMDiffWithinAt (IB.prod (modelWithCornersSelf 𝕜 F)) IB n Bundle.TotalSpace.proj s p","decl":"theorem contMDiffWithinAt_proj {s : Set (TotalSpace F E)} {p : TotalSpace F E} :\n    ContMDiffWithinAt (IB.prod 𝓘(𝕜, F)) IB n (π F E) s p :=\n  (Bundle.contMDiffAt_proj E).contMDiffWithinAt\n\n"}
{"name":"Bundle.smoothWithinAt_proj","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁰ : NontriviallyNormedField 𝕜\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\ninst✝⁷ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁶ : (x : B) → TopologicalSpace (E x)\nEB : Type u_7\ninst✝⁵ : NormedAddCommGroup EB\ninst✝⁴ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝³ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝² : TopologicalSpace B\ninst✝¹ : ChartedSpace HB B\ninst✝ : FiberBundle F E\ns : Set (Bundle.TotalSpace F E)\np : Bundle.TotalSpace F E\n⊢ ContMDiffWithinAt (IB.prod (modelWithCornersSelf 𝕜 F)) IB n Bundle.TotalSpace.proj s p","decl":"@[deprecated (since := \"2024-11-21\")] alias smoothWithinAt_proj := contMDiffWithinAt_proj\n\n"}
{"name":"Bundle.contMDiff_zeroSection","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹³ : NontriviallyNormedField 𝕜\ninst✝¹² : NormedAddCommGroup F\ninst✝¹¹ : NormedSpace 𝕜 F\ninst✝¹⁰ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁹ : (x : B) → TopologicalSpace (E x)\nEB : Type u_7\ninst✝⁸ : NormedAddCommGroup EB\ninst✝⁷ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝⁶ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝⁵ : TopologicalSpace B\ninst✝⁴ : ChartedSpace HB B\ninst✝³ : FiberBundle F E\ninst✝² : (x : B) → AddCommMonoid (E x)\ninst✝¹ : (x : B) → Module 𝕜 (E x)\ninst✝ : VectorBundle 𝕜 F E\n⊢ ContMDiff IB (IB.prod (modelWithCornersSelf 𝕜 F)) n (Bundle.zeroSection F E)","decl":"theorem contMDiff_zeroSection : ContMDiff IB (IB.prod 𝓘(𝕜, F)) n (zeroSection F E) := fun x ↦ by\n  unfold zeroSection\n  rw [Bundle.contMDiffAt_section]\n  apply (contMDiffAt_const (c := 0)).congr_of_eventuallyEq\n  filter_upwards [(trivializationAt F E x).open_baseSet.mem_nhds\n    (mem_baseSet_trivializationAt F E x)] with y hy\n    using congr_arg Prod.snd <| (trivializationAt F E x).zeroSection 𝕜 hy\n\n"}
{"name":"Bundle.smooth_zeroSection","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹³ : NontriviallyNormedField 𝕜\ninst✝¹² : NormedAddCommGroup F\ninst✝¹¹ : NormedSpace 𝕜 F\ninst✝¹⁰ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁹ : (x : B) → TopologicalSpace (E x)\nEB : Type u_7\ninst✝⁸ : NormedAddCommGroup EB\ninst✝⁷ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝⁶ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝⁵ : TopologicalSpace B\ninst✝⁴ : ChartedSpace HB B\ninst✝³ : FiberBundle F E\ninst✝² : (x : B) → AddCommMonoid (E x)\ninst✝¹ : (x : B) → Module 𝕜 (E x)\ninst✝ : VectorBundle 𝕜 F E\n⊢ ContMDiff IB (IB.prod (modelWithCornersSelf 𝕜 F)) n (Bundle.zeroSection F E)","decl":"@[deprecated (since := \"2024-11-21\")] alias smooth_zeroSection := contMDiff_zeroSection\n\n"}
{"name":"ContMDiffVectorBundle.contMDiffOn_coordChangeL","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝¹⁴ : NormedAddCommGroup EB\ninst✝¹³ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹² : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹¹ : TopologicalSpace B\ninst✝¹⁰ : ChartedSpace HB B\ninst✝⁹ : (x : B) → AddCommMonoid (E x)\ninst✝⁸ : (x : B) → Module 𝕜 (E x)\ninst✝⁷ : NormedAddCommGroup F\ninst✝⁶ : NormedSpace 𝕜 F\ninst✝⁵ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁴ : (x : B) → TopologicalSpace (E x)\ninst✝³ : FiberBundle F E\ninst✝² : VectorBundle 𝕜 F E\nself : ContMDiffVectorBundle n F E IB\ne e' : Trivialization F Bundle.TotalSpace.proj\ninst✝¹ : MemTrivializationAtlas e\ninst✝ : MemTrivializationAtlas e'\n⊢ ContMDiffOn IB (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F F)) n (fun b => ↑(Trivialization.coordChangeL 𝕜 e e' b)) (Inter.inter e.baseSet e'.baseSet)","decl":"variable (n IB) in\n/-- When `B` is a manifold with respect to a model `IB` and `E` is a\ntopological vector bundle over `B` with fibers isomorphic to `F`,\nthen `ContMDiffVectorBundle n F E IB` registers that the bundle is `C^n`, in the sense of having\n`C^n` transition functions. This is a mixin, not carrying any new data. -/\nclass ContMDiffVectorBundle : Prop where\n  protected contMDiffOn_coordChangeL :\n    ∀ (e e' : Trivialization F (π F E)) [MemTrivializationAtlas e] [MemTrivializationAtlas e'],\n      ContMDiffOn IB 𝓘(𝕜, F →L[𝕜] F) n (fun b : B => (e.coordChangeL 𝕜 e' b : F →L[𝕜] F))\n        (e.baseSet ∩ e'.baseSet)\n\n"}
{"name":"ContMDiffVectorBundle.of_le","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹³ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝¹² : NormedAddCommGroup EB\ninst✝¹¹ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁰ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝⁹ : TopologicalSpace B\ninst✝⁸ : ChartedSpace HB B\ninst✝⁷ : (x : B) → AddCommMonoid (E x)\ninst✝⁶ : (x : B) → Module 𝕜 (E x)\ninst✝⁵ : NormedAddCommGroup F\ninst✝⁴ : NormedSpace 𝕜 F\ninst✝³ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝² : (x : B) → TopologicalSpace (E x)\ninst✝¹ : FiberBundle F E\ninst✝ : VectorBundle 𝕜 F E\nm n : WithTop ENat\nhmn : LE.le m n\nh : ContMDiffVectorBundle n F E IB\n⊢ ContMDiffVectorBundle m F E IB","decl":"variable {F E} in\nprotected theorem ContMDiffVectorBundle.of_le {m n : WithTop ℕ∞} (hmn : m ≤ n)\n    [h : ContMDiffVectorBundle n F E IB] : ContMDiffVectorBundle m F E IB :=\n  ⟨fun e e' _ _ ↦ (h.contMDiffOn_coordChangeL e e').of_le hmn⟩\n\n"}
{"name":"instContMDiffVectorBundleOfSomeENatTopOfLEInfty","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁴ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝¹³ : NormedAddCommGroup EB\ninst✝¹² : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹¹ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁰ : TopologicalSpace B\ninst✝⁹ : ChartedSpace HB B\ninst✝⁸ : (x : B) → AddCommMonoid (E x)\ninst✝⁷ : (x : B) → Module 𝕜 (E x)\ninst✝⁶ : NormedAddCommGroup F\ninst✝⁵ : NormedSpace 𝕜 F\ninst✝⁴ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝³ : (x : B) → TopologicalSpace (E x)\ninst✝² : FiberBundle F E\ninst✝¹ : VectorBundle 𝕜 F E\na : WithTop ENat\ninst✝ : ContMDiffVectorBundle (↑Top.top) F E IB\nh : ENat.LEInfty a\n⊢ ContMDiffVectorBundle a F E IB","decl":"instance {a : WithTop ℕ∞} [ContMDiffVectorBundle ∞ F E IB] [h : ENat.LEInfty a] :\n    ContMDiffVectorBundle a F E IB :=\n  ContMDiffVectorBundle.of_le h.out\n\n"}
{"name":"instContMDiffVectorBundleOfTopWithTopENat","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁴ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝¹³ : NormedAddCommGroup EB\ninst✝¹² : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹¹ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁰ : TopologicalSpace B\ninst✝⁹ : ChartedSpace HB B\ninst✝⁸ : (x : B) → AddCommMonoid (E x)\ninst✝⁷ : (x : B) → Module 𝕜 (E x)\ninst✝⁶ : NormedAddCommGroup F\ninst✝⁵ : NormedSpace 𝕜 F\ninst✝⁴ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝³ : (x : B) → TopologicalSpace (E x)\ninst✝² : FiberBundle F E\ninst✝¹ : VectorBundle 𝕜 F E\na : WithTop ENat\ninst✝ : ContMDiffVectorBundle Top.top F E IB\n⊢ ContMDiffVectorBundle a F E IB","decl":"instance {a : WithTop ℕ∞} [ContMDiffVectorBundle ω F E IB] : ContMDiffVectorBundle a F E IB :=\n  ContMDiffVectorBundle.of_le le_top\n\n"}
{"name":"instContMDiffVectorBundleOfNatWithTopENat","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁴ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝¹³ : NormedAddCommGroup EB\ninst✝¹² : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹¹ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁰ : TopologicalSpace B\ninst✝⁹ : ChartedSpace HB B\ninst✝⁸ : (x : B) → AddCommMonoid (E x)\ninst✝⁷ : (x : B) → Module 𝕜 (E x)\ninst✝⁶ : NormedAddCommGroup F\ninst✝⁵ : NormedSpace 𝕜 F\ninst✝⁴ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝³ : (x : B) → TopologicalSpace (E x)\ninst✝² : FiberBundle F E\ninst✝¹ : VectorBundle 𝕜 F E\ninst✝ : ContMDiffVectorBundle 2 F E IB\n⊢ ContMDiffVectorBundle 1 F E IB","decl":"instance [ContMDiffVectorBundle 2 F E IB] : ContMDiffVectorBundle 1 F E IB :=\n  ContMDiffVectorBundle.of_le one_le_two\n\n"}
{"name":"instContMDiffVectorBundleOfNatWithTopENat_1","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹³ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝¹² : NormedAddCommGroup EB\ninst✝¹¹ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁰ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝⁹ : TopologicalSpace B\ninst✝⁸ : ChartedSpace HB B\ninst✝⁷ : (x : B) → AddCommMonoid (E x)\ninst✝⁶ : (x : B) → Module 𝕜 (E x)\ninst✝⁵ : NormedAddCommGroup F\ninst✝⁴ : NormedSpace 𝕜 F\ninst✝³ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝² : (x : B) → TopologicalSpace (E x)\ninst✝¹ : FiberBundle F E\ninst✝ : VectorBundle 𝕜 F E\n⊢ ContMDiffVectorBundle 0 F E IB","decl":"instance : ContMDiffVectorBundle 0 F E IB := by\n  constructor\n  intro e e' he he'\n  rw [contMDiffOn_zero_iff]\n  exact VectorBundle.continuousOn_coordChange' e e'\n\n"}
{"name":"contMDiffOn_coordChangeL","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁶ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝¹⁵ : NormedAddCommGroup EB\ninst✝¹⁴ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹³ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹² : TopologicalSpace B\ninst✝¹¹ : ChartedSpace HB B\ninst✝¹⁰ : (x : B) → AddCommMonoid (E x)\ninst✝⁹ : (x : B) → Module 𝕜 (E x)\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : NormedSpace 𝕜 F\ninst✝⁶ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁵ : (x : B) → TopologicalSpace (E x)\ninst✝⁴ : FiberBundle F E\ninst✝³ : VectorBundle 𝕜 F E\ninst✝² : ContMDiffVectorBundle n F E IB\ne e' : Trivialization F Bundle.TotalSpace.proj\ninst✝¹ : MemTrivializationAtlas e\ninst✝ : MemTrivializationAtlas e'\n⊢ ContMDiffOn IB (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F F)) n (fun b => ↑(Trivialization.coordChangeL 𝕜 e e' b)) (Inter.inter e.baseSet e'.baseSet)","decl":"theorem contMDiffOn_coordChangeL :\n    ContMDiffOn IB 𝓘(𝕜, F →L[𝕜] F) n (fun b : B => (e.coordChangeL 𝕜 e' b : F →L[𝕜] F))\n      (e.baseSet ∩ e'.baseSet) :=\n  ContMDiffVectorBundle.contMDiffOn_coordChangeL e e'\n\n"}
{"name":"contMDiffOn_symm_coordChangeL","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁶ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝¹⁵ : NormedAddCommGroup EB\ninst✝¹⁴ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹³ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹² : TopologicalSpace B\ninst✝¹¹ : ChartedSpace HB B\ninst✝¹⁰ : (x : B) → AddCommMonoid (E x)\ninst✝⁹ : (x : B) → Module 𝕜 (E x)\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : NormedSpace 𝕜 F\ninst✝⁶ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁵ : (x : B) → TopologicalSpace (E x)\ninst✝⁴ : FiberBundle F E\ninst✝³ : VectorBundle 𝕜 F E\ninst✝² : ContMDiffVectorBundle n F E IB\ne e' : Trivialization F Bundle.TotalSpace.proj\ninst✝¹ : MemTrivializationAtlas e\ninst✝ : MemTrivializationAtlas e'\n⊢ ContMDiffOn IB (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F F)) n (fun b => ↑(Trivialization.coordChangeL 𝕜 e e' b).symm) (Inter.inter e.baseSet e'.baseSet)","decl":"theorem contMDiffOn_symm_coordChangeL :\n    ContMDiffOn IB 𝓘(𝕜, F →L[𝕜] F) n (fun b : B => ((e.coordChangeL 𝕜 e' b).symm : F →L[𝕜] F))\n      (e.baseSet ∩ e'.baseSet) := by\n  rw [inter_comm]\n  refine (ContMDiffVectorBundle.contMDiffOn_coordChangeL e' e).congr fun b hb ↦ ?_\n  rw [e.symm_coordChangeL e' hb]\n\n"}
{"name":"smoothOn_coordChangeL","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁶ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝¹⁵ : NormedAddCommGroup EB\ninst✝¹⁴ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹³ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹² : TopologicalSpace B\ninst✝¹¹ : ChartedSpace HB B\ninst✝¹⁰ : (x : B) → AddCommMonoid (E x)\ninst✝⁹ : (x : B) → Module 𝕜 (E x)\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : NormedSpace 𝕜 F\ninst✝⁶ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁵ : (x : B) → TopologicalSpace (E x)\ninst✝⁴ : FiberBundle F E\ninst✝³ : VectorBundle 𝕜 F E\ninst✝² : ContMDiffVectorBundle n F E IB\ne e' : Trivialization F Bundle.TotalSpace.proj\ninst✝¹ : MemTrivializationAtlas e\ninst✝ : MemTrivializationAtlas e'\n⊢ ContMDiffOn IB (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F F)) n (fun b => ↑(Trivialization.coordChangeL 𝕜 e e' b)) (Inter.inter e.baseSet e'.baseSet)","decl":"@[deprecated (since := \"2024-11-21\")] alias smoothOn_coordChangeL := contMDiffOn_coordChangeL\n"}
{"name":"smoothOn_symm_coordChangeL","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁶ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝¹⁵ : NormedAddCommGroup EB\ninst✝¹⁴ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹³ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹² : TopologicalSpace B\ninst✝¹¹ : ChartedSpace HB B\ninst✝¹⁰ : (x : B) → AddCommMonoid (E x)\ninst✝⁹ : (x : B) → Module 𝕜 (E x)\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : NormedSpace 𝕜 F\ninst✝⁶ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁵ : (x : B) → TopologicalSpace (E x)\ninst✝⁴ : FiberBundle F E\ninst✝³ : VectorBundle 𝕜 F E\ninst✝² : ContMDiffVectorBundle n F E IB\ne e' : Trivialization F Bundle.TotalSpace.proj\ninst✝¹ : MemTrivializationAtlas e\ninst✝ : MemTrivializationAtlas e'\n⊢ ContMDiffOn IB (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F F)) n (fun b => ↑(Trivialization.coordChangeL 𝕜 e e' b).symm) (Inter.inter e.baseSet e'.baseSet)","decl":"@[deprecated (since := \"2024-11-21\")]\nalias smoothOn_symm_coordChangeL := contMDiffOn_symm_coordChangeL\n\n\n"}
{"name":"contMDiffAt_coordChangeL","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁶ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝¹⁵ : NormedAddCommGroup EB\ninst✝¹⁴ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹³ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹² : TopologicalSpace B\ninst✝¹¹ : ChartedSpace HB B\ninst✝¹⁰ : (x : B) → AddCommMonoid (E x)\ninst✝⁹ : (x : B) → Module 𝕜 (E x)\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : NormedSpace 𝕜 F\ninst✝⁶ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁵ : (x : B) → TopologicalSpace (E x)\ninst✝⁴ : FiberBundle F E\ninst✝³ : VectorBundle 𝕜 F E\ninst✝² : ContMDiffVectorBundle n F E IB\ne e' : Trivialization F Bundle.TotalSpace.proj\ninst✝¹ : MemTrivializationAtlas e\ninst✝ : MemTrivializationAtlas e'\nx : B\nh : Membership.mem e.baseSet x\nh' : Membership.mem e'.baseSet x\n⊢ ContMDiffAt IB (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F F)) n (fun b => ↑(Trivialization.coordChangeL 𝕜 e e' b)) x","decl":"theorem contMDiffAt_coordChangeL {x : B} (h : x ∈ e.baseSet) (h' : x ∈ e'.baseSet) :\n    ContMDiffAt IB 𝓘(𝕜, F →L[𝕜] F) n (fun b : B => (e.coordChangeL 𝕜 e' b : F →L[𝕜] F)) x :=\n  (contMDiffOn_coordChangeL e e').contMDiffAt <|\n    (e.open_baseSet.inter e'.open_baseSet).mem_nhds ⟨h, h'⟩\n\n"}
{"name":"smoothAt_coordChangeL","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁶ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝¹⁵ : NormedAddCommGroup EB\ninst✝¹⁴ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹³ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹² : TopologicalSpace B\ninst✝¹¹ : ChartedSpace HB B\ninst✝¹⁰ : (x : B) → AddCommMonoid (E x)\ninst✝⁹ : (x : B) → Module 𝕜 (E x)\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : NormedSpace 𝕜 F\ninst✝⁶ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁵ : (x : B) → TopologicalSpace (E x)\ninst✝⁴ : FiberBundle F E\ninst✝³ : VectorBundle 𝕜 F E\ninst✝² : ContMDiffVectorBundle n F E IB\ne e' : Trivialization F Bundle.TotalSpace.proj\ninst✝¹ : MemTrivializationAtlas e\ninst✝ : MemTrivializationAtlas e'\nx : B\nh : Membership.mem e.baseSet x\nh' : Membership.mem e'.baseSet x\n⊢ ContMDiffAt IB (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F F)) n (fun b => ↑(Trivialization.coordChangeL 𝕜 e e' b)) x","decl":"@[deprecated (since := \"2024-11-21\")] alias smoothAt_coordChangeL := contMDiffAt_coordChangeL\n\n"}
{"name":"ContMDiffWithinAt.coordChangeL","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝²¹ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝²⁰ : NormedAddCommGroup EB\ninst✝¹⁹ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁸ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁷ : TopologicalSpace B\ninst✝¹⁶ : ChartedSpace HB B\nEM : Type u_9\ninst✝¹⁵ : NormedAddCommGroup EM\ninst✝¹⁴ : NormedSpace 𝕜 EM\nHM : Type u_10\ninst✝¹³ : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝¹² : TopologicalSpace M\ninst✝¹¹ : ChartedSpace HM M\ninst✝¹⁰ : (x : B) → AddCommMonoid (E x)\ninst✝⁹ : (x : B) → Module 𝕜 (E x)\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : NormedSpace 𝕜 F\ninst✝⁶ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁵ : (x : B) → TopologicalSpace (E x)\ninst✝⁴ : FiberBundle F E\ninst✝³ : VectorBundle 𝕜 F E\ninst✝² : ContMDiffVectorBundle n F E IB\ne e' : Trivialization F Bundle.TotalSpace.proj\ninst✝¹ : MemTrivializationAtlas e\ninst✝ : MemTrivializationAtlas e'\ns : Set M\nf : M → B\nx : M\nhf : ContMDiffWithinAt IM IB n f s x\nhe : Membership.mem e.baseSet (f x)\nhe' : Membership.mem e'.baseSet (f x)\n⊢ ContMDiffWithinAt IM (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F F)) n (fun y => ↑(Trivialization.coordChangeL 𝕜 e e' (f y))) s x","decl":"protected theorem ContMDiffWithinAt.coordChangeL\n    (hf : ContMDiffWithinAt IM IB n f s x) (he : f x ∈ e.baseSet) (he' : f x ∈ e'.baseSet) :\n    ContMDiffWithinAt IM 𝓘(𝕜, F →L[𝕜] F) n (fun y ↦ (e.coordChangeL 𝕜 e' (f y) : F →L[𝕜] F)) s x :=\n  (contMDiffAt_coordChangeL he he').comp_contMDiffWithinAt _ hf\n\n"}
{"name":"ContMDiffAt.coordChangeL","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝²¹ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝²⁰ : NormedAddCommGroup EB\ninst✝¹⁹ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁸ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁷ : TopologicalSpace B\ninst✝¹⁶ : ChartedSpace HB B\nEM : Type u_9\ninst✝¹⁵ : NormedAddCommGroup EM\ninst✝¹⁴ : NormedSpace 𝕜 EM\nHM : Type u_10\ninst✝¹³ : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝¹² : TopologicalSpace M\ninst✝¹¹ : ChartedSpace HM M\ninst✝¹⁰ : (x : B) → AddCommMonoid (E x)\ninst✝⁹ : (x : B) → Module 𝕜 (E x)\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : NormedSpace 𝕜 F\ninst✝⁶ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁵ : (x : B) → TopologicalSpace (E x)\ninst✝⁴ : FiberBundle F E\ninst✝³ : VectorBundle 𝕜 F E\ninst✝² : ContMDiffVectorBundle n F E IB\ne e' : Trivialization F Bundle.TotalSpace.proj\ninst✝¹ : MemTrivializationAtlas e\ninst✝ : MemTrivializationAtlas e'\nf : M → B\nx : M\nhf : ContMDiffAt IM IB n f x\nhe : Membership.mem e.baseSet (f x)\nhe' : Membership.mem e'.baseSet (f x)\n⊢ ContMDiffAt IM (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F F)) n (fun y => ↑(Trivialization.coordChangeL 𝕜 e e' (f y))) x","decl":"protected nonrec theorem ContMDiffAt.coordChangeL\n    (hf : ContMDiffAt IM IB n f x) (he : f x ∈ e.baseSet) (he' : f x ∈ e'.baseSet) :\n    ContMDiffAt IM 𝓘(𝕜, F →L[𝕜] F) n (fun y ↦ (e.coordChangeL 𝕜 e' (f y) : F →L[𝕜] F)) x :=\n  hf.coordChangeL he he'\n\n"}
{"name":"ContMDiffOn.coordChangeL","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝²¹ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝²⁰ : NormedAddCommGroup EB\ninst✝¹⁹ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁸ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁷ : TopologicalSpace B\ninst✝¹⁶ : ChartedSpace HB B\nEM : Type u_9\ninst✝¹⁵ : NormedAddCommGroup EM\ninst✝¹⁴ : NormedSpace 𝕜 EM\nHM : Type u_10\ninst✝¹³ : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝¹² : TopologicalSpace M\ninst✝¹¹ : ChartedSpace HM M\ninst✝¹⁰ : (x : B) → AddCommMonoid (E x)\ninst✝⁹ : (x : B) → Module 𝕜 (E x)\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : NormedSpace 𝕜 F\ninst✝⁶ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁵ : (x : B) → TopologicalSpace (E x)\ninst✝⁴ : FiberBundle F E\ninst✝³ : VectorBundle 𝕜 F E\ninst✝² : ContMDiffVectorBundle n F E IB\ne e' : Trivialization F Bundle.TotalSpace.proj\ninst✝¹ : MemTrivializationAtlas e\ninst✝ : MemTrivializationAtlas e'\ns : Set M\nf : M → B\nhf : ContMDiffOn IM IB n f s\nhe : Set.MapsTo f s e.baseSet\nhe' : Set.MapsTo f s e'.baseSet\n⊢ ContMDiffOn IM (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F F)) n (fun y => ↑(Trivialization.coordChangeL 𝕜 e e' (f y))) s","decl":"protected theorem ContMDiffOn.coordChangeL\n    (hf : ContMDiffOn IM IB n f s) (he : MapsTo f s e.baseSet) (he' : MapsTo f s e'.baseSet) :\n    ContMDiffOn IM 𝓘(𝕜, F →L[𝕜] F) n (fun y ↦ (e.coordChangeL 𝕜 e' (f y) : F →L[𝕜] F)) s :=\n  fun x hx ↦ (hf x hx).coordChangeL (he hx) (he' hx)\n\n"}
{"name":"ContMDiff.coordChangeL","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝²¹ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝²⁰ : NormedAddCommGroup EB\ninst✝¹⁹ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁸ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁷ : TopologicalSpace B\ninst✝¹⁶ : ChartedSpace HB B\nEM : Type u_9\ninst✝¹⁵ : NormedAddCommGroup EM\ninst✝¹⁴ : NormedSpace 𝕜 EM\nHM : Type u_10\ninst✝¹³ : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝¹² : TopologicalSpace M\ninst✝¹¹ : ChartedSpace HM M\ninst✝¹⁰ : (x : B) → AddCommMonoid (E x)\ninst✝⁹ : (x : B) → Module 𝕜 (E x)\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : NormedSpace 𝕜 F\ninst✝⁶ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁵ : (x : B) → TopologicalSpace (E x)\ninst✝⁴ : FiberBundle F E\ninst✝³ : VectorBundle 𝕜 F E\ninst✝² : ContMDiffVectorBundle n F E IB\ne e' : Trivialization F Bundle.TotalSpace.proj\ninst✝¹ : MemTrivializationAtlas e\ninst✝ : MemTrivializationAtlas e'\nf : M → B\nhf : ContMDiff IM IB n f\nhe : ∀ (x : M), Membership.mem e.baseSet (f x)\nhe' : ∀ (x : M), Membership.mem e'.baseSet (f x)\n⊢ ContMDiff IM (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F F)) n fun y => ↑(Trivialization.coordChangeL 𝕜 e e' (f y))","decl":"protected theorem ContMDiff.coordChangeL\n    (hf : ContMDiff IM IB n f) (he : ∀ x, f x ∈ e.baseSet) (he' : ∀ x, f x ∈ e'.baseSet) :\n    ContMDiff IM 𝓘(𝕜, F →L[𝕜] F) n (fun y ↦ (e.coordChangeL 𝕜 e' (f y) : F →L[𝕜] F)) := fun x ↦\n  (hf x).coordChangeL (he x) (he' x)\n\n"}
{"name":"SmoothWithinAt.coordChangeL","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝²¹ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝²⁰ : NormedAddCommGroup EB\ninst✝¹⁹ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁸ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁷ : TopologicalSpace B\ninst✝¹⁶ : ChartedSpace HB B\nEM : Type u_9\ninst✝¹⁵ : NormedAddCommGroup EM\ninst✝¹⁴ : NormedSpace 𝕜 EM\nHM : Type u_10\ninst✝¹³ : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝¹² : TopologicalSpace M\ninst✝¹¹ : ChartedSpace HM M\ninst✝¹⁰ : (x : B) → AddCommMonoid (E x)\ninst✝⁹ : (x : B) → Module 𝕜 (E x)\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : NormedSpace 𝕜 F\ninst✝⁶ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁵ : (x : B) → TopologicalSpace (E x)\ninst✝⁴ : FiberBundle F E\ninst✝³ : VectorBundle 𝕜 F E\ninst✝² : ContMDiffVectorBundle n F E IB\ne e' : Trivialization F Bundle.TotalSpace.proj\ninst✝¹ : MemTrivializationAtlas e\ninst✝ : MemTrivializationAtlas e'\ns : Set M\nf : M → B\nx : M\nhf : ContMDiffWithinAt IM IB n f s x\nhe : Membership.mem e.baseSet (f x)\nhe' : Membership.mem e'.baseSet (f x)\n⊢ ContMDiffWithinAt IM (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F F)) n (fun y => ↑(Trivialization.coordChangeL 𝕜 e e' (f y))) s x","decl":"@[deprecated (since := \"2024-11-21\")]\nalias SmoothWithinAt.coordChangeL := ContMDiffWithinAt.coordChangeL\n\n"}
{"name":"SmoothAt.coordChangeL","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝²¹ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝²⁰ : NormedAddCommGroup EB\ninst✝¹⁹ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁸ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁷ : TopologicalSpace B\ninst✝¹⁶ : ChartedSpace HB B\nEM : Type u_9\ninst✝¹⁵ : NormedAddCommGroup EM\ninst✝¹⁴ : NormedSpace 𝕜 EM\nHM : Type u_10\ninst✝¹³ : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝¹² : TopologicalSpace M\ninst✝¹¹ : ChartedSpace HM M\ninst✝¹⁰ : (x : B) → AddCommMonoid (E x)\ninst✝⁹ : (x : B) → Module 𝕜 (E x)\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : NormedSpace 𝕜 F\ninst✝⁶ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁵ : (x : B) → TopologicalSpace (E x)\ninst✝⁴ : FiberBundle F E\ninst✝³ : VectorBundle 𝕜 F E\ninst✝² : ContMDiffVectorBundle n F E IB\ne e' : Trivialization F Bundle.TotalSpace.proj\ninst✝¹ : MemTrivializationAtlas e\ninst✝ : MemTrivializationAtlas e'\nf : M → B\nx : M\nhf : ContMDiffAt IM IB n f x\nhe : Membership.mem e.baseSet (f x)\nhe' : Membership.mem e'.baseSet (f x)\n⊢ ContMDiffAt IM (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F F)) n (fun y => ↑(Trivialization.coordChangeL 𝕜 e e' (f y))) x","decl":"@[deprecated (since := \"2024-11-21\")]\nalias SmoothAt.coordChangeL := ContMDiffAt.coordChangeL\n\n"}
{"name":"SmoothOn.coordChangeL","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝²¹ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝²⁰ : NormedAddCommGroup EB\ninst✝¹⁹ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁸ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁷ : TopologicalSpace B\ninst✝¹⁶ : ChartedSpace HB B\nEM : Type u_9\ninst✝¹⁵ : NormedAddCommGroup EM\ninst✝¹⁴ : NormedSpace 𝕜 EM\nHM : Type u_10\ninst✝¹³ : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝¹² : TopologicalSpace M\ninst✝¹¹ : ChartedSpace HM M\ninst✝¹⁰ : (x : B) → AddCommMonoid (E x)\ninst✝⁹ : (x : B) → Module 𝕜 (E x)\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : NormedSpace 𝕜 F\ninst✝⁶ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁵ : (x : B) → TopologicalSpace (E x)\ninst✝⁴ : FiberBundle F E\ninst✝³ : VectorBundle 𝕜 F E\ninst✝² : ContMDiffVectorBundle n F E IB\ne e' : Trivialization F Bundle.TotalSpace.proj\ninst✝¹ : MemTrivializationAtlas e\ninst✝ : MemTrivializationAtlas e'\ns : Set M\nf : M → B\nhf : ContMDiffOn IM IB n f s\nhe : Set.MapsTo f s e.baseSet\nhe' : Set.MapsTo f s e'.baseSet\n⊢ ContMDiffOn IM (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F F)) n (fun y => ↑(Trivialization.coordChangeL 𝕜 e e' (f y))) s","decl":"@[deprecated (since := \"2024-11-21\")]\nalias SmoothOn.coordChangeL := ContMDiffOn.coordChangeL\n\n"}
{"name":"Smooth.coordChangeL","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝²¹ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝²⁰ : NormedAddCommGroup EB\ninst✝¹⁹ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁸ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁷ : TopologicalSpace B\ninst✝¹⁶ : ChartedSpace HB B\nEM : Type u_9\ninst✝¹⁵ : NormedAddCommGroup EM\ninst✝¹⁴ : NormedSpace 𝕜 EM\nHM : Type u_10\ninst✝¹³ : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝¹² : TopologicalSpace M\ninst✝¹¹ : ChartedSpace HM M\ninst✝¹⁰ : (x : B) → AddCommMonoid (E x)\ninst✝⁹ : (x : B) → Module 𝕜 (E x)\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : NormedSpace 𝕜 F\ninst✝⁶ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁵ : (x : B) → TopologicalSpace (E x)\ninst✝⁴ : FiberBundle F E\ninst✝³ : VectorBundle 𝕜 F E\ninst✝² : ContMDiffVectorBundle n F E IB\ne e' : Trivialization F Bundle.TotalSpace.proj\ninst✝¹ : MemTrivializationAtlas e\ninst✝ : MemTrivializationAtlas e'\nf : M → B\nhf : ContMDiff IM IB n f\nhe : ∀ (x : M), Membership.mem e.baseSet (f x)\nhe' : ∀ (x : M), Membership.mem e'.baseSet (f x)\n⊢ ContMDiff IM (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F F)) n fun y => ↑(Trivialization.coordChangeL 𝕜 e e' (f y))","decl":"@[deprecated (since := \"2024-11-21\")]\nalias Smooth.coordChangeL := ContMDiff.coordChangeL\n\n"}
{"name":"ContMDiffWithinAt.coordChange","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝²¹ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝²⁰ : NormedAddCommGroup EB\ninst✝¹⁹ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁸ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁷ : TopologicalSpace B\ninst✝¹⁶ : ChartedSpace HB B\nEM : Type u_9\ninst✝¹⁵ : NormedAddCommGroup EM\ninst✝¹⁴ : NormedSpace 𝕜 EM\nHM : Type u_10\ninst✝¹³ : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝¹² : TopologicalSpace M\ninst✝¹¹ : ChartedSpace HM M\ninst✝¹⁰ : (x : B) → AddCommMonoid (E x)\ninst✝⁹ : (x : B) → Module 𝕜 (E x)\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : NormedSpace 𝕜 F\ninst✝⁶ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁵ : (x : B) → TopologicalSpace (E x)\ninst✝⁴ : FiberBundle F E\ninst✝³ : VectorBundle 𝕜 F E\ninst✝² : ContMDiffVectorBundle n F E IB\ne e' : Trivialization F Bundle.TotalSpace.proj\ninst✝¹ : MemTrivializationAtlas e\ninst✝ : MemTrivializationAtlas e'\ns : Set M\nf : M → B\ng : M → F\nx : M\nhf : ContMDiffWithinAt IM IB n f s x\nhg : ContMDiffWithinAt IM (modelWithCornersSelf 𝕜 F) n g s x\nhe : Membership.mem e.baseSet (f x)\nhe' : Membership.mem e'.baseSet (f x)\n⊢ ContMDiffWithinAt IM (modelWithCornersSelf 𝕜 F) n (fun y => e.coordChange e' (f y) (g y)) s x","decl":"protected theorem ContMDiffWithinAt.coordChange\n    (hf : ContMDiffWithinAt IM IB n f s x) (hg : ContMDiffWithinAt IM 𝓘(𝕜, F) n g s x)\n    (he : f x ∈ e.baseSet) (he' : f x ∈ e'.baseSet) :\n    ContMDiffWithinAt IM 𝓘(𝕜, F) n (fun y ↦ e.coordChange e' (f y) (g y)) s x := by\n  refine ((hf.coordChangeL he he').clm_apply hg).congr_of_eventuallyEq ?_ ?_\n  · have : e.baseSet ∩ e'.baseSet ∈ 𝓝 (f x) :=\n     (e.open_baseSet.inter e'.open_baseSet).mem_nhds ⟨he, he'⟩\n    filter_upwards [hf.continuousWithinAt this] with y hy\n    exact (Trivialization.coordChangeL_apply' e e' hy (g y)).symm\n  · exact (Trivialization.coordChangeL_apply' e e' ⟨he, he'⟩ (g x)).symm\n\n"}
{"name":"ContMDiffAt.coordChange","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝²¹ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝²⁰ : NormedAddCommGroup EB\ninst✝¹⁹ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁸ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁷ : TopologicalSpace B\ninst✝¹⁶ : ChartedSpace HB B\nEM : Type u_9\ninst✝¹⁵ : NormedAddCommGroup EM\ninst✝¹⁴ : NormedSpace 𝕜 EM\nHM : Type u_10\ninst✝¹³ : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝¹² : TopologicalSpace M\ninst✝¹¹ : ChartedSpace HM M\ninst✝¹⁰ : (x : B) → AddCommMonoid (E x)\ninst✝⁹ : (x : B) → Module 𝕜 (E x)\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : NormedSpace 𝕜 F\ninst✝⁶ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁵ : (x : B) → TopologicalSpace (E x)\ninst✝⁴ : FiberBundle F E\ninst✝³ : VectorBundle 𝕜 F E\ninst✝² : ContMDiffVectorBundle n F E IB\ne e' : Trivialization F Bundle.TotalSpace.proj\ninst✝¹ : MemTrivializationAtlas e\ninst✝ : MemTrivializationAtlas e'\nf : M → B\ng : M → F\nx : M\nhf : ContMDiffAt IM IB n f x\nhg : ContMDiffAt IM (modelWithCornersSelf 𝕜 F) n g x\nhe : Membership.mem e.baseSet (f x)\nhe' : Membership.mem e'.baseSet (f x)\n⊢ ContMDiffAt IM (modelWithCornersSelf 𝕜 F) n (fun y => e.coordChange e' (f y) (g y)) x","decl":"protected nonrec theorem ContMDiffAt.coordChange\n    (hf : ContMDiffAt IM IB n f x) (hg : ContMDiffAt IM 𝓘(𝕜, F) n g x) (he : f x ∈ e.baseSet)\n    (he' : f x ∈ e'.baseSet) :\n    ContMDiffAt IM 𝓘(𝕜, F) n (fun y ↦ e.coordChange e' (f y) (g y)) x :=\n  hf.coordChange hg he he'\n\n"}
{"name":"ContMDiffOn.coordChange","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝²¹ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝²⁰ : NormedAddCommGroup EB\ninst✝¹⁹ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁸ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁷ : TopologicalSpace B\ninst✝¹⁶ : ChartedSpace HB B\nEM : Type u_9\ninst✝¹⁵ : NormedAddCommGroup EM\ninst✝¹⁴ : NormedSpace 𝕜 EM\nHM : Type u_10\ninst✝¹³ : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝¹² : TopologicalSpace M\ninst✝¹¹ : ChartedSpace HM M\ninst✝¹⁰ : (x : B) → AddCommMonoid (E x)\ninst✝⁹ : (x : B) → Module 𝕜 (E x)\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : NormedSpace 𝕜 F\ninst✝⁶ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁵ : (x : B) → TopologicalSpace (E x)\ninst✝⁴ : FiberBundle F E\ninst✝³ : VectorBundle 𝕜 F E\ninst✝² : ContMDiffVectorBundle n F E IB\ne e' : Trivialization F Bundle.TotalSpace.proj\ninst✝¹ : MemTrivializationAtlas e\ninst✝ : MemTrivializationAtlas e'\ns : Set M\nf : M → B\ng : M → F\nhf : ContMDiffOn IM IB n f s\nhg : ContMDiffOn IM (modelWithCornersSelf 𝕜 F) n g s\nhe : Set.MapsTo f s e.baseSet\nhe' : Set.MapsTo f s e'.baseSet\n⊢ ContMDiffOn IM (modelWithCornersSelf 𝕜 F) n (fun y => e.coordChange e' (f y) (g y)) s","decl":"protected theorem ContMDiffOn.coordChange (hf : ContMDiffOn IM IB n f s)\n    (hg : ContMDiffOn IM 𝓘(𝕜, F) n g s) (he : MapsTo f s e.baseSet) (he' : MapsTo f s e'.baseSet) :\n    ContMDiffOn IM 𝓘(𝕜, F) n (fun y ↦ e.coordChange e' (f y) (g y)) s := fun x hx ↦\n  (hf x hx).coordChange (hg x hx) (he hx) (he' hx)\n\n"}
{"name":"ContMDiff.coordChange","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝²¹ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝²⁰ : NormedAddCommGroup EB\ninst✝¹⁹ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁸ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁷ : TopologicalSpace B\ninst✝¹⁶ : ChartedSpace HB B\nEM : Type u_9\ninst✝¹⁵ : NormedAddCommGroup EM\ninst✝¹⁴ : NormedSpace 𝕜 EM\nHM : Type u_10\ninst✝¹³ : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝¹² : TopologicalSpace M\ninst✝¹¹ : ChartedSpace HM M\ninst✝¹⁰ : (x : B) → AddCommMonoid (E x)\ninst✝⁹ : (x : B) → Module 𝕜 (E x)\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : NormedSpace 𝕜 F\ninst✝⁶ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁵ : (x : B) → TopologicalSpace (E x)\ninst✝⁴ : FiberBundle F E\ninst✝³ : VectorBundle 𝕜 F E\ninst✝² : ContMDiffVectorBundle n F E IB\ne e' : Trivialization F Bundle.TotalSpace.proj\ninst✝¹ : MemTrivializationAtlas e\ninst✝ : MemTrivializationAtlas e'\nf : M → B\ng : M → F\nhf : ContMDiff IM IB n f\nhg : ContMDiff IM (modelWithCornersSelf 𝕜 F) n g\nhe : ∀ (x : M), Membership.mem e.baseSet (f x)\nhe' : ∀ (x : M), Membership.mem e'.baseSet (f x)\n⊢ ContMDiff IM (modelWithCornersSelf 𝕜 F) n fun y => e.coordChange e' (f y) (g y)","decl":"protected theorem ContMDiff.coordChange (hf : ContMDiff IM IB n f)\n    (hg : ContMDiff IM 𝓘(𝕜, F) n g) (he : ∀ x, f x ∈ e.baseSet) (he' : ∀ x, f x ∈ e'.baseSet) :\n    ContMDiff IM 𝓘(𝕜, F) n (fun y ↦ e.coordChange e' (f y) (g y)) := fun x ↦\n  (hf x).coordChange (hg x) (he x) (he' x)\n\n"}
{"name":"SmoothWithinAt.coordChange","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝²¹ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝²⁰ : NormedAddCommGroup EB\ninst✝¹⁹ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁸ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁷ : TopologicalSpace B\ninst✝¹⁶ : ChartedSpace HB B\nEM : Type u_9\ninst✝¹⁵ : NormedAddCommGroup EM\ninst✝¹⁴ : NormedSpace 𝕜 EM\nHM : Type u_10\ninst✝¹³ : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝¹² : TopologicalSpace M\ninst✝¹¹ : ChartedSpace HM M\ninst✝¹⁰ : (x : B) → AddCommMonoid (E x)\ninst✝⁹ : (x : B) → Module 𝕜 (E x)\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : NormedSpace 𝕜 F\ninst✝⁶ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁵ : (x : B) → TopologicalSpace (E x)\ninst✝⁴ : FiberBundle F E\ninst✝³ : VectorBundle 𝕜 F E\ninst✝² : ContMDiffVectorBundle n F E IB\ne e' : Trivialization F Bundle.TotalSpace.proj\ninst✝¹ : MemTrivializationAtlas e\ninst✝ : MemTrivializationAtlas e'\ns : Set M\nf : M → B\ng : M → F\nx : M\nhf : ContMDiffWithinAt IM IB n f s x\nhg : ContMDiffWithinAt IM (modelWithCornersSelf 𝕜 F) n g s x\nhe : Membership.mem e.baseSet (f x)\nhe' : Membership.mem e'.baseSet (f x)\n⊢ ContMDiffWithinAt IM (modelWithCornersSelf 𝕜 F) n (fun y => e.coordChange e' (f y) (g y)) s x","decl":"@[deprecated (since := \"2024-11-21\")]\nalias SmoothWithinAt.coordChange := ContMDiffWithinAt.coordChange\n\n"}
{"name":"SmoothAt.coordChange","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝²¹ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝²⁰ : NormedAddCommGroup EB\ninst✝¹⁹ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁸ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁷ : TopologicalSpace B\ninst✝¹⁶ : ChartedSpace HB B\nEM : Type u_9\ninst✝¹⁵ : NormedAddCommGroup EM\ninst✝¹⁴ : NormedSpace 𝕜 EM\nHM : Type u_10\ninst✝¹³ : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝¹² : TopologicalSpace M\ninst✝¹¹ : ChartedSpace HM M\ninst✝¹⁰ : (x : B) → AddCommMonoid (E x)\ninst✝⁹ : (x : B) → Module 𝕜 (E x)\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : NormedSpace 𝕜 F\ninst✝⁶ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁵ : (x : B) → TopologicalSpace (E x)\ninst✝⁴ : FiberBundle F E\ninst✝³ : VectorBundle 𝕜 F E\ninst✝² : ContMDiffVectorBundle n F E IB\ne e' : Trivialization F Bundle.TotalSpace.proj\ninst✝¹ : MemTrivializationAtlas e\ninst✝ : MemTrivializationAtlas e'\nf : M → B\ng : M → F\nx : M\nhf : ContMDiffAt IM IB n f x\nhg : ContMDiffAt IM (modelWithCornersSelf 𝕜 F) n g x\nhe : Membership.mem e.baseSet (f x)\nhe' : Membership.mem e'.baseSet (f x)\n⊢ ContMDiffAt IM (modelWithCornersSelf 𝕜 F) n (fun y => e.coordChange e' (f y) (g y)) x","decl":"@[deprecated (since := \"2024-11-21\")]\nalias SmoothAt.coordChange := ContMDiffAt.coordChange\n\n"}
{"name":"SmoothOn.coordChange","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝²¹ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝²⁰ : NormedAddCommGroup EB\ninst✝¹⁹ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁸ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁷ : TopologicalSpace B\ninst✝¹⁶ : ChartedSpace HB B\nEM : Type u_9\ninst✝¹⁵ : NormedAddCommGroup EM\ninst✝¹⁴ : NormedSpace 𝕜 EM\nHM : Type u_10\ninst✝¹³ : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝¹² : TopologicalSpace M\ninst✝¹¹ : ChartedSpace HM M\ninst✝¹⁰ : (x : B) → AddCommMonoid (E x)\ninst✝⁹ : (x : B) → Module 𝕜 (E x)\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : NormedSpace 𝕜 F\ninst✝⁶ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁵ : (x : B) → TopologicalSpace (E x)\ninst✝⁴ : FiberBundle F E\ninst✝³ : VectorBundle 𝕜 F E\ninst✝² : ContMDiffVectorBundle n F E IB\ne e' : Trivialization F Bundle.TotalSpace.proj\ninst✝¹ : MemTrivializationAtlas e\ninst✝ : MemTrivializationAtlas e'\ns : Set M\nf : M → B\ng : M → F\nhf : ContMDiffOn IM IB n f s\nhg : ContMDiffOn IM (modelWithCornersSelf 𝕜 F) n g s\nhe : Set.MapsTo f s e.baseSet\nhe' : Set.MapsTo f s e'.baseSet\n⊢ ContMDiffOn IM (modelWithCornersSelf 𝕜 F) n (fun y => e.coordChange e' (f y) (g y)) s","decl":"@[deprecated (since := \"2024-11-21\")]\nalias SmoothOn.coordChange := ContMDiffOn.coordChange\n\n"}
{"name":"Smooth.coordChange","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝²¹ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝²⁰ : NormedAddCommGroup EB\ninst✝¹⁹ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁸ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁷ : TopologicalSpace B\ninst✝¹⁶ : ChartedSpace HB B\nEM : Type u_9\ninst✝¹⁵ : NormedAddCommGroup EM\ninst✝¹⁴ : NormedSpace 𝕜 EM\nHM : Type u_10\ninst✝¹³ : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝¹² : TopologicalSpace M\ninst✝¹¹ : ChartedSpace HM M\ninst✝¹⁰ : (x : B) → AddCommMonoid (E x)\ninst✝⁹ : (x : B) → Module 𝕜 (E x)\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : NormedSpace 𝕜 F\ninst✝⁶ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁵ : (x : B) → TopologicalSpace (E x)\ninst✝⁴ : FiberBundle F E\ninst✝³ : VectorBundle 𝕜 F E\ninst✝² : ContMDiffVectorBundle n F E IB\ne e' : Trivialization F Bundle.TotalSpace.proj\ninst✝¹ : MemTrivializationAtlas e\ninst✝ : MemTrivializationAtlas e'\nf : M → B\ng : M → F\nhf : ContMDiff IM IB n f\nhg : ContMDiff IM (modelWithCornersSelf 𝕜 F) n g\nhe : ∀ (x : M), Membership.mem e.baseSet (f x)\nhe' : ∀ (x : M), Membership.mem e'.baseSet (f x)\n⊢ ContMDiff IM (modelWithCornersSelf 𝕜 F) n fun y => e.coordChange e' (f y) (g y)","decl":"@[deprecated (since := \"2024-11-21\")]\nalias Smooth.coordChange := ContMDiff.coordChange\n\n"}
{"name":"Trivialization.contMDiffOn_symm_trans","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁶ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝¹⁵ : NormedAddCommGroup EB\ninst✝¹⁴ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹³ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹² : TopologicalSpace B\ninst✝¹¹ : ChartedSpace HB B\ninst✝¹⁰ : (x : B) → AddCommMonoid (E x)\ninst✝⁹ : (x : B) → Module 𝕜 (E x)\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : NormedSpace 𝕜 F\ninst✝⁶ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁵ : (x : B) → TopologicalSpace (E x)\ninst✝⁴ : FiberBundle F E\ninst✝³ : VectorBundle 𝕜 F E\ninst✝² : ContMDiffVectorBundle n F E IB\ne e' : Trivialization F Bundle.TotalSpace.proj\ninst✝¹ : MemTrivializationAtlas e\ninst✝ : MemTrivializationAtlas e'\n⊢ ContMDiffOn (IB.prod (modelWithCornersSelf 𝕜 F)) (IB.prod (modelWithCornersSelf 𝕜 F)) n (↑(e.symm.trans e'.toPartialHomeomorph)) (Inter.inter e.target e'.target)","decl":"variable (IB) in\ntheorem Trivialization.contMDiffOn_symm_trans :\n    ContMDiffOn (IB.prod 𝓘(𝕜, F)) (IB.prod 𝓘(𝕜, F)) n\n      (e.toPartialHomeomorph.symm ≫ₕ e'.toPartialHomeomorph) (e.target ∩ e'.target) := by\n  have Hmaps : MapsTo Prod.fst (e.target ∩ e'.target) (e.baseSet ∩ e'.baseSet) := fun x hx ↦\n    ⟨e.mem_target.1 hx.1, e'.mem_target.1 hx.2⟩\n  rw [mapsTo_inter] at Hmaps\n  -- TODO: drop `congr` https://github.com/leanprover-community/mathlib4/issues/5473\n  refine (contMDiffOn_fst.prod_mk\n    (contMDiffOn_fst.coordChange contMDiffOn_snd Hmaps.1 Hmaps.2)).congr ?_\n  rintro ⟨b, x⟩ hb\n  refine Prod.ext ?_ rfl\n  have : (e.toPartialHomeomorph.symm (b, x)).1 ∈ e'.baseSet := by\n    simp_all only [Trivialization.mem_target, mfld_simps]\n  exact (e'.coe_fst' this).trans (e.proj_symm_apply hb.1)\n\n"}
{"name":"ContMDiffWithinAt.change_section_trivialization","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝²¹ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝²⁰ : NormedAddCommGroup EB\ninst✝¹⁹ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁸ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁷ : TopologicalSpace B\ninst✝¹⁶ : ChartedSpace HB B\nEM : Type u_9\ninst✝¹⁵ : NormedAddCommGroup EM\ninst✝¹⁴ : NormedSpace 𝕜 EM\nHM : Type u_10\ninst✝¹³ : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝¹² : TopologicalSpace M\ninst✝¹¹ : ChartedSpace HM M\ninst✝¹⁰ : (x : B) → AddCommMonoid (E x)\ninst✝⁹ : (x : B) → Module 𝕜 (E x)\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : NormedSpace 𝕜 F\ninst✝⁶ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁵ : (x : B) → TopologicalSpace (E x)\ninst✝⁴ : FiberBundle F E\ninst✝³ : VectorBundle 𝕜 F E\ninst✝² : ContMDiffVectorBundle n F E IB\ne e' : Trivialization F Bundle.TotalSpace.proj\ninst✝¹ : MemTrivializationAtlas e\ninst✝ : MemTrivializationAtlas e'\ns : Set M\nx : M\nf : M → Bundle.TotalSpace F E\nhp : ContMDiffWithinAt IM IB n (Function.comp Bundle.TotalSpace.proj f) s x\nhf : ContMDiffWithinAt IM (modelWithCornersSelf 𝕜 F) n (fun y => (↑e (f y)).2) s x\nhe : Membership.mem e.source (f x)\nhe' : Membership.mem e'.source (f x)\n⊢ ContMDiffWithinAt IM (modelWithCornersSelf 𝕜 F) n (fun y => (↑e' (f y)).2) s x","decl":"theorem ContMDiffWithinAt.change_section_trivialization {f : M → TotalSpace F E}\n    (hp : ContMDiffWithinAt IM IB n (π F E ∘ f) s x)\n    (hf : ContMDiffWithinAt IM 𝓘(𝕜, F) n (fun y ↦ (e (f y)).2) s x)\n    (he : f x ∈ e.source) (he' : f x ∈ e'.source) :\n    ContMDiffWithinAt IM 𝓘(𝕜, F) n (fun y ↦ (e' (f y)).2) s x := by\n  rw [Trivialization.mem_source] at he he'\n  refine (hp.coordChange hf he he').congr_of_eventuallyEq ?_ ?_\n  · filter_upwards [hp.continuousWithinAt (e.open_baseSet.mem_nhds he)] with y hy\n    rw [Function.comp_apply, e.coordChange_apply_snd _ hy]\n  · rw [Function.comp_apply, e.coordChange_apply_snd _ he]\n\n"}
{"name":"Trivialization.contMDiffWithinAt_snd_comp_iff₂","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝²¹ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝²⁰ : NormedAddCommGroup EB\ninst✝¹⁹ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁸ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁷ : TopologicalSpace B\ninst✝¹⁶ : ChartedSpace HB B\nEM : Type u_9\ninst✝¹⁵ : NormedAddCommGroup EM\ninst✝¹⁴ : NormedSpace 𝕜 EM\nHM : Type u_10\ninst✝¹³ : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝¹² : TopologicalSpace M\ninst✝¹¹ : ChartedSpace HM M\ninst✝¹⁰ : (x : B) → AddCommMonoid (E x)\ninst✝⁹ : (x : B) → Module 𝕜 (E x)\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : NormedSpace 𝕜 F\ninst✝⁶ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁵ : (x : B) → TopologicalSpace (E x)\ninst✝⁴ : FiberBundle F E\ninst✝³ : VectorBundle 𝕜 F E\ninst✝² : ContMDiffVectorBundle n F E IB\ne e' : Trivialization F Bundle.TotalSpace.proj\ninst✝¹ : MemTrivializationAtlas e\ninst✝ : MemTrivializationAtlas e'\ns : Set M\nx : M\nf : M → Bundle.TotalSpace F E\nhp : ContMDiffWithinAt IM IB n (Function.comp Bundle.TotalSpace.proj f) s x\nhe : Membership.mem e.source (f x)\nhe' : Membership.mem e'.source (f x)\n⊢ Iff (ContMDiffWithinAt IM (modelWithCornersSelf 𝕜 F) n (fun y => (↑e (f y)).2) s x) (ContMDiffWithinAt IM (modelWithCornersSelf 𝕜 F) n (fun y => (↑e' (f y)).2) s x)","decl":"theorem Trivialization.contMDiffWithinAt_snd_comp_iff₂ {f : M → TotalSpace F E}\n    (hp : ContMDiffWithinAt IM IB n (π F E ∘ f) s x)\n    (he : f x ∈ e.source) (he' : f x ∈ e'.source) :\n    ContMDiffWithinAt IM 𝓘(𝕜, F) n (fun y ↦ (e (f y)).2) s x ↔\n      ContMDiffWithinAt IM 𝓘(𝕜, F) n (fun y ↦ (e' (f y)).2) s x :=\n  ⟨(hp.change_section_trivialization · he he'), (hp.change_section_trivialization · he' he)⟩\n\n"}
{"name":"ContMDiffFiberwiseLinear.hasGroupoid","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝⁹ : NormedAddCommGroup EB\ninst✝⁸ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝⁷ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝⁶ : TopologicalSpace B\ninst✝⁵ : ChartedSpace HB B\ninst✝⁴ : NormedAddCommGroup F\ninst✝³ : NormedSpace 𝕜 F\ninst✝² : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝¹ : (x : B) → TopologicalSpace (E x)\ninst✝ : FiberBundle F E\n⊢ HasGroupoid (Bundle.TotalSpace F E) (contMDiffFiberwiseLinear B F IB n)","decl":"variable [IsManifold IB n B] in\n/-- For a `C^n` vector bundle `E` over `B` with fiber modelled on `F`, the change-of-co-ordinates\nbetween two trivializations `e`, `e'` for `E`, considered as charts to `B × F`, is `C^n` and\nfiberwise linear. -/\ninstance ContMDiffFiberwiseLinear.hasGroupoid :\n    HasGroupoid (TotalSpace F E) (contMDiffFiberwiseLinear B F IB n) where\n  compatible := by\n    rintro _ _ ⟨e, he, rfl⟩ ⟨e', he', rfl⟩\n    haveI : MemTrivializationAtlas e := ⟨he⟩\n    haveI : MemTrivializationAtlas e' := ⟨he'⟩\n    rw [mem_contMDiffFiberwiseLinear_iff]\n    refine ⟨_, _, e.open_baseSet.inter e'.open_baseSet, contMDiffOn_coordChangeL e e',\n      contMDiffOn_symm_coordChangeL e e', ?_⟩\n    refine PartialHomeomorph.eqOnSourceSetoid.symm ⟨?_, ?_⟩\n    · simp only [e.symm_trans_source_eq e', FiberwiseLinear.partialHomeomorph, trans_toPartialEquiv,\n        symm_toPartialEquiv]\n    · rintro ⟨b, v⟩ hb\n      exact (e.apply_symm_apply_eq_coordChangeL e' hb.1 v).symm\n\n"}
{"name":"Bundle.TotalSpace.isManifold","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝⁹ : NormedAddCommGroup EB\ninst✝⁸ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝⁷ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝⁶ : TopologicalSpace B\ninst✝⁵ : ChartedSpace HB B\ninst✝⁴ : NormedAddCommGroup F\ninst✝³ : NormedSpace 𝕜 F\ninst✝² : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝¹ : (x : B) → TopologicalSpace (E x)\ninst✝ : FiberBundle F E\n⊢ IsManifold (IB.prod (modelWithCornersSelf 𝕜 F)) n (Bundle.TotalSpace F E)","decl":"variable [IsManifold IB n B] in\n/-- A `C^n` vector bundle `E` is naturally a `C^n` manifold. -/\ninstance Bundle.TotalSpace.isManifold  :\n    IsManifold (IB.prod 𝓘(𝕜, F)) n (TotalSpace F E) := by\n  refine { StructureGroupoid.HasGroupoid.comp (contMDiffFiberwiseLinear B F IB n) ?_ with }\n  intro e he\n  rw [mem_contMDiffFiberwiseLinear_iff] at he\n  obtain ⟨φ, U, hU, hφ, h2φ, heφ⟩ := he\n  rw [isLocalStructomorphOn_contDiffGroupoid_iff]\n  refine ⟨ContMDiffOn.congr ?_ (EqOnSource.eqOn heφ),\n      ContMDiffOn.congr ?_ (EqOnSource.eqOn (EqOnSource.symm' heφ))⟩\n  · rw [EqOnSource.source_eq heφ]\n    apply contMDiffOn_fst.prod_mk\n    exact (hφ.comp contMDiffOn_fst <| prod_subset_preimage_fst _ _).clm_apply contMDiffOn_snd\n  · rw [EqOnSource.target_eq heφ]\n    apply contMDiffOn_fst.prod_mk\n    exact (h2φ.comp contMDiffOn_fst <| prod_subset_preimage_fst _ _).clm_apply contMDiffOn_snd\n\n"}
{"name":"Trivialization.contMDiffWithinAt_iff","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝²⁰ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝¹⁹ : NormedAddCommGroup EB\ninst✝¹⁸ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁷ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁶ : TopologicalSpace B\ninst✝¹⁵ : ChartedSpace HB B\nEM : Type u_9\ninst✝¹⁴ : NormedAddCommGroup EM\ninst✝¹³ : NormedSpace 𝕜 EM\nHM : Type u_10\ninst✝¹² : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace HM M\ninst✝⁹ : (x : B) → AddCommMonoid (E x)\ninst✝⁸ : (x : B) → Module 𝕜 (E x)\ninst✝⁷ : NormedAddCommGroup F\ninst✝⁶ : NormedSpace 𝕜 F\ninst✝⁵ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁴ : (x : B) → TopologicalSpace (E x)\ninst✝³ : FiberBundle F E\ninst✝² : VectorBundle 𝕜 F E\ninst✝¹ : ContMDiffVectorBundle n F E IB\ne : Trivialization F Bundle.TotalSpace.proj\ninst✝ : MemTrivializationAtlas e\nf : M → Bundle.TotalSpace F E\ns : Set M\nx₀ : M\nhe : Membership.mem e.source (f x₀)\n⊢ Iff (ContMDiffWithinAt IM (IB.prod (modelWithCornersSelf 𝕜 F)) n f s x₀) (And (ContMDiffWithinAt IM IB n (fun x => (f x).proj) s x₀) (ContMDiffWithinAt IM (modelWithCornersSelf 𝕜 F) n (fun x => (↑e (f x)).2) s x₀))","decl":"theorem Trivialization.contMDiffWithinAt_iff {f : M → TotalSpace F E} {s : Set M} {x₀ : M}\n    (he : f x₀ ∈ e.source) :\n    ContMDiffWithinAt IM (IB.prod 𝓘(𝕜, F)) n f s x₀ ↔\n      ContMDiffWithinAt IM IB n (fun x => (f x).proj) s x₀ ∧\n      ContMDiffWithinAt IM 𝓘(𝕜, F) n (fun x ↦ (e (f x)).2) s x₀ :=\n  (contMDiffWithinAt_totalSpace _).trans <| and_congr_right fun h ↦\n    Trivialization.contMDiffWithinAt_snd_comp_iff₂ h FiberBundle.mem_trivializationAt_proj_source he\n\n"}
{"name":"Trivialization.contMDiffAt_iff","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝²⁰ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝¹⁹ : NormedAddCommGroup EB\ninst✝¹⁸ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁷ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁶ : TopologicalSpace B\ninst✝¹⁵ : ChartedSpace HB B\nEM : Type u_9\ninst✝¹⁴ : NormedAddCommGroup EM\ninst✝¹³ : NormedSpace 𝕜 EM\nHM : Type u_10\ninst✝¹² : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace HM M\ninst✝⁹ : (x : B) → AddCommMonoid (E x)\ninst✝⁸ : (x : B) → Module 𝕜 (E x)\ninst✝⁷ : NormedAddCommGroup F\ninst✝⁶ : NormedSpace 𝕜 F\ninst✝⁵ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁴ : (x : B) → TopologicalSpace (E x)\ninst✝³ : FiberBundle F E\ninst✝² : VectorBundle 𝕜 F E\ninst✝¹ : ContMDiffVectorBundle n F E IB\ne : Trivialization F Bundle.TotalSpace.proj\ninst✝ : MemTrivializationAtlas e\nf : M → Bundle.TotalSpace F E\nx₀ : M\nhe : Membership.mem e.source (f x₀)\n⊢ Iff (ContMDiffAt IM (IB.prod (modelWithCornersSelf 𝕜 F)) n f x₀) (And (ContMDiffAt IM IB n (fun x => (f x).proj) x₀) (ContMDiffAt IM (modelWithCornersSelf 𝕜 F) n (fun x => (↑e (f x)).2) x₀))","decl":"theorem Trivialization.contMDiffAt_iff {f : M → TotalSpace F E} {x₀ : M} (he : f x₀ ∈ e.source) :\n    ContMDiffAt IM (IB.prod 𝓘(𝕜, F)) n f x₀ ↔\n      ContMDiffAt IM IB n (fun x => (f x).proj) x₀ ∧\n      ContMDiffAt IM 𝓘(𝕜, F) n (fun x ↦ (e (f x)).2) x₀ :=\n  e.contMDiffWithinAt_iff he\n\n"}
{"name":"Trivialization.contMDiffOn_iff","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝²⁰ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝¹⁹ : NormedAddCommGroup EB\ninst✝¹⁸ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁷ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁶ : TopologicalSpace B\ninst✝¹⁵ : ChartedSpace HB B\nEM : Type u_9\ninst✝¹⁴ : NormedAddCommGroup EM\ninst✝¹³ : NormedSpace 𝕜 EM\nHM : Type u_10\ninst✝¹² : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace HM M\ninst✝⁹ : (x : B) → AddCommMonoid (E x)\ninst✝⁸ : (x : B) → Module 𝕜 (E x)\ninst✝⁷ : NormedAddCommGroup F\ninst✝⁶ : NormedSpace 𝕜 F\ninst✝⁵ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁴ : (x : B) → TopologicalSpace (E x)\ninst✝³ : FiberBundle F E\ninst✝² : VectorBundle 𝕜 F E\ninst✝¹ : ContMDiffVectorBundle n F E IB\ne : Trivialization F Bundle.TotalSpace.proj\ninst✝ : MemTrivializationAtlas e\nf : M → Bundle.TotalSpace F E\ns : Set M\nhe : Set.MapsTo f s e.source\n⊢ Iff (ContMDiffOn IM (IB.prod (modelWithCornersSelf 𝕜 F)) n f s) (And (ContMDiffOn IM IB n (fun x => (f x).proj) s) (ContMDiffOn IM (modelWithCornersSelf 𝕜 F) n (fun x => (↑e (f x)).2) s))","decl":"theorem Trivialization.contMDiffOn_iff {f : M → TotalSpace F E} {s : Set M}\n    (he : MapsTo f s e.source) :\n    ContMDiffOn IM (IB.prod 𝓘(𝕜, F)) n f s ↔\n      ContMDiffOn IM IB n (fun x => (f x).proj) s ∧\n      ContMDiffOn IM 𝓘(𝕜, F) n (fun x ↦ (e (f x)).2) s := by\n  simp only [ContMDiffOn, ← forall_and]\n  exact forall₂_congr fun x hx ↦ e.contMDiffWithinAt_iff (he hx)\n\n"}
{"name":"Trivialization.contMDiff_iff","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝²⁰ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝¹⁹ : NormedAddCommGroup EB\ninst✝¹⁸ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁷ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁶ : TopologicalSpace B\ninst✝¹⁵ : ChartedSpace HB B\nEM : Type u_9\ninst✝¹⁴ : NormedAddCommGroup EM\ninst✝¹³ : NormedSpace 𝕜 EM\nHM : Type u_10\ninst✝¹² : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace HM M\ninst✝⁹ : (x : B) → AddCommMonoid (E x)\ninst✝⁸ : (x : B) → Module 𝕜 (E x)\ninst✝⁷ : NormedAddCommGroup F\ninst✝⁶ : NormedSpace 𝕜 F\ninst✝⁵ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁴ : (x : B) → TopologicalSpace (E x)\ninst✝³ : FiberBundle F E\ninst✝² : VectorBundle 𝕜 F E\ninst✝¹ : ContMDiffVectorBundle n F E IB\ne : Trivialization F Bundle.TotalSpace.proj\ninst✝ : MemTrivializationAtlas e\nf : M → Bundle.TotalSpace F E\nhe : ∀ (x : M), Membership.mem e.source (f x)\n⊢ Iff (ContMDiff IM (IB.prod (modelWithCornersSelf 𝕜 F)) n f) (And (ContMDiff IM IB n fun x => (f x).proj) (ContMDiff IM (modelWithCornersSelf 𝕜 F) n fun x => (↑e (f x)).2))","decl":"theorem Trivialization.contMDiff_iff {f : M → TotalSpace F E} (he : ∀ x, f x ∈ e.source) :\n    ContMDiff IM (IB.prod 𝓘(𝕜, F)) n f ↔\n      ContMDiff IM IB n (fun x => (f x).proj) ∧\n      ContMDiff IM 𝓘(𝕜, F) n (fun x ↦ (e (f x)).2) :=\n  (forall_congr' fun x ↦ e.contMDiffAt_iff (he x)).trans forall_and\n\n"}
{"name":"Trivialization.smoothWithinAt_iff","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝²⁰ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝¹⁹ : NormedAddCommGroup EB\ninst✝¹⁸ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁷ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁶ : TopologicalSpace B\ninst✝¹⁵ : ChartedSpace HB B\nEM : Type u_9\ninst✝¹⁴ : NormedAddCommGroup EM\ninst✝¹³ : NormedSpace 𝕜 EM\nHM : Type u_10\ninst✝¹² : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace HM M\ninst✝⁹ : (x : B) → AddCommMonoid (E x)\ninst✝⁸ : (x : B) → Module 𝕜 (E x)\ninst✝⁷ : NormedAddCommGroup F\ninst✝⁶ : NormedSpace 𝕜 F\ninst✝⁵ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁴ : (x : B) → TopologicalSpace (E x)\ninst✝³ : FiberBundle F E\ninst✝² : VectorBundle 𝕜 F E\ninst✝¹ : ContMDiffVectorBundle n F E IB\ne : Trivialization F Bundle.TotalSpace.proj\ninst✝ : MemTrivializationAtlas e\nf : M → Bundle.TotalSpace F E\ns : Set M\nx₀ : M\nhe : Membership.mem e.source (f x₀)\n⊢ Iff (ContMDiffWithinAt IM (IB.prod (modelWithCornersSelf 𝕜 F)) n f s x₀) (And (ContMDiffWithinAt IM IB n (fun x => (f x).proj) s x₀) (ContMDiffWithinAt IM (modelWithCornersSelf 𝕜 F) n (fun x => (↑e (f x)).2) s x₀))","decl":"@[deprecated (since := \"2024-11-21\")]\nalias Trivialization.smoothWithinAt_iff := Trivialization.contMDiffWithinAt_iff\n\n"}
{"name":"Trivialization.smoothAt_iff","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝²⁰ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝¹⁹ : NormedAddCommGroup EB\ninst✝¹⁸ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁷ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁶ : TopologicalSpace B\ninst✝¹⁵ : ChartedSpace HB B\nEM : Type u_9\ninst✝¹⁴ : NormedAddCommGroup EM\ninst✝¹³ : NormedSpace 𝕜 EM\nHM : Type u_10\ninst✝¹² : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace HM M\ninst✝⁹ : (x : B) → AddCommMonoid (E x)\ninst✝⁸ : (x : B) → Module 𝕜 (E x)\ninst✝⁷ : NormedAddCommGroup F\ninst✝⁶ : NormedSpace 𝕜 F\ninst✝⁵ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁴ : (x : B) → TopologicalSpace (E x)\ninst✝³ : FiberBundle F E\ninst✝² : VectorBundle 𝕜 F E\ninst✝¹ : ContMDiffVectorBundle n F E IB\ne : Trivialization F Bundle.TotalSpace.proj\ninst✝ : MemTrivializationAtlas e\nf : M → Bundle.TotalSpace F E\nx₀ : M\nhe : Membership.mem e.source (f x₀)\n⊢ Iff (ContMDiffAt IM (IB.prod (modelWithCornersSelf 𝕜 F)) n f x₀) (And (ContMDiffAt IM IB n (fun x => (f x).proj) x₀) (ContMDiffAt IM (modelWithCornersSelf 𝕜 F) n (fun x => (↑e (f x)).2) x₀))","decl":"@[deprecated (since := \"2024-11-21\")]\nalias Trivialization.smoothAt_iff := Trivialization.contMDiffAt_iff\n\n"}
{"name":"Trivialization.smoothOn_iff","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝²⁰ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝¹⁹ : NormedAddCommGroup EB\ninst✝¹⁸ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁷ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁶ : TopologicalSpace B\ninst✝¹⁵ : ChartedSpace HB B\nEM : Type u_9\ninst✝¹⁴ : NormedAddCommGroup EM\ninst✝¹³ : NormedSpace 𝕜 EM\nHM : Type u_10\ninst✝¹² : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace HM M\ninst✝⁹ : (x : B) → AddCommMonoid (E x)\ninst✝⁸ : (x : B) → Module 𝕜 (E x)\ninst✝⁷ : NormedAddCommGroup F\ninst✝⁶ : NormedSpace 𝕜 F\ninst✝⁵ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁴ : (x : B) → TopologicalSpace (E x)\ninst✝³ : FiberBundle F E\ninst✝² : VectorBundle 𝕜 F E\ninst✝¹ : ContMDiffVectorBundle n F E IB\ne : Trivialization F Bundle.TotalSpace.proj\ninst✝ : MemTrivializationAtlas e\nf : M → Bundle.TotalSpace F E\ns : Set M\nhe : Set.MapsTo f s e.source\n⊢ Iff (ContMDiffOn IM (IB.prod (modelWithCornersSelf 𝕜 F)) n f s) (And (ContMDiffOn IM IB n (fun x => (f x).proj) s) (ContMDiffOn IM (modelWithCornersSelf 𝕜 F) n (fun x => (↑e (f x)).2) s))","decl":"@[deprecated (since := \"2024-11-21\")]\nalias Trivialization.smoothOn_iff := Trivialization.contMDiffOn_iff\n\n"}
{"name":"Trivialization.smooth_iff","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nM : Type u_5\nE : B → Type u_6\ninst✝²⁰ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝¹⁹ : NormedAddCommGroup EB\ninst✝¹⁸ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁷ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁶ : TopologicalSpace B\ninst✝¹⁵ : ChartedSpace HB B\nEM : Type u_9\ninst✝¹⁴ : NormedAddCommGroup EM\ninst✝¹³ : NormedSpace 𝕜 EM\nHM : Type u_10\ninst✝¹² : TopologicalSpace HM\nIM : ModelWithCorners 𝕜 EM HM\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace HM M\ninst✝⁹ : (x : B) → AddCommMonoid (E x)\ninst✝⁸ : (x : B) → Module 𝕜 (E x)\ninst✝⁷ : NormedAddCommGroup F\ninst✝⁶ : NormedSpace 𝕜 F\ninst✝⁵ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁴ : (x : B) → TopologicalSpace (E x)\ninst✝³ : FiberBundle F E\ninst✝² : VectorBundle 𝕜 F E\ninst✝¹ : ContMDiffVectorBundle n F E IB\ne : Trivialization F Bundle.TotalSpace.proj\ninst✝ : MemTrivializationAtlas e\nf : M → Bundle.TotalSpace F E\nhe : ∀ (x : M), Membership.mem e.source (f x)\n⊢ Iff (ContMDiff IM (IB.prod (modelWithCornersSelf 𝕜 F)) n f) (And (ContMDiff IM IB n fun x => (f x).proj) (ContMDiff IM (modelWithCornersSelf 𝕜 F) n fun x => (↑e (f x)).2))","decl":"@[deprecated (since := \"2024-11-21\")]\nalias Trivialization.smooth_iff := Trivialization.contMDiff_iff\n\n"}
{"name":"Trivialization.contMDiffOn","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝¹⁴ : NormedAddCommGroup EB\ninst✝¹³ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹² : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹¹ : TopologicalSpace B\ninst✝¹⁰ : ChartedSpace HB B\ninst✝⁹ : (x : B) → AddCommMonoid (E x)\ninst✝⁸ : (x : B) → Module 𝕜 (E x)\ninst✝⁷ : NormedAddCommGroup F\ninst✝⁶ : NormedSpace 𝕜 F\ninst✝⁵ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁴ : (x : B) → TopologicalSpace (E x)\ninst✝³ : FiberBundle F E\ninst✝² : VectorBundle 𝕜 F E\ninst✝¹ : ContMDiffVectorBundle n F E IB\ne : Trivialization F Bundle.TotalSpace.proj\ninst✝ : MemTrivializationAtlas e\n⊢ ContMDiffOn (IB.prod (modelWithCornersSelf 𝕜 F)) (IB.prod (modelWithCornersSelf 𝕜 F)) n (↑e) e.source","decl":"theorem Trivialization.contMDiffOn (e : Trivialization F (π F E)) [MemTrivializationAtlas e] :\n    ContMDiffOn (IB.prod 𝓘(𝕜, F)) (IB.prod 𝓘(𝕜, F)) n e e.source := by\n  have : ContMDiffOn (IB.prod 𝓘(𝕜, F)) (IB.prod 𝓘(𝕜, F)) n id e.source := contMDiffOn_id\n  rw [e.contMDiffOn_iff (mapsTo_id _)] at this\n  exact (this.1.prod_mk this.2).congr fun x hx ↦ (e.mk_proj_snd hx).symm\n\n"}
{"name":"Trivialization.contMDiffOn_symm","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝¹⁴ : NormedAddCommGroup EB\ninst✝¹³ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹² : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹¹ : TopologicalSpace B\ninst✝¹⁰ : ChartedSpace HB B\ninst✝⁹ : (x : B) → AddCommMonoid (E x)\ninst✝⁸ : (x : B) → Module 𝕜 (E x)\ninst✝⁷ : NormedAddCommGroup F\ninst✝⁶ : NormedSpace 𝕜 F\ninst✝⁵ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁴ : (x : B) → TopologicalSpace (E x)\ninst✝³ : FiberBundle F E\ninst✝² : VectorBundle 𝕜 F E\ninst✝¹ : ContMDiffVectorBundle n F E IB\ne : Trivialization F Bundle.TotalSpace.proj\ninst✝ : MemTrivializationAtlas e\n⊢ ContMDiffOn (IB.prod (modelWithCornersSelf 𝕜 F)) (IB.prod (modelWithCornersSelf 𝕜 F)) n (↑e.symm) e.target","decl":"theorem Trivialization.contMDiffOn_symm (e : Trivialization F (π F E)) [MemTrivializationAtlas e] :\n    ContMDiffOn (IB.prod 𝓘(𝕜, F)) (IB.prod 𝓘(𝕜, F)) n e.toPartialHomeomorph.symm e.target := by\n  rw [e.contMDiffOn_iff e.toPartialHomeomorph.symm_mapsTo]\n  refine ⟨contMDiffOn_fst.congr fun x hx ↦ e.proj_symm_apply hx,\n    contMDiffOn_snd.congr fun x hx ↦ ?_⟩\n  rw [e.apply_symm_apply hx]\n\n"}
{"name":"Trivialization.smoothOn","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝¹⁴ : NormedAddCommGroup EB\ninst✝¹³ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹² : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹¹ : TopologicalSpace B\ninst✝¹⁰ : ChartedSpace HB B\ninst✝⁹ : (x : B) → AddCommMonoid (E x)\ninst✝⁸ : (x : B) → Module 𝕜 (E x)\ninst✝⁷ : NormedAddCommGroup F\ninst✝⁶ : NormedSpace 𝕜 F\ninst✝⁵ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁴ : (x : B) → TopologicalSpace (E x)\ninst✝³ : FiberBundle F E\ninst✝² : VectorBundle 𝕜 F E\ninst✝¹ : ContMDiffVectorBundle n F E IB\ne : Trivialization F Bundle.TotalSpace.proj\ninst✝ : MemTrivializationAtlas e\n⊢ ContMDiffOn (IB.prod (modelWithCornersSelf 𝕜 F)) (IB.prod (modelWithCornersSelf 𝕜 F)) n (↑e) e.source","decl":"@[deprecated (since := \"2024-11-21\")] alias Trivialization.smoothOn := Trivialization.contMDiffOn\n\n"}
{"name":"Trivialization.smoothOn_symm","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝¹⁴ : NormedAddCommGroup EB\ninst✝¹³ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹² : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹¹ : TopologicalSpace B\ninst✝¹⁰ : ChartedSpace HB B\ninst✝⁹ : (x : B) → AddCommMonoid (E x)\ninst✝⁸ : (x : B) → Module 𝕜 (E x)\ninst✝⁷ : NormedAddCommGroup F\ninst✝⁶ : NormedSpace 𝕜 F\ninst✝⁵ : TopologicalSpace (Bundle.TotalSpace F E)\ninst✝⁴ : (x : B) → TopologicalSpace (E x)\ninst✝³ : FiberBundle F E\ninst✝² : VectorBundle 𝕜 F E\ninst✝¹ : ContMDiffVectorBundle n F E IB\ne : Trivialization F Bundle.TotalSpace.proj\ninst✝ : MemTrivializationAtlas e\n⊢ ContMDiffOn (IB.prod (modelWithCornersSelf 𝕜 F)) (IB.prod (modelWithCornersSelf 𝕜 F)) n (↑e.symm) e.target","decl":"@[deprecated (since := \"2024-11-21\")]\nalias Trivialization.smoothOn_symm := Trivialization.contMDiffOn_symm\n\n"}
{"name":"VectorBundleCore.IsContMDiff.contMDiffOn_coordChange","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\ninst✝⁷ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝⁶ : NormedAddCommGroup EB\ninst✝⁵ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝⁴ : TopologicalSpace HB\ninst✝³ : TopologicalSpace B\ninst✝² : ChartedSpace HB B\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nι : Type u_11\nZ : VectorBundleCore 𝕜 B F ι\nIB : ModelWithCorners 𝕜 EB HB\nn : WithTop ENat\nself : Z.IsContMDiff IB n\ni j : ι\n⊢ ContMDiffOn IB (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F F)) n (Z.coordChange i j) (Inter.inter (Z.baseSet i) (Z.baseSet j))","decl":"/-- Mixin for a `VectorBundleCore` stating that transition functions are `C^n`. -/\nclass IsContMDiff (IB : ModelWithCorners 𝕜 EB HB) (n : WithTop ℕ∞) : Prop where\n  contMDiffOn_coordChange :\n    ∀ i j, ContMDiffOn IB 𝓘(𝕜, F →L[𝕜] F) n (Z.coordChange i j) (Z.baseSet i ∩ Z.baseSet j)\n\n"}
{"name":"VectorBundleCore.contMDiffOn_coordChange","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\ninst✝⁷ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝⁶ : NormedAddCommGroup EB\ninst✝⁵ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝⁴ : TopologicalSpace HB\ninst✝³ : TopologicalSpace B\ninst✝² : ChartedSpace HB B\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nι : Type u_11\nZ : VectorBundleCore 𝕜 B F ι\nIB : ModelWithCorners 𝕜 EB HB\nh : Z.IsContMDiff IB n\ni j : ι\n⊢ ContMDiffOn IB (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F F)) n (Z.coordChange i j) (Inter.inter (Z.baseSet i) (Z.baseSet j))","decl":"theorem contMDiffOn_coordChange (IB : ModelWithCorners 𝕜 EB HB) [h : Z.IsContMDiff IB n] (i j : ι) :\n    ContMDiffOn IB 𝓘(𝕜, F →L[𝕜] F) n (Z.coordChange i j) (Z.baseSet i ∩ Z.baseSet j) :=\n  h.1 i j\n\n"}
{"name":"VectorBundleCore.smoothOn_coordChange","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\ninst✝⁷ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝⁶ : NormedAddCommGroup EB\ninst✝⁵ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝⁴ : TopologicalSpace HB\ninst✝³ : TopologicalSpace B\ninst✝² : ChartedSpace HB B\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nι : Type u_11\nZ : VectorBundleCore 𝕜 B F ι\nIB : ModelWithCorners 𝕜 EB HB\nh : Z.IsContMDiff IB n\ni j : ι\n⊢ ContMDiffOn IB (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F F)) n (Z.coordChange i j) (Inter.inter (Z.baseSet i) (Z.baseSet j))","decl":"@[deprecated (since := \"2024-11-21\")]\nalias smoothOn_coordChange := contMDiffOn_coordChange\n\n"}
{"name":"VectorBundleCore.instContMDiffVectorBundle","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\ninst✝⁷ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝⁶ : NormedAddCommGroup EB\ninst✝⁵ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝⁴ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝³ : TopologicalSpace B\ninst✝² : ChartedSpace HB B\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nι : Type u_11\nZ : VectorBundleCore 𝕜 B F ι\n⊢ ContMDiffVectorBundle n F Z.Fiber IB","decl":"/-- If a `VectorBundleCore` has the `IsContMDiff` mixin, then the vector bundle constructed from it\nis a `C^n` vector bundle. -/\ninstance instContMDiffVectorBundle : ContMDiffVectorBundle n F Z.Fiber IB where\n  contMDiffOn_coordChangeL := by\n    rintro - - ⟨i, rfl⟩ ⟨i', rfl⟩\n    refine (Z.contMDiffOn_coordChange IB i i').congr fun b hb ↦ ?_\n    ext v\n    exact Z.localTriv_coordChange_eq i i' hb v\n\n"}
{"name":"Bundle.Trivial.contMDiffVectorBundle","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\ninst✝⁷ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝⁶ : NormedAddCommGroup EB\ninst✝⁵ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝⁴ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝³ : TopologicalSpace B\ninst✝² : ChartedSpace HB B\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\n⊢ ContMDiffVectorBundle n F (Bundle.Trivial B F) IB","decl":"/-- A trivial vector bundle over a manifold is a `C^n` vector bundle. -/\ninstance Bundle.Trivial.contMDiffVectorBundle :\n    ContMDiffVectorBundle n F (Bundle.Trivial B F) IB where\n  contMDiffOn_coordChangeL := by\n    intro e e' he he'\n    obtain rfl := Bundle.Trivial.eq_trivialization B F e\n    obtain rfl := Bundle.Trivial.eq_trivialization B F e'\n    simp_rw [Bundle.Trivial.trivialization.coordChangeL]\n    exact contMDiff_const.contMDiffOn\n\n"}
{"name":"Bundle.Prod.contMDiffVectorBundle","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\ninst✝²¹ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝²⁰ : NormedAddCommGroup EB\ninst✝¹⁹ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝¹⁸ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝¹⁷ : TopologicalSpace B\ninst✝¹⁶ : ChartedSpace HB B\nF₁ : Type u_11\ninst✝¹⁵ : NormedAddCommGroup F₁\ninst✝¹⁴ : NormedSpace 𝕜 F₁\nE₁ : B → Type u_12\ninst✝¹³ : TopologicalSpace (Bundle.TotalSpace F₁ E₁)\ninst✝¹² : (x : B) → AddCommMonoid (E₁ x)\ninst✝¹¹ : (x : B) → Module 𝕜 (E₁ x)\nF₂ : Type u_13\ninst✝¹⁰ : NormedAddCommGroup F₂\ninst✝⁹ : NormedSpace 𝕜 F₂\nE₂ : B → Type u_14\ninst✝⁸ : TopologicalSpace (Bundle.TotalSpace F₂ E₂)\ninst✝⁷ : (x : B) → AddCommMonoid (E₂ x)\ninst✝⁶ : (x : B) → Module 𝕜 (E₂ x)\ninst✝⁵ : (x : B) → TopologicalSpace (E₁ x)\ninst✝⁴ : (x : B) → TopologicalSpace (E₂ x)\ninst✝³ : FiberBundle F₁ E₁\ninst✝² : FiberBundle F₂ E₂\ninst✝¹ : VectorBundle 𝕜 F₁ E₁\ninst✝ : VectorBundle 𝕜 F₂ E₂\n⊢ ContMDiffVectorBundle n (Prod F₁ F₂) (fun x => Prod (E₁ x) (E₂ x)) IB","decl":"/-- The direct sum of two `C^n` vector bundles over the same base is a `C^n` vector bundle. -/\ninstance Bundle.Prod.contMDiffVectorBundle : ContMDiffVectorBundle n (F₁ × F₂) (E₁ ×ᵇ E₂) IB where\n  contMDiffOn_coordChangeL := by\n    rintro _ _ ⟨e₁, e₂, i₁, i₂, rfl⟩ ⟨e₁', e₂', i₁', i₂', rfl⟩\n    refine ContMDiffOn.congr ?_ (e₁.coordChangeL_prod 𝕜 e₁' e₂ e₂')\n    refine ContMDiffOn.clm_prodMap ?_ ?_\n    · refine (contMDiffOn_coordChangeL e₁ e₁').mono ?_\n      simp only [Trivialization.baseSet_prod, mfld_simps]\n      mfld_set_tac\n    · refine (contMDiffOn_coordChangeL e₂ e₂').mono ?_\n      simp only [Trivialization.baseSet_prod, mfld_simps]\n      mfld_set_tac\n\n"}
{"name":"VectorPrebundle.IsContMDiff.exists_contMDiffCoordChange","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝⁹ : NormedAddCommGroup EB\ninst✝⁸ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝⁷ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝⁶ : TopologicalSpace B\ninst✝⁵ : ChartedSpace HB B\ninst✝⁴ : (x : B) → AddCommMonoid (E x)\ninst✝³ : (x : B) → Module 𝕜 (E x)\ninst✝² : NormedAddCommGroup F\ninst✝¹ : NormedSpace 𝕜 F\ninst✝ : (x : B) → TopologicalSpace (E x)\na : VectorPrebundle 𝕜 F E\nn : WithTop ENat\nself : VectorPrebundle.IsContMDiff IB a n\ne : Pretrivialization F Bundle.TotalSpace.proj\na✝¹ : Membership.mem a.pretrivializationAtlas e\ne' : Pretrivialization F Bundle.TotalSpace.proj\na✝ : Membership.mem a.pretrivializationAtlas e'\n⊢ Exists fun f => And (ContMDiffOn IB (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F F)) n f (Inter.inter e.baseSet e'.baseSet)) (∀ (b : B), Membership.mem (Inter.inter e.baseSet e'.baseSet) b → ∀ (v : F), Eq ((f b) v) (↑e' { proj := b, snd := e.symm b v }).2)","decl":"variable (IB) in\n/-- Mixin for a `VectorPrebundle` stating that coordinate changes are `C^n`. -/\nclass IsContMDiff (a : VectorPrebundle 𝕜 F E) (n : WithTop ℕ∞) : Prop where\n  exists_contMDiffCoordChange :\n    ∀ᵉ (e ∈ a.pretrivializationAtlas) (e' ∈ a.pretrivializationAtlas),\n      ∃ f : B → F →L[𝕜] F,\n        ContMDiffOn IB 𝓘(𝕜, F →L[𝕜] F) n f (e.baseSet ∩ e'.baseSet) ∧\n          ∀ (b : B) (_ : b ∈ e.baseSet ∩ e'.baseSet) (v : F),\n            f b v = (e' ⟨b, e.symm b v⟩).2\n\n"}
{"name":"VectorPrebundle.contMDiffOn_contMDiffCoordChange","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝⁹ : NormedAddCommGroup EB\ninst✝⁸ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝⁷ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝⁶ : TopologicalSpace B\ninst✝⁵ : ChartedSpace HB B\ninst✝⁴ : (x : B) → AddCommMonoid (E x)\ninst✝³ : (x : B) → Module 𝕜 (E x)\ninst✝² : NormedAddCommGroup F\ninst✝¹ : NormedSpace 𝕜 F\ninst✝ : (x : B) → TopologicalSpace (E x)\na : VectorPrebundle 𝕜 F E\nha : VectorPrebundle.IsContMDiff IB a n\ne e' : Pretrivialization F Bundle.TotalSpace.proj\nhe : Membership.mem a.pretrivializationAtlas e\nhe' : Membership.mem a.pretrivializationAtlas e'\n⊢ ContMDiffOn IB (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F F)) n (VectorPrebundle.contMDiffCoordChange n IB a he he') (Inter.inter e.baseSet e'.baseSet)","decl":"theorem contMDiffOn_contMDiffCoordChange (he : e ∈ a.pretrivializationAtlas)\n    (he' : e' ∈ a.pretrivializationAtlas) :\n    ContMDiffOn IB 𝓘(𝕜, F →L[𝕜] F) n (a.contMDiffCoordChange n IB he he')\n      (e.baseSet ∩ e'.baseSet) :=\n  (Classical.choose_spec (ha.exists_contMDiffCoordChange e he e' he')).1\n\n"}
{"name":"VectorPrebundle.contMDiffOn_smoothCoordChange","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝⁹ : NormedAddCommGroup EB\ninst✝⁸ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝⁷ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝⁶ : TopologicalSpace B\ninst✝⁵ : ChartedSpace HB B\ninst✝⁴ : (x : B) → AddCommMonoid (E x)\ninst✝³ : (x : B) → Module 𝕜 (E x)\ninst✝² : NormedAddCommGroup F\ninst✝¹ : NormedSpace 𝕜 F\ninst✝ : (x : B) → TopologicalSpace (E x)\na : VectorPrebundle 𝕜 F E\nha : VectorPrebundle.IsContMDiff IB a n\ne e' : Pretrivialization F Bundle.TotalSpace.proj\nhe : Membership.mem a.pretrivializationAtlas e\nhe' : Membership.mem a.pretrivializationAtlas e'\n⊢ ContMDiffOn IB (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F F)) n (VectorPrebundle.contMDiffCoordChange n IB a he he') (Inter.inter e.baseSet e'.baseSet)","decl":"@[deprecated (since := \"2025-01-09\")]\nalias contMDiffOn_smoothCoordChange := contMDiffOn_contMDiffCoordChange\n\n"}
{"name":"VectorPrebundle.smoothOn_smoothCoordChange","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝⁹ : NormedAddCommGroup EB\ninst✝⁸ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝⁷ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝⁶ : TopologicalSpace B\ninst✝⁵ : ChartedSpace HB B\ninst✝⁴ : (x : B) → AddCommMonoid (E x)\ninst✝³ : (x : B) → Module 𝕜 (E x)\ninst✝² : NormedAddCommGroup F\ninst✝¹ : NormedSpace 𝕜 F\ninst✝ : (x : B) → TopologicalSpace (E x)\na : VectorPrebundle 𝕜 F E\nha : VectorPrebundle.IsContMDiff IB a n\ne e' : Pretrivialization F Bundle.TotalSpace.proj\nhe : Membership.mem a.pretrivializationAtlas e\nhe' : Membership.mem a.pretrivializationAtlas e'\n⊢ ContMDiffOn IB (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F F)) n (VectorPrebundle.contMDiffCoordChange n IB a he he') (Inter.inter e.baseSet e'.baseSet)","decl":"@[deprecated (since := \"2024-11-21\")]\nalias smoothOn_smoothCoordChange := contMDiffOn_contMDiffCoordChange\n\n"}
{"name":"VectorPrebundle.contMDiffCoordChange_apply","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝⁹ : NormedAddCommGroup EB\ninst✝⁸ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝⁷ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝⁶ : TopologicalSpace B\ninst✝⁵ : ChartedSpace HB B\ninst✝⁴ : (x : B) → AddCommMonoid (E x)\ninst✝³ : (x : B) → Module 𝕜 (E x)\ninst✝² : NormedAddCommGroup F\ninst✝¹ : NormedSpace 𝕜 F\ninst✝ : (x : B) → TopologicalSpace (E x)\na : VectorPrebundle 𝕜 F E\nha : VectorPrebundle.IsContMDiff IB a n\ne e' : Pretrivialization F Bundle.TotalSpace.proj\nhe : Membership.mem a.pretrivializationAtlas e\nhe' : Membership.mem a.pretrivializationAtlas e'\nb : B\nhb : Membership.mem (Inter.inter e.baseSet e'.baseSet) b\nv : F\n⊢ Eq ((VectorPrebundle.contMDiffCoordChange n IB a he he' b) v) (↑e' { proj := b, snd := e.symm b v }).2","decl":"theorem contMDiffCoordChange_apply (he : e ∈ a.pretrivializationAtlas)\n    (he' : e' ∈ a.pretrivializationAtlas) {b : B} (hb : b ∈ e.baseSet ∩ e'.baseSet) (v : F) :\n    a.contMDiffCoordChange n IB he he' b v = (e' ⟨b, e.symm b v⟩).2 :=\n  (Classical.choose_spec (ha.exists_contMDiffCoordChange e he e' he')).2 b hb v\n\n"}
{"name":"VectorPrebundle.smoothCoordChange_apply","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝⁹ : NormedAddCommGroup EB\ninst✝⁸ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝⁷ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝⁶ : TopologicalSpace B\ninst✝⁵ : ChartedSpace HB B\ninst✝⁴ : (x : B) → AddCommMonoid (E x)\ninst✝³ : (x : B) → Module 𝕜 (E x)\ninst✝² : NormedAddCommGroup F\ninst✝¹ : NormedSpace 𝕜 F\ninst✝ : (x : B) → TopologicalSpace (E x)\na : VectorPrebundle 𝕜 F E\nha : VectorPrebundle.IsContMDiff IB a n\ne e' : Pretrivialization F Bundle.TotalSpace.proj\nhe : Membership.mem a.pretrivializationAtlas e\nhe' : Membership.mem a.pretrivializationAtlas e'\nb : B\nhb : Membership.mem (Inter.inter e.baseSet e'.baseSet) b\nv : F\n⊢ Eq ((VectorPrebundle.contMDiffCoordChange n IB a he he' b) v) (↑e' { proj := b, snd := e.symm b v }).2","decl":"@[deprecated (since := \"2025-01-09\")] alias smoothCoordChange_apply := contMDiffCoordChange_apply\n\n"}
{"name":"VectorPrebundle.mk_contMDiffCoordChange","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝⁹ : NormedAddCommGroup EB\ninst✝⁸ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝⁷ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝⁶ : TopologicalSpace B\ninst✝⁵ : ChartedSpace HB B\ninst✝⁴ : (x : B) → AddCommMonoid (E x)\ninst✝³ : (x : B) → Module 𝕜 (E x)\ninst✝² : NormedAddCommGroup F\ninst✝¹ : NormedSpace 𝕜 F\ninst✝ : (x : B) → TopologicalSpace (E x)\na : VectorPrebundle 𝕜 F E\nha : VectorPrebundle.IsContMDiff IB a n\ne e' : Pretrivialization F Bundle.TotalSpace.proj\nhe : Membership.mem a.pretrivializationAtlas e\nhe' : Membership.mem a.pretrivializationAtlas e'\nb : B\nhb : Membership.mem (Inter.inter e.baseSet e'.baseSet) b\nv : F\n⊢ Eq { fst := b, snd := (VectorPrebundle.contMDiffCoordChange n IB a he he' b) v } (↑e' { proj := b, snd := e.symm b v })","decl":"theorem mk_contMDiffCoordChange (he : e ∈ a.pretrivializationAtlas)\n    (he' : e' ∈ a.pretrivializationAtlas) {b : B} (hb : b ∈ e.baseSet ∩ e'.baseSet) (v : F) :\n    (b, a.contMDiffCoordChange n IB he he' b v) = e' ⟨b, e.symm b v⟩ := by\n  ext\n  · rw [e.mk_symm hb.1 v, e'.coe_fst', e.proj_symm_apply' hb.1]\n    rw [e.proj_symm_apply' hb.1]; exact hb.2\n  · exact a.contMDiffCoordChange_apply he he' hb v\n\n"}
{"name":"VectorPrebundle.mk_smoothCoordChange","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝⁹ : NormedAddCommGroup EB\ninst✝⁸ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝⁷ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝⁶ : TopologicalSpace B\ninst✝⁵ : ChartedSpace HB B\ninst✝⁴ : (x : B) → AddCommMonoid (E x)\ninst✝³ : (x : B) → Module 𝕜 (E x)\ninst✝² : NormedAddCommGroup F\ninst✝¹ : NormedSpace 𝕜 F\ninst✝ : (x : B) → TopologicalSpace (E x)\na : VectorPrebundle 𝕜 F E\nha : VectorPrebundle.IsContMDiff IB a n\ne e' : Pretrivialization F Bundle.TotalSpace.proj\nhe : Membership.mem a.pretrivializationAtlas e\nhe' : Membership.mem a.pretrivializationAtlas e'\nb : B\nhb : Membership.mem (Inter.inter e.baseSet e'.baseSet) b\nv : F\n⊢ Eq { fst := b, snd := (VectorPrebundle.contMDiffCoordChange n IB a he he' b) v } (↑e' { proj := b, snd := e.symm b v })","decl":"@[deprecated (since := \"2025-01-09\")] alias mk_smoothCoordChange := mk_contMDiffCoordChange\n\n"}
{"name":"VectorPrebundle.contMDiffVectorBundle","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝⁹ : NormedAddCommGroup EB\ninst✝⁸ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝⁷ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝⁶ : TopologicalSpace B\ninst✝⁵ : ChartedSpace HB B\ninst✝⁴ : (x : B) → AddCommMonoid (E x)\ninst✝³ : (x : B) → Module 𝕜 (E x)\ninst✝² : NormedAddCommGroup F\ninst✝¹ : NormedSpace 𝕜 F\ninst✝ : (x : B) → TopologicalSpace (E x)\na : VectorPrebundle 𝕜 F E\nha : VectorPrebundle.IsContMDiff IB a n\n⊢ ContMDiffVectorBundle n F E IB","decl":"variable (IB) in\n/-- Make a `ContMDiffVectorBundle` from a `ContMDiffVectorPrebundle`. -/\ntheorem contMDiffVectorBundle : @ContMDiffVectorBundle n\n    _ _ F E _ _ _ _ _ _ IB _ _ _ _ _ _ a.totalSpaceTopology _ a.toFiberBundle a.toVectorBundle :=\n  letI := a.totalSpaceTopology; letI := a.toFiberBundle; letI := a.toVectorBundle\n  { contMDiffOn_coordChangeL := by\n      rintro _ _ ⟨e, he, rfl⟩ ⟨e', he', rfl⟩\n      refine (a.contMDiffOn_contMDiffCoordChange he he').congr ?_\n      intro b hb\n      ext v\n      rw [a.contMDiffCoordChange_apply he he' hb v, ContinuousLinearEquiv.coe_coe,\n        Trivialization.coordChangeL_apply]\n      exacts [rfl, hb] }\n\n"}
{"name":"VectorPrebundle.smoothVectorBundle","module":"Mathlib.Geometry.Manifold.VectorBundle.Basic","initialProofState":"n : WithTop ENat\n𝕜 : Type u_1\nB : Type u_2\nF : Type u_4\nE : B → Type u_6\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nEB : Type u_7\ninst✝⁹ : NormedAddCommGroup EB\ninst✝⁸ : NormedSpace 𝕜 EB\nHB : Type u_8\ninst✝⁷ : TopologicalSpace HB\nIB : ModelWithCorners 𝕜 EB HB\ninst✝⁶ : TopologicalSpace B\ninst✝⁵ : ChartedSpace HB B\ninst✝⁴ : (x : B) → AddCommMonoid (E x)\ninst✝³ : (x : B) → Module 𝕜 (E x)\ninst✝² : NormedAddCommGroup F\ninst✝¹ : NormedSpace 𝕜 F\ninst✝ : (x : B) → TopologicalSpace (E x)\na : VectorPrebundle 𝕜 F E\nha : VectorPrebundle.IsContMDiff IB a n\n⊢ ContMDiffVectorBundle n F E IB","decl":"@[deprecated (since := \"2025-01-09\")] alias smoothVectorBundle := contMDiffVectorBundle\n\n"}
