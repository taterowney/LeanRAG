{"name":"SeparationQuotient.exists_out_continuousLinearMap","module":"Mathlib.Topology.Algebra.SeparationQuotient.Section","initialProofState":"K : Type u_1\nE : Type u_2\ninst✝⁵ : DivisionRing K\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module K E\ninst✝² : TopologicalSpace E\ninst✝¹ : TopologicalAddGroup E\ninst✝ : ContinuousConstSMul K E\n⊢ Exists fun f => Eq ((SeparationQuotient.mkCLM K E).comp f) (ContinuousLinearMap.id K (SeparationQuotient E))","decl":"/-- There exists a continuous `K`-linear map from `SeparationQuotient E` to `E`\nsuch that `mk (outCLM x) = x` for all `x`.\n\nNote that continuity of this map comes for free, because `mk` is a topology inducing map.\n-/\ntheorem exists_out_continuousLinearMap :\n    ∃ f : SeparationQuotient E →L[K] E, mkCLM K E ∘L f = .id K (SeparationQuotient E) := by\n  rcases (mkCLM K E).toLinearMap.exists_rightInverse_of_surjective\n    (LinearMap.range_eq_top.mpr surjective_mk) with ⟨f, hf⟩\n  replace hf : mk ∘ f = id := congr_arg DFunLike.coe hf\n  exact ⟨⟨f, isInducing_mk.continuous_iff.2 (by continuity)⟩, DFunLike.ext' hf⟩\n\n"}
{"name":"SeparationQuotient.mkCLM_comp_outCLM","module":"Mathlib.Topology.Algebra.SeparationQuotient.Section","initialProofState":"K : Type u_1\nE : Type u_2\ninst✝⁵ : DivisionRing K\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module K E\ninst✝² : TopologicalSpace E\ninst✝¹ : TopologicalAddGroup E\ninst✝ : ContinuousConstSMul K E\n⊢ Eq ((SeparationQuotient.mkCLM K E).comp (SeparationQuotient.outCLM K E)) (ContinuousLinearMap.id K (SeparationQuotient E))","decl":"@[simp]\ntheorem mkCLM_comp_outCLM : mkCLM K E ∘L outCLM K E = .id K (SeparationQuotient E) :=\n  (exists_out_continuousLinearMap K E).choose_spec\n\n"}
{"name":"SeparationQuotient.mk_outCLM","module":"Mathlib.Topology.Algebra.SeparationQuotient.Section","initialProofState":"K : Type u_1\nE : Type u_2\ninst✝⁵ : DivisionRing K\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module K E\ninst✝² : TopologicalSpace E\ninst✝¹ : TopologicalAddGroup E\ninst✝ : ContinuousConstSMul K E\nx : SeparationQuotient E\n⊢ Eq (SeparationQuotient.mk ((SeparationQuotient.outCLM K E) x)) x","decl":"variable {E} in\n@[simp]\ntheorem mk_outCLM (x : SeparationQuotient E) : mk (outCLM K E x) = x :=\n  DFunLike.congr_fun (mkCLM_comp_outCLM K E) x\n\n"}
{"name":"SeparationQuotient.mk_comp_outCLM","module":"Mathlib.Topology.Algebra.SeparationQuotient.Section","initialProofState":"K : Type u_1\nE : Type u_2\ninst✝⁵ : DivisionRing K\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module K E\ninst✝² : TopologicalSpace E\ninst✝¹ : TopologicalAddGroup E\ninst✝ : ContinuousConstSMul K E\n⊢ Eq (Function.comp SeparationQuotient.mk ⇑(SeparationQuotient.outCLM K E)) id","decl":"@[simp]\ntheorem mk_comp_outCLM : mk ∘ outCLM K E = id := funext (mk_outCLM K)\n\n"}
{"name":"SeparationQuotient.postcomp_mkCLM_surjective","module":"Mathlib.Topology.Algebra.SeparationQuotient.Section","initialProofState":"K : Type u_1\nE : Type u_2\ninst✝⁹ : DivisionRing K\ninst✝⁸ : AddCommGroup E\ninst✝⁷ : Module K E\ninst✝⁶ : TopologicalSpace E\ninst✝⁵ : TopologicalAddGroup E\ninst✝⁴ : ContinuousConstSMul K E\nL : Type u_3\ninst✝³ : Semiring L\nσ : RingHom L K\nF : Type u_4\ninst✝² : AddCommMonoid F\ninst✝¹ : Module L F\ninst✝ : TopologicalSpace F\n⊢ Function.Surjective (SeparationQuotient.mkCLM K E).comp","decl":"variable {K} in\ntheorem postcomp_mkCLM_surjective {L : Type*} [Semiring L] (σ : L →+* K)\n    (F : Type*) [AddCommMonoid F] [Module L F] [TopologicalSpace F] :\n    Function.Surjective ((mkCLM K E).comp : (F →SL[σ] E) → (F →SL[σ] SeparationQuotient E)) := by\n  intro f\n  use (outCLM K E).comp f\n  rw [← ContinuousLinearMap.comp_assoc, mkCLM_comp_outCLM, ContinuousLinearMap.id_comp]\n\n"}
{"name":"SeparationQuotient.isEmbedding_outCLM","module":"Mathlib.Topology.Algebra.SeparationQuotient.Section","initialProofState":"K : Type u_1\nE : Type u_2\ninst✝⁵ : DivisionRing K\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module K E\ninst✝² : TopologicalSpace E\ninst✝¹ : TopologicalAddGroup E\ninst✝ : ContinuousConstSMul K E\n⊢ Topology.IsEmbedding ⇑(SeparationQuotient.outCLM K E)","decl":"/-- The `SeparationQuotient.outCLM K E` map is a topological embedding. -/\ntheorem isEmbedding_outCLM : IsEmbedding (outCLM K E) :=\n  Function.LeftInverse.isEmbedding (mk_outCLM K) continuous_mk (map_continuous _)\n\n"}
{"name":"SeparationQuotient.outCLM_embedding","module":"Mathlib.Topology.Algebra.SeparationQuotient.Section","initialProofState":"K : Type u_1\nE : Type u_2\ninst✝⁵ : DivisionRing K\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module K E\ninst✝² : TopologicalSpace E\ninst✝¹ : TopologicalAddGroup E\ninst✝ : ContinuousConstSMul K E\n⊢ Topology.IsEmbedding ⇑(SeparationQuotient.outCLM K E)","decl":"@[deprecated (since := \"2024-10-26\")]\nalias outCLM_embedding := isEmbedding_outCLM\n\n"}
{"name":"SeparationQuotient.outCLM_injective","module":"Mathlib.Topology.Algebra.SeparationQuotient.Section","initialProofState":"K : Type u_1\nE : Type u_2\ninst✝⁵ : DivisionRing K\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module K E\ninst✝² : TopologicalSpace E\ninst✝¹ : TopologicalAddGroup E\ninst✝ : ContinuousConstSMul K E\n⊢ Function.Injective ⇑(SeparationQuotient.outCLM K E)","decl":"theorem outCLM_injective : Function.Injective (outCLM K E) :=\n  (isEmbedding_outCLM K E).injective\n\n"}
{"name":"SeparationQuotient.outCLM_isUniformInducing","module":"Mathlib.Topology.Algebra.SeparationQuotient.Section","initialProofState":"K : Type u_1\nE : Type u_2\ninst✝⁵ : DivisionRing K\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module K E\ninst✝² : UniformSpace E\ninst✝¹ : UniformAddGroup E\ninst✝ : ContinuousConstSMul K E\n⊢ IsUniformInducing ⇑(SeparationQuotient.outCLM K E)","decl":"theorem outCLM_isUniformInducing : IsUniformInducing (outCLM K E) := by\n  rw [← isUniformInducing_mk.isUniformInducing_comp_iff, mk_comp_outCLM]\n  exact .id\n\n"}
{"name":"SeparationQuotient.outCLM_uniformInducing","module":"Mathlib.Topology.Algebra.SeparationQuotient.Section","initialProofState":"K : Type u_1\nE : Type u_2\ninst✝⁵ : DivisionRing K\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module K E\ninst✝² : UniformSpace E\ninst✝¹ : UniformAddGroup E\ninst✝ : ContinuousConstSMul K E\n⊢ IsUniformInducing ⇑(SeparationQuotient.outCLM K E)","decl":"@[deprecated (since := \"2024-10-05\")]\nalias outCLM_uniformInducing := outCLM_isUniformInducing\n\n"}
{"name":"SeparationQuotient.outCLM_isUniformEmbedding","module":"Mathlib.Topology.Algebra.SeparationQuotient.Section","initialProofState":"K : Type u_1\nE : Type u_2\ninst✝⁵ : DivisionRing K\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module K E\ninst✝² : UniformSpace E\ninst✝¹ : UniformAddGroup E\ninst✝ : ContinuousConstSMul K E\n⊢ IsUniformEmbedding ⇑(SeparationQuotient.outCLM K E)","decl":"theorem outCLM_isUniformEmbedding : IsUniformEmbedding (outCLM K E) where\n  injective := outCLM_injective K E\n  toIsUniformInducing := outCLM_isUniformInducing K E\n\n"}
{"name":"SeparationQuotient.outCLM_uniformEmbedding","module":"Mathlib.Topology.Algebra.SeparationQuotient.Section","initialProofState":"K : Type u_1\nE : Type u_2\ninst✝⁵ : DivisionRing K\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module K E\ninst✝² : UniformSpace E\ninst✝¹ : UniformAddGroup E\ninst✝ : ContinuousConstSMul K E\n⊢ IsUniformEmbedding ⇑(SeparationQuotient.outCLM K E)","decl":"@[deprecated (since := \"2024-10-01\")]\nalias outCLM_uniformEmbedding := outCLM_isUniformEmbedding\n\n"}
{"name":"SeparationQuotient.outCLM_uniformContinuous","module":"Mathlib.Topology.Algebra.SeparationQuotient.Section","initialProofState":"K : Type u_1\nE : Type u_2\ninst✝⁵ : DivisionRing K\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module K E\ninst✝² : UniformSpace E\ninst✝¹ : UniformAddGroup E\ninst✝ : ContinuousConstSMul K E\n⊢ UniformContinuous ⇑(SeparationQuotient.outCLM K E)","decl":"theorem outCLM_uniformContinuous : UniformContinuous (outCLM K E) :=\n  (outCLM_isUniformInducing K E).uniformContinuous\n\n"}
