{"name":"SemilatSupCat.mk.injEq","module":"Mathlib.Order.Category.Semilat","initialProofState":"X✝ : Type u\nisSemilatticeSup✝ : SemilatticeSup X✝\nisOrderBot✝ : OrderBot X✝\nX : Type u\nisSemilatticeSup : SemilatticeSup X\nisOrderBot : OrderBot X\n⊢ Eq (Eq (SemilatSupCat.mk X✝) (SemilatSupCat.mk X)) (And (Eq X✝ X) (And (HEq isSemilatticeSup✝ isSemilatticeSup) (HEq isOrderBot✝ isOrderBot)))","decl":"/-- The category of sup-semilattices with a bottom element. -/\nstructure SemilatSupCat : Type (u + 1) where\n  /-- The underlying type of a sup-semilattice with a bottom element. -/\n  protected X : Type u\n  [isSemilatticeSup : SemilatticeSup X]\n  [isOrderBot : OrderBot.{u} X]\n\n"}
{"name":"SemilatSupCat.mk.sizeOf_spec","module":"Mathlib.Order.Category.Semilat","initialProofState":"X : Type u\nisSemilatticeSup : SemilatticeSup X\nisOrderBot : OrderBot X\n⊢ Eq (SizeOf.sizeOf (SemilatSupCat.mk X)) (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd 1 (SizeOf.sizeOf X)) (SizeOf.sizeOf isSemilatticeSup)) (SizeOf.sizeOf isOrderBot))","decl":"/-- The category of sup-semilattices with a bottom element. -/\nstructure SemilatSupCat : Type (u + 1) where\n  /-- The underlying type of a sup-semilattice with a bottom element. -/\n  protected X : Type u\n  [isSemilatticeSup : SemilatticeSup X]\n  [isOrderBot : OrderBot.{u} X]\n\n"}
{"name":"SemilatSupCat.mk.inj","module":"Mathlib.Order.Category.Semilat","initialProofState":"X✝ : Type u\nisSemilatticeSup✝ : SemilatticeSup X✝\nisOrderBot✝ : OrderBot X✝\nX : Type u\nisSemilatticeSup : SemilatticeSup X\nisOrderBot : OrderBot X\nx✝ : Eq (SemilatSupCat.mk X✝) (SemilatSupCat.mk X)\n⊢ And (Eq X✝ X) (And (HEq isSemilatticeSup✝ isSemilatticeSup) (HEq isOrderBot✝ isOrderBot))","decl":"/-- The category of sup-semilattices with a bottom element. -/\nstructure SemilatSupCat : Type (u + 1) where\n  /-- The underlying type of a sup-semilattice with a bottom element. -/\n  protected X : Type u\n  [isSemilatticeSup : SemilatticeSup X]\n  [isOrderBot : OrderBot.{u} X]\n\n"}
{"name":"SemilatInfCat.mk.inj","module":"Mathlib.Order.Category.Semilat","initialProofState":"X✝ : Type u\nisSemilatticeInf✝ : SemilatticeInf X✝\nisOrderTop✝ : OrderTop X✝\nX : Type u\nisSemilatticeInf : SemilatticeInf X\nisOrderTop : OrderTop X\nx✝ : Eq (SemilatInfCat.mk X✝) (SemilatInfCat.mk X)\n⊢ And (Eq X✝ X) (And (HEq isSemilatticeInf✝ isSemilatticeInf) (HEq isOrderTop✝ isOrderTop))","decl":"/-- The category of inf-semilattices with a top element. -/\nstructure SemilatInfCat : Type (u + 1) where\n  /-- The underlying type of an inf-semilattice with a top element. -/\n  protected X : Type u\n  [isSemilatticeInf : SemilatticeInf X]\n  [isOrderTop : OrderTop.{u} X]\n\n"}
{"name":"SemilatInfCat.mk.injEq","module":"Mathlib.Order.Category.Semilat","initialProofState":"X✝ : Type u\nisSemilatticeInf✝ : SemilatticeInf X✝\nisOrderTop✝ : OrderTop X✝\nX : Type u\nisSemilatticeInf : SemilatticeInf X\nisOrderTop : OrderTop X\n⊢ Eq (Eq (SemilatInfCat.mk X✝) (SemilatInfCat.mk X)) (And (Eq X✝ X) (And (HEq isSemilatticeInf✝ isSemilatticeInf) (HEq isOrderTop✝ isOrderTop)))","decl":"/-- The category of inf-semilattices with a top element. -/\nstructure SemilatInfCat : Type (u + 1) where\n  /-- The underlying type of an inf-semilattice with a top element. -/\n  protected X : Type u\n  [isSemilatticeInf : SemilatticeInf X]\n  [isOrderTop : OrderTop.{u} X]\n\n"}
{"name":"SemilatInfCat.mk.sizeOf_spec","module":"Mathlib.Order.Category.Semilat","initialProofState":"X : Type u\nisSemilatticeInf : SemilatticeInf X\nisOrderTop : OrderTop X\n⊢ Eq (SizeOf.sizeOf (SemilatInfCat.mk X)) (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd 1 (SizeOf.sizeOf X)) (SizeOf.sizeOf isSemilatticeInf)) (SizeOf.sizeOf isOrderTop))","decl":"/-- The category of inf-semilattices with a top element. -/\nstructure SemilatInfCat : Type (u + 1) where\n  /-- The underlying type of an inf-semilattice with a top element. -/\n  protected X : Type u\n  [isSemilatticeInf : SemilatticeInf X]\n  [isOrderTop : OrderTop.{u} X]\n\n"}
{"name":"SemilatSupCat.coe_of","module":"Mathlib.Order.Category.Semilat","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeSup α\ninst✝ : OrderBot α\n⊢ Eq (SemilatSupCat.of α).X α","decl":"@[simp]\ntheorem coe_of (α : Type*) [SemilatticeSup α] [OrderBot α] : ↥(of α) = α :=\n  rfl\n\n"}
{"name":"SemilatSupCat.coe_forget_to_partOrd","module":"Mathlib.Order.Category.Semilat","initialProofState":"X : SemilatSupCat\n⊢ Eq (↑((CategoryTheory.forget₂ SemilatSupCat PartOrd).obj X)) X.X","decl":"@[simp]\ntheorem coe_forget_to_partOrd (X : SemilatSupCat) :\n    ↥((forget₂ SemilatSupCat PartOrd).obj X) = ↥X :=\n  rfl\n\n"}
{"name":"SemilatInfCat.coe_of","module":"Mathlib.Order.Category.Semilat","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeInf α\ninst✝ : OrderTop α\n⊢ Eq (SemilatInfCat.of α).X α","decl":"@[simp]\ntheorem coe_of (α : Type*) [SemilatticeInf α] [OrderTop α] : ↥(of α) = α :=\n  rfl\n\n"}
{"name":"SemilatInfCat.coe_forget_to_partOrd","module":"Mathlib.Order.Category.Semilat","initialProofState":"X : SemilatInfCat\n⊢ Eq (↑((CategoryTheory.forget₂ SemilatInfCat PartOrd).obj X)) X.X","decl":"@[simp]\ntheorem coe_forget_to_partOrd (X : SemilatInfCat) :\n    ↥((forget₂ SemilatInfCat PartOrd).obj X) = ↥X :=\n  rfl\n\n"}
{"name":"SemilatSupCat.Iso.mk_inv_toSupHom_toFun","module":"Mathlib.Order.Category.Semilat","initialProofState":"α β : SemilatSupCat\ne : OrderIso α.X β.X\na : β.X\n⊢ Eq ((SemilatSupCat.Iso.mk e).inv.toSupHom a) (e.symm a)","decl":"/-- Constructs an isomorphism of lattices from an order isomorphism between them. -/\n@[simps]\ndef Iso.mk {α β : SemilatSupCat.{u}} (e : α ≃o β) : α ≅ β where\n  hom := (e : SupBotHom _ _)\n  inv := (e.symm : SupBotHom _ _)\n  hom_inv_id := by ext; exact e.symm_apply_apply _\n  inv_hom_id := by ext; exact e.apply_symm_apply _\n\n"}
{"name":"SemilatSupCat.Iso.mk_hom_toSupHom_toFun","module":"Mathlib.Order.Category.Semilat","initialProofState":"α β : SemilatSupCat\ne : OrderIso α.X β.X\na : α.X\n⊢ Eq ((SemilatSupCat.Iso.mk e).hom.toSupHom a) (e a)","decl":"/-- Constructs an isomorphism of lattices from an order isomorphism between them. -/\n@[simps]\ndef Iso.mk {α β : SemilatSupCat.{u}} (e : α ≃o β) : α ≅ β where\n  hom := (e : SupBotHom _ _)\n  inv := (e.symm : SupBotHom _ _)\n  hom_inv_id := by ext; exact e.symm_apply_apply _\n  inv_hom_id := by ext; exact e.apply_symm_apply _\n\n"}
{"name":"SemilatSupCat.dual_obj","module":"Mathlib.Order.Category.Semilat","initialProofState":"X : SemilatSupCat\n⊢ Eq (SemilatSupCat.dual.obj X) (SemilatInfCat.of (OrderDual X.X))","decl":"/-- `OrderDual` as a functor. -/\n@[simps]\ndef dual : SemilatSupCat ⥤ SemilatInfCat where\n  obj X := SemilatInfCat.of Xᵒᵈ\n  map {_ _} := SupBotHom.dual\n\n"}
{"name":"SemilatSupCat.dual_map","module":"Mathlib.Order.Category.Semilat","initialProofState":"x✝¹ x✝ : SemilatSupCat\na : SupBotHom x✝¹.X x✝.X\n⊢ Eq (SemilatSupCat.dual.map a) (SupBotHom.dual a)","decl":"/-- `OrderDual` as a functor. -/\n@[simps]\ndef dual : SemilatSupCat ⥤ SemilatInfCat where\n  obj X := SemilatInfCat.of Xᵒᵈ\n  map {_ _} := SupBotHom.dual\n\n"}
{"name":"SemilatInfCat.Iso.mk_inv_toInfHom_toFun","module":"Mathlib.Order.Category.Semilat","initialProofState":"α β : SemilatInfCat\ne : OrderIso α.X β.X\na : β.X\n⊢ Eq ((SemilatInfCat.Iso.mk e).inv.toInfHom a) (e.symm a)","decl":"/-- Constructs an isomorphism of lattices from an order isomorphism between them. -/\n@[simps]\ndef Iso.mk {α β : SemilatInfCat.{u}} (e : α ≃o β) : α ≅ β where\n  hom := (e : InfTopHom _ _)\n  inv := (e.symm :  InfTopHom _ _)\n  hom_inv_id := by ext; exact e.symm_apply_apply _\n  inv_hom_id := by ext; exact e.apply_symm_apply _\n\n"}
{"name":"SemilatInfCat.Iso.mk_hom_toInfHom_toFun","module":"Mathlib.Order.Category.Semilat","initialProofState":"α β : SemilatInfCat\ne : OrderIso α.X β.X\na : α.X\n⊢ Eq ((SemilatInfCat.Iso.mk e).hom.toInfHom a) (e a)","decl":"/-- Constructs an isomorphism of lattices from an order isomorphism between them. -/\n@[simps]\ndef Iso.mk {α β : SemilatInfCat.{u}} (e : α ≃o β) : α ≅ β where\n  hom := (e : InfTopHom _ _)\n  inv := (e.symm :  InfTopHom _ _)\n  hom_inv_id := by ext; exact e.symm_apply_apply _\n  inv_hom_id := by ext; exact e.apply_symm_apply _\n\n"}
{"name":"SemilatInfCat.dual_map","module":"Mathlib.Order.Category.Semilat","initialProofState":"x✝¹ x✝ : SemilatInfCat\na : InfTopHom x✝¹.X x✝.X\n⊢ Eq (SemilatInfCat.dual.map a) (InfTopHom.dual a)","decl":"/-- `OrderDual` as a functor. -/\n@[simps]\ndef dual : SemilatInfCat ⥤ SemilatSupCat where\n  obj X := SemilatSupCat.of Xᵒᵈ\n  map {_ _} := InfTopHom.dual\n\n"}
{"name":"SemilatInfCat.dual_obj","module":"Mathlib.Order.Category.Semilat","initialProofState":"X : SemilatInfCat\n⊢ Eq (SemilatInfCat.dual.obj X) (SemilatSupCat.of (OrderDual X.X))","decl":"/-- `OrderDual` as a functor. -/\n@[simps]\ndef dual : SemilatInfCat ⥤ SemilatSupCat where\n  obj X := SemilatSupCat.of Xᵒᵈ\n  map {_ _} := InfTopHom.dual\n\n"}
{"name":"SemilatSupCatEquivSemilatInfCat_functor","module":"Mathlib.Order.Category.Semilat","initialProofState":"⊢ Eq SemilatSupCatEquivSemilatInfCat.functor SemilatSupCat.dual","decl":"/-- The equivalence between `SemilatSupCat` and `SemilatInfCat` induced by `OrderDual` both ways. -/\n@[simps functor inverse]\ndef SemilatSupCatEquivSemilatInfCat : SemilatSupCat ≌ SemilatInfCat where\n  functor := SemilatSupCat.dual\n  inverse := SemilatInfCat.dual\n  unitIso := NatIso.ofComponents fun X => SemilatSupCat.Iso.mk <| OrderIso.dualDual X\n  counitIso := NatIso.ofComponents fun X => SemilatInfCat.Iso.mk <| OrderIso.dualDual X\n\n"}
{"name":"SemilatSupCatEquivSemilatInfCat_inverse","module":"Mathlib.Order.Category.Semilat","initialProofState":"⊢ Eq SemilatSupCatEquivSemilatInfCat.inverse SemilatInfCat.dual","decl":"/-- The equivalence between `SemilatSupCat` and `SemilatInfCat` induced by `OrderDual` both ways. -/\n@[simps functor inverse]\ndef SemilatSupCatEquivSemilatInfCat : SemilatSupCat ≌ SemilatInfCat where\n  functor := SemilatSupCat.dual\n  inverse := SemilatInfCat.dual\n  unitIso := NatIso.ofComponents fun X => SemilatSupCat.Iso.mk <| OrderIso.dualDual X\n  counitIso := NatIso.ofComponents fun X => SemilatInfCat.Iso.mk <| OrderIso.dualDual X\n\n"}
{"name":"SemilatSupCat_dual_comp_forget_to_partOrd","module":"Mathlib.Order.Category.Semilat","initialProofState":"⊢ Eq (SemilatSupCat.dual.comp (CategoryTheory.forget₂ SemilatInfCat PartOrd)) ((CategoryTheory.forget₂ SemilatSupCat PartOrd).comp PartOrd.dual)","decl":"theorem SemilatSupCat_dual_comp_forget_to_partOrd :\n    SemilatSupCat.dual ⋙ forget₂ SemilatInfCat PartOrd =\n      forget₂ SemilatSupCat PartOrd ⋙ PartOrd.dual :=\n  rfl\n\n"}
{"name":"SemilatInfCat_dual_comp_forget_to_partOrd","module":"Mathlib.Order.Category.Semilat","initialProofState":"⊢ Eq (SemilatInfCat.dual.comp (CategoryTheory.forget₂ SemilatSupCat PartOrd)) ((CategoryTheory.forget₂ SemilatInfCat PartOrd).comp PartOrd.dual)","decl":"theorem SemilatInfCat_dual_comp_forget_to_partOrd :\n    SemilatInfCat.dual ⋙ forget₂ SemilatSupCat PartOrd =\n      forget₂ SemilatInfCat PartOrd ⋙ PartOrd.dual :=\n  rfl\n"}
