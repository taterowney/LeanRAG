{"name":"smul_mono_right","module":"Mathlib.Algebra.Order.Group.Action","initialProofState":"M : Type u_2\nα : Type u_3\ninst✝² : SMul M α\ninst✝¹ : Preorder α\ninst✝ : CovariantClass M α HSMul.hSMul LE.le\nm : M\n⊢ Monotone (HSMul.hSMul m)","decl":"theorem smul_mono_right [SMul M α] [Preorder α] [CovariantClass M α HSMul.hSMul LE.le]\n    (m : M) : Monotone (HSMul.hSMul m : α → α) :=\n  fun _ _ => CovariantClass.elim _\n\n"}
{"name":"smul_le_smul_left","module":"Mathlib.Algebra.Order.Group.Action","initialProofState":"M : Type u_2\nα : Type u_3\ninst✝² : SMul M α\ninst✝¹ : Preorder α\ninst✝ : CovariantClass M α HSMul.hSMul LE.le\nm : M\na b : α\nh : LE.le a b\n⊢ LE.le (HSMul.hSMul m a) (HSMul.hSMul m b)","decl":"/-- A copy of `smul_mono_right` that is understood by `gcongr`. -/\n@[gcongr]\ntheorem smul_le_smul_left [SMul M α] [Preorder α] [CovariantClass M α HSMul.hSMul LE.le]\n    (m : M) {a b : α} (h : a ≤ b) :\n    m • a ≤ m • b :=\n  smul_mono_right _ h\n\n"}
{"name":"smul_inf_le","module":"Mathlib.Algebra.Order.Group.Action","initialProofState":"M : Type u_2\nα : Type u_3\ninst✝² : SMul M α\ninst✝¹ : SemilatticeInf α\ninst✝ : CovariantClass M α HSMul.hSMul LE.le\nm : M\na₁ a₂ : α\n⊢ LE.le (HSMul.hSMul m (Min.min a₁ a₂)) (Min.min (HSMul.hSMul m a₁) (HSMul.hSMul m a₂))","decl":"theorem smul_inf_le [SMul M α] [SemilatticeInf α] [CovariantClass M α HSMul.hSMul LE.le]\n    (m : M) (a₁ a₂ : α) : m • (a₁ ⊓ a₂) ≤ m • a₁ ⊓ m • a₂ :=\n  (smul_mono_right _).map_inf_le _ _\n\n"}
{"name":"smul_iInf_le","module":"Mathlib.Algebra.Order.Group.Action","initialProofState":"ι : Sort u_1\nM : Type u_2\nα : Type u_3\ninst✝² : SMul M α\ninst✝¹ : CompleteLattice α\ninst✝ : CovariantClass M α HSMul.hSMul LE.le\nm : M\nt : ι → α\n⊢ LE.le (HSMul.hSMul m (iInf t)) (iInf fun i => HSMul.hSMul m (t i))","decl":"theorem smul_iInf_le [SMul M α] [CompleteLattice α] [CovariantClass M α HSMul.hSMul LE.le]\n    {m : M} {t : ι → α} :\n    m • iInf t ≤ ⨅ i, m • t i :=\n  le_iInf fun _ => smul_mono_right _ (iInf_le _ _)\n\n"}
{"name":"smul_strictMono_right","module":"Mathlib.Algebra.Order.Group.Action","initialProofState":"M : Type u_2\nα : Type u_3\ninst✝² : SMul M α\ninst✝¹ : Preorder α\ninst✝ : CovariantClass M α HSMul.hSMul LT.lt\nm : M\n⊢ StrictMono (HSMul.hSMul m)","decl":"theorem smul_strictMono_right [SMul M α] [Preorder α] [CovariantClass M α HSMul.hSMul LT.lt]\n    (m : M) : StrictMono (HSMul.hSMul m : α → α) :=\n  fun _ _ => CovariantClass.elim _\n\n"}
{"name":"le_pow_smul","module":"Mathlib.Algebra.Order.Group.Action","initialProofState":"G : Type u_4\ninst✝³ : Monoid G\nα : Type u_5\ninst✝² : Preorder α\ng : G\na : α\ninst✝¹ : MulAction G α\ninst✝ : CovariantClass G α HSMul.hSMul LE.le\nh : LE.le a (HSMul.hSMul g a)\nn : Nat\n⊢ LE.le a (HSMul.hSMul (HPow.hPow g n) a)","decl":"lemma le_pow_smul {G : Type*} [Monoid G] {α : Type*} [Preorder α] {g : G} {a : α}\n    [MulAction G α] [CovariantClass G α HSMul.hSMul LE.le]\n    (h : a ≤ g • a) (n : ℕ) : a ≤ g ^ n • a := by\n  induction' n with n hn\n  · rw [pow_zero, one_smul]\n  · rw [pow_succ', mul_smul]\n    exact h.trans (smul_mono_right g hn)\n\n"}
{"name":"pow_smul_le","module":"Mathlib.Algebra.Order.Group.Action","initialProofState":"G : Type u_4\ninst✝³ : Monoid G\nα : Type u_5\ninst✝² : Preorder α\ng : G\na : α\ninst✝¹ : MulAction G α\ninst✝ : CovariantClass G α HSMul.hSMul LE.le\nh : LE.le (HSMul.hSMul g a) a\nn : Nat\n⊢ LE.le (HSMul.hSMul (HPow.hPow g n) a) a","decl":"lemma pow_smul_le {G : Type*} [Monoid G] {α : Type*} [Preorder α] {g : G} {a : α}\n    [MulAction G α] [CovariantClass G α HSMul.hSMul LE.le]\n    (h : g • a ≤ a) (n : ℕ) : g ^ n • a ≤ a := by\n  induction' n with n hn\n  · rw [pow_zero, one_smul]\n  · rw [pow_succ', mul_smul]\n    exact (smul_mono_right g hn).trans h\n"}
