{"name":"LinearMap.coe_toSeminorm","module":"Mathlib.Analysis.LocallyConvex.WeakDual","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : NormedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\nf : LinearMap (RingHom.id 𝕜) E 𝕜\n⊢ Eq ⇑f.toSeminorm fun x => Norm.norm (f x)","decl":"theorem coe_toSeminorm {f : E →ₗ[𝕜] 𝕜} : ⇑f.toSeminorm = fun x => ‖f x‖ :=\n  rfl\n\n"}
{"name":"LinearMap.toSeminorm_apply","module":"Mathlib.Analysis.LocallyConvex.WeakDual","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : NormedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\nf : LinearMap (RingHom.id 𝕜) E 𝕜\nx : E\n⊢ Eq (f.toSeminorm x) (Norm.norm (f x))","decl":"@[simp]\ntheorem toSeminorm_apply {f : E →ₗ[𝕜] 𝕜} {x : E} : f.toSeminorm x = ‖f x‖ :=\n  rfl\n\n"}
{"name":"LinearMap.toSeminorm_ball_zero","module":"Mathlib.Analysis.LocallyConvex.WeakDual","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : NormedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\nf : LinearMap (RingHom.id 𝕜) E 𝕜\nr : Real\n⊢ Eq (f.toSeminorm.ball 0 r) (setOf fun x => LT.lt (Norm.norm (f x)) r)","decl":"theorem toSeminorm_ball_zero {f : E →ₗ[𝕜] 𝕜} {r : ℝ} :\n    Seminorm.ball f.toSeminorm 0 r = { x : E | ‖f x‖ < r } := by\n  simp only [Seminorm.ball_zero_eq, toSeminorm_apply]\n\n"}
{"name":"LinearMap.toSeminorm_comp","module":"Mathlib.Analysis.LocallyConvex.WeakDual","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\ninst✝⁴ : NormedField 𝕜\ninst✝³ : AddCommGroup E\ninst✝² : Module 𝕜 E\ninst✝¹ : AddCommGroup F\ninst✝ : Module 𝕜 F\nf : LinearMap (RingHom.id 𝕜) F 𝕜\ng : LinearMap (RingHom.id 𝕜) E F\n⊢ Eq (f.toSeminorm.comp g) (f.comp g).toSeminorm","decl":"theorem toSeminorm_comp (f : F →ₗ[𝕜] 𝕜) (g : E →ₗ[𝕜] F) :\n    f.toSeminorm.comp g = (f.comp g).toSeminorm := by\n  ext\n  simp only [Seminorm.comp_apply, toSeminorm_apply, coe_comp, Function.comp_apply]\n\n"}
{"name":"LinearMap.toSeminormFamily_apply","module":"Mathlib.Analysis.LocallyConvex.WeakDual","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\ninst✝⁴ : NormedField 𝕜\ninst✝³ : AddCommGroup E\ninst✝² : Module 𝕜 E\ninst✝¹ : AddCommGroup F\ninst✝ : Module 𝕜 F\nB : LinearMap (RingHom.id 𝕜) E (LinearMap (RingHom.id 𝕜) F 𝕜)\nx : E\ny : F\n⊢ Eq ((B.toSeminormFamily y) x) (Norm.norm ((B x) y))","decl":"@[simp]\ntheorem toSeminormFamily_apply {B : E →ₗ[𝕜] F →ₗ[𝕜] 𝕜} {x y} : (B.toSeminormFamily y) x = ‖B x y‖ :=\n  rfl\n\n"}
{"name":"LinearMap.weakBilin_withSeminorms","module":"Mathlib.Analysis.LocallyConvex.WeakDual","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\ninst✝⁴ : NormedField 𝕜\ninst✝³ : AddCommGroup E\ninst✝² : Module 𝕜 E\ninst✝¹ : AddCommGroup F\ninst✝ : Module 𝕜 F\nB : LinearMap (RingHom.id 𝕜) E (LinearMap (RingHom.id 𝕜) F 𝕜)\n⊢ WithSeminorms B.toSeminormFamily","decl":"theorem LinearMap.weakBilin_withSeminorms (B : E →ₗ[𝕜] F →ₗ[𝕜] 𝕜) :\n    WithSeminorms (LinearMap.toSeminormFamily B : F → Seminorm 𝕜 (WeakBilin B)) :=\n  let e : F ≃ (Σ _ : F, Fin 1) := .symm <| .sigmaUnique _ _\n  have : Nonempty (Σ _ : F, Fin 1) := e.symm.nonempty\n  withSeminorms_induced (withSeminorms_pi (fun _ ↦ norm_withSeminorms 𝕜 𝕜))\n    (LinearMap.ltoFun 𝕜 F 𝕜 ∘ₗ B : (WeakBilin B) →ₗ[𝕜] (F → 𝕜)) |>.congr_equiv e\n\n"}
{"name":"LinearMap.hasBasis_weakBilin","module":"Mathlib.Analysis.LocallyConvex.WeakDual","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\ninst✝⁴ : NormedField 𝕜\ninst✝³ : AddCommGroup E\ninst✝² : Module 𝕜 E\ninst✝¹ : AddCommGroup F\ninst✝ : Module 𝕜 F\nB : LinearMap (RingHom.id 𝕜) E (LinearMap (RingHom.id 𝕜) F 𝕜)\n⊢ (nhds 0).HasBasis B.toSeminormFamily.basisSets id","decl":"theorem LinearMap.hasBasis_weakBilin (B : E →ₗ[𝕜] F →ₗ[𝕜] 𝕜) :\n    (𝓝 (0 : WeakBilin B)).HasBasis B.toSeminormFamily.basisSets _root_.id :=\n  LinearMap.weakBilin_withSeminorms B |>.hasBasis\n\n"}
{"name":"WeakBilin.locallyConvexSpace","module":"Mathlib.Analysis.LocallyConvex.WeakDual","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\ninst✝⁷ : NormedField 𝕜\ninst✝⁶ : AddCommGroup E\ninst✝⁵ : Module 𝕜 E\ninst✝⁴ : AddCommGroup F\ninst✝³ : Module 𝕜 F\ninst✝² : NormedSpace Real 𝕜\ninst✝¹ : Module Real E\ninst✝ : IsScalarTower Real 𝕜 E\nB : LinearMap (RingHom.id 𝕜) E (LinearMap (RingHom.id 𝕜) F 𝕜)\n⊢ LocallyConvexSpace Real (WeakBilin B)","decl":"instance WeakBilin.locallyConvexSpace {B : E →ₗ[𝕜] F →ₗ[𝕜] 𝕜} :\n    LocallyConvexSpace ℝ (WeakBilin B) :=\n  B.weakBilin_withSeminorms.toLocallyConvexSpace\n\n"}
