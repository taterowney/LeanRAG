{"name":"CategoryTheory.Preadditive.DoldKan.equivalence_unitIso","module":"Mathlib.AlgebraicTopology.DoldKan.EquivalenceAdditive","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Limits.HasFiniteCoproducts C\n⊢ Eq CategoryTheory.Preadditive.DoldKan.equivalence.unitIso AlgebraicTopology.DoldKan.Γ₂N₂","decl":"/-- The Dold-Kan equivalence `Karoubi (SimplicialObject C) ≌ Karoubi (ChainComplex C ℕ)`\nfor additive categories. -/\n@[simps]\ndef equivalence : Karoubi (SimplicialObject C) ≌ Karoubi (ChainComplex C ℕ) where\n  functor := N\n  inverse := Γ\n  unitIso := Γ₂N₂\n  counitIso := N₂Γ₂\n  functor_unitIso_comp P := by\n    let α := N.mapIso (Γ₂N₂.app P)\n    let β := N₂Γ₂.app (N.obj P)\n    symm\n    change 𝟙 _ = α.hom ≫ β.hom\n    rw [← Iso.inv_comp_eq, comp_id, ← comp_id β.hom, ← Iso.inv_comp_eq]\n    exact AlgebraicTopology.DoldKan.identity_N₂_objectwise P\n\n"}
{"name":"CategoryTheory.Preadditive.DoldKan.equivalence_inverse","module":"Mathlib.AlgebraicTopology.DoldKan.EquivalenceAdditive","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Limits.HasFiniteCoproducts C\n⊢ Eq CategoryTheory.Preadditive.DoldKan.equivalence.inverse CategoryTheory.Preadditive.DoldKan.Γ","decl":"/-- The Dold-Kan equivalence `Karoubi (SimplicialObject C) ≌ Karoubi (ChainComplex C ℕ)`\nfor additive categories. -/\n@[simps]\ndef equivalence : Karoubi (SimplicialObject C) ≌ Karoubi (ChainComplex C ℕ) where\n  functor := N\n  inverse := Γ\n  unitIso := Γ₂N₂\n  counitIso := N₂Γ₂\n  functor_unitIso_comp P := by\n    let α := N.mapIso (Γ₂N₂.app P)\n    let β := N₂Γ₂.app (N.obj P)\n    symm\n    change 𝟙 _ = α.hom ≫ β.hom\n    rw [← Iso.inv_comp_eq, comp_id, ← comp_id β.hom, ← Iso.inv_comp_eq]\n    exact AlgebraicTopology.DoldKan.identity_N₂_objectwise P\n\n"}
{"name":"CategoryTheory.Preadditive.DoldKan.equivalence_functor","module":"Mathlib.AlgebraicTopology.DoldKan.EquivalenceAdditive","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Limits.HasFiniteCoproducts C\n⊢ Eq CategoryTheory.Preadditive.DoldKan.equivalence.functor CategoryTheory.Preadditive.DoldKan.N","decl":"/-- The Dold-Kan equivalence `Karoubi (SimplicialObject C) ≌ Karoubi (ChainComplex C ℕ)`\nfor additive categories. -/\n@[simps]\ndef equivalence : Karoubi (SimplicialObject C) ≌ Karoubi (ChainComplex C ℕ) where\n  functor := N\n  inverse := Γ\n  unitIso := Γ₂N₂\n  counitIso := N₂Γ₂\n  functor_unitIso_comp P := by\n    let α := N.mapIso (Γ₂N₂.app P)\n    let β := N₂Γ₂.app (N.obj P)\n    symm\n    change 𝟙 _ = α.hom ≫ β.hom\n    rw [← Iso.inv_comp_eq, comp_id, ← comp_id β.hom, ← Iso.inv_comp_eq]\n    exact AlgebraicTopology.DoldKan.identity_N₂_objectwise P\n\n"}
{"name":"CategoryTheory.Preadditive.DoldKan.equivalence_counitIso","module":"Mathlib.AlgebraicTopology.DoldKan.EquivalenceAdditive","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Limits.HasFiniteCoproducts C\n⊢ Eq CategoryTheory.Preadditive.DoldKan.equivalence.counitIso AlgebraicTopology.DoldKan.N₂Γ₂","decl":"/-- The Dold-Kan equivalence `Karoubi (SimplicialObject C) ≌ Karoubi (ChainComplex C ℕ)`\nfor additive categories. -/\n@[simps]\ndef equivalence : Karoubi (SimplicialObject C) ≌ Karoubi (ChainComplex C ℕ) where\n  functor := N\n  inverse := Γ\n  unitIso := Γ₂N₂\n  counitIso := N₂Γ₂\n  functor_unitIso_comp P := by\n    let α := N.mapIso (Γ₂N₂.app P)\n    let β := N₂Γ₂.app (N.obj P)\n    symm\n    change 𝟙 _ = α.hom ≫ β.hom\n    rw [← Iso.inv_comp_eq, comp_id, ← comp_id β.hom, ← Iso.inv_comp_eq]\n    exact AlgebraicTopology.DoldKan.identity_N₂_objectwise P\n\n"}
