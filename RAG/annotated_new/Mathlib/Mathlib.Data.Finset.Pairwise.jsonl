{"name":"Finset.pairwiseDisjoint_range_singleton","module":"Mathlib.Data.Finset.Pairwise","initialProofState":"α : Type u_1\n⊢ (Set.range Singleton.singleton).PairwiseDisjoint id","decl":"theorem Finset.pairwiseDisjoint_range_singleton :\n    (Set.range (singleton : α → Finset α)).PairwiseDisjoint id := by\n  rintro _ ⟨a, rfl⟩ _ ⟨b, rfl⟩ h\n  exact disjoint_singleton.2 (ne_of_apply_ne _ h)\n\n"}
{"name":"Set.PairwiseDisjoint.elim_finset","module":"Mathlib.Data.Finset.Pairwise","initialProofState":"α : Type u_1\nι : Type u_2\ns : Set ι\nf : ι → Finset α\nhs : s.PairwiseDisjoint f\ni j : ι\nhi : Membership.mem s i\nhj : Membership.mem s j\na : α\nhai : Membership.mem (f i) a\nhaj : Membership.mem (f j) a\n⊢ Eq i j","decl":"theorem PairwiseDisjoint.elim_finset {s : Set ι} {f : ι → Finset α} (hs : s.PairwiseDisjoint f)\n    {i j : ι} (hi : i ∈ s) (hj : j ∈ s) (a : α) (hai : a ∈ f i) (haj : a ∈ f j) : i = j :=\n  hs.elim hi hj (Finset.not_disjoint_iff.2 ⟨a, hai, haj⟩)\n\n"}
{"name":"Set.PairwiseDisjoint.image_finset_of_le","module":"Mathlib.Data.Finset.Pairwise","initialProofState":"α : Type u_1\nι : Type u_2\ninst✝² : SemilatticeInf α\ninst✝¹ : OrderBot α\ninst✝ : DecidableEq ι\ns : Finset ι\nf : ι → α\nhs : (↑s).PairwiseDisjoint f\ng : ι → ι\nhf : ∀ (a : ι), LE.le (f (g a)) (f a)\n⊢ (↑(Finset.image g s)).PairwiseDisjoint f","decl":"theorem PairwiseDisjoint.image_finset_of_le [DecidableEq ι] {s : Finset ι} {f : ι → α}\n    (hs : (s : Set ι).PairwiseDisjoint f) {g : ι → ι} (hf : ∀ a, f (g a) ≤ f a) :\n    (s.image g : Set ι).PairwiseDisjoint f := by\n  rw [coe_image]\n  exact hs.image_of_le hf\n\n"}
{"name":"Set.PairwiseDisjoint.attach","module":"Mathlib.Data.Finset.Pairwise","initialProofState":"α : Type u_1\nι : Type u_2\ninst✝¹ : SemilatticeInf α\ninst✝ : OrderBot α\ns : Finset ι\nf : ι → α\nhs : (↑s).PairwiseDisjoint f\n⊢ (↑s.attach).PairwiseDisjoint (Function.comp f Subtype.val)","decl":"theorem PairwiseDisjoint.attach (hs : (s : Set ι).PairwiseDisjoint f) :\n    (s.attach : Set { x // x ∈ s }).PairwiseDisjoint (f ∘ Subtype.val) := fun i _ j _ hij =>\n  hs i.2 j.2 <| mt Subtype.ext_val hij\n\n"}
{"name":"Set.PairwiseDisjoint.biUnion_finset","module":"Mathlib.Data.Finset.Pairwise","initialProofState":"α : Type u_1\nι : Type u_2\nι' : Type u_3\ninst✝¹ : Lattice α\ninst✝ : OrderBot α\ns : Set ι'\ng : ι' → Finset ι\nf : ι → α\nhs : s.PairwiseDisjoint fun i' => (g i').sup f\nhg : ∀ (i : ι'), Membership.mem s i → (↑(g i)).PairwiseDisjoint f\n⊢ (Set.iUnion fun i => Set.iUnion fun h => ↑(g i)).PairwiseDisjoint f","decl":"/-- Bind operation for `Set.PairwiseDisjoint`. In a complete lattice, you can use\n`Set.PairwiseDisjoint.biUnion`. -/\ntheorem PairwiseDisjoint.biUnion_finset {s : Set ι'} {g : ι' → Finset ι} {f : ι → α}\n    (hs : s.PairwiseDisjoint fun i' : ι' => (g i').sup f)\n    (hg : ∀ i ∈ s, (g i : Set ι).PairwiseDisjoint f) : (⋃ i ∈ s, ↑(g i)).PairwiseDisjoint f := by\n  rintro a ha b hb hab\n  simp_rw [Set.mem_iUnion] at ha hb\n  obtain ⟨c, hc, ha⟩ := ha\n  obtain ⟨d, hd, hb⟩ := hb\n  obtain hcd | hcd := eq_or_ne (g c) (g d)\n  · exact hg d hd (by rwa [hcd] at ha) hb hab\n  · exact (hs hc hd (ne_of_apply_ne _ hcd)).mono (Finset.le_sup ha) (Finset.le_sup hb)\n\n"}
{"name":"List.pairwise_of_coe_toFinset_pairwise","module":"Mathlib.Data.Finset.Pairwise","initialProofState":"α : Type u_1\ninst✝ : DecidableEq α\nr : α → α → Prop\nl : List α\nhl : (↑l.toFinset).Pairwise r\nhn : l.Nodup\n⊢ List.Pairwise r l","decl":"theorem pairwise_of_coe_toFinset_pairwise (hl : (l.toFinset : Set α).Pairwise r) (hn : l.Nodup) :\n    l.Pairwise r := by\n  rw [coe_toFinset] at hl\n  exact hn.pairwise_of_set_pairwise hl\n\n"}
{"name":"List.pairwise_iff_coe_toFinset_pairwise","module":"Mathlib.Data.Finset.Pairwise","initialProofState":"α : Type u_1\ninst✝ : DecidableEq α\nr : α → α → Prop\nl : List α\nhn : l.Nodup\nhs : Symmetric r\n⊢ Iff ((↑l.toFinset).Pairwise r) (List.Pairwise r l)","decl":"theorem pairwise_iff_coe_toFinset_pairwise (hn : l.Nodup) (hs : Symmetric r) :\n    (l.toFinset : Set α).Pairwise r ↔ l.Pairwise r := by\n  letI : IsSymm α r := ⟨hs⟩\n  rw [coe_toFinset, hn.pairwise_coe]\n\n"}
{"name":"List.pairwise_disjoint_of_coe_toFinset_pairwiseDisjoint","module":"Mathlib.Data.Finset.Pairwise","initialProofState":"α : Type u_5\nι : Type u_6\ninst✝² : SemilatticeInf α\ninst✝¹ : OrderBot α\ninst✝ : DecidableEq ι\nl : List ι\nf : ι → α\nhl : (↑l.toFinset).PairwiseDisjoint f\nhn : l.Nodup\n⊢ List.Pairwise (Function.onFun Disjoint f) l","decl":"theorem pairwise_disjoint_of_coe_toFinset_pairwiseDisjoint {α ι} [SemilatticeInf α] [OrderBot α]\n    [DecidableEq ι] {l : List ι} {f : ι → α} (hl : (l.toFinset : Set ι).PairwiseDisjoint f)\n    (hn : l.Nodup) : l.Pairwise (_root_.Disjoint on f) :=\n  pairwise_of_coe_toFinset_pairwise hl hn\n\n"}
{"name":"List.pairwiseDisjoint_iff_coe_toFinset_pairwise_disjoint","module":"Mathlib.Data.Finset.Pairwise","initialProofState":"α : Type u_5\nι : Type u_6\ninst✝² : SemilatticeInf α\ninst✝¹ : OrderBot α\ninst✝ : DecidableEq ι\nl : List ι\nf : ι → α\nhn : l.Nodup\n⊢ Iff ((↑l.toFinset).PairwiseDisjoint f) (List.Pairwise (Function.onFun Disjoint f) l)","decl":"theorem pairwiseDisjoint_iff_coe_toFinset_pairwise_disjoint {α ι} [SemilatticeInf α] [OrderBot α]\n    [DecidableEq ι] {l : List ι} {f : ι → α} (hn : l.Nodup) :\n    (l.toFinset : Set ι).PairwiseDisjoint f ↔ l.Pairwise (_root_.Disjoint on f) :=\n  pairwise_iff_coe_toFinset_pairwise hn (symmetric_disjoint.comap f)\n\n"}
