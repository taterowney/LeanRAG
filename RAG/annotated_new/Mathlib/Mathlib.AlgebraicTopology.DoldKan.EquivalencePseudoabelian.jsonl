{"name":"CategoryTheory.Idempotents.DoldKan.N_map","module":"Mathlib.AlgebraicTopology.DoldKan.EquivalencePseudoabelian","initialProofState":"C : Type u_1\ninst✝³ : CategoryTheory.Category.{u_2, u_1} C\ninst✝² : CategoryTheory.Preadditive C\ninst✝¹ : CategoryTheory.IsIdempotentComplete C\ninst✝ : CategoryTheory.Limits.HasFiniteCoproducts C\nX✝ Y✝ : CategoryTheory.SimplicialObject C\nf : Quiver.Hom X✝ Y✝\n⊢ Eq (CategoryTheory.Idempotents.DoldKan.N.map f) ((CategoryTheory.Idempotents.toKaroubiEquivalence (ChainComplex C Nat)).inverse.map (AlgebraicTopology.DoldKan.N₁.map f))","decl":"/-- The functor `N` for the equivalence is obtained by composing\n`N' : SimplicialObject C ⥤ Karoubi (ChainComplex C ℕ)` and the inverse\nof the equivalence `ChainComplex C ℕ ≌ Karoubi (ChainComplex C ℕ)`. -/\n@[simps!, nolint unusedArguments]\ndef N [IsIdempotentComplete C] [HasFiniteCoproducts C] : SimplicialObject C ⥤ ChainComplex C ℕ :=\n  N₁ ⋙ (toKaroubiEquivalence _).inverse\n\n"}
{"name":"CategoryTheory.Idempotents.DoldKan.N_obj","module":"Mathlib.AlgebraicTopology.DoldKan.EquivalencePseudoabelian","initialProofState":"C : Type u_1\ninst✝³ : CategoryTheory.Category.{u_2, u_1} C\ninst✝² : CategoryTheory.Preadditive C\ninst✝¹ : CategoryTheory.IsIdempotentComplete C\ninst✝ : CategoryTheory.Limits.HasFiniteCoproducts C\nX : CategoryTheory.SimplicialObject C\n⊢ Eq (CategoryTheory.Idempotents.DoldKan.N.obj X) ((CategoryTheory.Idempotents.toKaroubiEquivalence (ChainComplex C Nat)).inverse.obj (AlgebraicTopology.DoldKan.N₁.obj X))","decl":"/-- The functor `N` for the equivalence is obtained by composing\n`N' : SimplicialObject C ⥤ Karoubi (ChainComplex C ℕ)` and the inverse\nof the equivalence `ChainComplex C ℕ ≌ Karoubi (ChainComplex C ℕ)`. -/\n@[simps!, nolint unusedArguments]\ndef N [IsIdempotentComplete C] [HasFiniteCoproducts C] : SimplicialObject C ⥤ ChainComplex C ℕ :=\n  N₁ ⋙ (toKaroubiEquivalence _).inverse\n\n"}
{"name":"CategoryTheory.Idempotents.DoldKan.Γ_map_app","module":"Mathlib.AlgebraicTopology.DoldKan.EquivalencePseudoabelian","initialProofState":"C : Type u_1\ninst✝³ : CategoryTheory.Category.{u_2, u_1} C\ninst✝² : CategoryTheory.Preadditive C\ninst✝¹ : CategoryTheory.IsIdempotentComplete C\ninst✝ : CategoryTheory.Limits.HasFiniteCoproducts C\nX✝ Y✝ : ChainComplex C Nat\nf : Quiver.Hom X✝ Y✝\nΔ : Opposite SimplexCategory\n⊢ Eq ((CategoryTheory.Idempotents.DoldKan.Γ.map f).app Δ) ((AlgebraicTopology.DoldKan.Γ₀.splitting X✝).desc Δ fun A => CategoryTheory.CategoryStruct.comp (f.f (Opposite.unop A.fst).len) (((AlgebraicTopology.DoldKan.Γ₀.splitting Y✝).cofan Δ).inj A))","decl":"/-- The functor `Γ` for the equivalence is `Γ'`. -/\n@[simps!, nolint unusedArguments]\ndef Γ [IsIdempotentComplete C] [HasFiniteCoproducts C] : ChainComplex C ℕ ⥤ SimplicialObject C :=\n  Γ₀\n\n"}
{"name":"CategoryTheory.Idempotents.DoldKan.Γ_obj_obj","module":"Mathlib.AlgebraicTopology.DoldKan.EquivalencePseudoabelian","initialProofState":"C : Type u_1\ninst✝³ : CategoryTheory.Category.{u_2, u_1} C\ninst✝² : CategoryTheory.Preadditive C\ninst✝¹ : CategoryTheory.IsIdempotentComplete C\ninst✝ : CategoryTheory.Limits.HasFiniteCoproducts C\nX : ChainComplex C Nat\nΔ : Opposite SimplexCategory\n⊢ Eq ((CategoryTheory.Idempotents.DoldKan.Γ.obj X).obj Δ) (AlgebraicTopology.DoldKan.Γ₀.Obj.obj₂ X Δ)","decl":"/-- The functor `Γ` for the equivalence is `Γ'`. -/\n@[simps!, nolint unusedArguments]\ndef Γ [IsIdempotentComplete C] [HasFiniteCoproducts C] : ChainComplex C ℕ ⥤ SimplicialObject C :=\n  Γ₀\n\n"}
{"name":"CategoryTheory.Idempotents.DoldKan.Γ_obj_map","module":"Mathlib.AlgebraicTopology.DoldKan.EquivalencePseudoabelian","initialProofState":"C : Type u_1\ninst✝³ : CategoryTheory.Category.{u_2, u_1} C\ninst✝² : CategoryTheory.Preadditive C\ninst✝¹ : CategoryTheory.IsIdempotentComplete C\ninst✝ : CategoryTheory.Limits.HasFiniteCoproducts C\nX : ChainComplex C Nat\nX✝ Y✝ : Opposite SimplexCategory\nθ : Quiver.Hom X✝ Y✝\n⊢ Eq ((CategoryTheory.Idempotents.DoldKan.Γ.obj X).map θ) (AlgebraicTopology.DoldKan.Γ₀.Obj.map X θ)","decl":"/-- The functor `Γ` for the equivalence is `Γ'`. -/\n@[simps!, nolint unusedArguments]\ndef Γ [IsIdempotentComplete C] [HasFiniteCoproducts C] : ChainComplex C ℕ ⥤ SimplicialObject C :=\n  Γ₀\n\n"}
{"name":"CategoryTheory.Idempotents.DoldKan.isoN₁_hom_app_f","module":"Mathlib.AlgebraicTopology.DoldKan.EquivalencePseudoabelian","initialProofState":"C : Type u_1\ninst✝³ : CategoryTheory.Category.{u_2, u_1} C\ninst✝² : CategoryTheory.Preadditive C\ninst✝¹ : CategoryTheory.IsIdempotentComplete C\ninst✝ : CategoryTheory.Limits.HasFiniteCoproducts C\nX : CategoryTheory.SimplicialObject C\n⊢ Eq (CategoryTheory.Idempotents.DoldKan.isoN₁.hom.app X).f AlgebraicTopology.DoldKan.PInfty","decl":"@[simp]\nlemma isoN₁_hom_app_f (X : SimplicialObject C) :\n    (isoN₁.hom.app X).f = PInfty := rfl\n\n"}
{"name":"CategoryTheory.Idempotents.DoldKan.N₂_map_isoΓ₀_hom_app_f","module":"Mathlib.AlgebraicTopology.DoldKan.EquivalencePseudoabelian","initialProofState":"C : Type u_1\ninst✝³ : CategoryTheory.Category.{u_2, u_1} C\ninst✝² : CategoryTheory.Preadditive C\ninst✝¹ : CategoryTheory.IsIdempotentComplete C\ninst✝ : CategoryTheory.Limits.HasFiniteCoproducts C\nX : ChainComplex C Nat\n⊢ Eq (AlgebraicTopology.DoldKan.N₂.map (CategoryTheory.Idempotents.DoldKan.isoΓ₀.hom.app X)).f AlgebraicTopology.DoldKan.PInfty","decl":"@[simp]\nlemma N₂_map_isoΓ₀_hom_app_f (X : ChainComplex C ℕ) :\n    (N₂.map (isoΓ₀.hom.app X)).f = PInfty := by\n  ext\n  apply comp_id\n\n"}
{"name":"CategoryTheory.Idempotents.DoldKan.equivalence_functor","module":"Mathlib.AlgebraicTopology.DoldKan.EquivalencePseudoabelian","initialProofState":"C : Type u_1\ninst✝³ : CategoryTheory.Category.{u_2, u_1} C\ninst✝² : CategoryTheory.Preadditive C\ninst✝¹ : CategoryTheory.IsIdempotentComplete C\ninst✝ : CategoryTheory.Limits.HasFiniteCoproducts C\n⊢ Eq CategoryTheory.Idempotents.DoldKan.equivalence.functor CategoryTheory.Idempotents.DoldKan.N","decl":"theorem equivalence_functor : (equivalence : SimplicialObject C ≌ _).functor = N :=\n  rfl\n\n"}
{"name":"CategoryTheory.Idempotents.DoldKan.equivalence_inverse","module":"Mathlib.AlgebraicTopology.DoldKan.EquivalencePseudoabelian","initialProofState":"C : Type u_1\ninst✝³ : CategoryTheory.Category.{u_2, u_1} C\ninst✝² : CategoryTheory.Preadditive C\ninst✝¹ : CategoryTheory.IsIdempotentComplete C\ninst✝ : CategoryTheory.Limits.HasFiniteCoproducts C\n⊢ Eq CategoryTheory.Idempotents.DoldKan.equivalence.inverse CategoryTheory.Idempotents.DoldKan.Γ","decl":"theorem equivalence_inverse : (equivalence : SimplicialObject C ≌ _).inverse = Γ :=\n  rfl\n\n"}
{"name":"CategoryTheory.Idempotents.DoldKan.hη","module":"Mathlib.AlgebraicTopology.DoldKan.EquivalencePseudoabelian","initialProofState":"C : Type u_1\ninst✝³ : CategoryTheory.Category.{u_2, u_1} C\ninst✝² : CategoryTheory.Preadditive C\ninst✝¹ : CategoryTheory.IsIdempotentComplete C\ninst✝ : CategoryTheory.Limits.HasFiniteCoproducts C\n⊢ Eq AlgebraicTopology.DoldKan.Compatibility.τ₀ (AlgebraicTopology.DoldKan.Compatibility.τ₁ CategoryTheory.Idempotents.DoldKan.isoN₁ CategoryTheory.Idempotents.DoldKan.isoΓ₀ AlgebraicTopology.DoldKan.N₁Γ₀)","decl":"/-- The natural isomorphism `NΓ' satisfies the compatibility that is needed\nfor the construction of our counit isomorphism `η` -/\ntheorem hη :\n    Compatibility.τ₀ =\n      Compatibility.τ₁ isoN₁ isoΓ₀\n        (N₁Γ₀ : Γ ⋙ N₁ ≅ (toKaroubiEquivalence (ChainComplex C ℕ)).functor) := by\n  ext K : 3\n  simp only [Compatibility.τ₀_hom_app, Compatibility.τ₁_hom_app]\n  exact (N₂Γ₂_compatible_with_N₁Γ₀ K).trans (by simp )\n\n"}
{"name":"CategoryTheory.Idempotents.DoldKan.η_hom_app_f","module":"Mathlib.AlgebraicTopology.DoldKan.EquivalencePseudoabelian","initialProofState":"C : Type u_1\ninst✝³ : CategoryTheory.Category.{u_2, u_1} C\ninst✝² : CategoryTheory.Preadditive C\ninst✝¹ : CategoryTheory.IsIdempotentComplete C\ninst✝ : CategoryTheory.Limits.HasFiniteCoproducts C\nX : ChainComplex C Nat\ni : Nat\n⊢ Eq ((CategoryTheory.Idempotents.DoldKan.η.hom.app X).f i) (CategoryTheory.CategoryStruct.comp (((CategoryTheory.Idempotents.toKaroubiEquivalence (ChainComplex C Nat)).inverse.map (AlgebraicTopology.DoldKan.N₁Γ₀.hom.app X)).f i) (((CategoryTheory.Idempotents.toKaroubiEquivalence (ChainComplex C Nat)).unitIso.inv.app X).f i))","decl":"/-- The counit isomorphism induced by `N₁Γ₀` -/\n@[simps!]\ndef η : Γ ⋙ N ≅ 𝟭 (ChainComplex C ℕ) :=\n  Compatibility.equivalenceCounitIso\n    (N₁Γ₀ : (Γ : ChainComplex C ℕ ⥤ _) ⋙ N₁ ≅ (toKaroubiEquivalence _).functor)\n\n"}
{"name":"CategoryTheory.Idempotents.DoldKan.η_inv_app_f","module":"Mathlib.AlgebraicTopology.DoldKan.EquivalencePseudoabelian","initialProofState":"C : Type u_1\ninst✝³ : CategoryTheory.Category.{u_2, u_1} C\ninst✝² : CategoryTheory.Preadditive C\ninst✝¹ : CategoryTheory.IsIdempotentComplete C\ninst✝ : CategoryTheory.Limits.HasFiniteCoproducts C\nX : ChainComplex C Nat\ni : Nat\n⊢ Eq ((CategoryTheory.Idempotents.DoldKan.η.inv.app X).f i) (CategoryTheory.CategoryStruct.comp (((CategoryTheory.Idempotents.toKaroubiEquivalence (ChainComplex C Nat)).unitIso.hom.app X).f i) (((CategoryTheory.Idempotents.toKaroubiEquivalence (ChainComplex C Nat)).inverse.map (AlgebraicTopology.DoldKan.N₁Γ₀.inv.app X)).f i))","decl":"/-- The counit isomorphism induced by `N₁Γ₀` -/\n@[simps!]\ndef η : Γ ⋙ N ≅ 𝟭 (ChainComplex C ℕ) :=\n  Compatibility.equivalenceCounitIso\n    (N₁Γ₀ : (Γ : ChainComplex C ℕ ⥤ _) ⋙ N₁ ≅ (toKaroubiEquivalence _).functor)\n\n"}
{"name":"CategoryTheory.Idempotents.DoldKan.equivalence_counitIso","module":"Mathlib.AlgebraicTopology.DoldKan.EquivalencePseudoabelian","initialProofState":"C : Type u_1\ninst✝³ : CategoryTheory.Category.{u_2, u_1} C\ninst✝² : CategoryTheory.Preadditive C\ninst✝¹ : CategoryTheory.IsIdempotentComplete C\ninst✝ : CategoryTheory.Limits.HasFiniteCoproducts C\n⊢ Eq CategoryTheory.Idempotents.DoldKan.equivalence.counitIso CategoryTheory.Idempotents.DoldKan.η","decl":"theorem equivalence_counitIso :\n    DoldKan.equivalence.counitIso = (η : Γ ⋙ N ≅ 𝟭 (ChainComplex C ℕ)) :=\n  Compatibility.equivalenceCounitIso_eq hη\n\n"}
{"name":"CategoryTheory.Idempotents.DoldKan.hε","module":"Mathlib.AlgebraicTopology.DoldKan.EquivalencePseudoabelian","initialProofState":"C : Type u_1\ninst✝³ : CategoryTheory.Category.{u_2, u_1} C\ninst✝² : CategoryTheory.Preadditive C\ninst✝¹ : CategoryTheory.IsIdempotentComplete C\ninst✝ : CategoryTheory.Limits.HasFiniteCoproducts C\n⊢ Eq (AlgebraicTopology.DoldKan.Compatibility.υ CategoryTheory.Idempotents.DoldKan.isoN₁) AlgebraicTopology.DoldKan.Γ₂N₁","decl":"theorem hε :\n    Compatibility.υ (isoN₁) =\n      (Γ₂N₁ : (toKaroubiEquivalence _).functor ≅\n          (N₁ : SimplicialObject C ⥤ _) ⋙ Preadditive.DoldKan.equivalence.inverse) := by\n  dsimp only [isoN₁]\n  ext1\n  rw [← cancel_epi Γ₂N₁.inv, Iso.inv_hom_id]\n  ext X : 2\n  rw [NatTrans.comp_app]\n  erw [compatibility_Γ₂N₁_Γ₂N₂_natTrans X]\n  rw [Compatibility.υ_hom_app, Preadditive.DoldKan.equivalence_unitIso, Iso.app_inv, assoc]\n  erw [← NatTrans.comp_app_assoc, IsIso.hom_inv_id]\n  rw [NatTrans.id_app, id_comp, NatTrans.id_app, Γ₂N₂ToKaroubiIso_inv_app]\n  dsimp only [Preadditive.DoldKan.equivalence_inverse, Preadditive.DoldKan.Γ]\n  rw [← Γ₂.map_comp, Iso.inv_hom_id_app, Γ₂.map_id]\n  rfl\n\n"}
{"name":"CategoryTheory.Idempotents.DoldKan.equivalence_unitIso","module":"Mathlib.AlgebraicTopology.DoldKan.EquivalencePseudoabelian","initialProofState":"C : Type u_1\ninst✝³ : CategoryTheory.Category.{u_2, u_1} C\ninst✝² : CategoryTheory.Preadditive C\ninst✝¹ : CategoryTheory.IsIdempotentComplete C\ninst✝ : CategoryTheory.Limits.HasFiniteCoproducts C\n⊢ Eq CategoryTheory.Idempotents.DoldKan.equivalence.unitIso CategoryTheory.Idempotents.DoldKan.ε","decl":"theorem equivalence_unitIso :\n    DoldKan.equivalence.unitIso = (ε : 𝟭 (SimplicialObject C) ≅ N ⋙ Γ) :=\n  Compatibility.equivalenceUnitIso_eq hε\n\n"}
