{"name":"FDRep.instHasFiniteLimits","module":"Mathlib.RepresentationTheory.FDRep","initialProofState":"k G : Type u\ninst✝¹ : Field k\ninst✝ : Monoid G\n⊢ CategoryTheory.Limits.HasFiniteLimits (FDRep k G)","decl":"instance : HasFiniteLimits (FDRep k G) := inferInstance\n\n"}
{"name":"FDRep.instFiniteDimensionalCoe","module":"Mathlib.RepresentationTheory.FDRep","initialProofState":"k G : Type u\ninst✝¹ : Field k\ninst✝ : Monoid G\nV : FDRep k G\n⊢ FiniteDimensional k (CoeSort.coe V)","decl":"instance (V : FDRep k G) : FiniteDimensional k V := by\n  change FiniteDimensional k ((forget₂ (FDRep k G) (FGModuleCat k)).obj V); infer_instance\n\n"}
{"name":"FDRep.instFiniteDimensionalHom","module":"Mathlib.RepresentationTheory.FDRep","initialProofState":"k G : Type u\ninst✝¹ : Field k\ninst✝ : Monoid G\nV W : FDRep k G\n⊢ FiniteDimensional k (Quiver.Hom V W)","decl":"/-- All hom spaces are finite dimensional. -/\ninstance (V W : FDRep k G) : FiniteDimensional k (V ⟶ W) :=\n  FiniteDimensional.of_injective ((forget₂ (FDRep k G) (FGModuleCat k)).mapLinearMap k)\n    (Functor.map_injective (forget₂ (FDRep k G) (FGModuleCat k)))\n\n"}
{"name":"FDRep.endRingEquiv_symm_comp_ρ","module":"Mathlib.RepresentationTheory.FDRep","initialProofState":"k G : Type u\ninst✝¹ : Field k\ninst✝ : Monoid G\nV : FDRep k G\n⊢ Eq ((↑V.V.obj.endRingEquiv.symm).comp V.ρ) (MonCat.Hom.hom V.ρ)","decl":"@[simp]\nlemma endRingEquiv_symm_comp_ρ (V : FDRep k G) :\n    (MonoidHomClass.toMonoidHom (ModuleCat.endRingEquiv V.V.obj).symm).comp (ρ V) =\n      (Action.ρ V).hom :=\n  rfl\n\n"}
{"name":"FDRep.endRingEquiv_comp_ρ","module":"Mathlib.RepresentationTheory.FDRep","initialProofState":"k G : Type u\ninst✝¹ : Field k\ninst✝ : Monoid G\nV : FDRep k G\n⊢ Eq ((↑V.V.obj.endRingEquiv).comp (MonCat.Hom.hom V.ρ)) V.ρ","decl":"@[simp]\nlemma endRingEquiv_comp_ρ (V : FDRep k G) :\n    (MonoidHomClass.toMonoidHom (ModuleCat.endRingEquiv V.V.obj)).comp (Action.ρ V).hom = ρ V := rfl\n\n"}
{"name":"FDRep.hom_action_ρ","module":"Mathlib.RepresentationTheory.FDRep","initialProofState":"k G : Type u\ninst✝¹ : Field k\ninst✝ : Monoid G\nV : FDRep k G\ng : G\n⊢ Eq (ModuleCat.Hom.hom ((CategoryTheory.ConcreteCategory.hom V.ρ) g)) (V.ρ g)","decl":"@[simp]\nlemma hom_action_ρ (V : FDRep k G) (g : G) : (Action.ρ V g).hom = ρ V g := rfl\n\n"}
{"name":"FDRep.Iso.conj_ρ","module":"Mathlib.RepresentationTheory.FDRep","initialProofState":"k G : Type u\ninst✝¹ : Field k\ninst✝ : Monoid G\nV W : FDRep k G\ni : CategoryTheory.Iso V W\ng : G\n⊢ Eq (W.ρ g) ((FDRep.isoToLinearEquiv i).conj (V.ρ g))","decl":"theorem Iso.conj_ρ {V W : FDRep k G} (i : V ≅ W) (g : G) :\n    W.ρ g = (FDRep.isoToLinearEquiv i).conj (V.ρ g) := by\n  -- Porting note: Changed `rw` to `erw`\n  erw [FDRep.isoToLinearEquiv, ← hom_action_ρ V, ← FGModuleCat.Iso.conj_hom_eq_conj, Iso.conj_apply]\n  rw [← ModuleCat.hom_ofHom (W.ρ g), ← ModuleCat.hom_ext_iff,\n      Iso.eq_inv_comp ((Action.forget (FGModuleCat k) (MonCat.of G)).mapIso i)]\n  exact (i.hom.comm g).symm\n\n"}
{"name":"FDRep.of_ρ","module":"Mathlib.RepresentationTheory.FDRep","initialProofState":"k G : Type u\ninst✝⁴ : Field k\ninst✝³ : Monoid G\nV : Type u\ninst✝² : AddCommGroup V\ninst✝¹ : Module k V\ninst✝ : FiniteDimensional k V\nρ : Representation k G V\n⊢ Eq (FDRep.of ρ).ρ (CategoryTheory.CategoryStruct.comp (MonCat.ofHom ρ) (MonCat.ofHom (ModuleCat.of k V).endRingEquiv.symm.toMonoidHom))","decl":"/-- Lift an unbundled representation to `FDRep`. -/\n@[simps ρ]\ndef of {V : Type u} [AddCommGroup V] [Module k V] [FiniteDimensional k V]\n    (ρ : Representation k G V) : FDRep k G :=\n  ⟨FGModuleCat.of k V, MonCat.ofHom ρ ≫ MonCat.ofHom\n    (ModuleCat.endRingEquiv (ModuleCat.of k V)).symm.toMonoidHom⟩\n\n"}
{"name":"FDRep.forget₂_ρ","module":"Mathlib.RepresentationTheory.FDRep","initialProofState":"k G : Type u\ninst✝¹ : Field k\ninst✝ : Monoid G\nV : FDRep k G\n⊢ Eq ((CategoryTheory.forget₂ (FDRep k G) (Rep k G)).obj V).ρ V.ρ","decl":"theorem forget₂_ρ (V : FDRep k G) : ((forget₂ (FDRep k G) (Rep k G)).obj V).ρ = V.ρ := by\n  ext g v; rfl\n\n-- Verify that the monoidal structure is available.\n"}
{"name":"FDRep.instHasKernels","module":"Mathlib.RepresentationTheory.FDRep","initialProofState":"k G : Type u\ninst✝¹ : Field k\ninst✝ : Monoid G\n⊢ CategoryTheory.Limits.HasKernels (FDRep k G)","decl":"instance : HasKernels (FDRep k G) := by infer_instance\n\n"}
{"name":"FDRep.finrank_hom_simple_simple","module":"Mathlib.RepresentationTheory.FDRep","initialProofState":"k G : Type u\ninst✝⁴ : Field k\ninst✝³ : Monoid G\ninst✝² : IsAlgClosed k\nV W : FDRep k G\ninst✝¹ : CategoryTheory.Simple V\ninst✝ : CategoryTheory.Simple W\n⊢ Eq (Module.finrank k (Quiver.Hom V W)) (ite (Nonempty (CategoryTheory.Iso V W)) 1 0)","decl":"open scoped Classical in\n/-- Schur's Lemma: the dimension of the `Hom`-space between two irreducible representation is `0` if\nthey are not isomorphic, and `1` if they are. -/\ntheorem finrank_hom_simple_simple [IsAlgClosed k] (V W : FDRep k G) [Simple V] [Simple W] :\n    finrank k (V ⟶ W) = if Nonempty (V ≅ W) then 1 else 0 :=\n  CategoryTheory.finrank_hom_simple_simple k V W\n\n"}
{"name":"FDRep.dualTensorIsoLinHom_hom_hom","module":"Mathlib.RepresentationTheory.FDRep","initialProofState":"k G V : Type u\ninst✝⁴ : Field k\ninst✝³ : Group G\ninst✝² : AddCommGroup V\ninst✝¹ : Module k V\ninst✝ : FiniteDimensional k V\nρV : Representation k G V\nW : FDRep k G\n⊢ Eq (FDRep.dualTensorIsoLinHom ρV W).hom.hom (ModuleCat.ofHom (dualTensorHom k V (CoeSort.coe W)))","decl":"@[simp]\ntheorem dualTensorIsoLinHom_hom_hom :\n    (dualTensorIsoLinHom ρV W).hom.hom = ModuleCat.ofHom (dualTensorHom k V W) :=\n  rfl\n\n"}
