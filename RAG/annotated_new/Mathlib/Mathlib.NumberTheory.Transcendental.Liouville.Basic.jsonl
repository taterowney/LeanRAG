{"name":"Liouville.irrational","module":"Mathlib.NumberTheory.Transcendental.Liouville.Basic","initialProofState":"x : Real\nh : Liouville x\n⊢ Irrational x","decl":"protected theorem irrational {x : ℝ} (h : Liouville x) : Irrational x := by\n  -- By contradiction, `x = a / b`, with `a ∈ ℤ`, `0 < b ∈ ℕ` is a Liouville number,\n  rintro ⟨⟨a, b, bN0, cop⟩, rfl⟩\n  -- clear up the mess of constructions of rationals\n  rw [Rat.cast_mk'] at h\n  -- Since `a / b` is a Liouville number, there are `p, q ∈ ℤ`, with `q1 : 1 < q`,∈\n  -- `a0 : a / b ≠ p / q` and `a1 : |a / b - p / q| < 1 / q ^ (b + 1)`\n  rcases h (b + 1) with ⟨p, q, q1, a0, a1⟩\n  -- A few useful inequalities\n  have qR0 : (0 : ℝ) < q := Int.cast_pos.mpr (zero_lt_one.trans q1)\n  have b0 : (b : ℝ) ≠ 0 := Nat.cast_ne_zero.mpr bN0\n  have bq0 : (0 : ℝ) < b * q := mul_pos (Nat.cast_pos.mpr bN0.bot_lt) qR0\n  -- At a1, clear denominators...\n  replace a1 : |a * q - b * p| * q ^ (b + 1) < b * q := by\n    rw [div_sub_div _ _ b0 qR0.ne', abs_div, div_lt_div_iff₀ (abs_pos.mpr bq0.ne') (pow_pos qR0 _),\n      abs_of_pos bq0, one_mul] at a1\n    exact mod_cast a1\n  -- At a0, clear denominators...\n  replace a0 : a * q - ↑b * p ≠ 0 := by\n    rw [Ne, div_eq_div_iff b0 qR0.ne', mul_comm (p : ℝ), ← sub_eq_zero] at a0\n    exact mod_cast a0\n  -- Actually, `q` is a natural number\n  lift q to ℕ using (zero_lt_one.trans q1).le\n  -- Looks innocuous, but we now have an integer with non-zero absolute value: this is at\n  -- least one away from zero.  The gain here is what gets the proof going.\n  have ap : 0 < |a * ↑q - ↑b * p| := abs_pos.mpr a0\n  -- Actually, the absolute value of an integer is a natural number\n  -- FIXME: This `lift` call duplicates the hypotheses `a1` and `ap`\n  lift |a * ↑q - ↑b * p| to ℕ using abs_nonneg (a * ↑q - ↑b * p) with e he\n  norm_cast at a1 ap q1\n  -- Recall this is by contradiction: we obtained the inequality `b * q ≤ x * q ^ (b + 1)`, so\n  -- we are done.\n  exact not_le.mpr a1 (Nat.mul_lt_mul_pow_succ ap q1).le\n\n"}
{"name":"Liouville.exists_one_le_pow_mul_dist","module":"Mathlib.NumberTheory.Transcendental.Liouville.Basic","initialProofState":"Z : Type u_1\nN : Type u_2\nR : Type u_3\ninst✝ : PseudoMetricSpace R\nd : N → Real\nj : Z → N → R\nf : R → R\nα : R\nε M : Real\nd0 : ∀ (a : N), LE.le 1 (d a)\ne0 : LT.lt 0 ε\nB : ∀ ⦃y : R⦄, Membership.mem (Metric.closedBall α ε) y → LE.le (Dist.dist (f α) (f y)) (HMul.hMul (Dist.dist α y) M)\nL : ∀ ⦃z : Z⦄ ⦃a : N⦄, Membership.mem (Metric.closedBall α ε) (j z a) → LE.le 1 (HMul.hMul (d a) (Dist.dist (f α) (f (j z a))))\n⊢ Exists fun A => And (LT.lt 0 A) (∀ (z : Z) (a : N), LE.le 1 (HMul.hMul (d a) (HMul.hMul (Dist.dist α (j z a)) A)))","decl":"/-- Let `Z, N` be types, let `R` be a metric space, let `α : R` be a point and let\n`j : Z → N → R` be a function.  We aim to estimate how close we can get to `α`, while staying\nin the image of `j`.  The points `j z a` of `R` in the image of `j` come with a \"cost\" equal to\n`d a`.  As we get closer to `α` while staying in the image of `j`, we are interested in bounding\nthe quantity `d a * dist α (j z a)` from below by a strictly positive amount `1 / A`: the intuition\nis that approximating well `α` with the points in the image of `j` should come at a high cost.  The\nhypotheses on the function `f : R → R` provide us with sufficient conditions to ensure our goal.\nThe first hypothesis is that `f` is Lipschitz at `α`: this yields a bound on the distance.\nThe second hypothesis is specific to the Liouville argument and provides the missing bound\ninvolving the cost function `d`.\n\nThis lemma collects the properties used in the proof of `exists_pos_real_of_irrational_root`.\nIt is stated in more general form than needed: in the intended application, `Z = ℤ`, `N = ℕ`,\n`R = ℝ`, `d a = (a + 1) ^ f.nat_degree`, `j z a = z / (a + 1)`, `f ∈ ℤ[x]`, `α` is an irrational\nroot of `f`, `ε` is small, `M` is a bound on the Lipschitz constant of `f` near `α`, `n` is\nthe degree of the polynomial `f`.\n-/\ntheorem exists_one_le_pow_mul_dist {Z N R : Type*} [PseudoMetricSpace R] {d : N → ℝ}\n    {j : Z → N → R} {f : R → R} {α : R} {ε M : ℝ}\n    -- denominators are positive\n    (d0 : ∀ a : N, 1 ≤ d a)\n    (e0 : 0 < ε)\n    -- function is Lipschitz at α\n    (B : ∀ ⦃y : R⦄, y ∈ closedBall α ε → dist (f α) (f y) ≤ dist α y * M)\n    -- clear denominators\n    (L : ∀ ⦃z : Z⦄, ∀ ⦃a : N⦄, j z a ∈ closedBall α ε → 1 ≤ d a * dist (f α) (f (j z a))) :\n    ∃ A : ℝ, 0 < A ∧ ∀ z : Z, ∀ a : N, 1 ≤ d a * (dist α (j z a) * A) := by\n  -- A useful inequality to keep at hand\n  have me0 : 0 < max (1 / ε) M := lt_max_iff.mpr (Or.inl (one_div_pos.mpr e0))\n  -- The maximum between `1 / ε` and `M` works\n  refine ⟨max (1 / ε) M, me0, fun z a => ?_⟩\n  -- First, let's deal with the easy case in which we are far away from `α`\n  by_cases dm1 : 1 ≤ dist α (j z a) * max (1 / ε) M\n  · exact one_le_mul_of_one_le_of_one_le (d0 a) dm1\n  · -- `j z a = z / (a + 1)`: we prove that this ratio is close to `α`\n    have : j z a ∈ closedBall α ε := by\n      refine mem_closedBall'.mp (le_trans ?_ ((one_div_le me0 e0).mpr (le_max_left _ _)))\n      exact (le_div_iff₀ me0).mpr (not_le.mp dm1).le\n    -- use the \"separation from `1`\" (assumption `L`) for numerators,\n    refine (L this).trans ?_\n    -- remove a common factor and use the Lipschitz assumption `B`\n    refine mul_le_mul_of_nonneg_left ((B this).trans ?_) (zero_le_one.trans (d0 a))\n    exact mul_le_mul_of_nonneg_left (le_max_right _ M) dist_nonneg\n\n"}
{"name":"Liouville.exists_pos_real_of_irrational_root","module":"Mathlib.NumberTheory.Transcendental.Liouville.Basic","initialProofState":"α : Real\nha : Irrational α\nf : Polynomial Int\nf0 : Ne f 0\nfa : Eq (Polynomial.eval α (Polynomial.map (algebraMap Int Real) f)) 0\n⊢ Exists fun A => And (LT.lt 0 A) (∀ (a : Int) (b : Nat), LE.le 1 (HMul.hMul (HPow.hPow (HAdd.hAdd (↑b) 1) f.natDegree) (HMul.hMul (abs (HSub.hSub α (HDiv.hDiv (↑a) (HAdd.hAdd (↑b) 1)))) A)))","decl":"theorem exists_pos_real_of_irrational_root {α : ℝ} (ha : Irrational α) {f : ℤ[X]} (f0 : f ≠ 0)\n    (fa : eval α (map (algebraMap ℤ ℝ) f) = 0) :\n    ∃ A : ℝ, 0 < A ∧ ∀ a : ℤ, ∀ b : ℕ,\n      (1 : ℝ) ≤ ((b : ℝ) + 1) ^ f.natDegree * (|α - a / (b + 1)| * A) := by\n  -- `fR` is `f` viewed as a polynomial with `ℝ` coefficients.\n  set fR : ℝ[X] := map (algebraMap ℤ ℝ) f\n  -- `fR` is non-zero, since `f` is non-zero.\n  obtain fR0 : fR ≠ 0 := fun fR0 =>\n    (map_injective (algebraMap ℤ ℝ) fun _ _ A => Int.cast_inj.mp A).ne f0\n      (fR0.trans (Polynomial.map_zero _).symm)\n  -- reformulating assumption `fa`: `α` is a root of `fR`.\n  have ar : α ∈ (fR.roots.toFinset : Set ℝ) :=\n    Finset.mem_coe.mpr (Multiset.mem_toFinset.mpr ((mem_roots fR0).mpr (IsRoot.def.mpr fa)))\n  -- Since the polynomial `fR` has finitely many roots, there is a closed interval centered at `α`\n  -- such that `α` is the only root of `fR` in the interval.\n  obtain ⟨ζ, z0, U⟩ : ∃ ζ > 0, closedBall α ζ ∩ fR.roots.toFinset = {α} :=\n    @exists_closedBall_inter_eq_singleton_of_discrete _ _ _ Finite.instDiscreteTopology _ ar\n  -- Since `fR` is continuous, it is bounded on the interval above.\n  obtain ⟨xm, -, hM⟩ : ∃ xm : ℝ, xm ∈ Icc (α - ζ) (α + ζ) ∧\n      IsMaxOn (|fR.derivative.eval ·|) (Icc (α - ζ) (α + ζ)) xm :=\n    IsCompact.exists_isMaxOn isCompact_Icc\n      ⟨α, (sub_lt_self α z0).le, (lt_add_of_pos_right α z0).le⟩\n      (continuous_abs.comp fR.derivative.continuous_aeval).continuousOn\n  -- Use the key lemma `exists_one_le_pow_mul_dist`: we are left to show that ...\n  refine\n    @exists_one_le_pow_mul_dist ℤ ℕ ℝ _ _ _ (fun y => fR.eval y) α ζ |fR.derivative.eval xm| ?_ z0\n      (fun y hy => ?_) fun z a hq => ?_\n  -- 1: the denominators are positive -- essentially by definition;\n  · exact fun a => one_le_pow₀ ((le_add_iff_nonneg_left 1).mpr a.cast_nonneg)\n  -- 2: the polynomial `fR` is Lipschitz at `α` -- as its derivative continuous;\n  · rw [mul_comm]\n    rw [Real.closedBall_eq_Icc] at hy\n    -- apply the Mean Value Theorem: the bound on the derivative comes from differentiability.\n    refine\n      Convex.norm_image_sub_le_of_norm_deriv_le (fun _ _ => fR.differentiableAt)\n        (fun y h => by rw [fR.deriv]; exact hM h) (convex_Icc _ _) hy (mem_Icc_iff_abs_le.mp ?_)\n    exact @mem_closedBall_self ℝ _ α ζ (le_of_lt z0)\n  -- 3: the weird inequality of Liouville type with powers of the denominators.\n  · show 1 ≤ (a + 1 : ℝ) ^ f.natDegree * |eval α fR - eval ((z : ℝ) / (a + 1)) fR|\n    rw [fa, zero_sub, abs_neg]\n    rw [show (a + 1 : ℝ) = ((a + 1 : ℕ) : ℤ) by norm_cast] at hq ⊢\n    -- key observation: the right-hand side of the inequality is an *integer*.  Therefore,\n    -- if its absolute value is not at least one, then it vanishes.  Proceed by contradiction\n    refine one_le_pow_mul_abs_eval_div (Int.natCast_succ_pos a) fun hy => ?_\n    -- As the evaluation of the polynomial vanishes, we found a root of `fR` that is rational.\n    -- We know that `α` is the only root of `fR` in our interval, and `α` is irrational:\n    -- follow your nose.\n    refine (irrational_iff_ne_rational α).mp ha z (a + 1) (mem_singleton_iff.mp ?_).symm\n    refine U.subset ?_\n    refine ⟨hq, Finset.mem_coe.mp (Multiset.mem_toFinset.mpr ?_)⟩\n    exact (mem_roots fR0).mpr (IsRoot.def.mpr hy)\n\n"}
{"name":"Liouville.transcendental","module":"Mathlib.NumberTheory.Transcendental.Liouville.Basic","initialProofState":"x : Real\nlx : Liouville x\n⊢ Transcendental Int x","decl":"/-- **Liouville's Theorem** -/\nprotected theorem transcendental {x : ℝ} (lx : Liouville x) : Transcendental ℤ x := by\n  -- Proceed by contradiction: if `x` is algebraic, then `x` is the root (`ef0`) of a\n  -- non-zero (`f0`) polynomial `f`\n  rintro ⟨f : ℤ[X], f0, ef0⟩\n  -- Change `aeval x f = 0` to `eval (map _ f) = 0`, who knew.\n  replace ef0 : (f.map (algebraMap ℤ ℝ)).eval x = 0 := by\n    rwa [aeval_def, ← eval_map] at ef0\n  -- There is a \"large\" real number `A` such that `(b + 1) ^ (deg f) * |f (x - a / (b + 1))| * A`\n  -- is at least one.  This is obtained from lemma `exists_pos_real_of_irrational_root`.\n  obtain ⟨A, hA, h⟩ : ∃ A : ℝ, 0 < A ∧ ∀ (a : ℤ) (b : ℕ),\n      (1 : ℝ) ≤ ((b : ℝ) + 1) ^ f.natDegree * (|x - a / (b + 1)| * A) :=\n    exists_pos_real_of_irrational_root lx.irrational f0 ef0\n  -- Since the real numbers are Archimedean, a power of `2` exceeds `A`: `hn : A < 2 ^ r`.\n  rcases pow_unbounded_of_one_lt A (lt_add_one 1) with ⟨r, hn⟩\n  -- Use the Liouville property, with exponent `r + deg f`.\n  obtain ⟨a, b, b1, -, a1⟩ : ∃ a b : ℤ, 1 < b ∧ x ≠ a / b ∧\n      |x - a / b| < 1 / (b : ℝ) ^ (r + f.natDegree) :=\n    lx (r + f.natDegree)\n  have b0 : (0 : ℝ) < b := zero_lt_one.trans (by rw [← Int.cast_one]; exact Int.cast_lt.mpr b1)\n  -- Prove that `b ^ f.nat_degree * abs (x - a / b)` is strictly smaller than itself\n  -- recall, this is a proof by contradiction!\n  refine lt_irrefl ((b : ℝ) ^ f.natDegree * |x - ↑a / ↑b|) ?_\n  -- clear denominators at `a1`\n  rw [lt_div_iff₀' (pow_pos b0 _), pow_add, mul_assoc] at a1\n  -- split the inequality via `1 / A`.\n  refine (?_ : (b : ℝ) ^ f.natDegree * |x - a / b| < 1 / A).trans_le ?_\n  -- This branch of the proof uses the Liouville condition and the Archimedean property\n  · refine (lt_div_iff₀' hA).mpr ?_\n    refine lt_of_le_of_lt ?_ a1\n    gcongr\n    refine hn.le.trans ?_\n    rw [one_add_one_eq_two]\n    gcongr\n    exact Int.cast_two.symm.le.trans (Int.cast_le.mpr (Int.add_one_le_iff.mpr b1))\n  -- this branch of the proof exploits the \"integrality\" of evaluations of polynomials\n  -- at ratios of integers.\n  · lift b to ℕ using zero_le_one.trans b1.le\n    specialize h a b.pred\n    rwa [← Nat.cast_succ, Nat.succ_pred_eq_of_pos (zero_lt_one.trans _), ← mul_assoc, ←\n      div_le_iff₀ hA] at h\n    exact Int.ofNat_lt.mp b1\n\n"}
