{"name":"TopCat.Presheaf.isSheaf_unit","module":"Mathlib.Topology.Sheaves.Sheaf","initialProofState":"X : TopCat\nF : TopCat.Presheaf (CategoryTheory.Discrete Unit) X\n‚ä¢ F.IsSheaf","decl":"/-- The presheaf valued in `Unit` over any topological space is a sheaf.\n-/\ntheorem isSheaf_unit (F : Presheaf (CategoryTheory.Discrete Unit) X) : F.IsSheaf :=\n  fun x U S _ x _ => ‚ü®eqToHom (Subsingleton.elim _ _), by aesop_cat, fun _ => by aesop_cat‚ü©\n\n"}
{"name":"TopCat.Presheaf.isSheaf_iso_iff","module":"Mathlib.Topology.Sheaves.Sheaf","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX : TopCat\nF G : TopCat.Presheaf C X\nŒ± : CategoryTheory.Iso F G\n‚ä¢ Iff F.IsSheaf G.IsSheaf","decl":"theorem isSheaf_iso_iff {F G : Presheaf C X} (Œ± : F ‚âÖ G) : F.IsSheaf ‚Üî G.IsSheaf :=\n  Presheaf.isSheaf_of_iso_iff Œ±\n\n"}
{"name":"TopCat.Presheaf.isSheaf_of_iso","module":"Mathlib.Topology.Sheaves.Sheaf","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX : TopCat\nF G : TopCat.Presheaf C X\nŒ± : CategoryTheory.Iso F G\nh : F.IsSheaf\n‚ä¢ G.IsSheaf","decl":"/-- Transfer the sheaf condition across an isomorphism of presheaves.\n-/\ntheorem isSheaf_of_iso {F G : Presheaf C X} (Œ± : F ‚âÖ G) (h : F.IsSheaf) : G.IsSheaf :=\n  (isSheaf_iso_iff Œ±).1 h\n\n"}
{"name":"TopCat.Sheaf.forget_full","module":"Mathlib.Topology.Sheaves.Sheaf","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX : TopCat\n‚ä¢ (TopCat.Sheaf.forget C X).Full","decl":"instance forget_full : (forget C X).Full where\n  map_surjective f := ‚ü®Sheaf.Hom.mk f, rfl‚ü©\n\n-- Porting note: `deriving Faithful` failed\n"}
{"name":"TopCat.Sheaf.forgetFaithful","module":"Mathlib.Topology.Sheaves.Sheaf","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX : TopCat\n‚ä¢ (TopCat.Sheaf.forget C X).Faithful","decl":"instance forgetFaithful : (forget C X).Faithful where\n  map_injective := Sheaf.Hom.ext\n\n-- Note: These can be proved by simp.\n"}
{"name":"TopCat.Sheaf.id_app","module":"Mathlib.Topology.Sheaves.Sheaf","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX : TopCat\nF : TopCat.Sheaf C X\nt : Opposite (TopologicalSpace.Opens ‚ÜëX)\n‚ä¢ Eq ((CategoryTheory.CategoryStruct.id F).val.app t) (CategoryTheory.CategoryStruct.id (F.val.obj t))","decl":"theorem id_app (F : Sheaf C X) (t) : (ùüô F : F ‚ü∂ F).1.app t = ùüô _ :=\n  rfl\n\n"}
{"name":"TopCat.Sheaf.comp_app","module":"Mathlib.Topology.Sheaves.Sheaf","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX : TopCat\nF G H : TopCat.Sheaf C X\nf : Quiver.Hom F G\ng : Quiver.Hom G H\nt : Opposite (TopologicalSpace.Opens ‚ÜëX)\n‚ä¢ Eq ((CategoryTheory.CategoryStruct.comp f g).val.app t) (CategoryTheory.CategoryStruct.comp (f.val.app t) (g.val.app t))","decl":"theorem comp_app {F G H : Sheaf C X} (f : F ‚ü∂ G) (g : G ‚ü∂ H) (t) :\n    (f ‚â´ g).1.app t = f.1.app t ‚â´ g.1.app t :=\n  rfl\n\n"}
