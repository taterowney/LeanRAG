{"name":"nhds_bind_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns : Set α\n⊢ Eq ((nhds a).bind fun x => nhdsWithin x s) (nhdsWithin a s)","decl":"@[simp]\ntheorem nhds_bind_nhdsWithin {a : α} {s : Set α} : ((𝓝 a).bind fun x => 𝓝[s] x) = 𝓝[s] a :=\n  bind_inf_principal.trans <| congr_arg₂ _ nhds_bind_nhds rfl\n\n"}
{"name":"eventually_nhds_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns : Set α\np : α → Prop\n⊢ Iff (Filter.Eventually (fun y => Filter.Eventually (fun x => p x) (nhdsWithin y s)) (nhds a)) (Filter.Eventually (fun x => p x) (nhdsWithin a s))","decl":"@[simp]\ntheorem eventually_nhds_nhdsWithin {a : α} {s : Set α} {p : α → Prop} :\n    (∀ᶠ y in 𝓝 a, ∀ᶠ x in 𝓝[s] y, p x) ↔ ∀ᶠ x in 𝓝[s] a, p x :=\n  Filter.ext_iff.1 nhds_bind_nhdsWithin { x | p x }\n\n"}
{"name":"eventually_nhdsWithin_iff","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns : Set α\np : α → Prop\n⊢ Iff (Filter.Eventually (fun x => p x) (nhdsWithin a s)) (Filter.Eventually (fun x => Membership.mem s x → p x) (nhds a))","decl":"theorem eventually_nhdsWithin_iff {a : α} {s : Set α} {p : α → Prop} :\n    (∀ᶠ x in 𝓝[s] a, p x) ↔ ∀ᶠ x in 𝓝 a, x ∈ s → p x :=\n  eventually_inf_principal\n\n"}
{"name":"frequently_nhdsWithin_iff","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\nz : α\ns : Set α\np : α → Prop\n⊢ Iff (Filter.Frequently (fun x => p x) (nhdsWithin z s)) (Filter.Frequently (fun x => And (p x) (Membership.mem s x)) (nhds z))","decl":"theorem frequently_nhdsWithin_iff {z : α} {s : Set α} {p : α → Prop} :\n    (∃ᶠ x in 𝓝[s] z, p x) ↔ ∃ᶠ x in 𝓝 z, p x ∧ x ∈ s :=\n  frequently_inf_principal.trans <| by simp only [and_comm]\n\n"}
{"name":"mem_closure_ne_iff_frequently_within","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\nz : α\ns : Set α\n⊢ Iff (Membership.mem (closure (SDiff.sdiff s (Singleton.singleton z))) z) (Filter.Frequently (fun x => Membership.mem s x) (nhdsWithin z (HasCompl.compl (Singleton.singleton z))))","decl":"theorem mem_closure_ne_iff_frequently_within {z : α} {s : Set α} :\n    z ∈ closure (s \\ {z}) ↔ ∃ᶠ x in 𝓝[≠] z, x ∈ s := by\n  simp [mem_closure_iff_frequently, frequently_nhdsWithin_iff]\n\n"}
{"name":"eventually_eventually_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns : Set α\np : α → Prop\n⊢ Iff (Filter.Eventually (fun y => Filter.Eventually (fun x => p x) (nhdsWithin y s)) (nhdsWithin a s)) (Filter.Eventually (fun x => p x) (nhdsWithin a s))","decl":"@[simp]\ntheorem eventually_eventually_nhdsWithin {a : α} {s : Set α} {p : α → Prop} :\n    (∀ᶠ y in 𝓝[s] a, ∀ᶠ x in 𝓝[s] y, p x) ↔ ∀ᶠ x in 𝓝[s] a, p x := by\n  refine ⟨fun h => ?_, fun h => (eventually_nhds_nhdsWithin.2 h).filter_mono inf_le_left⟩\n  simp only [eventually_nhdsWithin_iff] at h ⊢\n  exact h.mono fun x hx hxs => (hx hxs).self_of_nhds hxs\n\n"}
{"name":"eventually_nhdsWithin_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns : Set α\np : α → Prop\n⊢ Iff (Filter.Eventually (fun y => Filter.Eventually (fun x => p x) (nhdsWithin y s)) (nhdsWithin a s)) (Filter.Eventually (fun x => p x) (nhdsWithin a s))","decl":"@[deprecated (since := \"2024-10-04\")]\nalias eventually_nhdsWithin_nhdsWithin := eventually_eventually_nhdsWithin\n\n"}
{"name":"eventually_mem_nhdsWithin_iff","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\nx : α\ns t : Set α\n⊢ Iff (Filter.Eventually (fun x' => Membership.mem (nhdsWithin x' s) t) (nhdsWithin x s)) (Membership.mem (nhdsWithin x s) t)","decl":"@[simp]\ntheorem eventually_mem_nhdsWithin_iff {x : α} {s t : Set α} :\n    (∀ᶠ x' in 𝓝[s] x, t ∈ 𝓝[s] x') ↔ t ∈ 𝓝[s] x :=\n  eventually_eventually_nhdsWithin\n\n"}
{"name":"nhdsWithin_eq","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns : Set α\n⊢ Eq (nhdsWithin a s) (iInf fun t => iInf fun h => Filter.principal (Inter.inter t s))","decl":"theorem nhdsWithin_eq (a : α) (s : Set α) :\n    𝓝[s] a = ⨅ t ∈ { t : Set α | a ∈ t ∧ IsOpen t }, 𝓟 (t ∩ s) :=\n  ((nhds_basis_opens a).inf_principal s).eq_biInf\n\n"}
{"name":"nhdsWithin_univ","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\n⊢ Eq (nhdsWithin a Set.univ) (nhds a)","decl":"@[simp] lemma nhdsWithin_univ (a : α) : 𝓝[Set.univ] a = 𝓝 a := by\n  rw [nhdsWithin, principal_univ, inf_top_eq]\n\n"}
{"name":"nhdsWithin_hasBasis","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : TopologicalSpace α\np : β → Prop\ns : β → Set α\na : α\nh : (nhds a).HasBasis p s\nt : Set α\n⊢ (nhdsWithin a t).HasBasis p fun i => Inter.inter (s i) t","decl":"theorem nhdsWithin_hasBasis {p : β → Prop} {s : β → Set α} {a : α} (h : (𝓝 a).HasBasis p s)\n    (t : Set α) : (𝓝[t] a).HasBasis p fun i => s i ∩ t :=\n  h.inf_principal t\n\n"}
{"name":"nhdsWithin_basis_open","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\nt : Set α\n⊢ (nhdsWithin a t).HasBasis (fun u => And (Membership.mem u a) (IsOpen u)) fun u => Inter.inter u t","decl":"theorem nhdsWithin_basis_open (a : α) (t : Set α) :\n    (𝓝[t] a).HasBasis (fun u => a ∈ u ∧ IsOpen u) fun u => u ∩ t :=\n  nhdsWithin_hasBasis (nhds_basis_opens a) t\n\n"}
{"name":"mem_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\nt : Set α\na : α\ns : Set α\n⊢ Iff (Membership.mem (nhdsWithin a s) t) (Exists fun u => And (IsOpen u) (And (Membership.mem u a) (HasSubset.Subset (Inter.inter u s) t)))","decl":"theorem mem_nhdsWithin {t : Set α} {a : α} {s : Set α} :\n    t ∈ 𝓝[s] a ↔ ∃ u, IsOpen u ∧ a ∈ u ∧ u ∩ s ⊆ t := by\n  simpa only [and_assoc, and_left_comm] using (nhdsWithin_basis_open a s).mem_iff\n\n"}
{"name":"mem_nhdsWithin_iff_exists_mem_nhds_inter","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\nt : Set α\na : α\ns : Set α\n⊢ Iff (Membership.mem (nhdsWithin a s) t) (Exists fun u => And (Membership.mem (nhds a) u) (HasSubset.Subset (Inter.inter u s) t))","decl":"theorem mem_nhdsWithin_iff_exists_mem_nhds_inter {t : Set α} {a : α} {s : Set α} :\n    t ∈ 𝓝[s] a ↔ ∃ u ∈ 𝓝 a, u ∩ s ⊆ t :=\n  (nhdsWithin_hasBasis (𝓝 a).basis_sets s).mem_iff\n\n"}
{"name":"diff_mem_nhdsWithin_compl","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\nx : α\ns : Set α\nhs : Membership.mem (nhds x) s\nt : Set α\n⊢ Membership.mem (nhdsWithin x (HasCompl.compl t)) (SDiff.sdiff s t)","decl":"theorem diff_mem_nhdsWithin_compl {x : α} {s : Set α} (hs : s ∈ 𝓝 x) (t : Set α) :\n    s \\ t ∈ 𝓝[tᶜ] x :=\n  diff_mem_inf_principal_compl hs t\n\n"}
{"name":"diff_mem_nhdsWithin_diff","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\nx : α\ns t : Set α\nhs : Membership.mem (nhdsWithin x t) s\nt' : Set α\n⊢ Membership.mem (nhdsWithin x (SDiff.sdiff t t')) (SDiff.sdiff s t')","decl":"theorem diff_mem_nhdsWithin_diff {x : α} {s t : Set α} (hs : s ∈ 𝓝[t] x) (t' : Set α) :\n    s \\ t' ∈ 𝓝[t \\ t'] x := by\n  rw [nhdsWithin, diff_eq, diff_eq, ← inf_principal, ← inf_assoc]\n  exact inter_mem_inf hs (mem_principal_self _)\n\n"}
{"name":"nhds_of_nhdsWithin_of_nhds","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\ns t : Set α\na : α\nh1 : Membership.mem (nhds a) s\nh2 : Membership.mem (nhdsWithin a s) t\n⊢ Membership.mem (nhds a) t","decl":"theorem nhds_of_nhdsWithin_of_nhds {s t : Set α} {a : α} (h1 : s ∈ 𝓝 a) (h2 : t ∈ 𝓝[s] a) :\n    t ∈ 𝓝 a := by\n  rcases mem_nhdsWithin_iff_exists_mem_nhds_inter.mp h2 with ⟨_, Hw, hw⟩\n  exact (𝓝 a).sets_of_superset ((𝓝 a).inter_sets Hw h1) hw\n\n"}
{"name":"mem_nhdsWithin_iff_eventually","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\ns t : Set α\nx : α\n⊢ Iff (Membership.mem (nhdsWithin x s) t) (Filter.Eventually (fun y => Membership.mem s y → Membership.mem t y) (nhds x))","decl":"theorem mem_nhdsWithin_iff_eventually {s t : Set α} {x : α} :\n    t ∈ 𝓝[s] x ↔ ∀ᶠ y in 𝓝 x, y ∈ s → y ∈ t :=\n  eventually_inf_principal\n\n"}
{"name":"mem_nhdsWithin_iff_eventuallyEq","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\ns t : Set α\nx : α\n⊢ Iff (Membership.mem (nhdsWithin x s) t) ((nhds x).EventuallyEq s (Inter.inter s t))","decl":"theorem mem_nhdsWithin_iff_eventuallyEq {s t : Set α} {x : α} :\n    t ∈ 𝓝[s] x ↔ s =ᶠ[𝓝 x] (s ∩ t : Set α) := by\n  simp_rw [mem_nhdsWithin_iff_eventually, eventuallyEq_set, mem_inter_iff, iff_self_and]\n\n"}
{"name":"nhdsWithin_eq_iff_eventuallyEq","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\ns t : Set α\nx : α\n⊢ Iff (Eq (nhdsWithin x s) (nhdsWithin x t)) ((nhds x).EventuallyEq s t)","decl":"theorem nhdsWithin_eq_iff_eventuallyEq {s t : Set α} {x : α} : 𝓝[s] x = 𝓝[t] x ↔ s =ᶠ[𝓝 x] t :=\n  set_eventuallyEq_iff_inf_principal.symm\n\n"}
{"name":"nhdsWithin_le_iff","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\ns t : Set α\nx : α\n⊢ Iff (LE.le (nhdsWithin x s) (nhdsWithin x t)) (Membership.mem (nhdsWithin x s) t)","decl":"theorem nhdsWithin_le_iff {s t : Set α} {x : α} : 𝓝[s] x ≤ 𝓝[t] x ↔ t ∈ 𝓝[s] x :=\n  set_eventuallyLE_iff_inf_principal_le.symm.trans set_eventuallyLE_iff_mem_inf_principal\n\n-- Porting note: golfed, dropped an unneeded assumption\n"}
{"name":"preimage_nhdsWithin_coinduced'","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : TopologicalSpace α\nπ : α → β\ns : Set β\nt : Set α\na : α\nh : Membership.mem t a\nhs : Membership.mem (nhds (π a)) s\n⊢ Membership.mem (nhdsWithin a t) (Set.preimage π s)","decl":"theorem preimage_nhdsWithin_coinduced' {π : α → β} {s : Set β} {t : Set α} {a : α} (h : a ∈ t)\n    (hs : s ∈ @nhds β (.coinduced (fun x : t => π x) inferInstance) (π a)) :\n    π ⁻¹' s ∈ 𝓝[t] a := by\n  lift a to t using h\n  replace hs : (fun x : t => π x) ⁻¹' s ∈ 𝓝 a := preimage_nhds_coinduced hs\n  rwa [← map_nhds_subtype_val, mem_map]\n\n"}
{"name":"mem_nhdsWithin_of_mem_nhds","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\ns t : Set α\na : α\nh : Membership.mem (nhds a) s\n⊢ Membership.mem (nhdsWithin a t) s","decl":"theorem mem_nhdsWithin_of_mem_nhds {s t : Set α} {a : α} (h : s ∈ 𝓝 a) : s ∈ 𝓝[t] a :=\n  mem_inf_of_left h\n\n"}
{"name":"self_mem_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns : Set α\n⊢ Membership.mem (nhdsWithin a s) s","decl":"theorem self_mem_nhdsWithin {a : α} {s : Set α} : s ∈ 𝓝[s] a :=\n  mem_inf_of_right (mem_principal_self s)\n\n"}
{"name":"eventually_mem_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns : Set α\n⊢ Filter.Eventually (fun x => Membership.mem s x) (nhdsWithin a s)","decl":"theorem eventually_mem_nhdsWithin {a : α} {s : Set α} : ∀ᶠ x in 𝓝[s] a, x ∈ s :=\n  self_mem_nhdsWithin\n\n"}
{"name":"inter_mem_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\ns t : Set α\na : α\nh : Membership.mem (nhds a) t\n⊢ Membership.mem (nhdsWithin a s) (Inter.inter s t)","decl":"theorem inter_mem_nhdsWithin (s : Set α) {t : Set α} {a : α} (h : t ∈ 𝓝 a) : s ∩ t ∈ 𝓝[s] a :=\n  inter_mem self_mem_nhdsWithin (mem_inf_of_left h)\n\n"}
{"name":"pure_le_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns : Set α\nha : Membership.mem s a\n⊢ LE.le (Pure.pure a) (nhdsWithin a s)","decl":"theorem pure_le_nhdsWithin {a : α} {s : Set α} (ha : a ∈ s) : pure a ≤ 𝓝[s] a :=\n  le_inf (pure_le_nhds a) (le_principal_iff.2 ha)\n\n"}
{"name":"mem_of_mem_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns t : Set α\nha : Membership.mem s a\nht : Membership.mem (nhdsWithin a s) t\n⊢ Membership.mem t a","decl":"theorem mem_of_mem_nhdsWithin {a : α} {s t : Set α} (ha : a ∈ s) (ht : t ∈ 𝓝[s] a) : a ∈ t :=\n  pure_le_nhdsWithin ha ht\n\n"}
{"name":"Filter.Eventually.self_of_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\np : α → Prop\ns : Set α\nx : α\nh : Filter.Eventually (fun y => p y) (nhdsWithin x s)\nhx : Membership.mem s x\n⊢ p x","decl":"theorem Filter.Eventually.self_of_nhdsWithin {p : α → Prop} {s : Set α} {x : α}\n    (h : ∀ᶠ y in 𝓝[s] x, p y) (hx : x ∈ s) : p x :=\n  mem_of_mem_nhdsWithin hx h\n\n"}
{"name":"tendsto_const_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : TopologicalSpace α\nl : Filter β\ns : Set α\na : α\nha : Membership.mem s a\n⊢ Filter.Tendsto (fun x => a) l (nhdsWithin a s)","decl":"theorem tendsto_const_nhdsWithin {l : Filter β} {s : Set α} {a : α} (ha : a ∈ s) :\n    Tendsto (fun _ : β => a) l (𝓝[s] a) :=\n  tendsto_const_pure.mono_right <| pure_le_nhdsWithin ha\n\n"}
{"name":"nhdsWithin_restrict''","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns t : Set α\nh : Membership.mem (nhdsWithin a s) t\n⊢ Eq (nhdsWithin a s) (nhdsWithin a (Inter.inter s t))","decl":"theorem nhdsWithin_restrict'' {a : α} (s : Set α) {t : Set α} (h : t ∈ 𝓝[s] a) :\n    𝓝[s] a = 𝓝[s ∩ t] a :=\n  le_antisymm (le_inf inf_le_left (le_principal_iff.mpr (inter_mem self_mem_nhdsWithin h)))\n    (inf_le_inf_left _ (principal_mono.mpr Set.inter_subset_left))\n\n"}
{"name":"nhdsWithin_restrict'","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns t : Set α\nh : Membership.mem (nhds a) t\n⊢ Eq (nhdsWithin a s) (nhdsWithin a (Inter.inter s t))","decl":"theorem nhdsWithin_restrict' {a : α} (s : Set α) {t : Set α} (h : t ∈ 𝓝 a) : 𝓝[s] a = 𝓝[s ∩ t] a :=\n  nhdsWithin_restrict'' s <| mem_inf_of_left h\n\n"}
{"name":"nhdsWithin_restrict","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns t : Set α\nh₀ : Membership.mem t a\nh₁ : IsOpen t\n⊢ Eq (nhdsWithin a s) (nhdsWithin a (Inter.inter s t))","decl":"theorem nhdsWithin_restrict {a : α} (s : Set α) {t : Set α} (h₀ : a ∈ t) (h₁ : IsOpen t) :\n    𝓝[s] a = 𝓝[s ∩ t] a :=\n  nhdsWithin_restrict' s (IsOpen.mem_nhds h₁ h₀)\n\n"}
{"name":"nhdsWithin_le_of_mem","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns t : Set α\nh : Membership.mem (nhdsWithin a t) s\n⊢ LE.le (nhdsWithin a t) (nhdsWithin a s)","decl":"theorem nhdsWithin_le_of_mem {a : α} {s t : Set α} (h : s ∈ 𝓝[t] a) : 𝓝[t] a ≤ 𝓝[s] a :=\n  nhdsWithin_le_iff.mpr h\n\n"}
{"name":"nhdsWithin_le_nhds","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns : Set α\n⊢ LE.le (nhdsWithin a s) (nhds a)","decl":"theorem nhdsWithin_le_nhds {a : α} {s : Set α} : 𝓝[s] a ≤ 𝓝 a := by\n  rw [← nhdsWithin_univ]\n  apply nhdsWithin_le_of_mem\n  exact univ_mem\n\n"}
{"name":"nhdsWithin_eq_nhdsWithin'","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns t u : Set α\nhs : Membership.mem (nhds a) s\nh₂ : Eq (Inter.inter t s) (Inter.inter u s)\n⊢ Eq (nhdsWithin a t) (nhdsWithin a u)","decl":"theorem nhdsWithin_eq_nhdsWithin' {a : α} {s t u : Set α} (hs : s ∈ 𝓝 a) (h₂ : t ∩ s = u ∩ s) :\n    𝓝[t] a = 𝓝[u] a := by rw [nhdsWithin_restrict' t hs, nhdsWithin_restrict' u hs, h₂]\n\n"}
{"name":"nhdsWithin_eq_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns t u : Set α\nh₀ : Membership.mem s a\nh₁ : IsOpen s\nh₂ : Eq (Inter.inter t s) (Inter.inter u s)\n⊢ Eq (nhdsWithin a t) (nhdsWithin a u)","decl":"theorem nhdsWithin_eq_nhdsWithin {a : α} {s t u : Set α} (h₀ : a ∈ s) (h₁ : IsOpen s)\n    (h₂ : t ∩ s = u ∩ s) : 𝓝[t] a = 𝓝[u] a := by\n  rw [nhdsWithin_restrict t h₀ h₁, nhdsWithin_restrict u h₀ h₁, h₂]\n\n"}
{"name":"nhdsWithin_eq_nhds","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns : Set α\n⊢ Iff (Eq (nhdsWithin a s) (nhds a)) (Membership.mem (nhds a) s)","decl":"@[simp] theorem nhdsWithin_eq_nhds {a : α} {s : Set α} : 𝓝[s] a = 𝓝 a ↔ s ∈ 𝓝 a :=\n  inf_eq_left.trans le_principal_iff\n\n"}
{"name":"IsOpen.nhdsWithin_eq","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns : Set α\nh : IsOpen s\nha : Membership.mem s a\n⊢ Eq (nhdsWithin a s) (nhds a)","decl":"theorem IsOpen.nhdsWithin_eq {a : α} {s : Set α} (h : IsOpen s) (ha : a ∈ s) : 𝓝[s] a = 𝓝 a :=\n  nhdsWithin_eq_nhds.2 <| h.mem_nhds ha\n\n"}
{"name":"preimage_nhds_within_coinduced","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : TopologicalSpace α\nπ : α → β\ns : Set β\nt : Set α\na : α\nh : Membership.mem t a\nht : IsOpen t\nhs : Membership.mem (nhds (π a)) s\n⊢ Membership.mem (nhds a) (Set.preimage π s)","decl":"theorem preimage_nhds_within_coinduced {π : α → β} {s : Set β} {t : Set α} {a : α} (h : a ∈ t)\n    (ht : IsOpen t)\n    (hs : s ∈ @nhds β (.coinduced (fun x : t => π x) inferInstance) (π a)) :\n    π ⁻¹' s ∈ 𝓝 a := by\n  rw [← ht.nhdsWithin_eq h]\n  exact preimage_nhdsWithin_coinduced' h hs\n\n"}
{"name":"nhdsWithin_empty","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\n⊢ Eq (nhdsWithin a EmptyCollection.emptyCollection) Bot.bot","decl":"@[simp]\ntheorem nhdsWithin_empty (a : α) : 𝓝[∅] a = ⊥ := by rw [nhdsWithin, principal_empty, inf_bot_eq]\n\n"}
{"name":"nhdsWithin_union","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns t : Set α\n⊢ Eq (nhdsWithin a (Union.union s t)) (Max.max (nhdsWithin a s) (nhdsWithin a t))","decl":"theorem nhdsWithin_union (a : α) (s t : Set α) : 𝓝[s ∪ t] a = 𝓝[s] a ⊔ 𝓝[t] a := by\n  delta nhdsWithin\n  rw [← inf_sup_left, sup_principal]\n\n"}
{"name":"nhds_eq_nhdsWithin_sup_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\nb : α\nI₁ I₂ : Set α\nhI : Eq Set.univ (Union.union I₁ I₂)\n⊢ Eq (nhds b) (Max.max (nhdsWithin b I₁) (nhdsWithin b I₂))","decl":"theorem nhds_eq_nhdsWithin_sup_nhdsWithin (b : α) {I₁ I₂ : Set α} (hI : Set.univ = I₁ ∪ I₂) :\n    nhds b = nhdsWithin b I₁ ⊔ nhdsWithin b I₂ := by\n  rw [← nhdsWithin_univ b, hI, nhdsWithin_union]\n\n"}
{"name":"union_mem_nhds_of_mem_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\nb : α\nI₁ I₂ : Set α\nh : Eq Set.univ (Union.union I₁ I₂)\nL : Set α\nhL : Membership.mem (nhdsWithin b I₁) L\nR : Set α\nhR : Membership.mem (nhdsWithin b I₂) R\n⊢ Membership.mem (nhds b) (Union.union L R)","decl":"/-- If `L` and `R` are neighborhoods of `b` within sets whose union is `Set.univ`, then\n`L ∪ R` is a neighborhood of `b`. -/\ntheorem union_mem_nhds_of_mem_nhdsWithin {b : α}\n    {I₁ I₂ : Set α} (h : Set.univ = I₁ ∪ I₂)\n    {L : Set α} (hL : L ∈ nhdsWithin b I₁)\n    {R : Set α} (hR : R ∈ nhdsWithin b I₂) : L ∪ R ∈ nhds b := by\n  rw [← nhdsWithin_univ b, h, nhdsWithin_union]\n  exact ⟨mem_of_superset hL (by simp), mem_of_superset hR (by simp)⟩\n\n\n"}
{"name":"punctured_nhds_eq_nhdsWithin_sup_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\ninst✝ : LinearOrder α\nx : α\n⊢ Eq (nhdsWithin x (HasCompl.compl (Singleton.singleton x))) (Max.max (nhdsWithin x (Set.Iio x)) (nhdsWithin x (Set.Ioi x)))","decl":"/-- Writing a punctured neighborhood filter as a sup of left and right filters. -/\nlemma punctured_nhds_eq_nhdsWithin_sup_nhdsWithin [LinearOrder α] {x : α} :\n    𝓝[≠] x = 𝓝[<] x ⊔ 𝓝[>] x := by\n  rw [← Iio_union_Ioi, nhdsWithin_union]\n\n\n"}
{"name":"nhds_of_Ici_Iic","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\ninst✝ : LinearOrder α\nb : α\nL : Set α\nhL : Membership.mem (nhdsWithin b (Set.Iic b)) L\nR : Set α\nhR : Membership.mem (nhdsWithin b (Set.Ici b)) R\n⊢ Membership.mem (nhds b) (Union.union (Inter.inter L (Set.Iic b)) (Inter.inter R (Set.Ici b)))","decl":"/-- Obtain a \"predictably-sided\" neighborhood of `b` from two one-sided neighborhoods. -/\ntheorem nhds_of_Ici_Iic [LinearOrder α] {b : α}\n    {L : Set α} (hL : L ∈ 𝓝[≤] b)\n    {R : Set α} (hR : R ∈ 𝓝[≥] b) : L ∩ Iic b ∪ R ∩ Ici b ∈ 𝓝 b :=\n  union_mem_nhds_of_mem_nhdsWithin Iic_union_Ici.symm\n    (inter_mem hL self_mem_nhdsWithin) (inter_mem hR self_mem_nhdsWithin)\n\n"}
{"name":"nhdsWithin_biUnion","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\nι : Type u_5\nI : Set ι\nhI : I.Finite\ns : ι → Set α\na : α\n⊢ Eq (nhdsWithin a (Set.iUnion fun i => Set.iUnion fun h => s i)) (iSup fun i => iSup fun h => nhdsWithin a (s i))","decl":"theorem nhdsWithin_biUnion {ι} {I : Set ι} (hI : I.Finite) (s : ι → Set α) (a : α) :\n    𝓝[⋃ i ∈ I, s i] a = ⨆ i ∈ I, 𝓝[s i] a :=\n  Set.Finite.induction_on _ hI (by simp) fun _ _ hT ↦ by\n    simp only [hT, nhdsWithin_union, iSup_insert, biUnion_insert]\n\n"}
{"name":"nhdsWithin_sUnion","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\nS : Set (Set α)\nhS : S.Finite\na : α\n⊢ Eq (nhdsWithin a S.sUnion) (iSup fun s => iSup fun h => nhdsWithin a s)","decl":"theorem nhdsWithin_sUnion {S : Set (Set α)} (hS : S.Finite) (a : α) :\n    𝓝[⋃₀ S] a = ⨆ s ∈ S, 𝓝[s] a := by\n  rw [sUnion_eq_biUnion, nhdsWithin_biUnion hS]\n\n"}
{"name":"nhdsWithin_iUnion","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nι : Sort u_5\ninst✝ : Finite ι\ns : ι → Set α\na : α\n⊢ Eq (nhdsWithin a (Set.iUnion fun i => s i)) (iSup fun i => nhdsWithin a (s i))","decl":"theorem nhdsWithin_iUnion {ι} [Finite ι] (s : ι → Set α) (a : α) :\n    𝓝[⋃ i, s i] a = ⨆ i, 𝓝[s i] a := by\n  rw [← sUnion_range, nhdsWithin_sUnion (finite_range s), iSup_range]\n\n"}
{"name":"nhdsWithin_inter","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns t : Set α\n⊢ Eq (nhdsWithin a (Inter.inter s t)) (Min.min (nhdsWithin a s) (nhdsWithin a t))","decl":"theorem nhdsWithin_inter (a : α) (s t : Set α) : 𝓝[s ∩ t] a = 𝓝[s] a ⊓ 𝓝[t] a := by\n  delta nhdsWithin\n  rw [inf_left_comm, inf_assoc, inf_principal, ← inf_assoc, inf_idem]\n\n"}
{"name":"nhdsWithin_inter'","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns t : Set α\n⊢ Eq (nhdsWithin a (Inter.inter s t)) (Min.min (nhdsWithin a s) (Filter.principal t))","decl":"theorem nhdsWithin_inter' (a : α) (s t : Set α) : 𝓝[s ∩ t] a = 𝓝[s] a ⊓ 𝓟 t := by\n  delta nhdsWithin\n  rw [← inf_principal, inf_assoc]\n\n"}
{"name":"nhdsWithin_inter_of_mem","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns t : Set α\nh : Membership.mem (nhdsWithin a t) s\n⊢ Eq (nhdsWithin a (Inter.inter s t)) (nhdsWithin a t)","decl":"theorem nhdsWithin_inter_of_mem {a : α} {s t : Set α} (h : s ∈ 𝓝[t] a) : 𝓝[s ∩ t] a = 𝓝[t] a := by\n  rw [nhdsWithin_inter, inf_eq_right]\n  exact nhdsWithin_le_of_mem h\n\n"}
{"name":"nhdsWithin_inter_of_mem'","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns t : Set α\nh : Membership.mem (nhdsWithin a s) t\n⊢ Eq (nhdsWithin a (Inter.inter s t)) (nhdsWithin a s)","decl":"theorem nhdsWithin_inter_of_mem' {a : α} {s t : Set α} (h : t ∈ 𝓝[s] a) : 𝓝[s ∩ t] a = 𝓝[s] a := by\n  rw [inter_comm, nhdsWithin_inter_of_mem h]\n\n"}
{"name":"nhdsWithin_singleton","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\n⊢ Eq (nhdsWithin a (Singleton.singleton a)) (Pure.pure a)","decl":"@[simp]\ntheorem nhdsWithin_singleton (a : α) : 𝓝[{a}] a = pure a := by\n  rw [nhdsWithin, principal_singleton, inf_eq_right.2 (pure_le_nhds a)]\n\n"}
{"name":"nhdsWithin_insert","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns : Set α\n⊢ Eq (nhdsWithin a (Insert.insert a s)) (Max.max (Pure.pure a) (nhdsWithin a s))","decl":"@[simp]\ntheorem nhdsWithin_insert (a : α) (s : Set α) : 𝓝[insert a s] a = pure a ⊔ 𝓝[s] a := by\n  rw [← singleton_union, nhdsWithin_union, nhdsWithin_singleton]\n\n"}
{"name":"mem_nhdsWithin_insert","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns t : Set α\n⊢ Iff (Membership.mem (nhdsWithin a (Insert.insert a s)) t) (And (Membership.mem t a) (Membership.mem (nhdsWithin a s) t))","decl":"theorem mem_nhdsWithin_insert {a : α} {s t : Set α} : t ∈ 𝓝[insert a s] a ↔ a ∈ t ∧ t ∈ 𝓝[s] a := by\n  simp\n\n"}
{"name":"insert_mem_nhdsWithin_insert","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns t : Set α\nh : Membership.mem (nhdsWithin a s) t\n⊢ Membership.mem (nhdsWithin a (Insert.insert a s)) (Insert.insert a t)","decl":"theorem insert_mem_nhdsWithin_insert {a : α} {s t : Set α} (h : t ∈ 𝓝[s] a) :\n    insert a t ∈ 𝓝[insert a s] a := by simp [mem_of_superset h]\n\n"}
{"name":"insert_mem_nhds_iff","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\ns : Set α\n⊢ Iff (Membership.mem (nhds a) (Insert.insert a s)) (Membership.mem (nhdsWithin a (HasCompl.compl (Singleton.singleton a))) s)","decl":"theorem insert_mem_nhds_iff {a : α} {s : Set α} : insert a s ∈ 𝓝 a ↔ s ∈ 𝓝[≠] a := by\n  simp only [nhdsWithin, mem_inf_principal, mem_compl_iff, mem_singleton_iff, or_iff_not_imp_left,\n    insert_def]\n\n"}
{"name":"nhdsWithin_compl_singleton_sup_pure","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\na : α\n⊢ Eq (Max.max (nhdsWithin a (HasCompl.compl (Singleton.singleton a))) (Pure.pure a)) (nhds a)","decl":"@[simp]\ntheorem nhdsWithin_compl_singleton_sup_pure (a : α) : 𝓝[≠] a ⊔ pure a = 𝓝 a := by\n  rw [← nhdsWithin_singleton, ← nhdsWithin_union, compl_union_self, nhdsWithin_univ]\n\n"}
{"name":"nhdsWithin_prod","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_5\ninst✝¹ : TopologicalSpace α\nβ : Type u_6\ninst✝ : TopologicalSpace β\ns u : Set α\nt v : Set β\na : α\nb : β\nhu : Membership.mem (nhdsWithin a s) u\nhv : Membership.mem (nhdsWithin b t) v\n⊢ Membership.mem (nhdsWithin { fst := a, snd := b } (SProd.sprod s t)) (SProd.sprod u v)","decl":"theorem nhdsWithin_prod {α : Type*} [TopologicalSpace α] {β : Type*} [TopologicalSpace β]\n    {s u : Set α} {t v : Set β} {a : α} {b : β} (hu : u ∈ 𝓝[s] a) (hv : v ∈ 𝓝[t] b) :\n    u ×ˢ v ∈ 𝓝[s ×ˢ t] (a, b) := by\n  rw [nhdsWithin_prod_eq]\n  exact prod_mem_prod hu hv\n\n"}
{"name":"Filter.EventuallyEq.mem_interior","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\nx : α\ns t : Set α\nhst : (nhds x).EventuallyEq s t\nh : Membership.mem (interior s) x\n⊢ Membership.mem (interior t) x","decl":"lemma Filter.EventuallyEq.mem_interior {x : α} {s t : Set α} (hst : s =ᶠ[𝓝 x] t)\n    (h : x ∈ interior s) : x ∈ interior t := by\n  rw [← nhdsWithin_eq_iff_eventuallyEq] at hst\n  simpa [mem_interior_iff_mem_nhds, ← nhdsWithin_eq_nhds, hst] using h\n\n"}
{"name":"Filter.EventuallyEq.mem_interior_iff","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\nx : α\ns t : Set α\nhst : (nhds x).EventuallyEq s t\n⊢ Iff (Membership.mem (interior s) x) (Membership.mem (interior t) x)","decl":"lemma Filter.EventuallyEq.mem_interior_iff {x : α} {s t : Set α} (hst : s =ᶠ[𝓝 x] t) :\n    x ∈ interior s ↔ x ∈ interior t :=\n  ⟨fun h ↦ hst.mem_interior h, fun h ↦ hst.symm.mem_interior h⟩\n\n"}
{"name":"EventuallyEq.mem_interior_iff","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\nx : α\ns t : Set α\nhst : (nhds x).EventuallyEq s t\n⊢ Iff (Membership.mem (interior s) x) (Membership.mem (interior t) x)","decl":"@[deprecated (since := \"2024-11-11\")]\nalias EventuallyEq.mem_interior_iff := Filter.EventuallyEq.mem_interior_iff\n\n"}
{"name":"nhdsWithin_pi_eq'","module":"Mathlib.Topology.ContinuousOn","initialProofState":"ι : Type u_5\nπ : ι → Type u_6\ninst✝ : (i : ι) → TopologicalSpace (π i)\nI : Set ι\nhI : I.Finite\ns : (i : ι) → Set (π i)\nx : (i : ι) → π i\n⊢ Eq (nhdsWithin x (I.pi s)) (iInf fun i => Filter.comap (fun x => x i) (Min.min (nhds (x i)) (iInf fun x => Filter.principal (s i))))","decl":"theorem nhdsWithin_pi_eq' {I : Set ι} (hI : I.Finite) (s : ∀ i, Set (π i)) (x : ∀ i, π i) :\n    𝓝[pi I s] x = ⨅ i, comap (fun x => x i) (𝓝 (x i) ⊓ ⨅ (_ : i ∈ I), 𝓟 (s i)) := by\n  simp only [nhdsWithin, nhds_pi, Filter.pi, comap_inf, comap_iInf, pi_def, comap_principal, ←\n    iInf_principal_finite hI, ← iInf_inf_eq]\n\n"}
{"name":"nhdsWithin_pi_eq","module":"Mathlib.Topology.ContinuousOn","initialProofState":"ι : Type u_5\nπ : ι → Type u_6\ninst✝ : (i : ι) → TopologicalSpace (π i)\nI : Set ι\nhI : I.Finite\ns : (i : ι) → Set (π i)\nx : (i : ι) → π i\n⊢ Eq (nhdsWithin x (I.pi s)) (Min.min (iInf fun i => iInf fun h => Filter.comap (fun x => x i) (nhdsWithin (x i) (s i))) (iInf fun i => iInf fun x_1 => Filter.comap (fun x => x i) (nhds (x i))))","decl":"theorem nhdsWithin_pi_eq {I : Set ι} (hI : I.Finite) (s : ∀ i, Set (π i)) (x : ∀ i, π i) :\n    𝓝[pi I s] x =\n      (⨅ i ∈ I, comap (fun x => x i) (𝓝[s i] x i)) ⊓\n        ⨅ (i) (_ : i ∉ I), comap (fun x => x i) (𝓝 (x i)) := by\n  simp only [nhdsWithin, nhds_pi, Filter.pi, pi_def, ← iInf_principal_finite hI, comap_inf,\n    comap_principal, eval]\n  rw [iInf_split _ fun i => i ∈ I, inf_right_comm]\n  simp only [iInf_inf_eq]\n\n"}
{"name":"nhdsWithin_pi_univ_eq","module":"Mathlib.Topology.ContinuousOn","initialProofState":"ι : Type u_5\nπ : ι → Type u_6\ninst✝¹ : (i : ι) → TopologicalSpace (π i)\ninst✝ : Finite ι\ns : (i : ι) → Set (π i)\nx : (i : ι) → π i\n⊢ Eq (nhdsWithin x (Set.univ.pi s)) (iInf fun i => Filter.comap (fun x => x i) (nhdsWithin (x i) (s i)))","decl":"theorem nhdsWithin_pi_univ_eq [Finite ι] (s : ∀ i, Set (π i)) (x : ∀ i, π i) :\n    𝓝[pi univ s] x = ⨅ i, comap (fun x => x i) (𝓝[s i] x i) := by\n  simpa [nhdsWithin] using nhdsWithin_pi_eq finite_univ s x\n\n"}
{"name":"nhdsWithin_pi_eq_bot","module":"Mathlib.Topology.ContinuousOn","initialProofState":"ι : Type u_5\nπ : ι → Type u_6\ninst✝ : (i : ι) → TopologicalSpace (π i)\nI : Set ι\ns : (i : ι) → Set (π i)\nx : (i : ι) → π i\n⊢ Iff (Eq (nhdsWithin x (I.pi s)) Bot.bot) (Exists fun i => And (Membership.mem I i) (Eq (nhdsWithin (x i) (s i)) Bot.bot))","decl":"theorem nhdsWithin_pi_eq_bot {I : Set ι} {s : ∀ i, Set (π i)} {x : ∀ i, π i} :\n    𝓝[pi I s] x = ⊥ ↔ ∃ i ∈ I, 𝓝[s i] x i = ⊥ := by\n  simp only [nhdsWithin, nhds_pi, pi_inf_principal_pi_eq_bot]\n\n"}
{"name":"nhdsWithin_pi_neBot","module":"Mathlib.Topology.ContinuousOn","initialProofState":"ι : Type u_5\nπ : ι → Type u_6\ninst✝ : (i : ι) → TopologicalSpace (π i)\nI : Set ι\ns : (i : ι) → Set (π i)\nx : (i : ι) → π i\n⊢ Iff (nhdsWithin x (I.pi s)).NeBot (∀ (i : ι), Membership.mem I i → (nhdsWithin (x i) (s i)).NeBot)","decl":"theorem nhdsWithin_pi_neBot {I : Set ι} {s : ∀ i, Set (π i)} {x : ∀ i, π i} :\n    (𝓝[pi I s] x).NeBot ↔ ∀ i ∈ I, (𝓝[s i] x i).NeBot := by\n  simp [neBot_iff, nhdsWithin_pi_eq_bot]\n\n"}
{"name":"instNeBotNhdsWithinUnivPi","module":"Mathlib.Topology.ContinuousOn","initialProofState":"ι : Type u_5\nπ : ι → Type u_6\ninst✝¹ : (i : ι) → TopologicalSpace (π i)\ns : (i : ι) → Set (π i)\nx : (i : ι) → π i\ninst✝ : ∀ (i : ι), (nhdsWithin (x i) (s i)).NeBot\n⊢ (nhdsWithin x (Set.univ.pi s)).NeBot","decl":"instance instNeBotNhdsWithinUnivPi {s : ∀ i, Set (π i)} {x : ∀ i, π i}\n    [∀ i, (𝓝[s i] x i).NeBot] : (𝓝[pi univ s] x).NeBot := by\n  simpa [nhdsWithin_pi_neBot]\n\n"}
{"name":"Pi.instNeBotNhdsWithinIio","module":"Mathlib.Topology.ContinuousOn","initialProofState":"ι : Type u_5\nπ : ι → Type u_6\ninst✝³ : (i : ι) → TopologicalSpace (π i)\ninst✝² : Nonempty ι\ninst✝¹ : (i : ι) → Preorder (π i)\nx : (i : ι) → π i\ninst✝ : ∀ (i : ι), (nhdsWithin (x i) (Set.Iio (x i))).NeBot\n⊢ (nhdsWithin x (Set.Iio x)).NeBot","decl":"instance Pi.instNeBotNhdsWithinIio [Nonempty ι] [∀ i, Preorder (π i)] {x : ∀ i, π i}\n    [∀ i, (𝓝[<] x i).NeBot] : (𝓝[<] x).NeBot :=\n  have : (𝓝[pi univ fun i ↦ Iio (x i)] x).NeBot := inferInstance\n  this.mono <| nhdsWithin_mono _ fun _y hy ↦ lt_of_strongLT fun i ↦ hy i trivial\n\n"}
{"name":"Pi.instNeBotNhdsWithinIoi","module":"Mathlib.Topology.ContinuousOn","initialProofState":"ι : Type u_5\nπ : ι → Type u_6\ninst✝³ : (i : ι) → TopologicalSpace (π i)\ninst✝² : Nonempty ι\ninst✝¹ : (i : ι) → Preorder (π i)\nx : (i : ι) → π i\ninst✝ : ∀ (i : ι), (nhdsWithin (x i) (Set.Ioi (x i))).NeBot\n⊢ (nhdsWithin x (Set.Ioi x)).NeBot","decl":"instance Pi.instNeBotNhdsWithinIoi [Nonempty ι] [∀ i, Preorder (π i)] {x : ∀ i, π i}\n    [∀ i, (𝓝[>] x i).NeBot] : (𝓝[>] x).NeBot :=\n  Pi.instNeBotNhdsWithinIio (π := fun i ↦ (π i)ᵒᵈ) (x := fun i ↦ OrderDual.toDual (x i))\n\n"}
{"name":"Filter.Tendsto.piecewise_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\nf g : α → β\nt : Set α\ninst✝ : (x : α) → Decidable (Membership.mem t x)\na : α\ns : Set α\nl : Filter β\nh₀ : Filter.Tendsto f (nhdsWithin a (Inter.inter s t)) l\nh₁ : Filter.Tendsto g (nhdsWithin a (Inter.inter s (HasCompl.compl t))) l\n⊢ Filter.Tendsto (t.piecewise f g) (nhdsWithin a s) l","decl":"theorem Filter.Tendsto.piecewise_nhdsWithin {f g : α → β} {t : Set α} [∀ x, Decidable (x ∈ t)]\n    {a : α} {s : Set α} {l : Filter β} (h₀ : Tendsto f (𝓝[s ∩ t] a) l)\n    (h₁ : Tendsto g (𝓝[s ∩ tᶜ] a) l) : Tendsto (piecewise t f g) (𝓝[s] a) l := by\n  apply Tendsto.piecewise <;> rwa [← nhdsWithin_inter']\n\n"}
{"name":"Filter.Tendsto.if_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\nf g : α → β\np : α → Prop\ninst✝ : DecidablePred p\na : α\ns : Set α\nl : Filter β\nh₀ : Filter.Tendsto f (nhdsWithin a (Inter.inter s (setOf fun x => p x))) l\nh₁ : Filter.Tendsto g (nhdsWithin a (Inter.inter s (setOf fun x => Not (p x)))) l\n⊢ Filter.Tendsto (fun x => ite (p x) (f x) (g x)) (nhdsWithin a s) l","decl":"theorem Filter.Tendsto.if_nhdsWithin {f g : α → β} {p : α → Prop} [DecidablePred p] {a : α}\n    {s : Set α} {l : Filter β} (h₀ : Tendsto f (𝓝[s ∩ { x | p x }] a) l)\n    (h₁ : Tendsto g (𝓝[s ∩ { x | ¬p x }] a) l) :\n    Tendsto (fun x => if p x then f x else g x) (𝓝[s] a) l :=\n  h₀.piecewise_nhdsWithin h₁\n\n"}
{"name":"map_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : TopologicalSpace α\nf : α → β\na : α\ns : Set α\n⊢ Eq (Filter.map f (nhdsWithin a s)) (iInf fun t => iInf fun h => Filter.principal (Set.image f (Inter.inter t s)))","decl":"theorem map_nhdsWithin (f : α → β) (a : α) (s : Set α) :\n    map f (𝓝[s] a) = ⨅ t ∈ { t : Set α | a ∈ t ∧ IsOpen t }, 𝓟 (f '' (t ∩ s)) :=\n  ((nhdsWithin_basis_open a s).map f).eq_biInf\n\n"}
{"name":"tendsto_nhdsWithin_mono_left","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : TopologicalSpace α\nf : α → β\na : α\ns t : Set α\nl : Filter β\nhst : HasSubset.Subset s t\nh : Filter.Tendsto f (nhdsWithin a t) l\n⊢ Filter.Tendsto f (nhdsWithin a s) l","decl":"theorem tendsto_nhdsWithin_mono_left {f : α → β} {a : α} {s t : Set α} {l : Filter β} (hst : s ⊆ t)\n    (h : Tendsto f (𝓝[t] a) l) : Tendsto f (𝓝[s] a) l :=\n  h.mono_left <| nhdsWithin_mono a hst\n\n"}
{"name":"tendsto_nhdsWithin_mono_right","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : TopologicalSpace α\nf : β → α\nl : Filter β\na : α\ns t : Set α\nhst : HasSubset.Subset s t\nh : Filter.Tendsto f l (nhdsWithin a s)\n⊢ Filter.Tendsto f l (nhdsWithin a t)","decl":"theorem tendsto_nhdsWithin_mono_right {f : β → α} {l : Filter β} {a : α} {s t : Set α} (hst : s ⊆ t)\n    (h : Tendsto f l (𝓝[s] a)) : Tendsto f l (𝓝[t] a) :=\n  h.mono_right (nhdsWithin_mono a hst)\n\n"}
{"name":"tendsto_nhdsWithin_of_tendsto_nhds","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : TopologicalSpace α\nf : α → β\na : α\ns : Set α\nl : Filter β\nh : Filter.Tendsto f (nhds a) l\n⊢ Filter.Tendsto f (nhdsWithin a s) l","decl":"theorem tendsto_nhdsWithin_of_tendsto_nhds {f : α → β} {a : α} {s : Set α} {l : Filter β}\n    (h : Tendsto f (𝓝 a) l) : Tendsto f (𝓝[s] a) l :=\n  h.mono_left inf_le_left\n\n"}
{"name":"eventually_mem_of_tendsto_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : TopologicalSpace α\nf : β → α\na : α\ns : Set α\nl : Filter β\nh : Filter.Tendsto f l (nhdsWithin a s)\n⊢ Filter.Eventually (fun i => Membership.mem s (f i)) l","decl":"theorem eventually_mem_of_tendsto_nhdsWithin {f : β → α} {a : α} {s : Set α} {l : Filter β}\n    (h : Tendsto f l (𝓝[s] a)) : ∀ᶠ i in l, f i ∈ s := by\n  simp_rw [nhdsWithin_eq, tendsto_iInf, mem_setOf_eq, tendsto_principal, mem_inter_iff,\n    eventually_and] at h\n  exact (h univ ⟨mem_univ a, isOpen_univ⟩).2\n\n"}
{"name":"tendsto_nhds_of_tendsto_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : TopologicalSpace α\nf : β → α\na : α\ns : Set α\nl : Filter β\nh : Filter.Tendsto f l (nhdsWithin a s)\n⊢ Filter.Tendsto f l (nhds a)","decl":"theorem tendsto_nhds_of_tendsto_nhdsWithin {f : β → α} {a : α} {s : Set α} {l : Filter β}\n    (h : Tendsto f l (𝓝[s] a)) : Tendsto f l (𝓝 a) :=\n  h.mono_right nhdsWithin_le_nhds\n\n"}
{"name":"nhdsWithin_neBot_of_mem","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\ns : Set α\nx : α\nhx : Membership.mem s x\n⊢ (nhdsWithin x s).NeBot","decl":"theorem nhdsWithin_neBot_of_mem {s : Set α} {x : α} (hx : x ∈ s) : NeBot (𝓝[s] x) :=\n  mem_closure_iff_nhdsWithin_neBot.1 <| subset_closure hx\n\n"}
{"name":"IsClosed.mem_of_nhdsWithin_neBot","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\ns : Set α\nhs : IsClosed s\nx : α\nhx : (nhdsWithin x s).NeBot\n⊢ Membership.mem s x","decl":"theorem IsClosed.mem_of_nhdsWithin_neBot {s : Set α} (hs : IsClosed s) {x : α}\n    (hx : NeBot <| 𝓝[s] x) : x ∈ s :=\n  hs.closure_eq ▸ mem_closure_iff_nhdsWithin_neBot.2 hx\n\n"}
{"name":"DenseRange.nhdsWithin_neBot","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\nι : Type u_5\nf : ι → α\nh : DenseRange f\nx : α\n⊢ (nhdsWithin x (Set.range f)).NeBot","decl":"theorem DenseRange.nhdsWithin_neBot {ι : Type*} {f : ι → α} (h : DenseRange f) (x : α) :\n    NeBot (𝓝[range f] x) :=\n  mem_closure_iff_clusterPt.1 (h x)\n\n"}
{"name":"mem_closure_pi","module":"Mathlib.Topology.ContinuousOn","initialProofState":"ι : Type u_5\nα : ι → Type u_6\ninst✝ : (i : ι) → TopologicalSpace (α i)\nI : Set ι\ns : (i : ι) → Set (α i)\nx : (i : ι) → α i\n⊢ Iff (Membership.mem (closure (I.pi s)) x) (∀ (i : ι), Membership.mem I i → Membership.mem (closure (s i)) (x i))","decl":"theorem mem_closure_pi {ι : Type*} {α : ι → Type*} [∀ i, TopologicalSpace (α i)] {I : Set ι}\n    {s : ∀ i, Set (α i)} {x : ∀ i, α i} : x ∈ closure (pi I s) ↔ ∀ i ∈ I, x i ∈ closure (s i) := by\n  simp only [mem_closure_iff_nhdsWithin_neBot, nhdsWithin_pi_neBot]\n\n"}
{"name":"closure_pi_set","module":"Mathlib.Topology.ContinuousOn","initialProofState":"ι : Type u_5\nα : ι → Type u_6\ninst✝ : (i : ι) → TopologicalSpace (α i)\nI : Set ι\ns : (i : ι) → Set (α i)\n⊢ Eq (closure (I.pi s)) (I.pi fun i => closure (s i))","decl":"theorem closure_pi_set {ι : Type*} {α : ι → Type*} [∀ i, TopologicalSpace (α i)] (I : Set ι)\n    (s : ∀ i, Set (α i)) : closure (pi I s) = pi I fun i => closure (s i) :=\n  Set.ext fun _ => mem_closure_pi\n\n"}
{"name":"dense_pi","module":"Mathlib.Topology.ContinuousOn","initialProofState":"ι : Type u_5\nα : ι → Type u_6\ninst✝ : (i : ι) → TopologicalSpace (α i)\ns : (i : ι) → Set (α i)\nI : Set ι\nhs : ∀ (i : ι), Membership.mem I i → Dense (s i)\n⊢ Dense (I.pi s)","decl":"theorem dense_pi {ι : Type*} {α : ι → Type*} [∀ i, TopologicalSpace (α i)] {s : ∀ i, Set (α i)}\n    (I : Set ι) (hs : ∀ i ∈ I, Dense (s i)) : Dense (pi I s) := by\n  simp only [dense_iff_closure_eq, closure_pi_set, pi_congr rfl fun i hi => (hs i hi).closure_eq,\n    pi_univ]\n\n"}
{"name":"eventuallyEq_nhdsWithin_iff","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : TopologicalSpace α\nf g : α → β\ns : Set α\na : α\n⊢ Iff ((nhdsWithin a s).EventuallyEq f g) (Filter.Eventually (fun x => Membership.mem s x → Eq (f x) (g x)) (nhds a))","decl":"theorem eventuallyEq_nhdsWithin_iff {f g : α → β} {s : Set α} {a : α} :\n    f =ᶠ[𝓝[s] a] g ↔ ∀ᶠ x in 𝓝 a, x ∈ s → f x = g x :=\n  mem_inf_principal\n\n"}
{"name":"eventuallyEq_nhdsWithin_of_eqOn","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : TopologicalSpace α\nf g : α → β\ns : Set α\na : α\nh : Set.EqOn f g s\n⊢ (nhdsWithin a s).EventuallyEq f g","decl":"theorem eventuallyEq_nhdsWithin_of_eqOn {f g : α → β} {s : Set α} {a : α} (h : EqOn f g s) :\n    f =ᶠ[𝓝[s] a] g :=\n  mem_inf_of_right h\n\n"}
{"name":"Set.EqOn.eventuallyEq_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : TopologicalSpace α\nf g : α → β\ns : Set α\na : α\nh : Set.EqOn f g s\n⊢ (nhdsWithin a s).EventuallyEq f g","decl":"theorem Set.EqOn.eventuallyEq_nhdsWithin {f g : α → β} {s : Set α} {a : α} (h : EqOn f g s) :\n    f =ᶠ[𝓝[s] a] g :=\n  eventuallyEq_nhdsWithin_of_eqOn h\n\n"}
{"name":"tendsto_nhdsWithin_congr","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : TopologicalSpace α\nf g : α → β\ns : Set α\na : α\nl : Filter β\nhfg : ∀ (x : α), Membership.mem s x → Eq (f x) (g x)\nhf : Filter.Tendsto f (nhdsWithin a s) l\n⊢ Filter.Tendsto g (nhdsWithin a s) l","decl":"theorem tendsto_nhdsWithin_congr {f g : α → β} {s : Set α} {a : α} {l : Filter β}\n    (hfg : ∀ x ∈ s, f x = g x) (hf : Tendsto f (𝓝[s] a) l) : Tendsto g (𝓝[s] a) l :=\n  (tendsto_congr' <| eventuallyEq_nhdsWithin_of_eqOn hfg).1 hf\n\n"}
{"name":"eventually_nhdsWithin_of_forall","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\ns : Set α\na : α\np : α → Prop\nh : ∀ (x : α), Membership.mem s x → p x\n⊢ Filter.Eventually (fun x => p x) (nhdsWithin a s)","decl":"theorem eventually_nhdsWithin_of_forall {s : Set α} {a : α} {p : α → Prop} (h : ∀ x ∈ s, p x) :\n    ∀ᶠ x in 𝓝[s] a, p x :=\n  mem_inf_of_right h\n\n"}
{"name":"tendsto_nhdsWithin_of_tendsto_nhds_of_eventually_within","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : TopologicalSpace α\na : α\nl : Filter β\ns : Set α\nf : β → α\nh1 : Filter.Tendsto f l (nhds a)\nh2 : Filter.Eventually (fun x => Membership.mem s (f x)) l\n⊢ Filter.Tendsto f l (nhdsWithin a s)","decl":"theorem tendsto_nhdsWithin_of_tendsto_nhds_of_eventually_within {a : α} {l : Filter β} {s : Set α}\n    (f : β → α) (h1 : Tendsto f l (𝓝 a)) (h2 : ∀ᶠ x in l, f x ∈ s) : Tendsto f l (𝓝[s] a) :=\n  tendsto_inf.2 ⟨h1, tendsto_principal.2 h2⟩\n\n"}
{"name":"tendsto_nhdsWithin_iff","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : TopologicalSpace α\na : α\nl : Filter β\ns : Set α\nf : β → α\n⊢ Iff (Filter.Tendsto f l (nhdsWithin a s)) (And (Filter.Tendsto f l (nhds a)) (Filter.Eventually (fun n => Membership.mem s (f n)) l))","decl":"theorem tendsto_nhdsWithin_iff {a : α} {l : Filter β} {s : Set α} {f : β → α} :\n    Tendsto f l (𝓝[s] a) ↔ Tendsto f l (𝓝 a) ∧ ∀ᶠ n in l, f n ∈ s :=\n  ⟨fun h => ⟨tendsto_nhds_of_tendsto_nhdsWithin h, eventually_mem_of_tendsto_nhdsWithin h⟩, fun h =>\n    tendsto_nhdsWithin_of_tendsto_nhds_of_eventually_within _ h.1 h.2⟩\n\n"}
{"name":"tendsto_nhdsWithin_range","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : TopologicalSpace α\na : α\nl : Filter β\nf : β → α\n⊢ Iff (Filter.Tendsto f l (nhdsWithin a (Set.range f))) (Filter.Tendsto f l (nhds a))","decl":"@[simp]\ntheorem tendsto_nhdsWithin_range {a : α} {l : Filter β} {f : β → α} :\n    Tendsto f l (𝓝[range f] a) ↔ Tendsto f l (𝓝 a) :=\n  ⟨fun h => h.mono_right inf_le_left, fun h =>\n    tendsto_inf.2 ⟨h, tendsto_principal.2 <| Eventually.of_forall mem_range_self⟩⟩\n\n"}
{"name":"Filter.EventuallyEq.eq_of_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : TopologicalSpace α\ns : Set α\nf g : α → β\na : α\nh : (nhdsWithin a s).EventuallyEq f g\nhmem : Membership.mem s a\n⊢ Eq (f a) (g a)","decl":"theorem Filter.EventuallyEq.eq_of_nhdsWithin {s : Set α} {f g : α → β} {a : α} (h : f =ᶠ[𝓝[s] a] g)\n    (hmem : a ∈ s) : f a = g a :=\n  h.self_of_nhdsWithin hmem\n\n"}
{"name":"eventually_nhdsWithin_of_eventually_nhds","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_5\ninst✝ : TopologicalSpace α\ns : Set α\na : α\np : α → Prop\nh : Filter.Eventually (fun x => p x) (nhds a)\n⊢ Filter.Eventually (fun x => p x) (nhdsWithin a s)","decl":"theorem eventually_nhdsWithin_of_eventually_nhds {α : Type*} [TopologicalSpace α] {s : Set α}\n    {a : α} {p : α → Prop} (h : ∀ᶠ x in 𝓝 a, p x) : ∀ᶠ x in 𝓝[s] a, p x :=\n  mem_nhdsWithin_of_mem_nhds h\n\n"}
{"name":"Set.MapsTo.preimage_mem_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : TopologicalSpace α\nf : α → β\ns : Set α\nt : Set β\nx : α\nhst : Set.MapsTo f s t\n⊢ Membership.mem (nhdsWithin x s) (Set.preimage f t)","decl":"lemma Set.MapsTo.preimage_mem_nhdsWithin {f : α → β} {s : Set α} {t : Set β} {x : α}\n    (hst : MapsTo f s t) : f ⁻¹' t ∈ 𝓝[s] x :=\n  Filter.mem_of_superset self_mem_nhdsWithin hst\n\n"}
{"name":"mem_nhdsWithin_subtype","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\ns : Set α\na : Subtype fun x => Membership.mem s x\nt u : Set (Subtype fun x => Membership.mem s x)\n⊢ Iff (Membership.mem (nhdsWithin a u) t) (Membership.mem (Filter.comap Subtype.val (nhdsWithin (↑a) (Set.image Subtype.val u))) t)","decl":"theorem mem_nhdsWithin_subtype {s : Set α} {a : { x // x ∈ s }} {t u : Set { x // x ∈ s }} :\n    t ∈ 𝓝[u] a ↔ t ∈ comap ((↑) : s → α) (𝓝[(↑) '' u] a) := by\n  rw [nhdsWithin, nhds_subtype, principal_subtype, ← comap_inf, ← nhdsWithin]\n\n"}
{"name":"nhdsWithin_subtype","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\ns : Set α\na : Subtype fun x => Membership.mem s x\nt : Set (Subtype fun x => Membership.mem s x)\n⊢ Eq (nhdsWithin a t) (Filter.comap Subtype.val (nhdsWithin (↑a) (Set.image Subtype.val t)))","decl":"theorem nhdsWithin_subtype (s : Set α) (a : { x // x ∈ s }) (t : Set { x // x ∈ s }) :\n    𝓝[t] a = comap ((↑) : s → α) (𝓝[(↑) '' t] a) :=\n  Filter.ext fun _ => mem_nhdsWithin_subtype\n\n"}
{"name":"nhdsWithin_eq_map_subtype_coe","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\ns : Set α\na : α\nh : Membership.mem s a\n⊢ Eq (nhdsWithin a s) (Filter.map Subtype.val (nhds ⟨a, h⟩))","decl":"theorem nhdsWithin_eq_map_subtype_coe {s : Set α} {a : α} (h : a ∈ s) :\n    𝓝[s] a = map ((↑) : s → α) (𝓝 ⟨a, h⟩) :=\n  (map_nhds_subtype_val ⟨a, h⟩).symm\n\n"}
{"name":"mem_nhds_subtype_iff_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\ns : Set α\na : ↑s\nt : Set ↑s\n⊢ Iff (Membership.mem (nhds a) t) (Membership.mem (nhdsWithin (↑a) s) (Set.image Subtype.val t))","decl":"theorem mem_nhds_subtype_iff_nhdsWithin {s : Set α} {a : s} {t : Set s} :\n    t ∈ 𝓝 a ↔ (↑) '' t ∈ 𝓝[s] (a : α) := by\n  rw [← map_nhds_subtype_val, image_mem_map_iff Subtype.val_injective]\n\n"}
{"name":"preimage_coe_mem_nhds_subtype","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\ns t : Set α\na : ↑s\n⊢ Iff (Membership.mem (nhds a) (Set.preimage Subtype.val t)) (Membership.mem (nhdsWithin (↑a) s) t)","decl":"theorem preimage_coe_mem_nhds_subtype {s t : Set α} {a : s} : (↑) ⁻¹' t ∈ 𝓝 a ↔ t ∈ 𝓝[s] ↑a := by\n  rw [← map_nhds_subtype_val, mem_map]\n\n"}
{"name":"eventually_nhds_subtype_iff","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\ns : Set α\na : ↑s\nP : α → Prop\n⊢ Iff (Filter.Eventually (fun x => P ↑x) (nhds a)) (Filter.Eventually (fun x => P x) (nhdsWithin (↑a) s))","decl":"theorem eventually_nhds_subtype_iff (s : Set α) (a : s) (P : α → Prop) :\n    (∀ᶠ x : s in 𝓝 a, P x) ↔ ∀ᶠ x in 𝓝[s] a, P x :=\n  preimage_coe_mem_nhds_subtype\n\n"}
{"name":"frequently_nhds_subtype_iff","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\ns : Set α\na : ↑s\nP : α → Prop\n⊢ Iff (Filter.Frequently (fun x => P ↑x) (nhds a)) (Filter.Frequently (fun x => P x) (nhdsWithin (↑a) s))","decl":"theorem frequently_nhds_subtype_iff (s : Set α) (a : s) (P : α → Prop) :\n    (∃ᶠ x : s in 𝓝 a, P x) ↔ ∃ᶠ x in 𝓝[s] a, P x :=\n  eventually_nhds_subtype_iff s a (¬ P ·) |>.not\n\n"}
{"name":"tendsto_nhdsWithin_iff_subtype","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : TopologicalSpace α\ns : Set α\na : α\nh : Membership.mem s a\nf : α → β\nl : Filter β\n⊢ Iff (Filter.Tendsto f (nhdsWithin a s) l) (Filter.Tendsto (s.restrict f) (nhds ⟨a, h⟩) l)","decl":"theorem tendsto_nhdsWithin_iff_subtype {s : Set α} {a : α} (h : a ∈ s) (f : α → β) (l : Filter β) :\n    Tendsto f (𝓝[s] a) l ↔ Tendsto (s.restrict f) (𝓝 ⟨a, h⟩) l := by\n  rw [nhdsWithin_eq_map_subtype_coe h, tendsto_map'_iff]; rfl\n\n"}
{"name":"ContinuousWithinAt.tendsto","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nx : α\nh : ContinuousWithinAt f s x\n⊢ Filter.Tendsto f (nhdsWithin x s) (nhds (f x))","decl":"/-- If a function is continuous within `s` at `x`, then it tends to `f x` within `s` by definition.\nWe register this fact for use with the dot notation, especially to use `Filter.Tendsto.comp` as\n`ContinuousWithinAt.comp` will have a different meaning. -/\ntheorem ContinuousWithinAt.tendsto (h : ContinuousWithinAt f s x) :\n    Tendsto f (𝓝[s] x) (𝓝 (f x)) :=\n  h\n\n"}
{"name":"continuousWithinAt_univ","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\nx : α\n⊢ Iff (ContinuousWithinAt f Set.univ x) (ContinuousAt f x)","decl":"theorem continuousWithinAt_univ (f : α → β) (x : α) :\n    ContinuousWithinAt f Set.univ x ↔ ContinuousAt f x := by\n  rw [ContinuousAt, ContinuousWithinAt, nhdsWithin_univ]\n\n"}
{"name":"continuous_iff_continuousOn_univ","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\n⊢ Iff (Continuous f) (ContinuousOn f Set.univ)","decl":"theorem continuous_iff_continuousOn_univ {f : α → β} : Continuous f ↔ ContinuousOn f univ := by\n  simp [continuous_iff_continuousAt, ContinuousOn, ContinuousAt, ContinuousWithinAt,\n    nhdsWithin_univ]\n\n"}
{"name":"continuousWithinAt_iff_continuousAt_restrict","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\nx : α\ns : Set α\nh : Membership.mem s x\n⊢ Iff (ContinuousWithinAt f s x) (ContinuousAt (s.restrict f) ⟨x, h⟩)","decl":"theorem continuousWithinAt_iff_continuousAt_restrict (f : α → β) {x : α} {s : Set α} (h : x ∈ s) :\n    ContinuousWithinAt f s x ↔ ContinuousAt (s.restrict f) ⟨x, h⟩ :=\n  tendsto_nhdsWithin_iff_subtype h f _\n\n"}
{"name":"ContinuousWithinAt.tendsto_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nx : α\nt : Set β\nh : ContinuousWithinAt f s x\nht : Set.MapsTo f s t\n⊢ Filter.Tendsto f (nhdsWithin x s) (nhdsWithin (f x) t)","decl":"theorem ContinuousWithinAt.tendsto_nhdsWithin {t : Set β}\n    (h : ContinuousWithinAt f s x) (ht : MapsTo f s t) :\n    Tendsto f (𝓝[s] x) (𝓝[t] f x) :=\n  tendsto_inf.2 ⟨h, tendsto_principal.2 <| mem_inf_of_right <| mem_principal.2 <| ht⟩\n\n"}
{"name":"ContinuousWithinAt.tendsto_nhdsWithin_image","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nx : α\nh : ContinuousWithinAt f s x\n⊢ Filter.Tendsto f (nhdsWithin x s) (nhdsWithin (f x) (Set.image f s))","decl":"theorem ContinuousWithinAt.tendsto_nhdsWithin_image (h : ContinuousWithinAt f s x) :\n    Tendsto f (𝓝[s] x) (𝓝[f '' s] f x) :=\n  h.tendsto_nhdsWithin (mapsTo_image _ _)\n\n"}
{"name":"nhdsWithin_le_comap","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nx : α\nctsf : ContinuousWithinAt f s x\n⊢ LE.le (nhdsWithin x s) (Filter.comap f (nhdsWithin (f x) (Set.image f s)))","decl":"theorem nhdsWithin_le_comap (ctsf : ContinuousWithinAt f s x) :\n    𝓝[s] x ≤ comap f (𝓝[f '' s] f x) :=\n  ctsf.tendsto_nhdsWithin_image.le_comap\n\n"}
{"name":"ContinuousWithinAt.preimage_mem_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nx : α\nt : Set β\nh : ContinuousWithinAt f s x\nht : Membership.mem (nhds (f x)) t\n⊢ Membership.mem (nhdsWithin x s) (Set.preimage f t)","decl":"theorem ContinuousWithinAt.preimage_mem_nhdsWithin {t : Set β}\n    (h : ContinuousWithinAt f s x) (ht : t ∈ 𝓝 (f x)) : f ⁻¹' t ∈ 𝓝[s] x :=\n  h ht\n\n"}
{"name":"ContinuousWithinAt.preimage_mem_nhdsWithin'","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nx : α\nt : Set β\nh : ContinuousWithinAt f s x\nht : Membership.mem (nhdsWithin (f x) (Set.image f s)) t\n⊢ Membership.mem (nhdsWithin x s) (Set.preimage f t)","decl":"theorem ContinuousWithinAt.preimage_mem_nhdsWithin' {t : Set β}\n    (h : ContinuousWithinAt f s x) (ht : t ∈ 𝓝[f '' s] f x) : f ⁻¹' t ∈ 𝓝[s] x :=\n  h.tendsto_nhdsWithin (mapsTo_image _ _) ht\n\n"}
{"name":"ContinuousWithinAt.preimage_mem_nhdsWithin''","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\nx : α\ny : β\ns t : Set β\nh : ContinuousWithinAt f (Set.preimage f s) x\nht : Membership.mem (nhdsWithin y s) t\nhxy : Eq y (f x)\n⊢ Membership.mem (nhdsWithin x (Set.preimage f s)) (Set.preimage f t)","decl":"theorem ContinuousWithinAt.preimage_mem_nhdsWithin'' {y : β} {s t : Set β}\n    (h : ContinuousWithinAt f (f ⁻¹' s) x) (ht : t ∈ 𝓝[s] y) (hxy : y = f x) :\n    f ⁻¹' t ∈ 𝓝[f ⁻¹' s] x := by\n  rw [hxy] at ht\n  exact h.preimage_mem_nhdsWithin' (nhdsWithin_mono _ (image_preimage_subset f s) ht)\n\n"}
{"name":"continuousWithinAt_of_not_mem_closure","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nx : α\nhx : Not (Membership.mem (closure s) x)\n⊢ ContinuousWithinAt f s x","decl":"theorem continuousWithinAt_of_not_mem_closure (hx : x ∉ closure s) :\n    ContinuousWithinAt f s x := by\n  rw [mem_closure_iff_nhdsWithin_neBot, not_neBot] at hx\n  rw [ContinuousWithinAt, hx]\n  exact tendsto_bot\n\n"}
{"name":"continuousOn_iff","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\n⊢ Iff (ContinuousOn f s) (∀ (x : α), Membership.mem s x → ∀ (t : Set β), IsOpen t → Membership.mem t (f x) → Exists fun u => And (IsOpen u) (And (Membership.mem u x) (HasSubset.Subset (Inter.inter u s) (Set.preimage f t))))","decl":"theorem continuousOn_iff :\n    ContinuousOn f s ↔\n      ∀ x ∈ s, ∀ t : Set β, IsOpen t → f x ∈ t → ∃ u, IsOpen u ∧ x ∈ u ∧ u ∩ s ⊆ f ⁻¹' t := by\n  simp only [ContinuousOn, ContinuousWithinAt, tendsto_nhds, mem_nhdsWithin]\n\n"}
{"name":"ContinuousOn.continuousWithinAt","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nx : α\nhf : ContinuousOn f s\nhx : Membership.mem s x\n⊢ ContinuousWithinAt f s x","decl":"theorem ContinuousOn.continuousWithinAt (hf : ContinuousOn f s) (hx : x ∈ s) :\n    ContinuousWithinAt f s x :=\n  hf x hx\n\n"}
{"name":"continuousOn_iff_continuous_restrict","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\n⊢ Iff (ContinuousOn f s) (Continuous (s.restrict f))","decl":"theorem continuousOn_iff_continuous_restrict :\n    ContinuousOn f s ↔ Continuous (s.restrict f) := by\n  rw [ContinuousOn, continuous_iff_continuousAt]; constructor\n  · rintro h ⟨x, xs⟩\n    exact (continuousWithinAt_iff_continuousAt_restrict f xs).mp (h x xs)\n  intro h x xs\n  exact (continuousWithinAt_iff_continuousAt_restrict f xs).mpr (h ⟨x, xs⟩)\n\n-- Porting note: 2 new lemmas\n"}
{"name":"ContinuousOn.restrict","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\na✝ : ContinuousOn f s\n⊢ Continuous (s.restrict f)","decl":"alias ⟨ContinuousOn.restrict, _⟩ := continuousOn_iff_continuous_restrict\n\n"}
{"name":"ContinuousOn.restrict_mapsTo","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nt : Set β\nhf : ContinuousOn f s\nht : Set.MapsTo f s t\n⊢ Continuous (Set.MapsTo.restrict f s t ht)","decl":"theorem ContinuousOn.restrict_mapsTo {t : Set β} (hf : ContinuousOn f s) (ht : MapsTo f s t) :\n    Continuous (ht.restrict f s t) :=\n  hf.restrict.codRestrict _\n\n"}
{"name":"continuousOn_iff'","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\n⊢ Iff (ContinuousOn f s) (∀ (t : Set β), IsOpen t → Exists fun u => And (IsOpen u) (Eq (Inter.inter (Set.preimage f t) s) (Inter.inter u s)))","decl":"theorem continuousOn_iff' :\n    ContinuousOn f s ↔ ∀ t : Set β, IsOpen t → ∃ u, IsOpen u ∧ f ⁻¹' t ∩ s = u ∩ s := by\n  have : ∀ t, IsOpen (s.restrict f ⁻¹' t) ↔ ∃ u : Set α, IsOpen u ∧ f ⁻¹' t ∩ s = u ∩ s := by\n    intro t\n    rw [isOpen_induced_iff, Set.restrict_eq, Set.preimage_comp]\n    simp only [Subtype.preimage_coe_eq_preimage_coe_iff]\n    constructor <;>\n      · rintro ⟨u, ou, useq⟩\n        exact ⟨u, ou, by simpa only [Set.inter_comm, eq_comm] using useq⟩\n  rw [continuousOn_iff_continuous_restrict, continuous_def]; simp only [this]\n\n"}
{"name":"ContinuousOn.mono_dom","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_5\nβ : Type u_6\nt₁ t₂ : TopologicalSpace α\nt₃ : TopologicalSpace β\nh₁ : LE.le t₂ t₁\ns : Set α\nf : α → β\nh₂ : ContinuousOn f s\n⊢ ContinuousOn f s","decl":"/-- If a function is continuous on a set for some topologies, then it is\ncontinuous on the same set with respect to any finer topology on the source space. -/\ntheorem ContinuousOn.mono_dom {α β : Type*} {t₁ t₂ : TopologicalSpace α} {t₃ : TopologicalSpace β}\n    (h₁ : t₂ ≤ t₁) {s : Set α} {f : α → β} (h₂ : @ContinuousOn α β t₁ t₃ f s) :\n    @ContinuousOn α β t₂ t₃ f s := fun x hx _u hu =>\n  map_mono (inf_le_inf_right _ <| nhds_mono h₁) (h₂ x hx hu)\n\n"}
{"name":"ContinuousOn.mono_rng","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_5\nβ : Type u_6\nt₁ : TopologicalSpace α\nt₂ t₃ : TopologicalSpace β\nh₁ : LE.le t₂ t₃\ns : Set α\nf : α → β\nh₂ : ContinuousOn f s\n⊢ ContinuousOn f s","decl":"/-- If a function is continuous on a set for some topologies, then it is\ncontinuous on the same set with respect to any coarser topology on the target space. -/\ntheorem ContinuousOn.mono_rng {α β : Type*} {t₁ : TopologicalSpace α} {t₂ t₃ : TopologicalSpace β}\n    (h₁ : t₂ ≤ t₃) {s : Set α} {f : α → β} (h₂ : @ContinuousOn α β t₁ t₂ f s) :\n    @ContinuousOn α β t₁ t₃ f s := fun x hx _u hu =>\n  h₂ x hx <| nhds_mono h₁ hu\n\n"}
{"name":"continuousOn_iff_isClosed","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\n⊢ Iff (ContinuousOn f s) (∀ (t : Set β), IsClosed t → Exists fun u => And (IsClosed u) (Eq (Inter.inter (Set.preimage f t) s) (Inter.inter u s)))","decl":"theorem continuousOn_iff_isClosed :\n    ContinuousOn f s ↔ ∀ t : Set β, IsClosed t → ∃ u, IsClosed u ∧ f ⁻¹' t ∩ s = u ∩ s := by\n  have : ∀ t, IsClosed (s.restrict f ⁻¹' t) ↔ ∃ u : Set α, IsClosed u ∧ f ⁻¹' t ∩ s = u ∩ s := by\n    intro t\n    rw [isClosed_induced_iff, Set.restrict_eq, Set.preimage_comp]\n    simp only [Subtype.preimage_coe_eq_preimage_coe_iff, eq_comm, Set.inter_comm s]\n  rw [continuousOn_iff_continuous_restrict, continuous_iff_isClosed]; simp only [this]\n\n"}
{"name":"continuous_of_cover_nhds","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\nι : Sort u_5\ns : ι → Set α\nhs : ∀ (x : α), Exists fun i => Membership.mem (nhds x) (s i)\nhf : ∀ (i : ι), ContinuousOn f (s i)\n⊢ Continuous f","decl":"theorem continuous_of_cover_nhds {ι : Sort*} {s : ι → Set α}\n    (hs : ∀ x : α, ∃ i, s i ∈ 𝓝 x) (hf : ∀ i, ContinuousOn f (s i)) :\n    Continuous f :=\n  continuous_iff_continuousAt.mpr fun x ↦ let ⟨i, hi⟩ := hs x; by\n    rw [ContinuousAt, ← nhdsWithin_eq_nhds.2 hi]\n    exact hf _ _ (mem_of_mem_nhds hi)\n\n"}
{"name":"continuousOn_empty","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\n⊢ ContinuousOn f EmptyCollection.emptyCollection","decl":"@[simp] theorem continuousOn_empty (f : α → β) : ContinuousOn f ∅ := fun _ => False.elim\n\n"}
{"name":"continuousOn_singleton","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\na : α\n⊢ ContinuousOn f (Singleton.singleton a)","decl":"@[simp]\ntheorem continuousOn_singleton (f : α → β) (a : α) : ContinuousOn f {a} :=\n  forall_eq.2 <| by\n    simpa only [ContinuousWithinAt, nhdsWithin_singleton, tendsto_pure_left] using fun s =>\n      mem_of_mem_nhds\n\n"}
{"name":"Set.Subsingleton.continuousOn","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\ns : Set α\nhs : s.Subsingleton\nf : α → β\n⊢ ContinuousOn f s","decl":"theorem Set.Subsingleton.continuousOn {s : Set α} (hs : s.Subsingleton) (f : α → β) :\n    ContinuousOn f s :=\n  hs.induction_on (continuousOn_empty f) (continuousOn_singleton f)\n\n"}
{"name":"continuousOn_open_iff","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nhs : IsOpen s\n⊢ Iff (ContinuousOn f s) (∀ (t : Set β), IsOpen t → IsOpen (Inter.inter s (Set.preimage f t)))","decl":"theorem continuousOn_open_iff (hs : IsOpen s) :\n    ContinuousOn f s ↔ ∀ t, IsOpen t → IsOpen (s ∩ f ⁻¹' t) := by\n  rw [continuousOn_iff']\n  constructor\n  · intro h t ht\n    rcases h t ht with ⟨u, u_open, hu⟩\n    rw [inter_comm, hu]\n    apply IsOpen.inter u_open hs\n  · intro h t ht\n    refine ⟨s ∩ f ⁻¹' t, h t ht, ?_⟩\n    rw [@inter_comm _ s (f ⁻¹' t), inter_assoc, inter_self]\n\n"}
{"name":"ContinuousOn.isOpen_inter_preimage","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nt : Set β\nhf : ContinuousOn f s\nhs : IsOpen s\nht : IsOpen t\n⊢ IsOpen (Inter.inter s (Set.preimage f t))","decl":"theorem ContinuousOn.isOpen_inter_preimage {t : Set β}\n    (hf : ContinuousOn f s) (hs : IsOpen s) (ht : IsOpen t) : IsOpen (s ∩ f ⁻¹' t) :=\n  (continuousOn_open_iff hs).1 hf t ht\n\n"}
{"name":"ContinuousOn.isOpen_preimage","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nt : Set β\nh : ContinuousOn f s\nhs : IsOpen s\nhp : HasSubset.Subset (Set.preimage f t) s\nht : IsOpen t\n⊢ IsOpen (Set.preimage f t)","decl":"theorem ContinuousOn.isOpen_preimage {t : Set β} (h : ContinuousOn f s)\n    (hs : IsOpen s) (hp : f ⁻¹' t ⊆ s) (ht : IsOpen t) : IsOpen (f ⁻¹' t) := by\n  convert (continuousOn_open_iff hs).mp h t ht\n  rw [inter_comm, inter_eq_self_of_subset_left hp]\n\n"}
{"name":"ContinuousOn.preimage_isClosed_of_isClosed","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nt : Set β\nhf : ContinuousOn f s\nhs : IsClosed s\nht : IsClosed t\n⊢ IsClosed (Inter.inter s (Set.preimage f t))","decl":"theorem ContinuousOn.preimage_isClosed_of_isClosed {t : Set β}\n    (hf : ContinuousOn f s) (hs : IsClosed s) (ht : IsClosed t) : IsClosed (s ∩ f ⁻¹' t) := by\n  rcases continuousOn_iff_isClosed.1 hf t ht with ⟨u, hu⟩\n  rw [inter_comm, hu.2]\n  apply IsClosed.inter hu.1 hs\n\n"}
{"name":"ContinuousOn.preimage_interior_subset_interior_preimage","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nt : Set β\nhf : ContinuousOn f s\nhs : IsOpen s\n⊢ HasSubset.Subset (Inter.inter s (Set.preimage f (interior t))) (Inter.inter s (interior (Set.preimage f t)))","decl":"theorem ContinuousOn.preimage_interior_subset_interior_preimage {t : Set β}\n    (hf : ContinuousOn f s) (hs : IsOpen s) : s ∩ f ⁻¹' interior t ⊆ s ∩ interior (f ⁻¹' t) :=\n  calc\n    s ∩ f ⁻¹' interior t ⊆ interior (s ∩ f ⁻¹' t) :=\n      interior_maximal (inter_subset_inter (Subset.refl _) (preimage_mono interior_subset))\n        (hf.isOpen_inter_preimage hs isOpen_interior)\n    _ = s ∩ interior (f ⁻¹' t) := by rw [interior_inter, hs.interior_eq]\n\n"}
{"name":"continuousOn_of_locally_continuousOn","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nh : ∀ (x : α), Membership.mem s x → Exists fun t => And (IsOpen t) (And (Membership.mem t x) (ContinuousOn f (Inter.inter s t)))\n⊢ ContinuousOn f s","decl":"theorem continuousOn_of_locally_continuousOn\n    (h : ∀ x ∈ s, ∃ t, IsOpen t ∧ x ∈ t ∧ ContinuousOn f (s ∩ t)) : ContinuousOn f s := by\n  intro x xs\n  rcases h x xs with ⟨t, open_t, xt, ct⟩\n  have := ct x ⟨xs, xt⟩\n  rwa [ContinuousWithinAt, ← nhdsWithin_restrict _ xt open_t] at this\n\n"}
{"name":"continuousOn_to_generateFrom_iff","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\ns : Set α\nβ : Type u_5\nT : Set (Set β)\nf : α → β\n⊢ Iff (ContinuousOn f s) (∀ (x : α), Membership.mem s x → ∀ (t : Set β), Membership.mem T t → Membership.mem t (f x) → Membership.mem (nhdsWithin x s) (Set.preimage f t))","decl":"theorem continuousOn_to_generateFrom_iff {β : Type*} {T : Set (Set β)} {f : α → β} :\n    @ContinuousOn α β _ (.generateFrom T) f s ↔ ∀ x ∈ s, ∀ t ∈ T, f x ∈ t → f ⁻¹' t ∈ 𝓝[s] x :=\n  forall₂_congr fun x _ => by\n    delta ContinuousWithinAt\n    simp only [TopologicalSpace.nhds_generateFrom, tendsto_iInf, tendsto_principal, mem_setOf_eq,\n      and_imp]\n    exact forall_congr' fun t => forall_swap\n\n-- Porting note: dropped an unneeded assumption\n"}
{"name":"continuousOn_isOpen_of_generateFrom","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\nβ : Type u_5\ns : Set α\nT : Set (Set β)\nf : α → β\nh : ∀ (t : Set β), Membership.mem T t → IsOpen (Inter.inter s (Set.preimage f t))\n⊢ ContinuousOn f s","decl":"theorem continuousOn_isOpen_of_generateFrom {β : Type*} {s : Set α} {T : Set (Set β)} {f : α → β}\n    (h : ∀ t ∈ T, IsOpen (s ∩ f ⁻¹' t)) :\n    @ContinuousOn α β _ (.generateFrom T) f s :=\n  continuousOn_to_generateFrom_iff.2 fun _x hx t ht hxt => mem_nhdsWithin.2\n    ⟨_, h t ht, ⟨hx, hxt⟩, fun _y hy => hy.1.2⟩\n\n"}
{"name":"ContinuousWithinAt.mono","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns t : Set α\nx : α\nh : ContinuousWithinAt f t x\nhs : HasSubset.Subset s t\n⊢ ContinuousWithinAt f s x","decl":"theorem ContinuousWithinAt.mono (h : ContinuousWithinAt f t x)\n    (hs : s ⊆ t) : ContinuousWithinAt f s x :=\n  h.mono_left (nhdsWithin_mono x hs)\n\n"}
{"name":"ContinuousWithinAt.mono_of_mem_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns t : Set α\nx : α\nh : ContinuousWithinAt f t x\nhs : Membership.mem (nhdsWithin x s) t\n⊢ ContinuousWithinAt f s x","decl":"theorem ContinuousWithinAt.mono_of_mem_nhdsWithin (h : ContinuousWithinAt f t x) (hs : t ∈ 𝓝[s] x) :\n    ContinuousWithinAt f s x :=\n  h.mono_left (nhdsWithin_le_of_mem hs)\n\n"}
{"name":"ContinuousWithinAt.mono_of_mem","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns t : Set α\nx : α\nh : ContinuousWithinAt f t x\nhs : Membership.mem (nhdsWithin x s) t\n⊢ ContinuousWithinAt f s x","decl":"@[deprecated (since := \"2024-10-18\")]\nalias ContinuousWithinAt.mono_of_mem := ContinuousWithinAt.mono_of_mem_nhdsWithin\n\n"}
{"name":"continuousWithinAt_congr_set","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns t : Set α\nx : α\nh : (nhds x).EventuallyEq s t\n⊢ Iff (ContinuousWithinAt f s x) (ContinuousWithinAt f t x)","decl":"/-- If two sets coincide around `x`, then being continuous within one or the other at `x` is\nequivalent. See also `continuousWithinAt_congr_set'` which requires that the sets coincide\nlocally away from a point `y`, in a T1 space. -/\ntheorem continuousWithinAt_congr_set (h : s =ᶠ[𝓝 x] t) :\n    ContinuousWithinAt f s x ↔ ContinuousWithinAt f t x := by\n  simp only [ContinuousWithinAt, nhdsWithin_eq_iff_eventuallyEq.mpr h]\n\n"}
{"name":"continuousWithinAt_congr_nhds","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns t : Set α\nx : α\nh : (nhds x).EventuallyEq s t\n⊢ Iff (ContinuousWithinAt f s x) (ContinuousWithinAt f t x)","decl":"@[deprecated (since := \"2024-10-18\")]\nalias continuousWithinAt_congr_nhds := continuousWithinAt_congr_set\n\n"}
{"name":"ContinuousWithinAt.congr_set","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns t : Set α\nx : α\nhf : ContinuousWithinAt f s x\nh : (nhds x).EventuallyEq s t\n⊢ ContinuousWithinAt f t x","decl":"theorem ContinuousWithinAt.congr_set (hf : ContinuousWithinAt f s x) (h : s =ᶠ[𝓝 x] t) :\n    ContinuousWithinAt f t x :=\n  (continuousWithinAt_congr_set h).1 hf\n\n"}
{"name":"ContinuousWithinAt.congr_nhds","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns t : Set α\nx : α\nhf : ContinuousWithinAt f s x\nh : (nhds x).EventuallyEq s t\n⊢ ContinuousWithinAt f t x","decl":"@[deprecated (since := \"2024-10-18\")]\nalias ContinuousWithinAt.congr_nhds := ContinuousWithinAt.congr_set\n\n"}
{"name":"continuousWithinAt_inter'","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns t : Set α\nx : α\nh : Membership.mem (nhdsWithin x s) t\n⊢ Iff (ContinuousWithinAt f (Inter.inter s t) x) (ContinuousWithinAt f s x)","decl":"theorem continuousWithinAt_inter' (h : t ∈ 𝓝[s] x) :\n    ContinuousWithinAt f (s ∩ t) x ↔ ContinuousWithinAt f s x := by\n  simp [ContinuousWithinAt, nhdsWithin_restrict'' s h]\n\n"}
{"name":"continuousWithinAt_inter","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns t : Set α\nx : α\nh : Membership.mem (nhds x) t\n⊢ Iff (ContinuousWithinAt f (Inter.inter s t) x) (ContinuousWithinAt f s x)","decl":"theorem continuousWithinAt_inter (h : t ∈ 𝓝 x) :\n    ContinuousWithinAt f (s ∩ t) x ↔ ContinuousWithinAt f s x := by\n  simp [ContinuousWithinAt, nhdsWithin_restrict' s h]\n\n"}
{"name":"continuousWithinAt_union","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns t : Set α\nx : α\n⊢ Iff (ContinuousWithinAt f (Union.union s t) x) (And (ContinuousWithinAt f s x) (ContinuousWithinAt f t x))","decl":"theorem continuousWithinAt_union :\n    ContinuousWithinAt f (s ∪ t) x ↔ ContinuousWithinAt f s x ∧ ContinuousWithinAt f t x := by\n  simp only [ContinuousWithinAt, nhdsWithin_union, tendsto_sup]\n\n"}
{"name":"ContinuousWithinAt.union","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns t : Set α\nx : α\nhs : ContinuousWithinAt f s x\nht : ContinuousWithinAt f t x\n⊢ ContinuousWithinAt f (Union.union s t) x","decl":"theorem ContinuousWithinAt.union (hs : ContinuousWithinAt f s x) (ht : ContinuousWithinAt f t x) :\n    ContinuousWithinAt f (s ∪ t) x :=\n  continuousWithinAt_union.2 ⟨hs, ht⟩\n\n"}
{"name":"continuousWithinAt_singleton","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\nx : α\n⊢ ContinuousWithinAt f (Singleton.singleton x) x","decl":"@[simp]\ntheorem continuousWithinAt_singleton : ContinuousWithinAt f {x} x := by\n  simp only [ContinuousWithinAt, nhdsWithin_singleton, tendsto_pure_nhds]\n\n"}
{"name":"continuousWithinAt_insert_self","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nx : α\n⊢ Iff (ContinuousWithinAt f (Insert.insert x s) x) (ContinuousWithinAt f s x)","decl":"@[simp]\ntheorem continuousWithinAt_insert_self :\n    ContinuousWithinAt f (insert x s) x ↔ ContinuousWithinAt f s x := by\n  simp only [← singleton_union, continuousWithinAt_union, continuousWithinAt_singleton, true_and]\n\n"}
{"name":"ContinuousWithinAt.insert","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nx : α\na✝ : ContinuousWithinAt f s x\n⊢ ContinuousWithinAt f (Insert.insert x s) x","decl":"protected alias ⟨_, ContinuousWithinAt.insert⟩ := continuousWithinAt_insert_self\n\n"}
{"name":"ContinuousWithinAt.insert_self","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nx : α\na✝ : ContinuousWithinAt f s x\n⊢ ContinuousWithinAt f (Insert.insert x s) x","decl":"@[deprecated (since := \"2024-10-10\")]\nprotected alias ContinuousWithinAt.insert_self := ContinuousWithinAt.insert\n\n/- `continuousWithinAt_insert` gives the same equivalence but at a point `y` possibly different\nfrom `x`. As this requires the space to be T1, and this property is not available in this file,\nthis is found in another file although it is part of the basic API for `continuousWithinAt`. -/\n\n"}
{"name":"ContinuousWithinAt.diff_iff","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns t : Set α\nx : α\nht : ContinuousWithinAt f t x\n⊢ Iff (ContinuousWithinAt f (SDiff.sdiff s t) x) (ContinuousWithinAt f s x)","decl":"theorem ContinuousWithinAt.diff_iff\n    (ht : ContinuousWithinAt f t x) : ContinuousWithinAt f (s \\ t) x ↔ ContinuousWithinAt f s x :=\n  ⟨fun h => (h.union ht).mono <| by simp only [diff_union_self, subset_union_left], fun h =>\n    h.mono diff_subset⟩\n\n"}
{"name":"continuousWithinAt_diff_self","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nx : α\n⊢ Iff (ContinuousWithinAt f (SDiff.sdiff s (Singleton.singleton x)) x) (ContinuousWithinAt f s x)","decl":"/-- See also `continuousWithinAt_diff_singleton` for the case of `s \\ {y}`, but\nrequiring `T1Space α. -/\n@[simp]\ntheorem continuousWithinAt_diff_self :\n    ContinuousWithinAt f (s \\ {x}) x ↔ ContinuousWithinAt f s x :=\n  continuousWithinAt_singleton.diff_iff\n\n"}
{"name":"continuousWithinAt_compl_self","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\nx : α\n⊢ Iff (ContinuousWithinAt f (HasCompl.compl (Singleton.singleton x)) x) (ContinuousAt f x)","decl":"@[simp]\ntheorem continuousWithinAt_compl_self :\n    ContinuousWithinAt f {x}ᶜ x ↔ ContinuousAt f x := by\n  rw [compl_eq_univ_diff, continuousWithinAt_diff_self, continuousWithinAt_univ]\n\n"}
{"name":"ContinuousOn.mono","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns t : Set α\nhf : ContinuousOn f s\nh : HasSubset.Subset t s\n⊢ ContinuousOn f t","decl":"theorem ContinuousOn.mono (hf : ContinuousOn f s) (h : t ⊆ s) :\n    ContinuousOn f t := fun x hx => (hf x (h hx)).mono_left (nhdsWithin_mono _ h)\n\n"}
{"name":"antitone_continuousOn","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\n⊢ Antitone (ContinuousOn f)","decl":"theorem antitone_continuousOn {f : α → β} : Antitone (ContinuousOn f) := fun _s _t hst hf =>\n  hf.mono hst\n\n"}
{"name":"ContinuousAt.continuousWithinAt","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nx : α\nh : ContinuousAt f x\n⊢ ContinuousWithinAt f s x","decl":"theorem ContinuousAt.continuousWithinAt (h : ContinuousAt f x) :\n    ContinuousWithinAt f s x :=\n  ContinuousWithinAt.mono ((continuousWithinAt_univ f x).2 h) (subset_univ _)\n\n"}
{"name":"continuousWithinAt_iff_continuousAt","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nx : α\nh : Membership.mem (nhds x) s\n⊢ Iff (ContinuousWithinAt f s x) (ContinuousAt f x)","decl":"theorem continuousWithinAt_iff_continuousAt (h : s ∈ 𝓝 x) :\n    ContinuousWithinAt f s x ↔ ContinuousAt f x := by\n  rw [← univ_inter s, continuousWithinAt_inter h, continuousWithinAt_univ]\n\n"}
{"name":"ContinuousWithinAt.continuousAt","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nx : α\nh : ContinuousWithinAt f s x\nhs : Membership.mem (nhds x) s\n⊢ ContinuousAt f x","decl":"theorem ContinuousWithinAt.continuousAt\n    (h : ContinuousWithinAt f s x) (hs : s ∈ 𝓝 x) : ContinuousAt f x :=\n  (continuousWithinAt_iff_continuousAt hs).mp h\n\n"}
{"name":"IsOpen.continuousOn_iff","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nhs : IsOpen s\n⊢ Iff (ContinuousOn f s) (∀ ⦃a : α⦄, Membership.mem s a → ContinuousAt f a)","decl":"theorem IsOpen.continuousOn_iff (hs : IsOpen s) :\n    ContinuousOn f s ↔ ∀ ⦃a⦄, a ∈ s → ContinuousAt f a :=\n  forall₂_congr fun _ => continuousWithinAt_iff_continuousAt ∘ hs.mem_nhds\n\n"}
{"name":"ContinuousOn.continuousAt","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nx : α\nh : ContinuousOn f s\nhx : Membership.mem (nhds x) s\n⊢ ContinuousAt f x","decl":"theorem ContinuousOn.continuousAt (h : ContinuousOn f s)\n    (hx : s ∈ 𝓝 x) : ContinuousAt f x :=\n  (h x (mem_of_mem_nhds hx)).continuousAt hx\n\n"}
{"name":"continuousOn_of_forall_continuousAt","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nhcont : ∀ (x : α), Membership.mem s x → ContinuousAt f x\n⊢ ContinuousOn f s","decl":"theorem continuousOn_of_forall_continuousAt (hcont : ∀ x ∈ s, ContinuousAt f x) :\n    ContinuousOn f s := fun x hx => (hcont x hx).continuousWithinAt\n\n"}
{"name":"ContinuousAt.continuousOn","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nhcont : ∀ (x : α), Membership.mem s x → ContinuousAt f x\n⊢ ContinuousOn f s","decl":"@[deprecated (since := \"2024-10-30\")]\nalias ContinuousAt.continuousOn := continuousOn_of_forall_continuousAt\n\n"}
{"name":"Continuous.continuousOn","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nh : Continuous f\n⊢ ContinuousOn f s","decl":"@[fun_prop]\ntheorem Continuous.continuousOn (h : Continuous f) : ContinuousOn f s := by\n  rw [continuous_iff_continuousOn_univ] at h\n  exact h.mono (subset_univ _)\n\n"}
{"name":"Continuous.continuousWithinAt","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nx : α\nh : Continuous f\n⊢ ContinuousWithinAt f s x","decl":"theorem Continuous.continuousWithinAt (h : Continuous f) :\n    ContinuousWithinAt f s x :=\n  h.continuousAt.continuousWithinAt\n\n\n"}
{"name":"ContinuousOn.congr_mono","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf g : α → β\ns s₁ : Set α\nh : ContinuousOn f s\nh' : Set.EqOn g f s₁\nh₁ : HasSubset.Subset s₁ s\n⊢ ContinuousOn g s₁","decl":"theorem ContinuousOn.congr_mono (h : ContinuousOn f s) (h' : EqOn g f s₁) (h₁ : s₁ ⊆ s) :\n    ContinuousOn g s₁ := by\n  intro x hx\n  unfold ContinuousWithinAt\n  have A := (h x (h₁ hx)).mono h₁\n  unfold ContinuousWithinAt at A\n  rw [← h' hx] at A\n  exact A.congr' h'.eventuallyEq_nhdsWithin.symm\n\n"}
{"name":"ContinuousOn.congr","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf g : α → β\ns : Set α\nh : ContinuousOn f s\nh' : Set.EqOn g f s\n⊢ ContinuousOn g s","decl":"theorem ContinuousOn.congr (h : ContinuousOn f s) (h' : EqOn g f s) :\n    ContinuousOn g s :=\n  h.congr_mono h' (Subset.refl _)\n\n"}
{"name":"continuousOn_congr","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf g : α → β\ns : Set α\nh' : Set.EqOn g f s\n⊢ Iff (ContinuousOn g s) (ContinuousOn f s)","decl":"theorem continuousOn_congr (h' : EqOn g f s) :\n    ContinuousOn g s ↔ ContinuousOn f s :=\n  ⟨fun h => ContinuousOn.congr h h'.symm, fun h => h.congr h'⟩\n\n"}
{"name":"Filter.EventuallyEq.congr_continuousWithinAt","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf g : α → β\ns : Set α\nx : α\nh : (nhdsWithin x s).EventuallyEq f g\nhx : Eq (f x) (g x)\n⊢ Iff (ContinuousWithinAt f s x) (ContinuousWithinAt g s x)","decl":"theorem Filter.EventuallyEq.congr_continuousWithinAt (h : f =ᶠ[𝓝[s] x] g) (hx : f x = g x) :\n    ContinuousWithinAt f s x ↔ ContinuousWithinAt g s x := by\n  rw [ContinuousWithinAt, hx, tendsto_congr' h, ContinuousWithinAt]\n\n"}
{"name":"ContinuousWithinAt.congr_of_eventuallyEq","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf g : α → β\ns : Set α\nx : α\nh : ContinuousWithinAt f s x\nh₁ : (nhdsWithin x s).EventuallyEq g f\nhx : Eq (g x) (f x)\n⊢ ContinuousWithinAt g s x","decl":"theorem ContinuousWithinAt.congr_of_eventuallyEq\n    (h : ContinuousWithinAt f s x) (h₁ : g =ᶠ[𝓝[s] x] f) (hx : g x = f x) :\n    ContinuousWithinAt g s x :=\n  (h₁.congr_continuousWithinAt hx).2 h\n\n"}
{"name":"ContinuousWithinAt.congr_of_eventuallyEq_of_mem","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf g : α → β\ns : Set α\nx : α\nh : ContinuousWithinAt f s x\nh₁ : (nhdsWithin x s).EventuallyEq g f\nhx : Membership.mem s x\n⊢ ContinuousWithinAt g s x","decl":"theorem ContinuousWithinAt.congr_of_eventuallyEq_of_mem\n    (h : ContinuousWithinAt f s x) (h₁ : g =ᶠ[𝓝[s] x] f) (hx : x ∈ s) :\n    ContinuousWithinAt g s x :=\n  h.congr_of_eventuallyEq h₁ (mem_of_mem_nhdsWithin hx h₁ :)\n\n"}
{"name":"Filter.EventuallyEq.congr_continuousWithinAt_of_mem","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf g : α → β\ns : Set α\nx : α\nh : (nhdsWithin x s).EventuallyEq f g\nhx : Membership.mem s x\n⊢ Iff (ContinuousWithinAt f s x) (ContinuousWithinAt g s x)","decl":"theorem Filter.EventuallyEq.congr_continuousWithinAt_of_mem (h : f =ᶠ[𝓝[s] x] g) (hx : x ∈ s) :\n    ContinuousWithinAt f s x ↔ ContinuousWithinAt g s x :=\n  ⟨fun h' ↦ h'.congr_of_eventuallyEq_of_mem h.symm hx,\n    fun h' ↦  h'.congr_of_eventuallyEq_of_mem h hx⟩\n\n"}
{"name":"ContinuousWithinAt.congr_of_eventuallyEq_insert","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf g : α → β\ns : Set α\nx : α\nh : ContinuousWithinAt f s x\nh₁ : (nhdsWithin x (Insert.insert x s)).EventuallyEq g f\n⊢ ContinuousWithinAt g s x","decl":"theorem ContinuousWithinAt.congr_of_eventuallyEq_insert\n    (h : ContinuousWithinAt f s x) (h₁ : g =ᶠ[𝓝[insert x s] x] f) :\n    ContinuousWithinAt g s x :=\n  h.congr_of_eventuallyEq (nhdsWithin_mono _ (subset_insert _ _) h₁)\n    (mem_of_mem_nhdsWithin (mem_insert _ _) h₁ :)\n\n"}
{"name":"Filter.EventuallyEq.congr_continuousWithinAt_of_insert","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf g : α → β\ns : Set α\nx : α\nh : (nhdsWithin x (Insert.insert x s)).EventuallyEq f g\n⊢ Iff (ContinuousWithinAt f s x) (ContinuousWithinAt g s x)","decl":"theorem Filter.EventuallyEq.congr_continuousWithinAt_of_insert (h : f =ᶠ[𝓝[insert x s] x] g) :\n    ContinuousWithinAt f s x ↔ ContinuousWithinAt g s x :=\n  ⟨fun h' ↦ h'.congr_of_eventuallyEq_insert h.symm,\n    fun h' ↦  h'.congr_of_eventuallyEq_insert h⟩\n\n"}
{"name":"ContinuousWithinAt.congr","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf g : α → β\ns : Set α\nx : α\nh : ContinuousWithinAt f s x\nh₁ : ∀ (y : α), Membership.mem s y → Eq (g y) (f y)\nhx : Eq (g x) (f x)\n⊢ ContinuousWithinAt g s x","decl":"theorem ContinuousWithinAt.congr (h : ContinuousWithinAt f s x)\n    (h₁ : ∀ y ∈ s, g y = f y) (hx : g x = f x) : ContinuousWithinAt g s x :=\n  h.congr_of_eventuallyEq (mem_of_superset self_mem_nhdsWithin h₁) hx\n\n"}
{"name":"continuousWithinAt_congr","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf g : α → β\ns : Set α\nx : α\nh₁ : ∀ (y : α), Membership.mem s y → Eq (g y) (f y)\nhx : Eq (g x) (f x)\n⊢ Iff (ContinuousWithinAt g s x) (ContinuousWithinAt f s x)","decl":"theorem continuousWithinAt_congr (h₁ : ∀ y ∈ s, g y = f y) (hx : g x = f x) :\n    ContinuousWithinAt g s x ↔ ContinuousWithinAt f s x :=\n  ⟨fun h' ↦ h'.congr (fun x hx ↦ (h₁ x hx).symm) hx.symm, fun h' ↦  h'.congr h₁ hx⟩\n\n"}
{"name":"ContinuousWithinAt.congr_of_mem","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf g : α → β\ns : Set α\nx : α\nh : ContinuousWithinAt f s x\nh₁ : ∀ (y : α), Membership.mem s y → Eq (g y) (f y)\nhx : Membership.mem s x\n⊢ ContinuousWithinAt g s x","decl":"theorem ContinuousWithinAt.congr_of_mem (h : ContinuousWithinAt f s x)\n    (h₁ : ∀ y ∈ s, g y = f y) (hx : x ∈ s) : ContinuousWithinAt g s x :=\n  h.congr h₁ (h₁ x hx)\n\n"}
{"name":"continuousWithinAt_congr_of_mem","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf g : α → β\ns : Set α\nx : α\nh₁ : ∀ (y : α), Membership.mem s y → Eq (g y) (f y)\nhx : Membership.mem s x\n⊢ Iff (ContinuousWithinAt g s x) (ContinuousWithinAt f s x)","decl":"theorem continuousWithinAt_congr_of_mem (h₁ : ∀ y ∈ s, g y = f y) (hx : x ∈ s) :\n    ContinuousWithinAt g s x ↔ ContinuousWithinAt f s x :=\n  continuousWithinAt_congr h₁ (h₁ x hx)\n\n"}
{"name":"ContinuousWithinAt.congr_of_insert","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf g : α → β\ns : Set α\nx : α\nh : ContinuousWithinAt f s x\nh₁ : ∀ (y : α), Membership.mem (Insert.insert x s) y → Eq (g y) (f y)\n⊢ ContinuousWithinAt g s x","decl":"theorem ContinuousWithinAt.congr_of_insert (h : ContinuousWithinAt f s x)\n    (h₁ : ∀ y ∈ insert x s, g y = f y) : ContinuousWithinAt g s x :=\n  h.congr (fun y hy ↦ h₁ y (mem_insert_of_mem _ hy)) (h₁ x (mem_insert _ _))\n\n"}
{"name":"continuousWithinAt_congr_of_insert","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf g : α → β\ns : Set α\nx : α\nh₁ : ∀ (y : α), Membership.mem (Insert.insert x s) y → Eq (g y) (f y)\n⊢ Iff (ContinuousWithinAt g s x) (ContinuousWithinAt f s x)","decl":"theorem continuousWithinAt_congr_of_insert\n    (h₁ : ∀ y ∈ insert x s, g y = f y) :\n    ContinuousWithinAt g s x ↔ ContinuousWithinAt f s x :=\n  continuousWithinAt_congr (fun y hy ↦ h₁ y (mem_insert_of_mem _ hy)) (h₁ x (mem_insert _ _))\n\n"}
{"name":"ContinuousWithinAt.congr_mono","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf g : α → β\ns s₁ : Set α\nx : α\nh : ContinuousWithinAt f s x\nh' : Set.EqOn g f s₁\nh₁ : HasSubset.Subset s₁ s\nhx : Eq (g x) (f x)\n⊢ ContinuousWithinAt g s₁ x","decl":"theorem ContinuousWithinAt.congr_mono\n    (h : ContinuousWithinAt f s x) (h' : EqOn g f s₁) (h₁ : s₁ ⊆ s) (hx : g x = f x) :\n    ContinuousWithinAt g s₁ x :=\n  (h.mono h₁).congr h' hx\n\n"}
{"name":"ContinuousAt.congr_of_eventuallyEq","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf g : α → β\nx : α\nh : ContinuousAt f x\nhg : (nhds x).EventuallyEq g f\n⊢ ContinuousAt g x","decl":"theorem ContinuousAt.congr_of_eventuallyEq (h : ContinuousAt f x) (hg : g =ᶠ[𝓝 x] f) :\n    ContinuousAt g x := by\n  simp only [← continuousWithinAt_univ] at h ⊢\n  exact h.congr_of_eventuallyEq_of_mem (by rwa [nhdsWithin_univ]) (mem_univ x)\n\n"}
{"name":"ContinuousWithinAt.comp","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → β\ns : Set α\nx : α\ng : β → γ\nt : Set β\nhg : ContinuousWithinAt g t (f x)\nhf : ContinuousWithinAt f s x\nh : Set.MapsTo f s t\n⊢ ContinuousWithinAt (Function.comp g f) s x","decl":"theorem ContinuousWithinAt.comp {g : β → γ} {t : Set β}\n    (hg : ContinuousWithinAt g t (f x)) (hf : ContinuousWithinAt f s x) (h : MapsTo f s t) :\n    ContinuousWithinAt (g ∘ f) s x :=\n  hg.tendsto.comp (hf.tendsto_nhdsWithin h)\n\n"}
{"name":"ContinuousWithinAt.comp_of_eq","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → β\ns : Set α\nx : α\ng : β → γ\nt : Set β\ny : β\nhg : ContinuousWithinAt g t y\nhf : ContinuousWithinAt f s x\nh : Set.MapsTo f s t\nhy : Eq (f x) y\n⊢ ContinuousWithinAt (Function.comp g f) s x","decl":"theorem ContinuousWithinAt.comp_of_eq {g : β → γ} {t : Set β} {y : β}\n    (hg : ContinuousWithinAt g t y) (hf : ContinuousWithinAt f s x) (h : MapsTo f s t)\n    (hy : f x = y) : ContinuousWithinAt (g ∘ f) s x := by\n  subst hy; exact hg.comp hf h\n\n"}
{"name":"ContinuousWithinAt.comp_inter","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → β\ns : Set α\nx : α\ng : β → γ\nt : Set β\nhg : ContinuousWithinAt g t (f x)\nhf : ContinuousWithinAt f s x\n⊢ ContinuousWithinAt (Function.comp g f) (Inter.inter s (Set.preimage f t)) x","decl":"theorem ContinuousWithinAt.comp_inter {g : β → γ} {t : Set β}\n    (hg : ContinuousWithinAt g t (f x)) (hf : ContinuousWithinAt f s x) :\n    ContinuousWithinAt (g ∘ f) (s ∩ f ⁻¹' t) x :=\n  hg.comp (hf.mono inter_subset_left) inter_subset_right\n\n"}
{"name":"ContinuousWithinAt.comp'","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → β\ns : Set α\nx : α\ng : β → γ\nt : Set β\nhg : ContinuousWithinAt g t (f x)\nhf : ContinuousWithinAt f s x\n⊢ ContinuousWithinAt (Function.comp g f) (Inter.inter s (Set.preimage f t)) x","decl":"@[deprecated (since := \"2024-10-10\")]\nprotected alias ContinuousWithinAt.comp' := ContinuousWithinAt.comp_inter\n\n"}
{"name":"ContinuousWithinAt.comp_inter_of_eq","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → β\ns : Set α\nx : α\ng : β → γ\nt : Set β\ny : β\nhg : ContinuousWithinAt g t y\nhf : ContinuousWithinAt f s x\nhy : Eq (f x) y\n⊢ ContinuousWithinAt (Function.comp g f) (Inter.inter s (Set.preimage f t)) x","decl":"theorem ContinuousWithinAt.comp_inter_of_eq {g : β → γ} {t : Set β} {y : β}\n    (hg : ContinuousWithinAt g t y) (hf : ContinuousWithinAt f s x) (hy : f x = y) :\n    ContinuousWithinAt (g ∘ f) (s ∩ f ⁻¹' t) x := by\n  subst hy; exact hg.comp_inter hf\n\n"}
{"name":"ContinuousWithinAt.comp_of_preimage_mem_nhdsWithin","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → β\ns : Set α\nx : α\ng : β → γ\nt : Set β\nhg : ContinuousWithinAt g t (f x)\nhf : ContinuousWithinAt f s x\nh : Membership.mem (nhdsWithin x s) (Set.preimage f t)\n⊢ ContinuousWithinAt (Function.comp g f) s x","decl":"theorem ContinuousWithinAt.comp_of_preimage_mem_nhdsWithin {g : β → γ} {t : Set β}\n    (hg : ContinuousWithinAt g t (f x)) (hf : ContinuousWithinAt f s x) (h : f ⁻¹' t ∈ 𝓝[s] x) :\n    ContinuousWithinAt (g ∘ f) s x :=\n  hg.tendsto.comp (tendsto_nhdsWithin_of_tendsto_nhds_of_eventually_within f hf h)\n\n"}
{"name":"ContinuousWithinAt.comp_of_preimage_mem_nhdsWithin_of_eq","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → β\ns : Set α\nx : α\ng : β → γ\nt : Set β\ny : β\nhg : ContinuousWithinAt g t y\nhf : ContinuousWithinAt f s x\nh : Membership.mem (nhdsWithin x s) (Set.preimage f t)\nhy : Eq (f x) y\n⊢ ContinuousWithinAt (Function.comp g f) s x","decl":"theorem ContinuousWithinAt.comp_of_preimage_mem_nhdsWithin_of_eq {g : β → γ} {t : Set β} {y : β}\n    (hg : ContinuousWithinAt g t y) (hf : ContinuousWithinAt f s x) (h : f ⁻¹' t ∈ 𝓝[s] x)\n    (hy : f x = y) :\n    ContinuousWithinAt (g ∘ f) s x := by\n  subst hy; exact hg.comp_of_preimage_mem_nhdsWithin hf h\n\n"}
{"name":"ContinuousWithinAt.comp_of_mem_nhdsWithin_image","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → β\ns : Set α\nx : α\ng : β → γ\nt : Set β\nhg : ContinuousWithinAt g t (f x)\nhf : ContinuousWithinAt f s x\nhs : Membership.mem (nhdsWithin (f x) (Set.image f s)) t\n⊢ ContinuousWithinAt (Function.comp g f) s x","decl":"theorem ContinuousWithinAt.comp_of_mem_nhdsWithin_image {g : β → γ} {t : Set β}\n    (hg : ContinuousWithinAt g t (f x)) (hf : ContinuousWithinAt f s x)\n    (hs : t ∈ 𝓝[f '' s] f x) : ContinuousWithinAt (g ∘ f) s x :=\n  (hg.mono_of_mem_nhdsWithin hs).comp hf (mapsTo_image f s)\n\n"}
{"name":"ContinuousWithinAt.comp_of_mem_nhdsWithin_image_of_eq","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → β\ns : Set α\nx : α\ng : β → γ\nt : Set β\ny : β\nhg : ContinuousWithinAt g t y\nhf : ContinuousWithinAt f s x\nhs : Membership.mem (nhdsWithin y (Set.image f s)) t\nhy : Eq (f x) y\n⊢ ContinuousWithinAt (Function.comp g f) s x","decl":"theorem ContinuousWithinAt.comp_of_mem_nhdsWithin_image_of_eq {g : β → γ} {t : Set β} {y : β}\n    (hg : ContinuousWithinAt g t y) (hf : ContinuousWithinAt f s x)\n    (hs : t ∈ 𝓝[f '' s] y) (hy : f x = y) : ContinuousWithinAt (g ∘ f) s x := by\n  subst hy; exact hg.comp_of_mem_nhdsWithin_image hf hs\n\n"}
{"name":"ContinuousAt.comp_continuousWithinAt","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → β\ns : Set α\nx : α\ng : β → γ\nhg : ContinuousAt g (f x)\nhf : ContinuousWithinAt f s x\n⊢ ContinuousWithinAt (Function.comp g f) s x","decl":"theorem ContinuousAt.comp_continuousWithinAt {g : β → γ}\n    (hg : ContinuousAt g (f x)) (hf : ContinuousWithinAt f s x) : ContinuousWithinAt (g ∘ f) s x :=\n  hg.continuousWithinAt.comp hf (mapsTo_univ _ _)\n\n"}
{"name":"ContinuousAt.comp_continuousWithinAt_of_eq","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → β\ns : Set α\nx : α\ng : β → γ\ny : β\nhg : ContinuousAt g y\nhf : ContinuousWithinAt f s x\nhy : Eq (f x) y\n⊢ ContinuousWithinAt (Function.comp g f) s x","decl":"theorem ContinuousAt.comp_continuousWithinAt_of_eq {g : β → γ} {y : β}\n    (hg : ContinuousAt g y) (hf : ContinuousWithinAt f s x) (hy : f x = y) :\n    ContinuousWithinAt (g ∘ f) s x := by\n  subst hy; exact hg.comp_continuousWithinAt hf\n\n"}
{"name":"ContinuousOn.comp","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → β\ns : Set α\ng : β → γ\nt : Set β\nhg : ContinuousOn g t\nhf : ContinuousOn f s\nh : Set.MapsTo f s t\n⊢ ContinuousOn (Function.comp g f) s","decl":"/-- See also `ContinuousOn.comp'` using the form `fun y ↦ g (f y)` instead of `g ∘ f`. -/\ntheorem ContinuousOn.comp {g : β → γ} {t : Set β} (hg : ContinuousOn g t)\n    (hf : ContinuousOn f s) (h : MapsTo f s t) : ContinuousOn (g ∘ f) s := fun x hx =>\n  ContinuousWithinAt.comp (hg _ (h hx)) (hf x hx) h\n\n"}
{"name":"ContinuousOn.comp'","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\ng : β → γ\nf : α → β\ns : Set α\nt : Set β\nhg : ContinuousOn g t\nhf : ContinuousOn f s\nh : Set.MapsTo f s t\n⊢ ContinuousOn (fun x => g (f x)) s","decl":"/-- Variant of `ContinuousOn.comp` using the form `fun y ↦ g (f y)` instead of `g ∘ f`. -/\n@[fun_prop]\ntheorem ContinuousOn.comp' {g : β → γ} {f : α → β} {s : Set α} {t : Set β} (hg : ContinuousOn g t)\n    (hf : ContinuousOn f s) (h : Set.MapsTo f s t) : ContinuousOn (fun x => g (f x)) s :=\n  ContinuousOn.comp hg hf h\n\n"}
{"name":"ContinuousOn.comp_inter","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → β\ns : Set α\ng : β → γ\nt : Set β\nhg : ContinuousOn g t\nhf : ContinuousOn f s\n⊢ ContinuousOn (Function.comp g f) (Inter.inter s (Set.preimage f t))","decl":"@[fun_prop]\ntheorem ContinuousOn.comp_inter {g : β → γ} {t : Set β} (hg : ContinuousOn g t)\n    (hf : ContinuousOn f s) : ContinuousOn (g ∘ f) (s ∩ f ⁻¹' t) :=\n  hg.comp (hf.mono inter_subset_left) inter_subset_right\n\n"}
{"name":"Continuous.comp_continuousOn","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\ng : β → γ\nf : α → β\ns : Set α\nhg : Continuous g\nhf : ContinuousOn f s\n⊢ ContinuousOn (Function.comp g f) s","decl":"/-- See also `Continuous.comp_continuousOn'` using the form `fun y ↦ g (f y)`\ninstead of `g ∘ f`. -/\ntheorem Continuous.comp_continuousOn {g : β → γ} {f : α → β} {s : Set α} (hg : Continuous g)\n    (hf : ContinuousOn f s) : ContinuousOn (g ∘ f) s :=\n  hg.continuousOn.comp hf (mapsTo_univ _ _)\n\n"}
{"name":"Continuous.comp_continuousOn'","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_5\nβ : Type u_6\nγ : Type u_7\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\ng : β → γ\nf : α → β\ns : Set α\nhg : Continuous g\nhf : ContinuousOn f s\n⊢ ContinuousOn (fun x => g (f x)) s","decl":"/-- Variant of `Continuous.comp_continuousOn` using the form `fun y ↦ g (f y)`\ninstead of `g ∘ f`. -/\n@[fun_prop]\ntheorem Continuous.comp_continuousOn'\n    {α β γ : Type*} [TopologicalSpace α] [TopologicalSpace β] [TopologicalSpace γ] {g : β → γ}\n    {f : α → β} {s : Set α} (hg : Continuous g) (hf : ContinuousOn f s) :\n    ContinuousOn (fun x ↦ g (f x)) s :=\n  hg.comp_continuousOn hf\n\n"}
{"name":"ContinuousOn.comp_continuous","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\ng : β → γ\nf : α → β\ns : Set β\nhg : ContinuousOn g s\nhf : Continuous f\nhs : ∀ (x : α), Membership.mem s (f x)\n⊢ Continuous (Function.comp g f)","decl":"theorem ContinuousOn.comp_continuous {g : β → γ} {f : α → β} {s : Set β} (hg : ContinuousOn g s)\n    (hf : Continuous f) (hs : ∀ x, f x ∈ s) : Continuous (g ∘ f) := by\n  rw [continuous_iff_continuousOn_univ] at *\n  exact hg.comp hf fun x _ => hs x\n\n"}
{"name":"ContinuousOn.image_comp_continuous","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\ng : β → γ\nf : α → β\ns : Set α\nhg : ContinuousOn g (Set.image f s)\nhf : Continuous f\n⊢ ContinuousOn (Function.comp g f) s","decl":"theorem ContinuousOn.image_comp_continuous {g : β → γ} {f : α → β} {s : Set α}\n    (hg : ContinuousOn g (f '' s)) (hf : Continuous f) : ContinuousOn (g ∘ f) s :=\n  hg.comp hf.continuousOn (s.mapsTo_image f)\n\n"}
{"name":"ContinuousAt.comp₂_continuousWithinAt","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\nδ : Type u_4\ninst✝³ : TopologicalSpace α\ninst✝² : TopologicalSpace β\ninst✝¹ : TopologicalSpace γ\ninst✝ : TopologicalSpace δ\nf : Prod β γ → δ\ng : α → β\nh : α → γ\nx : α\ns : Set α\nhf : ContinuousAt f { fst := g x, snd := h x }\nhg : ContinuousWithinAt g s x\nhh : ContinuousWithinAt h s x\n⊢ ContinuousWithinAt (fun x => f { fst := g x, snd := h x }) s x","decl":"theorem ContinuousAt.comp₂_continuousWithinAt {f : β × γ → δ} {g : α → β} {h : α → γ} {x : α}\n    {s : Set α} (hf : ContinuousAt f (g x, h x)) (hg : ContinuousWithinAt g s x)\n    (hh : ContinuousWithinAt h s x) :\n    ContinuousWithinAt (fun x ↦ f (g x, h x)) s x :=\n  ContinuousAt.comp_continuousWithinAt hf (hg.prod_mk_nhds hh)\n\n"}
{"name":"ContinuousAt.comp₂_continuousWithinAt_of_eq","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\nδ : Type u_4\ninst✝³ : TopologicalSpace α\ninst✝² : TopologicalSpace β\ninst✝¹ : TopologicalSpace γ\ninst✝ : TopologicalSpace δ\nf : Prod β γ → δ\ng : α → β\nh : α → γ\nx : α\ns : Set α\ny : Prod β γ\nhf : ContinuousAt f y\nhg : ContinuousWithinAt g s x\nhh : ContinuousWithinAt h s x\ne : Eq { fst := g x, snd := h x } y\n⊢ ContinuousWithinAt (fun x => f { fst := g x, snd := h x }) s x","decl":"theorem ContinuousAt.comp₂_continuousWithinAt_of_eq {f : β × γ → δ} {g : α → β}\n    {h : α → γ} {x : α} {s : Set α} {y : β × γ} (hf : ContinuousAt f y)\n    (hg : ContinuousWithinAt g s x) (hh : ContinuousWithinAt h s x) (e : (g x, h x) = y) :\n    ContinuousWithinAt (fun x ↦ f (g x, h x)) s x := by\n  rw [← e] at hf\n  exact hf.comp₂_continuousWithinAt hg hh\n\n\n"}
{"name":"ContinuousWithinAt.mem_closure_image","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nx : α\nh : ContinuousWithinAt f s x\nhx : Membership.mem (closure s) x\n⊢ Membership.mem (closure (Set.image f s)) (f x)","decl":"theorem ContinuousWithinAt.mem_closure_image\n    (h : ContinuousWithinAt f s x) (hx : x ∈ closure s) : f x ∈ closure (f '' s) :=\n  haveI := mem_closure_iff_nhdsWithin_neBot.1 hx\n  mem_closure_of_tendsto h <| mem_of_superset self_mem_nhdsWithin (subset_preimage_image f s)\n\n"}
{"name":"ContinuousWithinAt.mem_closure","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nx : α\nt : Set β\nh : ContinuousWithinAt f s x\nhx : Membership.mem (closure s) x\nht : Set.MapsTo f s t\n⊢ Membership.mem (closure t) (f x)","decl":"theorem ContinuousWithinAt.mem_closure {t : Set β}\n    (h : ContinuousWithinAt f s x) (hx : x ∈ closure s) (ht : MapsTo f s t) : f x ∈ closure t :=\n  closure_mono (image_subset_iff.2 ht) (h.mem_closure_image hx)\n\n"}
{"name":"Set.MapsTo.closure_of_continuousWithinAt","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nt : Set β\nh : Set.MapsTo f s t\nhc : ∀ (x : α), Membership.mem (closure s) x → ContinuousWithinAt f s x\n⊢ Set.MapsTo f (closure s) (closure t)","decl":"theorem Set.MapsTo.closure_of_continuousWithinAt {t : Set β}\n    (h : MapsTo f s t) (hc : ∀ x ∈ closure s, ContinuousWithinAt f s x) :\n    MapsTo f (closure s) (closure t) := fun x hx => (hc x hx).mem_closure hx h\n\n"}
{"name":"Set.MapsTo.closure_of_continuousOn","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nt : Set β\nh : Set.MapsTo f s t\nhc : ContinuousOn f (closure s)\n⊢ Set.MapsTo f (closure s) (closure t)","decl":"theorem Set.MapsTo.closure_of_continuousOn {t : Set β} (h : MapsTo f s t)\n    (hc : ContinuousOn f (closure s)) : MapsTo f (closure s) (closure t) :=\n  h.closure_of_continuousWithinAt fun x hx => (hc x hx).mono subset_closure\n\n"}
{"name":"ContinuousWithinAt.image_closure","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nhf : ∀ (x : α), Membership.mem (closure s) x → ContinuousWithinAt f s x\n⊢ HasSubset.Subset (Set.image f (closure s)) (closure (Set.image f s))","decl":"theorem ContinuousWithinAt.image_closure\n    (hf : ∀ x ∈ closure s, ContinuousWithinAt f s x) : f '' closure s ⊆ closure (f '' s) :=\n  ((mapsTo_image f s).closure_of_continuousWithinAt hf).image_subset\n\n"}
{"name":"ContinuousOn.image_closure","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nhf : ContinuousOn f (closure s)\n⊢ HasSubset.Subset (Set.image f (closure s)) (closure (Set.image f s))","decl":"theorem ContinuousOn.image_closure (hf : ContinuousOn f (closure s)) :\n    f '' closure s ⊆ closure (f '' s) :=\n  ContinuousWithinAt.image_closure fun x hx => (hf x hx).mono subset_closure\n\n"}
{"name":"ContinuousWithinAt.prod_map","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\nδ : Type u_4\ninst✝³ : TopologicalSpace α\ninst✝² : TopologicalSpace β\ninst✝¹ : TopologicalSpace γ\ninst✝ : TopologicalSpace δ\nf : α → γ\ng : β → δ\ns : Set α\nt : Set β\nx : α\ny : β\nhf : ContinuousWithinAt f s x\nhg : ContinuousWithinAt g t y\n⊢ ContinuousWithinAt (Prod.map f g) (SProd.sprod s t) { fst := x, snd := y }","decl":"theorem ContinuousWithinAt.prod_map {f : α → γ} {g : β → δ} {s : Set α} {t : Set β} {x : α} {y : β}\n    (hf : ContinuousWithinAt f s x) (hg : ContinuousWithinAt g t y) :\n    ContinuousWithinAt (Prod.map f g) (s ×ˢ t) (x, y) := by\n  unfold ContinuousWithinAt at *\n  rw [nhdsWithin_prod_eq, Prod.map, nhds_prod_eq]\n  exact hf.prod_map hg\n\n"}
{"name":"continuousWithinAt_prod_of_discrete_left","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝³ : TopologicalSpace α\ninst✝² : TopologicalSpace β\ninst✝¹ : TopologicalSpace γ\ninst✝ : DiscreteTopology α\nf : Prod α β → γ\ns : Set (Prod α β)\nx : Prod α β\n⊢ Iff (ContinuousWithinAt f s x) (ContinuousWithinAt (fun x_1 => f { fst := x.1, snd := x_1 }) (setOf fun b => Membership.mem s { fst := x.1, snd := b }) x.2)","decl":"theorem continuousWithinAt_prod_of_discrete_left [DiscreteTopology α]\n    {f : α × β → γ} {s : Set (α × β)} {x : α × β} :\n    ContinuousWithinAt f s x ↔ ContinuousWithinAt (f ⟨x.1, ·⟩) {b | (x.1, b) ∈ s} x.2 := by\n  rw [← x.eta]; simp_rw [ContinuousWithinAt, nhdsWithin, nhds_prod_eq, nhds_discrete, pure_prod,\n    ← map_inf_principal_preimage]; rfl\n\n"}
{"name":"continuousWithinAt_prod_of_discrete_right","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝³ : TopologicalSpace α\ninst✝² : TopologicalSpace β\ninst✝¹ : TopologicalSpace γ\ninst✝ : DiscreteTopology β\nf : Prod α β → γ\ns : Set (Prod α β)\nx : Prod α β\n⊢ Iff (ContinuousWithinAt f s x) (ContinuousWithinAt (fun x_1 => f { fst := x_1, snd := x.2 }) (setOf fun a => Membership.mem s { fst := a, snd := x.2 }) x.1)","decl":"theorem continuousWithinAt_prod_of_discrete_right [DiscreteTopology β]\n    {f : α × β → γ} {s : Set (α × β)} {x : α × β} :\n    ContinuousWithinAt f s x ↔ ContinuousWithinAt (f ⟨·, x.2⟩) {a | (a, x.2) ∈ s} x.1 := by\n  rw [← x.eta]; simp_rw [ContinuousWithinAt, nhdsWithin, nhds_prod_eq, nhds_discrete, prod_pure,\n    ← map_inf_principal_preimage]; rfl\n\n"}
{"name":"continuousAt_prod_of_discrete_left","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝³ : TopologicalSpace α\ninst✝² : TopologicalSpace β\ninst✝¹ : TopologicalSpace γ\ninst✝ : DiscreteTopology α\nf : Prod α β → γ\nx : Prod α β\n⊢ Iff (ContinuousAt f x) (ContinuousAt (fun x_1 => f { fst := x.1, snd := x_1 }) x.2)","decl":"theorem continuousAt_prod_of_discrete_left [DiscreteTopology α] {f : α × β → γ} {x : α × β} :\n    ContinuousAt f x ↔ ContinuousAt (f ⟨x.1, ·⟩) x.2 := by\n  simp_rw [← continuousWithinAt_univ]; exact continuousWithinAt_prod_of_discrete_left\n\n"}
{"name":"continuousAt_prod_of_discrete_right","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝³ : TopologicalSpace α\ninst✝² : TopologicalSpace β\ninst✝¹ : TopologicalSpace γ\ninst✝ : DiscreteTopology β\nf : Prod α β → γ\nx : Prod α β\n⊢ Iff (ContinuousAt f x) (ContinuousAt (fun x_1 => f { fst := x_1, snd := x.2 }) x.1)","decl":"theorem continuousAt_prod_of_discrete_right [DiscreteTopology β] {f : α × β → γ} {x : α × β} :\n    ContinuousAt f x ↔ ContinuousAt (f ⟨·, x.2⟩) x.1 := by\n  simp_rw [← continuousWithinAt_univ]; exact continuousWithinAt_prod_of_discrete_right\n\n"}
{"name":"continuousOn_prod_of_discrete_left","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝³ : TopologicalSpace α\ninst✝² : TopologicalSpace β\ninst✝¹ : TopologicalSpace γ\ninst✝ : DiscreteTopology α\nf : Prod α β → γ\ns : Set (Prod α β)\n⊢ Iff (ContinuousOn f s) (∀ (a : α), ContinuousOn (fun x => f { fst := a, snd := x }) (setOf fun b => Membership.mem s { fst := a, snd := b }))","decl":"theorem continuousOn_prod_of_discrete_left [DiscreteTopology α] {f : α × β → γ} {s : Set (α × β)} :\n    ContinuousOn f s ↔ ∀ a, ContinuousOn (f ⟨a, ·⟩) {b | (a, b) ∈ s} := by\n  simp_rw [ContinuousOn, Prod.forall, continuousWithinAt_prod_of_discrete_left]; rfl\n\n"}
{"name":"continuousOn_prod_of_discrete_right","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝³ : TopologicalSpace α\ninst✝² : TopologicalSpace β\ninst✝¹ : TopologicalSpace γ\ninst✝ : DiscreteTopology β\nf : Prod α β → γ\ns : Set (Prod α β)\n⊢ Iff (ContinuousOn f s) (∀ (b : β), ContinuousOn (fun x => f { fst := x, snd := b }) (setOf fun a => Membership.mem s { fst := a, snd := b }))","decl":"theorem continuousOn_prod_of_discrete_right [DiscreteTopology β] {f : α × β → γ} {s : Set (α × β)} :\n    ContinuousOn f s ↔ ∀ b, ContinuousOn (f ⟨·, b⟩) {a | (a, b) ∈ s} := by\n  simp_rw [ContinuousOn, Prod.forall, continuousWithinAt_prod_of_discrete_right]; apply forall_swap\n\n"}
{"name":"continuous_prod_of_discrete_left","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝³ : TopologicalSpace α\ninst✝² : TopologicalSpace β\ninst✝¹ : TopologicalSpace γ\ninst✝ : DiscreteTopology α\nf : Prod α β → γ\n⊢ Iff (Continuous f) (∀ (a : α), Continuous fun x => f { fst := a, snd := x })","decl":"/-- If a function `f a b` is such that `y ↦ f a b` is continuous for all `a`, and `a` lives in a\ndiscrete space, then `f` is continuous, and vice versa. -/\ntheorem continuous_prod_of_discrete_left [DiscreteTopology α] {f : α × β → γ} :\n    Continuous f ↔ ∀ a, Continuous (f ⟨a, ·⟩) := by\n  simp_rw [continuous_iff_continuousOn_univ]; exact continuousOn_prod_of_discrete_left\n\n"}
{"name":"continuous_prod_of_discrete_right","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝³ : TopologicalSpace α\ninst✝² : TopologicalSpace β\ninst✝¹ : TopologicalSpace γ\ninst✝ : DiscreteTopology β\nf : Prod α β → γ\n⊢ Iff (Continuous f) (∀ (b : β), Continuous fun x => f { fst := x, snd := b })","decl":"theorem continuous_prod_of_discrete_right [DiscreteTopology β] {f : α × β → γ} :\n    Continuous f ↔ ∀ b, Continuous (f ⟨·, b⟩) := by\n  simp_rw [continuous_iff_continuousOn_univ]; exact continuousOn_prod_of_discrete_right\n\n"}
{"name":"isOpenMap_prod_of_discrete_left","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝³ : TopologicalSpace α\ninst✝² : TopologicalSpace β\ninst✝¹ : TopologicalSpace γ\ninst✝ : DiscreteTopology α\nf : Prod α β → γ\n⊢ Iff (IsOpenMap f) (∀ (a : α), IsOpenMap fun x => f { fst := a, snd := x })","decl":"theorem isOpenMap_prod_of_discrete_left [DiscreteTopology α] {f : α × β → γ} :\n    IsOpenMap f ↔ ∀ a, IsOpenMap (f ⟨a, ·⟩) := by\n  simp_rw [isOpenMap_iff_nhds_le, Prod.forall, nhds_prod_eq, nhds_discrete, pure_prod, map_map]\n  rfl\n\n"}
{"name":"isOpenMap_prod_of_discrete_right","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝³ : TopologicalSpace α\ninst✝² : TopologicalSpace β\ninst✝¹ : TopologicalSpace γ\ninst✝ : DiscreteTopology β\nf : Prod α β → γ\n⊢ Iff (IsOpenMap f) (∀ (b : β), IsOpenMap fun x => f { fst := x, snd := b })","decl":"theorem isOpenMap_prod_of_discrete_right [DiscreteTopology β] {f : α × β → γ} :\n    IsOpenMap f ↔ ∀ b, IsOpenMap (f ⟨·, b⟩) := by\n  simp_rw [isOpenMap_iff_nhds_le, Prod.forall, forall_swap (α := α) (β := β), nhds_prod_eq,\n    nhds_discrete, prod_pure, map_map]; rfl\n\n"}
{"name":"ContinuousOn.prod_map","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\nδ : Type u_4\ninst✝³ : TopologicalSpace α\ninst✝² : TopologicalSpace β\ninst✝¹ : TopologicalSpace γ\ninst✝ : TopologicalSpace δ\nf : α → γ\ng : β → δ\ns : Set α\nt : Set β\nhf : ContinuousOn f s\nhg : ContinuousOn g t\n⊢ ContinuousOn (Prod.map f g) (SProd.sprod s t)","decl":"theorem ContinuousOn.prod_map {f : α → γ} {g : β → δ} {s : Set α} {t : Set β}\n    (hf : ContinuousOn f s) (hg : ContinuousOn g t) : ContinuousOn (Prod.map f g) (s ×ˢ t) :=\n  fun ⟨x, y⟩ ⟨hx, hy⟩ => ContinuousWithinAt.prod_map (hf x hx) (hg y hy)\n\n"}
{"name":"ContinuousWithinAt.prod","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → β\ng : α → γ\ns : Set α\nx : α\nhf : ContinuousWithinAt f s x\nhg : ContinuousWithinAt g s x\n⊢ ContinuousWithinAt (fun x => { fst := f x, snd := g x }) s x","decl":"theorem ContinuousWithinAt.prod {f : α → β} {g : α → γ} {s : Set α} {x : α}\n    (hf : ContinuousWithinAt f s x) (hg : ContinuousWithinAt g s x) :\n    ContinuousWithinAt (fun x => (f x, g x)) s x :=\n  hf.prod_mk_nhds hg\n\n"}
{"name":"ContinuousOn.prod","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → β\ng : α → γ\ns : Set α\nhf : ContinuousOn f s\nhg : ContinuousOn g s\n⊢ ContinuousOn (fun x => { fst := f x, snd := g x }) s","decl":"@[fun_prop]\ntheorem ContinuousOn.prod {f : α → β} {g : α → γ} {s : Set α} (hf : ContinuousOn f s)\n    (hg : ContinuousOn g s) : ContinuousOn (fun x => (f x, g x)) s := fun x hx =>\n  ContinuousWithinAt.prod (hf x hx) (hg x hx)\n\n"}
{"name":"continuousOn_fst","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\ns : Set (Prod α β)\n⊢ ContinuousOn Prod.fst s","decl":"theorem continuousOn_fst {s : Set (α × β)} : ContinuousOn Prod.fst s :=\n  continuous_fst.continuousOn\n\n"}
{"name":"continuousWithinAt_fst","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\ns : Set (Prod α β)\np : Prod α β\n⊢ ContinuousWithinAt Prod.fst s p","decl":"theorem continuousWithinAt_fst {s : Set (α × β)} {p : α × β} : ContinuousWithinAt Prod.fst s p :=\n  continuous_fst.continuousWithinAt\n\n"}
{"name":"ContinuousOn.fst","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → Prod β γ\ns : Set α\nhf : ContinuousOn f s\n⊢ ContinuousOn (fun x => (f x).1) s","decl":"@[fun_prop]\ntheorem ContinuousOn.fst {f : α → β × γ} {s : Set α} (hf : ContinuousOn f s) :\n    ContinuousOn (fun x => (f x).1) s :=\n  continuous_fst.comp_continuousOn hf\n\n"}
{"name":"ContinuousWithinAt.fst","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → Prod β γ\ns : Set α\na : α\nh : ContinuousWithinAt f s a\n⊢ ContinuousWithinAt (fun x => (f x).1) s a","decl":"theorem ContinuousWithinAt.fst {f : α → β × γ} {s : Set α} {a : α} (h : ContinuousWithinAt f s a) :\n    ContinuousWithinAt (fun x => (f x).fst) s a :=\n  continuousAt_fst.comp_continuousWithinAt h\n\n"}
{"name":"continuousOn_snd","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\ns : Set (Prod α β)\n⊢ ContinuousOn Prod.snd s","decl":"theorem continuousOn_snd {s : Set (α × β)} : ContinuousOn Prod.snd s :=\n  continuous_snd.continuousOn\n\n"}
{"name":"continuousWithinAt_snd","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\ns : Set (Prod α β)\np : Prod α β\n⊢ ContinuousWithinAt Prod.snd s p","decl":"theorem continuousWithinAt_snd {s : Set (α × β)} {p : α × β} : ContinuousWithinAt Prod.snd s p :=\n  continuous_snd.continuousWithinAt\n\n"}
{"name":"ContinuousOn.snd","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → Prod β γ\ns : Set α\nhf : ContinuousOn f s\n⊢ ContinuousOn (fun x => (f x).2) s","decl":"@[fun_prop]\ntheorem ContinuousOn.snd {f : α → β × γ} {s : Set α} (hf : ContinuousOn f s) :\n    ContinuousOn (fun x => (f x).2) s :=\n  continuous_snd.comp_continuousOn hf\n\n"}
{"name":"ContinuousWithinAt.snd","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → Prod β γ\ns : Set α\na : α\nh : ContinuousWithinAt f s a\n⊢ ContinuousWithinAt (fun x => (f x).2) s a","decl":"theorem ContinuousWithinAt.snd {f : α → β × γ} {s : Set α} {a : α} (h : ContinuousWithinAt f s a) :\n    ContinuousWithinAt (fun x => (f x).snd) s a :=\n  continuousAt_snd.comp_continuousWithinAt h\n\n"}
{"name":"continuousWithinAt_prod_iff","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → Prod β γ\ns : Set α\nx : α\n⊢ Iff (ContinuousWithinAt f s x) (And (ContinuousWithinAt (Function.comp Prod.fst f) s x) (ContinuousWithinAt (Function.comp Prod.snd f) s x))","decl":"theorem continuousWithinAt_prod_iff {f : α → β × γ} {s : Set α} {x : α} :\n    ContinuousWithinAt f s x ↔\n      ContinuousWithinAt (Prod.fst ∘ f) s x ∧ ContinuousWithinAt (Prod.snd ∘ f) s x :=\n  ⟨fun h => ⟨h.fst, h.snd⟩, fun ⟨h1, h2⟩ => h1.prod h2⟩\n\n"}
{"name":"continuousWithinAt_pi","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nι : Type u_5\nπ : ι → Type u_6\ninst✝ : (i : ι) → TopologicalSpace (π i)\nf : α → (i : ι) → π i\ns : Set α\nx : α\n⊢ Iff (ContinuousWithinAt f s x) (∀ (i : ι), ContinuousWithinAt (fun y => f y i) s x)","decl":"theorem continuousWithinAt_pi {ι : Type*} {π : ι → Type*} [∀ i, TopologicalSpace (π i)]\n    {f : α → ∀ i, π i} {s : Set α} {x : α} :\n    ContinuousWithinAt f s x ↔ ∀ i, ContinuousWithinAt (fun y => f y i) s x :=\n  tendsto_pi_nhds\n\n"}
{"name":"continuousOn_pi","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nι : Type u_5\nπ : ι → Type u_6\ninst✝ : (i : ι) → TopologicalSpace (π i)\nf : α → (i : ι) → π i\ns : Set α\n⊢ Iff (ContinuousOn f s) (∀ (i : ι), ContinuousOn (fun y => f y i) s)","decl":"theorem continuousOn_pi {ι : Type*} {π : ι → Type*} [∀ i, TopologicalSpace (π i)]\n    {f : α → ∀ i, π i} {s : Set α} : ContinuousOn f s ↔ ∀ i, ContinuousOn (fun y => f y i) s :=\n  ⟨fun h i x hx => tendsto_pi_nhds.1 (h x hx) i, fun h x hx => tendsto_pi_nhds.2 fun i => h i x hx⟩\n\n"}
{"name":"continuousOn_pi'","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nι : Type u_5\nπ : ι → Type u_6\ninst✝ : (i : ι) → TopologicalSpace (π i)\nf : α → (i : ι) → π i\ns : Set α\nhf : ∀ (i : ι), ContinuousOn (fun y => f y i) s\n⊢ ContinuousOn f s","decl":"@[fun_prop]\ntheorem continuousOn_pi' {ι : Type*} {π : ι → Type*} [∀ i, TopologicalSpace (π i)]\n    {f : α → ∀ i, π i} {s : Set α} (hf : ∀ i, ContinuousOn (fun y => f y i) s) :\n    ContinuousOn f s :=\n  continuousOn_pi.2 hf\n\n"}
{"name":"continuousOn_apply","module":"Mathlib.Topology.ContinuousOn","initialProofState":"ι : Type u_5\nπ : ι → Type u_6\ninst✝ : (i : ι) → TopologicalSpace (π i)\ni : ι\ns : Set ((i : ι) → π i)\n⊢ ContinuousOn (fun p => p i) s","decl":"@[fun_prop]\ntheorem continuousOn_apply {ι : Type*} {π : ι → Type*} [∀ i, TopologicalSpace (π i)]\n    (i : ι) (s) : ContinuousOn (fun p : ∀ i, π i => p i) s :=\n  Continuous.continuousOn (continuous_apply i)\n\n\n"}
{"name":"continuousOn_const","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\ns : Set α\nc : β\n⊢ ContinuousOn (fun x => c) s","decl":"@[fun_prop]\ntheorem continuousOn_const {s : Set α} {c : β} : ContinuousOn (fun _ => c) s :=\n  continuous_const.continuousOn\n\n"}
{"name":"continuousWithinAt_const","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nb : β\ns : Set α\nx : α\n⊢ ContinuousWithinAt (fun x => b) s x","decl":"theorem continuousWithinAt_const {b : β} {s : Set α} {x : α} :\n    ContinuousWithinAt (fun _ : α => b) s x :=\n  continuous_const.continuousWithinAt\n\n"}
{"name":"continuousOn_id","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\ns : Set α\n⊢ ContinuousOn id s","decl":"theorem continuousOn_id {s : Set α} : ContinuousOn id s :=\n  continuous_id.continuousOn\n\n"}
{"name":"continuousOn_id'","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\ns : Set α\n⊢ ContinuousOn (fun x => x) s","decl":"@[fun_prop]\ntheorem continuousOn_id' (s : Set α) : ContinuousOn (fun x : α => x) s := continuousOn_id\n\n"}
{"name":"continuousWithinAt_id","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\ns : Set α\nx : α\n⊢ ContinuousWithinAt id s x","decl":"theorem continuousWithinAt_id {s : Set α} {x : α} : ContinuousWithinAt id s x :=\n  continuous_id.continuousWithinAt\n\n"}
{"name":"ContinuousOn.iterate","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\nf : α → α\ns : Set α\nhcont : ContinuousOn f s\nhmaps : Set.MapsTo f s s\nn : Nat\n⊢ ContinuousOn (Nat.iterate f n) s","decl":"protected theorem ContinuousOn.iterate {f : α → α} {s : Set α} (hcont : ContinuousOn f s)\n    (hmaps : MapsTo f s s) : ∀ n, ContinuousOn (f^[n]) s\n  | 0 => continuousOn_id\n  | (n + 1) => (hcont.iterate hmaps n).comp hcont hmaps\n\n"}
{"name":"ContinuousWithinAt.finCons","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nn : Nat\nπ : Fin (HAdd.hAdd n 1) → Type u_5\ninst✝ : (i : Fin (HAdd.hAdd n 1)) → TopologicalSpace (π i)\nf : α → π 0\ng : α → (j : Fin n) → π j.succ\na : α\ns : Set α\nhf : ContinuousWithinAt f s a\nhg : ContinuousWithinAt g s a\n⊢ ContinuousWithinAt (fun a => Fin.cons (f a) (g a)) s a","decl":"theorem ContinuousWithinAt.finCons\n    {f : α → π 0} {g : α → ∀ j : Fin n, π (Fin.succ j)} {a : α} {s : Set α}\n    (hf : ContinuousWithinAt f s a) (hg : ContinuousWithinAt g s a) :\n    ContinuousWithinAt (fun a => Fin.cons (f a) (g a)) s a :=\n  hf.tendsto.finCons hg\n\n"}
{"name":"ContinuousOn.finCons","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nn : Nat\nπ : Fin (HAdd.hAdd n 1) → Type u_5\ninst✝ : (i : Fin (HAdd.hAdd n 1)) → TopologicalSpace (π i)\nf : α → π 0\ns : Set α\ng : α → (j : Fin n) → π j.succ\nhf : ContinuousOn f s\nhg : ContinuousOn g s\n⊢ ContinuousOn (fun a => Fin.cons (f a) (g a)) s","decl":"theorem ContinuousOn.finCons {f : α → π 0} {s : Set α} {g : α → ∀ j : Fin n, π (Fin.succ j)}\n    (hf : ContinuousOn f s) (hg : ContinuousOn g s) :\n    ContinuousOn (fun a => Fin.cons (f a) (g a)) s := fun a ha =>\n  (hf a ha).finCons (hg a ha)\n\n"}
{"name":"ContinuousWithinAt.matrixVecCons","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nn : Nat\nf : α → β\ng : α → Fin n → β\na : α\ns : Set α\nhf : ContinuousWithinAt f s a\nhg : ContinuousWithinAt g s a\n⊢ ContinuousWithinAt (fun a => Matrix.vecCons (f a) (g a)) s a","decl":"theorem ContinuousWithinAt.matrixVecCons {f : α → β} {g : α → Fin n → β} {a : α} {s : Set α}\n    (hf : ContinuousWithinAt f s a) (hg : ContinuousWithinAt g s a) :\n    ContinuousWithinAt (fun a => Matrix.vecCons (f a) (g a)) s a :=\n  hf.tendsto.matrixVecCons hg\n\n"}
{"name":"ContinuousOn.matrixVecCons","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nn : Nat\nf : α → β\ng : α → Fin n → β\ns : Set α\nhf : ContinuousOn f s\nhg : ContinuousOn g s\n⊢ ContinuousOn (fun a => Matrix.vecCons (f a) (g a)) s","decl":"theorem ContinuousOn.matrixVecCons {f : α → β} {g : α → Fin n → β} {s : Set α}\n    (hf : ContinuousOn f s) (hg : ContinuousOn g s) :\n    ContinuousOn (fun a => Matrix.vecCons (f a) (g a)) s := fun a ha =>\n  (hf a ha).matrixVecCons (hg a ha)\n\n"}
{"name":"ContinuousWithinAt.finSnoc","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nn : Nat\nπ : Fin (HAdd.hAdd n 1) → Type u_5\ninst✝ : (i : Fin (HAdd.hAdd n 1)) → TopologicalSpace (π i)\nf : α → (j : Fin n) → π j.castSucc\ng : α → π (Fin.last n)\na : α\ns : Set α\nhf : ContinuousWithinAt f s a\nhg : ContinuousWithinAt g s a\n⊢ ContinuousWithinAt (fun a => Fin.snoc (f a) (g a)) s a","decl":"theorem ContinuousWithinAt.finSnoc\n    {f : α → ∀ j : Fin n, π (Fin.castSucc j)} {g : α → π (Fin.last _)} {a : α} {s : Set α}\n    (hf : ContinuousWithinAt f s a) (hg : ContinuousWithinAt g s a) :\n    ContinuousWithinAt (fun a => Fin.snoc (f a) (g a)) s a :=\n  hf.tendsto.finSnoc hg\n\n"}
{"name":"ContinuousOn.finSnoc","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nn : Nat\nπ : Fin (HAdd.hAdd n 1) → Type u_5\ninst✝ : (i : Fin (HAdd.hAdd n 1)) → TopologicalSpace (π i)\nf : α → (j : Fin n) → π j.castSucc\ng : α → π (Fin.last n)\ns : Set α\nhf : ContinuousOn f s\nhg : ContinuousOn g s\n⊢ ContinuousOn (fun a => Fin.snoc (f a) (g a)) s","decl":"theorem ContinuousOn.finSnoc\n    {f : α → ∀ j : Fin n, π (Fin.castSucc j)} {g : α → π (Fin.last _)} {s : Set α}\n    (hf : ContinuousOn f s) (hg : ContinuousOn g s) :\n    ContinuousOn (fun a => Fin.snoc (f a) (g a)) s := fun a ha =>\n  (hf a ha).finSnoc (hg a ha)\n\n"}
{"name":"ContinuousWithinAt.finInsertNth","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nn : Nat\nπ : Fin (HAdd.hAdd n 1) → Type u_5\ninst✝ : (i : Fin (HAdd.hAdd n 1)) → TopologicalSpace (π i)\ni : Fin (HAdd.hAdd n 1)\nf : α → π i\ng : α → (j : Fin n) → π (i.succAbove j)\na : α\ns : Set α\nhf : ContinuousWithinAt f s a\nhg : ContinuousWithinAt g s a\n⊢ ContinuousWithinAt (fun a => i.insertNth (f a) (g a)) s a","decl":"theorem ContinuousWithinAt.finInsertNth\n    (i : Fin (n + 1)) {f : α → π i} {g : α → ∀ j : Fin n, π (i.succAbove j)} {a : α} {s : Set α}\n    (hf : ContinuousWithinAt f s a) (hg : ContinuousWithinAt g s a) :\n    ContinuousWithinAt (fun a => i.insertNth (f a) (g a)) s a :=\n  hf.tendsto.finInsertNth i hg\n\n"}
{"name":"ContinuousWithinAt.fin_insertNth","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nn : Nat\nπ : Fin (HAdd.hAdd n 1) → Type u_5\ninst✝ : (i : Fin (HAdd.hAdd n 1)) → TopologicalSpace (π i)\ni : Fin (HAdd.hAdd n 1)\nf : α → π i\ng : α → (j : Fin n) → π (i.succAbove j)\na : α\ns : Set α\nhf : ContinuousWithinAt f s a\nhg : ContinuousWithinAt g s a\n⊢ ContinuousWithinAt (fun a => i.insertNth (f a) (g a)) s a","decl":"@[deprecated (since := \"2025-01-02\")]\nalias ContinuousWithinAt.fin_insertNth := ContinuousWithinAt.finInsertNth\n\n"}
{"name":"ContinuousOn.finInsertNth","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nn : Nat\nπ : Fin (HAdd.hAdd n 1) → Type u_5\ninst✝ : (i : Fin (HAdd.hAdd n 1)) → TopologicalSpace (π i)\ni : Fin (HAdd.hAdd n 1)\nf : α → π i\ng : α → (j : Fin n) → π (i.succAbove j)\ns : Set α\nhf : ContinuousOn f s\nhg : ContinuousOn g s\n⊢ ContinuousOn (fun a => i.insertNth (f a) (g a)) s","decl":"theorem ContinuousOn.finInsertNth\n    (i : Fin (n + 1)) {f : α → π i} {g : α → ∀ j : Fin n, π (i.succAbove j)} {s : Set α}\n    (hf : ContinuousOn f s) (hg : ContinuousOn g s) :\n    ContinuousOn (fun a => i.insertNth (f a) (g a)) s := fun a ha =>\n  (hf a ha).finInsertNth i (hg a ha)\n\n"}
{"name":"ContinuousOn.fin_insertNth","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nn : Nat\nπ : Fin (HAdd.hAdd n 1) → Type u_5\ninst✝ : (i : Fin (HAdd.hAdd n 1)) → TopologicalSpace (π i)\ni : Fin (HAdd.hAdd n 1)\nf : α → π i\ng : α → (j : Fin n) → π (i.succAbove j)\ns : Set α\nhf : ContinuousOn f s\nhg : ContinuousOn g s\n⊢ ContinuousOn (fun a => i.insertNth (f a) (g a)) s","decl":"@[deprecated (since := \"2025-01-02\")]\nalias ContinuousOn.fin_insertNth := ContinuousOn.finInsertNth\n\n"}
{"name":"Set.LeftInvOn.map_nhdsWithin_eq","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ng : β → α\nx : β\ns : Set β\nh : Set.LeftInvOn f g s\nhx : Eq (f (g x)) x\nhf : ContinuousWithinAt f (Set.image g s) (g x)\nhg : ContinuousWithinAt g s x\n⊢ Eq (Filter.map g (nhdsWithin x s)) (nhdsWithin (g x) (Set.image g s))","decl":"theorem Set.LeftInvOn.map_nhdsWithin_eq {f : α → β} {g : β → α} {x : β} {s : Set β}\n    (h : LeftInvOn f g s) (hx : f (g x) = x) (hf : ContinuousWithinAt f (g '' s) (g x))\n    (hg : ContinuousWithinAt g s x) : map g (𝓝[s] x) = 𝓝[g '' s] g x := by\n  apply le_antisymm\n  · exact hg.tendsto_nhdsWithin (mapsTo_image _ _)\n  · have A : g ∘ f =ᶠ[𝓝[g '' s] g x] id :=\n      h.rightInvOn_image.eqOn.eventuallyEq_of_mem self_mem_nhdsWithin\n    refine le_map_of_right_inverse A ?_\n    simpa only [hx] using hf.tendsto_nhdsWithin (h.mapsTo (surjOn_image _ _))\n\n"}
{"name":"Function.LeftInverse.map_nhds_eq","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ng : β → α\nx : β\nh : Function.LeftInverse f g\nhf : ContinuousWithinAt f (Set.range g) (g x)\nhg : ContinuousAt g x\n⊢ Eq (Filter.map g (nhds x)) (nhdsWithin (g x) (Set.range g))","decl":"theorem Function.LeftInverse.map_nhds_eq {f : α → β} {g : β → α} {x : β}\n    (h : Function.LeftInverse f g) (hf : ContinuousWithinAt f (range g) (g x))\n    (hg : ContinuousAt g x) : map g (𝓝 x) = 𝓝[range g] g x := by\n  simpa only [nhdsWithin_univ, image_univ] using\n    (h.leftInvOn univ).map_nhdsWithin_eq (h x) (by rwa [image_univ]) hg.continuousWithinAt\n\n"}
{"name":"Topology.IsInducing.continuousWithinAt_iff","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → β\ng : β → γ\nhg : Topology.IsInducing g\ns : Set α\nx : α\n⊢ Iff (ContinuousWithinAt f s x) (ContinuousWithinAt (Function.comp g f) s x)","decl":"lemma Topology.IsInducing.continuousWithinAt_iff {f : α → β} {g : β → γ} (hg : IsInducing g)\n    {s : Set α} {x : α} : ContinuousWithinAt f s x ↔ ContinuousWithinAt (g ∘ f) s x := by\n  simp_rw [ContinuousWithinAt, hg.tendsto_nhds_iff]; rfl\n\n"}
{"name":"Inducing.continuousWithinAt_iff","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → β\ng : β → γ\nhg : Topology.IsInducing g\ns : Set α\nx : α\n⊢ Iff (ContinuousWithinAt f s x) (ContinuousWithinAt (Function.comp g f) s x)","decl":"@[deprecated (since := \"2024-10-28\")]\nalias Inducing.continuousWithinAt_iff := IsInducing.continuousWithinAt_iff\n\n"}
{"name":"Topology.IsInducing.continuousOn_iff","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → β\ng : β → γ\nhg : Topology.IsInducing g\ns : Set α\n⊢ Iff (ContinuousOn f s) (ContinuousOn (Function.comp g f) s)","decl":"lemma Topology.IsInducing.continuousOn_iff {f : α → β} {g : β → γ} (hg : IsInducing g)\n    {s : Set α} : ContinuousOn f s ↔ ContinuousOn (g ∘ f) s := by\n  simp_rw [ContinuousOn, hg.continuousWithinAt_iff]\n\n"}
{"name":"Inducing.continuousOn_iff","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → β\ng : β → γ\nhg : Topology.IsInducing g\ns : Set α\n⊢ Iff (ContinuousOn f s) (ContinuousOn (Function.comp g f) s)","decl":"@[deprecated (since := \"2024-10-28\")] alias Inducing.continuousOn_iff := IsInducing.continuousOn_iff\n\n"}
{"name":"Topology.IsEmbedding.continuousOn_iff","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → β\ng : β → γ\nhg : Topology.IsEmbedding g\ns : Set α\n⊢ Iff (ContinuousOn f s) (ContinuousOn (Function.comp g f) s)","decl":"lemma Topology.IsEmbedding.continuousOn_iff {f : α → β} {g : β → γ} (hg : IsEmbedding g)\n    {s : Set α} : ContinuousOn f s ↔ ContinuousOn (g ∘ f) s :=\n  hg.isInducing.continuousOn_iff\n\n"}
{"name":"Embedding.continuousOn_iff","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → β\ng : β → γ\nhg : Topology.IsEmbedding g\ns : Set α\n⊢ Iff (ContinuousOn f s) (ContinuousOn (Function.comp g f) s)","decl":"@[deprecated (since := \"2024-10-26\")]\nalias Embedding.continuousOn_iff := IsEmbedding.continuousOn_iff\n\n"}
{"name":"Topology.IsEmbedding.map_nhdsWithin_eq","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\nhf : Topology.IsEmbedding f\ns : Set α\nx : α\n⊢ Eq (Filter.map f (nhdsWithin x s)) (nhdsWithin (f x) (Set.image f s))","decl":"lemma Topology.IsEmbedding.map_nhdsWithin_eq {f : α → β} (hf : IsEmbedding f) (s : Set α) (x : α) :\n    map f (𝓝[s] x) = 𝓝[f '' s] f x := by\n  rw [nhdsWithin, Filter.map_inf hf.injective, hf.map_nhds_eq, map_principal, ← nhdsWithin_inter',\n    inter_eq_self_of_subset_right (image_subset_range _ _)]\n\n"}
{"name":"Embedding.map_nhdsWithin_eq","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\nhf : Topology.IsEmbedding f\ns : Set α\nx : α\n⊢ Eq (Filter.map f (nhdsWithin x s)) (nhdsWithin (f x) (Set.image f s))","decl":"@[deprecated (since := \"2024-10-26\")]\nalias Embedding.map_nhdsWithin_eq := IsEmbedding.map_nhdsWithin_eq\n\n"}
{"name":"Topology.IsOpenEmbedding.map_nhdsWithin_preimage_eq","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\nhf : Topology.IsOpenEmbedding f\ns : Set β\nx : α\n⊢ Eq (Filter.map f (nhdsWithin x (Set.preimage f s))) (nhdsWithin (f x) s)","decl":"theorem Topology.IsOpenEmbedding.map_nhdsWithin_preimage_eq {f : α → β} (hf : IsOpenEmbedding f)\n    (s : Set β) (x : α) : map f (𝓝[f ⁻¹' s] x) = 𝓝[s] f x := by\n  rw [hf.isEmbedding.map_nhdsWithin_eq, image_preimage_eq_inter_range]\n  apply nhdsWithin_eq_nhdsWithin (mem_range_self _) hf.isOpen_range\n  rw [inter_assoc, inter_self]\n\n"}
{"name":"OpenEmbedding.map_nhdsWithin_preimage_eq","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\nhf : Topology.IsOpenEmbedding f\ns : Set β\nx : α\n⊢ Eq (Filter.map f (nhdsWithin x (Set.preimage f s))) (nhdsWithin (f x) s)","decl":"@[deprecated (since := \"2024-10-18\")]\nalias OpenEmbedding.map_nhdsWithin_preimage_eq := IsOpenEmbedding.map_nhdsWithin_preimage_eq\n\n"}
{"name":"Topology.IsQuotientMap.continuousOn_isOpen_iff","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → β\ng : β → γ\nh : Topology.IsQuotientMap f\ns : Set β\nhs : IsOpen s\n⊢ Iff (ContinuousOn g s) (ContinuousOn (Function.comp g f) (Set.preimage f s))","decl":"theorem Topology.IsQuotientMap.continuousOn_isOpen_iff {f : α → β} {g : β → γ} (h : IsQuotientMap f)\n    {s : Set β} (hs : IsOpen s) : ContinuousOn g s ↔ ContinuousOn (g ∘ f) (f ⁻¹' s) := by\n  simp only [continuousOn_iff_continuous_restrict, (h.restrictPreimage_isOpen hs).continuous_iff]\n  rfl\n\n"}
{"name":"QuotientMap.continuousOn_isOpen_iff","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ninst✝ : TopologicalSpace γ\nf : α → β\ng : β → γ\nh : Topology.IsQuotientMap f\ns : Set β\nhs : IsOpen s\n⊢ Iff (ContinuousOn g s) (ContinuousOn (Function.comp g f) (Set.preimage f s))","decl":"@[deprecated (since := \"2024-10-22\")]\nalias QuotientMap.continuousOn_isOpen_iff := IsQuotientMap.continuousOn_isOpen_iff\n\n"}
{"name":"IsOpenMap.continuousOn_image_of_leftInvOn","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set α\nh : IsOpenMap (s.restrict f)\nfinv : β → α\nhleft : Set.LeftInvOn finv f s\n⊢ ContinuousOn finv (Set.image f s)","decl":"theorem IsOpenMap.continuousOn_image_of_leftInvOn {f : α → β} {s : Set α}\n    (h : IsOpenMap (s.restrict f)) {finv : β → α} (hleft : LeftInvOn finv f s) :\n    ContinuousOn finv (f '' s) := by\n  refine continuousOn_iff'.2 fun t ht => ⟨f '' (t ∩ s), ?_, ?_⟩\n  · rw [← image_restrict]\n    exact h _ (ht.preimage continuous_subtype_val)\n  · rw [inter_eq_self_of_subset_left (image_subset f inter_subset_right), hleft.image_inter']\n\n"}
{"name":"IsOpenMap.continuousOn_range_of_leftInverse","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\nhf : IsOpenMap f\nfinv : β → α\nhleft : Function.LeftInverse finv f\n⊢ ContinuousOn finv (Set.range f)","decl":"theorem IsOpenMap.continuousOn_range_of_leftInverse {f : α → β} (hf : IsOpenMap f) {finv : β → α}\n    (hleft : Function.LeftInverse finv f) : ContinuousOn finv (range f) := by\n  rw [← image_univ]\n  exact (hf.restrict isOpen_univ).continuousOn_image_of_leftInvOn fun x _ => hleft x\n\n"}
{"name":"continuousWithinAt_update_same","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\nf : α → β\ns : Set α\nx : α\ninst✝ : DecidableEq α\ny : β\n⊢ Iff (ContinuousWithinAt (Function.update f x y) s x) (Filter.Tendsto f (nhdsWithin x (SDiff.sdiff s (Singleton.singleton x))) (nhds y))","decl":"@[simp]\ntheorem continuousWithinAt_update_same [DecidableEq α] {y : β} :\n    ContinuousWithinAt (update f x y) s x ↔ Tendsto f (𝓝[s \\ {x}] x) (𝓝 y) :=\n  calc\n    ContinuousWithinAt (update f x y) s x ↔ Tendsto (update f x y) (𝓝[s \\ {x}] x) (𝓝 y) := by\n    { rw [← continuousWithinAt_diff_self, ContinuousWithinAt, update_self] }\n    _ ↔ Tendsto f (𝓝[s \\ {x}] x) (𝓝 y) :=\n      tendsto_congr' <| eventually_nhdsWithin_iff.2 <| Eventually.of_forall\n        fun _ hz => update_of_ne hz.2 ..\n\n"}
{"name":"continuousAt_update_same","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\nf : α → β\nx : α\ninst✝ : DecidableEq α\ny : β\n⊢ Iff (ContinuousAt (Function.update f x y) x) (Filter.Tendsto f (nhdsWithin x (HasCompl.compl (Singleton.singleton x))) (nhds y))","decl":"@[simp]\ntheorem continuousAt_update_same [DecidableEq α] {y : β} :\n    ContinuousAt (Function.update f x y) x ↔ Tendsto f (𝓝[≠] x) (𝓝 y) := by\n  rw [← continuousWithinAt_univ, continuousWithinAt_update_same, compl_eq_univ_diff]\n\n"}
{"name":"ContinuousOn.if'","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\ns : Set α\np : α → Prop\nf g : α → β\ninst✝ : (a : α) → Decidable (p a)\nhpf : ∀ (a : α), Membership.mem (Inter.inter s (frontier (setOf fun a => p a))) a → Filter.Tendsto f (nhdsWithin a (Inter.inter s (setOf fun a => p a))) (nhds (ite (p a) (f a) (g a)))\nhpg : ∀ (a : α), Membership.mem (Inter.inter s (frontier (setOf fun a => p a))) a → Filter.Tendsto g (nhdsWithin a (Inter.inter s (setOf fun a => Not (p a)))) (nhds (ite (p a) (f a) (g a)))\nhf : ContinuousOn f (Inter.inter s (setOf fun a => p a))\nhg : ContinuousOn g (Inter.inter s (setOf fun a => Not (p a)))\n⊢ ContinuousOn (fun a => ite (p a) (f a) (g a)) s","decl":"theorem ContinuousOn.if' {s : Set α} {p : α → Prop} {f g : α → β} [∀ a, Decidable (p a)]\n    (hpf : ∀ a ∈ s ∩ frontier { a | p a },\n      Tendsto f (𝓝[s ∩ { a | p a }] a) (𝓝 <| if p a then f a else g a))\n    (hpg :\n      ∀ a ∈ s ∩ frontier { a | p a },\n        Tendsto g (𝓝[s ∩ { a | ¬p a }] a) (𝓝 <| if p a then f a else g a))\n    (hf : ContinuousOn f <| s ∩ { a | p a }) (hg : ContinuousOn g <| s ∩ { a | ¬p a }) :\n    ContinuousOn (fun a => if p a then f a else g a) s := by\n  intro x hx\n  by_cases hx' : x ∈ frontier { a | p a }\n  · exact (hpf x ⟨hx, hx'⟩).piecewise_nhdsWithin (hpg x ⟨hx, hx'⟩)\n  · rw [← inter_univ s, ← union_compl_self { a | p a }, inter_union_distrib_left] at hx ⊢\n    cases' hx with hx hx\n    · apply ContinuousWithinAt.union\n      · exact (hf x hx).congr (fun y hy => if_pos hy.2) (if_pos hx.2)\n      · have : x ∉ closure { a | p a }ᶜ := fun h => hx' ⟨subset_closure hx.2, by\n          rwa [closure_compl] at h⟩\n        exact continuousWithinAt_of_not_mem_closure fun h =>\n          this (closure_inter_subset_inter_closure _ _ h).2\n    · apply ContinuousWithinAt.union\n      · have : x ∉ closure { a | p a } := fun h =>\n          hx' ⟨h, fun h' : x ∈ interior { a | p a } => hx.2 (interior_subset h')⟩\n        exact continuousWithinAt_of_not_mem_closure fun h =>\n          this (closure_inter_subset_inter_closure _ _ h).2\n      · exact (hg x hx).congr (fun y hy => if_neg hy.2) (if_neg hx.2)\n\n"}
{"name":"ContinuousOn.piecewise'","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\nf g : α → β\ns t : Set α\ninst✝ : (a : α) → Decidable (Membership.mem t a)\nhpf : ∀ (a : α), Membership.mem (Inter.inter s (frontier t)) a → Filter.Tendsto f (nhdsWithin a (Inter.inter s t)) (nhds (t.piecewise f g a))\nhpg : ∀ (a : α), Membership.mem (Inter.inter s (frontier t)) a → Filter.Tendsto g (nhdsWithin a (Inter.inter s (HasCompl.compl t))) (nhds (t.piecewise f g a))\nhf : ContinuousOn f (Inter.inter s t)\nhg : ContinuousOn g (Inter.inter s (HasCompl.compl t))\n⊢ ContinuousOn (t.piecewise f g) s","decl":"theorem ContinuousOn.piecewise' [∀ a, Decidable (a ∈ t)]\n    (hpf : ∀ a ∈ s ∩ frontier t, Tendsto f (𝓝[s ∩ t] a) (𝓝 (piecewise t f g a)))\n    (hpg : ∀ a ∈ s ∩ frontier t, Tendsto g (𝓝[s ∩ tᶜ] a) (𝓝 (piecewise t f g a)))\n    (hf : ContinuousOn f <| s ∩ t) (hg : ContinuousOn g <| s ∩ tᶜ) :\n    ContinuousOn (piecewise t f g) s :=\n  hf.if' hpf hpg hg\n\n"}
{"name":"ContinuousOn.if","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\nf g : α → β\ns : Set α\np : α → Prop\ninst✝ : (a : α) → Decidable (p a)\nhp : ∀ (a : α), Membership.mem (Inter.inter s (frontier (setOf fun a => p a))) a → Eq (f a) (g a)\nhf : ContinuousOn f (Inter.inter s (closure (setOf fun a => p a)))\nhg : ContinuousOn g (Inter.inter s (closure (setOf fun a => Not (p a))))\n⊢ ContinuousOn (fun a => ite (p a) (f a) (g a)) s","decl":"theorem ContinuousOn.if {p : α → Prop} [∀ a, Decidable (p a)]\n    (hp : ∀ a ∈ s ∩ frontier { a | p a }, f a = g a)\n    (hf : ContinuousOn f <| s ∩ closure { a | p a })\n    (hg : ContinuousOn g <| s ∩ closure { a | ¬p a }) :\n    ContinuousOn (fun a => if p a then f a else g a) s := by\n  apply ContinuousOn.if'\n  · rintro a ha\n    simp only [← hp a ha, ite_self]\n    apply tendsto_nhdsWithin_mono_left (inter_subset_inter_right s subset_closure)\n    exact hf a ⟨ha.1, ha.2.1⟩\n  · rintro a ha\n    simp only [hp a ha, ite_self]\n    apply tendsto_nhdsWithin_mono_left (inter_subset_inter_right s subset_closure)\n    rcases ha with ⟨has, ⟨_, ha⟩⟩\n    rw [← mem_compl_iff, ← closure_compl] at ha\n    apply hg a ⟨has, ha⟩\n  · exact hf.mono (inter_subset_inter_right s subset_closure)\n  · exact hg.mono (inter_subset_inter_right s subset_closure)\n\n"}
{"name":"ContinuousOn.piecewise","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\nf g : α → β\ns t : Set α\ninst✝ : (a : α) → Decidable (Membership.mem t a)\nht : ∀ (a : α), Membership.mem (Inter.inter s (frontier t)) a → Eq (f a) (g a)\nhf : ContinuousOn f (Inter.inter s (closure t))\nhg : ContinuousOn g (Inter.inter s (closure (HasCompl.compl t)))\n⊢ ContinuousOn (t.piecewise f g) s","decl":"theorem ContinuousOn.piecewise [∀ a, Decidable (a ∈ t)]\n    (ht : ∀ a ∈ s ∩ frontier t, f a = g a) (hf : ContinuousOn f <| s ∩ closure t)\n    (hg : ContinuousOn g <| s ∩ closure tᶜ) : ContinuousOn (piecewise t f g) s :=\n  hf.if ht hg\n\n"}
{"name":"continuous_if'","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\nf g : α → β\np : α → Prop\ninst✝ : (a : α) → Decidable (p a)\nhpf : ∀ (a : α), Membership.mem (frontier (setOf fun x => p x)) a → Filter.Tendsto f (nhdsWithin a (setOf fun x => p x)) (nhds (ite (p a) (f a) (g a)))\nhpg : ∀ (a : α), Membership.mem (frontier (setOf fun x => p x)) a → Filter.Tendsto g (nhdsWithin a (setOf fun x => Not (p x))) (nhds (ite (p a) (f a) (g a)))\nhf : ContinuousOn f (setOf fun x => p x)\nhg : ContinuousOn g (setOf fun x => Not (p x))\n⊢ Continuous fun a => ite (p a) (f a) (g a)","decl":"theorem continuous_if' {p : α → Prop} [∀ a, Decidable (p a)]\n    (hpf : ∀ a ∈ frontier { x | p x }, Tendsto f (𝓝[{ x | p x }] a) (𝓝 <| ite (p a) (f a) (g a)))\n    (hpg : ∀ a ∈ frontier { x | p x }, Tendsto g (𝓝[{ x | ¬p x }] a) (𝓝 <| ite (p a) (f a) (g a)))\n    (hf : ContinuousOn f { x | p x }) (hg : ContinuousOn g { x | ¬p x }) :\n    Continuous fun a => ite (p a) (f a) (g a) := by\n  rw [continuous_iff_continuousOn_univ]\n  apply ContinuousOn.if' <;> simp [*] <;> assumption\n\n"}
{"name":"continuous_if","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\nf g : α → β\np : α → Prop\ninst✝ : (a : α) → Decidable (p a)\nhp : ∀ (a : α), Membership.mem (frontier (setOf fun x => p x)) a → Eq (f a) (g a)\nhf : ContinuousOn f (closure (setOf fun x => p x))\nhg : ContinuousOn g (closure (setOf fun x => Not (p x)))\n⊢ Continuous fun a => ite (p a) (f a) (g a)","decl":"theorem continuous_if {p : α → Prop} [∀ a, Decidable (p a)]\n    (hp : ∀ a ∈ frontier { x | p x }, f a = g a) (hf : ContinuousOn f (closure { x | p x }))\n    (hg : ContinuousOn g (closure { x | ¬p x })) :\n    Continuous fun a => if p a then f a else g a := by\n  rw [continuous_iff_continuousOn_univ]\n  apply ContinuousOn.if <;> simpa\n\n"}
{"name":"Continuous.if","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\nf g : α → β\np : α → Prop\ninst✝ : (a : α) → Decidable (p a)\nhp : ∀ (a : α), Membership.mem (frontier (setOf fun x => p x)) a → Eq (f a) (g a)\nhf : Continuous f\nhg : Continuous g\n⊢ Continuous fun a => ite (p a) (f a) (g a)","decl":"theorem Continuous.if {p : α → Prop} [∀ a, Decidable (p a)]\n    (hp : ∀ a ∈ frontier { x | p x }, f a = g a) (hf : Continuous f) (hg : Continuous g) :\n    Continuous fun a => if p a then f a else g a :=\n  continuous_if hp hf.continuousOn hg.continuousOn\n\n"}
{"name":"continuous_if_const","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\nf g : α → β\np : Prop\ninst✝ : Decidable p\nhf : p → Continuous f\nhg : Not p → Continuous g\n⊢ Continuous fun a => ite p (f a) (g a)","decl":"theorem continuous_if_const (p : Prop) [Decidable p] (hf : p → Continuous f)\n    (hg : ¬p → Continuous g) : Continuous fun a => if p then f a else g a := by\n  split_ifs with h\n  exacts [hf h, hg h]\n\n"}
{"name":"Continuous.if_const","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\nf g : α → β\np : Prop\ninst✝ : Decidable p\nhf : Continuous f\nhg : Continuous g\n⊢ Continuous fun a => ite p (f a) (g a)","decl":"theorem Continuous.if_const (p : Prop) [Decidable p] (hf : Continuous f)\n    (hg : Continuous g) : Continuous fun a => if p then f a else g a :=\n  continuous_if_const p (fun _ => hf) fun _ => hg\n\n"}
{"name":"continuous_piecewise","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\nf g : α → β\ns : Set α\ninst✝ : (a : α) → Decidable (Membership.mem s a)\nhs : ∀ (a : α), Membership.mem (frontier s) a → Eq (f a) (g a)\nhf : ContinuousOn f (closure s)\nhg : ContinuousOn g (closure (HasCompl.compl s))\n⊢ Continuous (s.piecewise f g)","decl":"theorem continuous_piecewise [∀ a, Decidable (a ∈ s)]\n    (hs : ∀ a ∈ frontier s, f a = g a) (hf : ContinuousOn f (closure s))\n    (hg : ContinuousOn g (closure sᶜ)) : Continuous (piecewise s f g) :=\n  continuous_if hs hf hg\n\n"}
{"name":"Continuous.piecewise","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\nf g : α → β\ns : Set α\ninst✝ : (a : α) → Decidable (Membership.mem s a)\nhs : ∀ (a : α), Membership.mem (frontier s) a → Eq (f a) (g a)\nhf : Continuous f\nhg : Continuous g\n⊢ Continuous (s.piecewise f g)","decl":"theorem Continuous.piecewise [∀ a, Decidable (a ∈ s)]\n    (hs : ∀ a ∈ frontier s, f a = g a) (hf : Continuous f) (hg : Continuous g) :\n    Continuous (piecewise s f g) :=\n  hf.if hs hg\n\n"}
{"name":"IsOpen.ite'","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\ns s' t : Set α\nhs : IsOpen s\nhs' : IsOpen s'\nht : ∀ (x : α), Membership.mem (frontier t) x → Iff (Membership.mem s x) (Membership.mem s' x)\n⊢ IsOpen (t.ite s s')","decl":"theorem IsOpen.ite' (hs : IsOpen s) (hs' : IsOpen s')\n    (ht : ∀ x ∈ frontier t, x ∈ s ↔ x ∈ s') : IsOpen (t.ite s s') := by\n  classical\n    simp only [isOpen_iff_continuous_mem, Set.ite] at *\n    convert\n      continuous_piecewise (fun x hx => propext (ht x hx)) hs.continuousOn hs'.continuousOn using 2\n    rename_i x\n    by_cases hx : x ∈ t <;> simp [hx]\n\n"}
{"name":"IsOpen.ite","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\ns s' t : Set α\nhs : IsOpen s\nhs' : IsOpen s'\nht : Eq (Inter.inter s (frontier t)) (Inter.inter s' (frontier t))\n⊢ IsOpen (t.ite s s')","decl":"theorem IsOpen.ite (hs : IsOpen s) (hs' : IsOpen s')\n    (ht : s ∩ frontier t = s' ∩ frontier t) : IsOpen (t.ite s s') :=\n  hs.ite' hs' fun x hx => by simpa [hx] using Set.ext_iff.1 ht x\n\n"}
{"name":"ite_inter_closure_eq_of_inter_frontier_eq","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\ns s' t : Set α\nht : Eq (Inter.inter s (frontier t)) (Inter.inter s' (frontier t))\n⊢ Eq (Inter.inter (t.ite s s') (closure t)) (Inter.inter s (closure t))","decl":"theorem ite_inter_closure_eq_of_inter_frontier_eq\n    (ht : s ∩ frontier t = s' ∩ frontier t) : t.ite s s' ∩ closure t = s ∩ closure t := by\n  rw [closure_eq_self_union_frontier, inter_union_distrib_left, inter_union_distrib_left,\n    ite_inter_self, ite_inter_of_inter_eq _ ht]\n\n"}
{"name":"ite_inter_closure_compl_eq_of_inter_frontier_eq","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\ns s' t : Set α\nht : Eq (Inter.inter s (frontier t)) (Inter.inter s' (frontier t))\n⊢ Eq (Inter.inter (t.ite s s') (closure (HasCompl.compl t))) (Inter.inter s' (closure (HasCompl.compl t)))","decl":"theorem ite_inter_closure_compl_eq_of_inter_frontier_eq\n    (ht : s ∩ frontier t = s' ∩ frontier t) : t.ite s s' ∩ closure tᶜ = s' ∩ closure tᶜ := by\n  rw [← ite_compl, ite_inter_closure_eq_of_inter_frontier_eq]\n  rwa [frontier_compl, eq_comm]\n\n"}
{"name":"continuousOn_piecewise_ite'","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\nf g : α → β\ns s' t : Set α\ninst✝ : (x : α) → Decidable (Membership.mem t x)\nh : ContinuousOn f (Inter.inter s (closure t))\nh' : ContinuousOn g (Inter.inter s' (closure (HasCompl.compl t)))\nH : Eq (Inter.inter s (frontier t)) (Inter.inter s' (frontier t))\nHeq : Set.EqOn f g (Inter.inter s (frontier t))\n⊢ ContinuousOn (t.piecewise f g) (t.ite s s')","decl":"theorem continuousOn_piecewise_ite' [∀ x, Decidable (x ∈ t)]\n    (h : ContinuousOn f (s ∩ closure t)) (h' : ContinuousOn g (s' ∩ closure tᶜ))\n    (H : s ∩ frontier t = s' ∩ frontier t) (Heq : EqOn f g (s ∩ frontier t)) :\n    ContinuousOn (t.piecewise f g) (t.ite s s') := by\n  apply ContinuousOn.piecewise\n  · rwa [ite_inter_of_inter_eq _ H]\n  · rwa [ite_inter_closure_eq_of_inter_frontier_eq H]\n  · rwa [ite_inter_closure_compl_eq_of_inter_frontier_eq H]\n\n"}
{"name":"continuousOn_piecewise_ite","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : TopologicalSpace α\ninst✝¹ : TopologicalSpace β\nf g : α → β\ns s' t : Set α\ninst✝ : (x : α) → Decidable (Membership.mem t x)\nh : ContinuousOn f s\nh' : ContinuousOn g s'\nH : Eq (Inter.inter s (frontier t)) (Inter.inter s' (frontier t))\nHeq : Set.EqOn f g (Inter.inter s (frontier t))\n⊢ ContinuousOn (t.piecewise f g) (t.ite s s')","decl":"theorem continuousOn_piecewise_ite [∀ x, Decidable (x ∈ t)]\n    (h : ContinuousOn f s) (h' : ContinuousOn g s') (H : s ∩ frontier t = s' ∩ frontier t)\n    (Heq : EqOn f g (s ∩ frontier t)) : ContinuousOn (t.piecewise f g) (t.ite s s') :=\n  continuousOn_piecewise_ite' (h.mono inter_subset_left) (h'.mono inter_subset_left) H Heq\n\n\n"}
{"name":"ContinuousOn.union_continuousAt","module":"Mathlib.Topology.ContinuousOn","initialProofState":"X : Type u_5\nY : Type u_6\ninst✝¹ : TopologicalSpace X\ninst✝ : TopologicalSpace Y\ns t : Set X\nf : X → Y\ns_op : IsOpen s\nhs : ContinuousOn f s\nht : ∀ (x : X), Membership.mem t x → ContinuousAt f x\n⊢ ContinuousOn f (Union.union s t)","decl":"/-- If `f` is continuous on an open set `s` and continuous at each point of another\nset `t` then `f` is continuous on `s ∪ t`. -/\nlemma ContinuousOn.union_continuousAt\n    {X Y : Type*} [TopologicalSpace X] [TopologicalSpace Y]\n    {s t : Set X} {f : X → Y} (s_op : IsOpen s)\n    (hs : ContinuousOn f s) (ht : ∀ x ∈ t, ContinuousAt f x) :\n    ContinuousOn f (s ∪ t) :=\n  continuousOn_of_forall_continuousAt <| fun _ hx => hx.elim\n  (fun h => ContinuousWithinAt.continuousAt (continuousWithinAt hs h) <| IsOpen.mem_nhds s_op h)\n  (ht _)\n\n"}
{"name":"ContinuousOn.tendsto_nhdsSet","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns s' : Set α\nt : Set β\nhf : ContinuousOn f s'\nhs' : Membership.mem (nhdsSet s) s'\nhst : Set.MapsTo f s t\n⊢ Filter.Tendsto f (nhdsSet s) (nhdsSet t)","decl":"/-- If `f` is continuous on some neighbourhood `s'` of `s` and `f` maps `s` to `t`,\nthe preimage of a set neighbourhood of `t` is a set neighbourhood of `s`. -/\n-- See `Continuous.tendsto_nhdsSet` for a special case.\ntheorem ContinuousOn.tendsto_nhdsSet {f : α → β} {s s' : Set α} {t : Set β}\n    (hf : ContinuousOn f s') (hs' : s' ∈ 𝓝ˢ s) (hst : MapsTo f s t) : Tendsto f (𝓝ˢ s) (𝓝ˢ t) := by\n  obtain ⟨V, hV, hsV, hVs'⟩ := mem_nhdsSet_iff_exists.mp hs'\n  refine ((hasBasis_nhdsSet s).tendsto_iff (hasBasis_nhdsSet t)).mpr fun U hU ↦\n    ⟨V ∩ f ⁻¹' U, ?_, fun _ ↦ ?_⟩\n  · exact ⟨(hf.mono hVs').isOpen_inter_preimage hV hU.1,\n      subset_inter hsV (hst.mono Subset.rfl hU.2)⟩\n  · intro h\n    rw [← mem_preimage]\n    exact mem_of_mem_inter_right h\n\n"}
{"name":"Continuous.tendsto_nhdsSet","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\ns : Set α\nf : α → β\nt : Set β\nhf : Continuous f\nhst : Set.MapsTo f s t\n⊢ Filter.Tendsto f (nhdsSet s) (nhdsSet t)","decl":"/-- Preimage of a set neighborhood of `t` under a continuous map `f` is a set neighborhood of `s`\nprovided that `f` maps `s` to `t`. -/\ntheorem Continuous.tendsto_nhdsSet {f : α → β} {t : Set β} (hf : Continuous f)\n    (hst : MapsTo f s t) : Tendsto f (𝓝ˢ s) (𝓝ˢ t) :=\n  hf.continuousOn.tendsto_nhdsSet univ_mem hst\n\n"}
{"name":"Continuous.tendsto_nhdsSet_nhds","module":"Mathlib.Topology.ContinuousOn","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\ns : Set α\nb : β\nf : α → β\nh : Continuous f\nh' : Set.EqOn f (fun x => b) s\n⊢ Filter.Tendsto f (nhdsSet s) (nhds b)","decl":"lemma Continuous.tendsto_nhdsSet_nhds\n    {b : β} {f : α → β} (h : Continuous f) (h' : EqOn f (fun _ ↦ b) s) :\n    Tendsto f (𝓝ˢ s) (𝓝 b) := by\n  rw [← nhdsSet_singleton]\n  exact h.tendsto_nhdsSet h'\n\n"}
