{"name":"CategoryTheory.regularTopology.mem_sieves_of_hasEffectiveEpi","module":"Mathlib.CategoryTheory.Sites.Coherent.RegularTopology","initialProofState":"C : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_2, u_1} C\ninst✝ : CategoryTheory.Preregular C\nX : C\nS : CategoryTheory.Sieve X\na✝ : Exists fun Y => Exists fun π => And (CategoryTheory.EffectiveEpi π) (S.arrows π)\n⊢ Membership.mem ((CategoryTheory.regularTopology C) X) S","decl":"/--\nFor a preregular category, any sieve that contains an `EffectiveEpi` is a covering sieve of the\nregular topology.\nNote: This is one direction of `mem_sieves_iff_hasEffectiveEpi`, but is needed for the proof.\n-/\ntheorem mem_sieves_of_hasEffectiveEpi (S : Sieve X) :\n    (∃ (Y : C) (π : Y ⟶ X), EffectiveEpi π ∧ S.arrows π) → (S ∈ (regularTopology C) X) := by\n  rintro ⟨Y, π, h⟩\n  have h_le : Sieve.generate (Presieve.ofArrows (fun () ↦ Y) (fun _ ↦ π)) ≤ S := by\n    rw [Sieve.generate_le_iff (Presieve.ofArrows _ _) S]\n    apply Presieve.le_of_factorsThru_sieve (Presieve.ofArrows _ _) S _\n    intro W g f\n    refine ⟨W, 𝟙 W, ?_⟩\n    cases f\n    exact ⟨π, ⟨h.2, Category.id_comp π⟩⟩\n  apply Coverage.saturate_of_superset (regularCoverage C) h_le\n  exact Coverage.Saturate.of X _ ⟨Y, π, rfl, h.1⟩\n\n"}
{"name":"CategoryTheory.regularTopology.instEffectiveEpiComp","module":"Mathlib.CategoryTheory.Sites.Coherent.RegularTopology","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\nX Y Y' : C\nπ : Quiver.Hom Y X\ninst✝¹ : CategoryTheory.EffectiveEpi π\nπ' : Quiver.Hom Y' Y\ninst✝ : CategoryTheory.EffectiveEpi π'\n⊢ CategoryTheory.EffectiveEpi (CategoryTheory.CategoryStruct.comp π' π)","decl":"/-- Effective epis in a preregular category are stable under composition. -/\ninstance {Y Y' : C} (π : Y ⟶ X) [EffectiveEpi π]\n    (π' : Y' ⟶ Y) [EffectiveEpi π'] : EffectiveEpi (π' ≫ π) := by\n  rw [effectiveEpi_iff_effectiveEpiFamily, ← Sieve.effectiveEpimorphic_family]\n  suffices h₂ : (Sieve.generate (Presieve.ofArrows _ _)) ∈ (regularTopology C) X by\n    change Nonempty _\n    rw [← Sieve.forallYonedaIsSheaf_iff_colimit]\n    exact fun W => regularTopology.isSheaf_yoneda_obj W _ h₂\n  apply Coverage.Saturate.transitive X (Sieve.generate (Presieve.ofArrows (fun () ↦ Y)\n      (fun () ↦ π)))\n  · apply Coverage.Saturate.of\n    use Y, π\n  · intro V f ⟨Y₁, h, g, ⟨hY, hf⟩⟩\n    rw [← hf, Sieve.pullback_comp]\n    apply (regularTopology C).pullback_stable'\n    apply regularTopology.mem_sieves_of_hasEffectiveEpi\n    cases hY\n    exact ⟨Y', π', inferInstance, Y', (𝟙 _), π' ≫ π, Presieve.ofArrows.mk (), (by simp)⟩\n\n"}
{"name":"CategoryTheory.regularTopology.mem_sieves_iff_hasEffectiveEpi","module":"Mathlib.CategoryTheory.Sites.Coherent.RegularTopology","initialProofState":"C : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_2, u_1} C\ninst✝ : CategoryTheory.Preregular C\nX : C\nS : CategoryTheory.Sieve X\n⊢ Iff (Membership.mem ((CategoryTheory.regularTopology C) X) S) (Exists fun Y => Exists fun π => And (CategoryTheory.EffectiveEpi π) (S.arrows π))","decl":"/-- A sieve is a cover for the regular topology if and only if it contains an `EffectiveEpi`. -/\ntheorem mem_sieves_iff_hasEffectiveEpi (S : Sieve X) :\n    (S ∈ (regularTopology C) X) ↔\n    ∃ (Y : C) (π : Y ⟶ X), EffectiveEpi π ∧ (S.arrows π) := by\n  constructor\n  · intro h\n    induction h with\n    | of Y T hS =>\n      rcases hS with ⟨Y', π, h'⟩\n      refine ⟨Y', π, h'.2, ?_⟩\n      rcases h' with ⟨rfl, _⟩\n      exact ⟨Y', 𝟙 Y', π, Presieve.ofArrows.mk (), (by simp)⟩\n    | top Y => exact ⟨Y, (𝟙 Y), inferInstance, by simp only [Sieve.top_apply, forall_const]⟩\n    | transitive Y R S _ _ a b =>\n      rcases a with ⟨Y₁, π, ⟨h₁,h₂⟩⟩\n      choose Y' π' _ H using b h₂\n      exact ⟨Y', π' ≫ π, inferInstance, (by simpa using H)⟩\n  · exact regularTopology.mem_sieves_of_hasEffectiveEpi S\n\n"}
