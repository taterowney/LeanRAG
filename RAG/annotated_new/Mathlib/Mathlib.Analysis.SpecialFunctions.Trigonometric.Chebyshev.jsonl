{"name":"Polynomial.Chebyshev.complex_ofReal_eval_T","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Chebyshev","initialProofState":"x : Real\nn : Int\n⊢ Eq (↑(Polynomial.eval x (Polynomial.Chebyshev.T Real n))) (Polynomial.eval (↑x) (Polynomial.Chebyshev.T Complex n))","decl":"@[simp, norm_cast]\ntheorem complex_ofReal_eval_T : ∀ (x : ℝ) n, (((T ℝ n).eval x : ℝ) : ℂ) = (T ℂ n).eval (x : ℂ) :=\n  @algebraMap_eval_T ℝ ℂ _ _ _\n\n-- Porting note: added type ascriptions to the statement\n"}
{"name":"Polynomial.Chebyshev.complex_ofReal_eval_U","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Chebyshev","initialProofState":"x : Real\nn : Int\n⊢ Eq (↑(Polynomial.eval x (Polynomial.Chebyshev.U Real n))) (Polynomial.eval (↑x) (Polynomial.Chebyshev.U Complex n))","decl":"@[simp, norm_cast]\ntheorem complex_ofReal_eval_U : ∀ (x : ℝ) n, (((U ℝ n).eval x : ℝ) : ℂ) = (U ℂ n).eval (x : ℂ) :=\n  @algebraMap_eval_U ℝ ℂ _ _ _\n\n"}
{"name":"Polynomial.Chebyshev.complex_ofReal_eval_C","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Chebyshev","initialProofState":"x : Real\nn : Int\n⊢ Eq (↑(Polynomial.eval x (Polynomial.Chebyshev.C Real n))) (Polynomial.eval (↑x) (Polynomial.Chebyshev.C Complex n))","decl":"@[simp, norm_cast]\ntheorem complex_ofReal_eval_C : ∀ (x : ℝ) n, (((C ℝ n).eval x : ℝ) : ℂ) = (C ℂ n).eval (x : ℂ) :=\n  @algebraMap_eval_C ℝ ℂ _ _ _\n\n"}
{"name":"Polynomial.Chebyshev.complex_ofReal_eval_S","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Chebyshev","initialProofState":"x : Real\nn : Int\n⊢ Eq (↑(Polynomial.eval x (Polynomial.Chebyshev.S Real n))) (Polynomial.eval (↑x) (Polynomial.Chebyshev.S Complex n))","decl":"@[simp, norm_cast]\ntheorem complex_ofReal_eval_S : ∀ (x : ℝ) n, (((S ℝ n).eval x : ℝ) : ℂ) = (S ℂ n).eval (x : ℂ) :=\n  @algebraMap_eval_S ℝ ℂ _ _ _\n\n"}
{"name":"Polynomial.Chebyshev.T_complex_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Chebyshev","initialProofState":"θ : Complex\nn : Int\n⊢ Eq (Polynomial.eval (Complex.cos θ) (Polynomial.Chebyshev.T Complex n)) (Complex.cos (HMul.hMul (↑n) θ))","decl":"/-- The `n`-th Chebyshev polynomial of the first kind evaluates on `cos θ` to the\nvalue `cos (n * θ)`. -/\n@[simp]\ntheorem T_complex_cos (n : ℤ) : (T ℂ n).eval (cos θ) = cos (n * θ) := by\n  induction n using Polynomial.Chebyshev.induct with\n  | zero => simp\n  | one => simp\n  | add_two n ih1 ih2 =>\n    simp only [T_add_two, eval_sub, eval_mul, eval_X, eval_ofNat, ih1, ih2, sub_eq_iff_eq_add,\n      cos_add_cos]\n    push_cast\n    ring_nf\n  | neg_add_one n ih1 ih2 =>\n    simp only [T_sub_one, eval_sub, eval_mul, eval_X, eval_ofNat, ih1, ih2, sub_eq_iff_eq_add',\n      cos_add_cos]\n    push_cast\n    ring_nf\n\n"}
{"name":"Polynomial.Chebyshev.U_complex_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Chebyshev","initialProofState":"θ : Complex\nn : Int\n⊢ Eq (HMul.hMul (Polynomial.eval (Complex.cos θ) (Polynomial.Chebyshev.U Complex n)) (Complex.sin θ)) (Complex.sin (HMul.hMul (HAdd.hAdd (↑n) 1) θ))","decl":"/-- The `n`-th Chebyshev polynomial of the second kind evaluates on `cos θ` to the\nvalue `sin ((n + 1) * θ) / sin θ`. -/\n@[simp]\ntheorem U_complex_cos (n : ℤ) : (U ℂ n).eval (cos θ) * sin θ = sin ((n + 1) * θ) := by\n  induction n using Polynomial.Chebyshev.induct with\n  | zero => simp\n  | one => simp [one_add_one_eq_two, sin_two_mul]; ring\n  | add_two n ih1 ih2 =>\n    simp only [U_add_two, add_sub_cancel_right, eval_sub, eval_mul, eval_X, eval_ofNat, sub_mul,\n      mul_assoc, ih1, ih2, sub_eq_iff_eq_add, sin_add_sin]\n    push_cast\n    ring_nf\n  | neg_add_one n ih1 ih2 =>\n    simp only [U_sub_one, add_sub_cancel_right, eval_sub, eval_mul, eval_X, eval_ofNat, sub_mul,\n      mul_assoc, ih1, ih2, sub_eq_iff_eq_add', sin_add_sin]\n    push_cast\n    ring_nf\n\n"}
{"name":"Polynomial.Chebyshev.C_two_mul_complex_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Chebyshev","initialProofState":"θ : Complex\nn : Int\n⊢ Eq (Polynomial.eval (HMul.hMul 2 (Complex.cos θ)) (Polynomial.Chebyshev.C Complex n)) (HMul.hMul 2 (Complex.cos (HMul.hMul (↑n) θ)))","decl":"/-- The `n`-th rescaled Chebyshev polynomial of the first kind (Vieta–Lucas polynomial) evaluates on\n`2 * cos θ` to the value `2 * cos (n * θ)`. -/\n@[simp]\ntheorem C_two_mul_complex_cos (n : ℤ) : (C ℂ n).eval (2 * cos θ) = 2 * cos (n * θ) := by\n  simp [C_eq_two_mul_T_comp_half_mul_X]\n\n"}
{"name":"Polynomial.Chebyshev.S_two_mul_complex_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Chebyshev","initialProofState":"θ : Complex\nn : Int\n⊢ Eq (HMul.hMul (Polynomial.eval (HMul.hMul 2 (Complex.cos θ)) (Polynomial.Chebyshev.S Complex n)) (Complex.sin θ)) (Complex.sin (HMul.hMul (HAdd.hAdd (↑n) 1) θ))","decl":"/-- The `n`-th rescaled Chebyshev polynomial of the second kind (Vieta–Fibonacci polynomial)\nevaluates on `2 * cos θ` to the value `sin ((n + 1) * θ) / sin θ`. -/\n@[simp]\ntheorem S_two_mul_complex_cos (n : ℤ) : (S ℂ n).eval (2 * cos θ) * sin θ = sin ((n + 1) * θ) := by\n  simp [S_eq_U_comp_half_mul_X]\n\n"}
{"name":"Polynomial.Chebyshev.T_complex_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Chebyshev","initialProofState":"θ : Complex\nn : Int\n⊢ Eq (Polynomial.eval (Complex.cosh θ) (Polynomial.Chebyshev.T Complex n)) (Complex.cosh (HMul.hMul (↑n) θ))","decl":"/-- The `n`-th Chebyshev polynomial of the first kind evaluates on `cosh θ` to the\nvalue `cosh (n * θ)`. -/\n@[simp]\ntheorem T_complex_cosh (n : ℤ) : (T ℂ n).eval (cosh θ) = cosh (n * θ) := calc\n  (T ℂ n).eval (cosh θ)\n  _ = (T ℂ n).eval (cos (θ * I))        := by rw [cos_mul_I]\n  _ = cos (n * (θ * I))                 := T_complex_cos (θ * I) n\n  _ = cos (n * θ * I)                   := by rw [mul_assoc]\n  _ = cosh (n * θ)                      := cos_mul_I (n * θ)\n\n"}
{"name":"Polynomial.Chebyshev.U_complex_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Chebyshev","initialProofState":"θ : Complex\nn : Int\n⊢ Eq (HMul.hMul (Polynomial.eval (Complex.cosh θ) (Polynomial.Chebyshev.U Complex n)) (Complex.sinh θ)) (Complex.sinh (HMul.hMul (HAdd.hAdd (↑n) 1) θ))","decl":"/-- The `n`-th Chebyshev polynomial of the second kind evaluates on `cosh θ` to the\nvalue `sinh ((n + 1) * θ) / sinh θ`. -/\n@[simp]\ntheorem U_complex_cosh (n : ℤ) : (U ℂ n).eval (cosh θ) * sinh θ = sinh ((n + 1) * θ) := calc\n  (U ℂ n).eval (cosh θ) * sinh θ\n  _ = (U ℂ n).eval (cos (θ * I)) * sin (θ * I) * (-I)   := by simp [cos_mul_I, sin_mul_I, mul_assoc]\n  _ = sin ((n + 1) * (θ * I)) * (-I)                    := by rw [U_complex_cos]\n  _ = sin ((n + 1) * θ * I) * (-I)                      := by rw [mul_assoc]\n  _ = sinh ((n + 1) * θ)                                := by\n    rw [sin_mul_I ((n + 1) * θ), mul_assoc, mul_neg, I_mul_I, neg_neg, mul_one]\n\n"}
{"name":"Polynomial.Chebyshev.C_two_mul_complex_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Chebyshev","initialProofState":"θ : Complex\nn : Int\n⊢ Eq (Polynomial.eval (HMul.hMul 2 (Complex.cosh θ)) (Polynomial.Chebyshev.C Complex n)) (HMul.hMul 2 (Complex.cosh (HMul.hMul (↑n) θ)))","decl":"/-- The `n`-th rescaled Chebyshev polynomial of the first kind (Vieta–Lucas polynomial) evaluates on\n`2 * cosh θ` to the value `2 * cosh (n * θ)`. -/\n@[simp]\ntheorem C_two_mul_complex_cosh (n : ℤ) : (C ℂ n).eval (2 * cosh θ) = 2 * cosh (n * θ) := by\n  simp [C_eq_two_mul_T_comp_half_mul_X]\n\n"}
{"name":"Polynomial.Chebyshev.S_two_mul_complex_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Chebyshev","initialProofState":"θ : Complex\nn : Int\n⊢ Eq (HMul.hMul (Polynomial.eval (HMul.hMul 2 (Complex.cosh θ)) (Polynomial.Chebyshev.S Complex n)) (Complex.sinh θ)) (Complex.sinh (HMul.hMul (HAdd.hAdd (↑n) 1) θ))","decl":"/-- The `n`-th rescaled Chebyshev polynomial of the second kind (Vieta–Fibonacci polynomial)\nevaluates on `2 * cosh θ` to the value `sinh ((n + 1) * θ) / sinh θ`. -/\n@[simp]\ntheorem S_two_mul_complex_cosh (n : ℤ) : (S ℂ n).eval (2 * cosh θ) * sinh θ =\n    sinh ((n + 1) * θ) := by\n  simp [S_eq_U_comp_half_mul_X]\n\n"}
{"name":"Polynomial.Chebyshev.T_real_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Chebyshev","initialProofState":"θ : Real\nn : Int\n⊢ Eq (Polynomial.eval (Real.cos θ) (Polynomial.Chebyshev.T Real n)) (Real.cos (HMul.hMul (↑n) θ))","decl":"/-- The `n`-th Chebyshev polynomial of the first kind evaluates on `cos θ` to the\nvalue `cos (n * θ)`. -/\n@[simp]\ntheorem T_real_cos : (T ℝ n).eval (cos θ) = cos (n * θ) := mod_cast T_complex_cos θ n\n\n"}
{"name":"Polynomial.Chebyshev.U_real_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Chebyshev","initialProofState":"θ : Real\nn : Int\n⊢ Eq (HMul.hMul (Polynomial.eval (Real.cos θ) (Polynomial.Chebyshev.U Real n)) (Real.sin θ)) (Real.sin (HMul.hMul (HAdd.hAdd (↑n) 1) θ))","decl":"/-- The `n`-th Chebyshev polynomial of the second kind evaluates on `cos θ` to the\nvalue `sin ((n + 1) * θ) / sin θ`. -/\n@[simp]\ntheorem U_real_cos : (U ℝ n).eval (cos θ) * sin θ = sin ((n + 1) * θ) :=\n  mod_cast U_complex_cos θ n\n\n"}
{"name":"Polynomial.Chebyshev.C_two_mul_real_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Chebyshev","initialProofState":"θ : Real\nn : Int\n⊢ Eq (Polynomial.eval (HMul.hMul 2 (Real.cos θ)) (Polynomial.Chebyshev.C Real n)) (HMul.hMul 2 (Real.cos (HMul.hMul (↑n) θ)))","decl":"/-- The `n`-th rescaled Chebyshev polynomial of the first kind (Vieta–Lucas polynomial) evaluates on\n`2 * cos θ` to the value `2 * cos (n * θ)`. -/\n@[simp]\ntheorem C_two_mul_real_cos : (C ℝ n).eval (2 * cos θ) = 2 * cos (n * θ) :=\n  mod_cast C_two_mul_complex_cos θ n\n\n"}
{"name":"Polynomial.Chebyshev.S_two_mul_real_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Chebyshev","initialProofState":"θ : Real\nn : Int\n⊢ Eq (HMul.hMul (Polynomial.eval (HMul.hMul 2 (Real.cos θ)) (Polynomial.Chebyshev.S Real n)) (Real.sin θ)) (Real.sin (HMul.hMul (HAdd.hAdd (↑n) 1) θ))","decl":"/-- The `n`-th rescaled Chebyshev polynomial of the second kind (Vieta–Fibonacci polynomial)\nevaluates on `2 * cos θ` to the value `sin ((n + 1) * θ) / sin θ`. -/\n@[simp]\ntheorem S_two_mul_real_cos : (S ℝ n).eval (2 * cos θ) * sin θ = sin ((n + 1) * θ) :=\n  mod_cast S_two_mul_complex_cos θ n\n\n"}
{"name":"Polynomial.Chebyshev.T_real_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Chebyshev","initialProofState":"θ : Real\nn : Int\n⊢ Eq (Polynomial.eval (Real.cosh θ) (Polynomial.Chebyshev.T Real n)) (Real.cosh (HMul.hMul (↑n) θ))","decl":"/-- The `n`-th Chebyshev polynomial of the first kind evaluates on `cosh θ` to the\nvalue `cosh (n * θ)`. -/\n@[simp]\ntheorem T_real_cosh (n : ℤ) : (T ℝ n).eval (cosh θ) = cosh (n * θ) := mod_cast T_complex_cosh θ n\n\n"}
{"name":"Polynomial.Chebyshev.U_real_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Chebyshev","initialProofState":"θ : Real\nn : Int\n⊢ Eq (HMul.hMul (Polynomial.eval (Real.cosh θ) (Polynomial.Chebyshev.U Real n)) (Real.sinh θ)) (Real.sinh (HMul.hMul (HAdd.hAdd (↑n) 1) θ))","decl":"/-- The `n`-th Chebyshev polynomial of the second kind evaluates on `cosh θ` to the\nvalue `sinh ((n + 1) * θ) / sinh θ`. -/\n@[simp]\ntheorem U_real_cosh (n : ℤ) : (U ℝ n).eval (cosh θ) * sinh θ = sinh ((n + 1) * θ) :=\n  mod_cast U_complex_cosh θ n\n\n"}
{"name":"Polynomial.Chebyshev.C_two_mul_real_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Chebyshev","initialProofState":"θ : Real\nn : Int\n⊢ Eq (Polynomial.eval (HMul.hMul 2 (Real.cosh θ)) (Polynomial.Chebyshev.C Real n)) (HMul.hMul 2 (Real.cosh (HMul.hMul (↑n) θ)))","decl":"/-- The `n`-th rescaled Chebyshev polynomial of the first kind (Vieta–Lucas polynomial) evaluates on\n`2 * cosh θ` to the value `2 * cosh (n * θ)`. -/\n@[simp]\ntheorem C_two_mul_real_cosh (n : ℤ) : (C ℝ n).eval (2 * cosh θ) = 2 * cosh (n * θ) :=\n  mod_cast C_two_mul_complex_cosh θ n\n\n"}
{"name":"Polynomial.Chebyshev.S_two_mul_real_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Chebyshev","initialProofState":"θ : Real\nn : Int\n⊢ Eq (HMul.hMul (Polynomial.eval (HMul.hMul 2 (Real.cosh θ)) (Polynomial.Chebyshev.S Real n)) (Real.sinh θ)) (Real.sinh (HMul.hMul (HAdd.hAdd (↑n) 1) θ))","decl":"/-- The `n`-th rescaled Chebyshev polynomial of the second kind (Vieta–Fibonacci polynomial)\nevaluates on `2 * cosh θ` to the value `sinh ((n + 1) * θ) / sinh θ`. -/\n@[simp]\ntheorem S_two_mul_real_cosh (n : ℤ) : (S ℝ n).eval (2 * cosh θ) * sinh θ = sinh ((n + 1) * θ) :=\n  mod_cast S_two_mul_complex_cosh θ n\n\n"}
