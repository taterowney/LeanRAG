{"name":"PSigma.Lex.denselyOrdered","module":"Mathlib.Data.PSigma.Order","initialProofState":"ι : Type u_1\nα : ι → Type u_2\ninst✝⁴ : Preorder ι\ninst✝³ : DenselyOrdered ι\ninst✝² : ∀ (i : ι), Nonempty (α i)\ninst✝¹ : (i : ι) → Preorder (α i)\ninst✝ : ∀ (i : ι), DenselyOrdered (α i)\n⊢ DenselyOrdered (Lex (PSigma fun i => α i))","decl":"instance denselyOrdered [Preorder ι] [DenselyOrdered ι] [∀ i, Nonempty (α i)] [∀ i, Preorder (α i)]\n    [∀ i, DenselyOrdered (α i)] : DenselyOrdered (Σₗ' i, α i) :=\n  ⟨by\n    rintro ⟨i, a⟩ ⟨j, b⟩ (⟨_, _, h⟩ | @⟨_, _, b, h⟩)\n    · obtain ⟨k, hi, hj⟩ := exists_between h\n      obtain ⟨c⟩ : Nonempty (α k) := inferInstance\n      exact ⟨⟨k, c⟩, left _ _ hi, left _ _ hj⟩\n    · obtain ⟨c, ha, hb⟩ := exists_between h\n      exact ⟨⟨i, c⟩, right _ ha, right _ hb⟩⟩\n\n"}
{"name":"PSigma.Lex.denselyOrdered_of_noMaxOrder","module":"Mathlib.Data.PSigma.Order","initialProofState":"ι : Type u_1\nα : ι → Type u_2\ninst✝³ : Preorder ι\ninst✝² : (i : ι) → Preorder (α i)\ninst✝¹ : ∀ (i : ι), DenselyOrdered (α i)\ninst✝ : ∀ (i : ι), NoMaxOrder (α i)\n⊢ DenselyOrdered (Lex (PSigma fun i => α i))","decl":"instance denselyOrdered_of_noMaxOrder [Preorder ι] [∀ i, Preorder (α i)]\n    [∀ i, DenselyOrdered (α i)] [∀ i, NoMaxOrder (α i)] : DenselyOrdered (Σₗ' i, α i) :=\n  ⟨by\n    rintro ⟨i, a⟩ ⟨j, b⟩ (⟨_, _, h⟩ | @⟨_, _, b, h⟩)\n    · obtain ⟨c, ha⟩ := exists_gt a\n      exact ⟨⟨i, c⟩, right _ ha, left _ _ h⟩\n    · obtain ⟨c, ha, hb⟩ := exists_between h\n      exact ⟨⟨i, c⟩, right _ ha, right _ hb⟩⟩\n\n"}
{"name":"PSigma.Lex.denselyOrdered_of_noMinOrder","module":"Mathlib.Data.PSigma.Order","initialProofState":"ι : Type u_1\nα : ι → Type u_2\ninst✝³ : Preorder ι\ninst✝² : (i : ι) → Preorder (α i)\ninst✝¹ : ∀ (i : ι), DenselyOrdered (α i)\ninst✝ : ∀ (i : ι), NoMinOrder (α i)\n⊢ DenselyOrdered (Lex (PSigma fun i => α i))","decl":"instance denselyOrdered_of_noMinOrder [Preorder ι] [∀ i, Preorder (α i)]\n    [∀ i, DenselyOrdered (α i)] [∀ i, NoMinOrder (α i)] : DenselyOrdered (Σₗ' i, α i) :=\n  ⟨by\n    rintro ⟨i, a⟩ ⟨j, b⟩ (⟨_, _, h⟩ | @⟨_, _, b, h⟩)\n    · obtain ⟨c, hb⟩ := exists_lt b\n      exact ⟨⟨j, c⟩, left _ _ h, right _ hb⟩\n    · obtain ⟨c, ha, hb⟩ := exists_between h\n      exact ⟨⟨i, c⟩, right _ ha, right _ hb⟩⟩\n\n"}
{"name":"PSigma.Lex.noMaxOrder_of_nonempty","module":"Mathlib.Data.PSigma.Order","initialProofState":"ι : Type u_1\nα : ι → Type u_2\ninst✝³ : Preorder ι\ninst✝² : (i : ι) → Preorder (α i)\ninst✝¹ : NoMaxOrder ι\ninst✝ : ∀ (i : ι), Nonempty (α i)\n⊢ NoMaxOrder (Lex (PSigma fun i => α i))","decl":"instance noMaxOrder_of_nonempty [Preorder ι] [∀ i, Preorder (α i)] [NoMaxOrder ι]\n    [∀ i, Nonempty (α i)] : NoMaxOrder (Σₗ' i, α i) :=\n  ⟨by\n    rintro ⟨i, a⟩\n    obtain ⟨j, h⟩ := exists_gt i\n    obtain ⟨b⟩ : Nonempty (α j) := inferInstance\n    exact ⟨⟨j, b⟩, left _ _ h⟩⟩\n\n"}
{"name":"PSigma.Lex.noMinOrder_of_nonempty","module":"Mathlib.Data.PSigma.Order","initialProofState":"ι : Type u_1\nα : ι → Type u_2\ninst✝³ : Preorder ι\ninst✝² : (i : ι) → Preorder (α i)\ninst✝¹ : NoMinOrder ι\ninst✝ : ∀ (i : ι), Nonempty (α i)\n⊢ NoMinOrder (Lex (PSigma fun i => α i))","decl":"instance noMinOrder_of_nonempty [Preorder ι] [∀ i, Preorder (α i)] [NoMinOrder ι]\n    [∀ i, Nonempty (α i)] : NoMinOrder (Σₗ' i, α i) :=\n  ⟨by\n    rintro ⟨i, a⟩\n    obtain ⟨j, h⟩ := exists_lt i\n    obtain ⟨b⟩ : Nonempty (α j) := inferInstance\n    exact ⟨⟨j, b⟩, left _ _ h⟩⟩\n\n"}
{"name":"PSigma.Lex.noMaxOrder","module":"Mathlib.Data.PSigma.Order","initialProofState":"ι : Type u_1\nα : ι → Type u_2\ninst✝² : Preorder ι\ninst✝¹ : (i : ι) → Preorder (α i)\ninst✝ : ∀ (i : ι), NoMaxOrder (α i)\n⊢ NoMaxOrder (Lex (PSigma fun i => α i))","decl":"instance noMaxOrder [Preorder ι] [∀ i, Preorder (α i)] [∀ i, NoMaxOrder (α i)] :\n    NoMaxOrder (Σₗ' i, α i) :=\n  ⟨by\n    rintro ⟨i, a⟩\n    obtain ⟨b, h⟩ := exists_gt a\n    exact ⟨⟨i, b⟩, right _ h⟩⟩\n\n"}
{"name":"PSigma.Lex.noMinOrder","module":"Mathlib.Data.PSigma.Order","initialProofState":"ι : Type u_1\nα : ι → Type u_2\ninst✝² : Preorder ι\ninst✝¹ : (i : ι) → Preorder (α i)\ninst✝ : ∀ (i : ι), NoMinOrder (α i)\n⊢ NoMinOrder (Lex (PSigma fun i => α i))","decl":"instance noMinOrder [Preorder ι] [∀ i, Preorder (α i)] [∀ i, NoMinOrder (α i)] :\n    NoMinOrder (Σₗ' i, α i) :=\n  ⟨by\n    rintro ⟨i, a⟩\n    obtain ⟨b, h⟩ := exists_lt a\n    exact ⟨⟨i, b⟩, right _ h⟩⟩\n\n"}
