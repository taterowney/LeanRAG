{"name":"PresheafOfModules.epi_of_surjective","module":"Mathlib.Algebra.Category.ModuleCat.Presheaf.EpiMono","initialProofState":"C : Type u₁\ninst✝ : CategoryTheory.Category.{v₁, u₁} C\nR : CategoryTheory.Functor (Opposite C) RingCat\nM₁ M₂ : PresheafOfModules R\nf : Quiver.Hom M₁ M₂\nhf : ∀ ⦃X : Opposite C⦄, Function.Surjective ⇑(CategoryTheory.ConcreteCategory.hom (f.app X))\n⊢ CategoryTheory.Epi f","decl":"lemma epi_of_surjective (hf : ∀ ⦃X : Cᵒᵖ⦄, Function.Surjective (f.app X)) : Epi f where\n  left_cancellation g₁ g₂ hg := by\n    ext X m₂\n    obtain ⟨m₁, rfl⟩ := hf m₂\n    exact congr_fun ((evaluation R X ⋙ forget _).congr_map hg) m₁\n\n"}
{"name":"PresheafOfModules.mono_of_injective","module":"Mathlib.Algebra.Category.ModuleCat.Presheaf.EpiMono","initialProofState":"C : Type u₁\ninst✝ : CategoryTheory.Category.{v₁, u₁} C\nR : CategoryTheory.Functor (Opposite C) RingCat\nM₁ M₂ : PresheafOfModules R\nf : Quiver.Hom M₁ M₂\nhf : ∀ ⦃X : Opposite C⦄, Function.Injective ⇑(CategoryTheory.ConcreteCategory.hom (f.app X))\n⊢ CategoryTheory.Mono f","decl":"lemma mono_of_injective (hf : ∀ ⦃X : Cᵒᵖ⦄, Function.Injective (f.app X)) : Mono f where\n  right_cancellation {M} g₁ g₂ hg := by\n    ext X m\n    exact hf (congr_fun ((evaluation R X ⋙ forget _).congr_map hg) m)\n\n"}
{"name":"PresheafOfModules.instEpiModuleCatCarrierObjOppositeRingCatApp","module":"Mathlib.Algebra.Category.ModuleCat.Presheaf.EpiMono","initialProofState":"C : Type u₁\ninst✝¹ : CategoryTheory.Category.{v₁, u₁} C\nR : CategoryTheory.Functor (Opposite C) RingCat\nM₁ M₂ : PresheafOfModules R\nf : Quiver.Hom M₁ M₂\ninst✝ : CategoryTheory.Epi f\nX : Opposite C\n⊢ CategoryTheory.Epi (f.app X)","decl":"instance [Epi f] (X : Cᵒᵖ) : Epi (f.app X) :=\n  inferInstanceAs (Epi ((evaluation R X).map f))\n\n"}
{"name":"PresheafOfModules.instMonoModuleCatCarrierObjOppositeRingCatApp","module":"Mathlib.Algebra.Category.ModuleCat.Presheaf.EpiMono","initialProofState":"C : Type u₁\ninst✝¹ : CategoryTheory.Category.{v₁, u₁} C\nR : CategoryTheory.Functor (Opposite C) RingCat\nM₁ M₂ : PresheafOfModules R\nf : Quiver.Hom M₁ M₂\ninst✝ : CategoryTheory.Mono f\nX : Opposite C\n⊢ CategoryTheory.Mono (f.app X)","decl":"instance [Mono f] (X : Cᵒᵖ) : Mono (f.app X) :=\n  inferInstanceAs (Mono ((evaluation R X).map f))\n\n"}
{"name":"PresheafOfModules.surjective_of_epi","module":"Mathlib.Algebra.Category.ModuleCat.Presheaf.EpiMono","initialProofState":"C : Type u₁\ninst✝¹ : CategoryTheory.Category.{v₁, u₁} C\nR : CategoryTheory.Functor (Opposite C) RingCat\nM₁ M₂ : PresheafOfModules R\nf : Quiver.Hom M₁ M₂\ninst✝ : CategoryTheory.Epi f\nX : Opposite C\n⊢ Function.Surjective ⇑(CategoryTheory.ConcreteCategory.hom (f.app X))","decl":"lemma surjective_of_epi [Epi f] (X : Cᵒᵖ) :\n    Function.Surjective (f.app X) := by\n  rw [← ModuleCat.epi_iff_surjective]\n  infer_instance\n\n"}
{"name":"PresheafOfModules.injective_of_mono","module":"Mathlib.Algebra.Category.ModuleCat.Presheaf.EpiMono","initialProofState":"C : Type u₁\ninst✝¹ : CategoryTheory.Category.{v₁, u₁} C\nR : CategoryTheory.Functor (Opposite C) RingCat\nM₁ M₂ : PresheafOfModules R\nf : Quiver.Hom M₁ M₂\ninst✝ : CategoryTheory.Mono f\nX : Opposite C\n⊢ Function.Injective ⇑(CategoryTheory.ConcreteCategory.hom (f.app X))","decl":"lemma injective_of_mono [Mono f] (X : Cᵒᵖ) :\n    Function.Injective (f.app X) := by\n  rw [← ModuleCat.mono_iff_injective]\n  infer_instance\n\n"}
{"name":"PresheafOfModules.epi_iff_surjective","module":"Mathlib.Algebra.Category.ModuleCat.Presheaf.EpiMono","initialProofState":"C : Type u₁\ninst✝ : CategoryTheory.Category.{v₁, u₁} C\nR : CategoryTheory.Functor (Opposite C) RingCat\nM₁ M₂ : PresheafOfModules R\nf : Quiver.Hom M₁ M₂\n⊢ Iff (CategoryTheory.Epi f) (∀ ⦃X : Opposite C⦄, Function.Surjective ⇑(CategoryTheory.ConcreteCategory.hom (f.app X)))","decl":"lemma epi_iff_surjective :\n    Epi f ↔ ∀ ⦃X : Cᵒᵖ⦄, Function.Surjective (f.app X) :=\n  ⟨fun _ ↦ surjective_of_epi f, epi_of_surjective⟩\n\n"}
{"name":"PresheafOfModules.mono_iff_surjective","module":"Mathlib.Algebra.Category.ModuleCat.Presheaf.EpiMono","initialProofState":"C : Type u₁\ninst✝ : CategoryTheory.Category.{v₁, u₁} C\nR : CategoryTheory.Functor (Opposite C) RingCat\nM₁ M₂ : PresheafOfModules R\nf : Quiver.Hom M₁ M₂\n⊢ Iff (CategoryTheory.Mono f) (∀ ⦃X : Opposite C⦄, Function.Injective ⇑(CategoryTheory.ConcreteCategory.hom (f.app X)))","decl":"lemma mono_iff_surjective :\n    Mono f ↔ ∀ ⦃X : Cᵒᵖ⦄, Function.Injective (f.app X) :=\n  ⟨fun _ ↦ injective_of_mono f, mono_of_injective⟩\n\n"}
