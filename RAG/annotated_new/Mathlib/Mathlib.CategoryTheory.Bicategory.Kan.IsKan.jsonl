{"name":"CategoryTheory.Bicategory.LeftExtension.IsKan.fac_assoc","module":"Mathlib.CategoryTheory.Bicategory.Kan.IsKan","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom a c\nt : CategoryTheory.Bicategory.LeftExtension f g\nH : t.IsKan\ns : CategoryTheory.Bicategory.LeftExtension f g\nZ : Quiver.Hom a c\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp f s.extension) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp t.unit (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerLeft f (H.desc s)) h)) (CategoryTheory.CategoryStruct.comp s.unit h)","decl":"@[reassoc (attr := simp)]\ntheorem fac (H : IsKan t) (s : LeftExtension f g) :\n    t.unit ≫ f ◁ H.desc s = s.unit :=\n  StructuredArrow.IsUniversal.fac H s\n\n"}
{"name":"CategoryTheory.Bicategory.LeftExtension.IsKan.fac","module":"Mathlib.CategoryTheory.Bicategory.Kan.IsKan","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom a c\nt : CategoryTheory.Bicategory.LeftExtension f g\nH : t.IsKan\ns : CategoryTheory.Bicategory.LeftExtension f g\n⊢ Eq (CategoryTheory.CategoryStruct.comp t.unit (CategoryTheory.Bicategory.whiskerLeft f (H.desc s))) s.unit","decl":"@[reassoc (attr := simp)]\ntheorem fac (H : IsKan t) (s : LeftExtension f g) :\n    t.unit ≫ f ◁ H.desc s = s.unit :=\n  StructuredArrow.IsUniversal.fac H s\n\n"}
{"name":"CategoryTheory.Bicategory.LeftExtension.IsKan.hom_ext","module":"Mathlib.CategoryTheory.Bicategory.Kan.IsKan","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom a c\nt : CategoryTheory.Bicategory.LeftExtension f g\nH : t.IsKan\nk : Quiver.Hom b c\nτ τ' : Quiver.Hom t.extension k\nw : Eq (CategoryTheory.CategoryStruct.comp t.unit (CategoryTheory.Bicategory.whiskerLeft f τ)) (CategoryTheory.CategoryStruct.comp t.unit (CategoryTheory.Bicategory.whiskerLeft f τ'))\n⊢ Eq τ τ'","decl":"/-- Two 2-morphisms out of a left Kan extension are equal if their compositions with\neach triangle 2-morphism are equal. -/\ntheorem hom_ext (H : IsKan t) {k : b ⟶ c} {τ τ' : t.extension ⟶ k}\n    (w : t.unit ≫ f ◁ τ = t.unit ≫ f ◁ τ') : τ = τ' :=\n  StructuredArrow.IsUniversal.hom_ext H w\n\n"}
{"name":"CategoryTheory.Bicategory.LeftExtension.IsKan.uniqueUpToIso_hom_right","module":"Mathlib.CategoryTheory.Bicategory.Kan.IsKan","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom a c\ns t : CategoryTheory.Bicategory.LeftExtension f g\nP : s.IsKan\nQ : t.IsKan\n⊢ Eq (P.uniqueUpToIso Q).hom.right (P.desc t)","decl":"@[simp]\ntheorem uniqueUpToIso_hom_right (P : IsKan s) (Q : IsKan t) :\n    (uniqueUpToIso P Q).hom.right = P.desc t := rfl\n\n"}
{"name":"CategoryTheory.Bicategory.LeftExtension.IsKan.uniqueUpToIso_inv_right","module":"Mathlib.CategoryTheory.Bicategory.Kan.IsKan","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom a c\ns t : CategoryTheory.Bicategory.LeftExtension f g\nP : s.IsKan\nQ : t.IsKan\n⊢ Eq (P.uniqueUpToIso Q).inv.right (Q.desc s)","decl":"@[simp]\ntheorem uniqueUpToIso_inv_right (P : IsKan s) (Q : IsKan t) :\n    (uniqueUpToIso P Q).inv.right = Q.desc s := rfl\n\n"}
{"name":"CategoryTheory.Bicategory.LeftLift.IsKan.fac_assoc","module":"Mathlib.CategoryTheory.Bicategory.Kan.IsKan","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom b a\ng : Quiver.Hom c a\nt : CategoryTheory.Bicategory.LeftLift f g\nH : t.IsKan\ns : CategoryTheory.Bicategory.LeftLift f g\nZ : Quiver.Hom c a\nh : Quiver.Hom (CategoryTheory.CategoryStruct.comp s.lift f) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp t.unit (CategoryTheory.CategoryStruct.comp (CategoryTheory.Bicategory.whiskerRight (H.desc s) f) h)) (CategoryTheory.CategoryStruct.comp s.unit h)","decl":"@[reassoc (attr := simp)]\ntheorem fac (H : IsKan t) (s : LeftLift f g) :\n    t.unit ≫ H.desc s ▷ f = s.unit :=\n  StructuredArrow.IsUniversal.fac H s\n\n"}
{"name":"CategoryTheory.Bicategory.LeftLift.IsKan.fac","module":"Mathlib.CategoryTheory.Bicategory.Kan.IsKan","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom b a\ng : Quiver.Hom c a\nt : CategoryTheory.Bicategory.LeftLift f g\nH : t.IsKan\ns : CategoryTheory.Bicategory.LeftLift f g\n⊢ Eq (CategoryTheory.CategoryStruct.comp t.unit (CategoryTheory.Bicategory.whiskerRight (H.desc s) f)) s.unit","decl":"@[reassoc (attr := simp)]\ntheorem fac (H : IsKan t) (s : LeftLift f g) :\n    t.unit ≫ H.desc s ▷ f = s.unit :=\n  StructuredArrow.IsUniversal.fac H s\n\n"}
{"name":"CategoryTheory.Bicategory.LeftLift.IsKan.hom_ext","module":"Mathlib.CategoryTheory.Bicategory.Kan.IsKan","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom b a\ng : Quiver.Hom c a\nt : CategoryTheory.Bicategory.LeftLift f g\nH : t.IsKan\nk : Quiver.Hom c b\nτ τ' : Quiver.Hom t.lift k\nw : Eq (CategoryTheory.CategoryStruct.comp t.unit (CategoryTheory.Bicategory.whiskerRight τ f)) (CategoryTheory.CategoryStruct.comp t.unit (CategoryTheory.Bicategory.whiskerRight τ' f))\n⊢ Eq τ τ'","decl":"/-- Two 2-morphisms out of a left Kan lift are equal if their compositions with\neach triangle 2-morphism are equal. -/\ntheorem hom_ext (H : IsKan t) {k : c ⟶ b} {τ τ' : t.lift ⟶ k}\n    (w : t.unit ≫ τ ▷ f = t.unit ≫ τ' ▷ f) : τ = τ' :=\n  StructuredArrow.IsUniversal.hom_ext H w\n\n"}
{"name":"CategoryTheory.Bicategory.LeftLift.IsKan.uniqueUpToIso_hom_right","module":"Mathlib.CategoryTheory.Bicategory.Kan.IsKan","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom b a\ng : Quiver.Hom c a\ns t : CategoryTheory.Bicategory.LeftLift f g\nP : s.IsKan\nQ : t.IsKan\n⊢ Eq (P.uniqueUpToIso Q).hom.right (P.desc t)","decl":"@[simp]\ntheorem uniqueUpToIso_hom_right (P : IsKan s) (Q : IsKan t) :\n    (uniqueUpToIso P Q).hom.right = P.desc t := rfl\n\n"}
{"name":"CategoryTheory.Bicategory.LeftLift.IsKan.uniqueUpToIso_inv_right","module":"Mathlib.CategoryTheory.Bicategory.Kan.IsKan","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom b a\ng : Quiver.Hom c a\ns t : CategoryTheory.Bicategory.LeftLift f g\nP : s.IsKan\nQ : t.IsKan\n⊢ Eq (P.uniqueUpToIso Q).inv.right (Q.desc s)","decl":"@[simp]\ntheorem uniqueUpToIso_inv_right (P : IsKan s) (Q : IsKan t) :\n    (uniqueUpToIso P Q).inv.right = Q.desc s := rfl\n\n"}
