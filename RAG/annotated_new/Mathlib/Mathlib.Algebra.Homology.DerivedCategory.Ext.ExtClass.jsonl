{"name":"CategoryTheory.ShortComplex.ext_mk₀_f_comp_ext_mk₀_g","module":"Mathlib.Algebra.Homology.DerivedCategory.Ext.ExtClass","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Abelian C\ninst✝ : CategoryTheory.HasExt C\nS : CategoryTheory.ShortComplex C\n⊢ Eq ((CategoryTheory.Abelian.Ext.mk₀ S.f).comp (CategoryTheory.Abelian.Ext.mk₀ S.g) ⋯) 0","decl":"lemma ext_mk₀_f_comp_ext_mk₀_g : (Ext.mk₀ S.f).comp (Ext.mk₀ S.g) (zero_add 0) = 0 := by simp\n\n"}
{"name":"CategoryTheory.ShortComplex.ShortExact.instHasSmallLocalizedShiftedHomHomologicalComplexIntUpQuasiIsoX₃CochainComplexMapSingleFunctorOfNatX₁","module":"Mathlib.Algebra.Homology.DerivedCategory.Ext.ExtClass","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Abelian C\nS : CategoryTheory.ShortComplex C\n⊢ CategoryTheory.Localization.HasSmallLocalizedShiftedHom (HomologicalComplex.quasiIso C (ComplexShape.up Int)) Int (S.map (CochainComplex.singleFunctor C 0)).X₃ (S.map (CochainComplex.singleFunctor C 0)).X₁","decl":"instance : HasSmallLocalizedShiftedHom.{w} W ℤ (S').X₃ (S').X₁ := by\n  dsimp\n  infer_instance\n\n"}
{"name":"CategoryTheory.ShortComplex.ShortExact.extClass_hom","module":"Mathlib.Algebra.Homology.DerivedCategory.Ext.ExtClass","initialProofState":"C : Type u\ninst✝³ : CategoryTheory.Category.{v, u} C\ninst✝² : CategoryTheory.Abelian C\ninst✝¹ : CategoryTheory.HasExt C\nS : CategoryTheory.ShortComplex C\nhS : S.ShortExact\ninst✝ : HasDerivedCategory C\n⊢ Eq hS.extClass.hom hS.singleδ","decl":"@[simp]\nlemma extClass_hom [HasDerivedCategory.{w'} C] : hS.extClass.hom = hS.singleδ := by\n  change SmallShiftedHom.equiv W Q hS.extClass = _\n  dsimp [extClass, SmallShiftedHom.equiv]\n  erw [SmallHom.equiv_comp, Iso.homToEquiv_apply]\n  rw [SmallHom.equiv_mkInv, SmallHom.equiv_mk]\n  dsimp [singleδ, triangleOfSESδ]\n  rw [Category.assoc, Category.assoc, Category.assoc,\n    singleFunctorsPostcompQIso_hom_hom, singleFunctorsPostcompQIso_inv_hom]\n  erw [Category.id_comp, Functor.map_id, Category.comp_id]\n  rfl\n\n"}
{"name":"CategoryTheory.ShortComplex.ShortExact.comp_extClass","module":"Mathlib.Algebra.Homology.DerivedCategory.Ext.ExtClass","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Abelian C\ninst✝ : CategoryTheory.HasExt C\nS : CategoryTheory.ShortComplex C\nhS : S.ShortExact\n⊢ Eq ((CategoryTheory.Abelian.Ext.mk₀ S.g).comp hS.extClass ⋯) 0","decl":"@[simp]\nlemma comp_extClass : (Ext.mk₀ S.g).comp hS.extClass (zero_add 1) = 0 := by\n  letI := HasDerivedCategory.standard C\n  ext\n  simp only [Ext.comp_hom, Ext.mk₀_hom, extClass_hom, Ext.zero_hom,\n    ShiftedHom.mk₀_comp]\n  exact comp_distTriang_mor_zero₂₃ _ hS.singleTriangle_distinguished\n\n"}
{"name":"CategoryTheory.ShortComplex.ShortExact.comp_extClass_assoc","module":"Mathlib.Algebra.Homology.DerivedCategory.Ext.ExtClass","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Abelian C\ninst✝ : CategoryTheory.HasExt C\nS : CategoryTheory.ShortComplex C\nhS : S.ShortExact\nY : C\nn : Nat\nγ : CategoryTheory.Abelian.Ext S.X₁ Y n\nn' : Nat\nh : Eq (HAdd.hAdd 1 n) n'\n⊢ Eq ((CategoryTheory.Abelian.Ext.mk₀ S.g).comp (hS.extClass.comp γ h) ⋯) 0","decl":"@[simp]\nlemma comp_extClass_assoc {Y : C} {n : ℕ} (γ : Ext S.X₁ Y n) {n' : ℕ} (h : 1 + n = n') :\n    (Ext.mk₀ S.g).comp (hS.extClass.comp γ h) (zero_add n') = 0 := by\n  rw [← Ext.comp_assoc (a₁₂ := 1) _ _ _ (by omega) (by omega) (by omega),\n    comp_extClass, Ext.zero_comp]\n\n"}
{"name":"CategoryTheory.ShortComplex.ShortExact.extClass_comp","module":"Mathlib.Algebra.Homology.DerivedCategory.Ext.ExtClass","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Abelian C\ninst✝ : CategoryTheory.HasExt C\nS : CategoryTheory.ShortComplex C\nhS : S.ShortExact\n⊢ Eq (hS.extClass.comp (CategoryTheory.Abelian.Ext.mk₀ S.f) ⋯) 0","decl":"@[simp]\nlemma extClass_comp : hS.extClass.comp (Ext.mk₀ S.f) (add_zero 1) = 0 := by\n  letI := HasDerivedCategory.standard C\n  ext\n  simp only [Ext.comp_hom, Ext.mk₀_hom, extClass_hom, Ext.zero_hom,\n    ShiftedHom.comp_mk₀]\n  exact comp_distTriang_mor_zero₃₁ _ hS.singleTriangle_distinguished\n\n"}
{"name":"CategoryTheory.ShortComplex.ShortExact.extClass_comp_assoc","module":"Mathlib.Algebra.Homology.DerivedCategory.Ext.ExtClass","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Abelian C\ninst✝ : CategoryTheory.HasExt C\nS : CategoryTheory.ShortComplex C\nhS : S.ShortExact\nY : C\nn : Nat\nγ : CategoryTheory.Abelian.Ext S.X₂ Y n\nn' : Nat\nh : Eq (HAdd.hAdd 1 n) n'\n⊢ Eq (hS.extClass.comp ((CategoryTheory.Abelian.Ext.mk₀ S.f).comp γ ⋯) h) 0","decl":"@[simp]\nlemma extClass_comp_assoc {Y : C} {n : ℕ} (γ : Ext S.X₂ Y n) {n' : ℕ} {h : 1 + n = n'} :\n    hS.extClass.comp ((Ext.mk₀ S.f).comp γ (zero_add n)) h = 0 := by\n  rw [← Ext.comp_assoc (a₁₂ := 1) _ _ _ (by omega) (by omega) (by omega),\n    extClass_comp, Ext.zero_comp]\n\n"}
