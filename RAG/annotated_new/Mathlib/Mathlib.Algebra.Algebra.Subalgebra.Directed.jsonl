{"name":"Subalgebra.coe_iSup_of_directed","module":"Mathlib.Algebra.Algebra.Subalgebra.Directed","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : Semiring A\ninst✝¹ : Algebra R A\nι : Type u_4\ninst✝ : Nonempty ι\nK : ι → Subalgebra R A\ndir : Directed (fun x1 x2 => LE.le x1 x2) K\n⊢ Eq (↑(iSup K)) (Set.iUnion fun i => ↑(K i))","decl":"theorem coe_iSup_of_directed (dir : Directed (· ≤ ·) K) : ↑(iSup K) = ⋃ i, (K i : Set A) :=\n  let s : Subalgebra R A :=\n    { __ := Subsemiring.copy _ _ (Subsemiring.coe_iSup_of_directed dir).symm\n      algebraMap_mem' := fun _ ↦ Set.mem_iUnion.2\n        ⟨Classical.arbitrary ι, Subalgebra.algebraMap_mem _ _⟩ }\n  have : iSup K = s := le_antisymm\n    (iSup_le fun i ↦ le_iSup (fun i ↦ (K i : Set A)) i) (Set.iUnion_subset fun _ ↦ le_iSup K _)\n  this.symm ▸ rfl\n\n"}
{"name":"Subalgebra.iSupLift_inclusion","module":"Mathlib.Algebra.Algebra.Subalgebra.Directed","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : Semiring A\ninst✝³ : Algebra R A\ninst✝² : Semiring B\ninst✝¹ : Algebra R B\nι : Type u_4\ninst✝ : Nonempty ι\nK : ι → Subalgebra R A\ndir : Directed (fun x1 x2 => LE.le x1 x2) K\nf : (i : ι) → AlgHom R (Subtype fun x => Membership.mem (K i) x) B\nhf : ∀ (i j : ι) (h : LE.le (K i) (K j)), Eq (f i) ((f j).comp (Subalgebra.inclusion h))\nT : Subalgebra R A\nhT : Eq T (iSup K)\ni : ι\nx : Subtype fun x => Membership.mem (K i) x\nh : LE.le (K i) T\n⊢ Eq ((Subalgebra.iSupLift K dir f hf T hT) ((Subalgebra.inclusion h) x)) ((f i) x)","decl":"@[simp]\ntheorem iSupLift_inclusion {dir : Directed (· ≤ ·) K} {f : ∀ i, K i →ₐ[R] B}\n    {hf : ∀ (i j : ι) (h : K i ≤ K j), f i = (f j).comp (inclusion h)}\n    {T : Subalgebra R A} {hT : T = iSup K} {i : ι} (x : K i) (h : K i ≤ T) :\n    iSupLift K dir f hf T hT (inclusion h x) = f i x := by\n  dsimp [iSupLift, inclusion]\n  rw [Set.iUnionLift_inclusion]\n\n"}
{"name":"Subalgebra.iSupLift_comp_inclusion","module":"Mathlib.Algebra.Algebra.Subalgebra.Directed","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : Semiring A\ninst✝³ : Algebra R A\ninst✝² : Semiring B\ninst✝¹ : Algebra R B\nι : Type u_4\ninst✝ : Nonempty ι\nK : ι → Subalgebra R A\ndir : Directed (fun x1 x2 => LE.le x1 x2) K\nf : (i : ι) → AlgHom R (Subtype fun x => Membership.mem (K i) x) B\nhf : ∀ (i j : ι) (h : LE.le (K i) (K j)), Eq (f i) ((f j).comp (Subalgebra.inclusion h))\nT : Subalgebra R A\nhT : Eq T (iSup K)\ni : ι\nh : LE.le (K i) T\n⊢ Eq ((Subalgebra.iSupLift K dir f hf T hT).comp (Subalgebra.inclusion h)) (f i)","decl":"@[simp]\ntheorem iSupLift_comp_inclusion {dir : Directed (· ≤ ·) K} {f : ∀ i, K i →ₐ[R] B}\n    {hf : ∀ (i j : ι) (h : K i ≤ K j), f i = (f j).comp (inclusion h)}\n    {T : Subalgebra R A} {hT : T = iSup K} {i : ι} (h : K i ≤ T) :\n    (iSupLift K dir f hf T hT).comp (inclusion h) = f i := by ext; simp\n\n"}
{"name":"Subalgebra.iSupLift_mk","module":"Mathlib.Algebra.Algebra.Subalgebra.Directed","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : Semiring A\ninst✝³ : Algebra R A\ninst✝² : Semiring B\ninst✝¹ : Algebra R B\nι : Type u_4\ninst✝ : Nonempty ι\nK : ι → Subalgebra R A\ndir : Directed (fun x1 x2 => LE.le x1 x2) K\nf : (i : ι) → AlgHom R (Subtype fun x => Membership.mem (K i) x) B\nhf : ∀ (i j : ι) (h : LE.le (K i) (K j)), Eq (f i) ((f j).comp (Subalgebra.inclusion h))\nT : Subalgebra R A\nhT : Eq T (iSup K)\ni : ι\nx : Subtype fun x => Membership.mem (K i) x\nhx : Membership.mem T ↑x\n⊢ Eq ((Subalgebra.iSupLift K dir f hf T hT) ⟨↑x, hx⟩) ((f i) x)","decl":"@[simp]\ntheorem iSupLift_mk {dir : Directed (· ≤ ·) K} {f : ∀ i, K i →ₐ[R] B}\n    {hf : ∀ (i j : ι) (h : K i ≤ K j), f i = (f j).comp (inclusion h)}\n    {T : Subalgebra R A} {hT : T = iSup K} {i : ι} (x : K i) (hx : (x : A) ∈ T) :\n    iSupLift K dir f hf T hT ⟨x, hx⟩ = f i x := by\n  dsimp [iSupLift, inclusion]\n  rw [Set.iUnionLift_mk]\n\n"}
{"name":"Subalgebra.iSupLift_of_mem","module":"Mathlib.Algebra.Algebra.Subalgebra.Directed","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : Semiring A\ninst✝³ : Algebra R A\ninst✝² : Semiring B\ninst✝¹ : Algebra R B\nι : Type u_4\ninst✝ : Nonempty ι\nK : ι → Subalgebra R A\ndir : Directed (fun x1 x2 => LE.le x1 x2) K\nf : (i : ι) → AlgHom R (Subtype fun x => Membership.mem (K i) x) B\nhf : ∀ (i j : ι) (h : LE.le (K i) (K j)), Eq (f i) ((f j).comp (Subalgebra.inclusion h))\nT : Subalgebra R A\nhT : Eq T (iSup K)\ni : ι\nx : Subtype fun x => Membership.mem T x\nhx : Membership.mem (K i) ↑x\n⊢ Eq ((Subalgebra.iSupLift K dir f hf T hT) x) ((f i) ⟨↑x, hx⟩)","decl":"theorem iSupLift_of_mem {dir : Directed (· ≤ ·) K} {f : ∀ i, K i →ₐ[R] B}\n    {hf : ∀ (i j : ι) (h : K i ≤ K j), f i = (f j).comp (inclusion h)}\n    {T : Subalgebra R A} {hT : T = iSup K} {i : ι} (x : T) (hx : (x : A) ∈ K i) :\n    iSupLift K dir f hf T hT x = f i ⟨x, hx⟩ := by\n  dsimp [iSupLift, inclusion]\n  rw [Set.iUnionLift_of_mem]\n\n"}
