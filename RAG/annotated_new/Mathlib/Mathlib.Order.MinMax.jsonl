{"name":"le_min_iff","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\n⊢ Iff (LE.le c (Min.min a b)) (And (LE.le c a) (LE.le c b))","decl":"theorem le_min_iff : c ≤ min a b ↔ c ≤ a ∧ c ≤ b :=\n  le_inf_iff\n\n"}
{"name":"le_max_iff","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\n⊢ Iff (LE.le a (Max.max b c)) (Or (LE.le a b) (LE.le a c))","decl":"theorem le_max_iff : a ≤ max b c ↔ a ≤ b ∨ a ≤ c :=\n  le_sup_iff\n\n"}
{"name":"min_le_iff","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\n⊢ Iff (LE.le (Min.min a b) c) (Or (LE.le a c) (LE.le b c))","decl":"theorem min_le_iff : min a b ≤ c ↔ a ≤ c ∨ b ≤ c :=\n  inf_le_iff\n\n"}
{"name":"max_le_iff","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\n⊢ Iff (LE.le (Max.max a b) c) (And (LE.le a c) (LE.le b c))","decl":"theorem max_le_iff : max a b ≤ c ↔ a ≤ c ∧ b ≤ c :=\n  sup_le_iff\n\n"}
{"name":"lt_min_iff","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\n⊢ Iff (LT.lt a (Min.min b c)) (And (LT.lt a b) (LT.lt a c))","decl":"theorem lt_min_iff : a < min b c ↔ a < b ∧ a < c :=\n  lt_inf_iff\n\n"}
{"name":"lt_max_iff","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\n⊢ Iff (LT.lt a (Max.max b c)) (Or (LT.lt a b) (LT.lt a c))","decl":"theorem lt_max_iff : a < max b c ↔ a < b ∨ a < c :=\n  lt_sup_iff\n\n"}
{"name":"min_lt_iff","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\n⊢ Iff (LT.lt (Min.min a b) c) (Or (LT.lt a c) (LT.lt b c))","decl":"theorem min_lt_iff : min a b < c ↔ a < c ∨ b < c :=\n  inf_lt_iff\n\n"}
{"name":"max_lt_iff","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\n⊢ Iff (LT.lt (Max.max a b) c) (And (LT.lt a c) (LT.lt b c))","decl":"theorem max_lt_iff : max a b < c ↔ a < c ∧ b < c :=\n  sup_lt_iff\n\n"}
{"name":"max_le_max","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c d : α\na✝¹ : LE.le a c\na✝ : LE.le b d\n⊢ LE.le (Max.max a b) (Max.max c d)","decl":"theorem max_le_max : a ≤ c → b ≤ d → max a b ≤ max c d :=\n  sup_le_sup\n\n"}
{"name":"max_le_max_left","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\nh : LE.le a b\n⊢ LE.le (Max.max c a) (Max.max c b)","decl":"theorem max_le_max_left (c) (h : a ≤ b) : max c a ≤ max c b := sup_le_sup_left h c\n\n"}
{"name":"max_le_max_right","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\nh : LE.le a b\n⊢ LE.le (Max.max a c) (Max.max b c)","decl":"theorem max_le_max_right (c) (h : a ≤ b) : max a c ≤ max b c := sup_le_sup_right h c\n\n"}
{"name":"min_le_min","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c d : α\na✝¹ : LE.le a c\na✝ : LE.le b d\n⊢ LE.le (Min.min a b) (Min.min c d)","decl":"theorem min_le_min : a ≤ c → b ≤ d → min a b ≤ min c d :=\n  inf_le_inf\n\n"}
{"name":"min_le_min_left","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\nh : LE.le a b\n⊢ LE.le (Min.min c a) (Min.min c b)","decl":"theorem min_le_min_left (c) (h : a ≤ b) : min c a ≤ min c b := inf_le_inf_left c h\n\n"}
{"name":"min_le_min_right","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\nh : LE.le a b\n⊢ LE.le (Min.min a c) (Min.min b c)","decl":"theorem min_le_min_right (c) (h : a ≤ b) : min a c ≤ min b c := inf_le_inf_right c h\n\n"}
{"name":"le_max_of_le_left","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\na✝ : LE.le a b\n⊢ LE.le a (Max.max b c)","decl":"theorem le_max_of_le_left : a ≤ b → a ≤ max b c :=\n  le_sup_of_le_left\n\n"}
{"name":"le_max_of_le_right","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\na✝ : LE.le a c\n⊢ LE.le a (Max.max b c)","decl":"theorem le_max_of_le_right : a ≤ c → a ≤ max b c :=\n  le_sup_of_le_right\n\n"}
{"name":"lt_max_of_lt_left","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\nh : LT.lt a b\n⊢ LT.lt a (Max.max b c)","decl":"theorem lt_max_of_lt_left (h : a < b) : a < max b c :=\n  h.trans_le (le_max_left b c)\n\n"}
{"name":"lt_max_of_lt_right","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\nh : LT.lt a c\n⊢ LT.lt a (Max.max b c)","decl":"theorem lt_max_of_lt_right (h : a < c) : a < max b c :=\n  h.trans_le (le_max_right b c)\n\n"}
{"name":"min_le_of_left_le","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\na✝ : LE.le a c\n⊢ LE.le (Min.min a b) c","decl":"theorem min_le_of_left_le : a ≤ c → min a b ≤ c :=\n  inf_le_of_left_le\n\n"}
{"name":"min_le_of_right_le","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\na✝ : LE.le b c\n⊢ LE.le (Min.min a b) c","decl":"theorem min_le_of_right_le : b ≤ c → min a b ≤ c :=\n  inf_le_of_right_le\n\n"}
{"name":"min_lt_of_left_lt","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\nh : LT.lt a c\n⊢ LT.lt (Min.min a b) c","decl":"theorem min_lt_of_left_lt (h : a < c) : min a b < c :=\n  (min_le_left a b).trans_lt h\n\n"}
{"name":"min_lt_of_right_lt","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\nh : LT.lt b c\n⊢ LT.lt (Min.min a b) c","decl":"theorem min_lt_of_right_lt (h : b < c) : min a b < c :=\n  (min_le_right a b).trans_lt h\n\n"}
{"name":"max_min_distrib_left","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\n⊢ Eq (Max.max a (Min.min b c)) (Min.min (Max.max a b) (Max.max a c))","decl":"lemma max_min_distrib_left (a b c : α) : max a (min b c) = min (max a b) (max a c) :=\n  sup_inf_left _ _ _\n\n"}
{"name":"max_min_distrib_right","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\n⊢ Eq (Max.max (Min.min a b) c) (Min.min (Max.max a c) (Max.max b c))","decl":"lemma max_min_distrib_right (a b c : α) : max (min a b) c = min (max a c) (max b c) :=\n  sup_inf_right _ _ _\n\n"}
{"name":"min_max_distrib_left","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\n⊢ Eq (Min.min a (Max.max b c)) (Max.max (Min.min a b) (Min.min a c))","decl":"lemma min_max_distrib_left (a b c : α) : min a (max b c) = max (min a b) (min a c) :=\n  inf_sup_left _ _ _\n\n"}
{"name":"min_max_distrib_right","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\n⊢ Eq (Min.min (Max.max a b) c) (Max.max (Min.min a c) (Min.min b c))","decl":"lemma min_max_distrib_right (a b c : α) : min (max a b) c = max (min a c) (min b c) :=\n  inf_sup_right _ _ _\n\n"}
{"name":"min_le_max","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b : α\n⊢ LE.le (Min.min a b) (Max.max a b)","decl":"theorem min_le_max : min a b ≤ max a b :=\n  le_trans (min_le_left a b) (le_max_left a b)\n\n"}
{"name":"min_eq_left_iff","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b : α\n⊢ Iff (Eq (Min.min a b) a) (LE.le a b)","decl":"theorem min_eq_left_iff : min a b = a ↔ a ≤ b :=\n  inf_eq_left\n\n"}
{"name":"min_eq_right_iff","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b : α\n⊢ Iff (Eq (Min.min a b) b) (LE.le b a)","decl":"theorem min_eq_right_iff : min a b = b ↔ b ≤ a :=\n  inf_eq_right\n\n"}
{"name":"max_eq_left_iff","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b : α\n⊢ Iff (Eq (Max.max a b) a) (LE.le b a)","decl":"theorem max_eq_left_iff : max a b = a ↔ b ≤ a :=\n  sup_eq_left\n\n"}
{"name":"max_eq_right_iff","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b : α\n⊢ Iff (Eq (Max.max a b) b) (LE.le a b)","decl":"theorem max_eq_right_iff : max a b = b ↔ a ≤ b :=\n  sup_eq_right\n\n"}
{"name":"min_cases","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b : α\n⊢ Or (And (Eq (Min.min a b) a) (LE.le a b)) (And (Eq (Min.min a b) b) (LT.lt b a))","decl":"/-- For elements `a` and `b` of a linear order, either `min a b = a` and `a ≤ b`,\n    or `min a b = b` and `b < a`.\n    Use cases on this lemma to automate linarith in inequalities -/\ntheorem min_cases (a b : α) : min a b = a ∧ a ≤ b ∨ min a b = b ∧ b < a := by\n  by_cases h : a ≤ b\n  · left\n    exact ⟨min_eq_left h, h⟩\n  · right\n    exact ⟨min_eq_right (le_of_lt (not_le.mp h)), not_le.mp h⟩\n\n"}
{"name":"max_cases","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b : α\n⊢ Or (And (Eq (Max.max a b) a) (LE.le b a)) (And (Eq (Max.max a b) b) (LT.lt a b))","decl":"/-- For elements `a` and `b` of a linear order, either `max a b = a` and `b ≤ a`,\n    or `max a b = b` and `a < b`.\n    Use cases on this lemma to automate linarith in inequalities -/\ntheorem max_cases (a b : α) : max a b = a ∧ b ≤ a ∨ max a b = b ∧ a < b :=\n  @min_cases αᵒᵈ _ a b\n\n"}
{"name":"min_eq_iff","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\n⊢ Iff (Eq (Min.min a b) c) (Or (And (Eq a c) (LE.le a b)) (And (Eq b c) (LE.le b a)))","decl":"theorem min_eq_iff : min a b = c ↔ a = c ∧ a ≤ b ∨ b = c ∧ b ≤ a := by\n  constructor\n  · intro h\n    refine Or.imp (fun h' => ?_) (fun h' => ?_) (le_total a b) <;> exact ⟨by simpa [h'] using h, h'⟩\n  · rintro (⟨rfl, h⟩ | ⟨rfl, h⟩) <;> simp [h]\n\n"}
{"name":"max_eq_iff","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\n⊢ Iff (Eq (Max.max a b) c) (Or (And (Eq a c) (LE.le b a)) (And (Eq b c) (LE.le a b)))","decl":"theorem max_eq_iff : max a b = c ↔ a = c ∧ b ≤ a ∨ b = c ∧ a ≤ b :=\n  @min_eq_iff αᵒᵈ _ a b c\n\n"}
{"name":"min_lt_min_left_iff","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\n⊢ Iff (LT.lt (Min.min a c) (Min.min b c)) (And (LT.lt a b) (LT.lt a c))","decl":"theorem min_lt_min_left_iff : min a c < min b c ↔ a < b ∧ a < c := by\n  simp_rw [lt_min_iff, min_lt_iff, or_iff_left (lt_irrefl _)]\n  exact and_congr_left fun h => or_iff_left_of_imp h.trans\n\n"}
{"name":"min_lt_min_right_iff","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\n⊢ Iff (LT.lt (Min.min a b) (Min.min a c)) (And (LT.lt b c) (LT.lt b a))","decl":"theorem min_lt_min_right_iff : min a b < min a c ↔ b < c ∧ b < a := by\n  simp_rw [min_comm a, min_lt_min_left_iff]\n\n"}
{"name":"max_lt_max_left_iff","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\n⊢ Iff (LT.lt (Max.max a c) (Max.max b c)) (And (LT.lt a b) (LT.lt c b))","decl":"theorem max_lt_max_left_iff : max a c < max b c ↔ a < b ∧ c < b :=\n  @min_lt_min_left_iff αᵒᵈ _ _ _ _\n\n"}
{"name":"max_lt_max_right_iff","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\n⊢ Iff (LT.lt (Max.max a b) (Max.max a c)) (And (LT.lt b c) (LT.lt a c))","decl":"theorem max_lt_max_right_iff : max a b < max a c ↔ b < c ∧ a < c :=\n  @min_lt_min_right_iff αᵒᵈ _ _ _ _\n\n"}
{"name":"max_idem","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\n⊢ Std.IdempotentOp Max.max","decl":"/-- An instance asserting that `max a a = a` -/\ninstance max_idem : Std.IdempotentOp (α := α) max where\n  idempotent := by simp\n\n-- short-circuit type class inference\n"}
{"name":"min_idem","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\n⊢ Std.IdempotentOp Min.min","decl":"/-- An instance asserting that `min a a = a` -/\ninstance min_idem : Std.IdempotentOp (α := α) min where\n  idempotent := by simp\n\n-- short-circuit type class inference\n"}
{"name":"min_lt_max","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b : α\n⊢ Iff (LT.lt (Min.min a b) (Max.max a b)) (Ne a b)","decl":"theorem min_lt_max : min a b < max a b ↔ a ≠ b :=\n  inf_lt_sup\n\n-- Porting note: was `by simp [lt_max_iff, max_lt_iff, *]`\n"}
{"name":"max_lt_max","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c d : α\nh₁ : LT.lt a c\nh₂ : LT.lt b d\n⊢ LT.lt (Max.max a b) (Max.max c d)","decl":"theorem max_lt_max (h₁ : a < c) (h₂ : b < d) : max a b < max c d :=\n  max_lt (lt_max_of_lt_left h₁) (lt_max_of_lt_right h₂)\n\n"}
{"name":"min_lt_min","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c d : α\nh₁ : LT.lt a c\nh₂ : LT.lt b d\n⊢ LT.lt (Min.min a b) (Min.min c d)","decl":"theorem min_lt_min (h₁ : a < c) (h₂ : b < d) : min a b < min c d :=\n  @max_lt_max αᵒᵈ _ _ _ _ _ h₁ h₂\n\n"}
{"name":"min_right_comm","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\n⊢ Eq (Min.min (Min.min a b) c) (Min.min (Min.min a c) b)","decl":"theorem min_right_comm (a b c : α) : min (min a b) c = min (min a c) b := by\n  rw [min_assoc, min_comm b, min_assoc]\n\n"}
{"name":"Max.left_comm","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\n⊢ Eq (Max.max a (Max.max b c)) (Max.max b (Max.max a c))","decl":"theorem Max.left_comm (a b c : α) : max a (max b c) = max b (max a c) := by\n  rw [← max_assoc, max_comm a, max_assoc]\n\n"}
{"name":"Max.right_comm","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\n⊢ Eq (Max.max (Max.max a b) c) (Max.max (Max.max a c) b)","decl":"theorem Max.right_comm (a b c : α) : max (max a b) c = max (max a c) b := by\n  rw [max_assoc, max_comm b, max_assoc]\n\n"}
{"name":"MonotoneOn.map_max","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\nβ : Type v\ninst✝¹ : LinearOrder α\ninst✝ : LinearOrder β\nf : α → β\ns : Set α\na b : α\nhf : MonotoneOn f s\nha : Membership.mem s a\nhb : Membership.mem s b\n⊢ Eq (f (Max.max a b)) (Max.max (f a) (f b))","decl":"theorem MonotoneOn.map_max (hf : MonotoneOn f s) (ha : a ∈ s) (hb : b ∈ s) : f (max a b) =\n    max (f a) (f b) := by\n  rcases le_total a b with h | h <;>\n    simp only [max_eq_right, max_eq_left, hf ha hb, hf hb ha, h]\n\n"}
{"name":"MonotoneOn.map_min","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\nβ : Type v\ninst✝¹ : LinearOrder α\ninst✝ : LinearOrder β\nf : α → β\ns : Set α\na b : α\nhf : MonotoneOn f s\nha : Membership.mem s a\nhb : Membership.mem s b\n⊢ Eq (f (Min.min a b)) (Min.min (f a) (f b))","decl":"theorem MonotoneOn.map_min (hf : MonotoneOn f s) (ha : a ∈ s) (hb : b ∈ s) : f (min a b) =\n    min (f a) (f b) := hf.dual.map_max ha hb\n\n"}
{"name":"AntitoneOn.map_max","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\nβ : Type v\ninst✝¹ : LinearOrder α\ninst✝ : LinearOrder β\nf : α → β\ns : Set α\na b : α\nhf : AntitoneOn f s\nha : Membership.mem s a\nhb : Membership.mem s b\n⊢ Eq (f (Max.max a b)) (Min.min (f a) (f b))","decl":"theorem AntitoneOn.map_max (hf : AntitoneOn f s) (ha : a ∈ s) (hb : b ∈ s) : f (max a b) =\n    min (f a) (f b) := hf.dual_right.map_max ha hb\n\n"}
{"name":"AntitoneOn.map_min","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\nβ : Type v\ninst✝¹ : LinearOrder α\ninst✝ : LinearOrder β\nf : α → β\ns : Set α\na b : α\nhf : AntitoneOn f s\nha : Membership.mem s a\nhb : Membership.mem s b\n⊢ Eq (f (Min.min a b)) (Max.max (f a) (f b))","decl":"theorem AntitoneOn.map_min (hf : AntitoneOn f s) (ha : a ∈ s) (hb : b ∈ s) : f (min a b) =\n    max (f a) (f b) := hf.dual.map_max ha hb\n\n"}
{"name":"Monotone.map_max","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\nβ : Type v\ninst✝¹ : LinearOrder α\ninst✝ : LinearOrder β\nf : α → β\na b : α\nhf : Monotone f\n⊢ Eq (f (Max.max a b)) (Max.max (f a) (f b))","decl":"theorem Monotone.map_max (hf : Monotone f) : f (max a b) = max (f a) (f b) := by\n  rcases le_total a b with h | h <;> simp [h, hf h]\n\n"}
{"name":"Monotone.map_min","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\nβ : Type v\ninst✝¹ : LinearOrder α\ninst✝ : LinearOrder β\nf : α → β\na b : α\nhf : Monotone f\n⊢ Eq (f (Min.min a b)) (Min.min (f a) (f b))","decl":"theorem Monotone.map_min (hf : Monotone f) : f (min a b) = min (f a) (f b) :=\n  hf.dual.map_max\n\n"}
{"name":"Antitone.map_max","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\nβ : Type v\ninst✝¹ : LinearOrder α\ninst✝ : LinearOrder β\nf : α → β\na b : α\nhf : Antitone f\n⊢ Eq (f (Max.max a b)) (Min.min (f a) (f b))","decl":"theorem Antitone.map_max (hf : Antitone f) : f (max a b) = min (f a) (f b) := by\n  rcases le_total a b with h | h <;> simp [h, hf h]\n\n"}
{"name":"Antitone.map_min","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\nβ : Type v\ninst✝¹ : LinearOrder α\ninst✝ : LinearOrder β\nf : α → β\na b : α\nhf : Antitone f\n⊢ Eq (f (Min.min a b)) (Max.max (f a) (f b))","decl":"theorem Antitone.map_min (hf : Antitone f) : f (min a b) = max (f a) (f b) :=\n  hf.dual.map_max\n\n"}
{"name":"min_choice","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b : α\n⊢ Or (Eq (Min.min a b) a) (Eq (Min.min a b) b)","decl":"theorem min_choice (a b : α) : min a b = a ∨ min a b = b := by cases le_total a b <;> simp [*]\n\n"}
{"name":"max_choice","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b : α\n⊢ Or (Eq (Max.max a b) a) (Eq (Max.max a b) b)","decl":"theorem max_choice (a b : α) : max a b = a ∨ max a b = b :=\n  @min_choice αᵒᵈ _ a b\n\n"}
{"name":"le_of_max_le_left","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\nh : LE.le (Max.max a b) c\n⊢ LE.le a c","decl":"theorem le_of_max_le_left {a b c : α} (h : max a b ≤ c) : a ≤ c :=\n  le_trans (le_max_left _ _) h\n\n"}
{"name":"le_of_max_le_right","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\na b c : α\nh : LE.le (Max.max a b) c\n⊢ LE.le b c","decl":"theorem le_of_max_le_right {a b c : α} (h : max a b ≤ c) : b ≤ c :=\n  le_trans (le_max_right _ _) h\n\n"}
{"name":"instCommutativeMax","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\n⊢ Std.Commutative Max.max","decl":"instance instCommutativeMax : Std.Commutative (α := α) max where comm := max_comm\n"}
{"name":"instAssociativeMax","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\n⊢ Std.Associative Max.max","decl":"instance instAssociativeMax : Std.Associative (α := α) max where assoc := max_assoc\n"}
{"name":"instCommutativeMin","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\n⊢ Std.Commutative Min.min","decl":"instance instCommutativeMin : Std.Commutative (α := α) min where comm := min_comm\n"}
{"name":"instAssociativeMin","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\n⊢ Std.Associative Min.min","decl":"instance instAssociativeMin : Std.Associative (α := α) min where assoc := min_assoc\n\n"}
{"name":"max_left_commutative","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\n⊢ LeftCommutative Max.max","decl":"theorem max_left_commutative : LeftCommutative (max : α → α → α) := ⟨max_left_comm⟩\n"}
{"name":"min_left_commutative","module":"Mathlib.Order.MinMax","initialProofState":"α : Type u\ninst✝ : LinearOrder α\n⊢ LeftCommutative Min.min","decl":"theorem min_left_commutative : LeftCommutative (min : α → α → α) := ⟨min_left_comm⟩\n\n"}
