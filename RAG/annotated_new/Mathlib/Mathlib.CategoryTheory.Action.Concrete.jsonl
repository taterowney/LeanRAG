{"name":"Action.ofMulAction_apply","module":"Mathlib.CategoryTheory.Action.Concrete","initialProofState":"G H : Type u\ninst‚úù¬π : Monoid G\ninst‚úù : MulAction G H\ng : G\nx : H\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom (Action.ofMulAction G H).œÅ) g x) (HSMul.hSMul g x)","decl":"@[simp]\ntheorem ofMulAction_apply {G H : Type u} [Monoid G] [MulAction G H] (g : G) (x : H) :\n    (ofMulAction G H).œÅ g x = (g ‚Ä¢ x : H) :=\n  rfl\n\n"}
{"name":"Action.leftRegular_V","module":"Mathlib.CategoryTheory.Action.Concrete","initialProofState":"G : Type u\ninst‚úù : Monoid G\n‚ä¢ Eq (Action.leftRegular G).V G","decl":"/-- The `G`-set `G`, acting on itself by left multiplication. -/\n@[simps!]\ndef leftRegular (G : Type u) [Monoid G] : Action (Type u) (MonCat.of G) :=\n  Action.ofMulAction G G\n\n"}
{"name":"Action.leftRegular_œÅ_hom_apply","module":"Mathlib.CategoryTheory.Action.Concrete","initialProofState":"G : Type u\ninst‚úù : Monoid G\nx1‚úù x2‚úù : G\n‚ä¢ Eq ((MonCat.Hom.hom (Action.leftRegular G).œÅ) x1‚úù x2‚úù) (HMul.hMul x1‚úù x2‚úù)","decl":"/-- The `G`-set `G`, acting on itself by left multiplication. -/\n@[simps!]\ndef leftRegular (G : Type u) [Monoid G] : Action (Type u) (MonCat.of G) :=\n  Action.ofMulAction G G\n\n"}
{"name":"Action.diagonal_œÅ_hom_apply","module":"Mathlib.CategoryTheory.Action.Concrete","initialProofState":"G : Type u\ninst‚úù : Monoid G\nn : Nat\nx1‚úù : G\nx2‚úù : Fin n ‚Üí G\na‚úù : Fin n\n‚ä¢ Eq ((MonCat.Hom.hom (Action.diagonal G n).œÅ) x1‚úù x2‚úù a‚úù) (HMul.hMul x1‚úù (x2‚úù a‚úù))","decl":"/-- The `G`-set `G‚Åø`, acting on itself by left multiplication. -/\n@[simps!]\ndef diagonal (G : Type u) [Monoid G] (n : ‚Ñï) : Action (Type u) (MonCat.of G) :=\n  Action.ofMulAction G (Fin n ‚Üí G)\n\n"}
{"name":"Action.diagonal_V","module":"Mathlib.CategoryTheory.Action.Concrete","initialProofState":"G : Type u\ninst‚úù : Monoid G\nn : Nat\n‚ä¢ Eq (Action.diagonal G n).V (Fin n ‚Üí G)","decl":"/-- The `G`-set `G‚Åø`, acting on itself by left multiplication. -/\n@[simps!]\ndef diagonal (G : Type u) [Monoid G] (n : ‚Ñï) : Action (Type u) (MonCat.of G) :=\n  Action.ofMulAction G (Fin n ‚Üí G)\n\n"}
{"name":"Action.FintypeCat.ofMulAction_apply","module":"Mathlib.CategoryTheory.Action.Concrete","initialProofState":"G : Type u\nH : FintypeCat\ninst‚úù¬π : Monoid G\ninst‚úù : MulAction G ‚ÜëH\ng : G\nx : ‚ÜëH\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom (Action.FintypeCat.ofMulAction G H).œÅ) g x) (HSMul.hSMul g x)","decl":"@[simp]\ntheorem ofMulAction_apply {G : Type u} {H : FintypeCat.{u}} [Monoid G] [MulAction G H]\n    (g : G) (x : H) : (FintypeCat.ofMulAction G H).œÅ g x = (g ‚Ä¢ x : H) :=\n  rfl\n\n"}
{"name":"Action.FintypeCat.toEndHom_apply","module":"Mathlib.CategoryTheory.Action.Concrete","initialProofState":"G : Type u_1\ninst‚úù¬≤ : Group G\nN : Subgroup G\ninst‚úù¬π : Fintype (HasQuotient.Quotient G N)\ninst‚úù : N.Normal\ng h : G\n‚ä¢ Eq (((Action.FintypeCat.toEndHom N) g).hom (Quotient.mk (QuotientGroup.leftRel N) h)) (Quotient.mk (QuotientGroup.leftRel N) (HMul.hMul h (Inv.inv g)))","decl":"@[simp]\nlemma toEndHom_apply [N.Normal] (g h : G) : (toEndHom N g).hom ‚ü¶h‚üß = ‚ü¶h * g‚Åª¬π‚üß := rfl\n\n"}
{"name":"Action.FintypeCat.toEndHom_trivial_of_mem","module":"Mathlib.CategoryTheory.Action.Concrete","initialProofState":"G : Type u_1\ninst‚úù¬≤ : Group G\nN : Subgroup G\ninst‚úù¬π : Fintype (HasQuotient.Quotient G N)\ninst‚úù : N.Normal\nn : G\nhn : Membership.mem N n\n‚ä¢ Eq ((Action.FintypeCat.toEndHom N) n) (CategoryTheory.CategoryStruct.id (Action.FintypeCat.ofMulAction G (FintypeCat.of (HasQuotient.Quotient G N))))","decl":"variable {N} in\nlemma toEndHom_trivial_of_mem [N.Normal] {n : G} (hn : n ‚àà N) : toEndHom N n = ùüô (G ‚ß∏‚Çê N) := by\n  apply Action.hom_ext\n  ext (x : G ‚ß∏ N)\n  induction' x using Quotient.inductionOn with Œº\n  exact Quotient.sound ((QuotientGroup.leftRel_apply).mpr <| by simpa)\n\n"}
{"name":"Action.FintypeCat.quotientToEndHom_mk","module":"Mathlib.CategoryTheory.Action.Concrete","initialProofState":"G : Type u_1\ninst‚úù¬≤ : Group G\nH N : Subgroup G\ninst‚úù¬π : Fintype (HasQuotient.Quotient G N)\ninst‚úù : N.Normal\nx : Subtype fun x => Membership.mem H x\ng : G\n‚ä¢ Eq (((Action.FintypeCat.quotientToEndHom H N) (Quotient.mk (QuotientGroup.leftRel (N.subgroupOf H)) x)).hom (Quotient.mk (QuotientGroup.leftRel N) g)) (Quotient.mk (QuotientGroup.leftRel N) (HMul.hMul g ‚Üë(Inv.inv x)))","decl":"@[simp]\nlemma quotientToEndHom_mk [N.Normal] (x : H) (g : G) :\n    (quotientToEndHom H N ‚ü¶x‚üß).hom ‚ü¶g‚üß = ‚ü¶g * x‚Åª¬π‚üß :=\n  rfl\n\n"}
{"name":"Action.FintypeCat.quotientToQuotientOfLE_hom_mk","module":"Mathlib.CategoryTheory.Action.Concrete","initialProofState":"G : Type u_1\ninst‚úù¬≤ : Group G\nH N : Subgroup G\ninst‚úù¬π : Fintype (HasQuotient.Quotient G N)\ninst‚úù : Fintype (HasQuotient.Quotient G H)\nh : LE.le N H\nx : G\n‚ä¢ Eq ((Action.FintypeCat.quotientToQuotientOfLE H N h).hom (Quotient.mk (QuotientGroup.leftRel N) x)) (Quotient.mk (QuotientGroup.leftRel H) x)","decl":"@[simp]\nlemma quotientToQuotientOfLE_hom_mk [Fintype (G ‚ß∏ H)] (h : N ‚â§ H) (x : G) :\n    (quotientToQuotientOfLE H N h).hom ‚ü¶x‚üß = ‚ü¶x‚üß :=\n  rfl\n\n"}
