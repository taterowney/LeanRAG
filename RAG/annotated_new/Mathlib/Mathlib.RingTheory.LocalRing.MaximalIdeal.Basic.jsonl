{"name":"IsLocalRing.maximalIdeal.isMaximal","module":"Mathlib.RingTheory.LocalRing.MaximalIdeal.Basic","initialProofState":"R : Type u_1\ninst✝¹ : CommSemiring R\ninst✝ : IsLocalRing R\n⊢ (IsLocalRing.maximalIdeal R).IsMaximal","decl":"instance maximalIdeal.isMaximal : (maximalIdeal R).IsMaximal := by\n  rw [Ideal.isMaximal_iff]\n  constructor\n  · intro h\n    apply h\n    exact isUnit_one\n  · intro I x _ hx H\n    erw [Classical.not_not] at hx\n    rcases hx with ⟨u, rfl⟩\n    simpa using I.mul_mem_left (↑u⁻¹) H\n\n"}
{"name":"IsLocalRing.maximal_ideal_unique","module":"Mathlib.RingTheory.LocalRing.MaximalIdeal.Basic","initialProofState":"R : Type u_1\ninst✝¹ : CommSemiring R\ninst✝ : IsLocalRing R\n⊢ ExistsUnique fun I => I.IsMaximal","decl":"theorem maximal_ideal_unique : ∃! I : Ideal R, I.IsMaximal :=\n  ⟨maximalIdeal R, maximalIdeal.isMaximal R, fun I hI =>\n    hI.eq_of_le (maximalIdeal.isMaximal R).1.1 fun _ hx => hI.1.1 ∘ I.eq_top_of_isUnit_mem hx⟩\n\n"}
{"name":"IsLocalRing.eq_maximalIdeal","module":"Mathlib.RingTheory.LocalRing.MaximalIdeal.Basic","initialProofState":"R : Type u_1\ninst✝¹ : CommSemiring R\ninst✝ : IsLocalRing R\nI : Ideal R\nhI : I.IsMaximal\n⊢ Eq I (IsLocalRing.maximalIdeal R)","decl":"theorem eq_maximalIdeal {I : Ideal R} (hI : I.IsMaximal) : I = maximalIdeal R :=\n  ExistsUnique.unique (maximal_ideal_unique R) hI <| maximalIdeal.isMaximal R\n\n"}
{"name":"IsLocalRing.le_maximalIdeal","module":"Mathlib.RingTheory.LocalRing.MaximalIdeal.Basic","initialProofState":"R : Type u_1\ninst✝¹ : CommSemiring R\ninst✝ : IsLocalRing R\nJ : Ideal R\nhJ : Ne J Top.top\n⊢ LE.le J (IsLocalRing.maximalIdeal R)","decl":"theorem le_maximalIdeal {J : Ideal R} (hJ : J ≠ ⊤) : J ≤ maximalIdeal R := by\n  rcases Ideal.exists_le_maximal J hJ with ⟨M, hM1, hM2⟩\n  rwa [← eq_maximalIdeal hM1]\n\n"}
{"name":"IsLocalRing.mem_maximalIdeal","module":"Mathlib.RingTheory.LocalRing.MaximalIdeal.Basic","initialProofState":"R : Type u_1\ninst✝¹ : CommSemiring R\ninst✝ : IsLocalRing R\nx : R\n⊢ Iff (Membership.mem (IsLocalRing.maximalIdeal R) x) (Membership.mem (nonunits R) x)","decl":"@[simp]\ntheorem mem_maximalIdeal (x) : x ∈ maximalIdeal R ↔ x ∈ nonunits R :=\n  Iff.rfl\n\n"}
{"name":"IsLocalRing.not_mem_maximalIdeal","module":"Mathlib.RingTheory.LocalRing.MaximalIdeal.Basic","initialProofState":"R : Type u_1\ninst✝¹ : CommSemiring R\ninst✝ : IsLocalRing R\nx : R\n⊢ Iff (Not (Membership.mem (IsLocalRing.maximalIdeal R) x)) (IsUnit x)","decl":"/--\nAn element `x` of a commutative local semiring is not contained in the maximal ideal\niff it is a unit.\n-/\ntheorem not_mem_maximalIdeal {x : R} : x ∉ maximalIdeal R ↔ IsUnit x := by\n  simp only [mem_maximalIdeal, mem_nonunits_iff, not_not]\n\n"}
{"name":"IsLocalRing.isField_iff_maximalIdeal_eq","module":"Mathlib.RingTheory.LocalRing.MaximalIdeal.Basic","initialProofState":"R : Type u_1\ninst✝¹ : CommSemiring R\ninst✝ : IsLocalRing R\n⊢ Iff (IsField R) (Eq (IsLocalRing.maximalIdeal R) Bot.bot)","decl":"theorem isField_iff_maximalIdeal_eq : IsField R ↔ maximalIdeal R = ⊥ :=\n  not_iff_not.mp\n    ⟨Ring.ne_bot_of_isMaximal_of_not_isField inferInstance, fun h =>\n      Ring.not_isField_iff_exists_prime.mpr ⟨_, h, Ideal.IsMaximal.isPrime' _⟩⟩\n\n"}
{"name":"LocalRing.maximal_ideal_unique","module":"Mathlib.RingTheory.LocalRing.MaximalIdeal.Basic","initialProofState":"R : Type u_1\ninst✝¹ : CommSemiring R\ninst✝ : IsLocalRing R\n⊢ ExistsUnique fun I => I.IsMaximal","decl":"@[deprecated (since := \"2024-11-11\")]\nalias LocalRing.maximal_ideal_unique := IsLocalRing.maximal_ideal_unique\n\n"}
{"name":"LocalRing.eq_maximalIdeal","module":"Mathlib.RingTheory.LocalRing.MaximalIdeal.Basic","initialProofState":"R : Type u_1\ninst✝¹ : CommSemiring R\ninst✝ : IsLocalRing R\nI : Ideal R\nhI : I.IsMaximal\n⊢ Eq I (IsLocalRing.maximalIdeal R)","decl":"@[deprecated (since := \"2024-11-11\")]\nalias LocalRing.eq_maximalIdeal := IsLocalRing.eq_maximalIdeal\n\n"}
{"name":"LocalRing.le_maximalIdeal","module":"Mathlib.RingTheory.LocalRing.MaximalIdeal.Basic","initialProofState":"R : Type u_1\ninst✝¹ : CommSemiring R\ninst✝ : IsLocalRing R\nJ : Ideal R\nhJ : Ne J Top.top\n⊢ LE.le J (IsLocalRing.maximalIdeal R)","decl":"@[deprecated (since := \"2024-11-11\")]\nalias LocalRing.le_maximalIdeal := IsLocalRing.le_maximalIdeal\n\n"}
{"name":"LocalRing.mem_maximalIdeal","module":"Mathlib.RingTheory.LocalRing.MaximalIdeal.Basic","initialProofState":"R : Type u_1\ninst✝¹ : CommSemiring R\ninst✝ : IsLocalRing R\nx : R\n⊢ Iff (Membership.mem (IsLocalRing.maximalIdeal R) x) (Membership.mem (nonunits R) x)","decl":"@[deprecated (since := \"2024-11-11\")]\nalias LocalRing.mem_maximalIdeal := IsLocalRing.mem_maximalIdeal\n\n"}
{"name":"LocalRing.not_mem_maximalIdeal","module":"Mathlib.RingTheory.LocalRing.MaximalIdeal.Basic","initialProofState":"R : Type u_1\ninst✝¹ : CommSemiring R\ninst✝ : IsLocalRing R\nx : R\n⊢ Iff (Not (Membership.mem (IsLocalRing.maximalIdeal R) x)) (IsUnit x)","decl":"@[deprecated (since := \"2024-11-11\")]\nalias LocalRing.not_mem_maximalIdeal := IsLocalRing.not_mem_maximalIdeal\n\n"}
{"name":"LocalRing.isField_iff_maximalIdeal_eq","module":"Mathlib.RingTheory.LocalRing.MaximalIdeal.Basic","initialProofState":"R : Type u_1\ninst✝¹ : CommSemiring R\ninst✝ : IsLocalRing R\n⊢ Iff (IsField R) (Eq (IsLocalRing.maximalIdeal R) Bot.bot)","decl":"@[deprecated (since := \"2024-11-11\")]\nalias LocalRing.isField_iff_maximalIdeal_eq := IsLocalRing.isField_iff_maximalIdeal_eq\n\n"}
{"name":"IsLocalRing.maximalIdeal_le_jacobson","module":"Mathlib.RingTheory.LocalRing.MaximalIdeal.Basic","initialProofState":"R : Type u_1\ninst✝¹ : CommRing R\ninst✝ : IsLocalRing R\nI : Ideal R\n⊢ LE.le (IsLocalRing.maximalIdeal R) I.jacobson","decl":"theorem maximalIdeal_le_jacobson (I : Ideal R) :\n    IsLocalRing.maximalIdeal R ≤ I.jacobson :=\n  le_sInf fun _ ⟨_, h⟩ => le_of_eq (IsLocalRing.eq_maximalIdeal h).symm\n\n"}
{"name":"IsLocalRing.jacobson_eq_maximalIdeal","module":"Mathlib.RingTheory.LocalRing.MaximalIdeal.Basic","initialProofState":"R : Type u_1\ninst✝¹ : CommRing R\ninst✝ : IsLocalRing R\nI : Ideal R\nh : Ne I Top.top\n⊢ Eq I.jacobson (IsLocalRing.maximalIdeal R)","decl":"theorem jacobson_eq_maximalIdeal (I : Ideal R) (h : I ≠ ⊤) :\n    I.jacobson = IsLocalRing.maximalIdeal R :=\n  le_antisymm (sInf_le ⟨le_maximalIdeal h, maximalIdeal.isMaximal R⟩)\n              (maximalIdeal_le_jacobson I)\n\n"}
{"name":"LocalRing.maximalIdeal_le_jacobson","module":"Mathlib.RingTheory.LocalRing.MaximalIdeal.Basic","initialProofState":"R : Type u_1\ninst✝¹ : CommRing R\ninst✝ : IsLocalRing R\nI : Ideal R\n⊢ LE.le (IsLocalRing.maximalIdeal R) I.jacobson","decl":"@[deprecated (since := \"2024-11-11\")]\nalias LocalRing.maximalIdeal_le_jacobson := IsLocalRing.maximalIdeal_le_jacobson\n\n"}
{"name":"LocalRing.jacobson_eq_maximalIdeal","module":"Mathlib.RingTheory.LocalRing.MaximalIdeal.Basic","initialProofState":"R : Type u_1\ninst✝¹ : CommRing R\ninst✝ : IsLocalRing R\nI : Ideal R\nh : Ne I Top.top\n⊢ Eq I.jacobson (IsLocalRing.maximalIdeal R)","decl":"@[deprecated (since := \"2024-11-11\")]\nalias LocalRing.jacobson_eq_maximalIdeal := IsLocalRing.jacobson_eq_maximalIdeal\n\n"}
{"name":"IsLocalRing.ker_eq_maximalIdeal","module":"Mathlib.RingTheory.LocalRing.MaximalIdeal.Basic","initialProofState":"R : Type u_1\nK : Type u_3\ninst✝² : CommRing R\ninst✝¹ : IsLocalRing R\ninst✝ : Field K\nφ : RingHom R K\nhφ : Function.Surjective ⇑φ\n⊢ Eq (RingHom.ker φ) (IsLocalRing.maximalIdeal R)","decl":"theorem ker_eq_maximalIdeal [Field K] (φ : R →+* K) (hφ : Function.Surjective φ) :\n    RingHom.ker φ = maximalIdeal R :=\n  IsLocalRing.eq_maximalIdeal <| (RingHom.ker_isMaximal_of_surjective φ) hφ\n\n"}
{"name":"IsLocalRing.maximalIdeal_eq_bot","module":"Mathlib.RingTheory.LocalRing.MaximalIdeal.Basic","initialProofState":"R : Type u_4\ninst✝ : Field R\n⊢ Eq (IsLocalRing.maximalIdeal R) Bot.bot","decl":"theorem IsLocalRing.maximalIdeal_eq_bot {R : Type*} [Field R] : IsLocalRing.maximalIdeal R = ⊥ :=\n  IsLocalRing.isField_iff_maximalIdeal_eq.mp (Field.toIsField R)\n\n"}
{"name":"LocalRing.ker_eq_maximalIdeal","module":"Mathlib.RingTheory.LocalRing.MaximalIdeal.Basic","initialProofState":"R : Type u_1\nK : Type u_3\ninst✝² : CommRing R\ninst✝¹ : IsLocalRing R\ninst✝ : Field K\nφ : RingHom R K\nhφ : Function.Surjective ⇑φ\n⊢ Eq (RingHom.ker φ) (IsLocalRing.maximalIdeal R)","decl":"@[deprecated (since := \"2024-11-09\")]\nalias LocalRing.ker_eq_maximalIdeal := IsLocalRing.ker_eq_maximalIdeal\n\n"}
{"name":"LocalRing.maximalIdeal_eq_bot","module":"Mathlib.RingTheory.LocalRing.MaximalIdeal.Basic","initialProofState":"R : Type u_4\ninst✝ : Field R\n⊢ Eq (IsLocalRing.maximalIdeal R) Bot.bot","decl":"@[deprecated (since := \"2024-11-09\")]\nalias LocalRing.maximalIdeal_eq_bot := IsLocalRing.maximalIdeal_eq_bot\n\n"}
{"name":"IsLocalRing.of_nilradical_isMaximal","module":"Mathlib.RingTheory.LocalRing.MaximalIdeal.Basic","initialProofState":"R : Type u_4\ninst✝ : CommSemiring R\nh : (nilradical R).IsMaximal\n⊢ IsLocalRing R","decl":"theorem IsLocalRing.of_nilradical_isMaximal [h : (nilradical R).IsMaximal] :\n    IsLocalRing R := by\n  refine IsLocalRing.of_unique_max_ideal ⟨nilradical R, h, fun I hI ↦ ?_⟩\n  rw [nilradical_eq_sInf] at h ⊢\n  exact (IsMaximal.eq_of_le h hI.ne_top (sInf_le hI.isPrime)).symm\n\n"}
{"name":"LocalRing.of_nilradical_isMaximal","module":"Mathlib.RingTheory.LocalRing.MaximalIdeal.Basic","initialProofState":"R : Type u_4\ninst✝ : CommSemiring R\nh : (nilradical R).IsMaximal\n⊢ IsLocalRing R","decl":"@[deprecated (since := \"2024-11-09\")]\nalias LocalRing.of_nilradical_isMaximal := IsLocalRing.of_nilradical_isMaximal\n\n"}
