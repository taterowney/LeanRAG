{"name":"CategoryTheory.Pretopology.has_isos","module":"Mathlib.CategoryTheory.Sites.Pretopology","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Limits.HasPullbacks C\nself : CategoryTheory.Pretopology C\nX Y : C\nf : Quiver.Hom Y X\ninst✝ : CategoryTheory.IsIso f\n⊢ Membership.mem (self.coverings X) (CategoryTheory.Presieve.singleton f)","decl":"/--\nA (Grothendieck) pretopology on `C` consists of a collection of families of morphisms with a fixed\ntarget `X` for every object `X` in `C`, called \"coverings\" of `X`, which satisfies the following\nthree axioms:\n1. Every family consisting of a single isomorphism is a covering family.\n2. The collection of covering families is stable under pullback.\n3. Given a covering family, and a covering family on each domain of the former, the composition\n   is a covering family.\n\nIn some sense, a pretopology can be seen as Grothendieck topology with weaker saturation conditions,\nin that each covering is not necessarily downward closed.\n\nSee: https://ncatlab.org/nlab/show/Grothendieck+pretopology or [MM92] Chapter III,\nSection 2, Definition 2. -/\n@[ext, stacks 00VH \"Note that Stacks calls a category together with a pretopology a site,\nand [MM92] calls this a basis for a topology.\"]\nstructure Pretopology where\n  coverings : ∀ X : C, Set (Presieve X)\n  has_isos : ∀ ⦃X Y⦄ (f : Y ⟶ X) [IsIso f], Presieve.singleton f ∈ coverings X\n  pullbacks : ∀ ⦃X Y⦄ (f : Y ⟶ X) (S), S ∈ coverings X → pullbackArrows f S ∈ coverings Y\n  transitive :\n    ∀ ⦃X : C⦄ (S : Presieve X) (Ti : ∀ ⦃Y⦄ (f : Y ⟶ X), S f → Presieve Y),\n      S ∈ coverings X → (∀ ⦃Y⦄ (f) (H : S f), Ti f H ∈ coverings Y) → S.bind Ti ∈ coverings X\n\n"}
{"name":"CategoryTheory.Pretopology.ext_iff","module":"Mathlib.CategoryTheory.Sites.Pretopology","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Limits.HasPullbacks C\nx y : CategoryTheory.Pretopology C\n⊢ Iff (Eq x y) (Eq x.coverings y.coverings)","decl":"/--\nA (Grothendieck) pretopology on `C` consists of a collection of families of morphisms with a fixed\ntarget `X` for every object `X` in `C`, called \"coverings\" of `X`, which satisfies the following\nthree axioms:\n1. Every family consisting of a single isomorphism is a covering family.\n2. The collection of covering families is stable under pullback.\n3. Given a covering family, and a covering family on each domain of the former, the composition\n   is a covering family.\n\nIn some sense, a pretopology can be seen as Grothendieck topology with weaker saturation conditions,\nin that each covering is not necessarily downward closed.\n\nSee: https://ncatlab.org/nlab/show/Grothendieck+pretopology or [MM92] Chapter III,\nSection 2, Definition 2. -/\n@[ext, stacks 00VH \"Note that Stacks calls a category together with a pretopology a site,\nand [MM92] calls this a basis for a topology.\"]\nstructure Pretopology where\n  coverings : ∀ X : C, Set (Presieve X)\n  has_isos : ∀ ⦃X Y⦄ (f : Y ⟶ X) [IsIso f], Presieve.singleton f ∈ coverings X\n  pullbacks : ∀ ⦃X Y⦄ (f : Y ⟶ X) (S), S ∈ coverings X → pullbackArrows f S ∈ coverings Y\n  transitive :\n    ∀ ⦃X : C⦄ (S : Presieve X) (Ti : ∀ ⦃Y⦄ (f : Y ⟶ X), S f → Presieve Y),\n      S ∈ coverings X → (∀ ⦃Y⦄ (f) (H : S f), Ti f H ∈ coverings Y) → S.bind Ti ∈ coverings X\n\n"}
{"name":"CategoryTheory.Pretopology.ext","module":"Mathlib.CategoryTheory.Sites.Pretopology","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Limits.HasPullbacks C\nx y : CategoryTheory.Pretopology C\ncoverings : Eq x.coverings y.coverings\n⊢ Eq x y","decl":"/--\nA (Grothendieck) pretopology on `C` consists of a collection of families of morphisms with a fixed\ntarget `X` for every object `X` in `C`, called \"coverings\" of `X`, which satisfies the following\nthree axioms:\n1. Every family consisting of a single isomorphism is a covering family.\n2. The collection of covering families is stable under pullback.\n3. Given a covering family, and a covering family on each domain of the former, the composition\n   is a covering family.\n\nIn some sense, a pretopology can be seen as Grothendieck topology with weaker saturation conditions,\nin that each covering is not necessarily downward closed.\n\nSee: https://ncatlab.org/nlab/show/Grothendieck+pretopology or [MM92] Chapter III,\nSection 2, Definition 2. -/\n@[ext, stacks 00VH \"Note that Stacks calls a category together with a pretopology a site,\nand [MM92] calls this a basis for a topology.\"]\nstructure Pretopology where\n  coverings : ∀ X : C, Set (Presieve X)\n  has_isos : ∀ ⦃X Y⦄ (f : Y ⟶ X) [IsIso f], Presieve.singleton f ∈ coverings X\n  pullbacks : ∀ ⦃X Y⦄ (f : Y ⟶ X) (S), S ∈ coverings X → pullbackArrows f S ∈ coverings Y\n  transitive :\n    ∀ ⦃X : C⦄ (S : Presieve X) (Ti : ∀ ⦃Y⦄ (f : Y ⟶ X), S f → Presieve Y),\n      S ∈ coverings X → (∀ ⦃Y⦄ (f) (H : S f), Ti f H ∈ coverings Y) → S.bind Ti ∈ coverings X\n\n"}
{"name":"CategoryTheory.Pretopology.transitive","module":"Mathlib.CategoryTheory.Sites.Pretopology","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Limits.HasPullbacks C\nself : CategoryTheory.Pretopology C\nX : C\nS : CategoryTheory.Presieve X\nTi : ⦃Y : C⦄ → (f : Quiver.Hom Y X) → S f → CategoryTheory.Presieve Y\na✝¹ : Membership.mem (self.coverings X) S\na✝ : ∀ ⦃Y : C⦄ (f : Quiver.Hom Y X) (H : S f), Membership.mem (self.coverings Y) (Ti f H)\n⊢ Membership.mem (self.coverings X) (S.bind Ti)","decl":"/--\nA (Grothendieck) pretopology on `C` consists of a collection of families of morphisms with a fixed\ntarget `X` for every object `X` in `C`, called \"coverings\" of `X`, which satisfies the following\nthree axioms:\n1. Every family consisting of a single isomorphism is a covering family.\n2. The collection of covering families is stable under pullback.\n3. Given a covering family, and a covering family on each domain of the former, the composition\n   is a covering family.\n\nIn some sense, a pretopology can be seen as Grothendieck topology with weaker saturation conditions,\nin that each covering is not necessarily downward closed.\n\nSee: https://ncatlab.org/nlab/show/Grothendieck+pretopology or [MM92] Chapter III,\nSection 2, Definition 2. -/\n@[ext, stacks 00VH \"Note that Stacks calls a category together with a pretopology a site,\nand [MM92] calls this a basis for a topology.\"]\nstructure Pretopology where\n  coverings : ∀ X : C, Set (Presieve X)\n  has_isos : ∀ ⦃X Y⦄ (f : Y ⟶ X) [IsIso f], Presieve.singleton f ∈ coverings X\n  pullbacks : ∀ ⦃X Y⦄ (f : Y ⟶ X) (S), S ∈ coverings X → pullbackArrows f S ∈ coverings Y\n  transitive :\n    ∀ ⦃X : C⦄ (S : Presieve X) (Ti : ∀ ⦃Y⦄ (f : Y ⟶ X), S f → Presieve Y),\n      S ∈ coverings X → (∀ ⦃Y⦄ (f) (H : S f), Ti f H ∈ coverings Y) → S.bind Ti ∈ coverings X\n\n"}
{"name":"CategoryTheory.Pretopology.mk.injEq","module":"Mathlib.CategoryTheory.Sites.Pretopology","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Limits.HasPullbacks C\ncoverings✝ : (X : C) → Set (CategoryTheory.Presieve X)\nhas_isos✝ : ∀ ⦃X Y : C⦄ (f : Quiver.Hom Y X) [inst : CategoryTheory.IsIso f], Membership.mem (coverings✝ X) (CategoryTheory.Presieve.singleton f)\npullbacks✝ : ∀ ⦃X Y : C⦄ (f : Quiver.Hom Y X) (S : CategoryTheory.Presieve X), Membership.mem (coverings✝ X) S → Membership.mem (coverings✝ Y) (CategoryTheory.Presieve.pullbackArrows f S)\ntransitive✝ : ∀ ⦃X : C⦄ (S : CategoryTheory.Presieve X) (Ti : ⦃Y : C⦄ → (f : Quiver.Hom Y X) → S f → CategoryTheory.Presieve Y), Membership.mem (coverings✝ X) S → (∀ ⦃Y : C⦄ (f : Quiver.Hom Y X) (H : S f), Membership.mem (coverings✝ Y) (Ti f H)) → Membership.mem (coverings✝ X) (S.bind Ti)\ncoverings : (X : C) → Set (CategoryTheory.Presieve X)\nhas_isos : ∀ ⦃X Y : C⦄ (f : Quiver.Hom Y X) [inst : CategoryTheory.IsIso f], Membership.mem (coverings X) (CategoryTheory.Presieve.singleton f)\npullbacks : ∀ ⦃X Y : C⦄ (f : Quiver.Hom Y X) (S : CategoryTheory.Presieve X), Membership.mem (coverings X) S → Membership.mem (coverings Y) (CategoryTheory.Presieve.pullbackArrows f S)\ntransitive : ∀ ⦃X : C⦄ (S : CategoryTheory.Presieve X) (Ti : ⦃Y : C⦄ → (f : Quiver.Hom Y X) → S f → CategoryTheory.Presieve Y), Membership.mem (coverings X) S → (∀ ⦃Y : C⦄ (f : Quiver.Hom Y X) (H : S f), Membership.mem (coverings Y) (Ti f H)) → Membership.mem (coverings X) (S.bind Ti)\n⊢ Eq (Eq { coverings := coverings✝, has_isos := has_isos✝, pullbacks := pullbacks✝, transitive := transitive✝ } { coverings := coverings, has_isos := has_isos, pullbacks := pullbacks, transitive := transitive }) (Eq coverings✝ coverings)","decl":"/--\nA (Grothendieck) pretopology on `C` consists of a collection of families of morphisms with a fixed\ntarget `X` for every object `X` in `C`, called \"coverings\" of `X`, which satisfies the following\nthree axioms:\n1. Every family consisting of a single isomorphism is a covering family.\n2. The collection of covering families is stable under pullback.\n3. Given a covering family, and a covering family on each domain of the former, the composition\n   is a covering family.\n\nIn some sense, a pretopology can be seen as Grothendieck topology with weaker saturation conditions,\nin that each covering is not necessarily downward closed.\n\nSee: https://ncatlab.org/nlab/show/Grothendieck+pretopology or [MM92] Chapter III,\nSection 2, Definition 2. -/\n@[ext, stacks 00VH \"Note that Stacks calls a category together with a pretopology a site,\nand [MM92] calls this a basis for a topology.\"]\nstructure Pretopology where\n  coverings : ∀ X : C, Set (Presieve X)\n  has_isos : ∀ ⦃X Y⦄ (f : Y ⟶ X) [IsIso f], Presieve.singleton f ∈ coverings X\n  pullbacks : ∀ ⦃X Y⦄ (f : Y ⟶ X) (S), S ∈ coverings X → pullbackArrows f S ∈ coverings Y\n  transitive :\n    ∀ ⦃X : C⦄ (S : Presieve X) (Ti : ∀ ⦃Y⦄ (f : Y ⟶ X), S f → Presieve Y),\n      S ∈ coverings X → (∀ ⦃Y⦄ (f) (H : S f), Ti f H ∈ coverings Y) → S.bind Ti ∈ coverings X\n\n"}
{"name":"CategoryTheory.Pretopology.pullbacks","module":"Mathlib.CategoryTheory.Sites.Pretopology","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Limits.HasPullbacks C\nself : CategoryTheory.Pretopology C\nX Y : C\nf : Quiver.Hom Y X\nS : CategoryTheory.Presieve X\na✝ : Membership.mem (self.coverings X) S\n⊢ Membership.mem (self.coverings Y) (CategoryTheory.Presieve.pullbackArrows f S)","decl":"/--\nA (Grothendieck) pretopology on `C` consists of a collection of families of morphisms with a fixed\ntarget `X` for every object `X` in `C`, called \"coverings\" of `X`, which satisfies the following\nthree axioms:\n1. Every family consisting of a single isomorphism is a covering family.\n2. The collection of covering families is stable under pullback.\n3. Given a covering family, and a covering family on each domain of the former, the composition\n   is a covering family.\n\nIn some sense, a pretopology can be seen as Grothendieck topology with weaker saturation conditions,\nin that each covering is not necessarily downward closed.\n\nSee: https://ncatlab.org/nlab/show/Grothendieck+pretopology or [MM92] Chapter III,\nSection 2, Definition 2. -/\n@[ext, stacks 00VH \"Note that Stacks calls a category together with a pretopology a site,\nand [MM92] calls this a basis for a topology.\"]\nstructure Pretopology where\n  coverings : ∀ X : C, Set (Presieve X)\n  has_isos : ∀ ⦃X Y⦄ (f : Y ⟶ X) [IsIso f], Presieve.singleton f ∈ coverings X\n  pullbacks : ∀ ⦃X Y⦄ (f : Y ⟶ X) (S), S ∈ coverings X → pullbackArrows f S ∈ coverings Y\n  transitive :\n    ∀ ⦃X : C⦄ (S : Presieve X) (Ti : ∀ ⦃Y⦄ (f : Y ⟶ X), S f → Presieve Y),\n      S ∈ coverings X → (∀ ⦃Y⦄ (f) (H : S f), Ti f H ∈ coverings Y) → S.bind Ti ∈ coverings X\n\n"}
{"name":"CategoryTheory.Pretopology.mk.inj","module":"Mathlib.CategoryTheory.Sites.Pretopology","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Limits.HasPullbacks C\ncoverings✝ : (X : C) → Set (CategoryTheory.Presieve X)\nhas_isos✝ : ∀ ⦃X Y : C⦄ (f : Quiver.Hom Y X) [inst : CategoryTheory.IsIso f], Membership.mem (coverings✝ X) (CategoryTheory.Presieve.singleton f)\npullbacks✝ : ∀ ⦃X Y : C⦄ (f : Quiver.Hom Y X) (S : CategoryTheory.Presieve X), Membership.mem (coverings✝ X) S → Membership.mem (coverings✝ Y) (CategoryTheory.Presieve.pullbackArrows f S)\ntransitive✝ : ∀ ⦃X : C⦄ (S : CategoryTheory.Presieve X) (Ti : ⦃Y : C⦄ → (f : Quiver.Hom Y X) → S f → CategoryTheory.Presieve Y), Membership.mem (coverings✝ X) S → (∀ ⦃Y : C⦄ (f : Quiver.Hom Y X) (H : S f), Membership.mem (coverings✝ Y) (Ti f H)) → Membership.mem (coverings✝ X) (S.bind Ti)\ncoverings : (X : C) → Set (CategoryTheory.Presieve X)\nhas_isos : ∀ ⦃X Y : C⦄ (f : Quiver.Hom Y X) [inst : CategoryTheory.IsIso f], Membership.mem (coverings X) (CategoryTheory.Presieve.singleton f)\npullbacks : ∀ ⦃X Y : C⦄ (f : Quiver.Hom Y X) (S : CategoryTheory.Presieve X), Membership.mem (coverings X) S → Membership.mem (coverings Y) (CategoryTheory.Presieve.pullbackArrows f S)\ntransitive : ∀ ⦃X : C⦄ (S : CategoryTheory.Presieve X) (Ti : ⦃Y : C⦄ → (f : Quiver.Hom Y X) → S f → CategoryTheory.Presieve Y), Membership.mem (coverings X) S → (∀ ⦃Y : C⦄ (f : Quiver.Hom Y X) (H : S f), Membership.mem (coverings Y) (Ti f H)) → Membership.mem (coverings X) (S.bind Ti)\nx✝ : Eq { coverings := coverings✝, has_isos := has_isos✝, pullbacks := pullbacks✝, transitive := transitive✝ } { coverings := coverings, has_isos := has_isos, pullbacks := pullbacks, transitive := transitive }\n⊢ Eq coverings✝ coverings","decl":"/--\nA (Grothendieck) pretopology on `C` consists of a collection of families of morphisms with a fixed\ntarget `X` for every object `X` in `C`, called \"coverings\" of `X`, which satisfies the following\nthree axioms:\n1. Every family consisting of a single isomorphism is a covering family.\n2. The collection of covering families is stable under pullback.\n3. Given a covering family, and a covering family on each domain of the former, the composition\n   is a covering family.\n\nIn some sense, a pretopology can be seen as Grothendieck topology with weaker saturation conditions,\nin that each covering is not necessarily downward closed.\n\nSee: https://ncatlab.org/nlab/show/Grothendieck+pretopology or [MM92] Chapter III,\nSection 2, Definition 2. -/\n@[ext, stacks 00VH \"Note that Stacks calls a category together with a pretopology a site,\nand [MM92] calls this a basis for a topology.\"]\nstructure Pretopology where\n  coverings : ∀ X : C, Set (Presieve X)\n  has_isos : ∀ ⦃X Y⦄ (f : Y ⟶ X) [IsIso f], Presieve.singleton f ∈ coverings X\n  pullbacks : ∀ ⦃X Y⦄ (f : Y ⟶ X) (S), S ∈ coverings X → pullbackArrows f S ∈ coverings Y\n  transitive :\n    ∀ ⦃X : C⦄ (S : Presieve X) (Ti : ∀ ⦃Y⦄ (f : Y ⟶ X), S f → Presieve Y),\n      S ∈ coverings X → (∀ ⦃Y⦄ (f) (H : S f), Ti f H ∈ coverings Y) → S.bind Ti ∈ coverings X\n\n"}
{"name":"CategoryTheory.Pretopology.mk.sizeOf_spec","module":"Mathlib.CategoryTheory.Sites.Pretopology","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Limits.HasPullbacks C\ninst✝ : SizeOf C\ncoverings : (X : C) → Set (CategoryTheory.Presieve X)\nhas_isos : ∀ ⦃X Y : C⦄ (f : Quiver.Hom Y X) [inst : CategoryTheory.IsIso f], Membership.mem (coverings X) (CategoryTheory.Presieve.singleton f)\npullbacks : ∀ ⦃X Y : C⦄ (f : Quiver.Hom Y X) (S : CategoryTheory.Presieve X), Membership.mem (coverings X) S → Membership.mem (coverings Y) (CategoryTheory.Presieve.pullbackArrows f S)\ntransitive : ∀ ⦃X : C⦄ (S : CategoryTheory.Presieve X) (Ti : ⦃Y : C⦄ → (f : Quiver.Hom Y X) → S f → CategoryTheory.Presieve Y), Membership.mem (coverings X) S → (∀ ⦃Y : C⦄ (f : Quiver.Hom Y X) (H : S f), Membership.mem (coverings Y) (Ti f H)) → Membership.mem (coverings X) (S.bind Ti)\n⊢ Eq (SizeOf.sizeOf { coverings := coverings, has_isos := has_isos, pullbacks := pullbacks, transitive := transitive }) 1","decl":"/--\nA (Grothendieck) pretopology on `C` consists of a collection of families of morphisms with a fixed\ntarget `X` for every object `X` in `C`, called \"coverings\" of `X`, which satisfies the following\nthree axioms:\n1. Every family consisting of a single isomorphism is a covering family.\n2. The collection of covering families is stable under pullback.\n3. Given a covering family, and a covering family on each domain of the former, the composition\n   is a covering family.\n\nIn some sense, a pretopology can be seen as Grothendieck topology with weaker saturation conditions,\nin that each covering is not necessarily downward closed.\n\nSee: https://ncatlab.org/nlab/show/Grothendieck+pretopology or [MM92] Chapter III,\nSection 2, Definition 2. -/\n@[ext, stacks 00VH \"Note that Stacks calls a category together with a pretopology a site,\nand [MM92] calls this a basis for a topology.\"]\nstructure Pretopology where\n  coverings : ∀ X : C, Set (Presieve X)\n  has_isos : ∀ ⦃X Y⦄ (f : Y ⟶ X) [IsIso f], Presieve.singleton f ∈ coverings X\n  pullbacks : ∀ ⦃X Y⦄ (f : Y ⟶ X) (S), S ∈ coverings X → pullbackArrows f S ∈ coverings Y\n  transitive :\n    ∀ ⦃X : C⦄ (S : Presieve X) (Ti : ∀ ⦃Y⦄ (f : Y ⟶ X), S f → Presieve Y),\n      S ∈ coverings X → (∀ ⦃Y⦄ (f) (H : S f), Ti f H ∈ coverings Y) → S.bind Ti ∈ coverings X\n\n"}
{"name":"CategoryTheory.Pretopology.le_def","module":"Mathlib.CategoryTheory.Sites.Pretopology","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Limits.HasPullbacks C\nK₁ K₂ : CategoryTheory.Pretopology C\n⊢ Iff (LE.le K₁ K₂) (LE.le K₁.coverings K₂.coverings)","decl":"theorem le_def {K₁ K₂ : Pretopology C} : K₁ ≤ K₂ ↔ (K₁ : ∀ X : C, Set (Presieve X)) ≤ K₂ :=\n  Iff.rfl\n\n"}
{"name":"CategoryTheory.Pretopology.mem_toGrothendieck","module":"Mathlib.CategoryTheory.Sites.Pretopology","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Limits.HasPullbacks C\nK : CategoryTheory.Pretopology C\nX : C\nS : CategoryTheory.Sieve X\n⊢ Iff (Membership.mem ((CategoryTheory.Pretopology.toGrothendieck C K) X) S) (Exists fun R => And (Membership.mem (K.coverings X) R) (LE.le R S.arrows))","decl":"theorem mem_toGrothendieck (K : Pretopology C) (X S) :\n    S ∈ toGrothendieck C K X ↔ ∃ R ∈ K X, R ≤ (S : Presieve X) :=\n  Iff.rfl\n\n"}
{"name":"CategoryTheory.Pretopology.mem_ofGrothendieck","module":"Mathlib.CategoryTheory.Sites.Pretopology","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Limits.HasPullbacks C\nt : CategoryTheory.GrothendieckTopology C\nX : C\nS : CategoryTheory.Presieve X\n⊢ Iff (Membership.mem ((CategoryTheory.Pretopology.ofGrothendieck C t).coverings X) S) (Membership.mem (t X) (CategoryTheory.Sieve.generate S))","decl":"lemma mem_ofGrothendieck (t : GrothendieckTopology C) {X : C} (S : Presieve X) :\n    S ∈ ofGrothendieck C t X ↔ Sieve.generate S ∈ t X :=\n  Iff.rfl\n\n"}
{"name":"CategoryTheory.Pretopology.toGrothendieck_bot","module":"Mathlib.CategoryTheory.Sites.Pretopology","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Limits.HasPullbacks C\n⊢ Eq (CategoryTheory.Pretopology.toGrothendieck C Bot.bot) Bot.bot","decl":"/-- The trivial pretopology induces the trivial grothendieck topology. -/\ntheorem toGrothendieck_bot : toGrothendieck C ⊥ = ⊥ :=\n  (gi C).gc.l_bot\n\n"}
{"name":"CategoryTheory.Pretopology.mem_sInf","module":"Mathlib.CategoryTheory.Sites.Pretopology","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Limits.HasPullbacks C\nT : Set (CategoryTheory.Pretopology C)\nX : C\nS : CategoryTheory.Presieve X\n⊢ Iff (Membership.mem ((InfSet.sInf T).coverings X) S) (∀ (t : CategoryTheory.Pretopology C), Membership.mem T t → Membership.mem (t.coverings X) S)","decl":"lemma mem_sInf (T : Set (Pretopology C)) {X : C} (S : Presieve X) :\n    S ∈ sInf T X ↔ ∀ t ∈ T, S ∈ t X := by\n  show S ∈ sInf (Pretopology.coverings '' T) X ↔ _\n  simp\n\n"}
{"name":"CategoryTheory.Pretopology.sInf_ofGrothendieck","module":"Mathlib.CategoryTheory.Sites.Pretopology","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Limits.HasPullbacks C\nT : Set (CategoryTheory.GrothendieckTopology C)\n⊢ Eq (CategoryTheory.Pretopology.ofGrothendieck C (InfSet.sInf T)) (InfSet.sInf (Set.image (CategoryTheory.Pretopology.ofGrothendieck C) T))","decl":"lemma sInf_ofGrothendieck (T : Set (GrothendieckTopology C)) :\n    ofGrothendieck C (sInf T) = sInf (ofGrothendieck C '' T) := by\n  ext X S\n  simp [mem_sInf, mem_ofGrothendieck, GrothendieckTopology.mem_sInf]\n\n"}
{"name":"CategoryTheory.Pretopology.isGLB_sInf","module":"Mathlib.CategoryTheory.Sites.Pretopology","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Limits.HasPullbacks C\nT : Set (CategoryTheory.Pretopology C)\n⊢ IsGLB T (InfSet.sInf T)","decl":"lemma isGLB_sInf (T : Set (Pretopology C)) : IsGLB T (sInf T) :=\n  IsGLB.of_image (f := coverings) Iff.rfl (_root_.isGLB_sInf _)\n\n"}
{"name":"CategoryTheory.Pretopology.mem_inf","module":"Mathlib.CategoryTheory.Sites.Pretopology","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Limits.HasPullbacks C\nt₁ t₂ : CategoryTheory.Pretopology C\nX : C\nS : CategoryTheory.Presieve X\n⊢ Iff (Membership.mem ((Min.min t₁ t₂).coverings X) S) (And (Membership.mem (t₁.coverings X) S) (Membership.mem (t₂.coverings X) S))","decl":"lemma mem_inf (t₁ t₂ : Pretopology C) {X : C} (S : Presieve X) :\n    S ∈ (t₁ ⊓ t₂) X ↔ S ∈ t₁ X ∧ S ∈ t₂ X :=\n  Iff.rfl\n\n"}
