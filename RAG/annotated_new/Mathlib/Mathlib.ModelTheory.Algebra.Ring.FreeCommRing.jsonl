{"name":"FirstOrder.Ring.realize_termOfFreeCommRing","module":"Mathlib.ModelTheory.Algebra.Ring.FreeCommRing","initialProofState":"α : Type u_1\nR : Type u_2\ninst✝¹ : CommRing R\ninst✝ : FirstOrder.Ring.CompatibleRing R\np : FreeCommRing α\nv : α → R\n⊢ Eq (FirstOrder.Language.Term.realize v (FirstOrder.Ring.termOfFreeCommRing p)) ((FreeCommRing.lift v) p)","decl":"@[simp]\ntheorem realize_termOfFreeCommRing (p : FreeCommRing α) (v : α → R) :\n    (termOfFreeCommRing p).realize v = FreeCommRing.lift v p := by\n  let _ := compatibleRingOfRing (FreeCommRing α)\n  rw [termOfFreeCommRing]\n  conv_rhs => rw [← Classical.choose_spec (exists_term_realize_eq_freeCommRing p)]\n  induction Classical.choose (exists_term_realize_eq_freeCommRing p) with\n  | var _ => simp\n  | func f a ih =>\n    cases f <;>\n    simp [ih]\n\n"}
