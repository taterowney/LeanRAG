{"name":"MulAction.supports_of_mem","module":"Mathlib.GroupTheory.GroupAction.Support","initialProofState":"G : Type u_1\nα : Type u_3\ninst✝ : SMul G α\ns : Set α\na : α\nha : Membership.mem s a\n⊢ MulAction.Supports G s a","decl":"@[to_additive]\ntheorem supports_of_mem (ha : a ∈ s) : Supports G s a := fun _ h => h ha\n\n"}
{"name":"AddAction.supports_of_mem","module":"Mathlib.GroupTheory.GroupAction.Support","initialProofState":"G : Type u_1\nα : Type u_3\ninst✝ : VAdd G α\ns : Set α\na : α\nha : Membership.mem s a\n⊢ AddAction.Supports G s a","decl":"@[to_additive]\ntheorem supports_of_mem (ha : a ∈ s) : Supports G s a := fun _ h => h ha\n\n"}
{"name":"MulAction.Supports.mono","module":"Mathlib.GroupTheory.GroupAction.Support","initialProofState":"G : Type u_1\nα : Type u_3\nβ : Type u_4\ninst✝¹ : SMul G α\ninst✝ : SMul G β\ns t : Set α\nb : β\nh : HasSubset.Subset s t\nhs : MulAction.Supports G s b\n⊢ MulAction.Supports G t b","decl":"@[to_additive]\ntheorem Supports.mono (h : s ⊆ t) (hs : Supports G s b) : Supports G t b := fun _ hg =>\n  (hs _) fun _ ha => hg <| h ha\n\n"}
{"name":"AddAction.Supports.mono","module":"Mathlib.GroupTheory.GroupAction.Support","initialProofState":"G : Type u_1\nα : Type u_3\nβ : Type u_4\ninst✝¹ : VAdd G α\ninst✝ : VAdd G β\ns t : Set α\nb : β\nh : HasSubset.Subset s t\nhs : AddAction.Supports G s b\n⊢ AddAction.Supports G t b","decl":"@[to_additive]\ntheorem Supports.mono (h : s ⊆ t) (hs : Supports G s b) : Supports G t b := fun _ hg =>\n  (hs _) fun _ ha => hg <| h ha\n\n"}
{"name":"AddAction.Supports.vadd","module":"Mathlib.GroupTheory.GroupAction.Support","initialProofState":"G : Type u_1\nH : Type u_2\nα : Type u_3\nβ : Type u_4\ninst✝⁶ : AddGroup H\ninst✝⁵ : VAdd G α\ninst✝⁴ : VAdd G β\ninst✝³ : AddAction H α\ninst✝² : VAdd H β\ninst✝¹ : VAddCommClass G H β\ninst✝ : VAddCommClass G H α\ns : Set α\nb : β\ng : H\nh : AddAction.Supports G s b\n⊢ AddAction.Supports G (HVAdd.hVAdd g s) (HVAdd.hVAdd g b)","decl":"@[to_additive]\ntheorem Supports.smul (g : H) (h : Supports G s b) : Supports G (g • s) (g • b) := by\n  rintro g' hg'\n  rw [smul_comm, h]\n  rintro a ha\n  have := Set.forall_mem_image.1 hg' ha\n  rwa [smul_comm, smul_left_cancel_iff] at this\n\n"}
{"name":"MulAction.Supports.smul","module":"Mathlib.GroupTheory.GroupAction.Support","initialProofState":"G : Type u_1\nH : Type u_2\nα : Type u_3\nβ : Type u_4\ninst✝⁶ : Group H\ninst✝⁵ : SMul G α\ninst✝⁴ : SMul G β\ninst✝³ : MulAction H α\ninst✝² : SMul H β\ninst✝¹ : SMulCommClass G H β\ninst✝ : SMulCommClass G H α\ns : Set α\nb : β\ng : H\nh : MulAction.Supports G s b\n⊢ MulAction.Supports G (HSMul.hSMul g s) (HSMul.hSMul g b)","decl":"@[to_additive]\ntheorem Supports.smul (g : H) (h : Supports G s b) : Supports G (g • s) (g • b) := by\n  rintro g' hg'\n  rw [smul_comm, h]\n  rintro a ha\n  have := Set.forall_mem_image.1 hg' ha\n  rwa [smul_comm, smul_left_cancel_iff] at this\n\n"}
