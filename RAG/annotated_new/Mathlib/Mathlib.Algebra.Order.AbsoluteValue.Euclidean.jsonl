{"name":"AbsoluteValue.IsEuclidean.map_lt_map_iff'","module":"Mathlib.Algebra.Order.AbsoluteValue.Euclidean","initialProofState":"R : Type u_1\nS : Type u_2\ninst✝¹ : EuclideanDomain R\ninst✝ : OrderedSemiring S\nabv : AbsoluteValue R S\nself : abv.IsEuclidean\nx y : R\n⊢ Iff (LT.lt (abv x) (abv y)) (EuclideanDomain.r x y)","decl":"/-- An absolute value `abv : R → S` is Euclidean if it is compatible with the\n`EuclideanDomain` structure on `R`, namely `abv` is strictly monotone with respect to the well\nfounded relation `≺` on `R`. -/\nstructure IsEuclidean : Prop where\n  /-- The requirement of a Euclidean absolute value\n  that `abv` is monotone with respect to `≺` -/\n  map_lt_map_iff' : ∀ {x y}, abv x < abv y ↔ x ≺ y\n\n"}
{"name":"AbsoluteValue.IsEuclidean.map_lt_map_iff","module":"Mathlib.Algebra.Order.AbsoluteValue.Euclidean","initialProofState":"R : Type u_1\nS : Type u_2\ninst✝¹ : EuclideanDomain R\ninst✝ : OrderedSemiring S\nabv : AbsoluteValue R S\nx y : R\nh : abv.IsEuclidean\n⊢ Iff (LT.lt (abv x) (abv y)) (EuclideanDomain.r x y)","decl":"theorem map_lt_map_iff {x y : R} (h : abv.IsEuclidean) : abv x < abv y ↔ x ≺ y :=\n  map_lt_map_iff' h\n\n"}
{"name":"AbsoluteValue.IsEuclidean.sub_mod_lt","module":"Mathlib.Algebra.Order.AbsoluteValue.Euclidean","initialProofState":"R : Type u_1\nS : Type u_2\ninst✝¹ : EuclideanDomain R\ninst✝ : OrderedSemiring S\nabv : AbsoluteValue R S\nh : abv.IsEuclidean\na b : R\nhb : Ne b 0\n⊢ LT.lt (abv (HMod.hMod a b)) (abv b)","decl":"theorem sub_mod_lt (h : abv.IsEuclidean) (a : R) {b : R} (hb : b ≠ 0) : abv (a % b) < abv b :=\n  h.map_lt_map_iff.mpr (EuclideanDomain.mod_lt a hb)\n\n"}
{"name":"AbsoluteValue.abs_isEuclidean","module":"Mathlib.Algebra.Order.AbsoluteValue.Euclidean","initialProofState":"⊢ AbsoluteValue.abs.IsEuclidean","decl":"/-- `abs : ℤ → ℤ` is a Euclidean absolute value -/\nprotected theorem abs_isEuclidean : IsEuclidean (AbsoluteValue.abs : AbsoluteValue ℤ ℤ) :=\n  {  map_lt_map_iff' := fun {x y} =>\n       show abs x < abs y ↔ natAbs x < natAbs y by rw [abs_eq_natAbs, abs_eq_natAbs, ofNat_lt] }\n\n"}
