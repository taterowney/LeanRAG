{"name":"smul_pi_subset","module":"Mathlib.Algebra.Module.PointwisePi","initialProofState":"K : Type u_1\nι : Type u_2\nR : ι → Type u_3\ninst✝ : (i : ι) → SMul K (R i)\nr : K\ns : Set ι\nt : (i : ι) → Set (R i)\n⊢ HasSubset.Subset (HSMul.hSMul r (s.pi t)) (s.pi (HSMul.hSMul r t))","decl":"@[to_additive]\ntheorem smul_pi_subset [∀ i, SMul K (R i)] (r : K) (s : Set ι) (t : ∀ i, Set (R i)) :\n    r • pi s t ⊆ pi s (r • t) := by\n  rintro x ⟨y, h, rfl⟩ i hi\n  exact smul_mem_smul_set (h i hi)\n\n-- Porting note: Lean 4 can't synthesize `Set.mem_univ i`?\n"}
{"name":"vadd_pi_subset","module":"Mathlib.Algebra.Module.PointwisePi","initialProofState":"K : Type u_1\nι : Type u_2\nR : ι → Type u_3\ninst✝ : (i : ι) → VAdd K (R i)\nr : K\ns : Set ι\nt : (i : ι) → Set (R i)\n⊢ HasSubset.Subset (HVAdd.hVAdd r (s.pi t)) (s.pi (HVAdd.hVAdd r t))","decl":"@[to_additive]\ntheorem smul_pi_subset [∀ i, SMul K (R i)] (r : K) (s : Set ι) (t : ∀ i, Set (R i)) :\n    r • pi s t ⊆ pi s (r • t) := by\n  rintro x ⟨y, h, rfl⟩ i hi\n  exact smul_mem_smul_set (h i hi)\n\n-- Porting note: Lean 4 can't synthesize `Set.mem_univ i`?\n"}
{"name":"vadd_univ_pi","module":"Mathlib.Algebra.Module.PointwisePi","initialProofState":"K : Type u_1\nι : Type u_2\nR : ι → Type u_3\ninst✝ : (i : ι) → VAdd K (R i)\nr : K\nt : (i : ι) → Set (R i)\n⊢ Eq (HVAdd.hVAdd r (Set.univ.pi t)) (Set.univ.pi (HVAdd.hVAdd r t))","decl":"@[to_additive]\ntheorem smul_univ_pi [∀ i, SMul K (R i)] (r : K) (t : ∀ i, Set (R i)) :\n    r • pi (univ : Set ι) t = pi (univ : Set ι) (r • t) :=\n  (Subset.antisymm (smul_pi_subset _ _ _)) fun x h ↦ by\n    refine ⟨fun i ↦ Classical.choose (h i <| Set.mem_univ _), fun i _ ↦ ?_, funext fun i ↦ ?_⟩\n    · exact (Classical.choose_spec (h i <| Set.mem_univ i)).left\n    · exact (Classical.choose_spec (h i <| Set.mem_univ i)).right\n\n"}
{"name":"smul_univ_pi","module":"Mathlib.Algebra.Module.PointwisePi","initialProofState":"K : Type u_1\nι : Type u_2\nR : ι → Type u_3\ninst✝ : (i : ι) → SMul K (R i)\nr : K\nt : (i : ι) → Set (R i)\n⊢ Eq (HSMul.hSMul r (Set.univ.pi t)) (Set.univ.pi (HSMul.hSMul r t))","decl":"@[to_additive]\ntheorem smul_univ_pi [∀ i, SMul K (R i)] (r : K) (t : ∀ i, Set (R i)) :\n    r • pi (univ : Set ι) t = pi (univ : Set ι) (r • t) :=\n  (Subset.antisymm (smul_pi_subset _ _ _)) fun x h ↦ by\n    refine ⟨fun i ↦ Classical.choose (h i <| Set.mem_univ _), fun i _ ↦ ?_, funext fun i ↦ ?_⟩\n    · exact (Classical.choose_spec (h i <| Set.mem_univ i)).left\n    · exact (Classical.choose_spec (h i <| Set.mem_univ i)).right\n\n"}
{"name":"vadd_pi","module":"Mathlib.Algebra.Module.PointwisePi","initialProofState":"K : Type u_1\nι : Type u_2\nR : ι → Type u_3\ninst✝¹ : AddGroup K\ninst✝ : (i : ι) → AddAction K (R i)\nr : K\nS : Set ι\nt : (i : ι) → Set (R i)\n⊢ Eq (HVAdd.hVAdd r (S.pi t)) (S.pi (HVAdd.hVAdd r t))","decl":"@[to_additive]\ntheorem smul_pi [Group K] [∀ i, MulAction K (R i)] (r : K) (S : Set ι) (t : ∀ i, Set (R i)) :\n    r • S.pi t = S.pi (r • t) :=\n  (Subset.antisymm (smul_pi_subset _ _ _)) fun x h ↦\n    ⟨r⁻¹ • x, fun i hiS ↦ mem_smul_set_iff_inv_smul_mem.mp (h i hiS), smul_inv_smul _ _⟩\n\n"}
{"name":"smul_pi","module":"Mathlib.Algebra.Module.PointwisePi","initialProofState":"K : Type u_1\nι : Type u_2\nR : ι → Type u_3\ninst✝¹ : Group K\ninst✝ : (i : ι) → MulAction K (R i)\nr : K\nS : Set ι\nt : (i : ι) → Set (R i)\n⊢ Eq (HSMul.hSMul r (S.pi t)) (S.pi (HSMul.hSMul r t))","decl":"@[to_additive]\ntheorem smul_pi [Group K] [∀ i, MulAction K (R i)] (r : K) (S : Set ι) (t : ∀ i, Set (R i)) :\n    r • S.pi t = S.pi (r • t) :=\n  (Subset.antisymm (smul_pi_subset _ _ _)) fun x h ↦\n    ⟨r⁻¹ • x, fun i hiS ↦ mem_smul_set_iff_inv_smul_mem.mp (h i hiS), smul_inv_smul _ _⟩\n\n"}
{"name":"smul_pi₀","module":"Mathlib.Algebra.Module.PointwisePi","initialProofState":"K : Type u_1\nι : Type u_2\nR : ι → Type u_3\ninst✝¹ : GroupWithZero K\ninst✝ : (i : ι) → MulAction K (R i)\nr : K\nS : Set ι\nt : (i : ι) → Set (R i)\nhr : Ne r 0\n⊢ Eq (HSMul.hSMul r (S.pi t)) (S.pi (HSMul.hSMul r t))","decl":"theorem smul_pi₀ [GroupWithZero K] [∀ i, MulAction K (R i)] {r : K} (S : Set ι) (t : ∀ i, Set (R i))\n    (hr : r ≠ 0) : r • S.pi t = S.pi (r • t) :=\n  smul_pi (Units.mk0 r hr) S t\n"}
