{"name":"add_tsub_cancel_of_le","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b : α\nh : LE.le a b\n⊢ Eq (HAdd.hAdd a (HSub.hSub b a)) b","decl":"@[simp]\ntheorem add_tsub_cancel_of_le (h : a ≤ b) : a + (b - a) = b := by\n  refine le_antisymm ?_ le_add_tsub\n  obtain ⟨c, rfl⟩ := exists_add_of_le h\n  exact add_le_add_left add_tsub_le_left a\n\n"}
{"name":"tsub_add_cancel_of_le","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b : α\nh : LE.le a b\n⊢ Eq (HAdd.hAdd (HSub.hSub b a) a) b","decl":"theorem tsub_add_cancel_of_le (h : a ≤ b) : b - a + a = b := by\n  rw [add_comm]\n  exact add_tsub_cancel_of_le h\n\n"}
{"name":"add_le_of_le_tsub_right_of_le","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c : α\nh : LE.le b c\nh2 : LE.le a (HSub.hSub c b)\n⊢ LE.le (HAdd.hAdd a b) c","decl":"theorem add_le_of_le_tsub_right_of_le (h : b ≤ c) (h2 : a ≤ c - b) : a + b ≤ c :=\n  (add_le_add_right h2 b).trans_eq <| tsub_add_cancel_of_le h\n\n"}
{"name":"add_le_of_le_tsub_left_of_le","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c : α\nh : LE.le a c\nh2 : LE.le b (HSub.hSub c a)\n⊢ LE.le (HAdd.hAdd a b) c","decl":"theorem add_le_of_le_tsub_left_of_le (h : a ≤ c) (h2 : b ≤ c - a) : a + b ≤ c :=\n  (add_le_add_left h2 a).trans_eq <| add_tsub_cancel_of_le h\n\n"}
{"name":"tsub_le_tsub_iff_right","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c : α\nh : LE.le c b\n⊢ Iff (LE.le (HSub.hSub a c) (HSub.hSub b c)) (LE.le a b)","decl":"theorem tsub_le_tsub_iff_right (h : c ≤ b) : a - c ≤ b - c ↔ a ≤ b := by\n  rw [tsub_le_iff_right, tsub_add_cancel_of_le h]\n\n"}
{"name":"tsub_left_inj","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c : α\nh1 : LE.le c a\nh2 : LE.le c b\n⊢ Iff (Eq (HSub.hSub a c) (HSub.hSub b c)) (Eq a b)","decl":"theorem tsub_left_inj (h1 : c ≤ a) (h2 : c ≤ b) : a - c = b - c ↔ a = b := by\n  simp_rw [le_antisymm_iff, tsub_le_tsub_iff_right h1, tsub_le_tsub_iff_right h2]\n\n"}
{"name":"tsub_inj_left","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c : α\nh₁ : LE.le a b\nh₂ : LE.le a c\na✝ : Eq (HSub.hSub b a) (HSub.hSub c a)\n⊢ Eq b c","decl":"theorem tsub_inj_left (h₁ : a ≤ b) (h₂ : a ≤ c) : b - a = c - a → b = c :=\n  (tsub_left_inj h₁ h₂).1\n\n"}
{"name":"lt_of_tsub_lt_tsub_right_of_le","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c : α\nh : LE.le c b\nh2 : LT.lt (HSub.hSub a c) (HSub.hSub b c)\n⊢ LT.lt a b","decl":"/-- See `lt_of_tsub_lt_tsub_right` for a stronger statement in a linear order. -/\ntheorem lt_of_tsub_lt_tsub_right_of_le (h : c ≤ b) (h2 : a - c < b - c) : a < b := by\n  refine ((tsub_le_tsub_iff_right h).mp h2.le).lt_of_ne ?_\n  rintro rfl\n  exact h2.false\n\n"}
{"name":"tsub_add_tsub_cancel","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c : α\nhab : LE.le b a\nhcb : LE.le c b\n⊢ Eq (HAdd.hAdd (HSub.hSub a b) (HSub.hSub b c)) (HSub.hSub a c)","decl":"theorem tsub_add_tsub_cancel (hab : b ≤ a) (hcb : c ≤ b) : a - b + (b - c) = a - c := by\n  convert tsub_add_cancel_of_le (tsub_le_tsub_right hab c) using 2\n  rw [tsub_tsub, add_tsub_cancel_of_le hcb]\n\n"}
{"name":"tsub_tsub_tsub_cancel_right","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c : α\nh : LE.le c b\n⊢ Eq (HSub.hSub (HSub.hSub a c) (HSub.hSub b c)) (HSub.hSub a b)","decl":"theorem tsub_tsub_tsub_cancel_right (h : c ≤ b) : a - c - (b - c) = a - b := by\n  rw [tsub_tsub, add_tsub_cancel_of_le h]\n\n"}
{"name":"AddLECancellable.eq_tsub_iff_add_eq_of_le","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c : α\nhc : AddLECancellable c\nh : LE.le c b\n⊢ Iff (Eq a (HSub.hSub b c)) (Eq (HAdd.hAdd a c) b)","decl":"protected theorem eq_tsub_iff_add_eq_of_le (hc : AddLECancellable c) (h : c ≤ b) :\n    a = b - c ↔ a + c = b :=\n  ⟨by\n    rintro rfl\n    exact tsub_add_cancel_of_le h, hc.eq_tsub_of_add_eq⟩\n\n"}
{"name":"AddLECancellable.tsub_eq_iff_eq_add_of_le","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c : α\nhb : AddLECancellable b\nh : LE.le b a\n⊢ Iff (Eq (HSub.hSub a b) c) (Eq a (HAdd.hAdd c b))","decl":"protected theorem tsub_eq_iff_eq_add_of_le (hb : AddLECancellable b) (h : b ≤ a) :\n    a - b = c ↔ a = c + b := by rw [eq_comm, hb.eq_tsub_iff_add_eq_of_le h, eq_comm]\n\n"}
{"name":"AddLECancellable.add_tsub_assoc_of_le","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\nb c : α\nhc : AddLECancellable c\nh : LE.le c b\na : α\n⊢ Eq (HSub.hSub (HAdd.hAdd a b) c) (HAdd.hAdd a (HSub.hSub b c))","decl":"protected theorem add_tsub_assoc_of_le (hc : AddLECancellable c) (h : c ≤ b) (a : α) :\n    a + b - c = a + (b - c) := by\n  conv_lhs => rw [← add_tsub_cancel_of_le h, add_comm c, ← add_assoc, hc.add_tsub_cancel_right]\n\n"}
{"name":"AddLECancellable.tsub_add_eq_add_tsub","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c : α\nhb : AddLECancellable b\nh : LE.le b a\n⊢ Eq (HAdd.hAdd (HSub.hSub a b) c) (HSub.hSub (HAdd.hAdd a c) b)","decl":"protected theorem tsub_add_eq_add_tsub (hb : AddLECancellable b) (h : b ≤ a) :\n    a - b + c = a + c - b := by rw [add_comm a, hb.add_tsub_assoc_of_le h, add_comm]\n\n"}
{"name":"AddLECancellable.tsub_tsub_assoc","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c : α\nhbc : AddLECancellable (HSub.hSub b c)\nh₁ : LE.le b a\nh₂ : LE.le c b\n⊢ Eq (HSub.hSub a (HSub.hSub b c)) (HAdd.hAdd (HSub.hSub a b) c)","decl":"protected theorem tsub_tsub_assoc (hbc : AddLECancellable (b - c)) (h₁ : b ≤ a) (h₂ : c ≤ b) :\n    a - (b - c) = a - b + c :=\n  hbc.tsub_eq_of_eq_add <| by rw [add_assoc, add_tsub_cancel_of_le h₂, tsub_add_cancel_of_le h₁]\n\n"}
{"name":"AddLECancellable.tsub_add_tsub_comm","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c d : α\nhb : AddLECancellable b\nhd : AddLECancellable d\nhba : LE.le b a\nhdc : LE.le d c\n⊢ Eq (HAdd.hAdd (HSub.hSub a b) (HSub.hSub c d)) (HSub.hSub (HAdd.hAdd a c) (HAdd.hAdd b d))","decl":"protected theorem tsub_add_tsub_comm (hb : AddLECancellable b) (hd : AddLECancellable d)\n    (hba : b ≤ a) (hdc : d ≤ c) : a - b + (c - d) = a + c - (b + d) := by\n  rw [hb.tsub_add_eq_add_tsub hba, ← hd.add_tsub_assoc_of_le hdc, tsub_tsub, add_comm d]\n\n"}
{"name":"AddLECancellable.le_tsub_iff_left","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c : α\nha : AddLECancellable a\nh : LE.le a c\n⊢ Iff (LE.le b (HSub.hSub c a)) (LE.le (HAdd.hAdd a b) c)","decl":"protected theorem le_tsub_iff_left (ha : AddLECancellable a) (h : a ≤ c) : b ≤ c - a ↔ a + b ≤ c :=\n  ⟨add_le_of_le_tsub_left_of_le h, ha.le_tsub_of_add_le_left⟩\n\n"}
{"name":"AddLECancellable.le_tsub_iff_right","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c : α\nha : AddLECancellable a\nh : LE.le a c\n⊢ Iff (LE.le b (HSub.hSub c a)) (LE.le (HAdd.hAdd b a) c)","decl":"protected theorem le_tsub_iff_right (ha : AddLECancellable a) (h : a ≤ c) :\n    b ≤ c - a ↔ b + a ≤ c := by\n  rw [add_comm]\n  exact ha.le_tsub_iff_left h\n\n"}
{"name":"AddLECancellable.tsub_lt_iff_left","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c : α\nhb : AddLECancellable b\nhba : LE.le b a\n⊢ Iff (LT.lt (HSub.hSub a b) c) (LT.lt a (HAdd.hAdd b c))","decl":"protected theorem tsub_lt_iff_left (hb : AddLECancellable b) (hba : b ≤ a) :\n    a - b < c ↔ a < b + c := by\n  refine ⟨hb.lt_add_of_tsub_lt_left, ?_⟩\n  intro h; refine (tsub_le_iff_left.mpr h.le).lt_of_ne ?_\n  rintro rfl; exact h.ne' (add_tsub_cancel_of_le hba)\n\n"}
{"name":"AddLECancellable.tsub_lt_iff_right","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c : α\nhb : AddLECancellable b\nhba : LE.le b a\n⊢ Iff (LT.lt (HSub.hSub a b) c) (LT.lt a (HAdd.hAdd c b))","decl":"protected theorem tsub_lt_iff_right (hb : AddLECancellable b) (hba : b ≤ a) :\n    a - b < c ↔ a < c + b := by\n  rw [add_comm]\n  exact hb.tsub_lt_iff_left hba\n\n"}
{"name":"AddLECancellable.tsub_lt_iff_tsub_lt","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c : α\nhb : AddLECancellable b\nhc : AddLECancellable c\nh₁ : LE.le b a\nh₂ : LE.le c a\n⊢ Iff (LT.lt (HSub.hSub a b) c) (LT.lt (HSub.hSub a c) b)","decl":"protected theorem tsub_lt_iff_tsub_lt (hb : AddLECancellable b) (hc : AddLECancellable c)\n    (h₁ : b ≤ a) (h₂ : c ≤ a) : a - b < c ↔ a - c < b := by\n  rw [hb.tsub_lt_iff_left h₁, hc.tsub_lt_iff_right h₂]\n\n"}
{"name":"AddLECancellable.le_tsub_iff_le_tsub","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c : α\nha : AddLECancellable a\nhc : AddLECancellable c\nh₁ : LE.le a b\nh₂ : LE.le c b\n⊢ Iff (LE.le a (HSub.hSub b c)) (LE.le c (HSub.hSub b a))","decl":"protected theorem le_tsub_iff_le_tsub (ha : AddLECancellable a) (hc : AddLECancellable c)\n    (h₁ : a ≤ b) (h₂ : c ≤ b) : a ≤ b - c ↔ c ≤ b - a := by\n  rw [ha.le_tsub_iff_left h₁, hc.le_tsub_iff_right h₂]\n\n"}
{"name":"AddLECancellable.lt_tsub_iff_right_of_le","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c : α\nhc : AddLECancellable c\nh : LE.le c b\n⊢ Iff (LT.lt a (HSub.hSub b c)) (LT.lt (HAdd.hAdd a c) b)","decl":"protected theorem lt_tsub_iff_right_of_le (hc : AddLECancellable c) (h : c ≤ b) :\n    a < b - c ↔ a + c < b := by\n  refine ⟨fun h' => (add_le_of_le_tsub_right_of_le h h'.le).lt_of_ne ?_, hc.lt_tsub_of_add_lt_right⟩\n  rintro rfl\n  exact h'.ne' hc.add_tsub_cancel_right\n\n"}
{"name":"AddLECancellable.lt_tsub_iff_left_of_le","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c : α\nhc : AddLECancellable c\nh : LE.le c b\n⊢ Iff (LT.lt a (HSub.hSub b c)) (LT.lt (HAdd.hAdd c a) b)","decl":"protected theorem lt_tsub_iff_left_of_le (hc : AddLECancellable c) (h : c ≤ b) :\n    a < b - c ↔ c + a < b := by\n  rw [add_comm]\n  exact hc.lt_tsub_iff_right_of_le h\n\n"}
{"name":"AddLECancellable.tsub_inj_right","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c : α\nhab : AddLECancellable (HSub.hSub a b)\nh₁ : LE.le b a\nh₂ : LE.le c a\nh₃ : Eq (HSub.hSub a b) (HSub.hSub a c)\n⊢ Eq b c","decl":"protected theorem tsub_inj_right (hab : AddLECancellable (a - b)) (h₁ : b ≤ a) (h₂ : c ≤ a)\n    (h₃ : a - b = a - c) : b = c := by\n  rw [← hab.inj]\n  rw [tsub_add_cancel_of_le h₁, h₃, tsub_add_cancel_of_le h₂]\n\n"}
{"name":"AddLECancellable.lt_of_tsub_lt_tsub_left_of_le","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁶ : AddCommSemigroup α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : ExistsAddOfLE α\ninst✝³ : AddLeftMono α\ninst✝² : Sub α\ninst✝¹ : OrderedSub α\na b c : α\ninst✝ : AddLeftReflectLT α\nhb : AddLECancellable b\nhca : LE.le c a\nh : LT.lt (HSub.hSub a b) (HSub.hSub a c)\n⊢ LT.lt c b","decl":"protected theorem lt_of_tsub_lt_tsub_left_of_le [AddLeftReflectLT α]\n    (hb : AddLECancellable b) (hca : c ≤ a) (h : a - b < a - c) : c < b := by\n  conv_lhs at h => rw [← tsub_add_cancel_of_le hca]\n  exact lt_of_add_lt_add_left (hb.lt_add_of_tsub_lt_right h)\n\n"}
{"name":"AddLECancellable.tsub_lt_tsub_left_of_le","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c : α\nhab : AddLECancellable (HSub.hSub a b)\nh₁ : LE.le b a\nh : LT.lt c b\n⊢ LT.lt (HSub.hSub a b) (HSub.hSub a c)","decl":"protected theorem tsub_lt_tsub_left_of_le (hab : AddLECancellable (a - b)) (h₁ : b ≤ a)\n    (h : c < b) : a - b < a - c :=\n  (tsub_le_tsub_left h.le _).lt_of_ne fun h' => h.ne' <| hab.tsub_inj_right h₁ (h.le.trans h₁) h'\n\n"}
{"name":"AddLECancellable.tsub_lt_tsub_right_of_le","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c : α\nhc : AddLECancellable c\nh : LE.le c a\nh2 : LT.lt a b\n⊢ LT.lt (HSub.hSub a c) (HSub.hSub b c)","decl":"protected theorem tsub_lt_tsub_right_of_le (hc : AddLECancellable c) (h : c ≤ a) (h2 : a < b) :\n    a - c < b - c := by\n  apply hc.lt_tsub_of_add_lt_left\n  rwa [add_tsub_cancel_of_le h]\n\n"}
{"name":"AddLECancellable.tsub_lt_tsub_iff_left_of_le_of_le","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁶ : AddCommSemigroup α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : ExistsAddOfLE α\ninst✝³ : AddLeftMono α\ninst✝² : Sub α\ninst✝¹ : OrderedSub α\na b c : α\ninst✝ : AddLeftReflectLT α\nhb : AddLECancellable b\nhab : AddLECancellable (HSub.hSub a b)\nh₁ : LE.le b a\nh₂ : LE.le c a\n⊢ Iff (LT.lt (HSub.hSub a b) (HSub.hSub a c)) (LT.lt c b)","decl":"protected theorem tsub_lt_tsub_iff_left_of_le_of_le [AddLeftReflectLT α]\n    (hb : AddLECancellable b) (hab : AddLECancellable (a - b)) (h₁ : b ≤ a) (h₂ : c ≤ a) :\n    a - b < a - c ↔ c < b :=\n  ⟨hb.lt_of_tsub_lt_tsub_left_of_le h₂, hab.tsub_lt_tsub_left_of_le h₁⟩\n\n"}
{"name":"AddLECancellable.add_add_tsub_cancel","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c : α\nhc : AddLECancellable c\nhcb : LE.le c b\n⊢ Eq (HAdd.hAdd (HAdd.hAdd a c) (HSub.hSub b c)) (HAdd.hAdd a b)","decl":"@[simp]\nprotected lemma add_add_tsub_cancel (hc : AddLECancellable c) (hcb : c ≤ b) :\n    a + c + (b - c) = a + b := by\n  rw [← hc.add_tsub_assoc_of_le hcb, add_right_comm, hc.add_tsub_cancel_right]\n\n"}
{"name":"AddLECancellable.add_tsub_tsub_cancel","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c : α\nhac : AddLECancellable (HSub.hSub a c)\nh : LE.le c a\n⊢ Eq (HSub.hSub (HAdd.hAdd a b) (HSub.hSub a c)) (HAdd.hAdd b c)","decl":"@[simp]\nprotected theorem add_tsub_tsub_cancel (hac : AddLECancellable (a - c)) (h : c ≤ a) :\n    a + b - (a - c) = b + c :=\n  hac.tsub_eq_of_eq_add <| by rw [add_assoc, add_tsub_cancel_of_le h, add_comm]\n\n"}
{"name":"AddLECancellable.tsub_tsub_cancel_of_le","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b : α\nhba : AddLECancellable (HSub.hSub b a)\nh : LE.le a b\n⊢ Eq (HSub.hSub b (HSub.hSub b a)) a","decl":"protected theorem tsub_tsub_cancel_of_le (hba : AddLECancellable (b - a)) (h : a ≤ b) :\n    b - (b - a) = a :=\n  hba.tsub_eq_of_eq_add (add_tsub_cancel_of_le h).symm\n\n"}
{"name":"AddLECancellable.tsub_tsub_tsub_cancel_left","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁵ : AddCommSemigroup α\ninst✝⁴ : PartialOrder α\ninst✝³ : ExistsAddOfLE α\ninst✝² : AddLeftMono α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\na b c : α\nhab : AddLECancellable (HSub.hSub a b)\nh : LE.le b a\n⊢ Eq (HSub.hSub (HSub.hSub a c) (HSub.hSub a b)) (HSub.hSub b c)","decl":"protected theorem tsub_tsub_tsub_cancel_left (hab : AddLECancellable (a - b)) (h : b ≤ a) :\n    a - c - (a - b) = b - c := by rw [tsub_right_comm, hab.tsub_tsub_cancel_of_le h]\n\n"}
{"name":"eq_tsub_iff_add_eq_of_le","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁶ : AddCommSemigroup α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : ExistsAddOfLE α\ninst✝³ : AddLeftMono α\ninst✝² : Sub α\ninst✝¹ : OrderedSub α\na b c : α\ninst✝ : AddLeftReflectLE α\nh : LE.le c b\n⊢ Iff (Eq a (HSub.hSub b c)) (Eq (HAdd.hAdd a c) b)","decl":"theorem eq_tsub_iff_add_eq_of_le (h : c ≤ b) : a = b - c ↔ a + c = b :=\n  Contravariant.AddLECancellable.eq_tsub_iff_add_eq_of_le h\n\n"}
{"name":"tsub_eq_iff_eq_add_of_le","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁶ : AddCommSemigroup α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : ExistsAddOfLE α\ninst✝³ : AddLeftMono α\ninst✝² : Sub α\ninst✝¹ : OrderedSub α\na b c : α\ninst✝ : AddLeftReflectLE α\nh : LE.le b a\n⊢ Iff (Eq (HSub.hSub a b) c) (Eq a (HAdd.hAdd c b))","decl":"theorem tsub_eq_iff_eq_add_of_le (h : b ≤ a) : a - b = c ↔ a = c + b :=\n  Contravariant.AddLECancellable.tsub_eq_iff_eq_add_of_le h\n\n"}
{"name":"add_tsub_assoc_of_le","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁶ : AddCommSemigroup α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : ExistsAddOfLE α\ninst✝³ : AddLeftMono α\ninst✝² : Sub α\ninst✝¹ : OrderedSub α\nb c : α\ninst✝ : AddLeftReflectLE α\nh : LE.le c b\na : α\n⊢ Eq (HSub.hSub (HAdd.hAdd a b) c) (HAdd.hAdd a (HSub.hSub b c))","decl":"/-- See `add_tsub_le_assoc` for an inequality. -/\ntheorem add_tsub_assoc_of_le (h : c ≤ b) (a : α) : a + b - c = a + (b - c) :=\n  Contravariant.AddLECancellable.add_tsub_assoc_of_le h a\n\n"}
{"name":"tsub_add_eq_add_tsub","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁶ : AddCommSemigroup α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : ExistsAddOfLE α\ninst✝³ : AddLeftMono α\ninst✝² : Sub α\ninst✝¹ : OrderedSub α\na b c : α\ninst✝ : AddLeftReflectLE α\nh : LE.le b a\n⊢ Eq (HAdd.hAdd (HSub.hSub a b) c) (HSub.hSub (HAdd.hAdd a c) b)","decl":"theorem tsub_add_eq_add_tsub (h : b ≤ a) : a - b + c = a + c - b :=\n  Contravariant.AddLECancellable.tsub_add_eq_add_tsub h\n\n"}
{"name":"tsub_tsub_assoc","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁶ : AddCommSemigroup α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : ExistsAddOfLE α\ninst✝³ : AddLeftMono α\ninst✝² : Sub α\ninst✝¹ : OrderedSub α\na b c : α\ninst✝ : AddLeftReflectLE α\nh₁ : LE.le b a\nh₂ : LE.le c b\n⊢ Eq (HSub.hSub a (HSub.hSub b c)) (HAdd.hAdd (HSub.hSub a b) c)","decl":"theorem tsub_tsub_assoc (h₁ : b ≤ a) (h₂ : c ≤ b) : a - (b - c) = a - b + c :=\n  Contravariant.AddLECancellable.tsub_tsub_assoc h₁ h₂\n\n"}
{"name":"tsub_add_tsub_comm","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁶ : AddCommSemigroup α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : ExistsAddOfLE α\ninst✝³ : AddLeftMono α\ninst✝² : Sub α\ninst✝¹ : OrderedSub α\na b c d : α\ninst✝ : AddLeftReflectLE α\nhba : LE.le b a\nhdc : LE.le d c\n⊢ Eq (HAdd.hAdd (HSub.hSub a b) (HSub.hSub c d)) (HSub.hSub (HAdd.hAdd a c) (HAdd.hAdd b d))","decl":"theorem tsub_add_tsub_comm (hba : b ≤ a) (hdc : d ≤ c) : a - b + (c - d) = a + c - (b + d) :=\n  Contravariant.AddLECancellable.tsub_add_tsub_comm Contravariant.AddLECancellable hba hdc\n\n"}
{"name":"le_tsub_iff_left","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁶ : AddCommSemigroup α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : ExistsAddOfLE α\ninst✝³ : AddLeftMono α\ninst✝² : Sub α\ninst✝¹ : OrderedSub α\na b c : α\ninst✝ : AddLeftReflectLE α\nh : LE.le a c\n⊢ Iff (LE.le b (HSub.hSub c a)) (LE.le (HAdd.hAdd a b) c)","decl":"theorem le_tsub_iff_left (h : a ≤ c) : b ≤ c - a ↔ a + b ≤ c :=\n  Contravariant.AddLECancellable.le_tsub_iff_left h\n\n"}
{"name":"le_tsub_iff_right","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁶ : AddCommSemigroup α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : ExistsAddOfLE α\ninst✝³ : AddLeftMono α\ninst✝² : Sub α\ninst✝¹ : OrderedSub α\na b c : α\ninst✝ : AddLeftReflectLE α\nh : LE.le a c\n⊢ Iff (LE.le b (HSub.hSub c a)) (LE.le (HAdd.hAdd b a) c)","decl":"theorem le_tsub_iff_right (h : a ≤ c) : b ≤ c - a ↔ b + a ≤ c :=\n  Contravariant.AddLECancellable.le_tsub_iff_right h\n\n"}
{"name":"tsub_lt_iff_left","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁶ : AddCommSemigroup α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : ExistsAddOfLE α\ninst✝³ : AddLeftMono α\ninst✝² : Sub α\ninst✝¹ : OrderedSub α\na b c : α\ninst✝ : AddLeftReflectLE α\nhbc : LE.le b a\n⊢ Iff (LT.lt (HSub.hSub a b) c) (LT.lt a (HAdd.hAdd b c))","decl":"theorem tsub_lt_iff_left (hbc : b ≤ a) : a - b < c ↔ a < b + c :=\n  Contravariant.AddLECancellable.tsub_lt_iff_left hbc\n\n"}
{"name":"tsub_lt_iff_right","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁶ : AddCommSemigroup α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : ExistsAddOfLE α\ninst✝³ : AddLeftMono α\ninst✝² : Sub α\ninst✝¹ : OrderedSub α\na b c : α\ninst✝ : AddLeftReflectLE α\nhbc : LE.le b a\n⊢ Iff (LT.lt (HSub.hSub a b) c) (LT.lt a (HAdd.hAdd c b))","decl":"theorem tsub_lt_iff_right (hbc : b ≤ a) : a - b < c ↔ a < c + b :=\n  Contravariant.AddLECancellable.tsub_lt_iff_right hbc\n\n"}
{"name":"tsub_lt_iff_tsub_lt","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁶ : AddCommSemigroup α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : ExistsAddOfLE α\ninst✝³ : AddLeftMono α\ninst✝² : Sub α\ninst✝¹ : OrderedSub α\na b c : α\ninst✝ : AddLeftReflectLE α\nh₁ : LE.le b a\nh₂ : LE.le c a\n⊢ Iff (LT.lt (HSub.hSub a b) c) (LT.lt (HSub.hSub a c) b)","decl":"theorem tsub_lt_iff_tsub_lt (h₁ : b ≤ a) (h₂ : c ≤ a) : a - b < c ↔ a - c < b :=\n  Contravariant.AddLECancellable.tsub_lt_iff_tsub_lt Contravariant.AddLECancellable h₁ h₂\n\n"}
{"name":"le_tsub_iff_le_tsub","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁶ : AddCommSemigroup α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : ExistsAddOfLE α\ninst✝³ : AddLeftMono α\ninst✝² : Sub α\ninst✝¹ : OrderedSub α\na b c : α\ninst✝ : AddLeftReflectLE α\nh₁ : LE.le a b\nh₂ : LE.le c b\n⊢ Iff (LE.le a (HSub.hSub b c)) (LE.le c (HSub.hSub b a))","decl":"theorem le_tsub_iff_le_tsub (h₁ : a ≤ b) (h₂ : c ≤ b) : a ≤ b - c ↔ c ≤ b - a :=\n  Contravariant.AddLECancellable.le_tsub_iff_le_tsub Contravariant.AddLECancellable h₁ h₂\n\n"}
{"name":"lt_tsub_iff_right_of_le","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁶ : AddCommSemigroup α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : ExistsAddOfLE α\ninst✝³ : AddLeftMono α\ninst✝² : Sub α\ninst✝¹ : OrderedSub α\na b c : α\ninst✝ : AddLeftReflectLE α\nh : LE.le c b\n⊢ Iff (LT.lt a (HSub.hSub b c)) (LT.lt (HAdd.hAdd a c) b)","decl":"/-- See `lt_tsub_iff_right` for a stronger statement in a linear order. -/\ntheorem lt_tsub_iff_right_of_le (h : c ≤ b) : a < b - c ↔ a + c < b :=\n  Contravariant.AddLECancellable.lt_tsub_iff_right_of_le h\n\n"}
{"name":"lt_tsub_iff_left_of_le","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁶ : AddCommSemigroup α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : ExistsAddOfLE α\ninst✝³ : AddLeftMono α\ninst✝² : Sub α\ninst✝¹ : OrderedSub α\na b c : α\ninst✝ : AddLeftReflectLE α\nh : LE.le c b\n⊢ Iff (LT.lt a (HSub.hSub b c)) (LT.lt (HAdd.hAdd c a) b)","decl":"/-- See `lt_tsub_iff_left` for a stronger statement in a linear order. -/\ntheorem lt_tsub_iff_left_of_le (h : c ≤ b) : a < b - c ↔ c + a < b :=\n  Contravariant.AddLECancellable.lt_tsub_iff_left_of_le h\n\n"}
{"name":"lt_of_tsub_lt_tsub_left_of_le","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁷ : AddCommSemigroup α\ninst✝⁶ : PartialOrder α\ninst✝⁵ : ExistsAddOfLE α\ninst✝⁴ : AddLeftMono α\ninst✝³ : Sub α\ninst✝² : OrderedSub α\na b c : α\ninst✝¹ : AddLeftReflectLE α\ninst✝ : AddLeftReflectLT α\nhca : LE.le c a\nh : LT.lt (HSub.hSub a b) (HSub.hSub a c)\n⊢ LT.lt c b","decl":"/-- See `lt_of_tsub_lt_tsub_left` for a stronger statement in a linear order. -/\ntheorem lt_of_tsub_lt_tsub_left_of_le [AddLeftReflectLT α] (hca : c ≤ a)\n    (h : a - b < a - c) : c < b :=\n  Contravariant.AddLECancellable.lt_of_tsub_lt_tsub_left_of_le hca h\n\n"}
{"name":"tsub_lt_tsub_left_of_le","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁶ : AddCommSemigroup α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : ExistsAddOfLE α\ninst✝³ : AddLeftMono α\ninst✝² : Sub α\ninst✝¹ : OrderedSub α\na b c : α\ninst✝ : AddLeftReflectLE α\na✝¹ : LE.le b a\na✝ : LT.lt c b\n⊢ LT.lt (HSub.hSub a b) (HSub.hSub a c)","decl":"theorem tsub_lt_tsub_left_of_le : b ≤ a → c < b → a - b < a - c :=\n  Contravariant.AddLECancellable.tsub_lt_tsub_left_of_le\n\n"}
{"name":"tsub_lt_tsub_right_of_le","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁶ : AddCommSemigroup α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : ExistsAddOfLE α\ninst✝³ : AddLeftMono α\ninst✝² : Sub α\ninst✝¹ : OrderedSub α\na b c : α\ninst✝ : AddLeftReflectLE α\nh : LE.le c a\nh2 : LT.lt a b\n⊢ LT.lt (HSub.hSub a c) (HSub.hSub b c)","decl":"theorem tsub_lt_tsub_right_of_le (h : c ≤ a) (h2 : a < b) : a - c < b - c :=\n  Contravariant.AddLECancellable.tsub_lt_tsub_right_of_le h h2\n\n"}
{"name":"tsub_inj_right","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁶ : AddCommSemigroup α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : ExistsAddOfLE α\ninst✝³ : AddLeftMono α\ninst✝² : Sub α\ninst✝¹ : OrderedSub α\na b c : α\ninst✝ : AddLeftReflectLE α\nh₁ : LE.le b a\nh₂ : LE.le c a\nh₃ : Eq (HSub.hSub a b) (HSub.hSub a c)\n⊢ Eq b c","decl":"theorem tsub_inj_right (h₁ : b ≤ a) (h₂ : c ≤ a) (h₃ : a - b = a - c) : b = c :=\n  Contravariant.AddLECancellable.tsub_inj_right h₁ h₂ h₃\n\n"}
{"name":"tsub_lt_tsub_iff_left_of_le_of_le","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁷ : AddCommSemigroup α\ninst✝⁶ : PartialOrder α\ninst✝⁵ : ExistsAddOfLE α\ninst✝⁴ : AddLeftMono α\ninst✝³ : Sub α\ninst✝² : OrderedSub α\na b c : α\ninst✝¹ : AddLeftReflectLE α\ninst✝ : AddLeftReflectLT α\nh₁ : LE.le b a\nh₂ : LE.le c a\n⊢ Iff (LT.lt (HSub.hSub a b) (HSub.hSub a c)) (LT.lt c b)","decl":"/-- See `tsub_lt_tsub_iff_left_of_le` for a stronger statement in a linear order. -/\ntheorem tsub_lt_tsub_iff_left_of_le_of_le [AddLeftReflectLT α] (h₁ : b ≤ a)\n    (h₂ : c ≤ a) : a - b < a - c ↔ c < b :=\n  Contravariant.AddLECancellable.tsub_lt_tsub_iff_left_of_le_of_le Contravariant.AddLECancellable h₁\n    h₂\n\n"}
{"name":"add_add_tsub_cancel","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁶ : AddCommSemigroup α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : ExistsAddOfLE α\ninst✝³ : AddLeftMono α\ninst✝² : Sub α\ninst✝¹ : OrderedSub α\na b c : α\ninst✝ : AddLeftReflectLE α\nhcb : LE.le c b\n⊢ Eq (HAdd.hAdd (HAdd.hAdd a c) (HSub.hSub b c)) (HAdd.hAdd a b)","decl":"@[simp]\nlemma add_add_tsub_cancel (hcb : c ≤ b) : a + c + (b - c) = a + b :=\n  Contravariant.AddLECancellable.add_add_tsub_cancel hcb\n\n"}
{"name":"add_tsub_tsub_cancel","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁶ : AddCommSemigroup α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : ExistsAddOfLE α\ninst✝³ : AddLeftMono α\ninst✝² : Sub α\ninst✝¹ : OrderedSub α\na b c : α\ninst✝ : AddLeftReflectLE α\nh : LE.le c a\n⊢ Eq (HSub.hSub (HAdd.hAdd a b) (HSub.hSub a c)) (HAdd.hAdd b c)","decl":"@[simp]\ntheorem add_tsub_tsub_cancel (h : c ≤ a) : a + b - (a - c) = b + c :=\n  Contravariant.AddLECancellable.add_tsub_tsub_cancel h\n\n"}
{"name":"tsub_tsub_cancel_of_le","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁶ : AddCommSemigroup α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : ExistsAddOfLE α\ninst✝³ : AddLeftMono α\ninst✝² : Sub α\ninst✝¹ : OrderedSub α\na b : α\ninst✝ : AddLeftReflectLE α\nh : LE.le a b\n⊢ Eq (HSub.hSub b (HSub.hSub b a)) a","decl":"/-- See `tsub_tsub_le` for an inequality. -/\ntheorem tsub_tsub_cancel_of_le (h : a ≤ b) : b - (b - a) = a :=\n  Contravariant.AddLECancellable.tsub_tsub_cancel_of_le h\n\n"}
{"name":"tsub_tsub_tsub_cancel_left","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁶ : AddCommSemigroup α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : ExistsAddOfLE α\ninst✝³ : AddLeftMono α\ninst✝² : Sub α\ninst✝¹ : OrderedSub α\na b c : α\ninst✝ : AddLeftReflectLE α\nh : LE.le b a\n⊢ Eq (HSub.hSub (HSub.hSub a c) (HSub.hSub a b)) (HSub.hSub b c)","decl":"theorem tsub_tsub_tsub_cancel_left (h : b ≤ a) : a - c - (a - b) = b - c :=\n  Contravariant.AddLECancellable.tsub_tsub_tsub_cancel_left h\n\n-- note: not generalized to `AddLECancellable` because `add_tsub_add_eq_tsub_left` isn't\n"}
{"name":"tsub_tsub_eq_add_tsub_of_le","module":"Mathlib.Algebra.Order.Sub.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝⁶ : AddCommSemigroup α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : ExistsAddOfLE α\ninst✝³ : AddLeftMono α\ninst✝² : Sub α\ninst✝¹ : OrderedSub α\na b c : α\ninst✝ : AddLeftReflectLE α\nh : LE.le c b\n⊢ Eq (HSub.hSub a (HSub.hSub b c)) (HSub.hSub (HAdd.hAdd a c) b)","decl":"/-- The `tsub` version of `sub_sub_eq_add_sub`. -/\ntheorem tsub_tsub_eq_add_tsub_of_le\n    (h : c ≤ b) : a - (b - c) = a + c - b := by\n  obtain ⟨d, rfl⟩ := exists_add_of_le h\n  rw [add_tsub_cancel_left c, add_comm a c, add_tsub_add_eq_tsub_left]\n\n"}
