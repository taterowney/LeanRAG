{"name":"CategoryTheory.Balanced.isIso_of_mono_of_epi","module":"Mathlib.CategoryTheory.Balanced","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\nself : CategoryTheory.Balanced C\nX Y : C\nf : Quiver.Hom X Y\ninst✝¹ : CategoryTheory.Mono f\ninst✝ : CategoryTheory.Epi f\n⊢ CategoryTheory.IsIso f","decl":"/-- A category is called balanced if any morphism that is both monic and epic is an isomorphism. -/\nclass Balanced : Prop where\n  isIso_of_mono_of_epi : ∀ {X Y : C} (f : X ⟶ Y) [Mono f] [Epi f], IsIso f\n\n"}
{"name":"CategoryTheory.isIso_of_mono_of_epi","module":"Mathlib.CategoryTheory.Balanced","initialProofState":"C : Type u\ninst✝³ : CategoryTheory.Category.{v, u} C\ninst✝² : CategoryTheory.Balanced C\nX Y : C\nf : Quiver.Hom X Y\ninst✝¹ : CategoryTheory.Mono f\ninst✝ : CategoryTheory.Epi f\n⊢ CategoryTheory.IsIso f","decl":"theorem isIso_of_mono_of_epi [Balanced C] {X Y : C} (f : X ⟶ Y) [Mono f] [Epi f] : IsIso f :=\n  Balanced.isIso_of_mono_of_epi _\n\n"}
{"name":"CategoryTheory.isIso_iff_mono_and_epi","module":"Mathlib.CategoryTheory.Balanced","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Balanced C\nX Y : C\nf : Quiver.Hom X Y\n⊢ Iff (CategoryTheory.IsIso f) (And (CategoryTheory.Mono f) (CategoryTheory.Epi f))","decl":"theorem isIso_iff_mono_and_epi [Balanced C] {X Y : C} (f : X ⟶ Y) : IsIso f ↔ Mono f ∧ Epi f :=\n  ⟨fun _ => ⟨inferInstance, inferInstance⟩, fun ⟨_, _⟩ => isIso_of_mono_of_epi _⟩\n\n"}
{"name":"CategoryTheory.balanced_opposite","module":"Mathlib.CategoryTheory.Balanced","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Balanced C\n⊢ CategoryTheory.Balanced (Opposite C)","decl":"theorem balanced_opposite [Balanced C] : Balanced Cᵒᵖ :=\n  { isIso_of_mono_of_epi := fun f fmono fepi => by\n      rw [← Quiver.Hom.op_unop f]\n      exact isIso_of_op _ }\n\n"}
