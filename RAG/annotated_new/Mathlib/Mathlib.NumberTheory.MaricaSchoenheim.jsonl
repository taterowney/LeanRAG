{"name":"Nat.grahamConjecture_of_squarefree","module":"Mathlib.NumberTheory.MaricaSchoenheim","initialProofState":"n : Nat\nf : Nat → Nat\nhf' : ∀ (k : Nat), LT.lt k n → Squarefree (f k)\n⊢ n.GrahamConjecture f","decl":"/-- The special case of Graham's conjecture where all numbers are squarefree. -/\nlemma grahamConjecture_of_squarefree {n : ℕ} (f : ℕ → ℕ) (hf' : ∀ k < n, Squarefree (f k)) :\n    GrahamConjecture n f := by\n  rintro hn hf\n  by_contra!\n  set 𝒜 := (Iio n).image fun n ↦ primeFactors (f n)\n  have hf'' : ∀ i < n, ∀ j, Squarefree (f i / (f i).gcd (f j)) :=\n    fun i hi j ↦ (hf' _ hi).squarefree_of_dvd <| div_dvd_of_dvd <| gcd_dvd_left _ _\n  refine lt_irrefl n ?_\n  calc\n    n = #𝒜 := ?_\n    _ ≤ #(𝒜 \\\\ 𝒜) := 𝒜.card_le_card_diffs\n    _ ≤ #(Ioo 0 n) := card_le_card_of_injOn (fun s ↦ ∏ p ∈ s, p) ?_ ?_\n    _ = n - 1 := by rw [card_Ioo, tsub_zero]\n    _ < n := tsub_lt_self hn.bot_lt zero_lt_one\n  · rw [Finset.card_image_of_injOn, card_Iio]\n    simpa using prod_primeFactors_invOn_squarefree.2.injOn.comp hf.injOn hf'\n  · simp only [𝒜, forall_mem_diffs, forall_mem_image, mem_Ioo, mem_Iio]\n    rintro i hi j hj\n    rw [← primeFactors_div_gcd (hf' _ hi) (hf' _ hj).ne_zero,\n      prod_primeFactors_of_squarefree <| hf'' _ hi _]\n    exact ⟨Nat.div_pos (gcd_le_left _ (hf' _ hi).ne_zero.bot_lt) <|\n      Nat.gcd_pos_of_pos_left _ (hf' _ hi).ne_zero.bot_lt, Nat.div_lt_of_lt_mul <| this _ hi _ hj⟩\n  · simp only [𝒜, Set.InjOn, mem_coe, forall_mem_diffs, forall_mem_image, mem_Ioo, mem_Iio]\n    rintro a ha b hb c hc d hd\n    rw [← primeFactors_div_gcd (hf' _ ha) (hf' _ hb).ne_zero, ← primeFactors_div_gcd\n      (hf' _ hc) (hf' _ hd).ne_zero, prod_primeFactors_of_squarefree (hf'' _ ha _),\n      prod_primeFactors_of_squarefree (hf'' _ hc _)]\n    rintro h\n    rw [h]\n\n"}
