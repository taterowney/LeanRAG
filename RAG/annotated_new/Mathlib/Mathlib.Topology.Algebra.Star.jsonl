{"name":"ContinuousStar.continuous_star","module":"Mathlib.Topology.Algebra.Star","initialProofState":"R : Type u_1\ninst✝¹ : TopologicalSpace R\ninst✝ : Star R\nself : ContinuousStar R\n⊢ Continuous Star.star","decl":"/-- Basic hypothesis to talk about a topological space with a continuous `star` operator. -/\nclass ContinuousStar (R : Type*) [TopologicalSpace R] [Star R] : Prop where\n  /-- The `star` operator is continuous. -/\n  continuous_star : Continuous (star : R → R)\n\n"}
{"name":"continuousOn_star","module":"Mathlib.Topology.Algebra.Star","initialProofState":"R : Type u_2\ninst✝² : TopologicalSpace R\ninst✝¹ : Star R\ninst✝ : ContinuousStar R\ns : Set R\n⊢ ContinuousOn Star.star s","decl":"theorem continuousOn_star {s : Set R} : ContinuousOn star s :=\n  continuous_star.continuousOn\n\n"}
{"name":"continuousWithinAt_star","module":"Mathlib.Topology.Algebra.Star","initialProofState":"R : Type u_2\ninst✝² : TopologicalSpace R\ninst✝¹ : Star R\ninst✝ : ContinuousStar R\ns : Set R\nx : R\n⊢ ContinuousWithinAt Star.star s x","decl":"theorem continuousWithinAt_star {s : Set R} {x : R} : ContinuousWithinAt star s x :=\n  continuous_star.continuousWithinAt\n\n"}
{"name":"continuousAt_star","module":"Mathlib.Topology.Algebra.Star","initialProofState":"R : Type u_2\ninst✝² : TopologicalSpace R\ninst✝¹ : Star R\ninst✝ : ContinuousStar R\nx : R\n⊢ ContinuousAt Star.star x","decl":"theorem continuousAt_star {x : R} : ContinuousAt star x :=\n  continuous_star.continuousAt\n\n"}
{"name":"tendsto_star","module":"Mathlib.Topology.Algebra.Star","initialProofState":"R : Type u_2\ninst✝² : TopologicalSpace R\ninst✝¹ : Star R\ninst✝ : ContinuousStar R\na : R\n⊢ Filter.Tendsto Star.star (nhds a) (nhds (Star.star a))","decl":"theorem tendsto_star (a : R) : Tendsto star (𝓝 a) (𝓝 (star a)) :=\n  continuousAt_star\n\n"}
{"name":"Filter.Tendsto.star","module":"Mathlib.Topology.Algebra.Star","initialProofState":"α : Type u_1\nR : Type u_2\ninst✝² : TopologicalSpace R\ninst✝¹ : Star R\ninst✝ : ContinuousStar R\nf : α → R\nl : Filter α\ny : R\nh : Filter.Tendsto f l (nhds y)\n⊢ Filter.Tendsto (fun x => Star.star (f x)) l (nhds (Star.star y))","decl":"theorem Filter.Tendsto.star {f : α → R} {l : Filter α} {y : R} (h : Tendsto f l (𝓝 y)) :\n    Tendsto (fun x => star (f x)) l (𝓝 (star y)) :=\n  (continuous_star.tendsto y).comp h\n\n"}
{"name":"Continuous.star","module":"Mathlib.Topology.Algebra.Star","initialProofState":"α : Type u_1\nR : Type u_2\ninst✝³ : TopologicalSpace R\ninst✝² : Star R\ninst✝¹ : ContinuousStar R\ninst✝ : TopologicalSpace α\nf : α → R\nhf : Continuous f\n⊢ Continuous fun x => Star.star (f x)","decl":"@[continuity, fun_prop]\ntheorem Continuous.star (hf : Continuous f) : Continuous fun x => star (f x) :=\n  continuous_star.comp hf\n\n"}
{"name":"ContinuousAt.star","module":"Mathlib.Topology.Algebra.Star","initialProofState":"α : Type u_1\nR : Type u_2\ninst✝³ : TopologicalSpace R\ninst✝² : Star R\ninst✝¹ : ContinuousStar R\ninst✝ : TopologicalSpace α\nf : α → R\nx : α\nhf : ContinuousAt f x\n⊢ ContinuousAt (fun x => Star.star (f x)) x","decl":"@[fun_prop]\ntheorem ContinuousAt.star (hf : ContinuousAt f x) : ContinuousAt (fun x => star (f x)) x :=\n  continuousAt_star.comp hf\n\n"}
{"name":"ContinuousOn.star","module":"Mathlib.Topology.Algebra.Star","initialProofState":"α : Type u_1\nR : Type u_2\ninst✝³ : TopologicalSpace R\ninst✝² : Star R\ninst✝¹ : ContinuousStar R\ninst✝ : TopologicalSpace α\nf : α → R\ns : Set α\nhf : ContinuousOn f s\n⊢ ContinuousOn (fun x => Star.star (f x)) s","decl":"@[fun_prop]\ntheorem ContinuousOn.star (hf : ContinuousOn f s) : ContinuousOn (fun x => star (f x)) s :=\n  continuous_star.comp_continuousOn hf\n\n"}
{"name":"ContinuousWithinAt.star","module":"Mathlib.Topology.Algebra.Star","initialProofState":"α : Type u_1\nR : Type u_2\ninst✝³ : TopologicalSpace R\ninst✝² : Star R\ninst✝¹ : ContinuousStar R\ninst✝ : TopologicalSpace α\nf : α → R\ns : Set α\nx : α\nhf : ContinuousWithinAt f s x\n⊢ ContinuousWithinAt (fun x => Star.star (f x)) s x","decl":"theorem ContinuousWithinAt.star (hf : ContinuousWithinAt f s x) :\n    ContinuousWithinAt (fun x => star (f x)) s x :=\n  Filter.Tendsto.star hf\n\n"}
{"name":"starContinuousMap_apply","module":"Mathlib.Topology.Algebra.Star","initialProofState":"R : Type u_2\ninst✝² : TopologicalSpace R\ninst✝¹ : Star R\ninst✝ : ContinuousStar R\na✝ : R\n⊢ Eq (starContinuousMap a✝) (Star.star a✝)","decl":"/-- The star operation bundled as a continuous map. -/\n@[simps]\ndef starContinuousMap : C(R, R) :=\n  ⟨star, continuous_star⟩\n\n"}
{"name":"instContinuousStarProd","module":"Mathlib.Topology.Algebra.Star","initialProofState":"R : Type u_1\nS : Type u_2\ninst✝⁵ : Star R\ninst✝⁴ : Star S\ninst✝³ : TopologicalSpace R\ninst✝² : TopologicalSpace S\ninst✝¹ : ContinuousStar R\ninst✝ : ContinuousStar S\n⊢ ContinuousStar (Prod R S)","decl":"instance [Star R] [Star S] [TopologicalSpace R] [TopologicalSpace S] [ContinuousStar R]\n    [ContinuousStar S] : ContinuousStar (R × S) :=\n  ⟨(continuous_star.comp continuous_fst).prod_mk (continuous_star.comp continuous_snd)⟩\n\n"}
{"name":"instContinuousStarForall","module":"Mathlib.Topology.Algebra.Star","initialProofState":"ι : Type u_3\nC : ι → Type u_4\ninst✝² : (i : ι) → TopologicalSpace (C i)\ninst✝¹ : (i : ι) → Star (C i)\ninst✝ : ∀ (i : ι), ContinuousStar (C i)\n⊢ ContinuousStar ((i : ι) → C i)","decl":"instance {C : ι → Type*} [∀ i, TopologicalSpace (C i)] [∀ i, Star (C i)]\n    [∀ i, ContinuousStar (C i)] : ContinuousStar (∀ i, C i) where\n  continuous_star := continuous_pi fun i => Continuous.star (continuous_apply i)\n\n"}
{"name":"instContinuousStarMulOpposite","module":"Mathlib.Topology.Algebra.Star","initialProofState":"R : Type u_1\ninst✝² : Star R\ninst✝¹ : TopologicalSpace R\ninst✝ : ContinuousStar R\n⊢ ContinuousStar (MulOpposite R)","decl":"instance [Star R] [TopologicalSpace R] [ContinuousStar R] : ContinuousStar Rᵐᵒᵖ :=\n  ⟨MulOpposite.continuous_op.comp <| MulOpposite.continuous_unop.star⟩\n\n"}
{"name":"instContinuousStarUnits","module":"Mathlib.Topology.Algebra.Star","initialProofState":"R : Type u_1\ninst✝³ : Monoid R\ninst✝² : StarMul R\ninst✝¹ : TopologicalSpace R\ninst✝ : ContinuousStar R\n⊢ ContinuousStar (Units R)","decl":"instance [Monoid R] [StarMul R] [TopologicalSpace R] [ContinuousStar R] :\n    ContinuousStar Rˣ :=\n  ⟨continuous_induced_rng.2 Units.continuous_embedProduct.star⟩\n\n"}
