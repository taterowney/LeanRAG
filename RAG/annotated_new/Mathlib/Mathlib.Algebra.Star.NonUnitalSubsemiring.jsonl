{"name":"SubStarSemigroup.mk.sizeOf_spec","module":"Mathlib.Algebra.Star.NonUnitalSubsemiring","initialProofState":"M : Type v\ninst✝² : Mul M\ninst✝¹ : Star M\ninst✝ : SizeOf M\ntoSubsemigroup : Subsemigroup M\nstar_mem' : ∀ {a : M}, Membership.mem toSubsemigroup.carrier a → Membership.mem toSubsemigroup.carrier (Star.star a)\n⊢ Eq (SizeOf.sizeOf { toSubsemigroup := toSubsemigroup, star_mem' := star_mem' }) (HAdd.hAdd 1 (SizeOf.sizeOf toSubsemigroup))","decl":"/-- A sub star semigroup is a subset of a magma which is closed under the `star`-/\nstructure SubStarSemigroup (M : Type v) [Mul M] [Star M] extends Subsemigroup M : Type v where\n  /-- The `carrier` of a `StarSubset` is closed under the `star` operation. -/\n  star_mem' : ∀ {a : M} (_ha : a ∈ carrier), star a ∈ carrier\n\n"}
{"name":"SubStarSemigroup.star_mem'","module":"Mathlib.Algebra.Star.NonUnitalSubsemiring","initialProofState":"M : Type v\ninst✝¹ : Mul M\ninst✝ : Star M\nself : SubStarSemigroup M\na : M\n_ha : Membership.mem self.carrier a\n⊢ Membership.mem self.carrier (Star.star a)","decl":"/-- A sub star semigroup is a subset of a magma which is closed under the `star`-/\nstructure SubStarSemigroup (M : Type v) [Mul M] [Star M] extends Subsemigroup M : Type v where\n  /-- The `carrier` of a `StarSubset` is closed under the `star` operation. -/\n  star_mem' : ∀ {a : M} (_ha : a ∈ carrier), star a ∈ carrier\n\n"}
{"name":"SubStarSemigroup.mk.injEq","module":"Mathlib.Algebra.Star.NonUnitalSubsemiring","initialProofState":"M : Type v\ninst✝¹ : Mul M\ninst✝ : Star M\ntoSubsemigroup✝ : Subsemigroup M\nstar_mem'✝ : ∀ {a : M}, Membership.mem toSubsemigroup✝.carrier a → Membership.mem toSubsemigroup✝.carrier (Star.star a)\ntoSubsemigroup : Subsemigroup M\nstar_mem' : ∀ {a : M}, Membership.mem toSubsemigroup.carrier a → Membership.mem toSubsemigroup.carrier (Star.star a)\n⊢ Eq (Eq { toSubsemigroup := toSubsemigroup✝, star_mem' := star_mem'✝ } { toSubsemigroup := toSubsemigroup, star_mem' := star_mem' }) (Eq toSubsemigroup✝ toSubsemigroup)","decl":"/-- A sub star semigroup is a subset of a magma which is closed under the `star`-/\nstructure SubStarSemigroup (M : Type v) [Mul M] [Star M] extends Subsemigroup M : Type v where\n  /-- The `carrier` of a `StarSubset` is closed under the `star` operation. -/\n  star_mem' : ∀ {a : M} (_ha : a ∈ carrier), star a ∈ carrier\n\n"}
{"name":"SubStarSemigroup.mk.inj","module":"Mathlib.Algebra.Star.NonUnitalSubsemiring","initialProofState":"M : Type v\ninst✝¹ : Mul M\ninst✝ : Star M\ntoSubsemigroup✝ : Subsemigroup M\nstar_mem'✝ : ∀ {a : M}, Membership.mem toSubsemigroup✝.carrier a → Membership.mem toSubsemigroup✝.carrier (Star.star a)\ntoSubsemigroup : Subsemigroup M\nstar_mem' : ∀ {a : M}, Membership.mem toSubsemigroup.carrier a → Membership.mem toSubsemigroup.carrier (Star.star a)\nx✝ : Eq { toSubsemigroup := toSubsemigroup✝, star_mem' := star_mem'✝ } { toSubsemigroup := toSubsemigroup, star_mem' := star_mem' }\n⊢ Eq toSubsemigroup✝ toSubsemigroup","decl":"/-- A sub star semigroup is a subset of a magma which is closed under the `star`-/\nstructure SubStarSemigroup (M : Type v) [Mul M] [Star M] extends Subsemigroup M : Type v where\n  /-- The `carrier` of a `StarSubset` is closed under the `star` operation. -/\n  star_mem' : ∀ {a : M} (_ha : a ∈ carrier), star a ∈ carrier\n\n"}
{"name":"NonUnitalStarSubsemiring.star_mem'","module":"Mathlib.Algebra.Star.NonUnitalSubsemiring","initialProofState":"R : Type v\ninst✝¹ : NonUnitalNonAssocSemiring R\ninst✝ : Star R\nself : NonUnitalStarSubsemiring R\na : R\n_ha : Membership.mem self.carrier a\n⊢ Membership.mem self.carrier (Star.star a)","decl":"/-- A non-unital star subsemiring is a non-unital subsemiring which also is closed under the\n`star` operation. -/\nstructure NonUnitalStarSubsemiring (R : Type v) [NonUnitalNonAssocSemiring R] [Star R]\n    extends NonUnitalSubsemiring R : Type v where\n  /-- The `carrier` of a `NonUnitalStarSubsemiring` is closed under the `star` operation. -/\n  star_mem' : ∀ {a : R} (_ha : a ∈ carrier), star a ∈ carrier\n\n"}
{"name":"NonUnitalStarSubsemiring.mk.inj","module":"Mathlib.Algebra.Star.NonUnitalSubsemiring","initialProofState":"R : Type v\ninst✝¹ : NonUnitalNonAssocSemiring R\ninst✝ : Star R\ntoNonUnitalSubsemiring✝ : NonUnitalSubsemiring R\nstar_mem'✝ : ∀ {a : R}, Membership.mem toNonUnitalSubsemiring✝.carrier a → Membership.mem toNonUnitalSubsemiring✝.carrier (Star.star a)\ntoNonUnitalSubsemiring : NonUnitalSubsemiring R\nstar_mem' : ∀ {a : R}, Membership.mem toNonUnitalSubsemiring.carrier a → Membership.mem toNonUnitalSubsemiring.carrier (Star.star a)\nx✝ : Eq { toNonUnitalSubsemiring := toNonUnitalSubsemiring✝, star_mem' := star_mem'✝ } { toNonUnitalSubsemiring := toNonUnitalSubsemiring, star_mem' := star_mem' }\n⊢ Eq toNonUnitalSubsemiring✝ toNonUnitalSubsemiring","decl":"/-- A non-unital star subsemiring is a non-unital subsemiring which also is closed under the\n`star` operation. -/\nstructure NonUnitalStarSubsemiring (R : Type v) [NonUnitalNonAssocSemiring R] [Star R]\n    extends NonUnitalSubsemiring R : Type v where\n  /-- The `carrier` of a `NonUnitalStarSubsemiring` is closed under the `star` operation. -/\n  star_mem' : ∀ {a : R} (_ha : a ∈ carrier), star a ∈ carrier\n\n"}
{"name":"NonUnitalStarSubsemiring.mk.sizeOf_spec","module":"Mathlib.Algebra.Star.NonUnitalSubsemiring","initialProofState":"R : Type v\ninst✝² : NonUnitalNonAssocSemiring R\ninst✝¹ : Star R\ninst✝ : SizeOf R\ntoNonUnitalSubsemiring : NonUnitalSubsemiring R\nstar_mem' : ∀ {a : R}, Membership.mem toNonUnitalSubsemiring.carrier a → Membership.mem toNonUnitalSubsemiring.carrier (Star.star a)\n⊢ Eq (SizeOf.sizeOf { toNonUnitalSubsemiring := toNonUnitalSubsemiring, star_mem' := star_mem' }) (HAdd.hAdd 1 (SizeOf.sizeOf toNonUnitalSubsemiring))","decl":"/-- A non-unital star subsemiring is a non-unital subsemiring which also is closed under the\n`star` operation. -/\nstructure NonUnitalStarSubsemiring (R : Type v) [NonUnitalNonAssocSemiring R] [Star R]\n    extends NonUnitalSubsemiring R : Type v where\n  /-- The `carrier` of a `NonUnitalStarSubsemiring` is closed under the `star` operation. -/\n  star_mem' : ∀ {a : R} (_ha : a ∈ carrier), star a ∈ carrier\n\n"}
{"name":"NonUnitalStarSubsemiring.mk.injEq","module":"Mathlib.Algebra.Star.NonUnitalSubsemiring","initialProofState":"R : Type v\ninst✝¹ : NonUnitalNonAssocSemiring R\ninst✝ : Star R\ntoNonUnitalSubsemiring✝ : NonUnitalSubsemiring R\nstar_mem'✝ : ∀ {a : R}, Membership.mem toNonUnitalSubsemiring✝.carrier a → Membership.mem toNonUnitalSubsemiring✝.carrier (Star.star a)\ntoNonUnitalSubsemiring : NonUnitalSubsemiring R\nstar_mem' : ∀ {a : R}, Membership.mem toNonUnitalSubsemiring.carrier a → Membership.mem toNonUnitalSubsemiring.carrier (Star.star a)\n⊢ Eq (Eq { toNonUnitalSubsemiring := toNonUnitalSubsemiring✝, star_mem' := star_mem'✝ } { toNonUnitalSubsemiring := toNonUnitalSubsemiring, star_mem' := star_mem' }) (Eq toNonUnitalSubsemiring✝ toNonUnitalSubsemiring)","decl":"/-- A non-unital star subsemiring is a non-unital subsemiring which also is closed under the\n`star` operation. -/\nstructure NonUnitalStarSubsemiring (R : Type v) [NonUnitalNonAssocSemiring R] [Star R]\n    extends NonUnitalSubsemiring R : Type v where\n  /-- The `carrier` of a `NonUnitalStarSubsemiring` is closed under the `star` operation. -/\n  star_mem' : ∀ {a : R} (_ha : a ∈ carrier), star a ∈ carrier\n\n"}
{"name":"NonUnitalStarSubsemiring.instNonUnitalSubsemiringClass","module":"Mathlib.Algebra.Star.NonUnitalSubsemiring","initialProofState":"R : Type v\ninst✝¹ : NonUnitalNonAssocSemiring R\ninst✝ : StarRing R\n⊢ NonUnitalSubsemiringClass (NonUnitalStarSubsemiring R) R","decl":"instance instNonUnitalSubsemiringClass : NonUnitalSubsemiringClass (NonUnitalStarSubsemiring R) R\n    where\n  add_mem {s} := s.add_mem'\n  mul_mem {s} := s.mul_mem'\n  zero_mem {s} := s.zero_mem'\n\n"}
{"name":"NonUnitalStarSubsemiring.instStarMemClass","module":"Mathlib.Algebra.Star.NonUnitalSubsemiring","initialProofState":"R : Type v\ninst✝¹ : NonUnitalNonAssocSemiring R\ninst✝ : StarRing R\n⊢ StarMemClass (NonUnitalStarSubsemiring R) R","decl":"instance instStarMemClass : StarMemClass (NonUnitalStarSubsemiring R) R where\n  star_mem {s} := s.star_mem'\n\n"}
{"name":"NonUnitalStarSubsemiring.mem_carrier","module":"Mathlib.Algebra.Star.NonUnitalSubsemiring","initialProofState":"R : Type v\ninst✝¹ : NonUnitalNonAssocSemiring R\ninst✝ : StarRing R\ns : NonUnitalStarSubsemiring R\nx : R\n⊢ Iff (Membership.mem s.carrier x) (Membership.mem s x)","decl":"theorem mem_carrier {s : NonUnitalStarSubsemiring R} {x : R} : x ∈ s.carrier ↔ x ∈ s :=\n  Iff.rfl\n\n"}
{"name":"NonUnitalStarSubsemiring.coe_copy","module":"Mathlib.Algebra.Star.NonUnitalSubsemiring","initialProofState":"R : Type v\ninst✝¹ : NonUnitalNonAssocSemiring R\ninst✝ : StarRing R\nS : NonUnitalStarSubsemiring R\ns : Set R\nhs : Eq s ↑S\n⊢ Eq (↑(S.copy s hs)) s","decl":"@[simp]\ntheorem coe_copy (S : NonUnitalStarSubsemiring R) (s : Set R) (hs : s = ↑S) :\n    (S.copy s hs : Set R) = s :=\n  rfl\n\n"}
{"name":"NonUnitalStarSubsemiring.copy_eq","module":"Mathlib.Algebra.Star.NonUnitalSubsemiring","initialProofState":"R : Type v\ninst✝¹ : NonUnitalNonAssocSemiring R\ninst✝ : StarRing R\nS : NonUnitalStarSubsemiring R\ns : Set R\nhs : Eq s ↑S\n⊢ Eq (S.copy s hs) S","decl":"theorem copy_eq (S : NonUnitalStarSubsemiring R) (s : Set R) (hs : s = ↑S) : S.copy s hs = S :=\n  SetLike.coe_injective hs\n\n"}
