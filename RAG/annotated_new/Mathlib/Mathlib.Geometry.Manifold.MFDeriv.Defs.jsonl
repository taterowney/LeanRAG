{"name":"differentiableWithinAtProp_self_source","module":"Mathlib.Geometry.Manifold.MFDeriv.Defs","initialProofState":"𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nE' : Type u_5\ninst✝² : NormedAddCommGroup E'\ninst✝¹ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nf : E → H'\ns : Set E\nx : E\n⊢ Iff (DifferentiableWithinAtProp (modelWithCornersSelf 𝕜 E) I' f s x) (DifferentiableWithinAt 𝕜 (Function.comp (↑I') f) s x)","decl":"theorem differentiableWithinAtProp_self_source {f : E → H'} {s : Set E} {x : E} :\n    DifferentiableWithinAtProp 𝓘(𝕜, E) I' f s x ↔ DifferentiableWithinAt 𝕜 (I' ∘ f) s x := by\n  simp_rw [DifferentiableWithinAtProp, modelWithCornersSelf_coe, range_id, inter_univ,\n    modelWithCornersSelf_coe_symm, CompTriple.comp_eq, preimage_id_eq, id_eq]\n\n"}
{"name":"DifferentiableWithinAtProp_self","module":"Mathlib.Geometry.Manifold.MFDeriv.Defs","initialProofState":"𝕜 : Type u_1\ninst✝⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace 𝕜 E\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nf : E → E'\ns : Set E\nx : E\n⊢ Iff (DifferentiableWithinAtProp (modelWithCornersSelf 𝕜 E) (modelWithCornersSelf 𝕜 E') f s x) (DifferentiableWithinAt 𝕜 f s x)","decl":"theorem DifferentiableWithinAtProp_self {f : E → E'} {s : Set E} {x : E} :\n    DifferentiableWithinAtProp 𝓘(𝕜, E) 𝓘(𝕜, E') f s x ↔ DifferentiableWithinAt 𝕜 f s x :=\n  differentiableWithinAtProp_self_source\n\n"}
{"name":"differentiableWithinAtProp_self_target","module":"Mathlib.Geometry.Manifold.MFDeriv.Defs","initialProofState":"𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nE' : Type u_5\ninst✝¹ : NormedAddCommGroup E'\ninst✝ : NormedSpace 𝕜 E'\nf : H → E'\ns : Set H\nx : H\n⊢ Iff (DifferentiableWithinAtProp I (modelWithCornersSelf 𝕜 E') f s x) (DifferentiableWithinAt 𝕜 (Function.comp f ↑I.symm) (Inter.inter (Set.preimage (↑I.symm) s) (Set.range ↑I)) (↑I x))","decl":"theorem differentiableWithinAtProp_self_target {f : H → E'} {s : Set H} {x : H} :\n    DifferentiableWithinAtProp I 𝓘(𝕜, E') f s x ↔\n      DifferentiableWithinAt 𝕜 (f ∘ I.symm) (I.symm ⁻¹' s ∩ range I) (I x) :=\n  Iff.rfl\n\n"}
{"name":"differentiableWithinAt_localInvariantProp","module":"Mathlib.Geometry.Manifold.MFDeriv.Defs","initialProofState":"𝕜 : Type u_1\ninst✝⁶ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝³ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nE' : Type u_5\ninst✝² : NormedAddCommGroup E'\ninst✝¹ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\n⊢ (contDiffGroupoid 1 I).LocalInvariantProp (contDiffGroupoid 1 I') (DifferentiableWithinAtProp I I')","decl":"/-- Being differentiable in the model space is a local property, invariant under smooth maps.\nTherefore, it will lift nicely to manifolds. -/\ntheorem differentiableWithinAt_localInvariantProp :\n    (contDiffGroupoid 1 I).LocalInvariantProp (contDiffGroupoid 1 I')\n      (DifferentiableWithinAtProp I I') :=\n  { is_local := by\n      intro s x u f u_open xu\n      have : I.symm ⁻¹' (s ∩ u) ∩ Set.range I = I.symm ⁻¹' s ∩ Set.range I ∩ I.symm ⁻¹' u := by\n        simp only [Set.inter_right_comm, Set.preimage_inter]\n      rw [DifferentiableWithinAtProp, DifferentiableWithinAtProp, this]\n      symm\n      apply differentiableWithinAt_inter\n      have : u ∈ 𝓝 (I.symm (I x)) := by\n        rw [ModelWithCorners.left_inv]\n        exact u_open.mem_nhds xu\n      apply I.continuous_symm.continuousAt this\n    right_invariance' := by\n      intro s x f e he hx h\n      rw [DifferentiableWithinAtProp] at h ⊢\n      have : I x = (I ∘ e.symm ∘ I.symm) (I (e x)) := by simp only [hx, mfld_simps]\n      rw [this] at h\n      have : I (e x) ∈ I.symm ⁻¹' e.target ∩ Set.range I := by simp only [hx, mfld_simps]\n      have := (mem_groupoid_of_pregroupoid.2 he).2.contDiffWithinAt this\n      convert (h.comp' _ (this.differentiableWithinAt le_rfl)).mono_of_mem_nhdsWithin _\n        using 1\n      · ext y; simp only [mfld_simps]\n      refine\n        mem_nhdsWithin.mpr\n          ⟨I.symm ⁻¹' e.target, e.open_target.preimage I.continuous_symm, by\n            simp_rw [Set.mem_preimage, I.left_inv, e.mapsTo hx], ?_⟩\n      mfld_set_tac\n    congr_of_forall := by\n      intro s x f g h hx hf\n      apply hf.congr\n      · intro y hy\n        simp only [mfld_simps] at hy\n        simp only [h, hy, mfld_simps]\n      · simp only [hx, mfld_simps]\n    left_invariance' := by\n      intro s x f e' he' hs hx h\n      rw [DifferentiableWithinAtProp] at h ⊢\n      have A : (I' ∘ f ∘ I.symm) (I x) ∈ I'.symm ⁻¹' e'.source ∩ Set.range I' := by\n        simp only [hx, mfld_simps]\n      have := (mem_groupoid_of_pregroupoid.2 he').1.contDiffWithinAt A\n      convert (this.differentiableWithinAt le_rfl).comp _ h _\n      · ext y; simp only [mfld_simps]\n      · intro y hy; simp only [mfld_simps] at hy; simpa only [hy, mfld_simps] using hs hy.1 }\n\n"}
{"name":"differentiable_within_at_localInvariantProp","module":"Mathlib.Geometry.Manifold.MFDeriv.Defs","initialProofState":"𝕜 : Type u_1\ninst✝⁶ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝³ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nE' : Type u_5\ninst✝² : NormedAddCommGroup E'\ninst✝¹ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\n⊢ (contDiffGroupoid 1 I).LocalInvariantProp (contDiffGroupoid 1 I') (DifferentiableWithinAtProp I I')","decl":"@[deprecated (since := \"2024-10-10\")]\nalias differentiable_within_at_localInvariantProp := differentiableWithinAt_localInvariantProp\n\n"}
{"name":"mdifferentiableWithinAt_iff'","module":"Mathlib.Geometry.Manifold.MFDeriv.Defs","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\ns : Set M\nx : M\n⊢ Iff (MDifferentiableWithinAt I I' f s x) (And (ContinuousWithinAt f s x) (DifferentiableWithinAt 𝕜 (writtenInExtChartAt I I' x f) (Inter.inter (Set.preimage (↑(extChartAt I x).symm) s) (Set.range ↑I)) (↑(extChartAt I x) x)))","decl":"theorem mdifferentiableWithinAt_iff' (f : M → M') (s : Set M) (x : M) :\n    MDifferentiableWithinAt I I' f s x ↔ ContinuousWithinAt f s x ∧\n    DifferentiableWithinAt 𝕜 (writtenInExtChartAt I I' x f)\n      ((extChartAt I x).symm ⁻¹' s ∩ range I) ((extChartAt I x) x) := by\n  rw [MDifferentiableWithinAt, liftPropWithinAt_iff']; rfl\n\n"}
{"name":"MDifferentiableWithinAt.continuousWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Defs","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\ns : Set M\nx : M\nhf : MDifferentiableWithinAt I I' f s x\n⊢ ContinuousWithinAt f s x","decl":"theorem MDifferentiableWithinAt.continuousWithinAt {f : M → M'} {s : Set M} {x : M}\n    (hf : MDifferentiableWithinAt I I' f s x) :\n    ContinuousWithinAt f s x :=\n  mdifferentiableWithinAt_iff' .. |>.1 hf |>.1\n\n"}
{"name":"MDifferentiableWithinAt.differentiableWithinAt_writtenInExtChartAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Defs","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\ns : Set M\nx : M\nhf : MDifferentiableWithinAt I I' f s x\n⊢ DifferentiableWithinAt 𝕜 (writtenInExtChartAt I I' x f) (Inter.inter (Set.preimage (↑(extChartAt I x).symm) s) (Set.range ↑I)) (↑(extChartAt I x) x)","decl":"theorem MDifferentiableWithinAt.differentiableWithinAt_writtenInExtChartAt\n    {f : M → M'} {s : Set M} {x : M} (hf : MDifferentiableWithinAt I I' f s x) :\n    DifferentiableWithinAt 𝕜 (writtenInExtChartAt I I' x f)\n      ((extChartAt I x).symm ⁻¹' s ∩ range I) ((extChartAt I x) x) :=\n  mdifferentiableWithinAt_iff' .. |>.1 hf |>.2\n\n"}
{"name":"mdifferentiableAt_iff","module":"Mathlib.Geometry.Manifold.MFDeriv.Defs","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\n⊢ Iff (MDifferentiableAt I I' f x) (And (ContinuousAt f x) (DifferentiableWithinAt 𝕜 (writtenInExtChartAt I I' x f) (Set.range ↑I) (↑(extChartAt I x) x)))","decl":"theorem mdifferentiableAt_iff (f : M → M') (x : M) :\n    MDifferentiableAt I I' f x ↔ ContinuousAt f x ∧\n    DifferentiableWithinAt 𝕜 (writtenInExtChartAt I I' x f) (range I) ((extChartAt I x) x) := by\n  rw [MDifferentiableAt, liftPropAt_iff]\n  congrm _ ∧ ?_\n  simp [DifferentiableWithinAtProp, Set.univ_inter]\n  -- Porting note: `rfl` wasn't needed\n  rfl\n\n"}
{"name":"MDifferentiableAt.continuousAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Defs","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\nhf : MDifferentiableAt I I' f x\n⊢ ContinuousAt f x","decl":"theorem MDifferentiableAt.continuousAt {f : M → M'} {x : M} (hf : MDifferentiableAt I I' f x) :\n    ContinuousAt f x :=\n  mdifferentiableAt_iff .. |>.1 hf |>.1\n\n"}
{"name":"MDifferentiableAt.differentiableWithinAt_writtenInExtChartAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Defs","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\nhf : MDifferentiableAt I I' f x\n⊢ DifferentiableWithinAt 𝕜 (writtenInExtChartAt I I' x f) (Set.range ↑I) (↑(extChartAt I x) x)","decl":"theorem MDifferentiableAt.differentiableWithinAt_writtenInExtChartAt {f : M → M'} {x : M}\n    (hf : MDifferentiableAt I I' f x) :\n    DifferentiableWithinAt 𝕜 (writtenInExtChartAt I I' x f) (range I) ((extChartAt I x) x) :=\n  mdifferentiableAt_iff .. |>.1 hf |>.2\n\n"}
