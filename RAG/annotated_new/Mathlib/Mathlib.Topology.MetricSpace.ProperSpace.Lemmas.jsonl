{"name":"exists_pos_lt_subset_ball","module":"Mathlib.Topology.MetricSpace.ProperSpace.Lemmas","initialProofState":"α : Type u_1\ninst✝¹ : PseudoMetricSpace α\ninst✝ : ProperSpace α\nx : α\nr : Real\ns : Set α\nhr : LT.lt 0 r\nhs : IsClosed s\nh : HasSubset.Subset s (Metric.ball x r)\n⊢ Exists fun r' => And (Membership.mem (Set.Ioo 0 r) r') (HasSubset.Subset s (Metric.ball x r'))","decl":"/-- If a nonempty ball in a proper space includes a closed set `s`, then there exists a nonempty\nball with the same center and a strictly smaller radius that includes `s`. -/\ntheorem exists_pos_lt_subset_ball (hr : 0 < r) (hs : IsClosed s) (h : s ⊆ ball x r) :\n    ∃ r' ∈ Ioo 0 r, s ⊆ ball x r' := by\n  rcases eq_empty_or_nonempty s with (rfl | hne)\n  · exact ⟨r / 2, ⟨half_pos hr, half_lt_self hr⟩, empty_subset _⟩\n  have : IsCompact s :=\n    (isCompact_closedBall x r).of_isClosed_subset hs (h.trans ball_subset_closedBall)\n  obtain ⟨y, hys, hy⟩ : ∃ y ∈ s, s ⊆ closedBall x (dist y x) :=\n    this.exists_isMaxOn (β := α) (α := ℝ) hne (continuous_id.dist continuous_const).continuousOn\n  have hyr : dist y x < r := h hys\n  rcases exists_between hyr with ⟨r', hyr', hrr'⟩\n  exact ⟨r', ⟨dist_nonneg.trans_lt hyr', hrr'⟩, hy.trans <| closedBall_subset_ball hyr'⟩\n\n"}
{"name":"exists_lt_subset_ball","module":"Mathlib.Topology.MetricSpace.ProperSpace.Lemmas","initialProofState":"α : Type u_1\ninst✝¹ : PseudoMetricSpace α\ninst✝ : ProperSpace α\nx : α\nr : Real\ns : Set α\nhs : IsClosed s\nh : HasSubset.Subset s (Metric.ball x r)\n⊢ Exists fun r' => And (LT.lt r' r) (HasSubset.Subset s (Metric.ball x r'))","decl":"/-- If a ball in a proper space includes a closed set `s`, then there exists a ball with the same\ncenter and a strictly smaller radius that includes `s`. -/\ntheorem exists_lt_subset_ball (hs : IsClosed s) (h : s ⊆ ball x r) : ∃ r' < r, s ⊆ ball x r' := by\n  rcases le_or_lt r 0 with hr | hr\n  · rw [ball_eq_empty.2 hr, subset_empty_iff] at h\n    subst s\n    exact (exists_lt r).imp fun r' hr' => ⟨hr', empty_subset _⟩\n  · exact (exists_pos_lt_subset_ball hr hs h).imp fun r' hr' => ⟨hr'.1.2, hr'.2⟩\n\n"}
{"name":"Metric.exists_isLocalMin_mem_ball","module":"Mathlib.Topology.MetricSpace.ProperSpace.Lemmas","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁴ : PseudoMetricSpace α\ninst✝³ : ProperSpace α\ninst✝² : TopologicalSpace β\ninst✝¹ : ConditionallyCompleteLinearOrder β\ninst✝ : OrderTopology β\nf : α → β\na z : α\nr : Real\nhf : ContinuousOn f (Metric.closedBall a r)\nhz : Membership.mem (Metric.closedBall a r) z\nhf1 : ∀ (z' : α), Membership.mem (Metric.sphere a r) z' → LT.lt (f z) (f z')\n⊢ Exists fun z => And (Membership.mem (Metric.ball a r) z) (IsLocalMin f z)","decl":"theorem Metric.exists_isLocalMin_mem_ball [TopologicalSpace β]\n    [ConditionallyCompleteLinearOrder β] [OrderTopology β] {f : α → β} {a z : α} {r : ℝ}\n    (hf : ContinuousOn f (closedBall a r)) (hz : z ∈ closedBall a r)\n    (hf1 : ∀ z' ∈ sphere a r, f z < f z') : ∃ z ∈ ball a r, IsLocalMin f z := by\n  simp_rw [← closedBall_diff_ball] at hf1\n  exact (isCompact_closedBall a r).exists_isLocalMin_mem_open ball_subset_closedBall hf hz hf1\n    isOpen_ball\n"}
