{"name":"TopologicalSpace.Fiber.sigmaIsoHom_apply","module":"Mathlib.Topology.FiberPartition","initialProofState":"S : Type u_1\nY : Type u_2\nf : S → Y\ninst✝ : TopologicalSpace S\nx✝ : Sigma fun x => ↑↑x\n⊢ Eq ((TopologicalSpace.Fiber.sigmaIsoHom f) x✝) (TopologicalSpace.Fiber.sigmaIsoHom.match_1 f (fun x => S) x✝ fun a x => ↑x)","decl":"/-- The canonical map from the disjoint union induced by `f` to `S`. -/\n@[simps apply]\ndef sigmaIsoHom : C((x : Fiber f) × x.val, S) where\n  toFun | ⟨a, x⟩ => x.val\n\n"}
{"name":"TopologicalSpace.Fiber.sigmaIsoHom_inj","module":"Mathlib.Topology.FiberPartition","initialProofState":"S : Type u_1\nY : Type u_2\nf : S → Y\ninst✝ : TopologicalSpace S\n⊢ Function.Injective ⇑(TopologicalSpace.Fiber.sigmaIsoHom f)","decl":"lemma sigmaIsoHom_inj : Function.Injective (sigmaIsoHom f) := by\n  rintro ⟨⟨_, _, rfl⟩, ⟨_, hx⟩⟩ ⟨⟨_, _, rfl⟩, ⟨_, hy⟩⟩ h\n  refine Sigma.subtype_ext ?_ h\n  simp only [sigmaIsoHom_apply] at h\n  rw [Set.mem_preimage, Set.mem_singleton_iff] at hx hy\n  simp [← hx, ← hy, h]\n\n"}
{"name":"TopologicalSpace.Fiber.sigmaIsoHom_surj","module":"Mathlib.Topology.FiberPartition","initialProofState":"S : Type u_1\nY : Type u_2\nf : S → Y\ninst✝ : TopologicalSpace S\n⊢ Function.Surjective ⇑(TopologicalSpace.Fiber.sigmaIsoHom f)","decl":"lemma sigmaIsoHom_surj : Function.Surjective (sigmaIsoHom f) :=\n  fun _ ↦ ⟨⟨⟨_, ⟨⟨_, Set.mem_range_self _⟩, rfl⟩⟩, ⟨_, rfl⟩⟩, rfl⟩\n\n"}
{"name":"TopologicalSpace.Fiber.instCompactSpaceElemValSetMemRangeCoeLocallyConstantPreimageSingleton","module":"Mathlib.Topology.FiberPartition","initialProofState":"S : Type u_1\nY : Type u_2\ninst✝ : TopologicalSpace S\nl : LocallyConstant S Y\nx : Function.Fiber ⇑l\n⊢ CompactSpace ↑↑x","decl":"instance (x : Fiber l) : CompactSpace x.val := by\n  obtain ⟨y, hy⟩ := x.prop\n  rw [← isCompact_iff_compactSpace, ← hy]\n  exact (l.2.isClosed_fiber _).isCompact\n\n"}
{"name":"TopologicalSpace.Fiber.instFiniteFiberCoeLocallyConstant","module":"Mathlib.Topology.FiberPartition","initialProofState":"S : Type u_1\nY : Type u_2\ninst✝¹ : TopologicalSpace S\nl : LocallyConstant S Y\ninst✝ : CompactSpace S\n⊢ Finite (Function.Fiber ⇑l)","decl":"instance : Finite (Fiber l) :=\n  have : Finite (Set.range l) := l.range_finite\n  Finite.Set.finite_range _\n\n"}
