{"name":"MeasureTheory.Lp.compMeasurePreserving_continuous","module":"Mathlib.MeasureTheory.Function.LpSpace.ContinuousCompMeasurePreserving","initialProofState":"X : Type u_1\nY : Type u_2\ninst✝¹¹ : TopologicalSpace X\ninst✝¹⁰ : MeasurableSpace X\ninst✝⁹ : BorelSpace X\ninst✝⁸ : R1Space X\ninst✝⁷ : TopologicalSpace Y\ninst✝⁶ : MeasurableSpace Y\ninst✝⁵ : BorelSpace Y\ninst✝⁴ : R1Space Y\nμ : MeasureTheory.Measure X\nν : MeasureTheory.Measure Y\ninst✝³ : μ.InnerRegularCompactLTTop\ninst✝² : MeasureTheory.IsLocallyFiniteMeasure ν\nE : Type u_3\ninst✝¹ : NormedAddCommGroup E\np : ENNReal\ninst✝ : Fact (LE.le 1 p)\nhp : Ne p Top.top\n⊢ Continuous fun gf => (MeasureTheory.Lp.compMeasurePreserving ⇑↑gf.2 ⋯) gf.1","decl":"/-- Let `X` and `Y` be R₁ topological spaces\nwith Borel σ-algebras and measures `μ` and `ν`, respectively.\nSuppose that `μ` is inner regular for finite measure sets with respect to compact sets\nand `ν` is a locally finite measure.\nLet `1 ≤ p < ∞` be an extended nonnegative real number.\nThen the composition of a function `g : Lp E p ν`\nand a measure preserving continuous function `f : C(X, Y)`\nis continuous in both variables. -/\ntheorem compMeasurePreserving_continuous (hp : p ≠ ∞) :\n    Continuous fun gf : Lp E p ν × {f : C(X, Y) // MeasurePreserving f μ ν} ↦\n      compMeasurePreserving gf.2.1 gf.2.2 gf.1 := by\n  have hp₀ : p ≠ 0 := (one_pos.trans_le Fact.out).ne'\n  refine continuous_prod_of_dense_continuous_lipschitzWith _ 1\n    (MeasureTheory.Lp.simpleFunc.dense hp) ?_ fun f ↦ (isometry_compMeasurePreserving f.2).lipschitz\n  intro f hf\n  lift f to Lp.simpleFunc E p ν using hf\n  induction f using Lp.simpleFunc.induction hp₀ hp with\n  | h_add hfp hgp _ ihf ihg => exact ihf.add ihg\n  | @h_ind c s hs hνs =>\n    dsimp only [Lp.simpleFunc.coe_indicatorConst, Lp.indicatorConstLp_compMeasurePreserving]\n    refine continuous_indicatorConstLp_set hp fun f ↦ ?_\n    apply tendsto_measure_symmDiff_preimage_nhds_zero continuousAt_subtype_val _ f.2\n      hs.nullMeasurableSet hνs.ne\n    exact .of_forall Subtype.property\n\n"}
{"name":"Filter.Tendsto.compMeasurePreservingLp","module":"Mathlib.MeasureTheory.Function.LpSpace.ContinuousCompMeasurePreserving","initialProofState":"X : Type u_1\nY : Type u_2\ninst✝¹¹ : TopologicalSpace X\ninst✝¹⁰ : MeasurableSpace X\ninst✝⁹ : BorelSpace X\ninst✝⁸ : R1Space X\ninst✝⁷ : TopologicalSpace Y\ninst✝⁶ : MeasurableSpace Y\ninst✝⁵ : BorelSpace Y\ninst✝⁴ : R1Space Y\nμ : MeasureTheory.Measure X\nν : MeasureTheory.Measure Y\ninst✝³ : μ.InnerRegularCompactLTTop\ninst✝² : MeasureTheory.IsLocallyFiniteMeasure ν\nE : Type u_3\ninst✝¹ : NormedAddCommGroup E\np : ENNReal\ninst✝ : Fact (LE.le 1 p)\nα : Type u_4\nl : Filter α\nf : α → Subtype fun x => Membership.mem (MeasureTheory.Lp E p ν) x\nf₀ : Subtype fun x => Membership.mem (MeasureTheory.Lp E p ν) x\ng : α → ContinuousMap X Y\ng₀ : ContinuousMap X Y\nhf : Filter.Tendsto f l (nhds f₀)\nhg : Filter.Tendsto g l (nhds g₀)\nhgm : ∀ (a : α), MeasureTheory.MeasurePreserving (⇑(g a)) μ ν\nhgm₀ : MeasureTheory.MeasurePreserving (⇑g₀) μ ν\nhp : Ne p Top.top\n⊢ Filter.Tendsto (fun a => (MeasureTheory.Lp.compMeasurePreserving ⇑(g a) ⋯) (f a)) l (nhds ((MeasureTheory.Lp.compMeasurePreserving (⇑g₀) hgm₀) f₀))","decl":"theorem Filter.Tendsto.compMeasurePreservingLp {α : Type*} {l : Filter α}\n    {f : α → Lp E p ν} {f₀ : Lp E p ν} {g : α → C(X, Y)} {g₀ : C(X, Y)}\n    (hf : Tendsto f l (𝓝 f₀)) (hg : Tendsto g l (𝓝 g₀))\n    (hgm : ∀ a, MeasurePreserving (g a) μ ν) (hgm₀ : MeasurePreserving g₀ μ ν) (hp : p ≠ ∞) :\n    Tendsto (fun a ↦ Lp.compMeasurePreserving (g a) (hgm a) (f a)) l\n      (𝓝 (Lp.compMeasurePreserving g₀ hgm₀ f₀)) := by\n  have := (Lp.compMeasurePreserving_continuous μ ν E hp).tendsto ⟨f₀, g₀, hgm₀⟩\n  replace hg : Tendsto (fun a ↦ ⟨g a, hgm a⟩ : α → {g : C(X, Y) // MeasurePreserving g μ ν})\n      l (𝓝 ⟨g₀, hgm₀⟩) :=\n    tendsto_subtype_rng.2 hg\n  convert this.comp (hf.prod_mk_nhds hg)\n\n"}
{"name":"ContinuousWithinAt.compMeasurePreservingLp","module":"Mathlib.MeasureTheory.Function.LpSpace.ContinuousCompMeasurePreserving","initialProofState":"X : Type u_1\nY : Type u_2\ninst✝¹² : TopologicalSpace X\ninst✝¹¹ : MeasurableSpace X\ninst✝¹⁰ : BorelSpace X\ninst✝⁹ : R1Space X\ninst✝⁸ : TopologicalSpace Y\ninst✝⁷ : MeasurableSpace Y\ninst✝⁶ : BorelSpace Y\ninst✝⁵ : R1Space Y\nμ : MeasureTheory.Measure X\nν : MeasureTheory.Measure Y\ninst✝⁴ : μ.InnerRegularCompactLTTop\ninst✝³ : MeasureTheory.IsLocallyFiniteMeasure ν\nE : Type u_3\ninst✝² : NormedAddCommGroup E\np : ENNReal\ninst✝¹ : Fact (LE.le 1 p)\nZ : Type u_4\ninst✝ : TopologicalSpace Z\nf : Z → Subtype fun x => Membership.mem (MeasureTheory.Lp E p ν) x\ng : Z → ContinuousMap X Y\ns : Set Z\nz : Z\nhf : ContinuousWithinAt f s z\nhg : ContinuousWithinAt g s z\nhgm : ∀ (z : Z), MeasureTheory.MeasurePreserving (⇑(g z)) μ ν\nhp : Ne p Top.top\n⊢ ContinuousWithinAt (fun z => (MeasureTheory.Lp.compMeasurePreserving ⇑(g z) ⋯) (f z)) s z","decl":"theorem ContinuousWithinAt.compMeasurePreservingLp (hf : ContinuousWithinAt f s z)\n    (hg : ContinuousWithinAt g s z) (hgm : ∀ z, MeasurePreserving (g z) μ ν) (hp : p ≠ ∞) :\n    ContinuousWithinAt (fun z ↦ Lp.compMeasurePreserving (g z) (hgm z) (f z)) s z :=\n  Tendsto.compMeasurePreservingLp hf hg _ _ hp\n\n"}
{"name":"ContinuousAt.compMeasurePreservingLp","module":"Mathlib.MeasureTheory.Function.LpSpace.ContinuousCompMeasurePreserving","initialProofState":"X : Type u_1\nY : Type u_2\ninst✝¹² : TopologicalSpace X\ninst✝¹¹ : MeasurableSpace X\ninst✝¹⁰ : BorelSpace X\ninst✝⁹ : R1Space X\ninst✝⁸ : TopologicalSpace Y\ninst✝⁷ : MeasurableSpace Y\ninst✝⁶ : BorelSpace Y\ninst✝⁵ : R1Space Y\nμ : MeasureTheory.Measure X\nν : MeasureTheory.Measure Y\ninst✝⁴ : μ.InnerRegularCompactLTTop\ninst✝³ : MeasureTheory.IsLocallyFiniteMeasure ν\nE : Type u_3\ninst✝² : NormedAddCommGroup E\np : ENNReal\ninst✝¹ : Fact (LE.le 1 p)\nZ : Type u_4\ninst✝ : TopologicalSpace Z\nf : Z → Subtype fun x => Membership.mem (MeasureTheory.Lp E p ν) x\ng : Z → ContinuousMap X Y\nz : Z\nhf : ContinuousAt f z\nhg : ContinuousAt g z\nhgm : ∀ (z : Z), MeasureTheory.MeasurePreserving (⇑(g z)) μ ν\nhp : Ne p Top.top\n⊢ ContinuousAt (fun z => (MeasureTheory.Lp.compMeasurePreserving ⇑(g z) ⋯) (f z)) z","decl":"theorem ContinuousAt.compMeasurePreservingLp (hf : ContinuousAt f z)\n    (hg : ContinuousAt g z) (hgm : ∀ z, MeasurePreserving (g z) μ ν) (hp : p ≠ ∞) :\n    ContinuousAt (fun z ↦ Lp.compMeasurePreserving (g z) (hgm z) (f z)) z :=\n  Tendsto.compMeasurePreservingLp hf hg _ _ hp\n\n"}
{"name":"ContinuousOn.compMeasurePreservingLp","module":"Mathlib.MeasureTheory.Function.LpSpace.ContinuousCompMeasurePreserving","initialProofState":"X : Type u_1\nY : Type u_2\ninst✝¹² : TopologicalSpace X\ninst✝¹¹ : MeasurableSpace X\ninst✝¹⁰ : BorelSpace X\ninst✝⁹ : R1Space X\ninst✝⁸ : TopologicalSpace Y\ninst✝⁷ : MeasurableSpace Y\ninst✝⁶ : BorelSpace Y\ninst✝⁵ : R1Space Y\nμ : MeasureTheory.Measure X\nν : MeasureTheory.Measure Y\ninst✝⁴ : μ.InnerRegularCompactLTTop\ninst✝³ : MeasureTheory.IsLocallyFiniteMeasure ν\nE : Type u_3\ninst✝² : NormedAddCommGroup E\np : ENNReal\ninst✝¹ : Fact (LE.le 1 p)\nZ : Type u_4\ninst✝ : TopologicalSpace Z\nf : Z → Subtype fun x => Membership.mem (MeasureTheory.Lp E p ν) x\ng : Z → ContinuousMap X Y\ns : Set Z\nhf : ContinuousOn f s\nhg : ContinuousOn g s\nhgm : ∀ (z : Z), MeasureTheory.MeasurePreserving (⇑(g z)) μ ν\nhp : Ne p Top.top\n⊢ ContinuousOn (fun z => (MeasureTheory.Lp.compMeasurePreserving ⇑(g z) ⋯) (f z)) s","decl":"theorem ContinuousOn.compMeasurePreservingLp (hf : ContinuousOn f s)\n    (hg : ContinuousOn g s) (hgm : ∀ z, MeasurePreserving (g z) μ ν) (hp : p ≠ ∞) :\n    ContinuousOn (fun z ↦ Lp.compMeasurePreserving (g z) (hgm z) (f z)) s := fun z hz ↦\n  (hf z hz).compMeasurePreservingLp (hg z hz) hgm hp\n\n"}
{"name":"Continuous.compMeasurePreservingLp","module":"Mathlib.MeasureTheory.Function.LpSpace.ContinuousCompMeasurePreserving","initialProofState":"X : Type u_1\nY : Type u_2\ninst✝¹² : TopologicalSpace X\ninst✝¹¹ : MeasurableSpace X\ninst✝¹⁰ : BorelSpace X\ninst✝⁹ : R1Space X\ninst✝⁸ : TopologicalSpace Y\ninst✝⁷ : MeasurableSpace Y\ninst✝⁶ : BorelSpace Y\ninst✝⁵ : R1Space Y\nμ : MeasureTheory.Measure X\nν : MeasureTheory.Measure Y\ninst✝⁴ : μ.InnerRegularCompactLTTop\ninst✝³ : MeasureTheory.IsLocallyFiniteMeasure ν\nE : Type u_3\ninst✝² : NormedAddCommGroup E\np : ENNReal\ninst✝¹ : Fact (LE.le 1 p)\nZ : Type u_4\ninst✝ : TopologicalSpace Z\nf : Z → Subtype fun x => Membership.mem (MeasureTheory.Lp E p ν) x\ng : Z → ContinuousMap X Y\nhf : Continuous f\nhg : Continuous g\nhgm : ∀ (z : Z), MeasureTheory.MeasurePreserving (⇑(g z)) μ ν\nhp : Ne p Top.top\n⊢ Continuous fun z => (MeasureTheory.Lp.compMeasurePreserving ⇑(g z) ⋯) (f z)","decl":"theorem Continuous.compMeasurePreservingLp (hf : Continuous f) (hg : Continuous g)\n    (hgm : ∀ z, MeasurePreserving (g z) μ ν) (hp : p ≠ ∞) :\n    Continuous (fun z ↦ Lp.compMeasurePreserving (g z) (hgm z) (f z)) :=\n  continuous_iff_continuousAt.mpr fun _ ↦\n    hf.continuousAt.compMeasurePreservingLp hg.continuousAt hgm hp\n"}
