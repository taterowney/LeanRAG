{"name":"Prod.algebraMap_apply","module":"Mathlib.Algebra.Algebra.Prod","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁴ : CommSemiring R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : Semiring B\ninst✝ : Algebra R B\nr : R\n⊢ Eq ((algebraMap R (Prod A B)) r) { fst := (algebraMap R A) r, snd := (algebraMap R B) r }","decl":"@[simp]\ntheorem algebraMap_apply (r : R) : algebraMap R (A × B) r = (algebraMap R A r, algebraMap R B r) :=\n  rfl\n\n"}
{"name":"AlgHom.fst_apply","module":"Mathlib.Algebra.Algebra.Prod","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁴ : CommSemiring R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : Semiring B\ninst✝ : Algebra R B\na : Prod A B\n⊢ Eq ((AlgHom.fst R A B) a) a.1","decl":"@[simp]\ntheorem fst_apply (a) : fst R A B a = a.1 := rfl\n\n"}
{"name":"AlgHom.snd_apply","module":"Mathlib.Algebra.Algebra.Prod","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁴ : CommSemiring R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : Semiring B\ninst✝ : Algebra R B\na : Prod A B\n⊢ Eq ((AlgHom.snd R A B) a) a.2","decl":"@[simp]\ntheorem snd_apply (a) : snd R A B a = a.2 := rfl\n\n"}
{"name":"AlgHom.prod_apply","module":"Mathlib.Algebra.Algebra.Prod","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\nC : Type u_4\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : Semiring C\ninst✝ : Algebra R C\nf : AlgHom R A B\ng : AlgHom R A C\nx : A\n⊢ Eq ((f.prod g) x) { fst := f x, snd := g x }","decl":"/-- The `Pi.prod` of two morphisms is a morphism. -/\n@[simps!]\ndef prod (f : A →ₐ[R] B) (g : A →ₐ[R] C) : A →ₐ[R] B × C :=\n  { f.toRingHom.prod g.toRingHom with\n    commutes' := fun r => by\n      simp only [toRingHom_eq_coe, RingHom.toFun_eq_coe, RingHom.prod_apply, coe_toRingHom,\n        commutes, Prod.algebraMap_apply] }\n\n"}
{"name":"AlgHom.coe_prod","module":"Mathlib.Algebra.Algebra.Prod","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\nC : Type u_4\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : Semiring C\ninst✝ : Algebra R C\nf : AlgHom R A B\ng : AlgHom R A C\n⊢ Eq (⇑(f.prod g)) (Pi.prod ⇑f ⇑g)","decl":"theorem coe_prod (f : A →ₐ[R] B) (g : A →ₐ[R] C) : ⇑(f.prod g) = Pi.prod f g :=\n  rfl\n\n"}
{"name":"AlgHom.fst_prod","module":"Mathlib.Algebra.Algebra.Prod","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\nC : Type u_4\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : Semiring C\ninst✝ : Algebra R C\nf : AlgHom R A B\ng : AlgHom R A C\n⊢ Eq ((AlgHom.fst R B C).comp (f.prod g)) f","decl":"@[simp]\ntheorem fst_prod (f : A →ₐ[R] B) (g : A →ₐ[R] C) : (fst R B C).comp (prod f g) = f := by ext; rfl\n\n"}
{"name":"AlgHom.snd_prod","module":"Mathlib.Algebra.Algebra.Prod","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\nC : Type u_4\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : Semiring C\ninst✝ : Algebra R C\nf : AlgHom R A B\ng : AlgHom R A C\n⊢ Eq ((AlgHom.snd R B C).comp (f.prod g)) g","decl":"@[simp]\ntheorem snd_prod (f : A →ₐ[R] B) (g : A →ₐ[R] C) : (snd R B C).comp (prod f g) = g := by ext; rfl\n\n"}
{"name":"AlgHom.prod_fst_snd","module":"Mathlib.Algebra.Algebra.Prod","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\ninst✝⁴ : CommSemiring R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : Semiring B\ninst✝ : Algebra R B\n⊢ Eq ((AlgHom.fst R A B).prod (AlgHom.snd R A B)) (AlgHom.id R (Prod A B))","decl":"@[simp]\ntheorem prod_fst_snd : prod (fst R A B) (snd R A B) = AlgHom.id R _ := rfl\n\n"}
{"name":"AlgHom.prod_comp","module":"Mathlib.Algebra.Algebra.Prod","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\nC : Type u_4\ninst✝⁸ : CommSemiring R\ninst✝⁷ : Semiring A\ninst✝⁶ : Algebra R A\ninst✝⁵ : Semiring B\ninst✝⁴ : Algebra R B\ninst✝³ : Semiring C\ninst✝² : Algebra R C\nC' : Type u_5\ninst✝¹ : Semiring C'\ninst✝ : Algebra R C'\nf : AlgHom R A B\ng : AlgHom R B C\ng' : AlgHom R B C'\n⊢ Eq ((g.prod g').comp f) ((g.comp f).prod (g'.comp f))","decl":"theorem prod_comp {C' : Type*} [Semiring C'] [Algebra R C']\n    (f : A →ₐ[R] B) (g : B →ₐ[R] C) (g' : B →ₐ[R] C') :\n    (g.prod g').comp f = (g.comp f).prod (g'.comp f) := rfl\n\n"}
{"name":"AlgHom.prodEquiv_symm_apply","module":"Mathlib.Algebra.Algebra.Prod","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\nC : Type u_4\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : Semiring C\ninst✝ : Algebra R C\nf : AlgHom R A (Prod B C)\n⊢ Eq (AlgHom.prodEquiv.symm f) { fst := (AlgHom.fst R B C).comp f, snd := (AlgHom.snd R B C).comp f }","decl":"/-- Taking the product of two maps with the same domain is equivalent to taking the product of\ntheir codomains. -/\n@[simps]\ndef prodEquiv : (A →ₐ[R] B) × (A →ₐ[R] C) ≃ (A →ₐ[R] B × C) where\n  toFun f := f.1.prod f.2\n  invFun f := ((fst _ _ _).comp f, (snd _ _ _).comp f)\n  left_inv f := by ext <;> rfl\n  right_inv f := by ext <;> rfl\n\n"}
{"name":"AlgHom.prodEquiv_apply","module":"Mathlib.Algebra.Algebra.Prod","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\nC : Type u_4\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Semiring A\ninst✝⁴ : Algebra R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : Semiring C\ninst✝ : Algebra R C\nf : Prod (AlgHom R A B) (AlgHom R A C)\n⊢ Eq (AlgHom.prodEquiv f) (f.1.prod f.2)","decl":"/-- Taking the product of two maps with the same domain is equivalent to taking the product of\ntheir codomains. -/\n@[simps]\ndef prodEquiv : (A →ₐ[R] B) × (A →ₐ[R] C) ≃ (A →ₐ[R] B × C) where\n  toFun f := f.1.prod f.2\n  invFun f := ((fst _ _ _).comp f, (snd _ _ _).comp f)\n  left_inv f := by ext <;> rfl\n  right_inv f := by ext <;> rfl\n\n"}
