{"name":"StrictMonoOn.union","module":"Mathlib.Order.Monotone.Union","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : LinearOrder α\ninst✝ : Preorder β\nf : α → β\ns t : Set α\nc : α\nh₁ : StrictMonoOn f s\nh₂ : StrictMonoOn f t\nhs : IsGreatest s c\nht : IsLeast t c\n⊢ StrictMonoOn f (Union.union s t)","decl":"/-- If `f` is strictly monotone both on `s` and `t`, with `s` to the left of `t` and the center\npoint belonging to both `s` and `t`, then `f` is strictly monotone on `s ∪ t` -/\nprotected theorem StrictMonoOn.union {s t : Set α} {c : α} (h₁ : StrictMonoOn f s)\n    (h₂ : StrictMonoOn f t) (hs : IsGreatest s c) (ht : IsLeast t c) : StrictMonoOn f (s ∪ t) := by\n  have A : ∀ x, x ∈ s ∪ t → x ≤ c → x ∈ s := by\n    intro x hx hxc\n    cases hx\n    · assumption\n    rcases eq_or_lt_of_le hxc with (rfl | h'x)\n    · exact hs.1\n    exact (lt_irrefl _ (h'x.trans_le (ht.2 (by assumption)))).elim\n  have B : ∀ x, x ∈ s ∪ t → c ≤ x → x ∈ t := by\n    intro x hx hxc\n    match hx with\n    | Or.inr hx => exact hx\n    | Or.inl hx =>\n      rcases eq_or_lt_of_le hxc with (rfl | h'x)\n      · exact ht.1\n      exact (lt_irrefl _ (h'x.trans_le (hs.2 hx))).elim\n  intro x hx y hy hxy\n  rcases lt_or_le x c with (hxc | hcx)\n  · have xs : x ∈ s := A _ hx hxc.le\n    rcases lt_or_le y c with (hyc | hcy)\n    · exact h₁ xs (A _ hy hyc.le) hxy\n    · exact (h₁ xs hs.1 hxc).trans_le (h₂.monotoneOn ht.1 (B _ hy hcy) hcy)\n  · have xt : x ∈ t := B _ hx hcx\n    have yt : y ∈ t := B _ hy (hcx.trans hxy.le)\n    exact h₂ xt yt hxy\n\n"}
{"name":"StrictMonoOn.Iic_union_Ici","module":"Mathlib.Order.Monotone.Union","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : LinearOrder α\ninst✝ : Preorder β\na : α\nf : α → β\nh₁ : StrictMonoOn f (Set.Iic a)\nh₂ : StrictMonoOn f (Set.Ici a)\n⊢ StrictMono f","decl":"/-- If `f` is strictly monotone both on `(-∞, a]` and `[a, ∞)`, then it is strictly monotone on the\nwhole line. -/\nprotected theorem StrictMonoOn.Iic_union_Ici (h₁ : StrictMonoOn f (Iic a))\n    (h₂ : StrictMonoOn f (Ici a)) : StrictMono f := by\n  rw [← strictMonoOn_univ, ← @Iic_union_Ici _ _ a]\n  exact StrictMonoOn.union h₁ h₂ isGreatest_Iic isLeast_Ici\n\n"}
{"name":"StrictAntiOn.union","module":"Mathlib.Order.Monotone.Union","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : LinearOrder α\ninst✝ : Preorder β\nf : α → β\ns t : Set α\nc : α\nh₁ : StrictAntiOn f s\nh₂ : StrictAntiOn f t\nhs : IsGreatest s c\nht : IsLeast t c\n⊢ StrictAntiOn f (Union.union s t)","decl":"/-- If `f` is strictly antitone both on `s` and `t`, with `s` to the left of `t` and the center\npoint belonging to both `s` and `t`, then `f` is strictly antitone on `s ∪ t` -/\nprotected theorem StrictAntiOn.union {s t : Set α} {c : α} (h₁ : StrictAntiOn f s)\n    (h₂ : StrictAntiOn f t) (hs : IsGreatest s c) (ht : IsLeast t c) : StrictAntiOn f (s ∪ t) :=\n  (h₁.dual_right.union h₂.dual_right hs ht).dual_right\n\n"}
{"name":"StrictAntiOn.Iic_union_Ici","module":"Mathlib.Order.Monotone.Union","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : LinearOrder α\ninst✝ : Preorder β\na : α\nf : α → β\nh₁ : StrictAntiOn f (Set.Iic a)\nh₂ : StrictAntiOn f (Set.Ici a)\n⊢ StrictAnti f","decl":"/-- If `f` is strictly antitone both on `(-∞, a]` and `[a, ∞)`, then it is strictly antitone on the\nwhole line. -/\nprotected theorem StrictAntiOn.Iic_union_Ici (h₁ : StrictAntiOn f (Iic a))\n    (h₂ : StrictAntiOn f (Ici a)) : StrictAnti f :=\n  (h₁.dual_right.Iic_union_Ici h₂.dual_right).dual_right\n\n"}
{"name":"MonotoneOn.union_right","module":"Mathlib.Order.Monotone.Union","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : LinearOrder α\ninst✝ : Preorder β\nf : α → β\ns t : Set α\nc : α\nh₁ : MonotoneOn f s\nh₂ : MonotoneOn f t\nhs : IsGreatest s c\nht : IsLeast t c\n⊢ MonotoneOn f (Union.union s t)","decl":"/-- If `f` is monotone both on `s` and `t`, with `s` to the left of `t` and the center\npoint belonging to both `s` and `t`, then `f` is monotone on `s ∪ t` -/\nprotected theorem MonotoneOn.union_right {s t : Set α} {c : α} (h₁ : MonotoneOn f s)\n    (h₂ : MonotoneOn f t) (hs : IsGreatest s c) (ht : IsLeast t c) : MonotoneOn f (s ∪ t) := by\n  have A : ∀ x, x ∈ s ∪ t → x ≤ c → x ∈ s := by\n    intro x hx hxc\n    cases hx\n    · assumption\n    rcases eq_or_lt_of_le hxc with (rfl | h'x)\n    · exact hs.1\n    exact (lt_irrefl _ (h'x.trans_le (ht.2 (by assumption)))).elim\n  have B : ∀ x, x ∈ s ∪ t → c ≤ x → x ∈ t := by\n    intro x hx hxc\n    match hx with\n    | Or.inr hx => exact hx\n    | Or.inl hx =>\n      rcases eq_or_lt_of_le hxc with (rfl | h'x)\n      · exact ht.1\n      exact (lt_irrefl _ (h'x.trans_le (hs.2 hx))).elim\n  intro x hx y hy hxy\n  rcases lt_or_le x c with (hxc | hcx)\n  · have xs : x ∈ s := A _ hx hxc.le\n    rcases lt_or_le y c with (hyc | hcy)\n    · exact h₁ xs (A _ hy hyc.le) hxy\n    · exact (h₁ xs hs.1 hxc.le).trans (h₂ ht.1 (B _ hy hcy) hcy)\n  · have xt : x ∈ t := B _ hx hcx\n    have yt : y ∈ t := B _ hy (hcx.trans hxy)\n    exact h₂ xt yt hxy\n\n"}
{"name":"MonotoneOn.Iic_union_Ici","module":"Mathlib.Order.Monotone.Union","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : LinearOrder α\ninst✝ : Preorder β\na : α\nf : α → β\nh₁ : MonotoneOn f (Set.Iic a)\nh₂ : MonotoneOn f (Set.Ici a)\n⊢ Monotone f","decl":"/-- If `f` is monotone both on `(-∞, a]` and `[a, ∞)`, then it is monotone on the whole line. -/\nprotected theorem MonotoneOn.Iic_union_Ici (h₁ : MonotoneOn f (Iic a)) (h₂ : MonotoneOn f (Ici a)) :\n    Monotone f := by\n  rw [← monotoneOn_univ, ← @Iic_union_Ici _ _ a]\n  exact MonotoneOn.union_right h₁ h₂ isGreatest_Iic isLeast_Ici\n\n"}
{"name":"AntitoneOn.union_right","module":"Mathlib.Order.Monotone.Union","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : LinearOrder α\ninst✝ : Preorder β\nf : α → β\ns t : Set α\nc : α\nh₁ : AntitoneOn f s\nh₂ : AntitoneOn f t\nhs : IsGreatest s c\nht : IsLeast t c\n⊢ AntitoneOn f (Union.union s t)","decl":"/-- If `f` is antitone both on `s` and `t`, with `s` to the left of `t` and the center\npoint belonging to both `s` and `t`, then `f` is antitone on `s ∪ t` -/\nprotected theorem AntitoneOn.union_right {s t : Set α} {c : α} (h₁ : AntitoneOn f s)\n    (h₂ : AntitoneOn f t) (hs : IsGreatest s c) (ht : IsLeast t c) : AntitoneOn f (s ∪ t) :=\n  (h₁.dual_right.union_right h₂.dual_right hs ht).dual_right\n\n"}
{"name":"AntitoneOn.Iic_union_Ici","module":"Mathlib.Order.Monotone.Union","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : LinearOrder α\ninst✝ : Preorder β\na : α\nf : α → β\nh₁ : AntitoneOn f (Set.Iic a)\nh₂ : AntitoneOn f (Set.Ici a)\n⊢ Antitone f","decl":"/-- If `f` is antitone both on `(-∞, a]` and `[a, ∞)`, then it is antitone on the whole line. -/\nprotected theorem AntitoneOn.Iic_union_Ici (h₁ : AntitoneOn f (Iic a)) (h₂ : AntitoneOn f (Ici a)) :\n    Antitone f :=\n  (h₁.dual_right.Iic_union_Ici h₂.dual_right).dual_right\n"}
