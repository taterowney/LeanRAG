{"name":"Nat.add_choose_eq","module":"Mathlib.Data.Nat.Choose.Vandermonde","initialProofState":"m n k : Nat\n⊢ Eq ((HAdd.hAdd m n).choose k) ((Finset.HasAntidiagonal.antidiagonal k).sum fun ij => HMul.hMul (m.choose ij.1) (n.choose ij.2))","decl":"/-- Vandermonde's identity -/\ntheorem Nat.add_choose_eq (m n k : ℕ) :\n    (m + n).choose k = ∑ ij ∈ antidiagonal k, m.choose ij.1 * n.choose ij.2 := by\n  calc\n    (m + n).choose k = ((X + 1) ^ (m + n)).coeff k := by rw [coeff_X_add_one_pow, Nat.cast_id]\n    _ = ((X + 1) ^ m * (X + 1) ^ n).coeff k := by rw [pow_add]\n    _ = ∑ ij ∈ antidiagonal k, m.choose ij.1 * n.choose ij.2 := by\n      rw [coeff_mul, Finset.sum_congr rfl]\n      simp only [coeff_X_add_one_pow, Nat.cast_id, eq_self_iff_true, imp_true_iff]\n"}
