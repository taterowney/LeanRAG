{"name":"DualNumber.exp_eps","module":"Mathlib.Analysis.NormedSpace.DualNumber","initialProofState":"𝕜 : Type u_1\nR : Type u_2\ninst✝⁶ : Field 𝕜\ninst✝⁵ : CharZero 𝕜\ninst✝⁴ : CommRing R\ninst✝³ : Algebra 𝕜 R\ninst✝² : UniformSpace R\ninst✝¹ : TopologicalRing R\ninst✝ : T2Space R\n⊢ Eq (NormedSpace.exp 𝕜 DualNumber.eps) (HAdd.hAdd 1 DualNumber.eps)","decl":"@[simp]\ntheorem exp_eps : exp 𝕜 (eps : DualNumber R) = 1 + eps :=\n  exp_inr _ _\n\n"}
{"name":"DualNumber.exp_smul_eps","module":"Mathlib.Analysis.NormedSpace.DualNumber","initialProofState":"𝕜 : Type u_1\nR : Type u_2\ninst✝⁶ : Field 𝕜\ninst✝⁵ : CharZero 𝕜\ninst✝⁴ : CommRing R\ninst✝³ : Algebra 𝕜 R\ninst✝² : UniformSpace R\ninst✝¹ : TopologicalRing R\ninst✝ : T2Space R\nr : R\n⊢ Eq (NormedSpace.exp 𝕜 (HSMul.hSMul r DualNumber.eps)) (HAdd.hAdd 1 (HSMul.hSMul r DualNumber.eps))","decl":"@[simp]\ntheorem exp_smul_eps (r : R) : exp 𝕜 (r • eps : DualNumber R) = 1 + r • eps := by\n  rw [eps, ← inr_smul, exp_inr]\n\n"}
