{"name":"CategoryTheory.IsGrothendieckAbelian.locallySmall","module":"Mathlib.CategoryTheory.Abelian.GrothendieckCategory","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Abelian C\nself : CategoryTheory.IsGrothendieckAbelian C\n⊢ CategoryTheory.LocallySmall.{w, v, u} C","decl":"/--\nIf `C` is an abelian category, we shall say that it satisfies `IsGrothendieckAbelian.{w} C`\nif it is locally small (relative to `w`), has exact filtered colimits of size `w` (AB5) and has a\nseparator.\nIf `[Category.{v} C]` and `w = v`, this means that `C` satisfies `AB5` and has a separator;\ngeneral results about Grothendieck abelian categories can be\nreduced to this case using the instance `ShrinkHoms.isGrothendieckAbelian` below.\n\nThe introduction of the auxiliary universe `w` shall be needed for certain\napplications to categories of sheaves. That the present definition still preserves essential\nproperties of Grothendieck categories is ensured by `IsGrothendieckAbelian.of_equivalence`,\nwhich shows that every instance for `C` implies an instance for `ShrinkHoms C` with hom sets in\n`Type w`.\n-/\n@[stacks 079B]\nclass IsGrothendieckAbelian [Abelian C] : Prop where\n  locallySmall : LocallySmall.{w} C := by infer_instance\n  hasFilteredColimitsOfSize : HasFilteredColimitsOfSize.{w, w} C := by infer_instance\n  ab5OfSize : AB5OfSize.{w, w} C := by infer_instance\n  hasSeparator : HasSeparator C := by infer_instance\n\n"}
{"name":"CategoryTheory.IsGrothendieckAbelian.ab5OfSize","module":"Mathlib.CategoryTheory.Abelian.GrothendieckCategory","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Abelian C\nself : CategoryTheory.IsGrothendieckAbelian C\n⊢ CategoryTheory.AB5OfSize.{w, w, v, u} C","decl":"/--\nIf `C` is an abelian category, we shall say that it satisfies `IsGrothendieckAbelian.{w} C`\nif it is locally small (relative to `w`), has exact filtered colimits of size `w` (AB5) and has a\nseparator.\nIf `[Category.{v} C]` and `w = v`, this means that `C` satisfies `AB5` and has a separator;\ngeneral results about Grothendieck abelian categories can be\nreduced to this case using the instance `ShrinkHoms.isGrothendieckAbelian` below.\n\nThe introduction of the auxiliary universe `w` shall be needed for certain\napplications to categories of sheaves. That the present definition still preserves essential\nproperties of Grothendieck categories is ensured by `IsGrothendieckAbelian.of_equivalence`,\nwhich shows that every instance for `C` implies an instance for `ShrinkHoms C` with hom sets in\n`Type w`.\n-/\n@[stacks 079B]\nclass IsGrothendieckAbelian [Abelian C] : Prop where\n  locallySmall : LocallySmall.{w} C := by infer_instance\n  hasFilteredColimitsOfSize : HasFilteredColimitsOfSize.{w, w} C := by infer_instance\n  ab5OfSize : AB5OfSize.{w, w} C := by infer_instance\n  hasSeparator : HasSeparator C := by infer_instance\n\n"}
{"name":"CategoryTheory.IsGrothendieckAbelian.hasSeparator","module":"Mathlib.CategoryTheory.Abelian.GrothendieckCategory","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Abelian C\nself : CategoryTheory.IsGrothendieckAbelian C\n⊢ CategoryTheory.HasSeparator C","decl":"/--\nIf `C` is an abelian category, we shall say that it satisfies `IsGrothendieckAbelian.{w} C`\nif it is locally small (relative to `w`), has exact filtered colimits of size `w` (AB5) and has a\nseparator.\nIf `[Category.{v} C]` and `w = v`, this means that `C` satisfies `AB5` and has a separator;\ngeneral results about Grothendieck abelian categories can be\nreduced to this case using the instance `ShrinkHoms.isGrothendieckAbelian` below.\n\nThe introduction of the auxiliary universe `w` shall be needed for certain\napplications to categories of sheaves. That the present definition still preserves essential\nproperties of Grothendieck categories is ensured by `IsGrothendieckAbelian.of_equivalence`,\nwhich shows that every instance for `C` implies an instance for `ShrinkHoms C` with hom sets in\n`Type w`.\n-/\n@[stacks 079B]\nclass IsGrothendieckAbelian [Abelian C] : Prop where\n  locallySmall : LocallySmall.{w} C := by infer_instance\n  hasFilteredColimitsOfSize : HasFilteredColimitsOfSize.{w, w} C := by infer_instance\n  ab5OfSize : AB5OfSize.{w, w} C := by infer_instance\n  hasSeparator : HasSeparator C := by infer_instance\n\n"}
{"name":"CategoryTheory.IsGrothendieckAbelian.hasFilteredColimitsOfSize","module":"Mathlib.CategoryTheory.Abelian.GrothendieckCategory","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Abelian C\nself : CategoryTheory.IsGrothendieckAbelian C\n⊢ CategoryTheory.Limits.HasFilteredColimitsOfSize.{w, w, v, u} C","decl":"/--\nIf `C` is an abelian category, we shall say that it satisfies `IsGrothendieckAbelian.{w} C`\nif it is locally small (relative to `w`), has exact filtered colimits of size `w` (AB5) and has a\nseparator.\nIf `[Category.{v} C]` and `w = v`, this means that `C` satisfies `AB5` and has a separator;\ngeneral results about Grothendieck abelian categories can be\nreduced to this case using the instance `ShrinkHoms.isGrothendieckAbelian` below.\n\nThe introduction of the auxiliary universe `w` shall be needed for certain\napplications to categories of sheaves. That the present definition still preserves essential\nproperties of Grothendieck categories is ensured by `IsGrothendieckAbelian.of_equivalence`,\nwhich shows that every instance for `C` implies an instance for `ShrinkHoms C` with hom sets in\n`Type w`.\n-/\n@[stacks 079B]\nclass IsGrothendieckAbelian [Abelian C] : Prop where\n  locallySmall : LocallySmall.{w} C := by infer_instance\n  hasFilteredColimitsOfSize : HasFilteredColimitsOfSize.{w, w} C := by infer_instance\n  ab5OfSize : AB5OfSize.{w, w} C := by infer_instance\n  hasSeparator : HasSeparator C := by infer_instance\n\n"}
{"name":"CategoryTheory.IsGrothendieckAbelian.of_equivalence","module":"Mathlib.CategoryTheory.Abelian.GrothendieckCategory","initialProofState":"C : Type u\ninst✝⁴ : CategoryTheory.Category.{v, u} C\nD : Type u₂\ninst✝³ : CategoryTheory.Category.{v₂, u₂} D\ninst✝² : CategoryTheory.Abelian C\ninst✝¹ : CategoryTheory.Abelian D\ninst✝ : CategoryTheory.IsGrothendieckAbelian C\nα : CategoryTheory.Equivalence C D\n⊢ CategoryTheory.IsGrothendieckAbelian D","decl":"variable {C} {D} in\ntheorem IsGrothendieckAbelian.of_equivalence [Abelian C] [Abelian D]\n    [IsGrothendieckAbelian.{w} C] (α : C ≌ D) : IsGrothendieckAbelian.{w} D := by\n  have hasFilteredColimits : HasFilteredColimitsOfSize.{w, w, v₂, u₂} D :=\n    ⟨fun _ _ _ => Adjunction.hasColimitsOfShape_of_equivalence α.inverse⟩\n  refine ⟨?_, hasFilteredColimits, ?_, ?_⟩\n  · exact locallySmall_of_faithful α.inverse\n  · refine ⟨fun _ _ _ => ?_⟩\n    exact HasExactColimitsOfShape.of_codomain_equivalence _ α\n  · exact HasSeparator.of_equivalence α\n\n"}
{"name":"CategoryTheory.ShrinkHoms.isGrothendieckAbelian","module":"Mathlib.CategoryTheory.Abelian.GrothendieckCategory","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Abelian C\ninst✝ : CategoryTheory.IsGrothendieckAbelian C\n⊢ CategoryTheory.IsGrothendieckAbelian (CategoryTheory.ShrinkHoms.{u} C)","decl":"instance ShrinkHoms.isGrothendieckAbelian [Abelian C] [IsGrothendieckAbelian.{w} C] :\n    IsGrothendieckAbelian.{w, w} (ShrinkHoms C) :=\n  IsGrothendieckAbelian.of_equivalence <| ShrinkHoms.equivalence C\n\n"}
{"name":"CategoryTheory.IsGrothendieckAbelian.hasColimits","module":"Mathlib.CategoryTheory.Abelian.GrothendieckCategory","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Abelian C\ninst✝ : CategoryTheory.IsGrothendieckAbelian C\n⊢ CategoryTheory.Limits.HasColimitsOfSize.{w, w, v, u} C","decl":"instance IsGrothendieckAbelian.hasColimits : HasColimitsOfSize.{w, w} C :=\n  has_colimits_of_finite_and_filtered\n\n"}
{"name":"CategoryTheory.IsGrothendieckAbelian.hasLimits","module":"Mathlib.CategoryTheory.Abelian.GrothendieckCategory","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Abelian C\ninst✝ : CategoryTheory.IsGrothendieckAbelian C\n⊢ CategoryTheory.Limits.HasLimitsOfSize.{w, w, v, u} C","decl":"instance IsGrothendieckAbelian.hasLimits : HasLimitsOfSize.{w, w} C :=\n  have : HasLimits.{w, u} (ShrinkHoms C) := hasLimits_of_hasColimits_of_hasSeparator\n  Adjunction.has_limits_of_equivalence (ShrinkHoms.equivalence C |>.functor)\n\n"}
{"name":"CategoryTheory.IsGrothendieckAbelian.wellPowered","module":"Mathlib.CategoryTheory.Abelian.GrothendieckCategory","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Abelian C\ninst✝ : CategoryTheory.IsGrothendieckAbelian C\n⊢ CategoryTheory.WellPowered.{w, v, u} C","decl":"instance IsGrothendieckAbelian.wellPowered : WellPowered.{w} C :=\n  wellPowered_of_equiv.{w} (ShrinkHoms.equivalence.{w} C).symm\n\n"}
