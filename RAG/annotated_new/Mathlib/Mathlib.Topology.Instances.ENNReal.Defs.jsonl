{"name":"ENNReal.instOrderTopology","module":"Mathlib.Topology.Instances.ENNReal.Defs","initialProofState":"‚ä¢ OrderTopology ENNReal","decl":"instance : OrderTopology ‚Ñù‚â•0‚àû := ‚ü®rfl‚ü©\n\n-- short-circuit type class inference\n"}
{"name":"ENNReal.instT2Space","module":"Mathlib.Topology.Instances.ENNReal.Defs","initialProofState":"‚ä¢ T2Space ENNReal","decl":"instance : T2Space ‚Ñù‚â•0‚àû := inferInstance\n"}
{"name":"ENNReal.instT5Space","module":"Mathlib.Topology.Instances.ENNReal.Defs","initialProofState":"‚ä¢ T5Space ENNReal","decl":"instance : T5Space ‚Ñù‚â•0‚àû := inferInstance\n"}
{"name":"ENNReal.instT4Space","module":"Mathlib.Topology.Instances.ENNReal.Defs","initialProofState":"‚ä¢ T4Space ENNReal","decl":"instance : T4Space ‚Ñù‚â•0‚àû := inferInstance\n\n"}
{"name":"ENNReal.instSecondCountableTopology","module":"Mathlib.Topology.Instances.ENNReal.Defs","initialProofState":"‚ä¢ SecondCountableTopology ENNReal","decl":"instance : SecondCountableTopology ‚Ñù‚â•0‚àû :=\n  orderIsoUnitIntervalBirational.toHomeomorph.isEmbedding.secondCountableTopology\n\n"}
{"name":"ENNReal.instMetrizableSpace","module":"Mathlib.Topology.Instances.ENNReal.Defs","initialProofState":"‚ä¢ TopologicalSpace.MetrizableSpace ENNReal","decl":"instance : MetrizableSpace ENNReal :=\n  orderIsoUnitIntervalBirational.toHomeomorph.isEmbedding.metrizableSpace\n\n"}
{"name":"ENNReal.isEmbedding_coe","module":"Mathlib.Topology.Instances.ENNReal.Defs","initialProofState":"‚ä¢ Topology.IsEmbedding ENNReal.ofNNReal","decl":"theorem isEmbedding_coe : IsEmbedding ((‚Üë) : ‚Ñù‚â•0 ‚Üí ‚Ñù‚â•0‚àû) :=\n  coe_strictMono.isEmbedding_of_ordConnected <| by rw [range_coe']; exact ordConnected_Iio\n\n"}
{"name":"ENNReal.tendsto_coe","module":"Mathlib.Topology.Instances.ENNReal.Defs","initialProofState":"Œ± : Type u_1\nf : Filter Œ±\nm : Œ± ‚Üí NNReal\na : NNReal\n‚ä¢ Iff (Filter.Tendsto (fun a => ‚Üë(m a)) f (nhds ‚Üëa)) (Filter.Tendsto m f (nhds a))","decl":"@[norm_cast]\ntheorem tendsto_coe {f : Filter Œ±} {m : Œ± ‚Üí ‚Ñù‚â•0} {a : ‚Ñù‚â•0} :\n    Tendsto (fun a => (m a : ‚Ñù‚â•0‚àû)) f (ùìù ‚Üëa) ‚Üî Tendsto m f (ùìù a) :=\n  isEmbedding_coe.tendsto_nhds_iff.symm\n\n"}
{"name":"ENNReal.isOpenEmbedding_coe","module":"Mathlib.Topology.Instances.ENNReal.Defs","initialProofState":"‚ä¢ Topology.IsOpenEmbedding ENNReal.ofNNReal","decl":"theorem isOpenEmbedding_coe : IsOpenEmbedding ((‚Üë) : ‚Ñù‚â•0 ‚Üí ‚Ñù‚â•0‚àû) :=\n  ‚ü®isEmbedding_coe, by rw [range_coe']; exact isOpen_Iio‚ü©\n\n"}
{"name":"ENNReal.nhds_coe_coe","module":"Mathlib.Topology.Instances.ENNReal.Defs","initialProofState":"r p : NNReal\n‚ä¢ Eq (nhds { fst := ‚Üër, snd := ‚Üëp }) (Filter.map (fun p => { fst := ‚Üëp.1, snd := ‚Üëp.2 }) (nhds { fst := r, snd := p }))","decl":"theorem nhds_coe_coe {r p : ‚Ñù‚â•0} :\n    ùìù ((r : ‚Ñù‚â•0‚àû), (p : ‚Ñù‚â•0‚àû)) = (ùìù (r, p)).map fun p : ‚Ñù‚â•0 √ó ‚Ñù‚â•0 => (‚Üëp.1, ‚Üëp.2) :=\n  ((isOpenEmbedding_coe.prodMap isOpenEmbedding_coe).map_nhds_eq (r, p)).symm\n\n"}
{"name":"ENNReal.instContinuousAdd","module":"Mathlib.Topology.Instances.ENNReal.Defs","initialProofState":"‚ä¢ ContinuousAdd ENNReal","decl":"instance : ContinuousAdd ‚Ñù‚â•0‚àû := by\n  refine ‚ü®continuous_iff_continuousAt.2 ?_‚ü©\n  rintro ‚ü®_ | a, b‚ü©\n  ¬∑ exact tendsto_nhds_top_mono' continuousAt_fst fun p => le_add_right le_rfl\n  rcases b with (_ | b)\n  ¬∑ exact tendsto_nhds_top_mono' continuousAt_snd fun p => le_add_left le_rfl\n  simp only [ContinuousAt, some_eq_coe, nhds_coe_coe, ‚Üê coe_add, tendsto_map'_iff,\n    Function.comp_def, tendsto_coe, tendsto_add]\n\n"}
{"name":"ENNReal.instContinuousInv","module":"Mathlib.Topology.Instances.ENNReal.Defs","initialProofState":"‚ä¢ ContinuousInv ENNReal","decl":"instance : ContinuousInv ‚Ñù‚â•0‚àû := ‚ü®OrderIso.invENNReal.continuous‚ü©\n\n"}
