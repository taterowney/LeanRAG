{"name":"isConformalMap_id","module":"Mathlib.Analysis.NormedSpace.ConformalLinearMap","initialProofState":"R : Type u_1\nM : Type u_2\ninst✝² : NormedField R\ninst✝¹ : SeminormedAddCommGroup M\ninst✝ : NormedSpace R M\n⊢ IsConformalMap (ContinuousLinearMap.id R M)","decl":"theorem isConformalMap_id : IsConformalMap (id R M) :=\n  ⟨1, one_ne_zero, id, by simp⟩\n\n"}
{"name":"IsConformalMap.smul","module":"Mathlib.Analysis.NormedSpace.ConformalLinearMap","initialProofState":"R : Type u_1\nM : Type u_2\nN : Type u_3\ninst✝⁴ : NormedField R\ninst✝³ : SeminormedAddCommGroup M\ninst✝² : SeminormedAddCommGroup N\ninst✝¹ : NormedSpace R M\ninst✝ : NormedSpace R N\nf : ContinuousLinearMap (RingHom.id R) M N\nhf : IsConformalMap f\nc : R\nhc : Ne c 0\n⊢ IsConformalMap (HSMul.hSMul c f)","decl":"theorem IsConformalMap.smul (hf : IsConformalMap f) {c : R} (hc : c ≠ 0) :\n    IsConformalMap (c • f) := by\n  rcases hf with ⟨c', hc', li, rfl⟩\n  exact ⟨c * c', mul_ne_zero hc hc', li, smul_smul _ _ _⟩\n\n"}
{"name":"isConformalMap_const_smul","module":"Mathlib.Analysis.NormedSpace.ConformalLinearMap","initialProofState":"R : Type u_1\nM : Type u_2\ninst✝² : NormedField R\ninst✝¹ : SeminormedAddCommGroup M\ninst✝ : NormedSpace R M\nc : R\nhc : Ne c 0\n⊢ IsConformalMap (HSMul.hSMul c (ContinuousLinearMap.id R M))","decl":"theorem isConformalMap_const_smul (hc : c ≠ 0) : IsConformalMap (c • id R M) :=\n  isConformalMap_id.smul hc\n\n"}
{"name":"LinearIsometry.isConformalMap","module":"Mathlib.Analysis.NormedSpace.ConformalLinearMap","initialProofState":"R : Type u_1\nM : Type u_2\nN : Type u_3\ninst✝⁴ : NormedField R\ninst✝³ : SeminormedAddCommGroup M\ninst✝² : SeminormedAddCommGroup N\ninst✝¹ : NormedSpace R M\ninst✝ : NormedSpace R N\nf' : LinearIsometry (RingHom.id R) M N\n⊢ IsConformalMap f'.toContinuousLinearMap","decl":"protected theorem LinearIsometry.isConformalMap (f' : M →ₗᵢ[R] N) :\n    IsConformalMap f'.toContinuousLinearMap :=\n  ⟨1, one_ne_zero, f', (one_smul _ _).symm⟩\n\n"}
{"name":"isConformalMap_of_subsingleton","module":"Mathlib.Analysis.NormedSpace.ConformalLinearMap","initialProofState":"R : Type u_1\nM : Type u_2\nN : Type u_3\ninst✝⁵ : NormedField R\ninst✝⁴ : SeminormedAddCommGroup M\ninst✝³ : SeminormedAddCommGroup N\ninst✝² : NormedSpace R M\ninst✝¹ : NormedSpace R N\ninst✝ : Subsingleton M\nf' : ContinuousLinearMap (RingHom.id R) M N\n⊢ IsConformalMap f'","decl":"@[nontriviality]\ntheorem isConformalMap_of_subsingleton [Subsingleton M] (f' : M →L[R] N) : IsConformalMap f' :=\n  ⟨1, one_ne_zero, ⟨0, fun x => by simp [Subsingleton.elim x 0]⟩, Subsingleton.elim _ _⟩\n\n"}
{"name":"IsConformalMap.comp","module":"Mathlib.Analysis.NormedSpace.ConformalLinearMap","initialProofState":"R : Type u_1\nM : Type u_2\nN : Type u_3\nG : Type u_4\ninst✝⁶ : NormedField R\ninst✝⁵ : SeminormedAddCommGroup M\ninst✝⁴ : SeminormedAddCommGroup N\ninst✝³ : SeminormedAddCommGroup G\ninst✝² : NormedSpace R M\ninst✝¹ : NormedSpace R N\ninst✝ : NormedSpace R G\nf : ContinuousLinearMap (RingHom.id R) M N\ng : ContinuousLinearMap (RingHom.id R) N G\nhg : IsConformalMap g\nhf : IsConformalMap f\n⊢ IsConformalMap (g.comp f)","decl":"theorem comp (hg : IsConformalMap g) (hf : IsConformalMap f) : IsConformalMap (g.comp f) := by\n  rcases hf with ⟨cf, hcf, lif, rfl⟩\n  rcases hg with ⟨cg, hcg, lig, rfl⟩\n  refine ⟨cg * cf, mul_ne_zero hcg hcf, lig.comp lif, ?_⟩\n  rw [smul_comp, comp_smul, mul_smul]\n  rfl\n\n"}
{"name":"IsConformalMap.injective","module":"Mathlib.Analysis.NormedSpace.ConformalLinearMap","initialProofState":"R : Type u_1\nN : Type u_3\nM' : Type u_5\ninst✝⁴ : NormedField R\ninst✝³ : SeminormedAddCommGroup N\ninst✝² : NormedSpace R N\ninst✝¹ : NormedAddCommGroup M'\ninst✝ : NormedSpace R M'\nf : ContinuousLinearMap (RingHom.id R) M' N\nh : IsConformalMap f\n⊢ Function.Injective ⇑f","decl":"protected theorem injective {f : M' →L[R] N} (h : IsConformalMap f) : Function.Injective f := by\n  rcases h with ⟨c, hc, li, rfl⟩\n  exact (smul_right_injective _ hc).comp li.injective\n\n"}
{"name":"IsConformalMap.ne_zero","module":"Mathlib.Analysis.NormedSpace.ConformalLinearMap","initialProofState":"R : Type u_1\nN : Type u_3\nM' : Type u_5\ninst✝⁵ : NormedField R\ninst✝⁴ : SeminormedAddCommGroup N\ninst✝³ : NormedSpace R N\ninst✝² : NormedAddCommGroup M'\ninst✝¹ : NormedSpace R M'\ninst✝ : Nontrivial M'\nf' : ContinuousLinearMap (RingHom.id R) M' N\nhf' : IsConformalMap f'\n⊢ Ne f' 0","decl":"theorem ne_zero [Nontrivial M'] {f' : M' →L[R] N} (hf' : IsConformalMap f') : f' ≠ 0 := by\n  rintro rfl\n  rcases exists_ne (0 : M') with ⟨a, ha⟩\n  exact ha (hf'.injective rfl)\n\n"}
