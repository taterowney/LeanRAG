{"name":"Module.Finite.Module.End.isNilpotent_iff_of_finite","module":"Mathlib.RingTheory.Finiteness.Nilpotent","initialProofState":"R : Type u_1\nM : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : AddCommMonoid M\ninst✝¹ : Module R M\ninst✝ : Module.Finite R M\nf : Module.End R M\n⊢ Iff (IsNilpotent f) (∀ (m : M), Exists fun n => Eq ((HPow.hPow f n) m) 0)","decl":"theorem Module.End.isNilpotent_iff_of_finite [Module.Finite R M] {f : End R M} :\n    IsNilpotent f ↔ ∀ m : M, ∃ n : ℕ, (f ^ n) m = 0 := by\n  refine ⟨fun ⟨n, hn⟩ m ↦ ⟨n, by simp [hn]⟩, fun h ↦ ?_⟩\n  rcases Module.Finite.fg_top (R := R) (M := M) with ⟨S, hS⟩\n  choose g hg using h\n  use Finset.sup S g\n  ext m\n  have hm : m ∈ Submodule.span R S := by simp [hS]\n  induction hm using Submodule.span_induction with\n  | mem x hx => exact LinearMap.pow_map_zero_of_le (Finset.le_sup hx) (hg x)\n  | zero => simp\n  | add => simp_all\n  | smul => simp_all\n\n"}
