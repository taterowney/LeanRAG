{"name":"DiscreteTopology.firstCountableTopology","module":"Mathlib.Topology.Instances.Discrete","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\ninst✝ : DiscreteTopology α\n⊢ FirstCountableTopology α","decl":"instance (priority := 100) DiscreteTopology.firstCountableTopology [DiscreteTopology α] :\n    FirstCountableTopology α where\n  nhds_generated_countable := by rw [nhds_discrete]; exact isCountablyGenerated_pure\n\n"}
{"name":"DiscreteTopology.secondCountableTopology_of_countable","module":"Mathlib.Topology.Instances.Discrete","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\nhd : DiscreteTopology α\ninst✝ : Countable α\n⊢ SecondCountableTopology α","decl":"instance (priority := 100) DiscreteTopology.secondCountableTopology_of_countable\n    [hd : DiscreteTopology α] [Countable α] : SecondCountableTopology α :=\n  haveI : ∀ i : α, SecondCountableTopology (↥({i} : Set α)) := fun i =>\n    { is_open_generated_countable :=\n        ⟨{univ}, countable_singleton _, by simp only [eq_iff_true_of_subsingleton]⟩ }\n  secondCountableTopology_of_countable_cover (singletons_open_iff_discrete.mpr hd)\n    (iUnion_of_singleton α)\n\n"}
{"name":"LinearOrder.bot_topologicalSpace_eq_generateFrom","module":"Mathlib.Topology.Instances.Discrete","initialProofState":"α : Type u_2\ninst✝² : LinearOrder α\ninst✝¹ : PredOrder α\ninst✝ : SuccOrder α\n⊢ Eq Bot.bot (TopologicalSpace.generateFrom (setOf fun s => Exists fun a => Or (Eq s (Set.Ioi a)) (Eq s (Set.Iio a))))","decl":"theorem LinearOrder.bot_topologicalSpace_eq_generateFrom {α} [LinearOrder α] [PredOrder α]\n    [SuccOrder α] : (⊥ : TopologicalSpace α) = generateFrom { s | ∃ a, s = Ioi a ∨ s = Iio a } := by\n  let _ := Preorder.topology α\n  have : OrderTopology α := ⟨rfl⟩\n  exact DiscreteTopology.of_predOrder_succOrder.eq_bot.symm\n\n"}
{"name":"bot_topologicalSpace_eq_generateFrom_of_pred_succOrder","module":"Mathlib.Topology.Instances.Discrete","initialProofState":"α : Type u_2\ninst✝² : LinearOrder α\ninst✝¹ : PredOrder α\ninst✝ : SuccOrder α\n⊢ Eq Bot.bot (TopologicalSpace.generateFrom (setOf fun s => Exists fun a => Or (Eq s (Set.Ioi a)) (Eq s (Set.Iio a))))","decl":"@[deprecated (since := \"2024-11-02\")]\nalias bot_topologicalSpace_eq_generateFrom_of_pred_succOrder :=\n  LinearOrder.bot_topologicalSpace_eq_generateFrom\n\n"}
{"name":"discreteTopology_iff_orderTopology_of_pred_succ","module":"Mathlib.Topology.Instances.Discrete","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\ninst✝² : LinearOrder α\ninst✝¹ : PredOrder α\ninst✝ : SuccOrder α\n⊢ Iff (DiscreteTopology α) (OrderTopology α)","decl":"theorem discreteTopology_iff_orderTopology_of_pred_succ [LinearOrder α] [PredOrder α]\n    [SuccOrder α] : DiscreteTopology α ↔ OrderTopology α := by\n  refine ⟨fun h ↦ ⟨?_⟩, fun h ↦ .of_predOrder_succOrder⟩\n  rw [h.eq_bot, LinearOrder.bot_topologicalSpace_eq_generateFrom]\n\n"}
{"name":"discreteTopology_iff_orderTopology_of_pred_succ'","module":"Mathlib.Topology.Instances.Discrete","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\ninst✝² : LinearOrder α\ninst✝¹ : PredOrder α\ninst✝ : SuccOrder α\n⊢ Iff (DiscreteTopology α) (OrderTopology α)","decl":"@[deprecated (since := \"2024-11-02\")]\nalias discreteTopology_iff_orderTopology_of_pred_succ' :=\n  discreteTopology_iff_orderTopology_of_pred_succ\n\n"}
{"name":"OrderTopology.of_discreteTopology","module":"Mathlib.Topology.Instances.Discrete","initialProofState":"α : Type u_1\ninst✝⁴ : TopologicalSpace α\ninst✝³ : LinearOrder α\ninst✝² : PredOrder α\ninst✝¹ : SuccOrder α\ninst✝ : DiscreteTopology α\n⊢ OrderTopology α","decl":"instance OrderTopology.of_discreteTopology [LinearOrder α] [PredOrder α] [SuccOrder α]\n    [DiscreteTopology α] : OrderTopology α :=\n  discreteTopology_iff_orderTopology_of_pred_succ.mp ‹_›\n\n"}
{"name":"OrderTopology.of_linearLocallyFinite","module":"Mathlib.Topology.Instances.Discrete","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\ninst✝² : LinearOrder α\ninst✝¹ : LocallyFiniteOrder α\ninst✝ : DiscreteTopology α\n⊢ OrderTopology α","decl":"instance OrderTopology.of_linearLocallyFinite\n    [LinearOrder α] [LocallyFiniteOrder α] [DiscreteTopology α] : OrderTopology α :=\n  haveI := LinearLocallyFiniteOrder.succOrder α\n  haveI := LinearLocallyFiniteOrder.predOrder α\n  inferInstance\n"}
