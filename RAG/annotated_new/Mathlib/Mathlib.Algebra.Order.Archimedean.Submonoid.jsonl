{"name":"SubmonoidClass.instMulArchimedean","module":"Mathlib.Algebra.Order.Archimedean.Submonoid","initialProofState":"M : Type u_1\nS : Type u_2\ninst✝³ : SetLike S M\ninst✝² : OrderedCommMonoid M\ninst✝¹ : SubmonoidClass S M\ninst✝ : MulArchimedean M\nH : S\n⊢ MulArchimedean (Subtype fun x => Membership.mem H x)","decl":"@[to_additive]\ninstance SubmonoidClass.instMulArchimedean {M S : Type*} [SetLike S M] [OrderedCommMonoid M]\n    [SubmonoidClass S M] [MulArchimedean M] (H : S) : MulArchimedean H := by\n  constructor\n  rintro x _\n  simp only [← Subtype.coe_lt_coe, OneMemClass.coe_one, SubmonoidClass.mk_pow, Subtype.mk_le_mk]\n  exact MulArchimedean.arch x.val\n"}
{"name":"AddSubmonoidClass.instAddArchimedean","module":"Mathlib.Algebra.Order.Archimedean.Submonoid","initialProofState":"M : Type u_1\nS : Type u_2\ninst✝³ : SetLike S M\ninst✝² : OrderedAddCommMonoid M\ninst✝¹ : AddSubmonoidClass S M\ninst✝ : Archimedean M\nH : S\n⊢ Archimedean (Subtype fun x => Membership.mem H x)","decl":"@[to_additive]\ninstance SubmonoidClass.instMulArchimedean {M S : Type*} [SetLike S M] [OrderedCommMonoid M]\n    [SubmonoidClass S M] [MulArchimedean M] (H : S) : MulArchimedean H := by\n  constructor\n  rintro x _\n  simp only [← Subtype.coe_lt_coe, OneMemClass.coe_one, SubmonoidClass.mk_pow, Subtype.mk_le_mk]\n  exact MulArchimedean.arch x.val\n"}
