{"name":"Filter.zero_zeroAtFilter","module":"Mathlib.Order.Filter.ZeroAndBoundedAtFilter","initialProofState":"α : Type u_2\nβ : Type u_3\ninst✝¹ : Zero β\ninst✝ : TopologicalSpace β\nl : Filter α\n⊢ l.ZeroAtFilter 0","decl":"theorem zero_zeroAtFilter [Zero β] [TopologicalSpace β] (l : Filter α) :\n    ZeroAtFilter l (0 : α → β) :=\n  tendsto_const_nhds\n\n"}
{"name":"Filter.ZeroAtFilter.add","module":"Mathlib.Order.Filter.ZeroAndBoundedAtFilter","initialProofState":"α : Type u_2\nβ : Type u_3\ninst✝² : TopologicalSpace β\ninst✝¹ : AddZeroClass β\ninst✝ : ContinuousAdd β\nl : Filter α\nf g : α → β\nhf : l.ZeroAtFilter f\nhg : l.ZeroAtFilter g\n⊢ l.ZeroAtFilter (HAdd.hAdd f g)","decl":"nonrec theorem ZeroAtFilter.add [TopologicalSpace β] [AddZeroClass β] [ContinuousAdd β]\n    {l : Filter α} {f g : α → β} (hf : ZeroAtFilter l f) (hg : ZeroAtFilter l g) :\n    ZeroAtFilter l (f + g) := by\n  simpa using hf.add hg\n\n"}
{"name":"Filter.ZeroAtFilter.neg","module":"Mathlib.Order.Filter.ZeroAndBoundedAtFilter","initialProofState":"α : Type u_2\nβ : Type u_3\ninst✝² : TopologicalSpace β\ninst✝¹ : AddGroup β\ninst✝ : ContinuousNeg β\nl : Filter α\nf : α → β\nhf : l.ZeroAtFilter f\n⊢ l.ZeroAtFilter (Neg.neg f)","decl":"nonrec theorem ZeroAtFilter.neg [TopologicalSpace β] [AddGroup β] [ContinuousNeg β] {l : Filter α}\n    {f : α → β} (hf : ZeroAtFilter l f) : ZeroAtFilter l (-f) := by simpa using hf.neg\n\n"}
{"name":"Filter.ZeroAtFilter.smul","module":"Mathlib.Order.Filter.ZeroAndBoundedAtFilter","initialProofState":"𝕜 : Type u_1\nα : Type u_2\nβ : Type u_3\ninst✝⁴ : TopologicalSpace β\ninst✝³ : Zero 𝕜\ninst✝² : Zero β\ninst✝¹ : SMulWithZero 𝕜 β\ninst✝ : ContinuousConstSMul 𝕜 β\nl : Filter α\nf : α → β\nc : 𝕜\nhf : l.ZeroAtFilter f\n⊢ l.ZeroAtFilter (HSMul.hSMul c f)","decl":"theorem ZeroAtFilter.smul [TopologicalSpace β] [Zero 𝕜] [Zero β]\n    [SMulWithZero 𝕜 β] [ContinuousConstSMul 𝕜 β] {l : Filter α} {f : α → β} (c : 𝕜)\n    (hf : ZeroAtFilter l f) : ZeroAtFilter l (c • f) := by simpa using hf.const_smul c\n\n"}
{"name":"Filter.ZeroAtFilter.boundedAtFilter","module":"Mathlib.Order.Filter.ZeroAndBoundedAtFilter","initialProofState":"α : Type u_2\nβ : Type u_3\ninst✝ : SeminormedAddGroup β\nl : Filter α\nf : α → β\nhf : l.ZeroAtFilter f\n⊢ l.BoundedAtFilter f","decl":"theorem ZeroAtFilter.boundedAtFilter [SeminormedAddGroup β] {l : Filter α} {f : α → β}\n    (hf : ZeroAtFilter l f) : BoundedAtFilter l f :=\n  ((Asymptotics.isLittleO_one_iff _).mpr hf).isBigO\n\n"}
{"name":"Filter.const_boundedAtFilter","module":"Mathlib.Order.Filter.ZeroAndBoundedAtFilter","initialProofState":"α : Type u_2\nβ : Type u_3\ninst✝ : Norm β\nl : Filter α\nc : β\n⊢ l.BoundedAtFilter (Function.const α c)","decl":"theorem const_boundedAtFilter [Norm β] (l : Filter α) (c : β) :\n    BoundedAtFilter l (Function.const α c : α → β) :=\n  Asymptotics.isBigO_const_const c one_ne_zero l\n\n-- TODO(https://github.com/leanprover-community/mathlib4/issues/19288): Remove all Comm in the next\n-- three lemmas. This would require modifying the corresponding general asymptotics lemma.\n"}
{"name":"Filter.BoundedAtFilter.add","module":"Mathlib.Order.Filter.ZeroAndBoundedAtFilter","initialProofState":"α : Type u_2\nβ : Type u_3\ninst✝ : SeminormedAddCommGroup β\nl : Filter α\nf g : α → β\nhf : l.BoundedAtFilter f\nhg : l.BoundedAtFilter g\n⊢ l.BoundedAtFilter (HAdd.hAdd f g)","decl":"nonrec theorem BoundedAtFilter.add [SeminormedAddCommGroup β] {l : Filter α} {f g : α → β}\n    (hf : BoundedAtFilter l f) (hg : BoundedAtFilter l g) : BoundedAtFilter l (f + g) := by\n  simpa using hf.add hg\n\n"}
{"name":"Filter.BoundedAtFilter.neg","module":"Mathlib.Order.Filter.ZeroAndBoundedAtFilter","initialProofState":"α : Type u_2\nβ : Type u_3\ninst✝ : SeminormedAddCommGroup β\nl : Filter α\nf : α → β\nhf : l.BoundedAtFilter f\n⊢ l.BoundedAtFilter (Neg.neg f)","decl":"theorem BoundedAtFilter.neg [SeminormedAddCommGroup β] {l : Filter α} {f : α → β}\n    (hf : BoundedAtFilter l f) : BoundedAtFilter l (-f) :=\n  hf.neg_left\n\n"}
{"name":"Filter.BoundedAtFilter.smul","module":"Mathlib.Order.Filter.ZeroAndBoundedAtFilter","initialProofState":"𝕜 : Type u_1\nα : Type u_2\nβ : Type u_3\ninst✝³ : SeminormedRing 𝕜\ninst✝² : SeminormedAddCommGroup β\ninst✝¹ : Module 𝕜 β\ninst✝ : BoundedSMul 𝕜 β\nl : Filter α\nf : α → β\nc : 𝕜\nhf : l.BoundedAtFilter f\n⊢ l.BoundedAtFilter (HSMul.hSMul c f)","decl":"theorem BoundedAtFilter.smul\n    [SeminormedRing 𝕜] [SeminormedAddCommGroup β] [Module 𝕜 β] [BoundedSMul 𝕜 β]\n    {l : Filter α} {f : α → β} (c : 𝕜) (hf : BoundedAtFilter l f) : BoundedAtFilter l (c • f) :=\n  hf.const_smul_left c\n\n"}
{"name":"Filter.BoundedAtFilter.mul","module":"Mathlib.Order.Filter.ZeroAndBoundedAtFilter","initialProofState":"α : Type u_2\nβ : Type u_3\ninst✝ : SeminormedRing β\nl : Filter α\nf g : α → β\nhf : l.BoundedAtFilter f\nhg : l.BoundedAtFilter g\n⊢ l.BoundedAtFilter (HMul.hMul f g)","decl":"nonrec theorem BoundedAtFilter.mul [SeminormedRing β] {l : Filter α} {f g : α → β}\n    (hf : BoundedAtFilter l f) (hg : BoundedAtFilter l g) : BoundedAtFilter l (f * g) := by\n  refine (hf.mul hg).trans ?_\n  convert Asymptotics.isBigO_refl (E := ℝ) _ l\n  simp\n\n"}
