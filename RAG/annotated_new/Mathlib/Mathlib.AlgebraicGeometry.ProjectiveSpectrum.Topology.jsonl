{"name":"ProjectiveSpectrum.isPrime","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nself : ProjectiveSpectrum 𝒜\n⊢ self.asHomogeneousIdeal.toIdeal.IsPrime","decl":"/-- The projective spectrum of a graded commutative ring is the subtype of all homogeneous ideals\nthat are prime and do not contain the irrelevant ideal. -/\n@[ext]\nstructure ProjectiveSpectrum where\n  asHomogeneousIdeal : HomogeneousIdeal 𝒜\n  isPrime : asHomogeneousIdeal.toIdeal.IsPrime\n  not_irrelevant_le : ¬HomogeneousIdeal.irrelevant 𝒜 ≤ asHomogeneousIdeal\n\n"}
{"name":"ProjectiveSpectrum.mk.injEq","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nasHomogeneousIdeal✝ : HomogeneousIdeal 𝒜\nisPrime✝ : asHomogeneousIdeal✝.toIdeal.IsPrime\nnot_irrelevant_le✝ : Not (LE.le (HomogeneousIdeal.irrelevant 𝒜) asHomogeneousIdeal✝)\nasHomogeneousIdeal : HomogeneousIdeal 𝒜\nisPrime : asHomogeneousIdeal.toIdeal.IsPrime\nnot_irrelevant_le : Not (LE.le (HomogeneousIdeal.irrelevant 𝒜) asHomogeneousIdeal)\n⊢ Eq (Eq { asHomogeneousIdeal := asHomogeneousIdeal✝, isPrime := isPrime✝, not_irrelevant_le := not_irrelevant_le✝ } { asHomogeneousIdeal := asHomogeneousIdeal, isPrime := isPrime, not_irrelevant_le := not_irrelevant_le }) (Eq asHomogeneousIdeal✝ asHomogeneousIdeal)","decl":"/-- The projective spectrum of a graded commutative ring is the subtype of all homogeneous ideals\nthat are prime and do not contain the irrelevant ideal. -/\n@[ext]\nstructure ProjectiveSpectrum where\n  asHomogeneousIdeal : HomogeneousIdeal 𝒜\n  isPrime : asHomogeneousIdeal.toIdeal.IsPrime\n  not_irrelevant_le : ¬HomogeneousIdeal.irrelevant 𝒜 ≤ asHomogeneousIdeal\n\n"}
{"name":"ProjectiveSpectrum.mk.inj","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nasHomogeneousIdeal✝ : HomogeneousIdeal 𝒜\nisPrime✝ : asHomogeneousIdeal✝.toIdeal.IsPrime\nnot_irrelevant_le✝ : Not (LE.le (HomogeneousIdeal.irrelevant 𝒜) asHomogeneousIdeal✝)\nasHomogeneousIdeal : HomogeneousIdeal 𝒜\nisPrime : asHomogeneousIdeal.toIdeal.IsPrime\nnot_irrelevant_le : Not (LE.le (HomogeneousIdeal.irrelevant 𝒜) asHomogeneousIdeal)\nx✝ : Eq { asHomogeneousIdeal := asHomogeneousIdeal✝, isPrime := isPrime✝, not_irrelevant_le := not_irrelevant_le✝ } { asHomogeneousIdeal := asHomogeneousIdeal, isPrime := isPrime, not_irrelevant_le := not_irrelevant_le }\n⊢ Eq asHomogeneousIdeal✝ asHomogeneousIdeal","decl":"/-- The projective spectrum of a graded commutative ring is the subtype of all homogeneous ideals\nthat are prime and do not contain the irrelevant ideal. -/\n@[ext]\nstructure ProjectiveSpectrum where\n  asHomogeneousIdeal : HomogeneousIdeal 𝒜\n  isPrime : asHomogeneousIdeal.toIdeal.IsPrime\n  not_irrelevant_le : ¬HomogeneousIdeal.irrelevant 𝒜 ≤ asHomogeneousIdeal\n\n"}
{"name":"ProjectiveSpectrum.ext","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nx y : ProjectiveSpectrum 𝒜\nasHomogeneousIdeal : Eq x.asHomogeneousIdeal y.asHomogeneousIdeal\n⊢ Eq x y","decl":"/-- The projective spectrum of a graded commutative ring is the subtype of all homogeneous ideals\nthat are prime and do not contain the irrelevant ideal. -/\n@[ext]\nstructure ProjectiveSpectrum where\n  asHomogeneousIdeal : HomogeneousIdeal 𝒜\n  isPrime : asHomogeneousIdeal.toIdeal.IsPrime\n  not_irrelevant_le : ¬HomogeneousIdeal.irrelevant 𝒜 ≤ asHomogeneousIdeal\n\n"}
{"name":"ProjectiveSpectrum.not_irrelevant_le","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nself : ProjectiveSpectrum 𝒜\n⊢ Not (LE.le (HomogeneousIdeal.irrelevant 𝒜) self.asHomogeneousIdeal)","decl":"/-- The projective spectrum of a graded commutative ring is the subtype of all homogeneous ideals\nthat are prime and do not contain the irrelevant ideal. -/\n@[ext]\nstructure ProjectiveSpectrum where\n  asHomogeneousIdeal : HomogeneousIdeal 𝒜\n  isPrime : asHomogeneousIdeal.toIdeal.IsPrime\n  not_irrelevant_le : ¬HomogeneousIdeal.irrelevant 𝒜 ≤ asHomogeneousIdeal\n\n"}
{"name":"ProjectiveSpectrum.ext_iff","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nx y : ProjectiveSpectrum 𝒜\n⊢ Iff (Eq x y) (Eq x.asHomogeneousIdeal y.asHomogeneousIdeal)","decl":"/-- The projective spectrum of a graded commutative ring is the subtype of all homogeneous ideals\nthat are prime and do not contain the irrelevant ideal. -/\n@[ext]\nstructure ProjectiveSpectrum where\n  asHomogeneousIdeal : HomogeneousIdeal 𝒜\n  isPrime : asHomogeneousIdeal.toIdeal.IsPrime\n  not_irrelevant_le : ¬HomogeneousIdeal.irrelevant 𝒜 ≤ asHomogeneousIdeal\n\n"}
{"name":"ProjectiveSpectrum.mk.sizeOf_spec","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝⁵ : CommSemiring R\ninst✝⁴ : CommRing A\ninst✝³ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝² : GradedAlgebra 𝒜\ninst✝¹ : SizeOf R\ninst✝ : SizeOf A\nasHomogeneousIdeal : HomogeneousIdeal 𝒜\nisPrime : asHomogeneousIdeal.toIdeal.IsPrime\nnot_irrelevant_le : Not (LE.le (HomogeneousIdeal.irrelevant 𝒜) asHomogeneousIdeal)\n⊢ Eq (SizeOf.sizeOf { asHomogeneousIdeal := asHomogeneousIdeal, isPrime := isPrime, not_irrelevant_le := not_irrelevant_le }) (HAdd.hAdd (HAdd.hAdd 1 (SizeOf.sizeOf asHomogeneousIdeal)) (SizeOf.sizeOf isPrime))","decl":"/-- The projective spectrum of a graded commutative ring is the subtype of all homogeneous ideals\nthat are prime and do not contain the irrelevant ideal. -/\n@[ext]\nstructure ProjectiveSpectrum where\n  asHomogeneousIdeal : HomogeneousIdeal 𝒜\n  isPrime : asHomogeneousIdeal.toIdeal.IsPrime\n  not_irrelevant_le : ¬HomogeneousIdeal.irrelevant 𝒜 ≤ asHomogeneousIdeal\n\n"}
{"name":"ProjectiveSpectrum.mem_zeroLocus","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nx : ProjectiveSpectrum 𝒜\ns : Set A\n⊢ Iff (Membership.mem (ProjectiveSpectrum.zeroLocus 𝒜 s) x) (HasSubset.Subset s ↑x.asHomogeneousIdeal)","decl":"@[simp]\ntheorem mem_zeroLocus (x : ProjectiveSpectrum 𝒜) (s : Set A) :\n    x ∈ zeroLocus 𝒜 s ↔ s ⊆ x.asHomogeneousIdeal :=\n  Iff.rfl\n\n"}
{"name":"ProjectiveSpectrum.zeroLocus_span","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\ns : Set A\n⊢ Eq (ProjectiveSpectrum.zeroLocus 𝒜 ↑(Ideal.span s)) (ProjectiveSpectrum.zeroLocus 𝒜 s)","decl":"@[simp]\ntheorem zeroLocus_span (s : Set A) : zeroLocus 𝒜 (Ideal.span s) = zeroLocus 𝒜 s := by\n  ext x\n  exact (Submodule.gi _ _).gc s x.asHomogeneousIdeal.toIdeal\n\n"}
{"name":"ProjectiveSpectrum.coe_vanishingIdeal","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nt : Set (ProjectiveSpectrum 𝒜)\n⊢ Eq (↑(ProjectiveSpectrum.vanishingIdeal t)) (setOf fun f => ∀ (x : ProjectiveSpectrum 𝒜), Membership.mem t x → Membership.mem x.asHomogeneousIdeal f)","decl":"theorem coe_vanishingIdeal (t : Set (ProjectiveSpectrum 𝒜)) :\n    (vanishingIdeal t : Set A) =\n      { f | ∀ x : ProjectiveSpectrum 𝒜, x ∈ t → f ∈ x.asHomogeneousIdeal } := by\n  ext f\n  rw [vanishingIdeal, SetLike.mem_coe, ← HomogeneousIdeal.mem_iff, HomogeneousIdeal.toIdeal_iInf,\n    Submodule.mem_iInf]\n  refine forall_congr' fun x => ?_\n  rw [HomogeneousIdeal.toIdeal_iInf, Submodule.mem_iInf, HomogeneousIdeal.mem_iff]\n\n"}
{"name":"ProjectiveSpectrum.mem_vanishingIdeal","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nt : Set (ProjectiveSpectrum 𝒜)\nf : A\n⊢ Iff (Membership.mem (ProjectiveSpectrum.vanishingIdeal t) f) (∀ (x : ProjectiveSpectrum 𝒜), Membership.mem t x → Membership.mem x.asHomogeneousIdeal f)","decl":"theorem mem_vanishingIdeal (t : Set (ProjectiveSpectrum 𝒜)) (f : A) :\n    f ∈ vanishingIdeal t ↔ ∀ x : ProjectiveSpectrum 𝒜, x ∈ t → f ∈ x.asHomogeneousIdeal := by\n  rw [← SetLike.mem_coe, coe_vanishingIdeal, Set.mem_setOf_eq]\n\n"}
{"name":"ProjectiveSpectrum.vanishingIdeal_singleton","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nx : ProjectiveSpectrum 𝒜\n⊢ Eq (ProjectiveSpectrum.vanishingIdeal (Singleton.singleton x)) x.asHomogeneousIdeal","decl":"@[simp]\ntheorem vanishingIdeal_singleton (x : ProjectiveSpectrum 𝒜) :\n    vanishingIdeal ({x} : Set (ProjectiveSpectrum 𝒜)) = x.asHomogeneousIdeal := by\n  simp [vanishingIdeal]\n\n"}
{"name":"ProjectiveSpectrum.subset_zeroLocus_iff_le_vanishingIdeal","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nt : Set (ProjectiveSpectrum 𝒜)\nI : Ideal A\n⊢ Iff (HasSubset.Subset t (ProjectiveSpectrum.zeroLocus 𝒜 ↑I)) (LE.le I (ProjectiveSpectrum.vanishingIdeal t).toIdeal)","decl":"theorem subset_zeroLocus_iff_le_vanishingIdeal (t : Set (ProjectiveSpectrum 𝒜)) (I : Ideal A) :\n    t ⊆ zeroLocus 𝒜 I ↔ I ≤ (vanishingIdeal t).toIdeal :=\n  ⟨fun h _ k => (mem_vanishingIdeal _ _).mpr fun _ j => (mem_zeroLocus _ _ _).mpr (h j) k, fun h =>\n    fun x j =>\n    (mem_zeroLocus _ _ _).mpr (le_trans h fun _ h => ((mem_vanishingIdeal _ _).mp h) x j)⟩\n\n"}
{"name":"ProjectiveSpectrum.gc_ideal","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\n⊢ GaloisConnection (fun I => ProjectiveSpectrum.zeroLocus 𝒜 ↑I) fun t => (ProjectiveSpectrum.vanishingIdeal t).toIdeal","decl":"/-- `zeroLocus` and `vanishingIdeal` form a galois connection. -/\ntheorem gc_ideal :\n    @GaloisConnection (Ideal A) (Set (ProjectiveSpectrum 𝒜))ᵒᵈ _ _\n      (fun I => zeroLocus 𝒜 I) fun t => (vanishingIdeal t).toIdeal :=\n  fun I t => subset_zeroLocus_iff_le_vanishingIdeal t I\n\n"}
{"name":"ProjectiveSpectrum.gc_set","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\n⊢ GaloisConnection (fun s => ProjectiveSpectrum.zeroLocus 𝒜 s) fun t => ↑(ProjectiveSpectrum.vanishingIdeal t)","decl":"/-- `zeroLocus` and `vanishingIdeal` form a galois connection. -/\ntheorem gc_set :\n    @GaloisConnection (Set A) (Set (ProjectiveSpectrum 𝒜))ᵒᵈ _ _\n      (fun s => zeroLocus 𝒜 s) fun t => vanishingIdeal t := by\n  have ideal_gc : GaloisConnection Ideal.span _ := (Submodule.gi A _).gc\n  simpa [zeroLocus_span, Function.comp_def] using GaloisConnection.compose ideal_gc (gc_ideal 𝒜)\n\n"}
{"name":"ProjectiveSpectrum.gc_homogeneousIdeal","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\n⊢ GaloisConnection (fun I => ProjectiveSpectrum.zeroLocus 𝒜 ↑I) fun t => ProjectiveSpectrum.vanishingIdeal t","decl":"theorem gc_homogeneousIdeal :\n    @GaloisConnection (HomogeneousIdeal 𝒜) (Set (ProjectiveSpectrum 𝒜))ᵒᵈ _ _\n      (fun I => zeroLocus 𝒜 I) fun t => vanishingIdeal t :=\n  fun I t => by\n  simpa [show I.toIdeal ≤ (vanishingIdeal t).toIdeal ↔ I ≤ vanishingIdeal t from Iff.rfl] using\n    subset_zeroLocus_iff_le_vanishingIdeal t I.toIdeal\n\n"}
{"name":"ProjectiveSpectrum.subset_zeroLocus_iff_subset_vanishingIdeal","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nt : Set (ProjectiveSpectrum 𝒜)\ns : Set A\n⊢ Iff (HasSubset.Subset t (ProjectiveSpectrum.zeroLocus 𝒜 s)) (HasSubset.Subset s ↑(ProjectiveSpectrum.vanishingIdeal t))","decl":"theorem subset_zeroLocus_iff_subset_vanishingIdeal (t : Set (ProjectiveSpectrum 𝒜)) (s : Set A) :\n    t ⊆ zeroLocus 𝒜 s ↔ s ⊆ vanishingIdeal t :=\n  (gc_set _) s t\n\n"}
{"name":"ProjectiveSpectrum.subset_vanishingIdeal_zeroLocus","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\ns : Set A\n⊢ HasSubset.Subset s ↑(ProjectiveSpectrum.vanishingIdeal (ProjectiveSpectrum.zeroLocus 𝒜 s))","decl":"theorem subset_vanishingIdeal_zeroLocus (s : Set A) : s ⊆ vanishingIdeal (zeroLocus 𝒜 s) :=\n  (gc_set _).le_u_l s\n\n"}
{"name":"ProjectiveSpectrum.ideal_le_vanishingIdeal_zeroLocus","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nI : Ideal A\n⊢ LE.le I (ProjectiveSpectrum.vanishingIdeal (ProjectiveSpectrum.zeroLocus 𝒜 ↑I)).toIdeal","decl":"theorem ideal_le_vanishingIdeal_zeroLocus (I : Ideal A) :\n    I ≤ (vanishingIdeal (zeroLocus 𝒜 I)).toIdeal :=\n  (gc_ideal _).le_u_l I\n\n"}
{"name":"ProjectiveSpectrum.homogeneousIdeal_le_vanishingIdeal_zeroLocus","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nI : HomogeneousIdeal 𝒜\n⊢ LE.le I (ProjectiveSpectrum.vanishingIdeal (ProjectiveSpectrum.zeroLocus 𝒜 ↑I))","decl":"theorem homogeneousIdeal_le_vanishingIdeal_zeroLocus (I : HomogeneousIdeal 𝒜) :\n    I ≤ vanishingIdeal (zeroLocus 𝒜 I) :=\n  (gc_homogeneousIdeal _).le_u_l I\n\n"}
{"name":"ProjectiveSpectrum.subset_zeroLocus_vanishingIdeal","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nt : Set (ProjectiveSpectrum 𝒜)\n⊢ HasSubset.Subset t (ProjectiveSpectrum.zeroLocus 𝒜 ↑(ProjectiveSpectrum.vanishingIdeal t))","decl":"theorem subset_zeroLocus_vanishingIdeal (t : Set (ProjectiveSpectrum 𝒜)) :\n    t ⊆ zeroLocus 𝒜 (vanishingIdeal t) :=\n  (gc_ideal _).l_u_le t\n\n"}
{"name":"ProjectiveSpectrum.zeroLocus_anti_mono","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\ns t : Set A\nh : HasSubset.Subset s t\n⊢ HasSubset.Subset (ProjectiveSpectrum.zeroLocus 𝒜 t) (ProjectiveSpectrum.zeroLocus 𝒜 s)","decl":"theorem zeroLocus_anti_mono {s t : Set A} (h : s ⊆ t) : zeroLocus 𝒜 t ⊆ zeroLocus 𝒜 s :=\n  (gc_set _).monotone_l h\n\n"}
{"name":"ProjectiveSpectrum.zeroLocus_anti_mono_ideal","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\ns t : Ideal A\nh : LE.le s t\n⊢ HasSubset.Subset (ProjectiveSpectrum.zeroLocus 𝒜 ↑t) (ProjectiveSpectrum.zeroLocus 𝒜 ↑s)","decl":"theorem zeroLocus_anti_mono_ideal {s t : Ideal A} (h : s ≤ t) :\n    zeroLocus 𝒜 (t : Set A) ⊆ zeroLocus 𝒜 (s : Set A) :=\n  (gc_ideal _).monotone_l h\n\n"}
{"name":"ProjectiveSpectrum.zeroLocus_anti_mono_homogeneousIdeal","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\ns t : HomogeneousIdeal 𝒜\nh : LE.le s t\n⊢ HasSubset.Subset (ProjectiveSpectrum.zeroLocus 𝒜 ↑t) (ProjectiveSpectrum.zeroLocus 𝒜 ↑s)","decl":"theorem zeroLocus_anti_mono_homogeneousIdeal {s t : HomogeneousIdeal 𝒜} (h : s ≤ t) :\n    zeroLocus 𝒜 (t : Set A) ⊆ zeroLocus 𝒜 (s : Set A) :=\n  (gc_homogeneousIdeal _).monotone_l h\n\n"}
{"name":"ProjectiveSpectrum.vanishingIdeal_anti_mono","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\ns t : Set (ProjectiveSpectrum 𝒜)\nh : HasSubset.Subset s t\n⊢ LE.le (ProjectiveSpectrum.vanishingIdeal t) (ProjectiveSpectrum.vanishingIdeal s)","decl":"theorem vanishingIdeal_anti_mono {s t : Set (ProjectiveSpectrum 𝒜)} (h : s ⊆ t) :\n    vanishingIdeal t ≤ vanishingIdeal s :=\n  (gc_ideal _).monotone_u h\n\n"}
{"name":"ProjectiveSpectrum.zeroLocus_bot","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\n⊢ Eq (ProjectiveSpectrum.zeroLocus 𝒜 ↑Bot.bot) Set.univ","decl":"theorem zeroLocus_bot : zeroLocus 𝒜 ((⊥ : Ideal A) : Set A) = Set.univ :=\n  (gc_ideal 𝒜).l_bot\n\n"}
{"name":"ProjectiveSpectrum.zeroLocus_singleton_zero","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\n⊢ Eq (ProjectiveSpectrum.zeroLocus 𝒜 (Singleton.singleton 0)) Set.univ","decl":"@[simp]\ntheorem zeroLocus_singleton_zero : zeroLocus 𝒜 ({0} : Set A) = Set.univ :=\n  zeroLocus_bot _\n\n"}
{"name":"ProjectiveSpectrum.zeroLocus_empty","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\n⊢ Eq (ProjectiveSpectrum.zeroLocus 𝒜 EmptyCollection.emptyCollection) Set.univ","decl":"@[simp]\ntheorem zeroLocus_empty : zeroLocus 𝒜 (∅ : Set A) = Set.univ :=\n  (gc_set 𝒜).l_bot\n\n"}
{"name":"ProjectiveSpectrum.vanishingIdeal_univ","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\n⊢ Eq (ProjectiveSpectrum.vanishingIdeal EmptyCollection.emptyCollection) Top.top","decl":"@[simp]\ntheorem vanishingIdeal_univ : vanishingIdeal (∅ : Set (ProjectiveSpectrum 𝒜)) = ⊤ := by\n  simpa using (gc_ideal _).u_top\n\n"}
{"name":"ProjectiveSpectrum.zeroLocus_empty_of_one_mem","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\ns : Set A\nh : Membership.mem s 1\n⊢ Eq (ProjectiveSpectrum.zeroLocus 𝒜 s) EmptyCollection.emptyCollection","decl":"theorem zeroLocus_empty_of_one_mem {s : Set A} (h : (1 : A) ∈ s) : zeroLocus 𝒜 s = ∅ :=\n  Set.eq_empty_iff_forall_not_mem.mpr fun x hx =>\n    (inferInstance : x.asHomogeneousIdeal.toIdeal.IsPrime).ne_top <|\n      x.asHomogeneousIdeal.toIdeal.eq_top_iff_one.mpr <| hx h\n\n"}
{"name":"ProjectiveSpectrum.zeroLocus_singleton_one","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\n⊢ Eq (ProjectiveSpectrum.zeroLocus 𝒜 (Singleton.singleton 1)) EmptyCollection.emptyCollection","decl":"@[simp]\ntheorem zeroLocus_singleton_one : zeroLocus 𝒜 ({1} : Set A) = ∅ :=\n  zeroLocus_empty_of_one_mem 𝒜 (Set.mem_singleton (1 : A))\n\n"}
{"name":"ProjectiveSpectrum.zeroLocus_univ","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\n⊢ Eq (ProjectiveSpectrum.zeroLocus 𝒜 Set.univ) EmptyCollection.emptyCollection","decl":"@[simp]\ntheorem zeroLocus_univ : zeroLocus 𝒜 (Set.univ : Set A) = ∅ :=\n  zeroLocus_empty_of_one_mem _ (Set.mem_univ 1)\n\n"}
{"name":"ProjectiveSpectrum.zeroLocus_sup_ideal","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nI J : Ideal A\n⊢ Eq (ProjectiveSpectrum.zeroLocus 𝒜 ↑(Max.max I J)) (Inter.inter (ProjectiveSpectrum.zeroLocus 𝒜 ↑I) (ProjectiveSpectrum.zeroLocus 𝒜 ↑J))","decl":"theorem zeroLocus_sup_ideal (I J : Ideal A) :\n    zeroLocus 𝒜 ((I ⊔ J : Ideal A) : Set A) = zeroLocus _ I ∩ zeroLocus _ J :=\n  (gc_ideal 𝒜).l_sup\n\n"}
{"name":"ProjectiveSpectrum.zeroLocus_sup_homogeneousIdeal","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nI J : HomogeneousIdeal 𝒜\n⊢ Eq (ProjectiveSpectrum.zeroLocus 𝒜 ↑(Max.max I J)) (Inter.inter (ProjectiveSpectrum.zeroLocus 𝒜 ↑I) (ProjectiveSpectrum.zeroLocus 𝒜 ↑J))","decl":"theorem zeroLocus_sup_homogeneousIdeal (I J : HomogeneousIdeal 𝒜) :\n    zeroLocus 𝒜 ((I ⊔ J : HomogeneousIdeal 𝒜) : Set A) = zeroLocus _ I ∩ zeroLocus _ J :=\n  (gc_homogeneousIdeal 𝒜).l_sup\n\n"}
{"name":"ProjectiveSpectrum.zeroLocus_union","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\ns s' : Set A\n⊢ Eq (ProjectiveSpectrum.zeroLocus 𝒜 (Union.union s s')) (Inter.inter (ProjectiveSpectrum.zeroLocus 𝒜 s) (ProjectiveSpectrum.zeroLocus 𝒜 s'))","decl":"theorem zeroLocus_union (s s' : Set A) : zeroLocus 𝒜 (s ∪ s') = zeroLocus _ s ∩ zeroLocus _ s' :=\n  (gc_set 𝒜).l_sup\n\n"}
{"name":"ProjectiveSpectrum.vanishingIdeal_union","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nt t' : Set (ProjectiveSpectrum 𝒜)\n⊢ Eq (ProjectiveSpectrum.vanishingIdeal (Union.union t t')) (Min.min (ProjectiveSpectrum.vanishingIdeal t) (ProjectiveSpectrum.vanishingIdeal t'))","decl":"theorem vanishingIdeal_union (t t' : Set (ProjectiveSpectrum 𝒜)) :\n    vanishingIdeal (t ∪ t') = vanishingIdeal t ⊓ vanishingIdeal t' := by\n  ext1; exact (gc_ideal 𝒜).u_inf\n\n"}
{"name":"ProjectiveSpectrum.zeroLocus_iSup_ideal","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nγ : Sort u_3\nI : γ → Ideal A\n⊢ Eq (ProjectiveSpectrum.zeroLocus 𝒜 ↑(iSup fun i => I i)) (Set.iInter fun i => ProjectiveSpectrum.zeroLocus 𝒜 ↑(I i))","decl":"theorem zeroLocus_iSup_ideal {γ : Sort*} (I : γ → Ideal A) :\n    zeroLocus _ ((⨆ i, I i : Ideal A) : Set A) = ⋂ i, zeroLocus 𝒜 (I i) :=\n  (gc_ideal 𝒜).l_iSup\n\n"}
{"name":"ProjectiveSpectrum.zeroLocus_iSup_homogeneousIdeal","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nγ : Sort u_3\nI : γ → HomogeneousIdeal 𝒜\n⊢ Eq (ProjectiveSpectrum.zeroLocus 𝒜 ↑(iSup fun i => I i)) (Set.iInter fun i => ProjectiveSpectrum.zeroLocus 𝒜 ↑(I i))","decl":"theorem zeroLocus_iSup_homogeneousIdeal {γ : Sort*} (I : γ → HomogeneousIdeal 𝒜) :\n    zeroLocus _ ((⨆ i, I i : HomogeneousIdeal 𝒜) : Set A) = ⋂ i, zeroLocus 𝒜 (I i) :=\n  (gc_homogeneousIdeal 𝒜).l_iSup\n\n"}
{"name":"ProjectiveSpectrum.zeroLocus_iUnion","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nγ : Sort u_3\ns : γ → Set A\n⊢ Eq (ProjectiveSpectrum.zeroLocus 𝒜 (Set.iUnion fun i => s i)) (Set.iInter fun i => ProjectiveSpectrum.zeroLocus 𝒜 (s i))","decl":"theorem zeroLocus_iUnion {γ : Sort*} (s : γ → Set A) :\n    zeroLocus 𝒜 (⋃ i, s i) = ⋂ i, zeroLocus 𝒜 (s i) :=\n  (gc_set 𝒜).l_iSup\n\n"}
{"name":"ProjectiveSpectrum.zeroLocus_bUnion","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\ns : Set (Set A)\n⊢ Eq (ProjectiveSpectrum.zeroLocus 𝒜 (Set.iUnion fun s' => Set.iUnion fun h => s')) (Set.iInter fun s' => Set.iInter fun h => ProjectiveSpectrum.zeroLocus 𝒜 s')","decl":"theorem zeroLocus_bUnion (s : Set (Set A)) :\n    zeroLocus 𝒜 (⋃ s' ∈ s, s' : Set A) = ⋂ s' ∈ s, zeroLocus 𝒜 s' := by\n  simp only [zeroLocus_iUnion]\n\n"}
{"name":"ProjectiveSpectrum.vanishingIdeal_iUnion","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nγ : Sort u_3\nt : γ → Set (ProjectiveSpectrum 𝒜)\n⊢ Eq (ProjectiveSpectrum.vanishingIdeal (Set.iUnion fun i => t i)) (iInf fun i => ProjectiveSpectrum.vanishingIdeal (t i))","decl":"theorem vanishingIdeal_iUnion {γ : Sort*} (t : γ → Set (ProjectiveSpectrum 𝒜)) :\n    vanishingIdeal (⋃ i, t i) = ⨅ i, vanishingIdeal (t i) :=\n  HomogeneousIdeal.toIdeal_injective <| by\n    convert (gc_ideal 𝒜).u_iInf; exact HomogeneousIdeal.toIdeal_iInf _\n\n"}
{"name":"ProjectiveSpectrum.zeroLocus_inf","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nI J : Ideal A\n⊢ Eq (ProjectiveSpectrum.zeroLocus 𝒜 ↑(Min.min I J)) (Union.union (ProjectiveSpectrum.zeroLocus 𝒜 ↑I) (ProjectiveSpectrum.zeroLocus 𝒜 ↑J))","decl":"theorem zeroLocus_inf (I J : Ideal A) :\n    zeroLocus 𝒜 ((I ⊓ J : Ideal A) : Set A) = zeroLocus 𝒜 I ∪ zeroLocus 𝒜 J :=\n  Set.ext fun x => x.isPrime.inf_le\n\n"}
{"name":"ProjectiveSpectrum.union_zeroLocus","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\ns s' : Set A\n⊢ Eq (Union.union (ProjectiveSpectrum.zeroLocus 𝒜 s) (ProjectiveSpectrum.zeroLocus 𝒜 s')) (ProjectiveSpectrum.zeroLocus 𝒜 ↑(Min.min (Ideal.span s) (Ideal.span s')))","decl":"theorem union_zeroLocus (s s' : Set A) :\n    zeroLocus 𝒜 s ∪ zeroLocus 𝒜 s' = zeroLocus 𝒜 (Ideal.span s ⊓ Ideal.span s' : Ideal A) := by\n  rw [zeroLocus_inf]\n  simp\n\n"}
{"name":"ProjectiveSpectrum.zeroLocus_mul_ideal","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nI J : Ideal A\n⊢ Eq (ProjectiveSpectrum.zeroLocus 𝒜 ↑(HMul.hMul I J)) (Union.union (ProjectiveSpectrum.zeroLocus 𝒜 ↑I) (ProjectiveSpectrum.zeroLocus 𝒜 ↑J))","decl":"theorem zeroLocus_mul_ideal (I J : Ideal A) :\n    zeroLocus 𝒜 ((I * J : Ideal A) : Set A) = zeroLocus 𝒜 I ∪ zeroLocus 𝒜 J :=\n  Set.ext fun x => x.isPrime.mul_le\n\n"}
{"name":"ProjectiveSpectrum.zeroLocus_mul_homogeneousIdeal","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nI J : HomogeneousIdeal 𝒜\n⊢ Eq (ProjectiveSpectrum.zeroLocus 𝒜 ↑(HMul.hMul I J)) (Union.union (ProjectiveSpectrum.zeroLocus 𝒜 ↑I) (ProjectiveSpectrum.zeroLocus 𝒜 ↑J))","decl":"theorem zeroLocus_mul_homogeneousIdeal (I J : HomogeneousIdeal 𝒜) :\n    zeroLocus 𝒜 ((I * J : HomogeneousIdeal 𝒜) : Set A) = zeroLocus 𝒜 I ∪ zeroLocus 𝒜 J :=\n  Set.ext fun x => x.isPrime.mul_le\n\n"}
{"name":"ProjectiveSpectrum.zeroLocus_singleton_mul","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nf g : A\n⊢ Eq (ProjectiveSpectrum.zeroLocus 𝒜 (Singleton.singleton (HMul.hMul f g))) (Union.union (ProjectiveSpectrum.zeroLocus 𝒜 (Singleton.singleton f)) (ProjectiveSpectrum.zeroLocus 𝒜 (Singleton.singleton g)))","decl":"theorem zeroLocus_singleton_mul (f g : A) :\n    zeroLocus 𝒜 ({f * g} : Set A) = zeroLocus 𝒜 {f} ∪ zeroLocus 𝒜 {g} :=\n  Set.ext fun x => by simpa using x.isPrime.mul_mem_iff_mem_or_mem\n\n"}
{"name":"ProjectiveSpectrum.zeroLocus_singleton_pow","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nf : A\nn : Nat\nhn : LT.lt 0 n\n⊢ Eq (ProjectiveSpectrum.zeroLocus 𝒜 (Singleton.singleton (HPow.hPow f n))) (ProjectiveSpectrum.zeroLocus 𝒜 (Singleton.singleton f))","decl":"@[simp]\ntheorem zeroLocus_singleton_pow (f : A) (n : ℕ) (hn : 0 < n) :\n    zeroLocus 𝒜 ({f ^ n} : Set A) = zeroLocus 𝒜 {f} :=\n  Set.ext fun x => by simpa using x.isPrime.pow_mem_iff_mem n hn\n\n"}
{"name":"ProjectiveSpectrum.sup_vanishingIdeal_le","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nt t' : Set (ProjectiveSpectrum 𝒜)\n⊢ LE.le (Max.max (ProjectiveSpectrum.vanishingIdeal t) (ProjectiveSpectrum.vanishingIdeal t')) (ProjectiveSpectrum.vanishingIdeal (Inter.inter t t'))","decl":"theorem sup_vanishingIdeal_le (t t' : Set (ProjectiveSpectrum 𝒜)) :\n    vanishingIdeal t ⊔ vanishingIdeal t' ≤ vanishingIdeal (t ∩ t') := by\n  intro r\n  rw [← HomogeneousIdeal.mem_iff, HomogeneousIdeal.toIdeal_sup, mem_vanishingIdeal,\n    Submodule.mem_sup]\n  rintro ⟨f, hf, g, hg, rfl⟩ x ⟨hxt, hxt'⟩\n  erw [mem_vanishingIdeal] at hf hg\n  apply Submodule.add_mem <;> solve_by_elim\n\n"}
{"name":"ProjectiveSpectrum.mem_compl_zeroLocus_iff_not_mem","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nf : A\nI : ProjectiveSpectrum 𝒜\n⊢ Iff (Membership.mem (HasCompl.compl (ProjectiveSpectrum.zeroLocus 𝒜 (Singleton.singleton f))) I) (Not (Membership.mem I.asHomogeneousIdeal f))","decl":"theorem mem_compl_zeroLocus_iff_not_mem {f : A} {I : ProjectiveSpectrum 𝒜} :\n    I ∈ (zeroLocus 𝒜 {f} : Set (ProjectiveSpectrum 𝒜))ᶜ ↔ f ∉ I.asHomogeneousIdeal := by\n  rw [Set.mem_compl_iff, mem_zeroLocus, Set.singleton_subset_iff]; rfl\n\n"}
{"name":"ProjectiveSpectrum.isOpen_iff","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nU : Set (ProjectiveSpectrum 𝒜)\n⊢ Iff (IsOpen U) (Exists fun s => Eq (HasCompl.compl U) (ProjectiveSpectrum.zeroLocus 𝒜 s))","decl":"theorem isOpen_iff (U : Set (ProjectiveSpectrum 𝒜)) : IsOpen U ↔ ∃ s, Uᶜ = zeroLocus 𝒜 s := by\n  simp only [@eq_comm _ Uᶜ]; rfl\n\n"}
{"name":"ProjectiveSpectrum.isClosed_iff_zeroLocus","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nZ : Set (ProjectiveSpectrum 𝒜)\n⊢ Iff (IsClosed Z) (Exists fun s => Eq Z (ProjectiveSpectrum.zeroLocus 𝒜 s))","decl":"theorem isClosed_iff_zeroLocus (Z : Set (ProjectiveSpectrum 𝒜)) :\n    IsClosed Z ↔ ∃ s, Z = zeroLocus 𝒜 s := by rw [← isOpen_compl_iff, isOpen_iff, compl_compl]\n\n"}
{"name":"ProjectiveSpectrum.isClosed_zeroLocus","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\ns : Set A\n⊢ IsClosed (ProjectiveSpectrum.zeroLocus 𝒜 s)","decl":"theorem isClosed_zeroLocus (s : Set A) : IsClosed (zeroLocus 𝒜 s) := by\n  rw [isClosed_iff_zeroLocus]\n  exact ⟨s, rfl⟩\n\n"}
{"name":"ProjectiveSpectrum.zeroLocus_vanishingIdeal_eq_closure","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nt : Set (ProjectiveSpectrum 𝒜)\n⊢ Eq (ProjectiveSpectrum.zeroLocus 𝒜 ↑(ProjectiveSpectrum.vanishingIdeal t)) (closure t)","decl":"theorem zeroLocus_vanishingIdeal_eq_closure (t : Set (ProjectiveSpectrum 𝒜)) :\n    zeroLocus 𝒜 (vanishingIdeal t : Set A) = closure t := by\n  apply Set.Subset.antisymm\n  · rintro x hx t' ⟨ht', ht⟩\n    obtain ⟨fs, rfl⟩ : ∃ s, t' = zeroLocus 𝒜 s := by rwa [isClosed_iff_zeroLocus] at ht'\n    rw [subset_zeroLocus_iff_subset_vanishingIdeal] at ht\n    exact Set.Subset.trans ht hx\n  · rw [(isClosed_zeroLocus _ _).closure_subset_iff]\n    exact subset_zeroLocus_vanishingIdeal 𝒜 t\n\n"}
{"name":"ProjectiveSpectrum.vanishingIdeal_closure","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nt : Set (ProjectiveSpectrum 𝒜)\n⊢ Eq (ProjectiveSpectrum.vanishingIdeal (closure t)) (ProjectiveSpectrum.vanishingIdeal t)","decl":"theorem vanishingIdeal_closure (t : Set (ProjectiveSpectrum 𝒜)) :\n    vanishingIdeal (closure t) = vanishingIdeal t := by\n  have := (gc_ideal 𝒜).u_l_u_eq_u t\n  ext1\n  erw [zeroLocus_vanishingIdeal_eq_closure 𝒜 t] at this\n  exact this\n\n"}
{"name":"ProjectiveSpectrum.mem_basicOpen","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nf : A\nx : ProjectiveSpectrum 𝒜\n⊢ Iff (Membership.mem (ProjectiveSpectrum.basicOpen 𝒜 f) x) (Not (Membership.mem x.asHomogeneousIdeal f))","decl":"@[simp]\ntheorem mem_basicOpen (f : A) (x : ProjectiveSpectrum 𝒜) :\n    x ∈ basicOpen 𝒜 f ↔ f ∉ x.asHomogeneousIdeal :=\n  Iff.rfl\n\n"}
{"name":"ProjectiveSpectrum.mem_coe_basicOpen","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nf : A\nx : ProjectiveSpectrum 𝒜\n⊢ Iff (Membership.mem (↑(ProjectiveSpectrum.basicOpen 𝒜 f)) x) (Not (Membership.mem x.asHomogeneousIdeal f))","decl":"theorem mem_coe_basicOpen (f : A) (x : ProjectiveSpectrum 𝒜) :\n    x ∈ (↑(basicOpen 𝒜 f) : Set (ProjectiveSpectrum 𝒜)) ↔ f ∉ x.asHomogeneousIdeal :=\n  Iff.rfl\n\n"}
{"name":"ProjectiveSpectrum.isOpen_basicOpen","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\na : A\n⊢ IsOpen ↑(ProjectiveSpectrum.basicOpen 𝒜 a)","decl":"theorem isOpen_basicOpen {a : A} : IsOpen (basicOpen 𝒜 a : Set (ProjectiveSpectrum 𝒜)) :=\n  (basicOpen 𝒜 a).isOpen\n\n"}
{"name":"ProjectiveSpectrum.basicOpen_eq_zeroLocus_compl","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nr : A\n⊢ Eq (↑(ProjectiveSpectrum.basicOpen 𝒜 r)) (HasCompl.compl (ProjectiveSpectrum.zeroLocus 𝒜 (Singleton.singleton r)))","decl":"@[simp]\ntheorem basicOpen_eq_zeroLocus_compl (r : A) :\n    (basicOpen 𝒜 r : Set (ProjectiveSpectrum 𝒜)) = (zeroLocus 𝒜 {r})ᶜ :=\n  Set.ext fun x => by simp only [Set.mem_compl_iff, mem_zeroLocus, Set.singleton_subset_iff]; rfl\n\n"}
{"name":"ProjectiveSpectrum.basicOpen_one","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\n⊢ Eq (ProjectiveSpectrum.basicOpen 𝒜 1) Top.top","decl":"@[simp]\ntheorem basicOpen_one : basicOpen 𝒜 (1 : A) = ⊤ :=\n  TopologicalSpace.Opens.ext <| by simp\n\n"}
{"name":"ProjectiveSpectrum.basicOpen_zero","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\n⊢ Eq (ProjectiveSpectrum.basicOpen 𝒜 0) Bot.bot","decl":"@[simp]\ntheorem basicOpen_zero : basicOpen 𝒜 (0 : A) = ⊥ :=\n  TopologicalSpace.Opens.ext <| by simp\n\n"}
{"name":"ProjectiveSpectrum.basicOpen_mul","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nf g : A\n⊢ Eq (ProjectiveSpectrum.basicOpen 𝒜 (HMul.hMul f g)) (Min.min (ProjectiveSpectrum.basicOpen 𝒜 f) (ProjectiveSpectrum.basicOpen 𝒜 g))","decl":"theorem basicOpen_mul (f g : A) : basicOpen 𝒜 (f * g) = basicOpen 𝒜 f ⊓ basicOpen 𝒜 g :=\n  TopologicalSpace.Opens.ext <| by simp [zeroLocus_singleton_mul]\n\n"}
{"name":"ProjectiveSpectrum.basicOpen_mul_le_left","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nf g : A\n⊢ LE.le (ProjectiveSpectrum.basicOpen 𝒜 (HMul.hMul f g)) (ProjectiveSpectrum.basicOpen 𝒜 f)","decl":"theorem basicOpen_mul_le_left (f g : A) : basicOpen 𝒜 (f * g) ≤ basicOpen 𝒜 f := by\n  rw [basicOpen_mul 𝒜 f g]\n  exact inf_le_left\n\n"}
{"name":"ProjectiveSpectrum.basicOpen_mul_le_right","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nf g : A\n⊢ LE.le (ProjectiveSpectrum.basicOpen 𝒜 (HMul.hMul f g)) (ProjectiveSpectrum.basicOpen 𝒜 g)","decl":"theorem basicOpen_mul_le_right (f g : A) : basicOpen 𝒜 (f * g) ≤ basicOpen 𝒜 g := by\n  rw [basicOpen_mul 𝒜 f g]\n  exact inf_le_right\n\n"}
{"name":"ProjectiveSpectrum.basicOpen_pow","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nf : A\nn : Nat\nhn : LT.lt 0 n\n⊢ Eq (ProjectiveSpectrum.basicOpen 𝒜 (HPow.hPow f n)) (ProjectiveSpectrum.basicOpen 𝒜 f)","decl":"@[simp]\ntheorem basicOpen_pow (f : A) (n : ℕ) (hn : 0 < n) : basicOpen 𝒜 (f ^ n) = basicOpen 𝒜 f :=\n  TopologicalSpace.Opens.ext <| by simpa using zeroLocus_singleton_pow 𝒜 f n hn\n\n"}
{"name":"ProjectiveSpectrum.basicOpen_eq_union_of_projection","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nf : A\n⊢ Eq (ProjectiveSpectrum.basicOpen 𝒜 f) (iSup fun i => ProjectiveSpectrum.basicOpen 𝒜 ((GradedAlgebra.proj 𝒜 i) f))","decl":"theorem basicOpen_eq_union_of_projection (f : A) :\n    basicOpen 𝒜 f = ⨆ i : ℕ, basicOpen 𝒜 (GradedAlgebra.proj 𝒜 i f) :=\n  TopologicalSpace.Opens.ext <|\n    Set.ext fun z => by\n      erw [mem_coe_basicOpen, TopologicalSpace.Opens.mem_sSup]\n      constructor <;> intro hz\n      · rcases show ∃ i, GradedAlgebra.proj 𝒜 i f ∉ z.asHomogeneousIdeal by\n          contrapose! hz with H\n          classical\n          rw [← DirectSum.sum_support_decompose 𝒜 f]\n          apply Ideal.sum_mem _ fun i _ => H i with ⟨i, hi⟩\n        exact ⟨basicOpen 𝒜 (GradedAlgebra.proj 𝒜 i f), ⟨i, rfl⟩, by rwa [mem_basicOpen]⟩\n      · obtain ⟨_, ⟨i, rfl⟩, hz⟩ := hz\n        exact fun rid => hz (z.1.2 i rid)\n\n"}
{"name":"ProjectiveSpectrum.isTopologicalBasis_basic_opens","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\n⊢ TopologicalSpace.IsTopologicalBasis (Set.range fun r => ↑(ProjectiveSpectrum.basicOpen 𝒜 r))","decl":"theorem isTopologicalBasis_basic_opens :\n    TopologicalSpace.IsTopologicalBasis\n      (Set.range fun r : A => (basicOpen 𝒜 r : Set (ProjectiveSpectrum 𝒜))) := by\n  apply TopologicalSpace.isTopologicalBasis_of_isOpen_of_nhds\n  · rintro _ ⟨r, rfl⟩\n    exact isOpen_basicOpen 𝒜\n  · rintro p U hp ⟨s, hs⟩\n    rw [← compl_compl U, Set.mem_compl_iff, ← hs, mem_zeroLocus, Set.not_subset] at hp\n    obtain ⟨f, hfs, hfp⟩ := hp\n    refine ⟨basicOpen 𝒜 f, ⟨f, rfl⟩, hfp, ?_⟩\n    rw [← Set.compl_subset_compl, ← hs, basicOpen_eq_zeroLocus_compl, compl_compl]\n    exact zeroLocus_anti_mono 𝒜 (Set.singleton_subset_iff.mpr hfs)\n\n"}
{"name":"ProjectiveSpectrum.as_ideal_le_as_ideal","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nx y : ProjectiveSpectrum 𝒜\n⊢ Iff (LE.le x.asHomogeneousIdeal y.asHomogeneousIdeal) (LE.le x y)","decl":"@[simp]\ntheorem as_ideal_le_as_ideal (x y : ProjectiveSpectrum 𝒜) :\n    x.asHomogeneousIdeal ≤ y.asHomogeneousIdeal ↔ x ≤ y :=\n  Iff.rfl\n\n"}
{"name":"ProjectiveSpectrum.as_ideal_lt_as_ideal","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nx y : ProjectiveSpectrum 𝒜\n⊢ Iff (LT.lt x.asHomogeneousIdeal y.asHomogeneousIdeal) (LT.lt x y)","decl":"@[simp]\ntheorem as_ideal_lt_as_ideal (x y : ProjectiveSpectrum 𝒜) :\n    x.asHomogeneousIdeal < y.asHomogeneousIdeal ↔ x < y :=\n  Iff.rfl\n\n"}
{"name":"ProjectiveSpectrum.le_iff_mem_closure","module":"Mathlib.AlgebraicGeometry.ProjectiveSpectrum.Topology","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\n𝒜 : Nat → Submodule R A\ninst✝ : GradedAlgebra 𝒜\nx y : ProjectiveSpectrum 𝒜\n⊢ Iff (LE.le x y) (Membership.mem (closure (Singleton.singleton x)) y)","decl":"theorem le_iff_mem_closure (x y : ProjectiveSpectrum 𝒜) :\n    x ≤ y ↔ y ∈ closure ({x} : Set (ProjectiveSpectrum 𝒜)) := by\n  rw [← as_ideal_le_as_ideal, ← zeroLocus_vanishingIdeal_eq_closure, mem_zeroLocus,\n    vanishingIdeal_singleton]\n  simp only [as_ideal_le_as_ideal, coe_subset_coe]\n\n"}
