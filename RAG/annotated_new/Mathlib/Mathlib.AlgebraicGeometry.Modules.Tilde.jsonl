{"name":"ModuleCat.Tilde.isLocallyFraction_pred","module":"Mathlib.AlgebraicGeometry.Modules.Tilde","initialProofState":"R : Type u\ninst‚úù : CommRing R\nM : ModuleCat R\nU : TopologicalSpace.Opens ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\nf : (x : Subtype fun x => Membership.mem U x) ‚Üí ModuleCat.Tilde.Localizations M ‚Üëx\n‚ä¢ Eq ((ModuleCat.Tilde.isLocallyFraction M).pred f) (‚àÄ (y : Subtype fun x => Membership.mem U x), Exists fun V => Exists fun x => Exists fun i => Exists fun m => Exists fun s => ‚àÄ (x : Subtype fun x => Membership.mem V x), And (Not (Membership.mem (‚Üëx).asIdeal s)) (Eq (HSMul.hSMul s (f ((fun x => ‚ü®‚Üëx, ‚ãØ‚ü©) x))) ((LocalizedModule.mkLinearMap (‚Üëx).asIdeal.primeCompl ‚ÜëM) m)))","decl":"@[simp]\ntheorem isLocallyFraction_pred {U : Opens (PrimeSpectrum.Top R)}\n    (f : ‚àÄ x : U, Localizations M x) :\n    (isLocallyFraction M).pred f =\n      ‚àÄ y : U,\n        ‚àÉ (V : _) (_ : y.1 ‚àà V) (i : V ‚ü∂ U),\n          ‚àÉ (m : M) (s: R), ‚àÄ x : V, ¬¨s ‚àà x.1.asIdeal ‚àß s ‚Ä¢ f (i x) =\n            LocalizedModule.mkLinearMap x.1.asIdeal.primeCompl M m :=\n  rfl\n\n/- M_x is an O_SpecR(U)-module when x is in U -/\n"}
{"name":"ModuleCat.Tilde.sections_smul_localizations_def","module":"Mathlib.AlgebraicGeometry.Modules.Tilde","initialProofState":"R : Type u\ninst‚úù : CommRing R\nM : ModuleCat R\nU : Opposite (TopologicalSpace.Opens ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R))\nx : Subtype fun x => Membership.mem (Opposite.unop U) x\nr : ‚Üë((AlgebraicGeometry.Spec.structureSheaf R).val.obj U)\nm : ModuleCat.Tilde.Localizations M ‚Üëx\n‚ä¢ Eq (HSMul.hSMul r m) (HSMul.hSMul (‚Üër x) m)","decl":"@[simp]\nlemma sections_smul_localizations_def\n    {U : (Opens (PrimeSpectrum.Top R))·µí·µñ} (x : U.unop)\n    (r : (Spec.structureSheaf R).val.obj U)\n    (m : Localizations M ‚Üëx) :\n  r ‚Ä¢ m = r.1 x ‚Ä¢ m := rfl\n\n"}
{"name":"ModuleCat.Tilde.res_apply","module":"Mathlib.AlgebraicGeometry.Modules.Tilde","initialProofState":"R : Type u\ninst‚úù : CommRing R\nM : ModuleCat R\nU V : TopologicalSpace.Opens ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\ni : Quiver.Hom V U\ns : ‚Üë(M.tildeInModuleCat.obj { unop := U })\nx : Subtype fun x => Membership.mem V x\n‚ä¢ Eq (‚Üë((CategoryTheory.ConcreteCategory.hom (M.tildeInModuleCat.map i.op)) s) x) (‚Üës ((fun x => ‚ü®‚Üëx, ‚ãØ‚ü©) x))","decl":"@[simp]\ntheorem res_apply (U V : Opens (PrimeSpectrum.Top R)) (i : V ‚ü∂ U)\n    (s : (tildeInModuleCat M).obj (op U)) (x : V) :\n    ((tildeInModuleCat M).map i.op s).1 x = (s.1 (i x) :) :=\n  rfl\n\n"}
{"name":"ModuleCat.Tilde.smul_section_apply","module":"Mathlib.AlgebraicGeometry.Modules.Tilde","initialProofState":"R : Type u\ninst‚úù : CommRing R\nM : ModuleCat R\nr : R\nU : TopologicalSpace.Opens ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\ns : ‚Üë(M.tildeInModuleCat.obj { unop := U })\nx : Subtype fun x => Membership.mem U x\n‚ä¢ Eq (‚Üë(HSMul.hSMul r s) x) (HSMul.hSMul r (‚Üës x))","decl":"lemma smul_section_apply (r : R) (U : Opens (PrimeSpectrum.Top R))\n    (s : (tildeInModuleCat M).1.obj (op U)) (x : U) :\n    (r ‚Ä¢ s).1 x = r ‚Ä¢ (s.1 x) := rfl\n\n"}
{"name":"ModuleCat.Tilde.smul_stalk_no_nonzero_divisor","module":"Mathlib.AlgebraicGeometry.Modules.Tilde","initialProofState":"R : Type u\ninst‚úù : CommRing R\nM : ModuleCat R\nx : PrimeSpectrum R\nr : Subtype fun x_1 => Membership.mem x.asIdeal.primeCompl x_1\nst : ‚Üë(M.tildeInModuleCat.stalk x)\nhst : Eq (HSMul.hSMul (‚Üër) st) 0\n‚ä¢ Eq st 0","decl":"lemma smul_stalk_no_nonzero_divisor {x : PrimeSpectrum R}\n    (r : x.asIdeal.primeCompl) (st : (tildeInModuleCat M).stalk x) (hst : r.1 ‚Ä¢ st = 0) :\n    st = 0 := by\n  refine Limits.Concrete.colimit_no_zero_smul_divisor\n    _ _ _ ‚ü®op ‚ü®PrimeSpectrum.basicOpen r.1, r.2‚ü©, fun U i s hs ‚Ü¶ Subtype.eq <| funext fun pt ‚Ü¶ ?_‚ü©\n    _ hst\n  apply LocalizedModule.eq_zero_of_smul_eq_zero _ (i.unop pt).2 _\n    (congr_fun (Subtype.ext_iff.1 hs) pt)\n\n"}
{"name":"ModuleCat.Tilde.toOpen_res","module":"Mathlib.AlgebraicGeometry.Modules.Tilde","initialProofState":"R : Type u\ninst‚úù : CommRing R\nM : ModuleCat R\nU V : TopologicalSpace.Opens ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\ni : Quiver.Hom V U\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (ModuleCat.Tilde.toOpen M U) (M.tildeInModuleCat.map i.op)) (ModuleCat.Tilde.toOpen M V)","decl":"@[simp]\ntheorem toOpen_res (U V : Opens (PrimeSpectrum.Top R)) (i : V ‚ü∂ U) :\n    toOpen M U ‚â´ (tildeInModuleCat M).map i.op = toOpen M V :=\n  rfl\n\n"}
{"name":"ModuleCat.Tilde.isUnit_toStalk","module":"Mathlib.AlgebraicGeometry.Modules.Tilde","initialProofState":"R : Type u\ninst‚úù : CommRing R\nM : ModuleCat R\nx : ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\nr : Subtype fun x_1 => Membership.mem x.asIdeal.primeCompl x_1\n‚ä¢ IsUnit ((algebraMap R (Module.End R ‚Üë(M.tildeInModuleCat.stalk x))) ‚Üër)","decl":"open LocalizedModule TopCat.Presheaf in\nlemma isUnit_toStalk (x : PrimeSpectrum.Top R) (r : x.asIdeal.primeCompl) :\n    IsUnit ((algebraMap R (Module.End R ((tildeInModuleCat M).stalk x))) r) := by\n  rw [Module.End_isUnit_iff]\n  refine ‚ü®LinearMap.ker_eq_bot.1 <| eq_bot_iff.2 fun st (h : r.1 ‚Ä¢ st = 0) ‚Ü¶\n    smul_stalk_no_nonzero_divisor M r st h, fun st ‚Ü¶ ?_‚ü©\n  obtain ‚ü®U, mem, s, rfl‚ü© := germ_exist (F := M.tildeInModuleCat) x st\n  let O := U ‚äì (PrimeSpectrum.basicOpen r)\n  refine ‚ü®germ M.tildeInModuleCat O x ‚ü®mem, r.2‚ü©\n    ‚ü®fun q ‚Ü¶ (Localization.mk 1 ‚ü®r, q.2.2‚ü© : Localization.AtPrime q.1.asIdeal) ‚Ä¢ s.1\n      ‚ü®q.1, q.2.1‚ü©, fun q ‚Ü¶ ?_‚ü©, by\n        simpa only [Module.algebraMap_end_apply, ‚Üê map_smul] using\n          germ_ext (C := ModuleCat R) (W := O) (hxW := ‚ü®mem, r.2‚ü©) (iWU := ùüô _)\n            (iWV := homOfLE inf_le_left) _ <|\n          Subtype.eq <| funext fun y ‚Ü¶ smul_eq_iff_of_mem (S := y.1.1.primeCompl) r _ _ _ |>.2 rfl‚ü©\n  obtain ‚ü®V, mem_V, iV, num, den, hV‚ü© := s.2 ‚ü®q.1, q.2.1‚ü©\n  refine ‚ü®V ‚äì O, ‚ü®mem_V, q.2‚ü©, homOfLE inf_le_right, num, r * den, fun y ‚Ü¶ ?_‚ü©\n  obtain ‚ü®h1, h2‚ü© := hV ‚ü®y, y.2.1‚ü©\n  refine ‚ü®y.1.asIdeal.primeCompl.mul_mem y.2.2.2 h1, ?_‚ü©\n  simp only [Opens.coe_inf, isLocallyFraction_pred, mkLinearMap_apply,\n    smul_eq_iff_of_mem (S := y.1.1.primeCompl) (hr := h1), mk_smul_mk, one_smul, mul_one] at h2 ‚ä¢\n  simpa only [h2, mk_smul_mk, one_smul, smul'_mk, mk_eq] using ‚ü®1, by simp only [one_smul]; rfl‚ü©\n\n"}
{"name":"ModuleCat.Tilde.germ_comp_stalkToFiberLinearMap","module":"Mathlib.AlgebraicGeometry.Modules.Tilde","initialProofState":"R : Type u\ninst‚úù : CommRing R\nM : ModuleCat R\nU : TopologicalSpace.Opens ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\nx : ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\nhx : Membership.mem U x\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (M.tildeInModuleCat.germ U x hx) (ModuleCat.Tilde.stalkToFiberLinearMap M x)) (ModuleCat.Tilde.openToLocalization M U x hx)","decl":"@[simp]\ntheorem germ_comp_stalkToFiberLinearMap (U : Opens (PrimeSpectrum.Top R)) (x) (hx : x ‚àà U) :\n    (tildeInModuleCat M).germ U x hx ‚â´ stalkToFiberLinearMap M x =\n    openToLocalization M U x hx :=\n  Limits.colimit.Œπ_desc _ _\n\n"}
{"name":"ModuleCat.Tilde.stalkToFiberLinearMap_germ","module":"Mathlib.AlgebraicGeometry.Modules.Tilde","initialProofState":"R : Type u\ninst‚úù : CommRing R\nM : ModuleCat R\nU : TopologicalSpace.Opens ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\nx : ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\nhx : Membership.mem U x\ns : ‚Üë(M.tildeInModuleCat.obj { unop := U })\n‚ä¢ Eq ((ModuleCat.Hom.hom (ModuleCat.Tilde.stalkToFiberLinearMap M x)) ((CategoryTheory.ConcreteCategory.hom (M.tildeInModuleCat.germ U x hx)) s)) (‚Üës ‚ü®x, hx‚ü©)","decl":"@[simp]\ntheorem stalkToFiberLinearMap_germ (U : Opens (PrimeSpectrum.Top R)) (x : PrimeSpectrum.Top R)\n    (hx : x ‚àà U) (s : (tildeInModuleCat M).1.obj (op U)) :\n    (stalkToFiberLinearMap M x).hom\n      (TopCat.Presheaf.germ (tildeInModuleCat M) U x hx s) = (s.1 ‚ü®x, hx‚ü© :) :=\n  DFunLike.ext_iff.1 (ModuleCat.hom_ext_iff.mp (germ_comp_stalkToFiberLinearMap M U x hx)) s\n\n"}
{"name":"ModuleCat.Tilde.toOpen_germ_apply","module":"Mathlib.AlgebraicGeometry.Modules.Tilde","initialProofState":"R : Type u\ninst‚úù : CommRing R\nM : ModuleCat R\nU : TopologicalSpace.Opens ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\nx‚úù : ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\nhx : Membership.mem U x‚úù\nx : CategoryTheory.ToType (ModuleCat.of R ‚ÜëM)\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom (M.tildeInModuleCat.germ U x‚úù hx)) ((CategoryTheory.ConcreteCategory.hom (ModuleCat.Tilde.toOpen M U)) x)) ((CategoryTheory.ConcreteCategory.hom (ModuleCat.Tilde.toStalk M x‚úù)) x)","decl":"@[reassoc (attr := simp), elementwise (attr := simp)]\ntheorem toOpen_germ (U : Opens (PrimeSpectrum.Top R)) (x) (hx : x ‚àà U) :\n    toOpen M U ‚â´ M.tildeInModuleCat.germ U x hx = toStalk M x := by\n  rw [‚Üê toOpen_res M ‚ä§ U (homOfLE le_top : U ‚ü∂ ‚ä§), Category.assoc, Presheaf.germ_res]; rfl\n\n"}
{"name":"ModuleCat.Tilde.toOpen_germ","module":"Mathlib.AlgebraicGeometry.Modules.Tilde","initialProofState":"R : Type u\ninst‚úù : CommRing R\nM : ModuleCat R\nU : TopologicalSpace.Opens ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\nx : ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\nhx : Membership.mem U x\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (ModuleCat.Tilde.toOpen M U) (M.tildeInModuleCat.germ U x hx)) (ModuleCat.Tilde.toStalk M x)","decl":"@[reassoc (attr := simp), elementwise (attr := simp)]\ntheorem toOpen_germ (U : Opens (PrimeSpectrum.Top R)) (x) (hx : x ‚àà U) :\n    toOpen M U ‚â´ M.tildeInModuleCat.germ U x hx = toStalk M x := by\n  rw [‚Üê toOpen_res M ‚ä§ U (homOfLE le_top : U ‚ü∂ ‚ä§), Category.assoc, Presheaf.germ_res]; rfl\n\n"}
{"name":"ModuleCat.Tilde.toOpen_germ_assoc","module":"Mathlib.AlgebraicGeometry.Modules.Tilde","initialProofState":"R : Type u\ninst‚úù : CommRing R\nM : ModuleCat R\nU : TopologicalSpace.Opens ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\nx : ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\nhx : Membership.mem U x\nZ : ModuleCat R\nh : Quiver.Hom (M.tildeInModuleCat.stalk x) Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (ModuleCat.Tilde.toOpen M U) (CategoryTheory.CategoryStruct.comp (M.tildeInModuleCat.germ U x hx) h)) (CategoryTheory.CategoryStruct.comp (ModuleCat.Tilde.toStalk M x) h)","decl":"@[reassoc (attr := simp), elementwise (attr := simp)]\ntheorem toOpen_germ (U : Opens (PrimeSpectrum.Top R)) (x) (hx : x ‚àà U) :\n    toOpen M U ‚â´ M.tildeInModuleCat.germ U x hx = toStalk M x := by\n  rw [‚Üê toOpen_res M ‚ä§ U (homOfLE le_top : U ‚ü∂ ‚ä§), Category.assoc, Presheaf.germ_res]; rfl\n\n"}
{"name":"ModuleCat.Tilde.toStalk_comp_stalkToFiberLinearMap","module":"Mathlib.AlgebraicGeometry.Modules.Tilde","initialProofState":"R : Type u\ninst‚úù : CommRing R\nM : ModuleCat R\nx : ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (ModuleCat.Tilde.toStalk M x) (ModuleCat.Tilde.stalkToFiberLinearMap M x)) (ModuleCat.ofHom (LocalizedModule.mkLinearMap x.asIdeal.primeCompl ‚ÜëM))","decl":"@[reassoc (attr := simp)]\ntheorem toStalk_comp_stalkToFiberLinearMap (x : PrimeSpectrum.Top R) :\n    toStalk M x ‚â´ stalkToFiberLinearMap M x =\n    ofHom (LocalizedModule.mkLinearMap x.asIdeal.primeCompl M) := by\n  rw [toStalk, Category.assoc, germ_comp_stalkToFiberLinearMap]; rfl\n\n"}
{"name":"ModuleCat.Tilde.toStalk_comp_stalkToFiberLinearMap_assoc","module":"Mathlib.AlgebraicGeometry.Modules.Tilde","initialProofState":"R : Type u\ninst‚úù : CommRing R\nM : ModuleCat R\nx : ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\nZ : ModuleCat R\nh : Quiver.Hom (ModuleCat.of R (LocalizedModule x.asIdeal.primeCompl ‚ÜëM)) Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (ModuleCat.Tilde.toStalk M x) (CategoryTheory.CategoryStruct.comp (ModuleCat.Tilde.stalkToFiberLinearMap M x) h)) (CategoryTheory.CategoryStruct.comp (ModuleCat.ofHom (LocalizedModule.mkLinearMap x.asIdeal.primeCompl ‚ÜëM)) h)","decl":"@[reassoc (attr := simp)]\ntheorem toStalk_comp_stalkToFiberLinearMap (x : PrimeSpectrum.Top R) :\n    toStalk M x ‚â´ stalkToFiberLinearMap M x =\n    ofHom (LocalizedModule.mkLinearMap x.asIdeal.primeCompl M) := by\n  rw [toStalk, Category.assoc, germ_comp_stalkToFiberLinearMap]; rfl\n\n"}
{"name":"ModuleCat.Tilde.stalkToFiberLinearMap_toStalk","module":"Mathlib.AlgebraicGeometry.Modules.Tilde","initialProofState":"R : Type u\ninst‚úù : CommRing R\nM : ModuleCat R\nx : ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\nm : ‚ÜëM\n‚ä¢ Eq ((ModuleCat.Hom.hom (ModuleCat.Tilde.stalkToFiberLinearMap M x)) ((CategoryTheory.ConcreteCategory.hom (ModuleCat.Tilde.toStalk M x)) m)) (LocalizedModule.mk m 1)","decl":"theorem stalkToFiberLinearMap_toStalk (x : PrimeSpectrum.Top R) (m : M) :\n    (stalkToFiberLinearMap M x).hom (toStalk M x m) =\n    LocalizedModule.mk m 1 :=\n  LinearMap.ext_iff.1 (ModuleCat.hom_ext_iff.mp (toStalk_comp_stalkToFiberLinearMap M x)) _\n\n"}
{"name":"ModuleCat.Tilde.const_apply","module":"Mathlib.AlgebraicGeometry.Modules.Tilde","initialProofState":"R : Type u\ninst‚úù : CommRing R\nM : ModuleCat R\nm : ‚ÜëM\nr : R\nU : TopologicalSpace.Opens ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\nhu : ‚àÄ (x : ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)), Membership.mem U x ‚Üí Membership.mem x.asIdeal.primeCompl r\nx : Subtype fun x => Membership.mem U x\n‚ä¢ Eq (‚Üë(ModuleCat.Tilde.const M m r U hu) x) (LocalizedModule.mk m ‚ü®r, ‚ãØ‚ü©)","decl":"@[simp]\ntheorem const_apply (m : M) (r : R) (U : Opens (PrimeSpectrum.Top R))\n    (hu : ‚àÄ x ‚àà U, r ‚àà (x : PrimeSpectrum.Top R).asIdeal.primeCompl) (x : U) :\n    (const M m r U hu).1 x = LocalizedModule.mk m ‚ü®r, hu x x.2‚ü© :=\n  rfl\n\n"}
{"name":"ModuleCat.Tilde.exists_const","module":"Mathlib.AlgebraicGeometry.Modules.Tilde","initialProofState":"R : Type u\ninst‚úù : CommRing R\nM : ModuleCat R\nU : TopologicalSpace.Opens ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\ns : ‚Üë(M.tildeInModuleCat.obj { unop := U })\nx : ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\nhx : Membership.mem U x\n‚ä¢ Exists fun V => Exists fun x => Exists fun i => Exists fun f => Exists fun g => Exists fun hg => Eq (ModuleCat.Tilde.const M f g V hg) ((CategoryTheory.ConcreteCategory.hom (M.tildeInModuleCat.map i.op)) s)","decl":"theorem exists_const (U) (s : (tildeInModuleCat M).obj (op U)) (x : PrimeSpectrum.Top R)\n    (hx : x ‚àà U) :\n    ‚àÉ (V : Opens (PrimeSpectrum.Top R)) (_ : x ‚àà V) (i : V ‚ü∂ U) (f : M) (g : R) (hg : _),\n      const M f g V hg = (tildeInModuleCat M).map i.op s :=\n  let ‚ü®V, hxV, iVU, f, g, hfg‚ü© := s.2 ‚ü®x, hx‚ü©\n  ‚ü®V, hxV, iVU, f, g, fun y hyV => (hfg ‚ü®y, hyV‚ü©).1, Subtype.eq <| funext fun y => by\n    obtain ‚ü®h1, (h2 : g ‚Ä¢ s.1 ‚ü®y, _‚ü© = LocalizedModule.mk f 1)‚ü© := hfg y\n    exact show LocalizedModule.mk f ‚ü®g, by exact h1‚ü© = s.1 (iVU y) by\n      set x := s.1 (iVU y); change g ‚Ä¢ x = _ at h2; clear_value x\n      induction x using LocalizedModule.induction_on with\n      | h a b =>\n        rw [LocalizedModule.smul'_mk, LocalizedModule.mk_eq] at h2\n        obtain ‚ü®c, hc‚ü© := h2\n        exact LocalizedModule.mk_eq.mpr ‚ü®c, by simpa using hc.symm‚ü©‚ü©\n\n"}
{"name":"ModuleCat.Tilde.res_const","module":"Mathlib.AlgebraicGeometry.Modules.Tilde","initialProofState":"R : Type u\ninst‚úù : CommRing R\nM : ModuleCat R\nf : ‚ÜëM\ng : R\nU : TopologicalSpace.Opens ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\nhu : ‚àÄ (x : ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)), Membership.mem U x ‚Üí Membership.mem x.asIdeal.primeCompl g\nV : TopologicalSpace.Opens ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\nhv : ‚àÄ (x : ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)), Membership.mem V x ‚Üí Membership.mem x.asIdeal.primeCompl g\ni : Quiver.Hom { unop := U } { unop := V }\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom (M.tildeInModuleCat.map i)) (ModuleCat.Tilde.const M f g U hu)) (ModuleCat.Tilde.const M f g V hv)","decl":"@[simp]\ntheorem res_const (f : M) (g : R) (U hu V hv i) :\n    (tildeInModuleCat M).map i (const M f g U hu) = const M f g V hv :=\n  rfl\n\n"}
{"name":"ModuleCat.Tilde.localizationToStalk_mk","module":"Mathlib.AlgebraicGeometry.Modules.Tilde","initialProofState":"R : Type u\ninst‚úù : CommRing R\nM : ModuleCat R\nx : ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\nf : ‚ÜëM\ns : Subtype fun x_1 => Membership.mem x.asIdeal.primeCompl x_1\n‚ä¢ Eq ((ModuleCat.Hom.hom (ModuleCat.Tilde.localizationToStalk M x)) (LocalizedModule.mk f s)) ((CategoryTheory.ConcreteCategory.hom (M.tildeInModuleCat.germ (PrimeSpectrum.basicOpen ‚Üës) x ‚ãØ)) (ModuleCat.Tilde.const M f (‚Üës) (PrimeSpectrum.basicOpen ‚Üës) ‚ãØ))","decl":"@[simp]\ntheorem localizationToStalk_mk (x : PrimeSpectrum.Top R) (f : M) (s : x.asIdeal.primeCompl) :\n    (localizationToStalk M x).hom (LocalizedModule.mk f s) =\n      (tildeInModuleCat M).germ (PrimeSpectrum.basicOpen (s : R)) x s.2\n        (const M f s (PrimeSpectrum.basicOpen s) fun _ => id) :=\n  (Module.End_isUnit_iff _ |>.1 (isUnit_toStalk M x s)).injective <| by\n  erw [‚Üê LinearMap.mul_apply]\n  simp only [IsUnit.mul_val_inv, LinearMap.one_apply, Module.algebraMap_end_apply]\n  show (M.tildeInModuleCat.germ ‚ä§ x ‚ü®‚ü©) ((toOpen M ‚ä§) f) = _\n  rw [‚Üê map_smul]\n  fapply TopCat.Presheaf.germ_ext (W := PrimeSpectrum.basicOpen s.1) (hxW := s.2)\n    (F := M.tildeInModuleCat)\n  ¬∑ exact homOfLE le_top\n  ¬∑ exact ùüô _\n  refine Subtype.eq <| funext fun y => show LocalizedModule.mk f 1 = _ from ?_\n  #adaptation_note /-- https://github.com/leanprover/lean4/pull/6024\n    added this refine hack to be able to add type hint in `change` -/\n  refine (?_ : @Eq ?ty _ _)\n  change LocalizedModule.mk f 1 = (s.1 ‚Ä¢ LocalizedModule.mk f _ : ?ty)\n  rw [LocalizedModule.smul'_mk, LocalizedModule.mk_eq]\n  exact ‚ü®1, by simp‚ü©\n\n"}
{"name":"ModuleCat.Tilde.stalkIso_inv","module":"Mathlib.AlgebraicGeometry.Modules.Tilde","initialProofState":"R : Type u\ninst‚úù : CommRing R\nM : ModuleCat R\nx : ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\n‚ä¢ Eq (ModuleCat.Tilde.stalkIso M x).inv (ModuleCat.Tilde.localizationToStalk M x)","decl":"/--\nThe isomorphism of `R`-modules from the stalk of `M^~` at `x` to the localization of `M` at the\nprime ideal corresponding to `x`.\n-/\n@[simps]\nnoncomputable def stalkIso (x : PrimeSpectrum.Top R) :\n    TopCat.Presheaf.stalk (tildeInModuleCat M) x ‚âÖ\n    ModuleCat.of R (LocalizedModule x.asIdeal.primeCompl M) where\n  hom := stalkToFiberLinearMap M x\n  inv := localizationToStalk M x\n  hom_inv_id := TopCat.Presheaf.stalk_hom_ext _ fun U hxU ‚Ü¶ ModuleCat.hom_ext <|\n      LinearMap.ext fun s ‚Ü¶ by\n    show localizationToStalk M x (stalkToFiberLinearMap M x (M.tildeInModuleCat.germ U x hxU s)) =\n      M.tildeInModuleCat.germ U x hxU s\n    rw [stalkToFiberLinearMap_germ]\n    obtain ‚ü®V, hxV, iVU, f, g, (hg : V ‚â§ PrimeSpectrum.basicOpen _), hs‚ü© :=\n      exists_const _ _ s x hxU\n    rw [‚Üê res_apply M U V iVU s ‚ü®x, hxV‚ü©, ‚Üê hs, const_apply, localizationToStalk_mk]\n    exact (tildeInModuleCat M).germ_ext V hxV (homOfLE hg) iVU <| hs ‚ñ∏ rfl\n  inv_hom_id := by ext x; exact x.induction_on (fun _ _ => by\n    simp only [hom_comp, LinearMap.coe_comp, Function.comp_apply, hom_id, LinearMap.id_coe, id_eq]\n    rw [localizationToStalk_mk, stalkToFiberLinearMap_germ]\n    simp)\n\n"}
{"name":"ModuleCat.Tilde.stalkIso_hom","module":"Mathlib.AlgebraicGeometry.Modules.Tilde","initialProofState":"R : Type u\ninst‚úù : CommRing R\nM : ModuleCat R\nx : ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\n‚ä¢ Eq (ModuleCat.Tilde.stalkIso M x).hom (ModuleCat.Tilde.stalkToFiberLinearMap M x)","decl":"/--\nThe isomorphism of `R`-modules from the stalk of `M^~` at `x` to the localization of `M` at the\nprime ideal corresponding to `x`.\n-/\n@[simps]\nnoncomputable def stalkIso (x : PrimeSpectrum.Top R) :\n    TopCat.Presheaf.stalk (tildeInModuleCat M) x ‚âÖ\n    ModuleCat.of R (LocalizedModule x.asIdeal.primeCompl M) where\n  hom := stalkToFiberLinearMap M x\n  inv := localizationToStalk M x\n  hom_inv_id := TopCat.Presheaf.stalk_hom_ext _ fun U hxU ‚Ü¶ ModuleCat.hom_ext <|\n      LinearMap.ext fun s ‚Ü¶ by\n    show localizationToStalk M x (stalkToFiberLinearMap M x (M.tildeInModuleCat.germ U x hxU s)) =\n      M.tildeInModuleCat.germ U x hxU s\n    rw [stalkToFiberLinearMap_germ]\n    obtain ‚ü®V, hxV, iVU, f, g, (hg : V ‚â§ PrimeSpectrum.basicOpen _), hs‚ü© :=\n      exists_const _ _ s x hxU\n    rw [‚Üê res_apply M U V iVU s ‚ü®x, hxV‚ü©, ‚Üê hs, const_apply, localizationToStalk_mk]\n    exact (tildeInModuleCat M).germ_ext V hxV (homOfLE hg) iVU <| hs ‚ñ∏ rfl\n  inv_hom_id := by ext x; exact x.induction_on (fun _ _ => by\n    simp only [hom_comp, LinearMap.coe_comp, Function.comp_apply, hom_id, LinearMap.id_coe, id_eq]\n    rw [localizationToStalk_mk, stalkToFiberLinearMap_germ]\n    simp)\n\n"}
{"name":"ModuleCat.Tilde.instIsLocalizedModulePrimeComplAsIdealCarrierOfStalkTildeInModuleCatHomToStalk","module":"Mathlib.AlgebraicGeometry.Modules.Tilde","initialProofState":"R : Type u\ninst‚úù : CommRing R\nM : ModuleCat R\nx : ‚Üë(AlgebraicGeometry.PrimeSpectrum.Top R)\n‚ä¢ IsLocalizedModule x.asIdeal.primeCompl (ModuleCat.Hom.hom (ModuleCat.Tilde.toStalk M x))","decl":"instance (x : PrimeSpectrum.Top R) :\n    IsLocalizedModule x.asIdeal.primeCompl (toStalk M x).hom := by\n  convert IsLocalizedModule.of_linearEquiv\n    (hf := localizedModuleIsLocalizedModule (M := M) x.asIdeal.primeCompl)\n    (e := (stalkIso M x).symm.toLinearEquiv)\n  ext\n  simp only [of_coe,\n    show (stalkIso M x).symm.toLinearEquiv.toLinearMap = (stalkIso M x).inv.hom by rfl]\n  erw [LocalizedModule.lift_comp]\n\n"}
