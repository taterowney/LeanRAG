{"name":"IsExtrFilter.hasLineDerivAt_eq_zero","module":"Mathlib.Analysis.Calculus.LocalExtr.LineDeriv","initialProofState":"E : Type u_1\ninst‚úù¬π : AddCommGroup E\ninst‚úù : Module Real E\nf : E ‚Üí Real\na b : E\nf' : Real\nl : Filter E\nh : IsExtrFilter f l a\nhd : HasLineDerivAt Real f f' a b\nh' : Filter.Tendsto (fun t => HAdd.hAdd a (HSMul.hSMul t b)) (nhds 0) l\n‚ä¢ Eq f' 0","decl":"theorem IsExtrFilter.hasLineDerivAt_eq_zero {l : Filter E} (h : IsExtrFilter f l a)\n    (hd : HasLineDerivAt ‚Ñù f f' a b) (h' : Tendsto (fun t : ‚Ñù ‚Ü¶ a + t ‚Ä¢ b) (ùìù 0) l) : f' = 0 :=\n  IsLocalExtr.hasDerivAt_eq_zero (IsExtrFilter.comp_tendsto (by simpa using h) h') hd\n\n"}
{"name":"IsExtrFilter.lineDeriv_eq_zero","module":"Mathlib.Analysis.Calculus.LocalExtr.LineDeriv","initialProofState":"E : Type u_1\ninst‚úù¬π : AddCommGroup E\ninst‚úù : Module Real E\nf : E ‚Üí Real\na b : E\nl : Filter E\nh : IsExtrFilter f l a\nh' : Filter.Tendsto (fun t => HAdd.hAdd a (HSMul.hSMul t b)) (nhds 0) l\n‚ä¢ Eq (lineDeriv Real f a b) 0","decl":"theorem IsExtrFilter.lineDeriv_eq_zero {l : Filter E} (h : IsExtrFilter f l a)\n    (h' : Tendsto (fun t : ‚Ñù ‚Ü¶ a + t ‚Ä¢ b) (ùìù 0) l) : lineDeriv ‚Ñù f a b = 0 := by\n  classical\n  exact if hd : LineDifferentiableAt ‚Ñù f a b then\n    h.hasLineDerivAt_eq_zero hd.hasLineDerivAt h'\n  else\n    lineDeriv_zero_of_not_lineDifferentiableAt hd\n\n"}
{"name":"IsExtrOn.hasLineDerivAt_eq_zero","module":"Mathlib.Analysis.Calculus.LocalExtr.LineDeriv","initialProofState":"E : Type u_1\ninst‚úù¬π : AddCommGroup E\ninst‚úù : Module Real E\nf : E ‚Üí Real\ns : Set E\na b : E\nf' : Real\nh : IsExtrOn f s a\nhd : HasLineDerivAt Real f f' a b\nh' : Filter.Eventually (fun t => Membership.mem s (HAdd.hAdd a (HSMul.hSMul t b))) (nhds 0)\n‚ä¢ Eq f' 0","decl":"theorem IsExtrOn.hasLineDerivAt_eq_zero (h : IsExtrOn f s a) (hd : HasLineDerivAt ‚Ñù f f' a b)\n    (h' : ‚àÄ·∂† t : ‚Ñù in ùìù 0, a + t ‚Ä¢ b ‚àà s) : f' = 0 :=\n  IsExtrFilter.hasLineDerivAt_eq_zero h hd <| tendsto_principal.2 h'\n\n"}
{"name":"IsExtrOn.lineDeriv_eq_zero","module":"Mathlib.Analysis.Calculus.LocalExtr.LineDeriv","initialProofState":"E : Type u_1\ninst‚úù¬π : AddCommGroup E\ninst‚úù : Module Real E\nf : E ‚Üí Real\ns : Set E\na b : E\nh : IsExtrOn f s a\nh' : Filter.Eventually (fun t => Membership.mem s (HAdd.hAdd a (HSMul.hSMul t b))) (nhds 0)\n‚ä¢ Eq (lineDeriv Real f a b) 0","decl":"theorem IsExtrOn.lineDeriv_eq_zero (h : IsExtrOn f s a) (h' : ‚àÄ·∂† t : ‚Ñù in ùìù 0, a + t ‚Ä¢ b ‚àà s) :\n    lineDeriv ‚Ñù f a b = 0 :=\n  IsExtrFilter.lineDeriv_eq_zero h <| tendsto_principal.2 h'\n\n"}
{"name":"IsMinOn.hasLineDerivAt_eq_zero","module":"Mathlib.Analysis.Calculus.LocalExtr.LineDeriv","initialProofState":"E : Type u_1\ninst‚úù¬π : AddCommGroup E\ninst‚úù : Module Real E\nf : E ‚Üí Real\ns : Set E\na b : E\nf' : Real\nh : IsMinOn f s a\nhd : HasLineDerivAt Real f f' a b\nh' : Filter.Eventually (fun t => Membership.mem s (HAdd.hAdd a (HSMul.hSMul t b))) (nhds 0)\n‚ä¢ Eq f' 0","decl":"theorem IsMinOn.hasLineDerivAt_eq_zero (h : IsMinOn f s a) (hd : HasLineDerivAt ‚Ñù f f' a b)\n    (h' : ‚àÄ·∂† t : ‚Ñù in ùìù 0, a + t ‚Ä¢ b ‚àà s) : f' = 0 :=\n  h.isExtr.hasLineDerivAt_eq_zero hd h'\n\n"}
{"name":"IsMinOn.lineDeriv_eq_zero","module":"Mathlib.Analysis.Calculus.LocalExtr.LineDeriv","initialProofState":"E : Type u_1\ninst‚úù¬π : AddCommGroup E\ninst‚úù : Module Real E\nf : E ‚Üí Real\ns : Set E\na b : E\nh : IsMinOn f s a\nh' : Filter.Eventually (fun t => Membership.mem s (HAdd.hAdd a (HSMul.hSMul t b))) (nhds 0)\n‚ä¢ Eq (lineDeriv Real f a b) 0","decl":"theorem IsMinOn.lineDeriv_eq_zero (h : IsMinOn f s a) (h' : ‚àÄ·∂† t : ‚Ñù in ùìù 0, a + t ‚Ä¢ b ‚àà s) :\n    lineDeriv ‚Ñù f a b = 0 :=\n  h.isExtr.lineDeriv_eq_zero h'\n\n"}
{"name":"IsMaxOn.hasLineDerivAt_eq_zero","module":"Mathlib.Analysis.Calculus.LocalExtr.LineDeriv","initialProofState":"E : Type u_1\ninst‚úù¬π : AddCommGroup E\ninst‚úù : Module Real E\nf : E ‚Üí Real\ns : Set E\na b : E\nf' : Real\nh : IsMaxOn f s a\nhd : HasLineDerivAt Real f f' a b\nh' : Filter.Eventually (fun t => Membership.mem s (HAdd.hAdd a (HSMul.hSMul t b))) (nhds 0)\n‚ä¢ Eq f' 0","decl":"theorem IsMaxOn.hasLineDerivAt_eq_zero (h : IsMaxOn f s a) (hd : HasLineDerivAt ‚Ñù f f' a b)\n    (h' : ‚àÄ·∂† t : ‚Ñù in ùìù 0, a + t ‚Ä¢ b ‚àà s) : f' = 0 :=\n  h.isExtr.hasLineDerivAt_eq_zero hd h'\n\n"}
{"name":"IsMaxOn.lineDeriv_eq_zero","module":"Mathlib.Analysis.Calculus.LocalExtr.LineDeriv","initialProofState":"E : Type u_1\ninst‚úù¬π : AddCommGroup E\ninst‚úù : Module Real E\nf : E ‚Üí Real\ns : Set E\na b : E\nh : IsMaxOn f s a\nh' : Filter.Eventually (fun t => Membership.mem s (HAdd.hAdd a (HSMul.hSMul t b))) (nhds 0)\n‚ä¢ Eq (lineDeriv Real f a b) 0","decl":"theorem IsMaxOn.lineDeriv_eq_zero (h : IsMaxOn f s a) (h' : ‚àÄ·∂† t : ‚Ñù in ùìù 0, a + t ‚Ä¢ b ‚àà s) :\n    lineDeriv ‚Ñù f a b = 0 :=\n  h.isExtr.lineDeriv_eq_zero h'\n\n"}
{"name":"IsExtrOn.hasLineDerivWithinAt_eq_zero","module":"Mathlib.Analysis.Calculus.LocalExtr.LineDeriv","initialProofState":"E : Type u_1\ninst‚úù¬π : AddCommGroup E\ninst‚úù : Module Real E\nf : E ‚Üí Real\ns : Set E\na b : E\nf' : Real\nh : IsExtrOn f s a\nhd : HasLineDerivWithinAt Real f f' s a b\nh' : Filter.Eventually (fun t => Membership.mem s (HAdd.hAdd a (HSMul.hSMul t b))) (nhds 0)\n‚ä¢ Eq f' 0","decl":"theorem IsExtrOn.hasLineDerivWithinAt_eq_zero (h : IsExtrOn f s a)\n    (hd : HasLineDerivWithinAt ‚Ñù f f' s a b) (h' : ‚àÄ·∂† t : ‚Ñù in ùìù 0, a + t ‚Ä¢ b ‚àà s) : f' = 0 :=\n  h.hasLineDerivAt_eq_zero (hd.hasLineDerivAt' h') h'\n\n"}
{"name":"IsExtrOn.lineDerivWithin_eq_zero","module":"Mathlib.Analysis.Calculus.LocalExtr.LineDeriv","initialProofState":"E : Type u_1\ninst‚úù¬π : AddCommGroup E\ninst‚úù : Module Real E\nf : E ‚Üí Real\ns : Set E\na b : E\nh : IsExtrOn f s a\nh' : Filter.Eventually (fun t => Membership.mem s (HAdd.hAdd a (HSMul.hSMul t b))) (nhds 0)\n‚ä¢ Eq (lineDerivWithin Real f s a b) 0","decl":"theorem IsExtrOn.lineDerivWithin_eq_zero (h : IsExtrOn f s a)\n    (h' : ‚àÄ·∂† t : ‚Ñù in ùìù 0, a + t ‚Ä¢ b ‚àà s) : lineDerivWithin ‚Ñù f s a b = 0 := by\n  classical\n  exact if hd : LineDifferentiableWithinAt ‚Ñù f s a b then\n    h.hasLineDerivWithinAt_eq_zero hd.hasLineDerivWithinAt h'\n  else\n    lineDerivWithin_zero_of_not_lineDifferentiableWithinAt hd\n\n"}
{"name":"IsMinOn.hasLineDerivWithinAt_eq_zero","module":"Mathlib.Analysis.Calculus.LocalExtr.LineDeriv","initialProofState":"E : Type u_1\ninst‚úù¬π : AddCommGroup E\ninst‚úù : Module Real E\nf : E ‚Üí Real\ns : Set E\na b : E\nf' : Real\nh : IsMinOn f s a\nhd : HasLineDerivWithinAt Real f f' s a b\nh' : Filter.Eventually (fun t => Membership.mem s (HAdd.hAdd a (HSMul.hSMul t b))) (nhds 0)\n‚ä¢ Eq f' 0","decl":"theorem IsMinOn.hasLineDerivWithinAt_eq_zero (h : IsMinOn f s a)\n    (hd : HasLineDerivWithinAt ‚Ñù f f' s a b) (h' : ‚àÄ·∂† t : ‚Ñù in ùìù 0, a + t ‚Ä¢ b ‚àà s) : f' = 0 :=\n  h.isExtr.hasLineDerivWithinAt_eq_zero hd h'\n\n"}
{"name":"IsMinOn.lineDerivWithin_eq_zero","module":"Mathlib.Analysis.Calculus.LocalExtr.LineDeriv","initialProofState":"E : Type u_1\ninst‚úù¬π : AddCommGroup E\ninst‚úù : Module Real E\nf : E ‚Üí Real\ns : Set E\na b : E\nh : IsMinOn f s a\nh' : Filter.Eventually (fun t => Membership.mem s (HAdd.hAdd a (HSMul.hSMul t b))) (nhds 0)\n‚ä¢ Eq (lineDerivWithin Real f s a b) 0","decl":"theorem IsMinOn.lineDerivWithin_eq_zero (h : IsMinOn f s a)\n    (h' : ‚àÄ·∂† t : ‚Ñù in ùìù 0, a + t ‚Ä¢ b ‚àà s) : lineDerivWithin ‚Ñù f s a b = 0 :=\n  h.isExtr.lineDerivWithin_eq_zero h'\n\n"}
{"name":"IsMaxOn.hasLineDerivWithinAt_eq_zero","module":"Mathlib.Analysis.Calculus.LocalExtr.LineDeriv","initialProofState":"E : Type u_1\ninst‚úù¬π : AddCommGroup E\ninst‚úù : Module Real E\nf : E ‚Üí Real\ns : Set E\na b : E\nf' : Real\nh : IsMaxOn f s a\nhd : HasLineDerivWithinAt Real f f' s a b\nh' : Filter.Eventually (fun t => Membership.mem s (HAdd.hAdd a (HSMul.hSMul t b))) (nhds 0)\n‚ä¢ Eq f' 0","decl":"theorem IsMaxOn.hasLineDerivWithinAt_eq_zero (h : IsMaxOn f s a)\n    (hd : HasLineDerivWithinAt ‚Ñù f f' s a b) (h' : ‚àÄ·∂† t : ‚Ñù in ùìù 0, a + t ‚Ä¢ b ‚àà s) : f' = 0 :=\n  h.isExtr.hasLineDerivWithinAt_eq_zero hd h'\n\n"}
{"name":"IsMaxOn.lineDerivWithin_eq_zero","module":"Mathlib.Analysis.Calculus.LocalExtr.LineDeriv","initialProofState":"E : Type u_1\ninst‚úù¬π : AddCommGroup E\ninst‚úù : Module Real E\nf : E ‚Üí Real\ns : Set E\na b : E\nh : IsMaxOn f s a\nh' : Filter.Eventually (fun t => Membership.mem s (HAdd.hAdd a (HSMul.hSMul t b))) (nhds 0)\n‚ä¢ Eq (lineDerivWithin Real f s a b) 0","decl":"theorem IsMaxOn.lineDerivWithin_eq_zero (h : IsMaxOn f s a)\n    (h' : ‚àÄ·∂† t : ‚Ñù in ùìù 0, a + t ‚Ä¢ b ‚àà s) : lineDerivWithin ‚Ñù f s a b = 0 :=\n  h.isExtr.lineDerivWithin_eq_zero h'\n"}
{"name":"IsLocalExtr.hasLineDerivAt_eq_zero","module":"Mathlib.Analysis.Calculus.LocalExtr.LineDeriv","initialProofState":"E : Type u_1\ninst‚úù‚Å¥ : AddCommGroup E\ninst‚úù¬≥ : Module Real E\ninst‚úù¬≤ : TopologicalSpace E\ninst‚úù¬π : ContinuousAdd E\ninst‚úù : ContinuousSMul Real E\nf : E ‚Üí Real\na b : E\nf' : Real\nh : IsLocalExtr f a\nhd : HasLineDerivAt Real f f' a b\n‚ä¢ Eq f' 0","decl":"theorem IsLocalExtr.hasLineDerivAt_eq_zero (h : IsLocalExtr f a) (hd : HasLineDerivAt ‚Ñù f f' a b) :\n    f' = 0 :=\n  IsExtrFilter.hasLineDerivAt_eq_zero h hd <| Continuous.tendsto' (by fun_prop) _ _ (by simp)\n\n"}
{"name":"IsLocalExtr.lineDeriv_eq_zero","module":"Mathlib.Analysis.Calculus.LocalExtr.LineDeriv","initialProofState":"E : Type u_1\ninst‚úù‚Å¥ : AddCommGroup E\ninst‚úù¬≥ : Module Real E\ninst‚úù¬≤ : TopologicalSpace E\ninst‚úù¬π : ContinuousAdd E\ninst‚úù : ContinuousSMul Real E\nf : E ‚Üí Real\na : E\nh : IsLocalExtr f a\n‚ä¢ Eq (lineDeriv Real f a) 0","decl":"theorem IsLocalExtr.lineDeriv_eq_zero (h : IsLocalExtr f a) : lineDeriv ‚Ñù f a = 0 :=\n  funext fun b ‚Ü¶ IsExtrFilter.lineDeriv_eq_zero h <| Continuous.tendsto' (by fun_prop) _ _ (by simp)\n\n"}
{"name":"IsLocalMin.hasLineDerivAt_eq_zero","module":"Mathlib.Analysis.Calculus.LocalExtr.LineDeriv","initialProofState":"E : Type u_1\ninst‚úù‚Å¥ : AddCommGroup E\ninst‚úù¬≥ : Module Real E\ninst‚úù¬≤ : TopologicalSpace E\ninst‚úù¬π : ContinuousAdd E\ninst‚úù : ContinuousSMul Real E\nf : E ‚Üí Real\na b : E\nf' : Real\nh : IsLocalMin f a\nhd : HasLineDerivAt Real f f' a b\n‚ä¢ Eq f' 0","decl":"theorem IsLocalMin.hasLineDerivAt_eq_zero (h : IsLocalMin f a) (hd : HasLineDerivAt ‚Ñù f f' a b) :\n    f' = 0 :=\n  IsLocalExtr.hasLineDerivAt_eq_zero (.inl h) hd\n\n"}
{"name":"IsLocalMin.lineDeriv_eq_zero","module":"Mathlib.Analysis.Calculus.LocalExtr.LineDeriv","initialProofState":"E : Type u_1\ninst‚úù‚Å¥ : AddCommGroup E\ninst‚úù¬≥ : Module Real E\ninst‚úù¬≤ : TopologicalSpace E\ninst‚úù¬π : ContinuousAdd E\ninst‚úù : ContinuousSMul Real E\nf : E ‚Üí Real\na : E\nh : IsLocalMin f a\n‚ä¢ Eq (lineDeriv Real f a) 0","decl":"theorem IsLocalMin.lineDeriv_eq_zero (h : IsLocalMin f a) : lineDeriv ‚Ñù f a = 0 :=\n  IsLocalExtr.lineDeriv_eq_zero (.inl h)\n\n"}
{"name":"IsLocalMax.hasLineDerivAt_eq_zero","module":"Mathlib.Analysis.Calculus.LocalExtr.LineDeriv","initialProofState":"E : Type u_1\ninst‚úù‚Å¥ : AddCommGroup E\ninst‚úù¬≥ : Module Real E\ninst‚úù¬≤ : TopologicalSpace E\ninst‚úù¬π : ContinuousAdd E\ninst‚úù : ContinuousSMul Real E\nf : E ‚Üí Real\na b : E\nf' : Real\nh : IsLocalMax f a\nhd : HasLineDerivAt Real f f' a b\n‚ä¢ Eq f' 0","decl":"theorem IsLocalMax.hasLineDerivAt_eq_zero (h : IsLocalMax f a) (hd : HasLineDerivAt ‚Ñù f f' a b) :\n    f' = 0 :=\n  IsLocalExtr.hasLineDerivAt_eq_zero (.inr h) hd\n\n"}
{"name":"IsLocalMax.lineDeriv_eq_zero","module":"Mathlib.Analysis.Calculus.LocalExtr.LineDeriv","initialProofState":"E : Type u_1\ninst‚úù‚Å¥ : AddCommGroup E\ninst‚úù¬≥ : Module Real E\ninst‚úù¬≤ : TopologicalSpace E\ninst‚úù¬π : ContinuousAdd E\ninst‚úù : ContinuousSMul Real E\nf : E ‚Üí Real\na : E\nh : IsLocalMax f a\n‚ä¢ Eq (lineDeriv Real f a) 0","decl":"theorem IsLocalMax.lineDeriv_eq_zero (h : IsLocalMax f a) : lineDeriv ‚Ñù f a = 0 :=\n  IsLocalExtr.lineDeriv_eq_zero (.inr h)\n"}
