{"name":"CategoryTheory.Preadditive.isSeparating_iff","module":"Mathlib.CategoryTheory.Generator.Preadditive","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.Preadditive C\nùí¢ : Set C\n‚ä¢ Iff (CategoryTheory.IsSeparating ùí¢) (‚àÄ ‚¶ÉX Y : C‚¶Ñ (f : Quiver.Hom X Y), (‚àÄ (G : C), Membership.mem ùí¢ G ‚Üí ‚àÄ (h : Quiver.Hom G X), Eq (CategoryTheory.CategoryStruct.comp h f) 0) ‚Üí Eq f 0)","decl":"theorem Preadditive.isSeparating_iff (ùí¢ : Set C) :\n    IsSeparating ùí¢ ‚Üî ‚àÄ ‚¶ÉX Y : C‚¶Ñ (f : X ‚ü∂ Y), (‚àÄ G ‚àà ùí¢, ‚àÄ (h : G ‚ü∂ X), h ‚â´ f = 0) ‚Üí f = 0 :=\n  ‚ü®fun hùí¢ X Y f hf => hùí¢ _ _ (by simpa only [Limits.comp_zero] using hf), fun hùí¢ X Y f g hfg =>\n    sub_eq_zero.1 <| hùí¢ _ (by simpa only [Preadditive.comp_sub, sub_eq_zero] using hfg)‚ü©\n\n"}
{"name":"CategoryTheory.Preadditive.isCoseparating_iff","module":"Mathlib.CategoryTheory.Generator.Preadditive","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.Preadditive C\nùí¢ : Set C\n‚ä¢ Iff (CategoryTheory.IsCoseparating ùí¢) (‚àÄ ‚¶ÉX Y : C‚¶Ñ (f : Quiver.Hom X Y), (‚àÄ (G : C), Membership.mem ùí¢ G ‚Üí ‚àÄ (h : Quiver.Hom Y G), Eq (CategoryTheory.CategoryStruct.comp f h) 0) ‚Üí Eq f 0)","decl":"theorem Preadditive.isCoseparating_iff (ùí¢ : Set C) :\n    IsCoseparating ùí¢ ‚Üî ‚àÄ ‚¶ÉX Y : C‚¶Ñ (f : X ‚ü∂ Y), (‚àÄ G ‚àà ùí¢, ‚àÄ (h : Y ‚ü∂ G), f ‚â´ h = 0) ‚Üí f = 0 :=\n  ‚ü®fun hùí¢ X Y f hf => hùí¢ _ _ (by simpa only [Limits.zero_comp] using hf), fun hùí¢ X Y f g hfg =>\n    sub_eq_zero.1 <| hùí¢ _ (by simpa only [Preadditive.sub_comp, sub_eq_zero] using hfg)‚ü©\n\n"}
{"name":"CategoryTheory.Preadditive.isSeparator_iff","module":"Mathlib.CategoryTheory.Generator.Preadditive","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.Preadditive C\nG : C\n‚ä¢ Iff (CategoryTheory.IsSeparator G) (‚àÄ ‚¶ÉX Y : C‚¶Ñ (f : Quiver.Hom X Y), (‚àÄ (h : Quiver.Hom G X), Eq (CategoryTheory.CategoryStruct.comp h f) 0) ‚Üí Eq f 0)","decl":"theorem Preadditive.isSeparator_iff (G : C) :\n    IsSeparator G ‚Üî ‚àÄ ‚¶ÉX Y : C‚¶Ñ (f : X ‚ü∂ Y), (‚àÄ h : G ‚ü∂ X, h ‚â´ f = 0) ‚Üí f = 0 :=\n  ‚ü®fun hG X Y f hf => hG.def _ _ (by simpa only [Limits.comp_zero] using hf), fun hG =>\n    (isSeparator_def _).2 fun X Y f g hfg =>\n      sub_eq_zero.1 <| hG _ (by simpa only [Preadditive.comp_sub, sub_eq_zero] using hfg)‚ü©\n\n"}
{"name":"CategoryTheory.Preadditive.isCoseparator_iff","module":"Mathlib.CategoryTheory.Generator.Preadditive","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.Preadditive C\nG : C\n‚ä¢ Iff (CategoryTheory.IsCoseparator G) (‚àÄ ‚¶ÉX Y : C‚¶Ñ (f : Quiver.Hom X Y), (‚àÄ (h : Quiver.Hom Y G), Eq (CategoryTheory.CategoryStruct.comp f h) 0) ‚Üí Eq f 0)","decl":"theorem Preadditive.isCoseparator_iff (G : C) :\n    IsCoseparator G ‚Üî ‚àÄ ‚¶ÉX Y : C‚¶Ñ (f : X ‚ü∂ Y), (‚àÄ h : Y ‚ü∂ G, f ‚â´ h = 0) ‚Üí f = 0 :=\n  ‚ü®fun hG X Y f hf => hG.def _ _ (by simpa only [Limits.zero_comp] using hf), fun hG =>\n    (isCoseparator_def _).2 fun X Y f g hfg =>\n      sub_eq_zero.1 <| hG _ (by simpa only [Preadditive.sub_comp, sub_eq_zero] using hfg)‚ü©\n\n"}
{"name":"CategoryTheory.isSeparator_iff_faithful_preadditiveCoyoneda","module":"Mathlib.CategoryTheory.Generator.Preadditive","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.Preadditive C\nG : C\n‚ä¢ Iff (CategoryTheory.IsSeparator G) (CategoryTheory.preadditiveCoyoneda.obj { unop := G }).Faithful","decl":"theorem isSeparator_iff_faithful_preadditiveCoyoneda (G : C) :\n    IsSeparator G ‚Üî (preadditiveCoyoneda.obj (op G)).Faithful := by\n  rw [isSeparator_iff_faithful_coyoneda_obj, ‚Üê whiskering_preadditiveCoyoneda, Functor.comp_obj,\n    whiskeringRight_obj_obj]\n  exact ‚ü®fun h => Functor.Faithful.of_comp _ (forget AddCommGrp),\n    fun h => Functor.Faithful.comp _ _‚ü©\n\n"}
{"name":"CategoryTheory.isSeparator_iff_faithful_preadditiveCoyonedaObj","module":"Mathlib.CategoryTheory.Generator.Preadditive","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.Preadditive C\nG : C\n‚ä¢ Iff (CategoryTheory.IsSeparator G) (CategoryTheory.preadditiveCoyonedaObj { unop := G }).Faithful","decl":"theorem isSeparator_iff_faithful_preadditiveCoyonedaObj (G : C) :\n    IsSeparator G ‚Üî (preadditiveCoyonedaObj (op G)).Faithful := by\n  rw [isSeparator_iff_faithful_preadditiveCoyoneda, preadditiveCoyoneda_obj]\n  exact ‚ü®fun h => Functor.Faithful.of_comp _ (forget‚ÇÇ _ AddCommGrp.{v}),\n    fun h => Functor.Faithful.comp _ _‚ü©\n\n"}
{"name":"CategoryTheory.isCoseparator_iff_faithful_preadditiveYoneda","module":"Mathlib.CategoryTheory.Generator.Preadditive","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.Preadditive C\nG : C\n‚ä¢ Iff (CategoryTheory.IsCoseparator G) (CategoryTheory.preadditiveYoneda.obj G).Faithful","decl":"theorem isCoseparator_iff_faithful_preadditiveYoneda (G : C) :\n    IsCoseparator G ‚Üî (preadditiveYoneda.obj G).Faithful := by\n  rw [isCoseparator_iff_faithful_yoneda_obj, ‚Üê whiskering_preadditiveYoneda, Functor.comp_obj,\n    whiskeringRight_obj_obj]\n  exact ‚ü®fun h => Functor.Faithful.of_comp _ (forget AddCommGrp),\n    fun h => Functor.Faithful.comp _ _‚ü©\n\n"}
{"name":"CategoryTheory.isCoseparator_iff_faithful_preadditiveYonedaObj","module":"Mathlib.CategoryTheory.Generator.Preadditive","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.Preadditive C\nG : C\n‚ä¢ Iff (CategoryTheory.IsCoseparator G) (CategoryTheory.preadditiveYonedaObj G).Faithful","decl":"theorem isCoseparator_iff_faithful_preadditiveYonedaObj (G : C) :\n    IsCoseparator G ‚Üî (preadditiveYonedaObj G).Faithful := by\n  rw [isCoseparator_iff_faithful_preadditiveYoneda, preadditiveYoneda_obj]\n  exact ‚ü®fun h => Functor.Faithful.of_comp _ (forget‚ÇÇ _ AddCommGrp.{v}),\n    fun h => Functor.Faithful.comp _ _‚ü©\n\n"}
