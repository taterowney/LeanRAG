{"name":"Rat.interior_compact_eq_empty","module":"Mathlib.Topology.Instances.RatLemmas","initialProofState":"s : Set Rat\nhs : IsCompact s\n‚ä¢ Eq (interior s) EmptyCollection.emptyCollection","decl":"theorem interior_compact_eq_empty (hs : IsCompact s) : interior s = ‚àÖ :=\n  isDenseEmbedding_coe_real.isDenseInducing.interior_compact_eq_empty dense_irrational hs\n\n"}
{"name":"Rat.dense_compl_compact","module":"Mathlib.Topology.Instances.RatLemmas","initialProofState":"s : Set Rat\nhs : IsCompact s\n‚ä¢ Dense (HasCompl.compl s)","decl":"theorem dense_compl_compact (hs : IsCompact s) : Dense s·∂ú :=\n  interior_eq_empty_iff_dense_compl.1 (interior_compact_eq_empty hs)\n\n"}
{"name":"Rat.cocompact_inf_nhds_neBot","module":"Mathlib.Topology.Instances.RatLemmas","initialProofState":"p : Rat\n‚ä¢ (Min.min (Filter.cocompact Rat) (nhds p)).NeBot","decl":"instance cocompact_inf_nhds_neBot : NeBot (cocompact ‚Ñö ‚äì ùìù p) := by\n  refine (hasBasis_cocompact.inf (nhds_basis_opens _)).neBot_iff.2 ?_\n  rintro ‚ü®s, o‚ü© ‚ü®hs, hpo, ho‚ü©; rw [inter_comm]\n  exact (dense_compl_compact hs).inter_open_nonempty _ ho ‚ü®p, hpo‚ü©\n\n"}
{"name":"Rat.not_countably_generated_cocompact","module":"Mathlib.Topology.Instances.RatLemmas","initialProofState":"‚ä¢ Not (Filter.cocompact Rat).IsCountablyGenerated","decl":"theorem not_countably_generated_cocompact : ¬¨IsCountablyGenerated (cocompact ‚Ñö) := by\n  intro H\n  rcases exists_seq_tendsto (cocompact ‚Ñö ‚äì ùìù 0) with ‚ü®x, hx‚ü©\n  rw [tendsto_inf] at hx; rcases hx with ‚ü®hxc, hx0‚ü©\n  obtain ‚ü®n, hn‚ü© : ‚àÉ n : ‚Ñï, x n ‚àâ insert (0 : ‚Ñö) (range x) :=\n    (hxc.eventually hx0.isCompact_insert_range.compl_mem_cocompact).exists\n  exact hn (Or.inr ‚ü®n, rfl‚ü©)\n\n"}
{"name":"Rat.not_countably_generated_nhds_infty_opc","module":"Mathlib.Topology.Instances.RatLemmas","initialProofState":"‚ä¢ Not (nhds OnePoint.infty).IsCountablyGenerated","decl":"theorem not_countably_generated_nhds_infty_opc : ¬¨IsCountablyGenerated (ùìù (‚àû : ‚Ñö‚àû)) := by\n  intro\n  have : IsCountablyGenerated (comap (OnePoint.some : ‚Ñö ‚Üí ‚Ñö‚àû) (ùìù ‚àû)) := by infer_instance\n  rw [OnePoint.comap_coe_nhds_infty, coclosedCompact_eq_cocompact] at this\n  exact not_countably_generated_cocompact this\n\n"}
{"name":"Rat.not_firstCountableTopology_opc","module":"Mathlib.Topology.Instances.RatLemmas","initialProofState":"‚ä¢ Not (FirstCountableTopology (OnePoint Rat))","decl":"theorem not_firstCountableTopology_opc : ¬¨FirstCountableTopology ‚Ñö‚àû := by\n  intro\n  exact not_countably_generated_nhds_infty_opc inferInstance\n\n"}
{"name":"Rat.not_secondCountableTopology_opc","module":"Mathlib.Topology.Instances.RatLemmas","initialProofState":"‚ä¢ Not (SecondCountableTopology (OnePoint Rat))","decl":"theorem not_secondCountableTopology_opc : ¬¨SecondCountableTopology ‚Ñö‚àû := by\n  intro\n  exact not_firstCountableTopology_opc inferInstance\n\n"}
{"name":"Rat.instTotallyDisconnectedSpace","module":"Mathlib.Topology.Instances.RatLemmas","initialProofState":"‚ä¢ TotallyDisconnectedSpace Rat","decl":"instance : TotallyDisconnectedSpace ‚Ñö := by\n  clear p s\n  refine ‚ü®fun s hsu hs x hx y hy => ?_‚ü©; clear hsu\n  by_contra! H : x ‚â† y\n  wlog hlt : x < y\n  ¬∑ apply this s hs y hy x hx H.symm <| H.lt_or_lt.resolve_left hlt\n  rcases exists_irrational_btwn (Rat.cast_lt.2 hlt) with ‚ü®z, hz, hxz, hzy‚ü©\n  have := hs.image _ continuous_coe_real.continuousOn\n  rw [isPreconnected_iff_ordConnected] at this\n  have : z ‚àà Rat.cast '' s :=\n    this.out (mem_image_of_mem _ hx) (mem_image_of_mem _ hy) ‚ü®hxz.le, hzy.le‚ü©\n  exact hz (image_subset_range _ _ this)\n\n"}
