{"name":"Set.restrictPreimage_isInducing","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set β\nh : Topology.IsInducing f\n⊢ Topology.IsInducing (s.restrictPreimage f)","decl":"theorem Set.restrictPreimage_isInducing (s : Set β) (h : IsInducing f) :\n    IsInducing (s.restrictPreimage f) := by\n  simp_rw [← IsInducing.subtypeVal.of_comp_iff, isInducing_iff_nhds, restrictPreimage,\n    MapsTo.coe_restrict, restrict_eq, ← @Filter.comap_comap _ _ _ _ _ f, Function.comp_apply] at h ⊢\n  intro a\n  rw [← h, ← IsInducing.subtypeVal.nhds_eq_comap]\n\n"}
{"name":"Set.restrictPreimage_inducing","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set β\nh : Topology.IsInducing f\n⊢ Topology.IsInducing (s.restrictPreimage f)","decl":"@[deprecated (since := \"2024-10-28\")]\nalias Set.restrictPreimage_inducing := Set.restrictPreimage_isInducing\n\n"}
{"name":"Topology.IsInducing.restrictPreimage","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set β\nh : Topology.IsInducing f\n⊢ Topology.IsInducing (s.restrictPreimage f)","decl":"alias Topology.IsInducing.restrictPreimage := Set.restrictPreimage_isInducing\n\n"}
{"name":"Inducing.restrictPreimage","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set β\nh : Topology.IsInducing f\n⊢ Topology.IsInducing (s.restrictPreimage f)","decl":"@[deprecated (since := \"2024-10-28\")] alias Inducing.restrictPreimage := IsInducing.restrictPreimage\n\n"}
{"name":"Set.restrictPreimage_isEmbedding","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set β\nh : Topology.IsEmbedding f\n⊢ Topology.IsEmbedding (s.restrictPreimage f)","decl":"theorem Set.restrictPreimage_isEmbedding (s : Set β) (h : IsEmbedding f) :\n    IsEmbedding (s.restrictPreimage f) :=\n  ⟨h.1.restrictPreimage s, h.2.restrictPreimage s⟩\n\n"}
{"name":"Set.restrictPreimage_embedding","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set β\nh : Topology.IsEmbedding f\n⊢ Topology.IsEmbedding (s.restrictPreimage f)","decl":"@[deprecated (since := \"2024-10-26\")]\nalias Set.restrictPreimage_embedding := Set.restrictPreimage_isEmbedding\n\n"}
{"name":"Topology.IsEmbedding.restrictPreimage","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set β\nh : Topology.IsEmbedding f\n⊢ Topology.IsEmbedding (s.restrictPreimage f)","decl":"alias Topology.IsEmbedding.restrictPreimage := Set.restrictPreimage_isEmbedding\n\n"}
{"name":"Embedding.restrictPreimage","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set β\nh : Topology.IsEmbedding f\n⊢ Topology.IsEmbedding (s.restrictPreimage f)","decl":"@[deprecated (since := \"2024-10-26\")]\nalias Embedding.restrictPreimage := IsEmbedding.restrictPreimage\n\n"}
{"name":"Set.restrictPreimage_isOpenEmbedding","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set β\nh : Topology.IsOpenEmbedding f\n⊢ Topology.IsOpenEmbedding (s.restrictPreimage f)","decl":"theorem Set.restrictPreimage_isOpenEmbedding (s : Set β) (h : IsOpenEmbedding f) :\n    IsOpenEmbedding (s.restrictPreimage f) :=\n  ⟨h.1.restrictPreimage s,\n    (s.range_restrictPreimage f).symm ▸ continuous_subtype_val.isOpen_preimage _ h.isOpen_range⟩\n\n"}
{"name":"Set.restrictPreimage_openEmbedding","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set β\nh : Topology.IsOpenEmbedding f\n⊢ Topology.IsOpenEmbedding (s.restrictPreimage f)","decl":"@[deprecated (since := \"2024-10-18\")]\nalias Set.restrictPreimage_openEmbedding := Set.restrictPreimage_isOpenEmbedding\n\n"}
{"name":"Topology.IsOpenEmbedding.restrictPreimage","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set β\nh : Topology.IsOpenEmbedding f\n⊢ Topology.IsOpenEmbedding (s.restrictPreimage f)","decl":"alias Topology.IsOpenEmbedding.restrictPreimage := Set.restrictPreimage_isOpenEmbedding\n\n"}
{"name":"OpenEmbedding.restrictPreimage","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set β\nh : Topology.IsOpenEmbedding f\n⊢ Topology.IsOpenEmbedding (s.restrictPreimage f)","decl":"@[deprecated (since := \"2024-10-18\")]\nalias OpenEmbedding.restrictPreimage := IsOpenEmbedding.restrictPreimage\n\n"}
{"name":"Set.restrictPreimage_isClosedEmbedding","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set β\nh : Topology.IsClosedEmbedding f\n⊢ Topology.IsClosedEmbedding (s.restrictPreimage f)","decl":"theorem Set.restrictPreimage_isClosedEmbedding (s : Set β) (h : IsClosedEmbedding f) :\n    IsClosedEmbedding (s.restrictPreimage f) :=\n  ⟨h.1.restrictPreimage s,\n    (s.range_restrictPreimage f).symm ▸ IsInducing.subtypeVal.isClosed_preimage _ h.isClosed_range⟩\n\n"}
{"name":"Set.restrictPreimage_closedEmbedding","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set β\nh : Topology.IsClosedEmbedding f\n⊢ Topology.IsClosedEmbedding (s.restrictPreimage f)","decl":"@[deprecated (since := \"2024-10-20\")]\nalias Set.restrictPreimage_closedEmbedding := Set.restrictPreimage_isClosedEmbedding\n\n"}
{"name":"Topology.IsClosedEmbedding.restrictPreimage","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set β\nh : Topology.IsClosedEmbedding f\n⊢ Topology.IsClosedEmbedding (s.restrictPreimage f)","decl":"alias Topology.IsClosedEmbedding.restrictPreimage := Set.restrictPreimage_isClosedEmbedding\n\n"}
{"name":"ClosedEmbedding.restrictPreimage","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\ns : Set β\nh : Topology.IsClosedEmbedding f\n⊢ Topology.IsClosedEmbedding (s.restrictPreimage f)","decl":"@[deprecated (since := \"2024-10-20\")]\nalias ClosedEmbedding.restrictPreimage := IsClosedEmbedding.restrictPreimage\n\n"}
{"name":"IsClosedMap.restrictPreimage","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\nH : IsClosedMap f\ns : Set β\n⊢ IsClosedMap (s.restrictPreimage f)","decl":"theorem IsClosedMap.restrictPreimage (H : IsClosedMap f) (s : Set β) :\n    IsClosedMap (s.restrictPreimage f) := by\n  intro t\n  suffices ∀ u, IsClosed u → Subtype.val ⁻¹' u = t →\n    ∃ v, IsClosed v ∧ Subtype.val ⁻¹' v = s.restrictPreimage f '' t by\n      simpa [isClosed_induced_iff]\n  exact fun u hu e => ⟨f '' u, H u hu, by simp [← e, image_restrictPreimage]⟩\n\n"}
{"name":"IsOpenMap.restrictPreimage","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\nH : IsOpenMap f\ns : Set β\n⊢ IsOpenMap (s.restrictPreimage f)","decl":"theorem IsOpenMap.restrictPreimage (H : IsOpenMap f) (s : Set β) :\n    IsOpenMap (s.restrictPreimage f) := by\n  intro t\n  suffices ∀ u, IsOpen u → Subtype.val ⁻¹' u = t →\n    ∃ v, IsOpen v ∧ Subtype.val ⁻¹' v = s.restrictPreimage f '' t by\n      simpa [isOpen_induced_iff]\n  exact fun u hu e => ⟨f '' u, H u hu, by simp [← e, image_restrictPreimage]⟩\n\n"}
{"name":"isOpen_iff_inter_of_iSup_eq_top","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"β : Type u_2\ninst✝ : TopologicalSpace β\nι : Type u_3\nU : ι → TopologicalSpace.Opens β\nhU : Eq (iSup U) Top.top\ns : Set β\n⊢ Iff (IsOpen s) (∀ (i : ι), IsOpen (Inter.inter s ↑(U i)))","decl":"theorem isOpen_iff_inter_of_iSup_eq_top (s : Set β) : IsOpen s ↔ ∀ i, IsOpen (s ∩ U i) := by\n  constructor\n  · exact fun H i => H.inter (U i).2\n  · intro H\n    have : ⋃ i, (U i : Set β) = Set.univ := by\n      convert congr_arg (SetLike.coe) hU\n      simp\n    rw [← s.inter_univ, ← this, Set.inter_iUnion]\n    exact isOpen_iUnion H\n\n"}
{"name":"isOpen_iff_coe_preimage_of_iSup_eq_top","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"β : Type u_2\ninst✝ : TopologicalSpace β\nι : Type u_3\nU : ι → TopologicalSpace.Opens β\nhU : Eq (iSup U) Top.top\ns : Set β\n⊢ Iff (IsOpen s) (∀ (i : ι), IsOpen (Set.preimage Subtype.val s))","decl":"theorem isOpen_iff_coe_preimage_of_iSup_eq_top (s : Set β) :\n    IsOpen s ↔ ∀ i, IsOpen ((↑) ⁻¹' s : Set (U i)) := by\n  simp [isOpen_iff_inter_of_iSup_eq_top hU s,\n    (U _).2.isOpenEmbedding_subtypeVal.isOpen_iff_image_isOpen,\n    Set.image_preimage_eq_inter_range]\n\n"}
{"name":"isClosed_iff_coe_preimage_of_iSup_eq_top","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"β : Type u_2\ninst✝ : TopologicalSpace β\nι : Type u_3\nU : ι → TopologicalSpace.Opens β\nhU : Eq (iSup U) Top.top\ns : Set β\n⊢ Iff (IsClosed s) (∀ (i : ι), IsClosed (Set.preimage Subtype.val s))","decl":"theorem isClosed_iff_coe_preimage_of_iSup_eq_top (s : Set β) :\n    IsClosed s ↔ ∀ i, IsClosed ((↑) ⁻¹' s : Set (U i)) := by\n  simpa using isOpen_iff_coe_preimage_of_iSup_eq_top hU sᶜ\n\n"}
{"name":"isLocallyClosed_iff_coe_preimage_of_iSup_eq_top","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"β : Type u_2\ninst✝ : TopologicalSpace β\nι : Type u_3\nU : ι → TopologicalSpace.Opens β\nhU : Eq (iSup U) Top.top\ns : Set β\n⊢ Iff (IsLocallyClosed s) (∀ (i : ι), IsLocallyClosed (Set.preimage Subtype.val s))","decl":"theorem isLocallyClosed_iff_coe_preimage_of_iSup_eq_top (s : Set β) :\n    IsLocallyClosed s ↔ ∀ i, IsLocallyClosed ((↑) ⁻¹' s : Set (U i)) := by\n  simp_rw [isLocallyClosed_iff_isOpen_coborder]\n  rw [isOpen_iff_coe_preimage_of_iSup_eq_top hU]\n  exact forall_congr' fun i ↦ by\n    have : coborder ((↑) ⁻¹' s : Set (U i)) = Subtype.val ⁻¹' coborder s := by\n      exact (U i).isOpen.isOpenEmbedding_subtypeVal.coborder_preimage _\n    rw [this]\n\n"}
{"name":"isOpenMap_iff_isOpenMap_of_iSup_eq_top","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\nι : Type u_3\nU : ι → TopologicalSpace.Opens β\nhU : Eq (iSup U) Top.top\n⊢ Iff (IsOpenMap f) (∀ (i : ι), IsOpenMap ((U i).carrier.restrictPreimage f))","decl":"theorem isOpenMap_iff_isOpenMap_of_iSup_eq_top :\n    IsOpenMap f ↔ ∀ i, IsOpenMap ((U i).1.restrictPreimage f) := by\n  refine ⟨fun h i => h.restrictPreimage _, ?_⟩\n  rintro H s hs\n  rw [isOpen_iff_coe_preimage_of_iSup_eq_top hU]\n  intro i\n  convert H i _ (hs.preimage continuous_subtype_val)\n  ext ⟨x, hx⟩\n  suffices (∃ y, y ∈ s ∧ f y = x) ↔ ∃ y, y ∈ s ∧ f y ∈ U i ∧ f y = x by\n    simpa [Set.restrictPreimage, ← Subtype.coe_inj]\n  exact ⟨fun ⟨a, b, c⟩ => ⟨a, b, c.symm ▸ hx, c⟩, fun ⟨a, b, _, c⟩ => ⟨a, b, c⟩⟩\n\n"}
{"name":"isClosedMap_iff_isClosedMap_of_iSup_eq_top","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\nι : Type u_3\nU : ι → TopologicalSpace.Opens β\nhU : Eq (iSup U) Top.top\n⊢ Iff (IsClosedMap f) (∀ (i : ι), IsClosedMap ((U i).carrier.restrictPreimage f))","decl":"theorem isClosedMap_iff_isClosedMap_of_iSup_eq_top :\n    IsClosedMap f ↔ ∀ i, IsClosedMap ((U i).1.restrictPreimage f) := by\n  refine ⟨fun h i => h.restrictPreimage _, ?_⟩\n  rintro H s hs\n  rw [isClosed_iff_coe_preimage_of_iSup_eq_top hU]\n  intro i\n  convert H i _ ⟨⟨_, hs.1, eq_compl_comm.mpr rfl⟩⟩\n  ext ⟨x, hx⟩\n  suffices (∃ y, y ∈ s ∧ f y = x) ↔ ∃ y, y ∈ s ∧ f y ∈ U i ∧ f y = x by\n    simpa [Set.restrictPreimage, ← Subtype.coe_inj]\n  exact ⟨fun ⟨a, b, c⟩ => ⟨a, b, c.symm ▸ hx, c⟩, fun ⟨a, b, _, c⟩ => ⟨a, b, c⟩⟩\n\n"}
{"name":"inducing_iff_inducing_of_iSup_eq_top","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\nι : Type u_3\nU : ι → TopologicalSpace.Opens β\nhU : Eq (iSup U) Top.top\nh : Continuous f\n⊢ Iff (Topology.IsInducing f) (∀ (i : ι), Topology.IsInducing ((U i).carrier.restrictPreimage f))","decl":"theorem inducing_iff_inducing_of_iSup_eq_top (h : Continuous f) :\n    IsInducing f ↔ ∀ i, IsInducing ((U i).1.restrictPreimage f) := by\n  simp_rw [← IsInducing.subtypeVal.of_comp_iff, isInducing_iff_nhds, restrictPreimage,\n    MapsTo.coe_restrict, restrict_eq, ← @Filter.comap_comap _ _ _ _ _ f]\n  constructor\n  · intro H i x\n    rw [Function.comp_apply, ← H, ← IsInducing.subtypeVal.nhds_eq_comap]\n  · intro H x\n    obtain ⟨i, hi⟩ :=\n      Opens.mem_iSup.mp\n        (show f x ∈ iSup U by\n          rw [hU]\n          trivial)\n    rw [← IsOpenEmbedding.map_nhds_eq (h.1 _ (U i).2).isOpenEmbedding_subtypeVal ⟨x, hi⟩,\n      (H i) ⟨x, hi⟩, Filter.subtype_coe_map_comap, Function.comp_apply, Subtype.coe_mk,\n      inf_eq_left, Filter.le_principal_iff]\n    exact Filter.preimage_mem_comap ((U i).2.mem_nhds hi)\n\n"}
{"name":"isEmbedding_iff_of_iSup_eq_top","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\nι : Type u_3\nU : ι → TopologicalSpace.Opens β\nhU : Eq (iSup U) Top.top\nh : Continuous f\n⊢ Iff (Topology.IsEmbedding f) (∀ (i : ι), Topology.IsEmbedding ((U i).carrier.restrictPreimage f))","decl":"theorem isEmbedding_iff_of_iSup_eq_top (h : Continuous f) :\n    IsEmbedding f ↔ ∀ i, IsEmbedding ((U i).1.restrictPreimage f) := by\n  simp_rw [isEmbedding_iff]\n  rw [forall_and]\n  apply and_congr\n  · apply inducing_iff_inducing_of_iSup_eq_top <;> assumption\n  · apply Set.injective_iff_injective_of_iUnion_eq_univ\n    convert congr_arg SetLike.coe hU\n    simp\n\n"}
{"name":"isEmbedding_of_iSup_eq_top_of_preimage_subset_range","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"X : Type u_6\nY : Type u_7\ninst✝² : TopologicalSpace X\ninst✝¹ : TopologicalSpace Y\nf : X → Y\nh : Continuous f\nι : Type u_4\nU : ι → TopologicalSpace.Opens Y\nhU : HasSubset.Subset (Set.range f) ↑(iSup U)\nV : ι → Type u_5\ninst✝ : (i : ι) → TopologicalSpace (V i)\niV : (i : ι) → V i → X\nhiV : ∀ (i : ι), Continuous (iV i)\nhV : ∀ (i : ι), HasSubset.Subset (Set.preimage f ↑(U i)) (Set.range (iV i))\nhV' : ∀ (i : ι), Topology.IsEmbedding (Function.comp f (iV i))\n⊢ Topology.IsEmbedding f","decl":"omit hU in\n/--\nGiven a continuous map `f : X → Y` between topological spaces.\nSuppose we have an open cover `V i` of the range of `f`, and an open cover `U i` of `X` that is\ncoarser than the pullback of `V` under `f`.\nTo check that `f` is an embedding it suffices to check that `U i → Y` is an embedding for all `i`.\n-/\ntheorem isEmbedding_of_iSup_eq_top_of_preimage_subset_range\n    {X Y} [TopologicalSpace X] [TopologicalSpace Y]\n    (f : X → Y) (h : Continuous f) {ι : Type*}\n    (U : ι → Opens Y) (hU : Set.range f ⊆ (iSup U :))\n    (V : ι → Type*) [∀ i, TopologicalSpace (V i)]\n    (iV : ∀ i, V i → X) (hiV : ∀ i, Continuous (iV i)) (hV : ∀ i, f ⁻¹' U i ⊆ Set.range (iV i))\n    (hV' : ∀ i, IsEmbedding (f ∘ iV i)) : IsEmbedding f := by\n  wlog hU' : iSup U = ⊤\n  · let f₀ : X → Set.range f := fun x ↦ ⟨f x, ⟨x, rfl⟩⟩\n    suffices IsEmbedding f₀ from IsEmbedding.subtypeVal.comp this\n    have hU'' : (⨆ i, (U i).comap ⟨Subtype.val, continuous_subtype_val⟩ :\n        Opens (Set.range f)) = ⊤ := by\n      rw [← top_le_iff]\n      simpa [Set.range_subset_iff, SetLike.le_def] using hU\n    refine this _ ?_ _ ?_ V iV hiV ?_ ?_ hU''\n    · fun_prop\n    · rw [hU'']; simp\n    · exact hV\n    · exact fun i ↦ IsEmbedding.of_comp (by fun_prop) continuous_subtype_val (hV' i)\n  rw [isEmbedding_iff_of_iSup_eq_top hU' h]\n  intro i\n  let f' := (Subtype.val ∘ (f ⁻¹' U i).restrictPreimage (iV i))\n  have : IsEmbedding f' :=\n    IsEmbedding.subtypeVal.comp ((IsEmbedding.of_comp (hiV i) h (hV' _)).restrictPreimage _)\n  have hf' : Set.range f' = f ⁻¹' U i := by\n    simpa [f', Set.range_comp, Set.range_restrictPreimage] using hV i\n  let e := (Homeomorph.ofIsEmbedding _ this).trans (Homeomorph.setCongr hf')\n  refine IsEmbedding.of_comp (by fun_prop) continuous_subtype_val ?_\n  convert ((hV' i).comp IsEmbedding.subtypeVal).comp e.symm.isEmbedding\n  ext x\n  obtain ⟨x, rfl⟩ := e.surjective x\n  simp\n  rfl\n\n"}
{"name":"embedding_iff_embedding_of_iSup_eq_top","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\nι : Type u_3\nU : ι → TopologicalSpace.Opens β\nhU : Eq (iSup U) Top.top\nh : Continuous f\n⊢ Iff (Topology.IsEmbedding f) (∀ (i : ι), Topology.IsEmbedding ((U i).carrier.restrictPreimage f))","decl":"@[deprecated (since := \"2024-10-26\")]\nalias embedding_iff_embedding_of_iSup_eq_top := isEmbedding_iff_of_iSup_eq_top\n\n"}
{"name":"isOpenEmbedding_iff_isOpenEmbedding_of_iSup_eq_top","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\nι : Type u_3\nU : ι → TopologicalSpace.Opens β\nhU : Eq (iSup U) Top.top\nh : Continuous f\n⊢ Iff (Topology.IsOpenEmbedding f) (∀ (i : ι), Topology.IsOpenEmbedding ((U i).carrier.restrictPreimage f))","decl":"theorem isOpenEmbedding_iff_isOpenEmbedding_of_iSup_eq_top (h : Continuous f) :\n    IsOpenEmbedding f ↔ ∀ i, IsOpenEmbedding ((U i).1.restrictPreimage f) := by\n  simp_rw [isOpenEmbedding_iff]\n  rw [forall_and]\n  apply and_congr\n  · apply isEmbedding_iff_of_iSup_eq_top <;> assumption\n  · simp_rw [Set.range_restrictPreimage]\n    apply isOpen_iff_coe_preimage_of_iSup_eq_top hU\n\n"}
{"name":"openEmbedding_iff_openEmbedding_of_iSup_eq_top","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\nι : Type u_3\nU : ι → TopologicalSpace.Opens β\nhU : Eq (iSup U) Top.top\nh : Continuous f\n⊢ Iff (Topology.IsOpenEmbedding f) (∀ (i : ι), Topology.IsOpenEmbedding ((U i).carrier.restrictPreimage f))","decl":"@[deprecated (since := \"2024-10-18\")]\nalias openEmbedding_iff_openEmbedding_of_iSup_eq_top :=\n  isOpenEmbedding_iff_isOpenEmbedding_of_iSup_eq_top\n\n"}
{"name":"isClosedEmbedding_iff_isClosedEmbedding_of_iSup_eq_top","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\nι : Type u_3\nU : ι → TopologicalSpace.Opens β\nhU : Eq (iSup U) Top.top\nh : Continuous f\n⊢ Iff (Topology.IsClosedEmbedding f) (∀ (i : ι), Topology.IsClosedEmbedding ((U i).carrier.restrictPreimage f))","decl":"theorem isClosedEmbedding_iff_isClosedEmbedding_of_iSup_eq_top (h : Continuous f) :\n    IsClosedEmbedding f ↔ ∀ i, IsClosedEmbedding ((U i).1.restrictPreimage f) := by\n  simp_rw [isClosedEmbedding_iff]\n  rw [forall_and]\n  apply and_congr\n  · apply isEmbedding_iff_of_iSup_eq_top <;> assumption\n  · simp_rw [Set.range_restrictPreimage]\n    apply isClosed_iff_coe_preimage_of_iSup_eq_top hU\n\n"}
{"name":"denseRange_iff_denseRange_of_iSup_eq_top","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : TopologicalSpace β\nf : α → β\nι : Type u_3\nU : ι → TopologicalSpace.Opens β\nhU : Eq (iSup U) Top.top\n⊢ Iff (DenseRange f) (∀ (i : ι), DenseRange ((U i).carrier.restrictPreimage f))","decl":"omit [TopologicalSpace α] in\ntheorem denseRange_iff_denseRange_of_iSup_eq_top :\n    DenseRange f ↔ ∀ i, DenseRange ((U i).1.restrictPreimage f) := by\n  simp_rw [denseRange_iff_closure_range, Set.range_restrictPreimage,\n    ← (U _).2.isOpenEmbedding_subtypeVal.isOpenMap.preimage_closure_eq_closure_preimage\n      continuous_subtype_val]\n  simp only [Opens.carrier_eq_coe, SetLike.coe_sort_coe, preimage_eq_univ_iff,\n    Subtype.range_coe_subtype, SetLike.mem_coe]\n  rw [← iUnion_subset_iff, ← Set.univ_subset_iff, iff_iff_eq]\n  congr 1\n  simpa using congr(($hU).1).symm\n\n"}
{"name":"closedEmbedding_iff_closedEmbedding_of_iSup_eq_top","module":"Mathlib.Topology.LocalAtTarget","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α → β\nι : Type u_3\nU : ι → TopologicalSpace.Opens β\nhU : Eq (iSup U) Top.top\nh : Continuous f\n⊢ Iff (Topology.IsClosedEmbedding f) (∀ (i : ι), Topology.IsClosedEmbedding ((U i).carrier.restrictPreimage f))","decl":"@[deprecated (since := \"2024-10-20\")]\nalias closedEmbedding_iff_closedEmbedding_of_iSup_eq_top :=\n isClosedEmbedding_iff_isClosedEmbedding_of_iSup_eq_top\n"}
