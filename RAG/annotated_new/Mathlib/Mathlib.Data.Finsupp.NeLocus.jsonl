{"name":"Finsupp.mem_neLocus","module":"Mathlib.Data.Finsupp.NeLocus","initialProofState":"α : Type u_1\nN : Type u_3\ninst✝² : DecidableEq α\ninst✝¹ : DecidableEq N\ninst✝ : Zero N\nf g : Finsupp α N\na : α\n⊢ Iff (Membership.mem (f.neLocus g) a) (Ne (f a) (g a))","decl":"@[simp]\ntheorem mem_neLocus {f g : α →₀ N} {a : α} : a ∈ f.neLocus g ↔ f a ≠ g a := by\n  simpa only [neLocus, Finset.mem_filter, Finset.mem_union, mem_support_iff,\n    and_iff_right_iff_imp] using Ne.ne_or_ne _\n\n"}
{"name":"Finsupp.not_mem_neLocus","module":"Mathlib.Data.Finsupp.NeLocus","initialProofState":"α : Type u_1\nN : Type u_3\ninst✝² : DecidableEq α\ninst✝¹ : DecidableEq N\ninst✝ : Zero N\nf g : Finsupp α N\na : α\n⊢ Iff (Not (Membership.mem (f.neLocus g) a)) (Eq (f a) (g a))","decl":"theorem not_mem_neLocus {f g : α →₀ N} {a : α} : a ∉ f.neLocus g ↔ f a = g a :=\n  mem_neLocus.not.trans not_ne_iff\n\n"}
{"name":"Finsupp.coe_neLocus","module":"Mathlib.Data.Finsupp.NeLocus","initialProofState":"α : Type u_1\nN : Type u_3\ninst✝² : DecidableEq α\ninst✝¹ : DecidableEq N\ninst✝ : Zero N\nf g : Finsupp α N\n⊢ Eq (↑(f.neLocus g)) (setOf fun x => Ne (f x) (g x))","decl":"@[simp]\ntheorem coe_neLocus : ↑(f.neLocus g) = { x | f x ≠ g x } := by\n  ext\n  exact mem_neLocus\n\n"}
{"name":"Finsupp.neLocus_eq_empty","module":"Mathlib.Data.Finsupp.NeLocus","initialProofState":"α : Type u_1\nN : Type u_3\ninst✝² : DecidableEq α\ninst✝¹ : DecidableEq N\ninst✝ : Zero N\nf g : Finsupp α N\n⊢ Iff (Eq (f.neLocus g) EmptyCollection.emptyCollection) (Eq f g)","decl":"@[simp]\ntheorem neLocus_eq_empty {f g : α →₀ N} : f.neLocus g = ∅ ↔ f = g :=\n  ⟨fun h =>\n    ext fun a => not_not.mp (mem_neLocus.not.mp (Finset.eq_empty_iff_forall_not_mem.mp h a)),\n    fun h => h ▸ by simp only [neLocus, Ne, eq_self_iff_true, not_true, Finset.filter_False]⟩\n\n"}
{"name":"Finsupp.nonempty_neLocus_iff","module":"Mathlib.Data.Finsupp.NeLocus","initialProofState":"α : Type u_1\nN : Type u_3\ninst✝² : DecidableEq α\ninst✝¹ : DecidableEq N\ninst✝ : Zero N\nf g : Finsupp α N\n⊢ Iff (f.neLocus g).Nonempty (Ne f g)","decl":"@[simp]\ntheorem nonempty_neLocus_iff {f g : α →₀ N} : (f.neLocus g).Nonempty ↔ f ≠ g :=\n  Finset.nonempty_iff_ne_empty.trans neLocus_eq_empty.not\n\n"}
{"name":"Finsupp.neLocus_comm","module":"Mathlib.Data.Finsupp.NeLocus","initialProofState":"α : Type u_1\nN : Type u_3\ninst✝² : DecidableEq α\ninst✝¹ : DecidableEq N\ninst✝ : Zero N\nf g : Finsupp α N\n⊢ Eq (f.neLocus g) (g.neLocus f)","decl":"theorem neLocus_comm : f.neLocus g = g.neLocus f := by\n  simp_rw [neLocus, Finset.union_comm, ne_comm]\n\n"}
{"name":"Finsupp.neLocus_zero_right","module":"Mathlib.Data.Finsupp.NeLocus","initialProofState":"α : Type u_1\nN : Type u_3\ninst✝² : DecidableEq α\ninst✝¹ : DecidableEq N\ninst✝ : Zero N\nf : Finsupp α N\n⊢ Eq (f.neLocus 0) f.support","decl":"@[simp]\ntheorem neLocus_zero_right : f.neLocus 0 = f.support := by\n  ext\n  rw [mem_neLocus, mem_support_iff, coe_zero, Pi.zero_apply]\n\n"}
{"name":"Finsupp.neLocus_zero_left","module":"Mathlib.Data.Finsupp.NeLocus","initialProofState":"α : Type u_1\nN : Type u_3\ninst✝² : DecidableEq α\ninst✝¹ : DecidableEq N\ninst✝ : Zero N\nf : Finsupp α N\n⊢ Eq (Finsupp.neLocus 0 f) f.support","decl":"@[simp]\ntheorem neLocus_zero_left : (0 : α →₀ N).neLocus f = f.support :=\n  (neLocus_comm _ _).trans (neLocus_zero_right _)\n\n"}
{"name":"Finsupp.subset_mapRange_neLocus","module":"Mathlib.Data.Finsupp.NeLocus","initialProofState":"α : Type u_1\nM : Type u_2\nN : Type u_3\ninst✝⁴ : DecidableEq α\ninst✝³ : DecidableEq N\ninst✝² : Zero N\ninst✝¹ : DecidableEq M\ninst✝ : Zero M\nf g : Finsupp α N\nF : N → M\nF0 : Eq (F 0) 0\n⊢ HasSubset.Subset ((Finsupp.mapRange F F0 f).neLocus (Finsupp.mapRange F F0 g)) (f.neLocus g)","decl":"theorem subset_mapRange_neLocus [DecidableEq N] [Zero N] [DecidableEq M] [Zero M] (f g : α →₀ N)\n    {F : N → M} (F0 : F 0 = 0) : (f.mapRange F F0).neLocus (g.mapRange F F0) ⊆ f.neLocus g :=\n  fun x => by simpa only [mem_neLocus, mapRange_apply, not_imp_not] using congr_arg F\n\n"}
{"name":"Finsupp.zipWith_neLocus_eq_left","module":"Mathlib.Data.Finsupp.NeLocus","initialProofState":"α : Type u_1\nM : Type u_2\nN : Type u_3\nP : Type u_4\ninst✝⁵ : DecidableEq α\ninst✝⁴ : DecidableEq N\ninst✝³ : Zero M\ninst✝² : DecidableEq P\ninst✝¹ : Zero P\ninst✝ : Zero N\nF : M → N → P\nF0 : Eq (F 0 0) 0\nf : Finsupp α M\ng₁ g₂ : Finsupp α N\nhF : ∀ (f : M), Function.Injective fun g => F f g\n⊢ Eq ((Finsupp.zipWith F F0 f g₁).neLocus (Finsupp.zipWith F F0 f g₂)) (g₁.neLocus g₂)","decl":"theorem zipWith_neLocus_eq_left [DecidableEq N] [Zero M] [DecidableEq P] [Zero P] [Zero N]\n    {F : M → N → P} (F0 : F 0 0 = 0) (f : α →₀ M) (g₁ g₂ : α →₀ N)\n    (hF : ∀ f, Function.Injective fun g => F f g) :\n    (zipWith F F0 f g₁).neLocus (zipWith F F0 f g₂) = g₁.neLocus g₂ := by\n  ext\n  simpa only [mem_neLocus] using (hF _).ne_iff\n\n"}
{"name":"Finsupp.zipWith_neLocus_eq_right","module":"Mathlib.Data.Finsupp.NeLocus","initialProofState":"α : Type u_1\nM : Type u_2\nN : Type u_3\nP : Type u_4\ninst✝⁵ : DecidableEq α\ninst✝⁴ : DecidableEq M\ninst✝³ : Zero M\ninst✝² : DecidableEq P\ninst✝¹ : Zero P\ninst✝ : Zero N\nF : M → N → P\nF0 : Eq (F 0 0) 0\nf₁ f₂ : Finsupp α M\ng : Finsupp α N\nhF : ∀ (g : N), Function.Injective fun f => F f g\n⊢ Eq ((Finsupp.zipWith F F0 f₁ g).neLocus (Finsupp.zipWith F F0 f₂ g)) (f₁.neLocus f₂)","decl":"theorem zipWith_neLocus_eq_right [DecidableEq M] [Zero M] [DecidableEq P] [Zero P] [Zero N]\n    {F : M → N → P} (F0 : F 0 0 = 0) (f₁ f₂ : α →₀ M) (g : α →₀ N)\n    (hF : ∀ g, Function.Injective fun f => F f g) :\n    (zipWith F F0 f₁ g).neLocus (zipWith F F0 f₂ g) = f₁.neLocus f₂ := by\n  ext\n  simpa only [mem_neLocus] using (hF _).ne_iff\n\n"}
{"name":"Finsupp.mapRange_neLocus_eq","module":"Mathlib.Data.Finsupp.NeLocus","initialProofState":"α : Type u_1\nM : Type u_2\nN : Type u_3\ninst✝⁴ : DecidableEq α\ninst✝³ : DecidableEq N\ninst✝² : DecidableEq M\ninst✝¹ : Zero M\ninst✝ : Zero N\nf g : Finsupp α N\nF : N → M\nF0 : Eq (F 0) 0\nhF : Function.Injective F\n⊢ Eq ((Finsupp.mapRange F F0 f).neLocus (Finsupp.mapRange F F0 g)) (f.neLocus g)","decl":"theorem mapRange_neLocus_eq [DecidableEq N] [DecidableEq M] [Zero M] [Zero N] (f g : α →₀ N)\n    {F : N → M} (F0 : F 0 = 0) (hF : Function.Injective F) :\n    (f.mapRange F F0).neLocus (g.mapRange F F0) = f.neLocus g := by\n  ext\n  simpa only [mem_neLocus] using hF.ne_iff\n\n"}
{"name":"Finsupp.neLocus_add_left","module":"Mathlib.Data.Finsupp.NeLocus","initialProofState":"α : Type u_1\nN : Type u_3\ninst✝² : DecidableEq α\ninst✝¹ : DecidableEq N\ninst✝ : AddLeftCancelMonoid N\nf g h : Finsupp α N\n⊢ Eq ((HAdd.hAdd f g).neLocus (HAdd.hAdd f h)) (g.neLocus h)","decl":"@[simp]\ntheorem neLocus_add_left [AddLeftCancelMonoid N] (f g h : α →₀ N) :\n    (f + g).neLocus (f + h) = g.neLocus h :=\n  zipWith_neLocus_eq_left _ _ _ _ add_right_injective\n\n"}
{"name":"Finsupp.neLocus_add_right","module":"Mathlib.Data.Finsupp.NeLocus","initialProofState":"α : Type u_1\nN : Type u_3\ninst✝² : DecidableEq α\ninst✝¹ : DecidableEq N\ninst✝ : AddRightCancelMonoid N\nf g h : Finsupp α N\n⊢ Eq ((HAdd.hAdd f h).neLocus (HAdd.hAdd g h)) (f.neLocus g)","decl":"@[simp]\ntheorem neLocus_add_right [AddRightCancelMonoid N] (f g h : α →₀ N) :\n    (f + h).neLocus (g + h) = f.neLocus g :=\n  zipWith_neLocus_eq_right _ _ _ _ add_left_injective\n\n"}
{"name":"Finsupp.neLocus_neg_neg","module":"Mathlib.Data.Finsupp.NeLocus","initialProofState":"α : Type u_1\nN : Type u_3\ninst✝² : DecidableEq α\ninst✝¹ : DecidableEq N\ninst✝ : AddGroup N\nf g : Finsupp α N\n⊢ Eq ((Neg.neg f).neLocus (Neg.neg g)) (f.neLocus g)","decl":"@[simp]\ntheorem neLocus_neg_neg : neLocus (-f) (-g) = f.neLocus g :=\n  mapRange_neLocus_eq _ _ neg_zero neg_injective\n\n"}
{"name":"Finsupp.neLocus_neg","module":"Mathlib.Data.Finsupp.NeLocus","initialProofState":"α : Type u_1\nN : Type u_3\ninst✝² : DecidableEq α\ninst✝¹ : DecidableEq N\ninst✝ : AddGroup N\nf g : Finsupp α N\n⊢ Eq ((Neg.neg f).neLocus g) (f.neLocus (Neg.neg g))","decl":"theorem neLocus_neg : neLocus (-f) g = f.neLocus (-g) := by rw [← neLocus_neg_neg, neg_neg]\n\n"}
{"name":"Finsupp.neLocus_eq_support_sub","module":"Mathlib.Data.Finsupp.NeLocus","initialProofState":"α : Type u_1\nN : Type u_3\ninst✝² : DecidableEq α\ninst✝¹ : DecidableEq N\ninst✝ : AddGroup N\nf g : Finsupp α N\n⊢ Eq (f.neLocus g) (HSub.hSub f g).support","decl":"theorem neLocus_eq_support_sub : f.neLocus g = (f - g).support := by\n  rw [← neLocus_add_right _ _ (-g), add_neg_cancel, neLocus_zero_right, sub_eq_add_neg]\n\n"}
{"name":"Finsupp.neLocus_sub_left","module":"Mathlib.Data.Finsupp.NeLocus","initialProofState":"α : Type u_1\nN : Type u_3\ninst✝² : DecidableEq α\ninst✝¹ : DecidableEq N\ninst✝ : AddGroup N\nf g₁ g₂ : Finsupp α N\n⊢ Eq ((HSub.hSub f g₁).neLocus (HSub.hSub f g₂)) (g₁.neLocus g₂)","decl":"@[simp]\ntheorem neLocus_sub_left : neLocus (f - g₁) (f - g₂) = neLocus g₁ g₂ := by\n  simp only [sub_eq_add_neg, neLocus_add_left, neLocus_neg_neg]\n\n"}
{"name":"Finsupp.neLocus_sub_right","module":"Mathlib.Data.Finsupp.NeLocus","initialProofState":"α : Type u_1\nN : Type u_3\ninst✝² : DecidableEq α\ninst✝¹ : DecidableEq N\ninst✝ : AddGroup N\nf₁ f₂ g : Finsupp α N\n⊢ Eq ((HSub.hSub f₁ g).neLocus (HSub.hSub f₂ g)) (f₁.neLocus f₂)","decl":"@[simp]\ntheorem neLocus_sub_right : neLocus (f₁ - g) (f₂ - g) = neLocus f₁ f₂ := by\n  simpa only [sub_eq_add_neg] using neLocus_add_right _ _ _\n\n"}
{"name":"Finsupp.neLocus_self_add_right","module":"Mathlib.Data.Finsupp.NeLocus","initialProofState":"α : Type u_1\nN : Type u_3\ninst✝² : DecidableEq α\ninst✝¹ : DecidableEq N\ninst✝ : AddGroup N\nf g : Finsupp α N\n⊢ Eq (f.neLocus (HAdd.hAdd f g)) g.support","decl":"@[simp]\ntheorem neLocus_self_add_right : neLocus f (f + g) = g.support := by\n  rw [← neLocus_zero_left, ← neLocus_add_left f 0 g, add_zero]\n\n"}
{"name":"Finsupp.neLocus_self_add_left","module":"Mathlib.Data.Finsupp.NeLocus","initialProofState":"α : Type u_1\nN : Type u_3\ninst✝² : DecidableEq α\ninst✝¹ : DecidableEq N\ninst✝ : AddGroup N\nf g : Finsupp α N\n⊢ Eq ((HAdd.hAdd f g).neLocus f) g.support","decl":"@[simp]\ntheorem neLocus_self_add_left : neLocus (f + g) f = g.support := by\n  rw [neLocus_comm, neLocus_self_add_right]\n\n"}
{"name":"Finsupp.neLocus_self_sub_right","module":"Mathlib.Data.Finsupp.NeLocus","initialProofState":"α : Type u_1\nN : Type u_3\ninst✝² : DecidableEq α\ninst✝¹ : DecidableEq N\ninst✝ : AddGroup N\nf g : Finsupp α N\n⊢ Eq (f.neLocus (HSub.hSub f g)) g.support","decl":"@[simp]\ntheorem neLocus_self_sub_right : neLocus f (f - g) = g.support := by\n  rw [sub_eq_add_neg, neLocus_self_add_right, support_neg]\n\n"}
{"name":"Finsupp.neLocus_self_sub_left","module":"Mathlib.Data.Finsupp.NeLocus","initialProofState":"α : Type u_1\nN : Type u_3\ninst✝² : DecidableEq α\ninst✝¹ : DecidableEq N\ninst✝ : AddGroup N\nf g : Finsupp α N\n⊢ Eq ((HSub.hSub f g).neLocus f) g.support","decl":"@[simp]\ntheorem neLocus_self_sub_left : neLocus (f - g) f = g.support := by\n  rw [neLocus_comm, neLocus_self_sub_right]\n\n"}
