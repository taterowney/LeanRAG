{"name":"NNRat.coe_list_sum","module":"Mathlib.Data.NNRat.BigOperators","initialProofState":"l : List NNRat\n⊢ Eq (↑l.sum) (List.map NNRat.cast l).sum","decl":"@[norm_cast]\ntheorem coe_list_sum (l : List ℚ≥0) : (l.sum : ℚ) = (l.map (↑)).sum :=\n  map_list_sum coeHom _\n\n"}
{"name":"NNRat.coe_list_prod","module":"Mathlib.Data.NNRat.BigOperators","initialProofState":"l : List NNRat\n⊢ Eq (↑l.prod) (List.map NNRat.cast l).prod","decl":"@[norm_cast]\ntheorem coe_list_prod (l : List ℚ≥0) : (l.prod : ℚ) = (l.map (↑)).prod :=\n  map_list_prod coeHom _\n\n"}
{"name":"NNRat.coe_multiset_sum","module":"Mathlib.Data.NNRat.BigOperators","initialProofState":"s : Multiset NNRat\n⊢ Eq (↑s.sum) (Multiset.map NNRat.cast s).sum","decl":"@[norm_cast]\ntheorem coe_multiset_sum (s : Multiset ℚ≥0) : (s.sum : ℚ) = (s.map (↑)).sum :=\n  map_multiset_sum coeHom _\n\n"}
{"name":"NNRat.coe_multiset_prod","module":"Mathlib.Data.NNRat.BigOperators","initialProofState":"s : Multiset NNRat\n⊢ Eq (↑s.prod) (Multiset.map NNRat.cast s).prod","decl":"@[norm_cast]\ntheorem coe_multiset_prod (s : Multiset ℚ≥0) : (s.prod : ℚ) = (s.map (↑)).prod :=\n  map_multiset_prod coeHom _\n\n"}
{"name":"NNRat.coe_sum","module":"Mathlib.Data.NNRat.BigOperators","initialProofState":"α : Type u_1\ns : Finset α\nf : α → NNRat\n⊢ Eq (↑(s.sum fun a => f a)) (s.sum fun a => ↑(f a))","decl":"@[norm_cast]\ntheorem coe_sum {s : Finset α} {f : α → ℚ≥0} : ↑(∑ a ∈ s, f a) = ∑ a ∈ s, (f a : ℚ) :=\n  map_sum coeHom _ _\n\n"}
{"name":"NNRat.toNNRat_sum_of_nonneg","module":"Mathlib.Data.NNRat.BigOperators","initialProofState":"α : Type u_1\ns : Finset α\nf : α → Rat\nhf : ∀ (a : α), Membership.mem s a → LE.le 0 (f a)\n⊢ Eq (s.sum fun a => f a).toNNRat (s.sum fun a => (f a).toNNRat)","decl":"theorem toNNRat_sum_of_nonneg {s : Finset α} {f : α → ℚ} (hf : ∀ a, a ∈ s → 0 ≤ f a) :\n    (∑ a ∈ s, f a).toNNRat = ∑ a ∈ s, (f a).toNNRat := by\n  rw [← coe_inj, coe_sum, Rat.coe_toNNRat _ (Finset.sum_nonneg hf)]\n  exact Finset.sum_congr rfl fun x hxs ↦ by rw [Rat.coe_toNNRat _ (hf x hxs)]\n\n"}
{"name":"NNRat.coe_prod","module":"Mathlib.Data.NNRat.BigOperators","initialProofState":"α : Type u_1\ns : Finset α\nf : α → NNRat\n⊢ Eq (↑(s.prod fun a => f a)) (s.prod fun a => ↑(f a))","decl":"@[norm_cast]\ntheorem coe_prod {s : Finset α} {f : α → ℚ≥0} : ↑(∏ a ∈ s, f a) = ∏ a ∈ s, (f a : ℚ) :=\n  map_prod coeHom _ _\n\n"}
{"name":"NNRat.toNNRat_prod_of_nonneg","module":"Mathlib.Data.NNRat.BigOperators","initialProofState":"α : Type u_1\ns : Finset α\nf : α → Rat\nhf : ∀ (a : α), Membership.mem s a → LE.le 0 (f a)\n⊢ Eq (s.prod fun a => f a).toNNRat (s.prod fun a => (f a).toNNRat)","decl":"theorem toNNRat_prod_of_nonneg {s : Finset α} {f : α → ℚ} (hf : ∀ a ∈ s, 0 ≤ f a) :\n    (∏ a ∈ s, f a).toNNRat = ∏ a ∈ s, (f a).toNNRat := by\n  rw [← coe_inj, coe_prod, Rat.coe_toNNRat _ (Finset.prod_nonneg hf)]\n  exact Finset.prod_congr rfl fun x hxs ↦ by rw [Rat.coe_toNNRat _ (hf x hxs)]\n\n"}
