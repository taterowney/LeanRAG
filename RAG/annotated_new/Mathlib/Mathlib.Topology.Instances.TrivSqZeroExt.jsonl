{"name":"TrivSqZeroExt.instT2Space","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝³ : TopologicalSpace R\ninst✝² : TopologicalSpace M\ninst✝¹ : T2Space R\ninst✝ : T2Space M\n⊢ T2Space (TrivSqZeroExt R M)","decl":"instance [T2Space R] [T2Space M] : T2Space (tsze R M) :=\n  Prod.t2Space\n\n"}
{"name":"TrivSqZeroExt.nhds_def","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝¹ : TopologicalSpace R\ninst✝ : TopologicalSpace M\nx : TrivSqZeroExt R M\n⊢ Eq (nhds x) (SProd.sprod (nhds x.fst) (nhds x.snd))","decl":"theorem nhds_def (x : tsze R M) : 𝓝 x = 𝓝 x.fst ×ˢ 𝓝 x.snd := nhds_prod_eq\n\n"}
{"name":"TrivSqZeroExt.nhds_inl","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝² : TopologicalSpace R\ninst✝¹ : TopologicalSpace M\ninst✝ : Zero M\nx : R\n⊢ Eq (nhds (TrivSqZeroExt.inl x)) (SProd.sprod (nhds x) (nhds 0))","decl":"theorem nhds_inl [Zero M] (x : R) : 𝓝 (inl x : tsze R M) = 𝓝 x ×ˢ 𝓝 0 :=\n  nhds_def _\n\n"}
{"name":"TrivSqZeroExt.nhds_inr","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝² : TopologicalSpace R\ninst✝¹ : TopologicalSpace M\ninst✝ : Zero R\nm : M\n⊢ Eq (nhds (TrivSqZeroExt.inr m)) (SProd.sprod (nhds 0) (nhds m))","decl":"theorem nhds_inr [Zero R] (m : M) : 𝓝 (inr m : tsze R M) = 𝓝 0 ×ˢ 𝓝 m :=\n  nhds_def _\n\n"}
{"name":"TrivSqZeroExt.continuous_fst","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝¹ : TopologicalSpace R\ninst✝ : TopologicalSpace M\n⊢ Continuous TrivSqZeroExt.fst","decl":"nonrec theorem continuous_fst : Continuous (fst : tsze R M → R) :=\n  continuous_fst\n\n"}
{"name":"TrivSqZeroExt.continuous_snd","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝¹ : TopologicalSpace R\ninst✝ : TopologicalSpace M\n⊢ Continuous TrivSqZeroExt.snd","decl":"nonrec theorem continuous_snd : Continuous (snd : tsze R M → M) :=\n  continuous_snd\n\n"}
{"name":"TrivSqZeroExt.continuous_inl","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝² : TopologicalSpace R\ninst✝¹ : TopologicalSpace M\ninst✝ : Zero M\n⊢ Continuous TrivSqZeroExt.inl","decl":"theorem continuous_inl [Zero M] : Continuous (inl : R → tsze R M) :=\n  continuous_id.prod_mk continuous_const\n\n"}
{"name":"TrivSqZeroExt.continuous_inr","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝² : TopologicalSpace R\ninst✝¹ : TopologicalSpace M\ninst✝ : Zero R\n⊢ Continuous TrivSqZeroExt.inr","decl":"theorem continuous_inr [Zero R] : Continuous (inr : M → tsze R M) :=\n  continuous_const.prod_mk continuous_id\n\n"}
{"name":"TrivSqZeroExt.IsEmbedding.inl","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝² : TopologicalSpace R\ninst✝¹ : TopologicalSpace M\ninst✝ : Zero M\n⊢ Topology.IsEmbedding TrivSqZeroExt.inl","decl":"theorem IsEmbedding.inl [Zero M] : IsEmbedding (inl : R → tsze R M) :=\n  .of_comp continuous_inl continuous_fst .id\n\n"}
{"name":"TrivSqZeroExt.embedding_inl","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝² : TopologicalSpace R\ninst✝¹ : TopologicalSpace M\ninst✝ : Zero M\n⊢ Topology.IsEmbedding TrivSqZeroExt.inl","decl":"@[deprecated (since := \"2024-10-26\")]\nalias embedding_inl := IsEmbedding.inl\n\n"}
{"name":"TrivSqZeroExt.IsEmbedding.inr","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝² : TopologicalSpace R\ninst✝¹ : TopologicalSpace M\ninst✝ : Zero R\n⊢ Topology.IsEmbedding TrivSqZeroExt.inr","decl":"theorem IsEmbedding.inr [Zero R] : IsEmbedding (inr : M → tsze R M) :=\n  .of_comp continuous_inr continuous_snd .id\n\n"}
{"name":"TrivSqZeroExt.embedding_inr","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝² : TopologicalSpace R\ninst✝¹ : TopologicalSpace M\ninst✝ : Zero R\n⊢ Topology.IsEmbedding TrivSqZeroExt.inr","decl":"@[deprecated (since := \"2024-10-26\")]\nalias embedding_inr := IsEmbedding.inr\n\n"}
{"name":"TrivSqZeroExt.fstCLM_apply","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝⁴ : TopologicalSpace R\ninst✝³ : TopologicalSpace M\ninst✝² : CommSemiring R\ninst✝¹ : AddCommMonoid M\ninst✝ : Module R M\nx : TrivSqZeroExt R M\n⊢ Eq ((TrivSqZeroExt.fstCLM R M) x) x.fst","decl":"/-- `TrivSqZeroExt.fst` as a continuous linear map. -/\n@[simps]\ndef fstCLM [CommSemiring R] [AddCommMonoid M] [Module R M] : tsze R M →L[R] R :=\n  { ContinuousLinearMap.fst R R M with toFun := fst }\n\n"}
{"name":"TrivSqZeroExt.sndCLM_apply","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝⁴ : TopologicalSpace R\ninst✝³ : TopologicalSpace M\ninst✝² : CommSemiring R\ninst✝¹ : AddCommMonoid M\ninst✝ : Module R M\nx : TrivSqZeroExt R M\n⊢ Eq ((TrivSqZeroExt.sndCLM R M) x) x.snd","decl":"/-- `TrivSqZeroExt.snd` as a continuous linear map. -/\n@[simps]\ndef sndCLM [CommSemiring R] [AddCommMonoid M] [Module R M] : tsze R M →L[R] M :=\n  { ContinuousLinearMap.snd R R M with\n    toFun := snd\n    cont := continuous_snd }\n\n"}
{"name":"TrivSqZeroExt.inlCLM_apply","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝⁴ : TopologicalSpace R\ninst✝³ : TopologicalSpace M\ninst✝² : CommSemiring R\ninst✝¹ : AddCommMonoid M\ninst✝ : Module R M\nr : R\n⊢ Eq ((TrivSqZeroExt.inlCLM R M) r) (TrivSqZeroExt.inl r)","decl":"/-- `TrivSqZeroExt.inl` as a continuous linear map. -/\n@[simps]\ndef inlCLM [CommSemiring R] [AddCommMonoid M] [Module R M] : R →L[R] tsze R M :=\n  { ContinuousLinearMap.inl R R M with toFun := inl }\n\n"}
{"name":"TrivSqZeroExt.inrCLM_apply","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝⁴ : TopologicalSpace R\ninst✝³ : TopologicalSpace M\ninst✝² : CommSemiring R\ninst✝¹ : AddCommMonoid M\ninst✝ : Module R M\nm : M\n⊢ Eq ((TrivSqZeroExt.inrCLM R M) m) (TrivSqZeroExt.inr m)","decl":"/-- `TrivSqZeroExt.inr` as a continuous linear map. -/\n@[simps]\ndef inrCLM [CommSemiring R] [AddCommMonoid M] [Module R M] : M →L[R] tsze R M :=\n  { ContinuousLinearMap.inr R R M with toFun := inr }\n\n"}
{"name":"TrivSqZeroExt.instContinuousAdd","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝⁵ : TopologicalSpace R\ninst✝⁴ : TopologicalSpace M\ninst✝³ : Add R\ninst✝² : Add M\ninst✝¹ : ContinuousAdd R\ninst✝ : ContinuousAdd M\n⊢ ContinuousAdd (TrivSqZeroExt R M)","decl":"instance [Add R] [Add M] [ContinuousAdd R] [ContinuousAdd M] : ContinuousAdd (tsze R M) :=\n  Prod.continuousAdd\n\n"}
{"name":"TrivSqZeroExt.instContinuousMulOfContinuousSMulMulOppositeOfContinuousAdd","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝⁹ : TopologicalSpace R\ninst✝⁸ : TopologicalSpace M\ninst✝⁷ : Mul R\ninst✝⁶ : Add M\ninst✝⁵ : SMul R M\ninst✝⁴ : SMul (MulOpposite R) M\ninst✝³ : ContinuousMul R\ninst✝² : ContinuousSMul R M\ninst✝¹ : ContinuousSMul (MulOpposite R) M\ninst✝ : ContinuousAdd M\n⊢ ContinuousMul (TrivSqZeroExt R M)","decl":"instance [Mul R] [Add M] [SMul R M] [SMul Rᵐᵒᵖ M] [ContinuousMul R] [ContinuousSMul R M]\n    [ContinuousSMul Rᵐᵒᵖ M] [ContinuousAdd M] : ContinuousMul (tsze R M) :=\n  ⟨((continuous_fst.comp continuous_fst).mul (continuous_fst.comp continuous_snd)).prod_mk <|\n      ((continuous_fst.comp continuous_fst).smul (continuous_snd.comp continuous_snd)).add\n        ((MulOpposite.continuous_op.comp <| continuous_fst.comp <| continuous_snd).smul\n          (continuous_snd.comp continuous_fst))⟩\n\n"}
{"name":"TrivSqZeroExt.instContinuousNeg","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝⁵ : TopologicalSpace R\ninst✝⁴ : TopologicalSpace M\ninst✝³ : Neg R\ninst✝² : Neg M\ninst✝¹ : ContinuousNeg R\ninst✝ : ContinuousNeg M\n⊢ ContinuousNeg (TrivSqZeroExt R M)","decl":"instance [Neg R] [Neg M] [ContinuousNeg R] [ContinuousNeg M] : ContinuousNeg (tsze R M) :=\n  Prod.continuousNeg\n\n"}
{"name":"TrivSqZeroExt.topologicalSemiring","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝⁹ : TopologicalSpace R\ninst✝⁸ : TopologicalSpace M\ninst✝⁷ : Semiring R\ninst✝⁶ : AddCommMonoid M\ninst✝⁵ : Module R M\ninst✝⁴ : Module (MulOpposite R) M\ninst✝³ : TopologicalSemiring R\ninst✝² : ContinuousAdd M\ninst✝¹ : ContinuousSMul R M\ninst✝ : ContinuousSMul (MulOpposite R) M\n⊢ TopologicalSemiring (TrivSqZeroExt R M)","decl":"/-- This is not an instance due to complaints by the `fails_quickly` linter. At any rate, we only\nreally care about the `TopologicalRing` instance below. -/\ntheorem topologicalSemiring [Semiring R] [AddCommMonoid M] [Module R M] [Module Rᵐᵒᵖ M]\n    [TopologicalSemiring R] [ContinuousAdd M] [ContinuousSMul R M] [ContinuousSMul Rᵐᵒᵖ M] :\n    TopologicalSemiring (tsze R M) := { }\n\n"}
{"name":"TrivSqZeroExt.instTopologicalRingOfTopologicalAddGroupOfContinuousSMulMulOpposite","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝⁹ : TopologicalSpace R\ninst✝⁸ : TopologicalSpace M\ninst✝⁷ : Ring R\ninst✝⁶ : AddCommGroup M\ninst✝⁵ : Module R M\ninst✝⁴ : Module (MulOpposite R) M\ninst✝³ : TopologicalRing R\ninst✝² : TopologicalAddGroup M\ninst✝¹ : ContinuousSMul R M\ninst✝ : ContinuousSMul (MulOpposite R) M\n⊢ TopologicalRing (TrivSqZeroExt R M)","decl":"instance [Ring R] [AddCommGroup M] [Module R M] [Module Rᵐᵒᵖ M] [TopologicalRing R]\n    [TopologicalAddGroup M] [ContinuousSMul R M] [ContinuousSMul Rᵐᵒᵖ M] :\n    TopologicalRing (tsze R M) where\n\n"}
{"name":"TrivSqZeroExt.instContinuousConstSMul","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"S : Type u_2\nR : Type u_3\nM : Type u_4\ninst✝⁵ : TopologicalSpace R\ninst✝⁴ : TopologicalSpace M\ninst✝³ : SMul S R\ninst✝² : SMul S M\ninst✝¹ : ContinuousConstSMul S R\ninst✝ : ContinuousConstSMul S M\n⊢ ContinuousConstSMul S (TrivSqZeroExt R M)","decl":"instance [SMul S R] [SMul S M] [ContinuousConstSMul S R] [ContinuousConstSMul S M] :\n    ContinuousConstSMul S (tsze R M) :=\n  Prod.continuousConstSMul\n\n"}
{"name":"TrivSqZeroExt.instContinuousSMul","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"S : Type u_2\nR : Type u_3\nM : Type u_4\ninst✝⁶ : TopologicalSpace R\ninst✝⁵ : TopologicalSpace M\ninst✝⁴ : TopologicalSpace S\ninst✝³ : SMul S R\ninst✝² : SMul S M\ninst✝¹ : ContinuousSMul S R\ninst✝ : ContinuousSMul S M\n⊢ ContinuousSMul S (TrivSqZeroExt R M)","decl":"instance [TopologicalSpace S] [SMul S R] [SMul S M] [ContinuousSMul S R] [ContinuousSMul S M] :\n    ContinuousSMul S (tsze R M) :=\n  Prod.continuousSMul\n\n"}
{"name":"TrivSqZeroExt.hasSum_inl","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"α : Type u_1\nR : Type u_3\nM : Type u_4\ninst✝³ : TopologicalSpace R\ninst✝² : TopologicalSpace M\ninst✝¹ : AddCommMonoid R\ninst✝ : AddCommMonoid M\nf : α → R\na : R\nh : HasSum f a\n⊢ HasSum (fun x => TrivSqZeroExt.inl (f x)) (TrivSqZeroExt.inl a)","decl":"theorem hasSum_inl [AddCommMonoid R] [AddCommMonoid M] {f : α → R} {a : R} (h : HasSum f a) :\n    HasSum (fun x ↦ inl (f x)) (inl a : tsze R M) :=\n  h.map (⟨⟨inl, inl_zero _⟩, inl_add _⟩ : R →+ tsze R M) continuous_inl\n\n"}
{"name":"TrivSqZeroExt.hasSum_inr","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"α : Type u_1\nR : Type u_3\nM : Type u_4\ninst✝³ : TopologicalSpace R\ninst✝² : TopologicalSpace M\ninst✝¹ : AddCommMonoid R\ninst✝ : AddCommMonoid M\nf : α → M\na : M\nh : HasSum f a\n⊢ HasSum (fun x => TrivSqZeroExt.inr (f x)) (TrivSqZeroExt.inr a)","decl":"theorem hasSum_inr [AddCommMonoid R] [AddCommMonoid M] {f : α → M} {a : M} (h : HasSum f a) :\n    HasSum (fun x ↦ inr (f x)) (inr a : tsze R M) :=\n  h.map (⟨⟨inr, inr_zero _⟩, inr_add _⟩ : M →+ tsze R M) continuous_inr\n\n"}
{"name":"TrivSqZeroExt.hasSum_fst","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"α : Type u_1\nR : Type u_3\nM : Type u_4\ninst✝³ : TopologicalSpace R\ninst✝² : TopologicalSpace M\ninst✝¹ : AddCommMonoid R\ninst✝ : AddCommMonoid M\nf : α → TrivSqZeroExt R M\na : TrivSqZeroExt R M\nh : HasSum f a\n⊢ HasSum (fun x => (f x).fst) a.fst","decl":"theorem hasSum_fst [AddCommMonoid R] [AddCommMonoid M] {f : α → tsze R M} {a : tsze R M}\n    (h : HasSum f a) : HasSum (fun x ↦ fst (f x)) (fst a) :=\n  h.map (⟨⟨fst, fst_zero⟩, fst_add⟩ : tsze R M →+ R) continuous_fst\n\n"}
{"name":"TrivSqZeroExt.hasSum_snd","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"α : Type u_1\nR : Type u_3\nM : Type u_4\ninst✝³ : TopologicalSpace R\ninst✝² : TopologicalSpace M\ninst✝¹ : AddCommMonoid R\ninst✝ : AddCommMonoid M\nf : α → TrivSqZeroExt R M\na : TrivSqZeroExt R M\nh : HasSum f a\n⊢ HasSum (fun x => (f x).snd) a.snd","decl":"theorem hasSum_snd [AddCommMonoid R] [AddCommMonoid M] {f : α → tsze R M} {a : tsze R M}\n    (h : HasSum f a) : HasSum (fun x ↦ snd (f x)) (snd a) :=\n  h.map (⟨⟨snd, snd_zero⟩, snd_add⟩ : tsze R M →+ M) continuous_snd\n\n"}
{"name":"TrivSqZeroExt.instCompleteSpace","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝³ : UniformSpace R\ninst✝² : UniformSpace M\ninst✝¹ : CompleteSpace R\ninst✝ : CompleteSpace M\n⊢ CompleteSpace (TrivSqZeroExt R M)","decl":"instance [CompleteSpace R] [CompleteSpace M] : CompleteSpace (tsze R M) :=\n  inferInstanceAs <| CompleteSpace (R × M)\n\n"}
{"name":"TrivSqZeroExt.instUniformAddGroup","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝⁵ : UniformSpace R\ninst✝⁴ : UniformSpace M\ninst✝³ : AddGroup R\ninst✝² : AddGroup M\ninst✝¹ : UniformAddGroup R\ninst✝ : UniformAddGroup M\n⊢ UniformAddGroup (TrivSqZeroExt R M)","decl":"instance [AddGroup R] [AddGroup M] [UniformAddGroup R] [UniformAddGroup M] :\n    UniformAddGroup (tsze R M) :=\n  inferInstanceAs <| UniformAddGroup (R × M)\n\n"}
{"name":"TrivSqZeroExt.uniformity_def","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝¹ : UniformSpace R\ninst✝ : UniformSpace M\n⊢ Eq (uniformity (TrivSqZeroExt R M)) (Min.min (Filter.comap (fun p => { fst := p.1.fst, snd := p.2.fst }) (uniformity R)) (Filter.comap (fun p => { fst := p.1.snd, snd := p.2.snd }) (uniformity M)))","decl":"theorem uniformity_def :\n    𝓤 (tsze R M) =\n      ((𝓤 R).comap fun p => (p.1.fst, p.2.fst)) ⊓ ((𝓤 M).comap fun p => (p.1.snd, p.2.snd)) :=\n  rfl\n\n"}
{"name":"TrivSqZeroExt.uniformContinuous_fst","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝¹ : UniformSpace R\ninst✝ : UniformSpace M\n⊢ UniformContinuous TrivSqZeroExt.fst","decl":"nonrec theorem uniformContinuous_fst : UniformContinuous (fst : tsze R M → R) :=\n  uniformContinuous_fst\n\n"}
{"name":"TrivSqZeroExt.uniformContinuous_snd","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝¹ : UniformSpace R\ninst✝ : UniformSpace M\n⊢ UniformContinuous TrivSqZeroExt.snd","decl":"nonrec theorem uniformContinuous_snd : UniformContinuous (snd : tsze R M → M) :=\n  uniformContinuous_snd\n\n"}
{"name":"TrivSqZeroExt.uniformContinuous_inl","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝² : UniformSpace R\ninst✝¹ : UniformSpace M\ninst✝ : Zero M\n⊢ UniformContinuous TrivSqZeroExt.inl","decl":"theorem uniformContinuous_inl [Zero M] : UniformContinuous (inl : R → tsze R M) :=\n  uniformContinuous_id.prod_mk uniformContinuous_const\n\n"}
{"name":"TrivSqZeroExt.uniformContinuous_inr","module":"Mathlib.Topology.Instances.TrivSqZeroExt","initialProofState":"R : Type u_3\nM : Type u_4\ninst✝² : UniformSpace R\ninst✝¹ : UniformSpace M\ninst✝ : Zero R\n⊢ UniformContinuous TrivSqZeroExt.inr","decl":"theorem uniformContinuous_inr [Zero R] : UniformContinuous (inr : M → tsze R M) :=\n  uniformContinuous_const.prod_mk uniformContinuous_id\n\n"}
