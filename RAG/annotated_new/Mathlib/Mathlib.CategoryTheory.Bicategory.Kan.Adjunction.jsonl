{"name":"CategoryTheory.Bicategory.isLeftAdjoint_TFAE","module":"Mathlib.CategoryTheory.Bicategory.Kan.Adjunction","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b : B\nf : Quiver.Hom a b\n⊢ (List.cons (CategoryTheory.Bicategory.IsLeftAdjoint f) (List.cons (CategoryTheory.Bicategory.HasAbsLeftKanExtension f (CategoryTheory.CategoryStruct.id a)) (List.cons (Exists fun x => CategoryTheory.Bicategory.Lan.CommuteWith f (CategoryTheory.CategoryStruct.id a) f) List.nil))).TFAE","decl":"theorem isLeftAdjoint_TFAE (f : a ⟶ b) :\n    List.TFAE [\n      IsLeftAdjoint f,\n      HasAbsLeftKanExtension f (𝟙 a),\n      ∃ _ : HasLeftKanExtension f (𝟙 a), Lan.CommuteWith f (𝟙 a) f] := by\n  tfae_have 1 → 2\n  | h => IsAbsKan.hasAbsLeftKanExtension (Adjunction.ofIsLeftAdjoint f).isAbsoluteLeftKan\n  tfae_have 2 → 3\n  | h => ⟨inferInstance, inferInstance⟩\n  tfae_have 3 → 1\n  | ⟨h, h'⟩ => .mk <| (lanIsKan f (𝟙 a)).adjunction <| Lan.CommuteWith.isKan f (𝟙 a) f\n  tfae_finish\n\n"}
{"name":"CategoryTheory.Bicategory.isRightAdjoint_TFAE","module":"Mathlib.CategoryTheory.Bicategory.Kan.Adjunction","initialProofState":"B : Type u\ninst✝ : CategoryTheory.Bicategory B\na b : B\nu : Quiver.Hom b a\n⊢ (List.cons (CategoryTheory.Bicategory.IsRightAdjoint u) (List.cons (CategoryTheory.Bicategory.HasAbsLeftKanLift u (CategoryTheory.CategoryStruct.id a)) (List.cons (Exists fun x => CategoryTheory.Bicategory.LanLift.CommuteWith u (CategoryTheory.CategoryStruct.id a) u) List.nil))).TFAE","decl":"theorem isRightAdjoint_TFAE (u : b ⟶ a) :\n    List.TFAE [\n      IsRightAdjoint u,\n      HasAbsLeftKanLift u (𝟙 a),\n      ∃ _ : HasLeftKanLift u (𝟙 a), LanLift.CommuteWith u (𝟙 a) u] := by\n  tfae_have 1 → 2\n  | h => IsAbsKan.hasAbsLeftKanLift (Adjunction.ofIsRightAdjoint u).isAbsoluteLeftKanLift\n  tfae_have 2 → 3\n  | h => ⟨inferInstance, inferInstance⟩\n  tfae_have 3 → 1\n  | ⟨h, h'⟩ => .mk <| (lanLiftIsKan u (𝟙 a)).adjunction <| LanLift.CommuteWith.isKan u (𝟙 a) u\n  tfae_finish\n\n"}
{"name":"CategoryTheory.Bicategory.LeftExtension.instCommuteWithOfIsLeftAdjoint","module":"Mathlib.CategoryTheory.Bicategory.Kan.Adjunction","initialProofState":"B : Type u\ninst✝² : CategoryTheory.Bicategory B\na b c : B\nf : Quiver.Hom a b\ng : Quiver.Hom a c\nx : B\nh : Quiver.Hom c x\ninst✝¹ : CategoryTheory.Bicategory.IsLeftAdjoint h\ninst✝ : CategoryTheory.Bicategory.HasLeftKanExtension f g\n⊢ CategoryTheory.Bicategory.Lan.CommuteWith f g h","decl":"instance {f : a ⟶ b} {g : a ⟶ c} {x : B} {h : c ⟶ x} [IsLeftAdjoint h] [HasLeftKanExtension f g] :\n    Lan.CommuteWith f g h :=\n  ⟨⟨isKanOfWhiskerLeftAdjoint (lanIsKan f g) (Adjunction.ofIsLeftAdjoint h)⟩⟩\n\n"}
