{"name":"MeasureTheory.exists_nat_measurableEquiv_range_coe_fin_of_finite","module":"Mathlib.MeasureTheory.Constructions.Polish.EmbeddingReal","initialProofState":"α : Type u_1\ninst✝² : MeasurableSpace α\ninst✝¹ : StandardBorelSpace α\ninst✝ : Finite α\n⊢ Exists fun n => Nonempty (MeasurableEquiv α ↑(Set.range fun x => ↑↑x))","decl":"theorem exists_nat_measurableEquiv_range_coe_fin_of_finite [Finite α] :\n    ∃ n : ℕ, Nonempty (α ≃ᵐ range ((↑) : Fin n → ℝ)) := by\n  obtain ⟨n, ⟨n_equiv⟩⟩ := Finite.exists_equiv_fin α\n  refine ⟨n, ⟨PolishSpace.Equiv.measurableEquiv (n_equiv.trans ?_)⟩⟩\n  exact Equiv.ofInjective _ (Nat.cast_injective.comp Fin.val_injective)\n\n"}
{"name":"MeasureTheory.measurableEquiv_range_coe_nat_of_infinite_of_countable","module":"Mathlib.MeasureTheory.Constructions.Polish.EmbeddingReal","initialProofState":"α : Type u_1\ninst✝³ : MeasurableSpace α\ninst✝² : StandardBorelSpace α\ninst✝¹ : Infinite α\ninst✝ : Countable α\n⊢ Nonempty (MeasurableEquiv α ↑(Set.range Nat.cast))","decl":"theorem measurableEquiv_range_coe_nat_of_infinite_of_countable [Infinite α] [Countable α] :\n    Nonempty (α ≃ᵐ range ((↑) : ℕ → ℝ)) := by\n  have : PolishSpace (range ((↑) : ℕ → ℝ)) :=\n    Nat.isClosedEmbedding_coe_real.isClosedMap.isClosed_range.polishSpace\n  refine ⟨PolishSpace.Equiv.measurableEquiv ?_⟩\n  refine (nonempty_equiv_of_countable.some : α ≃ ℕ).trans ?_\n  exact Equiv.ofInjective ((↑) : ℕ → ℝ) Nat.cast_injective\n\n"}
{"name":"MeasureTheory.exists_subset_real_measurableEquiv","module":"Mathlib.MeasureTheory.Constructions.Polish.EmbeddingReal","initialProofState":"α : Type u_1\ninst✝¹ : MeasurableSpace α\ninst✝ : StandardBorelSpace α\n⊢ Exists fun s => And (MeasurableSet s) (Nonempty (MeasurableEquiv α ↑s))","decl":"/-- Any standard Borel space is measurably equivalent to a subset of the reals. -/\ntheorem exists_subset_real_measurableEquiv : ∃ s : Set ℝ, MeasurableSet s ∧ Nonempty (α ≃ᵐ s) := by\n  by_cases hα : Countable α\n  · cases finite_or_infinite α\n    · obtain ⟨n, h_nonempty_equiv⟩ := exists_nat_measurableEquiv_range_coe_fin_of_finite α\n      refine ⟨_, ?_, h_nonempty_equiv⟩\n      letI : MeasurableSpace (Fin n) := borel (Fin n)\n      haveI : BorelSpace (Fin n) := ⟨rfl⟩\n      apply MeasurableEmbedding.measurableSet_range (mα := by infer_instance)\n      exact continuous_of_discreteTopology.measurableEmbedding\n        (Nat.cast_injective.comp Fin.val_injective)\n    · refine ⟨_, ?_, measurableEquiv_range_coe_nat_of_infinite_of_countable α⟩\n      apply MeasurableEmbedding.measurableSet_range (mα := by infer_instance)\n      exact continuous_of_discreteTopology.measurableEmbedding Nat.cast_injective\n  · refine\n      ⟨univ, MeasurableSet.univ,\n        ⟨(PolishSpace.measurableEquivOfNotCountable hα ?_ : α ≃ᵐ (univ : Set ℝ))⟩⟩\n    rw [countable_coe_iff]\n    exact Cardinal.not_countable_real\n\n"}
{"name":"MeasureTheory.exists_measurableEmbedding_real","module":"Mathlib.MeasureTheory.Constructions.Polish.EmbeddingReal","initialProofState":"α : Type u_1\ninst✝¹ : MeasurableSpace α\ninst✝ : StandardBorelSpace α\n⊢ Exists fun f => MeasurableEmbedding f","decl":"/-- Any standard Borel space embeds measurably into the reals. -/\ntheorem exists_measurableEmbedding_real : ∃ f : α → ℝ, MeasurableEmbedding f := by\n  obtain ⟨s, hs, ⟨e⟩⟩ := exists_subset_real_measurableEquiv α\n  exact ⟨(↑) ∘ e, (MeasurableEmbedding.subtype_coe hs).comp e.measurableEmbedding⟩\n\n"}
{"name":"MeasureTheory.measurableEmbedding_embeddingReal","module":"Mathlib.MeasureTheory.Constructions.Polish.EmbeddingReal","initialProofState":"Ω : Type u_2\ninst✝¹ : MeasurableSpace Ω\ninst✝ : StandardBorelSpace Ω\n⊢ MeasurableEmbedding (MeasureTheory.embeddingReal Ω)","decl":"lemma measurableEmbedding_embeddingReal (Ω : Type*) [MeasurableSpace Ω] [StandardBorelSpace Ω] :\n    MeasurableEmbedding (embeddingReal Ω) :=\n  (exists_measurableEmbedding_real Ω).choose_spec\n\n"}
{"name":"MeasureTheory.measurable_embeddingReal","module":"Mathlib.MeasureTheory.Constructions.Polish.EmbeddingReal","initialProofState":"Ω : Type u_2\ninst✝¹ : MeasurableSpace Ω\ninst✝ : StandardBorelSpace Ω\n⊢ Measurable (MeasureTheory.embeddingReal Ω)","decl":"@[fun_prop]\nlemma measurable_embeddingReal (Ω : Type*) [MeasurableSpace Ω] [StandardBorelSpace Ω] :\n    Measurable (embeddingReal Ω) :=\n  (measurableEmbedding_embeddingReal Ω).measurable\n\n"}
