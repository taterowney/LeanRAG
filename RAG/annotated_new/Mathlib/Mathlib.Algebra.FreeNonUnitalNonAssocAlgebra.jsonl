{"name":"FreeNonUnitalNonAssocAlgebra.lift_symm_apply","module":"Mathlib.Algebra.FreeNonUnitalNonAssocAlgebra","initialProofState":"R : Type u\nX : Type v\ninst✝⁴ : Semiring R\nA : Type w\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nF : NonUnitalAlgHom (MonoidHom.id R) (FreeNonUnitalNonAssocAlgebra R X) A\n⊢ Eq ((FreeNonUnitalNonAssocAlgebra.lift R).symm F) (Function.comp (⇑F) (FreeNonUnitalNonAssocAlgebra.of R))","decl":"@[simp]\ntheorem lift_symm_apply (F : FreeNonUnitalNonAssocAlgebra R X →ₙₐ[R] A) :\n    (lift R).symm F = F ∘ of R := rfl\n\n"}
{"name":"FreeNonUnitalNonAssocAlgebra.of_comp_lift","module":"Mathlib.Algebra.FreeNonUnitalNonAssocAlgebra","initialProofState":"R : Type u\nX : Type v\ninst✝⁴ : Semiring R\nA : Type w\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nf : X → A\n⊢ Eq (Function.comp (⇑((FreeNonUnitalNonAssocAlgebra.lift R) f)) (FreeNonUnitalNonAssocAlgebra.of R)) f","decl":"@[simp]\ntheorem of_comp_lift (f : X → A) : lift R f ∘ of R = f :=\n  (lift R).left_inv f\n\n"}
{"name":"FreeNonUnitalNonAssocAlgebra.lift_unique","module":"Mathlib.Algebra.FreeNonUnitalNonAssocAlgebra","initialProofState":"R : Type u\nX : Type v\ninst✝⁴ : Semiring R\nA : Type w\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nf : X → A\nF : NonUnitalAlgHom (MonoidHom.id R) (FreeNonUnitalNonAssocAlgebra R X) A\n⊢ Iff (Eq (Function.comp (⇑F) (FreeNonUnitalNonAssocAlgebra.of R)) f) (Eq F ((FreeNonUnitalNonAssocAlgebra.lift R) f))","decl":"@[simp]\ntheorem lift_unique (f : X → A) (F : FreeNonUnitalNonAssocAlgebra R X →ₙₐ[R] A) :\n    F ∘ of R = f ↔ F = lift R f :=\n  (lift R).symm_apply_eq\n\n"}
{"name":"FreeNonUnitalNonAssocAlgebra.lift_of_apply","module":"Mathlib.Algebra.FreeNonUnitalNonAssocAlgebra","initialProofState":"R : Type u\nX : Type v\ninst✝⁴ : Semiring R\nA : Type w\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nf : X → A\nx : X\n⊢ Eq (((FreeNonUnitalNonAssocAlgebra.lift R) f) (FreeNonUnitalNonAssocAlgebra.of R x)) (f x)","decl":"@[simp]\ntheorem lift_of_apply (f : X → A) (x) : lift R f (of R x) = f x :=\n  congr_fun (of_comp_lift _ f) x\n\n"}
{"name":"FreeNonUnitalNonAssocAlgebra.lift_comp_of","module":"Mathlib.Algebra.FreeNonUnitalNonAssocAlgebra","initialProofState":"R : Type u\nX : Type v\ninst✝⁴ : Semiring R\nA : Type w\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nF : NonUnitalAlgHom (MonoidHom.id R) (FreeNonUnitalNonAssocAlgebra R X) A\n⊢ Eq ((FreeNonUnitalNonAssocAlgebra.lift R) (Function.comp (⇑F) (FreeNonUnitalNonAssocAlgebra.of R))) F","decl":"@[simp]\ntheorem lift_comp_of (F : FreeNonUnitalNonAssocAlgebra R X →ₙₐ[R] A) : lift R (F ∘ of R) = F :=\n  (lift R).apply_symm_apply F\n\n"}
{"name":"FreeNonUnitalNonAssocAlgebra.hom_ext_iff","module":"Mathlib.Algebra.FreeNonUnitalNonAssocAlgebra","initialProofState":"R : Type u\nX : Type v\ninst✝⁴ : Semiring R\nA : Type w\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nF₁ F₂ : NonUnitalAlgHom (MonoidHom.id R) (FreeNonUnitalNonAssocAlgebra R X) A\n⊢ Iff (Eq F₁ F₂) (∀ (x : X), Eq (F₁ (FreeNonUnitalNonAssocAlgebra.of R x)) (F₂ (FreeNonUnitalNonAssocAlgebra.of R x)))","decl":"@[ext]\ntheorem hom_ext {F₁ F₂ : FreeNonUnitalNonAssocAlgebra R X →ₙₐ[R] A}\n    (h : ∀ x, F₁ (of R x) = F₂ (of R x)) : F₁ = F₂ :=\n  (lift R).symm.injective <| funext h\n\n"}
{"name":"FreeNonUnitalNonAssocAlgebra.hom_ext","module":"Mathlib.Algebra.FreeNonUnitalNonAssocAlgebra","initialProofState":"R : Type u\nX : Type v\ninst✝⁴ : Semiring R\nA : Type w\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nF₁ F₂ : NonUnitalAlgHom (MonoidHom.id R) (FreeNonUnitalNonAssocAlgebra R X) A\nh : ∀ (x : X), Eq (F₁ (FreeNonUnitalNonAssocAlgebra.of R x)) (F₂ (FreeNonUnitalNonAssocAlgebra.of R x))\n⊢ Eq F₁ F₂","decl":"@[ext]\ntheorem hom_ext {F₁ F₂ : FreeNonUnitalNonAssocAlgebra R X →ₙₐ[R] A}\n    (h : ∀ x, F₁ (of R x) = F₂ (of R x)) : F₁ = F₂ :=\n  (lift R).symm.injective <| funext h\n\n"}
