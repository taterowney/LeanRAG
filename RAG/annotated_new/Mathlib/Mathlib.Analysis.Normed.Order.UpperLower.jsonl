{"name":"IsUpperSet.thickening'","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"α : Type u_1\ninst✝ : NormedOrderedGroup α\ns : Set α\nhs : IsUpperSet s\nε : Real\n⊢ IsUpperSet (Metric.thickening ε s)","decl":"@[to_additive IsUpperSet.thickening]\nprotected theorem IsUpperSet.thickening' (hs : IsUpperSet s) (ε : ℝ) :\n    IsUpperSet (thickening ε s) := by\n  rw [← ball_mul_one]\n  exact hs.mul_left\n\n"}
{"name":"IsUpperSet.thickening","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"α : Type u_1\ninst✝ : NormedOrderedAddGroup α\ns : Set α\nhs : IsUpperSet s\nε : Real\n⊢ IsUpperSet (Metric.thickening ε s)","decl":"@[to_additive IsUpperSet.thickening]\nprotected theorem IsUpperSet.thickening' (hs : IsUpperSet s) (ε : ℝ) :\n    IsUpperSet (thickening ε s) := by\n  rw [← ball_mul_one]\n  exact hs.mul_left\n\n"}
{"name":"IsLowerSet.thickening","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"α : Type u_1\ninst✝ : NormedOrderedAddGroup α\ns : Set α\nhs : IsLowerSet s\nε : Real\n⊢ IsLowerSet (Metric.thickening ε s)","decl":"@[to_additive IsLowerSet.thickening]\nprotected theorem IsLowerSet.thickening' (hs : IsLowerSet s) (ε : ℝ) :\n    IsLowerSet (thickening ε s) := by\n  rw [← ball_mul_one]\n  exact hs.mul_left\n\n"}
{"name":"IsLowerSet.thickening'","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"α : Type u_1\ninst✝ : NormedOrderedGroup α\ns : Set α\nhs : IsLowerSet s\nε : Real\n⊢ IsLowerSet (Metric.thickening ε s)","decl":"@[to_additive IsLowerSet.thickening]\nprotected theorem IsLowerSet.thickening' (hs : IsLowerSet s) (ε : ℝ) :\n    IsLowerSet (thickening ε s) := by\n  rw [← ball_mul_one]\n  exact hs.mul_left\n\n"}
{"name":"IsUpperSet.cthickening","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"α : Type u_1\ninst✝ : NormedOrderedAddGroup α\ns : Set α\nhs : IsUpperSet s\nε : Real\n⊢ IsUpperSet (Metric.cthickening ε s)","decl":"@[to_additive IsUpperSet.cthickening]\nprotected theorem IsUpperSet.cthickening' (hs : IsUpperSet s) (ε : ℝ) :\n    IsUpperSet (cthickening ε s) := by\n  rw [cthickening_eq_iInter_thickening'']\n  exact isUpperSet_iInter₂ fun δ _ => hs.thickening' _\n\n"}
{"name":"IsUpperSet.cthickening'","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"α : Type u_1\ninst✝ : NormedOrderedGroup α\ns : Set α\nhs : IsUpperSet s\nε : Real\n⊢ IsUpperSet (Metric.cthickening ε s)","decl":"@[to_additive IsUpperSet.cthickening]\nprotected theorem IsUpperSet.cthickening' (hs : IsUpperSet s) (ε : ℝ) :\n    IsUpperSet (cthickening ε s) := by\n  rw [cthickening_eq_iInter_thickening'']\n  exact isUpperSet_iInter₂ fun δ _ => hs.thickening' _\n\n"}
{"name":"IsLowerSet.cthickening'","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"α : Type u_1\ninst✝ : NormedOrderedGroup α\ns : Set α\nhs : IsLowerSet s\nε : Real\n⊢ IsLowerSet (Metric.cthickening ε s)","decl":"@[to_additive IsLowerSet.cthickening]\nprotected theorem IsLowerSet.cthickening' (hs : IsLowerSet s) (ε : ℝ) :\n    IsLowerSet (cthickening ε s) := by\n  rw [cthickening_eq_iInter_thickening'']\n  exact isLowerSet_iInter₂ fun δ _ => hs.thickening' _\n\n"}
{"name":"IsLowerSet.cthickening","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"α : Type u_1\ninst✝ : NormedOrderedAddGroup α\ns : Set α\nhs : IsLowerSet s\nε : Real\n⊢ IsLowerSet (Metric.cthickening ε s)","decl":"@[to_additive IsLowerSet.cthickening]\nprotected theorem IsLowerSet.cthickening' (hs : IsLowerSet s) (ε : ℝ) :\n    IsLowerSet (cthickening ε s) := by\n  rw [cthickening_eq_iInter_thickening'']\n  exact isLowerSet_iInter₂ fun δ _ => hs.thickening' _\n\n"}
{"name":"upperClosure_interior_subset","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"α : Type u_1\ninst✝ : NormedOrderedAddGroup α\ns : Set α\n⊢ HasSubset.Subset (↑(upperClosure (interior s))) (interior ↑(upperClosure s))","decl":"@[to_additive upperClosure_interior_subset] lemma upperClosure_interior_subset' (s : Set α) :\n    (upperClosure (interior s) : Set α) ⊆ interior (upperClosure s) :=\n  upperClosure_min (interior_mono subset_upperClosure) (upperClosure s).upper.interior\n\n"}
{"name":"upperClosure_interior_subset'","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"α : Type u_1\ninst✝ : NormedOrderedGroup α\ns : Set α\n⊢ HasSubset.Subset (↑(upperClosure (interior s))) (interior ↑(upperClosure s))","decl":"@[to_additive upperClosure_interior_subset] lemma upperClosure_interior_subset' (s : Set α) :\n    (upperClosure (interior s) : Set α) ⊆ interior (upperClosure s) :=\n  upperClosure_min (interior_mono subset_upperClosure) (upperClosure s).upper.interior\n\n"}
{"name":"lowerClosure_interior_subset","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"α : Type u_1\ninst✝ : NormedOrderedAddGroup α\ns : Set α\n⊢ HasSubset.Subset (↑(lowerClosure (interior s))) (interior ↑(lowerClosure s))","decl":"@[to_additive lowerClosure_interior_subset] lemma lowerClosure_interior_subset' (s : Set α) :\n    (lowerClosure (interior s) : Set α) ⊆ interior (lowerClosure s) :=\n  lowerClosure_min (interior_mono subset_lowerClosure) (lowerClosure s).lower.interior\n\n"}
{"name":"lowerClosure_interior_subset'","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"α : Type u_1\ninst✝ : NormedOrderedGroup α\ns : Set α\n⊢ HasSubset.Subset (↑(lowerClosure (interior s))) (interior ↑(lowerClosure s))","decl":"@[to_additive lowerClosure_interior_subset] lemma lowerClosure_interior_subset' (s : Set α) :\n    (lowerClosure (interior s) : Set α) ⊆ interior (lowerClosure s) :=\n  lowerClosure_min (interior_mono subset_lowerClosure) (lowerClosure s).lower.interior\n\n"}
{"name":"IsUpperSet.mem_interior_of_forall_lt","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"ι : Type u_2\ninst✝ : Finite ι\ns : Set (ι → Real)\nx y : ι → Real\nhs : IsUpperSet s\nhx : Membership.mem (closure s) x\nh : ∀ (i : ι), LT.lt (x i) (y i)\n⊢ Membership.mem (interior s) y","decl":"theorem IsUpperSet.mem_interior_of_forall_lt (hs : IsUpperSet s) (hx : x ∈ closure s)\n    (h : ∀ i, x i < y i) : y ∈ interior s := by\n  cases nonempty_fintype ι\n  obtain ⟨ε, hε, hxy⟩ := Pi.exists_forall_pos_add_lt h\n  obtain ⟨z, hz, hxz⟩ := Metric.mem_closure_iff.1 hx _ hε\n  rw [dist_pi_lt_iff hε] at hxz\n  have hyz : ∀ i, z i < y i := by\n    refine fun i => (hxy _).trans_le' (sub_le_iff_le_add'.1 <| (le_abs_self _).trans ?_)\n    rw [← Real.norm_eq_abs, ← dist_eq_norm']\n    exact (hxz _).le\n  obtain ⟨δ, hδ, hyz⟩ := Pi.exists_forall_pos_add_lt hyz\n  refine mem_interior.2 ⟨ball y δ, ?_, isOpen_ball, mem_ball_self hδ⟩\n  rintro w hw\n  refine hs (fun i => ?_) hz\n  simp_rw [ball_pi _ hδ, Real.ball_eq_Ioo] at hw\n  exact ((lt_sub_iff_add_lt.2 <| hyz _).trans (hw _ <| mem_univ _).1).le\n\n"}
{"name":"IsLowerSet.mem_interior_of_forall_lt","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"ι : Type u_2\ninst✝ : Finite ι\ns : Set (ι → Real)\nx y : ι → Real\nhs : IsLowerSet s\nhx : Membership.mem (closure s) x\nh : ∀ (i : ι), LT.lt (y i) (x i)\n⊢ Membership.mem (interior s) y","decl":"theorem IsLowerSet.mem_interior_of_forall_lt (hs : IsLowerSet s) (hx : x ∈ closure s)\n    (h : ∀ i, y i < x i) : y ∈ interior s := by\n  cases nonempty_fintype ι\n  obtain ⟨ε, hε, hxy⟩ := Pi.exists_forall_pos_add_lt h\n  obtain ⟨z, hz, hxz⟩ := Metric.mem_closure_iff.1 hx _ hε\n  rw [dist_pi_lt_iff hε] at hxz\n  have hyz : ∀ i, y i < z i := by\n    refine fun i =>\n      (lt_sub_iff_add_lt.2 <| hxy _).trans_le (sub_le_comm.1 <| (le_abs_self _).trans ?_)\n    rw [← Real.norm_eq_abs, ← dist_eq_norm]\n    exact (hxz _).le\n  obtain ⟨δ, hδ, hyz⟩ := Pi.exists_forall_pos_add_lt hyz\n  refine mem_interior.2 ⟨ball y δ, ?_, isOpen_ball, mem_ball_self hδ⟩\n  rintro w hw\n  refine hs (fun i => ?_) hz\n  simp_rw [ball_pi _ hδ, Real.ball_eq_Ioo] at hw\n  exact ((hw _ <| mem_univ _).2.trans <| hyz _).le\n\n"}
{"name":"dist_inf_sup_pi","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"ι : Type u_2\ninst✝ : Fintype ι\nx y : ι → Real\n⊢ Eq (Dist.dist (Min.min x y) (Max.max x y)) (Dist.dist x y)","decl":"lemma dist_inf_sup_pi (x y : ι → ℝ) : dist (x ⊓ y) (x ⊔ y) = dist x y := by\n  refine congr_arg NNReal.toReal (Finset.sup_congr rfl fun i _ ↦ ?_)\n  simp only [Real.nndist_eq', max_sub_min_eq_abs, Pi.inf_apply,\n    Pi.sup_apply, Real.nnabs_of_nonneg, abs_nonneg, Real.toNNReal_abs]\n\n"}
{"name":"dist_mono_left_pi","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"ι : Type u_2\ninst✝ : Fintype ι\ny : ι → Real\n⊢ MonotoneOn (fun x => Dist.dist x y) (Set.Ici y)","decl":"lemma dist_mono_left_pi : MonotoneOn (dist · y) (Ici y) := by\n  refine fun y₁ hy₁ y₂ hy₂ hy ↦ NNReal.coe_le_coe.2 (Finset.sup_mono_fun fun i _ ↦ ?_)\n  rw [Real.nndist_eq, Real.nnabs_of_nonneg (sub_nonneg_of_le (‹y ≤ _› i : y i ≤ y₁ i)),\n    Real.nndist_eq, Real.nnabs_of_nonneg (sub_nonneg_of_le (‹y ≤ _› i : y i ≤ y₂ i))]\n  exact Real.toNNReal_mono (sub_le_sub_right (hy _) _)\n\n"}
{"name":"dist_mono_right_pi","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"ι : Type u_2\ninst✝ : Fintype ι\nx : ι → Real\n⊢ MonotoneOn (Dist.dist x) (Set.Ici x)","decl":"lemma dist_mono_right_pi : MonotoneOn (dist x) (Ici x) := by\n  simpa only [dist_comm _ x] using dist_mono_left_pi (y := x)\n\n"}
{"name":"dist_anti_left_pi","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"ι : Type u_2\ninst✝ : Fintype ι\ny : ι → Real\n⊢ AntitoneOn (fun x => Dist.dist x y) (Set.Iic y)","decl":"lemma dist_anti_left_pi : AntitoneOn (dist · y) (Iic y) := by\n  refine fun y₁ hy₁ y₂ hy₂ hy ↦ NNReal.coe_le_coe.2 (Finset.sup_mono_fun fun i _ ↦ ?_)\n  rw [Real.nndist_eq', Real.nnabs_of_nonneg (sub_nonneg_of_le (‹_ ≤ y› i : y₂ i ≤ y i)),\n    Real.nndist_eq', Real.nnabs_of_nonneg (sub_nonneg_of_le (‹_ ≤ y› i : y₁ i ≤ y i))]\n  exact Real.toNNReal_mono (sub_le_sub_left (hy _) _)\n\n"}
{"name":"dist_anti_right_pi","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"ι : Type u_2\ninst✝ : Fintype ι\nx : ι → Real\n⊢ AntitoneOn (Dist.dist x) (Set.Iic x)","decl":"lemma dist_anti_right_pi : AntitoneOn (dist x) (Iic x) := by\n  simpa only [dist_comm] using dist_anti_left_pi (y := x)\n\n"}
{"name":"dist_le_dist_of_le_pi","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"ι : Type u_2\ninst✝ : Fintype ι\na₁ a₂ b₁ b₂ : ι → Real\nha : LE.le a₂ a₁\nh₁ : LE.le a₁ b₁\nhb : LE.le b₁ b₂\n⊢ LE.le (Dist.dist a₁ b₁) (Dist.dist a₂ b₂)","decl":"lemma dist_le_dist_of_le_pi (ha : a₂ ≤ a₁) (h₁ : a₁ ≤ b₁) (hb : b₁ ≤ b₂) :\n    dist a₁ b₁ ≤ dist a₂ b₂ :=\n  (dist_mono_right_pi h₁ (h₁.trans hb) hb).trans <|\n    dist_anti_left_pi (ha.trans <| h₁.trans hb) (h₁.trans hb) ha\n\n"}
{"name":"IsUpperSet.exists_subset_ball","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"ι : Type u_2\ninst✝ : Fintype ι\ns : Set (ι → Real)\nx : ι → Real\nδ : Real\nhs : IsUpperSet s\nhx : Membership.mem (closure s) x\nhδ : LT.lt 0 δ\n⊢ Exists fun y => And (HasSubset.Subset (Metric.closedBall y (HDiv.hDiv δ 4)) (Metric.closedBall x δ)) (HasSubset.Subset (Metric.closedBall y (HDiv.hDiv δ 4)) (interior s))","decl":"theorem IsUpperSet.exists_subset_ball (hs : IsUpperSet s) (hx : x ∈ closure s) (hδ : 0 < δ) :\n    ∃ y, closedBall y (δ / 4) ⊆ closedBall x δ ∧ closedBall y (δ / 4) ⊆ interior s := by\n  refine ⟨x + const _ (3 / 4 * δ), closedBall_subset_closedBall' ?_, ?_⟩\n  · rw [dist_self_add_left]\n    refine (add_le_add_left (pi_norm_const_le <| 3 / 4 * δ) _).trans_eq ?_\n    simp only [norm_mul, norm_div, Real.norm_eq_abs]\n    simp only [gt_iff_lt, zero_lt_three, abs_of_pos, zero_lt_four, abs_of_pos hδ]\n    ring\n  obtain ⟨y, hy, hxy⟩ := Metric.mem_closure_iff.1 hx _ (div_pos hδ zero_lt_four)\n  refine fun z hz => hs.mem_interior_of_forall_lt (subset_closure hy) fun i => ?_\n  rw [mem_closedBall, dist_eq_norm'] at hz\n  rw [dist_eq_norm] at hxy\n  replace hxy := (norm_le_pi_norm _ i).trans hxy.le\n  replace hz := (norm_le_pi_norm _ i).trans hz\n  dsimp at hxy hz\n  rw [abs_sub_le_iff] at hxy hz\n  linarith\n\n"}
{"name":"IsLowerSet.exists_subset_ball","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"ι : Type u_2\ninst✝ : Fintype ι\ns : Set (ι → Real)\nx : ι → Real\nδ : Real\nhs : IsLowerSet s\nhx : Membership.mem (closure s) x\nhδ : LT.lt 0 δ\n⊢ Exists fun y => And (HasSubset.Subset (Metric.closedBall y (HDiv.hDiv δ 4)) (Metric.closedBall x δ)) (HasSubset.Subset (Metric.closedBall y (HDiv.hDiv δ 4)) (interior s))","decl":"theorem IsLowerSet.exists_subset_ball (hs : IsLowerSet s) (hx : x ∈ closure s) (hδ : 0 < δ) :\n    ∃ y, closedBall y (δ / 4) ⊆ closedBall x δ ∧ closedBall y (δ / 4) ⊆ interior s := by\n  refine ⟨x - const _ (3 / 4 * δ), closedBall_subset_closedBall' ?_, ?_⟩\n  · rw [dist_self_sub_left]\n    refine (add_le_add_left (pi_norm_const_le <| 3 / 4 * δ) _).trans_eq ?_\n    simp only [norm_mul, norm_div, Real.norm_eq_abs, gt_iff_lt, zero_lt_three, abs_of_pos,\n      zero_lt_four, abs_of_pos hδ]\n    ring\n  obtain ⟨y, hy, hxy⟩ := Metric.mem_closure_iff.1 hx _ (div_pos hδ zero_lt_four)\n  refine fun z hz => hs.mem_interior_of_forall_lt (subset_closure hy) fun i => ?_\n  rw [mem_closedBall, dist_eq_norm'] at hz\n  rw [dist_eq_norm] at hxy\n  replace hxy := (norm_le_pi_norm _ i).trans hxy.le\n  replace hz := (norm_le_pi_norm _ i).trans hz\n  dsimp at hxy hz\n  rw [abs_sub_le_iff] at hxy hz\n  linarith\n\n"}
{"name":"IsClosed.upperClosure_pi","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"ι : Type u_2\ninst✝ : Finite ι\ns : Set (ι → Real)\nhs : IsClosed s\nhs' : BddBelow s\n⊢ IsClosed ↑(upperClosure s)","decl":"protected lemma IsClosed.upperClosure_pi (hs : IsClosed s) (hs' : BddBelow s) :\n    IsClosed (upperClosure s : Set (ι → ℝ)) := by\n  cases nonempty_fintype ι\n  refine IsSeqClosed.isClosed fun f x hf hx ↦ ?_\n  choose g hg hgf using hf\n  obtain ⟨a, ha⟩ := hx.bddAbove_range\n  obtain ⟨b, hb, φ, hφ, hbf⟩ := tendsto_subseq_of_bounded (hs'.isBounded_inter bddAbove_Iic) fun n ↦\n    ⟨hg n, (hgf _).trans <| ha <| mem_range_self _⟩\n  exact ⟨b, closure_minimal inter_subset_left hs hb,\n    le_of_tendsto_of_tendsto' hbf (hx.comp hφ.tendsto_atTop) fun _ ↦ hgf _⟩\n\n"}
{"name":"IsClosed.lowerClosure_pi","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"ι : Type u_2\ninst✝ : Finite ι\ns : Set (ι → Real)\nhs : IsClosed s\nhs' : BddAbove s\n⊢ IsClosed ↑(lowerClosure s)","decl":"protected lemma IsClosed.lowerClosure_pi (hs : IsClosed s) (hs' : BddAbove s) :\n    IsClosed (lowerClosure s : Set (ι → ℝ)) := by\n  cases nonempty_fintype ι\n  refine IsSeqClosed.isClosed fun f x hf hx ↦ ?_\n  choose g hg hfg using hf\n  haveI : BoundedGENhdsClass ℝ := by infer_instance\n  obtain ⟨a, ha⟩ := hx.bddBelow_range\n  obtain ⟨b, hb, φ, hφ, hbf⟩ := tendsto_subseq_of_bounded (hs'.isBounded_inter bddBelow_Ici) fun n ↦\n    ⟨hg n, (ha <| mem_range_self _).trans <| hfg _⟩\n  exact ⟨b, closure_minimal inter_subset_left hs hb,\n    le_of_tendsto_of_tendsto' (hx.comp hφ.tendsto_atTop) hbf fun _ ↦ hfg _⟩\n\n"}
{"name":"IsClopen.upperClosure_pi","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"ι : Type u_2\ninst✝ : Finite ι\ns : Set (ι → Real)\nhs : IsClopen s\nhs' : BddBelow s\n⊢ IsClopen ↑(upperClosure s)","decl":"protected lemma IsClopen.upperClosure_pi (hs : IsClopen s) (hs' : BddBelow s) :\n    IsClopen (upperClosure s : Set (ι → ℝ)) := ⟨hs.1.upperClosure_pi hs', hs.2.upperClosure⟩\n\n"}
{"name":"IsClopen.lowerClosure_pi","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"ι : Type u_2\ninst✝ : Finite ι\ns : Set (ι → Real)\nhs : IsClopen s\nhs' : BddAbove s\n⊢ IsClopen ↑(lowerClosure s)","decl":"protected lemma IsClopen.lowerClosure_pi (hs : IsClopen s) (hs' : BddAbove s) :\n    IsClopen (lowerClosure s : Set (ι → ℝ)) := ⟨hs.1.lowerClosure_pi hs', hs.2.lowerClosure⟩\n\n"}
{"name":"closure_upperClosure_comm_pi","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"ι : Type u_2\ninst✝ : Finite ι\ns : Set (ι → Real)\nhs : BddBelow s\n⊢ Eq (closure ↑(upperClosure s)) ↑(upperClosure (closure s))","decl":"lemma closure_upperClosure_comm_pi (hs : BddBelow s) :\n    closure (upperClosure s : Set (ι → ℝ)) = upperClosure (closure s) :=\n  (closure_minimal (upperClosure_anti subset_closure) <|\n      isClosed_closure.upperClosure_pi hs.closure).antisymm <|\n    upperClosure_min (closure_mono subset_upperClosure) (upperClosure s).upper.closure\n\n"}
{"name":"closure_lowerClosure_comm_pi","module":"Mathlib.Analysis.Normed.Order.UpperLower","initialProofState":"ι : Type u_2\ninst✝ : Finite ι\ns : Set (ι → Real)\nhs : BddAbove s\n⊢ Eq (closure ↑(lowerClosure s)) ↑(lowerClosure (closure s))","decl":"lemma closure_lowerClosure_comm_pi (hs : BddAbove s) :\n    closure (lowerClosure s : Set (ι → ℝ)) = lowerClosure (closure s) :=\n  (closure_minimal (lowerClosure_mono subset_closure) <|\n        isClosed_closure.lowerClosure_pi hs.closure).antisymm <|\n    lowerClosure_min (closure_mono subset_lowerClosure) (lowerClosure s).lower.closure\n\n"}
