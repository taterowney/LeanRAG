{"name":"RingHom.smulOneHom_apply","module":"Mathlib.Algebra.Module.RingHom","initialProofState":"R : Type u_1\nS : Type u_2\ninst✝³ : Semiring R\ninst✝² : NonAssocSemiring S\ninst✝¹ : Module R S\ninst✝ : IsScalarTower R S S\nx : R\n⊢ Eq (RingHom.smulOneHom x) (HSMul.hSMul x 1)","decl":"/-- If the module action of `R` on `S` is compatible with multiplication on `S`, then\n`fun x ↦ x • 1` is a ring homomorphism from `R` to `S`.\n\nThis is the `RingHom` version of `MonoidHom.smulOneHom`.\n\nWhen `R` is commutative, usually `algebraMap` should be preferred. -/\n@[simps!] def RingHom.smulOneHom\n    [Semiring R] [NonAssocSemiring S] [Module R S] [IsScalarTower R S S] : R →+* S where\n  __ := MonoidHom.smulOneHom\n  map_zero' := zero_smul R 1\n  map_add' := (add_smul · · 1)\n\n"}
