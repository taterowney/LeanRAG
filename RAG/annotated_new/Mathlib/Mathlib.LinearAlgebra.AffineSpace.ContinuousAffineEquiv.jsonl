{"name":"ContinuousAffineEquiv.continuous_invFun","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_4\nV₂ : Type u_5\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : TopologicalSpace P₁\ninst✝³ : AddCommGroup V₂\ninst✝² : Module k V₂\ninst✝¹ : AddTorsor V₂ P₂\ninst✝ : TopologicalSpace P₂\nself : ContinuousAffineEquiv k P₁ P₂\n⊢ Continuous self.invFun","decl":"/-- A continuous affine equivalence, denoted `P₁ ≃ᵃL[k] P₂`, between two affine topological spaces\nis an affine equivalence such that forward and inverse maps are continuous. -/\nstructure ContinuousAffineEquiv (k P₁ P₂ : Type*) {V₁ V₂ : Type*} [Ring k]\n    [AddCommGroup V₁] [Module k V₁] [AddTorsor V₁ P₁] [TopologicalSpace P₁]\n    [AddCommGroup V₂] [Module k V₂] [AddTorsor V₂ P₂] [TopologicalSpace P₂]\n    extends P₁ ≃ᵃ[k] P₂ where\n  continuous_toFun : Continuous toFun := by continuity\n  continuous_invFun : Continuous invFun := by continuity\n\n"}
{"name":"ContinuousAffineEquiv.continuous_toFun","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_4\nV₂ : Type u_5\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : TopologicalSpace P₁\ninst✝³ : AddCommGroup V₂\ninst✝² : Module k V₂\ninst✝¹ : AddTorsor V₂ P₂\ninst✝ : TopologicalSpace P₂\nself : ContinuousAffineEquiv k P₁ P₂\n⊢ Continuous self.toFun","decl":"/-- A continuous affine equivalence, denoted `P₁ ≃ᵃL[k] P₂`, between two affine topological spaces\nis an affine equivalence such that forward and inverse maps are continuous. -/\nstructure ContinuousAffineEquiv (k P₁ P₂ : Type*) {V₁ V₂ : Type*} [Ring k]\n    [AddCommGroup V₁] [Module k V₁] [AddTorsor V₁ P₁] [TopologicalSpace P₁]\n    [AddCommGroup V₂] [Module k V₂] [AddTorsor V₂ P₂] [TopologicalSpace P₂]\n    extends P₁ ≃ᵃ[k] P₂ where\n  continuous_toFun : Continuous toFun := by continuity\n  continuous_invFun : Continuous invFun := by continuity\n\n"}
{"name":"ContinuousAffineEquiv.mk.sizeOf_spec","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_4\nV₂ : Type u_5\ninst✝¹³ : Ring k\ninst✝¹² : AddCommGroup V₁\ninst✝¹¹ : Module k V₁\ninst✝¹⁰ : AddTorsor V₁ P₁\ninst✝⁹ : TopologicalSpace P₁\ninst✝⁸ : AddCommGroup V₂\ninst✝⁷ : Module k V₂\ninst✝⁶ : AddTorsor V₂ P₂\ninst✝⁵ : TopologicalSpace P₂\ninst✝⁴ : SizeOf k\ninst✝³ : SizeOf P₁\ninst✝² : SizeOf P₂\ninst✝¹ : SizeOf V₁\ninst✝ : SizeOf V₂\ntoAffineEquiv : AffineEquiv k P₁ P₂\ncontinuous_toFun : autoParam (Continuous toAffineEquiv.toFun) _auto✝\ncontinuous_invFun : autoParam (Continuous toAffineEquiv.invFun) _auto✝\n⊢ Eq (SizeOf.sizeOf { toAffineEquiv := toAffineEquiv, continuous_toFun := continuous_toFun, continuous_invFun := continuous_invFun }) (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd 1 (SizeOf.sizeOf toAffineEquiv)) (SizeOf.sizeOf continuous_toFun)) (SizeOf.sizeOf continuous_invFun))","decl":"/-- A continuous affine equivalence, denoted `P₁ ≃ᵃL[k] P₂`, between two affine topological spaces\nis an affine equivalence such that forward and inverse maps are continuous. -/\nstructure ContinuousAffineEquiv (k P₁ P₂ : Type*) {V₁ V₂ : Type*} [Ring k]\n    [AddCommGroup V₁] [Module k V₁] [AddTorsor V₁ P₁] [TopologicalSpace P₁]\n    [AddCommGroup V₂] [Module k V₂] [AddTorsor V₂ P₂] [TopologicalSpace P₂]\n    extends P₁ ≃ᵃ[k] P₂ where\n  continuous_toFun : Continuous toFun := by continuity\n  continuous_invFun : Continuous invFun := by continuity\n\n"}
{"name":"ContinuousAffineEquiv.mk.inj","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_4\nV₂ : Type u_5\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : TopologicalSpace P₁\ninst✝³ : AddCommGroup V₂\ninst✝² : Module k V₂\ninst✝¹ : AddTorsor V₂ P₂\ninst✝ : TopologicalSpace P₂\ntoAffineEquiv✝ : AffineEquiv k P₁ P₂\ncontinuous_toFun✝ : autoParam (Continuous toAffineEquiv✝.toFun) _auto✝\ncontinuous_invFun✝ : autoParam (Continuous toAffineEquiv✝.invFun) _auto✝\ntoAffineEquiv : AffineEquiv k P₁ P₂\ncontinuous_toFun : autoParam (Continuous toAffineEquiv.toFun) _auto✝\ncontinuous_invFun : autoParam (Continuous toAffineEquiv.invFun) _auto✝\nx✝ : Eq { toAffineEquiv := toAffineEquiv✝, continuous_toFun := continuous_toFun✝, continuous_invFun := continuous_invFun✝ } { toAffineEquiv := toAffineEquiv, continuous_toFun := continuous_toFun, continuous_invFun := continuous_invFun }\n⊢ Eq toAffineEquiv✝ toAffineEquiv","decl":"/-- A continuous affine equivalence, denoted `P₁ ≃ᵃL[k] P₂`, between two affine topological spaces\nis an affine equivalence such that forward and inverse maps are continuous. -/\nstructure ContinuousAffineEquiv (k P₁ P₂ : Type*) {V₁ V₂ : Type*} [Ring k]\n    [AddCommGroup V₁] [Module k V₁] [AddTorsor V₁ P₁] [TopologicalSpace P₁]\n    [AddCommGroup V₂] [Module k V₂] [AddTorsor V₂ P₂] [TopologicalSpace P₂]\n    extends P₁ ≃ᵃ[k] P₂ where\n  continuous_toFun : Continuous toFun := by continuity\n  continuous_invFun : Continuous invFun := by continuity\n\n"}
{"name":"ContinuousAffineEquiv.mk.injEq","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_4\nV₂ : Type u_5\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : TopologicalSpace P₁\ninst✝³ : AddCommGroup V₂\ninst✝² : Module k V₂\ninst✝¹ : AddTorsor V₂ P₂\ninst✝ : TopologicalSpace P₂\ntoAffineEquiv✝ : AffineEquiv k P₁ P₂\ncontinuous_toFun✝ : autoParam (Continuous toAffineEquiv✝.toFun) _auto✝\ncontinuous_invFun✝ : autoParam (Continuous toAffineEquiv✝.invFun) _auto✝\ntoAffineEquiv : AffineEquiv k P₁ P₂\ncontinuous_toFun : autoParam (Continuous toAffineEquiv.toFun) _auto✝\ncontinuous_invFun : autoParam (Continuous toAffineEquiv.invFun) _auto✝\n⊢ Eq (Eq { toAffineEquiv := toAffineEquiv✝, continuous_toFun := continuous_toFun✝, continuous_invFun := continuous_invFun✝ } { toAffineEquiv := toAffineEquiv, continuous_toFun := continuous_toFun, continuous_invFun := continuous_invFun }) (Eq toAffineEquiv✝ toAffineEquiv)","decl":"/-- A continuous affine equivalence, denoted `P₁ ≃ᵃL[k] P₂`, between two affine topological spaces\nis an affine equivalence such that forward and inverse maps are continuous. -/\nstructure ContinuousAffineEquiv (k P₁ P₂ : Type*) {V₁ V₂ : Type*} [Ring k]\n    [AddCommGroup V₁] [Module k V₁] [AddTorsor V₁ P₁] [TopologicalSpace P₁]\n    [AddCommGroup V₂] [Module k V₂] [AddTorsor V₂ P₂] [TopologicalSpace P₂]\n    extends P₁ ≃ᵃ[k] P₂ where\n  continuous_toFun : Continuous toFun := by continuity\n  continuous_invFun : Continuous invFun := by continuity\n\n"}
{"name":"ContinuousAffineEquiv.toAffineEquiv_injective","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\n⊢ Function.Injective ContinuousAffineEquiv.toAffineEquiv","decl":"theorem toAffineEquiv_injective : Injective (toAffineEquiv : (P₁ ≃ᵃL[k] P₂) → P₁ ≃ᵃ[k] P₂) := by\n  rintro ⟨e, econt, einv_cont⟩ ⟨e', e'cont, e'inv_cont⟩ H\n  congr\n\n"}
{"name":"ContinuousAffineEquiv.coe_injective","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\n⊢ Function.Injective ContinuousAffineEquiv.toAffineEquiv","decl":"theorem coe_injective : Function.Injective ((↑) : (P₁ ≃ᵃL[k] P₂) → P₁ ≃ᵃ[k] P₂) := by\n  intro e e' H\n  cases e\n  congr\n\n"}
{"name":"ContinuousAffineEquiv.coe_coe","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne : ContinuousAffineEquiv k P₁ P₂\n⊢ Eq ⇑↑e ⇑e","decl":"@[simp, norm_cast]\ntheorem coe_coe (e : P₁ ≃ᵃL[k] P₂) : ⇑(e : P₁ ≃ᵃ[k] P₂) = e :=\n  rfl\n\n"}
{"name":"ContinuousAffineEquiv.coe_toEquiv","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne : ContinuousAffineEquiv k P₁ P₂\n⊢ Eq ⇑(↑e).toEquiv ⇑e","decl":"@[simp]\ntheorem coe_toEquiv (e : P₁ ≃ᵃL[k] P₂) : ⇑e.toEquiv = e :=\n  rfl\n\n"}
{"name":"ContinuousAffineEquiv.ext","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne e' : ContinuousAffineEquiv k P₁ P₂\nh : ∀ (x : P₁), Eq (e x) (e' x)\n⊢ Eq e e'","decl":"@[ext]\ntheorem ext {e e' : P₁ ≃ᵃL[k] P₂} (h : ∀ x, e x = e' x) : e = e' :=\n  DFunLike.ext _ _ h\n\n"}
{"name":"ContinuousAffineEquiv.ext_iff","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne e' : ContinuousAffineEquiv k P₁ P₂\n⊢ Iff (Eq e e') (∀ (x : P₁), Eq (e x) (e' x))","decl":"@[ext]\ntheorem ext {e e' : P₁ ≃ᵃL[k] P₂} (h : ∀ x, e x = e' x) : e = e' :=\n  DFunLike.ext _ _ h\n\n"}
{"name":"ContinuousAffineEquiv.continuous","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne : ContinuousAffineEquiv k P₁ P₂\n⊢ Continuous ⇑e","decl":"@[continuity]\nprotected theorem continuous (e : P₁ ≃ᵃL[k] P₂) : Continuous e :=\n  e.2\n\n"}
{"name":"ContinuousAffineEquiv.coe_refl","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nV₁ : Type u_6\ninst✝⁴ : Ring k\ninst✝³ : AddCommGroup V₁\ninst✝² : Module k V₁\ninst✝¹ : AddTorsor V₁ P₁\ninst✝ : TopologicalSpace P₁\n⊢ Eq (⇑(ContinuousAffineEquiv.refl k P₁)) id","decl":"@[simp]\ntheorem coe_refl : ⇑(refl k P₁) = id :=\n  rfl\n\n"}
{"name":"ContinuousAffineEquiv.refl_apply","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nV₁ : Type u_6\ninst✝⁴ : Ring k\ninst✝³ : AddCommGroup V₁\ninst✝² : Module k V₁\ninst✝¹ : AddTorsor V₁ P₁\ninst✝ : TopologicalSpace P₁\nx : P₁\n⊢ Eq ((ContinuousAffineEquiv.refl k P₁) x) x","decl":"@[simp]\ntheorem refl_apply (x : P₁) : refl k P₁ x = x :=\n  rfl\n\n"}
{"name":"ContinuousAffineEquiv.toAffineEquiv_refl","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nV₁ : Type u_6\ninst✝⁴ : Ring k\ninst✝³ : AddCommGroup V₁\ninst✝² : Module k V₁\ninst✝¹ : AddTorsor V₁ P₁\ninst✝ : TopologicalSpace P₁\n⊢ Eq (↑(ContinuousAffineEquiv.refl k P₁)) (AffineEquiv.refl k P₁)","decl":"@[simp]\ntheorem toAffineEquiv_refl : (refl k P₁).toAffineEquiv = AffineEquiv.refl k P₁ :=\n  rfl\n\n"}
{"name":"ContinuousAffineEquiv.toEquiv_refl","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nV₁ : Type u_6\ninst✝⁴ : Ring k\ninst✝³ : AddCommGroup V₁\ninst✝² : Module k V₁\ninst✝¹ : AddTorsor V₁ P₁\ninst✝ : TopologicalSpace P₁\n⊢ Eq (↑(ContinuousAffineEquiv.refl k P₁)).toEquiv (Equiv.refl P₁)","decl":"@[simp]\ntheorem toEquiv_refl : (refl k P₁).toEquiv = Equiv.refl P₁ :=\n  rfl\n\n"}
{"name":"ContinuousAffineEquiv.symm_toAffineEquiv","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne : ContinuousAffineEquiv k P₁ P₂\n⊢ Eq (↑e).symm ↑e.symm","decl":"@[simp]\ntheorem symm_toAffineEquiv (e : P₁ ≃ᵃL[k] P₂) : e.toAffineEquiv.symm = e.symm.toAffineEquiv :=\n  rfl\n\n"}
{"name":"ContinuousAffineEquiv.symm_toEquiv","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne : ContinuousAffineEquiv k P₁ P₂\n⊢ Eq (↑e).symm (↑e.symm).toEquiv","decl":"@[simp]\ntheorem symm_toEquiv (e : P₁ ≃ᵃL[k] P₂) : e.toEquiv.symm = e.symm.toEquiv := rfl\n\n"}
{"name":"ContinuousAffineEquiv.apply_symm_apply","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne : ContinuousAffineEquiv k P₁ P₂\np : P₂\n⊢ Eq (e (e.symm p)) p","decl":"@[simp]\ntheorem apply_symm_apply (e : P₁ ≃ᵃL[k] P₂) (p : P₂) : e (e.symm p) = p :=\n  e.toEquiv.apply_symm_apply p\n\n"}
{"name":"ContinuousAffineEquiv.symm_apply_apply","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne : ContinuousAffineEquiv k P₁ P₂\np : P₁\n⊢ Eq (e.symm (e p)) p","decl":"@[simp]\ntheorem symm_apply_apply (e : P₁ ≃ᵃL[k] P₂) (p : P₁) : e.symm (e p) = p :=\n  e.toEquiv.symm_apply_apply p\n\n"}
{"name":"ContinuousAffineEquiv.apply_eq_iff_eq_symm_apply","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne : ContinuousAffineEquiv k P₁ P₂\np₁ : P₁\np₂ : P₂\n⊢ Iff (Eq (e p₁) p₂) (Eq p₁ (e.symm p₂))","decl":"theorem apply_eq_iff_eq_symm_apply (e : P₁ ≃ᵃL[k] P₂) {p₁ p₂} : e p₁ = p₂ ↔ p₁ = e.symm p₂ :=\n  e.toEquiv.apply_eq_iff_eq_symm_apply\n\n"}
{"name":"ContinuousAffineEquiv.apply_eq_iff_eq","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne : ContinuousAffineEquiv k P₁ P₂\np₁ p₂ : P₁\n⊢ Iff (Eq (e p₁) (e p₂)) (Eq p₁ p₂)","decl":"theorem apply_eq_iff_eq (e : P₁ ≃ᵃL[k] P₂) {p₁ p₂ : P₁} : e p₁ = e p₂ ↔ p₁ = p₂ :=\n  e.toEquiv.apply_eq_iff_eq\n\n"}
{"name":"ContinuousAffineEquiv.symm_symm","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne : ContinuousAffineEquiv k P₁ P₂\n⊢ Eq e.symm.symm e","decl":"@[simp]\ntheorem symm_symm (e : P₁ ≃ᵃL[k] P₂) : e.symm.symm = e := rfl\n\n"}
{"name":"ContinuousAffineEquiv.symm_symm_apply","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne : ContinuousAffineEquiv k P₁ P₂\nx : P₁\n⊢ Eq (e.symm.symm x) (e x)","decl":"theorem symm_symm_apply (e : P₁ ≃ᵃL[k] P₂) (x : P₁) : e.symm.symm x = e x :=\n  rfl\n\n"}
{"name":"ContinuousAffineEquiv.symm_apply_eq","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne : ContinuousAffineEquiv k P₁ P₂\nx : P₂\ny : P₁\n⊢ Iff (Eq (e.symm x) y) (Eq x (e y))","decl":"theorem symm_apply_eq (e : P₁ ≃ᵃL[k] P₂) {x y} : e.symm x = y ↔ x = e y :=\n  e.toAffineEquiv.symm_apply_eq\n\n"}
{"name":"ContinuousAffineEquiv.eq_symm_apply","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne : ContinuousAffineEquiv k P₁ P₂\nx : P₂\ny : P₁\n⊢ Iff (Eq y (e.symm x)) (Eq (e y) x)","decl":"theorem eq_symm_apply (e : P₁ ≃ᵃL[k] P₂) {x y} : y = e.symm x ↔ e y = x :=\n  e.toAffineEquiv.eq_symm_apply\n\n"}
{"name":"ContinuousAffineEquiv.image_symm","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\nf : ContinuousAffineEquiv k P₁ P₂\ns : Set P₂\n⊢ Eq (Set.image (⇑f.symm) s) (Set.preimage (⇑f) s)","decl":"@[simp]\ntheorem image_symm (f : P₁ ≃ᵃL[k] P₂) (s : Set P₂) : f.symm '' s = f ⁻¹' s :=\n  f.symm.toEquiv.image_eq_preimage _\n\n"}
{"name":"ContinuousAffineEquiv.preimage_symm","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\nf : ContinuousAffineEquiv k P₁ P₂\ns : Set P₁\n⊢ Eq (Set.preimage (⇑f.symm) s) (Set.image (⇑f) s)","decl":"@[simp]\ntheorem preimage_symm (f : P₁ ≃ᵃL[k] P₂) (s : Set P₁) : f.symm ⁻¹' s = f '' s :=\n  (f.symm.image_symm _).symm\n\n"}
{"name":"ContinuousAffineEquiv.bijective","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne : ContinuousAffineEquiv k P₁ P₂\n⊢ Function.Bijective ⇑e","decl":"protected theorem bijective (e : P₁ ≃ᵃL[k] P₂) : Bijective e :=\n  e.toEquiv.bijective\n\n"}
{"name":"ContinuousAffineEquiv.surjective","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne : ContinuousAffineEquiv k P₁ P₂\n⊢ Function.Surjective ⇑e","decl":"protected theorem surjective (e : P₁ ≃ᵃL[k] P₂) : Surjective e :=\n  e.toEquiv.surjective\n\n"}
{"name":"ContinuousAffineEquiv.injective","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne : ContinuousAffineEquiv k P₁ P₂\n⊢ Function.Injective ⇑e","decl":"protected theorem injective (e : P₁ ≃ᵃL[k] P₂) : Injective e :=\n  e.toEquiv.injective\n\n"}
{"name":"ContinuousAffineEquiv.image_eq_preimage","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne : ContinuousAffineEquiv k P₁ P₂\ns : Set P₁\n⊢ Eq (Set.image (⇑e) s) (Set.preimage (⇑e.symm) s)","decl":"protected theorem image_eq_preimage (e : P₁ ≃ᵃL[k] P₂) (s : Set P₁) : e '' s = e.symm ⁻¹' s :=\n  e.toEquiv.image_eq_preimage s\n\n"}
{"name":"ContinuousAffineEquiv.image_symm_eq_preimage","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne : ContinuousAffineEquiv k P₁ P₂\ns : Set P₂\n⊢ Eq (Set.image (⇑e.symm) s) (Set.preimage (⇑e) s)","decl":"protected theorem image_symm_eq_preimage (e : P₁ ≃ᵃL[k] P₂) (s : Set P₂) :\n    e.symm '' s = e ⁻¹' s := by\n  rw [e.symm.image_eq_preimage, e.symm_symm]\n\n"}
{"name":"ContinuousAffineEquiv.image_preimage","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne : ContinuousAffineEquiv k P₁ P₂\ns : Set P₂\n⊢ Eq (Set.image (⇑e) (Set.preimage (⇑e) s)) s","decl":"@[simp]\ntheorem image_preimage (e : P₁ ≃ᵃL[k] P₂) (s : Set P₂) : e '' (e ⁻¹' s) = s :=\n  e.surjective.image_preimage s\n\n"}
{"name":"ContinuousAffineEquiv.preimage_image","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne : ContinuousAffineEquiv k P₁ P₂\ns : Set P₁\n⊢ Eq (Set.preimage (⇑e) (Set.image (⇑e) s)) s","decl":"@[simp]\ntheorem preimage_image (e : P₁ ≃ᵃL[k] P₂) (s : Set P₁) : e ⁻¹' (e '' s) = s :=\n  e.injective.preimage_image s\n\n"}
{"name":"ContinuousAffineEquiv.symm_image_image","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne : ContinuousAffineEquiv k P₁ P₂\ns : Set P₁\n⊢ Eq (Set.image (⇑e.symm) (Set.image (⇑e) s)) s","decl":"theorem symm_image_image (e : P₁ ≃ᵃL[k] P₂) (s : Set P₁) : e.symm '' (e '' s) = s :=\n  e.toEquiv.symm_image_image s\n\n"}
{"name":"ContinuousAffineEquiv.image_symm_image","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne : ContinuousAffineEquiv k P₁ P₂\ns : Set P₂\n⊢ Eq (Set.image (⇑e) (Set.image (⇑e.symm) s)) s","decl":"theorem image_symm_image (e : P₁ ≃ᵃL[k] P₂) (s : Set P₂) : e '' (e.symm '' s) = s :=\n  e.symm.symm_image_image s\n\n"}
{"name":"ContinuousAffineEquiv.refl_symm","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nV₁ : Type u_6\ninst✝⁴ : Ring k\ninst✝³ : AddCommGroup V₁\ninst✝² : Module k V₁\ninst✝¹ : AddTorsor V₁ P₁\ninst✝ : TopologicalSpace P₁\n⊢ Eq (ContinuousAffineEquiv.refl k P₁).symm (ContinuousAffineEquiv.refl k P₁)","decl":"@[simp]\ntheorem refl_symm : (refl k P₁).symm = refl k P₁ :=\n  rfl\n\n"}
{"name":"ContinuousAffineEquiv.symm_refl","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nV₁ : Type u_6\ninst✝⁴ : Ring k\ninst✝³ : AddCommGroup V₁\ninst✝² : Module k V₁\ninst✝¹ : AddTorsor V₁ P₁\ninst✝ : TopologicalSpace P₁\n⊢ Eq (ContinuousAffineEquiv.refl k P₁).symm (ContinuousAffineEquiv.refl k P₁)","decl":"@[simp]\ntheorem symm_refl : (refl k P₁).symm = refl k P₁ :=\n  rfl\n\n"}
{"name":"ContinuousAffineEquiv.coe_trans","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nP₃ : Type u_4\nV₁ : Type u_6\nV₂ : Type u_7\nV₃ : Type u_8\ninst✝¹² : Ring k\ninst✝¹¹ : AddCommGroup V₁\ninst✝¹⁰ : Module k V₁\ninst✝⁹ : AddTorsor V₁ P₁\ninst✝⁸ : AddCommGroup V₂\ninst✝⁷ : Module k V₂\ninst✝⁶ : AddTorsor V₂ P₂\ninst✝⁵ : AddCommGroup V₃\ninst✝⁴ : Module k V₃\ninst✝³ : AddTorsor V₃ P₃\ninst✝² : TopologicalSpace P₁\ninst✝¹ : TopologicalSpace P₂\ninst✝ : TopologicalSpace P₃\ne : ContinuousAffineEquiv k P₁ P₂\ne' : ContinuousAffineEquiv k P₂ P₃\n⊢ Eq (⇑(e.trans e')) (Function.comp ⇑e' ⇑e)","decl":"@[simp]\ntheorem coe_trans (e : P₁ ≃ᵃL[k] P₂) (e' : P₂ ≃ᵃL[k] P₃) : ⇑(e.trans e') = e' ∘ e :=\n  rfl\n\n"}
{"name":"ContinuousAffineEquiv.trans_apply","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nP₃ : Type u_4\nV₁ : Type u_6\nV₂ : Type u_7\nV₃ : Type u_8\ninst✝¹² : Ring k\ninst✝¹¹ : AddCommGroup V₁\ninst✝¹⁰ : Module k V₁\ninst✝⁹ : AddTorsor V₁ P₁\ninst✝⁸ : AddCommGroup V₂\ninst✝⁷ : Module k V₂\ninst✝⁶ : AddTorsor V₂ P₂\ninst✝⁵ : AddCommGroup V₃\ninst✝⁴ : Module k V₃\ninst✝³ : AddTorsor V₃ P₃\ninst✝² : TopologicalSpace P₁\ninst✝¹ : TopologicalSpace P₂\ninst✝ : TopologicalSpace P₃\ne : ContinuousAffineEquiv k P₁ P₂\ne' : ContinuousAffineEquiv k P₂ P₃\np : P₁\n⊢ Eq ((e.trans e') p) (e' (e p))","decl":"@[simp]\ntheorem trans_apply (e : P₁ ≃ᵃL[k] P₂) (e' : P₂ ≃ᵃL[k] P₃) (p : P₁) : e.trans e' p = e' (e p) :=\n  rfl\n\n"}
{"name":"ContinuousAffineEquiv.trans_assoc","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nP₃ : Type u_4\nP₄ : Type u_5\nV₁ : Type u_6\nV₂ : Type u_7\nV₃ : Type u_8\nV₄ : Type u_9\ninst✝¹⁶ : Ring k\ninst✝¹⁵ : AddCommGroup V₁\ninst✝¹⁴ : Module k V₁\ninst✝¹³ : AddTorsor V₁ P₁\ninst✝¹² : AddCommGroup V₂\ninst✝¹¹ : Module k V₂\ninst✝¹⁰ : AddTorsor V₂ P₂\ninst✝⁹ : AddCommGroup V₃\ninst✝⁸ : Module k V₃\ninst✝⁷ : AddTorsor V₃ P₃\ninst✝⁶ : AddCommGroup V₄\ninst✝⁵ : Module k V₄\ninst✝⁴ : AddTorsor V₄ P₄\ninst✝³ : TopologicalSpace P₁\ninst✝² : TopologicalSpace P₂\ninst✝¹ : TopologicalSpace P₃\ninst✝ : TopologicalSpace P₄\ne₁ : ContinuousAffineEquiv k P₁ P₂\ne₂ : ContinuousAffineEquiv k P₂ P₃\ne₃ : ContinuousAffineEquiv k P₃ P₄\n⊢ Eq ((e₁.trans e₂).trans e₃) (e₁.trans (e₂.trans e₃))","decl":"theorem trans_assoc (e₁ : P₁ ≃ᵃL[k] P₂) (e₂ : P₂ ≃ᵃL[k] P₃) (e₃ : P₃ ≃ᵃL[k] P₄) :\n    (e₁.trans e₂).trans e₃ = e₁.trans (e₂.trans e₃) :=\n  ext fun _ ↦ rfl\n\n"}
{"name":"ContinuousAffineEquiv.trans_refl","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne : ContinuousAffineEquiv k P₁ P₂\n⊢ Eq (e.trans (ContinuousAffineEquiv.refl k P₂)) e","decl":"@[simp]\ntheorem trans_refl (e : P₁ ≃ᵃL[k] P₂) : e.trans (refl k P₂) = e :=\n  ext fun _ ↦ rfl\n\n"}
{"name":"ContinuousAffineEquiv.refl_trans","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne : ContinuousAffineEquiv k P₁ P₂\n⊢ Eq ((ContinuousAffineEquiv.refl k P₁).trans e) e","decl":"@[simp]\ntheorem refl_trans (e : P₁ ≃ᵃL[k] P₂) : (refl k P₁).trans e = e :=\n  ext fun _ ↦ rfl\n\n"}
{"name":"ContinuousAffineEquiv.self_trans_symm","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne : ContinuousAffineEquiv k P₁ P₂\n⊢ Eq (e.trans e.symm) (ContinuousAffineEquiv.refl k P₁)","decl":"@[simp]\ntheorem self_trans_symm (e : P₁ ≃ᵃL[k] P₂) : e.trans e.symm = refl k P₁ :=\n  ext e.symm_apply_apply\n\n"}
{"name":"ContinuousAffineEquiv.symm_trans_self","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nP₂ : Type u_3\nV₁ : Type u_6\nV₂ : Type u_7\ninst✝⁸ : Ring k\ninst✝⁷ : AddCommGroup V₁\ninst✝⁶ : Module k V₁\ninst✝⁵ : AddTorsor V₁ P₁\ninst✝⁴ : AddCommGroup V₂\ninst✝³ : Module k V₂\ninst✝² : AddTorsor V₂ P₂\ninst✝¹ : TopologicalSpace P₁\ninst✝ : TopologicalSpace P₂\ne : ContinuousAffineEquiv k P₁ P₂\n⊢ Eq (e.symm.trans e) (ContinuousAffineEquiv.refl k P₂)","decl":"@[simp]\ntheorem symm_trans_self (e : P₁ ≃ᵃL[k] P₂) : e.symm.trans e = refl k P₂ :=\n  ext e.apply_symm_apply\n\n"}
{"name":"ContinuousLinearEquiv.coe_toContinuousAffineEquiv","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\ninst✝⁶ : Ring k\nE : Type u_10\nF : Type u_11\ninst✝⁵ : AddCommGroup E\ninst✝⁴ : Module k E\ninst✝³ : TopologicalSpace E\ninst✝² : AddCommGroup F\ninst✝¹ : Module k F\ninst✝ : TopologicalSpace F\ne : ContinuousLinearEquiv (RingHom.id k) E F\n⊢ Eq ⇑e.toContinuousAffineEquiv ⇑e","decl":"@[simp]\ntheorem _root_.ContinuousLinearEquiv.coe_toContinuousAffineEquiv (e : E ≃L[k] F) :\n    ⇑e.toContinuousAffineEquiv = e :=\n  rfl\n\n"}
{"name":"ContinuousAffineEquiv.constVAdd_coe","module":"Mathlib.LinearAlgebra.AffineSpace.ContinuousAffineEquiv","initialProofState":"k : Type u_1\nP₁ : Type u_2\nV₁ : Type u_6\ninst✝⁵ : Ring k\ninst✝⁴ : AddCommGroup V₁\ninst✝³ : Module k V₁\ninst✝² : AddTorsor V₁ P₁\ninst✝¹ : TopologicalSpace P₁\ninst✝ : ContinuousConstVAdd V₁ P₁\nv : V₁\n⊢ Eq (↑(ContinuousAffineEquiv.constVAdd k P₁ v)) (AffineEquiv.constVAdd k P₁ v)","decl":"lemma constVAdd_coe [ContinuousConstVAdd V₁ P₁] (v : V₁) :\n    (constVAdd k P₁ v).toAffineEquiv = .constVAdd k P₁ v := rfl\n\n"}
