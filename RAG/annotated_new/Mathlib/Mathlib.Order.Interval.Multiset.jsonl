{"name":"Multiset.mem_Icc","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b x : α\n⊢ Iff (Membership.mem (Multiset.Icc a b) x) (And (LE.le a x) (LE.le x b))","decl":"@[simp] lemma mem_Icc : x ∈ Icc a b ↔ a ≤ x ∧ x ≤ b := by rw [Icc, ← Finset.mem_def, Finset.mem_Icc]\n\n"}
{"name":"Multiset.mem_Ico","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b x : α\n⊢ Iff (Membership.mem (Multiset.Ico a b) x) (And (LE.le a x) (LT.lt x b))","decl":"@[simp] lemma mem_Ico : x ∈ Ico a b ↔ a ≤ x ∧ x < b := by rw [Ico, ← Finset.mem_def, Finset.mem_Ico]\n\n"}
{"name":"Multiset.mem_Ioc","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b x : α\n⊢ Iff (Membership.mem (Multiset.Ioc a b) x) (And (LT.lt a x) (LE.le x b))","decl":"@[simp] lemma mem_Ioc : x ∈ Ioc a b ↔ a < x ∧ x ≤ b := by rw [Ioc, ← Finset.mem_def, Finset.mem_Ioc]\n\n"}
{"name":"Multiset.mem_Ioo","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b x : α\n⊢ Iff (Membership.mem (Multiset.Ioo a b) x) (And (LT.lt a x) (LT.lt x b))","decl":"@[simp] lemma mem_Ioo : x ∈ Ioo a b ↔ a < x ∧ x < b := by rw [Ioo, ← Finset.mem_def, Finset.mem_Ioo]\n\n"}
{"name":"Multiset.mem_Ici","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderTop α\na x : α\n⊢ Iff (Membership.mem (Multiset.Ici a) x) (LE.le a x)","decl":"@[simp] lemma mem_Ici : x ∈ Ici a ↔ a ≤ x := by rw [Ici, ← Finset.mem_def, Finset.mem_Ici]\n\n"}
{"name":"Multiset.mem_Ioi","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderTop α\na x : α\n⊢ Iff (Membership.mem (Multiset.Ioi a) x) (LT.lt a x)","decl":"@[simp] lemma mem_Ioi : x ∈ Ioi a ↔ a < x := by rw [Ioi, ← Finset.mem_def, Finset.mem_Ioi]\n\n"}
{"name":"Multiset.mem_Iic","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderBot α\nb x : α\n⊢ Iff (Membership.mem (Multiset.Iic b) x) (LE.le x b)","decl":"@[simp] lemma mem_Iic : x ∈ Iic b ↔ x ≤ b := by rw [Iic, ← Finset.mem_def, Finset.mem_Iic]\n\n"}
{"name":"Multiset.mem_Iio","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderBot α\nb x : α\n⊢ Iff (Membership.mem (Multiset.Iio b) x) (LT.lt x b)","decl":"@[simp] lemma mem_Iio : x ∈ Iio b ↔ x < b := by rw [Iio, ← Finset.mem_def, Finset.mem_Iio]\n\n"}
{"name":"Multiset.nodup_Icc","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ (Multiset.Icc a b).Nodup","decl":"theorem nodup_Icc : (Icc a b).Nodup :=\n  Finset.nodup _\n\n"}
{"name":"Multiset.nodup_Ico","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ (Multiset.Ico a b).Nodup","decl":"theorem nodup_Ico : (Ico a b).Nodup :=\n  Finset.nodup _\n\n"}
{"name":"Multiset.nodup_Ioc","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ (Multiset.Ioc a b).Nodup","decl":"theorem nodup_Ioc : (Ioc a b).Nodup :=\n  Finset.nodup _\n\n"}
{"name":"Multiset.nodup_Ioo","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ (Multiset.Ioo a b).Nodup","decl":"theorem nodup_Ioo : (Ioo a b).Nodup :=\n  Finset.nodup _\n\n"}
{"name":"Multiset.Icc_eq_zero_iff","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Iff (Eq (Multiset.Icc a b) 0) (Not (LE.le a b))","decl":"@[simp]\ntheorem Icc_eq_zero_iff : Icc a b = 0 ↔ ¬a ≤ b := by\n  rw [Icc, Finset.val_eq_zero, Finset.Icc_eq_empty_iff]\n\n"}
{"name":"Multiset.Ico_eq_zero_iff","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Iff (Eq (Multiset.Ico a b) 0) (Not (LT.lt a b))","decl":"@[simp]\ntheorem Ico_eq_zero_iff : Ico a b = 0 ↔ ¬a < b := by\n  rw [Ico, Finset.val_eq_zero, Finset.Ico_eq_empty_iff]\n\n"}
{"name":"Multiset.Ioc_eq_zero_iff","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Iff (Eq (Multiset.Ioc a b) 0) (Not (LT.lt a b))","decl":"@[simp]\ntheorem Ioc_eq_zero_iff : Ioc a b = 0 ↔ ¬a < b := by\n  rw [Ioc, Finset.val_eq_zero, Finset.Ioc_eq_empty_iff]\n\n"}
{"name":"Multiset.Ioo_eq_zero_iff","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝² : Preorder α\ninst✝¹ : LocallyFiniteOrder α\na b : α\ninst✝ : DenselyOrdered α\n⊢ Iff (Eq (Multiset.Ioo a b) 0) (Not (LT.lt a b))","decl":"@[simp]\ntheorem Ioo_eq_zero_iff [DenselyOrdered α] : Ioo a b = 0 ↔ ¬a < b := by\n  rw [Ioo, Finset.val_eq_zero, Finset.Ioo_eq_empty_iff]\n\n"}
{"name":"Multiset.Icc_eq_zero","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\na✝ : Not (LE.le a b)\n⊢ Eq (Multiset.Icc a b) 0","decl":"alias ⟨_, Icc_eq_zero⟩ := Icc_eq_zero_iff\n\n"}
{"name":"Multiset.Ico_eq_zero","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\na✝ : Not (LT.lt a b)\n⊢ Eq (Multiset.Ico a b) 0","decl":"alias ⟨_, Ico_eq_zero⟩ := Ico_eq_zero_iff\n\n"}
{"name":"Multiset.Ioc_eq_zero","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\na✝ : Not (LT.lt a b)\n⊢ Eq (Multiset.Ioc a b) 0","decl":"alias ⟨_, Ioc_eq_zero⟩ := Ioc_eq_zero_iff\n\n"}
{"name":"Multiset.Ioo_eq_zero","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\nh : Not (LT.lt a b)\n⊢ Eq (Multiset.Ioo a b) 0","decl":"@[simp]\ntheorem Ioo_eq_zero (h : ¬a < b) : Ioo a b = 0 :=\n  eq_zero_iff_forall_not_mem.2 fun _x hx => h ((mem_Ioo.1 hx).1.trans (mem_Ioo.1 hx).2)\n\n"}
{"name":"Multiset.Icc_eq_zero_of_lt","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\nh : LT.lt b a\n⊢ Eq (Multiset.Icc a b) 0","decl":"@[simp]\ntheorem Icc_eq_zero_of_lt (h : b < a) : Icc a b = 0 :=\n  Icc_eq_zero h.not_le\n\n"}
{"name":"Multiset.Ico_eq_zero_of_le","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\nh : LE.le b a\n⊢ Eq (Multiset.Ico a b) 0","decl":"@[simp]\ntheorem Ico_eq_zero_of_le (h : b ≤ a) : Ico a b = 0 :=\n  Ico_eq_zero h.not_lt\n\n"}
{"name":"Multiset.Ioc_eq_zero_of_le","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\nh : LE.le b a\n⊢ Eq (Multiset.Ioc a b) 0","decl":"@[simp]\ntheorem Ioc_eq_zero_of_le (h : b ≤ a) : Ioc a b = 0 :=\n  Ioc_eq_zero h.not_lt\n\n"}
{"name":"Multiset.Ioo_eq_zero_of_le","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\nh : LE.le b a\n⊢ Eq (Multiset.Ioo a b) 0","decl":"@[simp]\ntheorem Ioo_eq_zero_of_le (h : b ≤ a) : Ioo a b = 0 :=\n  Ioo_eq_zero h.not_lt\n\n"}
{"name":"Multiset.Ico_self","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na : α\n⊢ Eq (Multiset.Ico a a) 0","decl":"theorem Ico_self : Ico a a = 0 := by rw [Ico, Finset.Ico_self, Finset.empty_val]\n\n"}
{"name":"Multiset.Ioc_self","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na : α\n⊢ Eq (Multiset.Ioc a a) 0","decl":"theorem Ioc_self : Ioc a a = 0 := by rw [Ioc, Finset.Ioc_self, Finset.empty_val]\n\n"}
{"name":"Multiset.Ioo_self","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na : α\n⊢ Eq (Multiset.Ioo a a) 0","decl":"theorem Ioo_self : Ioo a a = 0 := by rw [Ioo, Finset.Ioo_self, Finset.empty_val]\n\n"}
{"name":"Multiset.left_mem_Icc","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Iff (Membership.mem (Multiset.Icc a b) a) (LE.le a b)","decl":"theorem left_mem_Icc : a ∈ Icc a b ↔ a ≤ b :=\n  Finset.left_mem_Icc\n\n"}
{"name":"Multiset.left_mem_Ico","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Iff (Membership.mem (Multiset.Ico a b) a) (LT.lt a b)","decl":"theorem left_mem_Ico : a ∈ Ico a b ↔ a < b :=\n  Finset.left_mem_Ico\n\n"}
{"name":"Multiset.right_mem_Icc","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Iff (Membership.mem (Multiset.Icc a b) b) (LE.le a b)","decl":"theorem right_mem_Icc : b ∈ Icc a b ↔ a ≤ b :=\n  Finset.right_mem_Icc\n\n"}
{"name":"Multiset.right_mem_Ioc","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Iff (Membership.mem (Multiset.Ioc a b) b) (LT.lt a b)","decl":"theorem right_mem_Ioc : b ∈ Ioc a b ↔ a < b :=\n  Finset.right_mem_Ioc\n\n"}
{"name":"Multiset.left_not_mem_Ioc","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Not (Membership.mem (Multiset.Ioc a b) a)","decl":"theorem left_not_mem_Ioc : a ∉ Ioc a b :=\n  Finset.left_not_mem_Ioc\n\n"}
{"name":"Multiset.left_not_mem_Ioo","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Not (Membership.mem (Multiset.Ioo a b) a)","decl":"theorem left_not_mem_Ioo : a ∉ Ioo a b :=\n  Finset.left_not_mem_Ioo\n\n"}
{"name":"Multiset.right_not_mem_Ico","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Not (Membership.mem (Multiset.Ico a b) b)","decl":"theorem right_not_mem_Ico : b ∉ Ico a b :=\n  Finset.right_not_mem_Ico\n\n"}
{"name":"Multiset.right_not_mem_Ioo","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Not (Membership.mem (Multiset.Ioo a b) b)","decl":"theorem right_not_mem_Ioo : b ∉ Ioo a b :=\n  Finset.right_not_mem_Ioo\n\n"}
{"name":"Multiset.Ico_filter_lt_of_le_left","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝² : Preorder α\ninst✝¹ : LocallyFiniteOrder α\na b c : α\ninst✝ : DecidablePred fun x => LT.lt x c\nhca : LE.le c a\n⊢ Eq (Multiset.filter (fun x => LT.lt x c) (Multiset.Ico a b)) EmptyCollection.emptyCollection","decl":"theorem Ico_filter_lt_of_le_left [DecidablePred (· < c)] (hca : c ≤ a) :\n    ((Ico a b).filter fun x => x < c) = ∅ := by\n  rw [Ico, ← Finset.filter_val, Finset.Ico_filter_lt_of_le_left hca]\n  rfl\n\n"}
{"name":"Multiset.Ico_filter_lt_of_right_le","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝² : Preorder α\ninst✝¹ : LocallyFiniteOrder α\na b c : α\ninst✝ : DecidablePred fun x => LT.lt x c\nhbc : LE.le b c\n⊢ Eq (Multiset.filter (fun x => LT.lt x c) (Multiset.Ico a b)) (Multiset.Ico a b)","decl":"theorem Ico_filter_lt_of_right_le [DecidablePred (· < c)] (hbc : b ≤ c) :\n    ((Ico a b).filter fun x => x < c) = Ico a b := by\n  rw [Ico, ← Finset.filter_val, Finset.Ico_filter_lt_of_right_le hbc]\n\n"}
{"name":"Multiset.Ico_filter_lt_of_le_right","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝² : Preorder α\ninst✝¹ : LocallyFiniteOrder α\na b c : α\ninst✝ : DecidablePred fun x => LT.lt x c\nhcb : LE.le c b\n⊢ Eq (Multiset.filter (fun x => LT.lt x c) (Multiset.Ico a b)) (Multiset.Ico a c)","decl":"theorem Ico_filter_lt_of_le_right [DecidablePred (· < c)] (hcb : c ≤ b) :\n    ((Ico a b).filter fun x => x < c) = Ico a c := by\n  rw [Ico, ← Finset.filter_val, Finset.Ico_filter_lt_of_le_right hcb]\n  rfl\n\n"}
{"name":"Multiset.Ico_filter_le_of_le_left","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝² : Preorder α\ninst✝¹ : LocallyFiniteOrder α\na b c : α\ninst✝ : DecidablePred fun x => LE.le c x\nhca : LE.le c a\n⊢ Eq (Multiset.filter (fun x => LE.le c x) (Multiset.Ico a b)) (Multiset.Ico a b)","decl":"theorem Ico_filter_le_of_le_left [DecidablePred (c ≤ ·)] (hca : c ≤ a) :\n    ((Ico a b).filter fun x => c ≤ x) = Ico a b := by\n  rw [Ico, ← Finset.filter_val, Finset.Ico_filter_le_of_le_left hca]\n\n"}
{"name":"Multiset.Ico_filter_le_of_right_le","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝² : Preorder α\ninst✝¹ : LocallyFiniteOrder α\na b : α\ninst✝ : DecidablePred fun x => LE.le b x\n⊢ Eq (Multiset.filter (fun x => LE.le b x) (Multiset.Ico a b)) EmptyCollection.emptyCollection","decl":"theorem Ico_filter_le_of_right_le [DecidablePred (b ≤ ·)] :\n    ((Ico a b).filter fun x => b ≤ x) = ∅ := by\n  rw [Ico, ← Finset.filter_val, Finset.Ico_filter_le_of_right_le]\n  rfl\n\n"}
{"name":"Multiset.Ico_filter_le_of_left_le","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝² : Preorder α\ninst✝¹ : LocallyFiniteOrder α\na b c : α\ninst✝ : DecidablePred fun x => LE.le c x\nhac : LE.le a c\n⊢ Eq (Multiset.filter (fun x => LE.le c x) (Multiset.Ico a b)) (Multiset.Ico c b)","decl":"theorem Ico_filter_le_of_left_le [DecidablePred (c ≤ ·)] (hac : a ≤ c) :\n    ((Ico a b).filter fun x => c ≤ x) = Ico c b := by\n  rw [Ico, ← Finset.filter_val, Finset.Ico_filter_le_of_left_le hac]\n  rfl\n\n"}
{"name":"Multiset.Icc_self","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : LocallyFiniteOrder α\na : α\n⊢ Eq (Multiset.Icc a a) (Singleton.singleton a)","decl":"@[simp]\ntheorem Icc_self (a : α) : Icc a a = {a} := by rw [Icc, Finset.Icc_self, Finset.singleton_val]\n\n"}
{"name":"Multiset.Ico_cons_right","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : LocallyFiniteOrder α\na b : α\nh : LE.le a b\n⊢ Eq (Multiset.cons b (Multiset.Ico a b)) (Multiset.Icc a b)","decl":"theorem Ico_cons_right (h : a ≤ b) : b ::ₘ Ico a b = Icc a b := by\n  classical\n    rw [Ico, ← Finset.insert_val_of_not_mem right_not_mem_Ico, Finset.Ico_insert_right h]\n    rfl\n\n"}
{"name":"Multiset.Ioo_cons_left","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : LocallyFiniteOrder α\na b : α\nh : LT.lt a b\n⊢ Eq (Multiset.cons a (Multiset.Ioo a b)) (Multiset.Ico a b)","decl":"theorem Ioo_cons_left (h : a < b) : a ::ₘ Ioo a b = Ico a b := by\n  classical\n    rw [Ioo, ← Finset.insert_val_of_not_mem left_not_mem_Ioo, Finset.Ioo_insert_left h]\n    rfl\n\n"}
{"name":"Multiset.Ico_disjoint_Ico","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : LocallyFiniteOrder α\na b c d : α\nh : LE.le b c\n⊢ Disjoint (Multiset.Ico a b) (Multiset.Ico c d)","decl":"theorem Ico_disjoint_Ico {a b c d : α} (h : b ≤ c) : Disjoint (Ico a b) (Ico c d) :=\n  disjoint_left.mpr fun hab hbc => by\n    rw [mem_Ico] at hab hbc\n    exact hab.2.not_le (h.trans hbc.1)\n\n"}
{"name":"Multiset.Ico_inter_Ico_of_le","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝² : PartialOrder α\ninst✝¹ : LocallyFiniteOrder α\ninst✝ : DecidableEq α\na b c d : α\nh : LE.le b c\n⊢ Eq (Inter.inter (Multiset.Ico a b) (Multiset.Ico c d)) 0","decl":"@[simp]\ntheorem Ico_inter_Ico_of_le [DecidableEq α] {a b c d : α} (h : b ≤ c) : Ico a b ∩ Ico c d = 0 :=\n  Multiset.inter_eq_zero_iff_disjoint.2 <| Ico_disjoint_Ico h\n\n"}
{"name":"Multiset.Ico_filter_le_left","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝² : PartialOrder α\ninst✝¹ : LocallyFiniteOrder α\na b : α\ninst✝ : DecidablePred fun x => LE.le x a\nhab : LT.lt a b\n⊢ Eq (Multiset.filter (fun x => LE.le x a) (Multiset.Ico a b)) (Singleton.singleton a)","decl":"theorem Ico_filter_le_left {a b : α} [DecidablePred (· ≤ a)] (hab : a < b) :\n    ((Ico a b).filter fun x => x ≤ a) = {a} := by\n  rw [Ico, ← Finset.filter_val, Finset.Ico_filter_le_left hab]\n  rfl\n\n"}
{"name":"Multiset.card_Ico_eq_card_Icc_sub_one","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Eq (Multiset.Ico a b).card (HSub.hSub (Multiset.Icc a b).card 1)","decl":"theorem card_Ico_eq_card_Icc_sub_one (a b : α) : card (Ico a b) = card (Icc a b) - 1 :=\n  Finset.card_Ico_eq_card_Icc_sub_one _ _\n\n"}
{"name":"Multiset.card_Ioc_eq_card_Icc_sub_one","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Eq (Multiset.Ioc a b).card (HSub.hSub (Multiset.Icc a b).card 1)","decl":"theorem card_Ioc_eq_card_Icc_sub_one (a b : α) : card (Ioc a b) = card (Icc a b) - 1 :=\n  Finset.card_Ioc_eq_card_Icc_sub_one _ _\n\n"}
{"name":"Multiset.card_Ioo_eq_card_Ico_sub_one","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Eq (Multiset.Ioo a b).card (HSub.hSub (Multiset.Ico a b).card 1)","decl":"theorem card_Ioo_eq_card_Ico_sub_one (a b : α) : card (Ioo a b) = card (Ico a b) - 1 :=\n  Finset.card_Ioo_eq_card_Ico_sub_one _ _\n\n"}
{"name":"Multiset.card_Ioo_eq_card_Icc_sub_two","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Eq (Multiset.Ioo a b).card (HSub.hSub (Multiset.Icc a b).card 2)","decl":"theorem card_Ioo_eq_card_Icc_sub_two (a b : α) : card (Ioo a b) = card (Icc a b) - 2 :=\n  Finset.card_Ioo_eq_card_Icc_sub_two _ _\n\n"}
{"name":"Multiset.Ico_subset_Ico_iff","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : LinearOrder α\ninst✝ : LocallyFiniteOrder α\na₁ b₁ a₂ b₂ : α\nh : LT.lt a₁ b₁\n⊢ Iff (HasSubset.Subset (Multiset.Ico a₁ b₁) (Multiset.Ico a₂ b₂)) (And (LE.le a₂ a₁) (LE.le b₁ b₂))","decl":"theorem Ico_subset_Ico_iff {a₁ b₁ a₂ b₂ : α} (h : a₁ < b₁) :\n    Ico a₁ b₁ ⊆ Ico a₂ b₂ ↔ a₂ ≤ a₁ ∧ b₁ ≤ b₂ :=\n  Finset.Ico_subset_Ico_iff h\n\n"}
{"name":"Multiset.Ico_add_Ico_eq_Ico","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : LinearOrder α\ninst✝ : LocallyFiniteOrder α\na b c : α\nhab : LE.le a b\nhbc : LE.le b c\n⊢ Eq (HAdd.hAdd (Multiset.Ico a b) (Multiset.Ico b c)) (Multiset.Ico a c)","decl":"theorem Ico_add_Ico_eq_Ico {a b c : α} (hab : a ≤ b) (hbc : b ≤ c) :\n    Ico a b + Ico b c = Ico a c := by\n  rw [add_eq_union_iff_disjoint.2 (Ico_disjoint_Ico le_rfl), Ico, Ico, Ico, ← Finset.union_val,\n    Finset.Ico_union_Ico_eq_Ico hab hbc]\n\n"}
{"name":"Multiset.Ico_inter_Ico","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : LinearOrder α\ninst✝ : LocallyFiniteOrder α\na b c d : α\n⊢ Eq (Inter.inter (Multiset.Ico a b) (Multiset.Ico c d)) (Multiset.Ico (Max.max a c) (Min.min b d))","decl":"theorem Ico_inter_Ico : Ico a b ∩ Ico c d = Ico (max a c) (min b d) := by\n  rw [Ico, Ico, Ico, ← Finset.inter_val, Finset.Ico_inter_Ico]\n\n"}
{"name":"Multiset.Ico_filter_lt","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : LinearOrder α\ninst✝ : LocallyFiniteOrder α\na b c : α\n⊢ Eq (Multiset.filter (fun x => LT.lt x c) (Multiset.Ico a b)) (Multiset.Ico a (Min.min b c))","decl":"@[simp]\ntheorem Ico_filter_lt (a b c : α) : ((Ico a b).filter fun x => x < c) = Ico a (min b c) := by\n  rw [Ico, Ico, ← Finset.filter_val, Finset.Ico_filter_lt]\n\n"}
{"name":"Multiset.Ico_filter_le","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : LinearOrder α\ninst✝ : LocallyFiniteOrder α\na b c : α\n⊢ Eq (Multiset.filter (fun x => LE.le c x) (Multiset.Ico a b)) (Multiset.Ico (Max.max a c) b)","decl":"@[simp]\ntheorem Ico_filter_le (a b c : α) : ((Ico a b).filter fun x => c ≤ x) = Ico (max a c) b := by\n  rw [Ico, Ico, ← Finset.filter_val, Finset.Ico_filter_le]\n\n"}
{"name":"Multiset.Ico_sub_Ico_left","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : LinearOrder α\ninst✝ : LocallyFiniteOrder α\na b c : α\n⊢ Eq (HSub.hSub (Multiset.Ico a b) (Multiset.Ico a c)) (Multiset.Ico (Max.max a c) b)","decl":"@[simp]\ntheorem Ico_sub_Ico_left (a b c : α) : Ico a b - Ico a c = Ico (max a c) b := by\n  rw [Ico, Ico, Ico, ← Finset.sdiff_val, Finset.Ico_diff_Ico_left]\n\n"}
{"name":"Multiset.Ico_sub_Ico_right","module":"Mathlib.Order.Interval.Multiset","initialProofState":"α : Type u_1\ninst✝¹ : LinearOrder α\ninst✝ : LocallyFiniteOrder α\na b c : α\n⊢ Eq (HSub.hSub (Multiset.Ico a b) (Multiset.Ico c b)) (Multiset.Ico a (Min.min b c))","decl":"@[simp]\ntheorem Ico_sub_Ico_right (a b c : α) : Ico a b - Ico c b = Ico a (min b c) := by\n  rw [Ico, Ico, Ico, ← Finset.sdiff_val, Finset.Ico_diff_Ico_right]\n\n"}
