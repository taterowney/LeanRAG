{"name":"FDRep.char_mul_comm","module":"Mathlib.RepresentationTheory.Character","initialProofState":"k : Type u\ninst✝¹ : Field k\nG : Type u\ninst✝ : Monoid G\nV : FDRep k G\ng h : G\n⊢ Eq (V.character (HMul.hMul h g)) (V.character (HMul.hMul g h))","decl":"theorem char_mul_comm (V : FDRep k G) (g : G) (h : G) :\n    V.character (h * g) = V.character (g * h) := by simp only [trace_mul_comm, character, map_mul]\n\n"}
{"name":"FDRep.char_one","module":"Mathlib.RepresentationTheory.Character","initialProofState":"k : Type u\ninst✝¹ : Field k\nG : Type u\ninst✝ : Monoid G\nV : FDRep k G\n⊢ Eq (V.character 1) ↑(Module.finrank k (CoeSort.coe V))","decl":"@[simp]\ntheorem char_one (V : FDRep k G) : V.character 1 = Module.finrank k V := by\n  simp only [character, map_one, trace_one]\n\n"}
{"name":"FDRep.char_tensor","module":"Mathlib.RepresentationTheory.Character","initialProofState":"k : Type u\ninst✝¹ : Field k\nG : Type u\ninst✝ : Monoid G\nV W : FDRep k G\n⊢ Eq (CategoryTheory.MonoidalCategoryStruct.tensorObj V W).character (HMul.hMul V.character W.character)","decl":"/-- The character is multiplicative under the tensor product. -/\n@[simp]\ntheorem char_tensor (V W : FDRep k G) : (V ⊗ W).character = V.character * W.character := by\n  ext g; convert trace_tensorProduct' (V.ρ g) (W.ρ g)\n\n"}
{"name":"FDRep.char_iso","module":"Mathlib.RepresentationTheory.Character","initialProofState":"k : Type u\ninst✝¹ : Field k\nG : Type u\ninst✝ : Monoid G\nV W : FDRep k G\ni : CategoryTheory.Iso V W\n⊢ Eq V.character W.character","decl":"/-- The character of isomorphic representations is the same. -/\ntheorem char_iso {V W : FDRep k G} (i : V ≅ W) : V.character = W.character := by\n  ext g\n  simp only [character, FDRep.Iso.conj_ρ i]\n  exact (trace_conj' (V.ρ g) _).symm\n\n"}
{"name":"FDRep.char_conj","module":"Mathlib.RepresentationTheory.Character","initialProofState":"k : Type u\ninst✝¹ : Field k\nG : Type u\ninst✝ : Group G\nV : FDRep k G\ng h : G\n⊢ Eq (V.character (HMul.hMul (HMul.hMul h g) (Inv.inv h))) (V.character g)","decl":"/-- The character of a representation is constant on conjugacy classes. -/\n@[simp]\ntheorem char_conj (V : FDRep k G) (g : G) (h : G) : V.character (h * g * h⁻¹) = V.character g := by\n  rw [char_mul_comm, inv_mul_cancel_left]\n\n"}
{"name":"FDRep.char_dual","module":"Mathlib.RepresentationTheory.Character","initialProofState":"k : Type u\ninst✝¹ : Field k\nG : Type u\ninst✝ : Group G\nV : FDRep k G\ng : G\n⊢ Eq ((FDRep.of (Representation.dual V.ρ)).character g) (V.character (Inv.inv g))","decl":"@[simp]\ntheorem char_dual (V : FDRep k G) (g : G) : (of (dual V.ρ)).character g = V.character g⁻¹ :=\n  trace_transpose' (V.ρ g⁻¹)\n\n"}
{"name":"FDRep.char_linHom","module":"Mathlib.RepresentationTheory.Character","initialProofState":"k : Type u\ninst✝¹ : Field k\nG : Type u\ninst✝ : Group G\nV W : FDRep k G\ng : G\n⊢ Eq ((FDRep.of (Representation.linHom V.ρ W.ρ)).character g) (HMul.hMul (V.character (Inv.inv g)) (W.character g))","decl":"@[simp]\ntheorem char_linHom (V W : FDRep k G) (g : G) :\n    (of (linHom V.ρ W.ρ)).character g = V.character g⁻¹ * W.character g := by\n  rw [← char_iso (dualTensorIsoLinHom _ _), char_tensor, Pi.mul_apply, char_dual]\n\n"}
{"name":"FDRep.average_char_eq_finrank_invariants","module":"Mathlib.RepresentationTheory.Character","initialProofState":"k : Type u\ninst✝³ : Field k\nG : Type u\ninst✝² : Group G\ninst✝¹ : Fintype G\ninst✝ : Invertible ↑(Fintype.card G)\nV : FDRep k G\n⊢ Eq (HSMul.hSMul (Invertible.invOf ↑(Fintype.card G)) (Finset.univ.sum fun g => V.character g)) ↑(Module.finrank k (Subtype fun x => Membership.mem (Representation.invariants V.ρ) x))","decl":"theorem average_char_eq_finrank_invariants (V : FDRep k G) :\n    ⅟ (Fintype.card G : k) • ∑ g : G, V.character g = finrank k (invariants V.ρ) := by\n  rw [← (isProj_averageMap V.ρ).trace]\n  simp [character, GroupAlgebra.average, _root_.map_sum]\n\n"}
{"name":"FDRep.char_orthonormal","module":"Mathlib.RepresentationTheory.Character","initialProofState":"k : Type u\ninst✝⁵ : Field k\nG : Grp\ninst✝⁴ : IsAlgClosed k\ninst✝³ : Fintype ↑G\ninst✝² : Invertible ↑(Fintype.card ↑G)\nV W : FDRep k ↑G\ninst✝¹ : CategoryTheory.Simple V\ninst✝ : CategoryTheory.Simple W\n⊢ Eq (HSMul.hSMul (Invertible.invOf ↑(Fintype.card ↑G)) (Finset.univ.sum fun g => HMul.hMul (V.character g) (W.character (Inv.inv g)))) (ite (Nonempty (CategoryTheory.Iso V W)) 1 0)","decl":"open scoped Classical in\n/-- Orthogonality of characters for irreducible representations of finite group over an\nalgebraically closed field whose characteristic doesn't divide the order of the group. -/\ntheorem char_orthonormal (V W : FDRep k G) [Simple V] [Simple W] :\n    ⅟ (Fintype.card G : k) • ∑ g : G, V.character g * W.character g⁻¹ =\n      if Nonempty (V ≅ W) then ↑1 else ↑0 := by\n  -- First, we can rewrite the summand `V.character g * W.character g⁻¹` as the character\n  -- of the representation `V ⊗ W* ≅ Hom(W, V)` applied to `g`.\n  -- Porting note: Originally `conv in V.character _ * W.character _ =>`\n  conv_lhs =>\n    enter [2, 2, g]\n    rw [mul_comm, ← char_dual, ← Pi.mul_apply, ← char_tensor]\n    rw [char_iso (FDRep.dualTensorIsoLinHom W.ρ V)]\n  -- The average over the group of the character of a representation equals the dimension of the\n  -- space of invariants.\n  rw [average_char_eq_finrank_invariants, ← FDRep.endRingEquiv_comp_ρ (of _),\n      FDRep.of_ρ (linHom W.ρ V.ρ)]\n  -- The space of invariants of `Hom(W, V)` is the subspace of `G`-equivariant linear maps,\n  -- `Hom_G(W, V)`.\n  erw [(linHom.invariantsEquivFDRepHom W V).finrank_eq] -- Porting note: Changed `rw` to `erw`\n  -- By Schur's Lemma, the dimension of `Hom_G(W, V)` is `1` is `V ≅ W` and `0` otherwise.\n  rw_mod_cast [finrank_hom_simple_simple W V, Iso.nonempty_iso_symm]\n\n"}
