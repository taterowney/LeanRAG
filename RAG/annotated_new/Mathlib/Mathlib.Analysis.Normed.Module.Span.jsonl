{"name":"LinearMap.toSpanSingleton_homothety","module":"Mathlib.Analysis.Normed.Module.Span","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : NormedDivisionRing 𝕜\ninst✝² : SeminormedAddCommGroup E\ninst✝¹ : Module 𝕜 E\ninst✝ : BoundedSMul 𝕜 E\nx : E\nc : 𝕜\n⊢ Eq (Norm.norm ((LinearMap.toSpanSingleton 𝕜 E x) c)) (HMul.hMul (Norm.norm x) (Norm.norm c))","decl":"theorem toSpanSingleton_homothety (x : E) (c : 𝕜) :\n    ‖LinearMap.toSpanSingleton 𝕜 E x c‖ = ‖x‖ * ‖c‖ := by\n  rw [mul_comm]\n  exact norm_smul _ _\n\n"}
{"name":"LinearEquiv.toSpanNonzeroSingleton_homothety","module":"Mathlib.Analysis.Normed.Module.Span","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : NormedDivisionRing 𝕜\ninst✝² : SeminormedAddCommGroup E\ninst✝¹ : Module 𝕜 E\ninst✝ : BoundedSMul 𝕜 E\nx : E\nh : Ne x 0\nc : 𝕜\n⊢ Eq (Norm.norm ((LinearEquiv.toSpanNonzeroSingleton 𝕜 E x h) c)) (HMul.hMul (Norm.norm x) (Norm.norm c))","decl":"theorem _root_.LinearEquiv.toSpanNonzeroSingleton_homothety (x : E) (h : x ≠ 0) (c : 𝕜) :\n    ‖LinearEquiv.toSpanNonzeroSingleton 𝕜 E x h c‖ = ‖x‖ * ‖c‖ :=\n  LinearMap.toSpanSingleton_homothety _ _ _\n\n"}
{"name":"ContinuousLinearEquiv.coe_toSpanNonzeroSingleton_symm","module":"Mathlib.Analysis.Normed.Module.Span","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : NormedField 𝕜\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\nx : E\nh : Ne x 0\n⊢ Eq ⇑(ContinuousLinearEquiv.toSpanNonzeroSingleton 𝕜 x h).symm ⇑(ContinuousLinearEquiv.coord 𝕜 x h)","decl":"@[simp]\ntheorem coe_toSpanNonzeroSingleton_symm {x : E} (h : x ≠ 0) :\n    ⇑(toSpanNonzeroSingleton 𝕜 x h).symm = coord 𝕜 x h :=\n  rfl\n\n"}
{"name":"ContinuousLinearEquiv.coord_toSpanNonzeroSingleton","module":"Mathlib.Analysis.Normed.Module.Span","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : NormedField 𝕜\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\nx : E\nh : Ne x 0\nc : 𝕜\n⊢ Eq ((ContinuousLinearEquiv.coord 𝕜 x h) ((ContinuousLinearEquiv.toSpanNonzeroSingleton 𝕜 x h) c)) c","decl":"@[simp]\ntheorem coord_toSpanNonzeroSingleton {x : E} (h : x ≠ 0) (c : 𝕜) :\n    coord 𝕜 x h (toSpanNonzeroSingleton 𝕜 x h c) = c :=\n  (toSpanNonzeroSingleton 𝕜 x h).symm_apply_apply c\n\n"}
{"name":"ContinuousLinearEquiv.toSpanNonzeroSingleton_coord","module":"Mathlib.Analysis.Normed.Module.Span","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : NormedField 𝕜\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\nx : E\nh : Ne x 0\ny : Subtype fun x_1 => Membership.mem (Submodule.span 𝕜 (Singleton.singleton x)) x_1\n⊢ Eq ((ContinuousLinearEquiv.toSpanNonzeroSingleton 𝕜 x h) ((ContinuousLinearEquiv.coord 𝕜 x h) y)) y","decl":"@[simp]\ntheorem toSpanNonzeroSingleton_coord {x : E} (h : x ≠ 0) (y : 𝕜 ∙ x) :\n    toSpanNonzeroSingleton 𝕜 x h (coord 𝕜 x h y) = y :=\n  (toSpanNonzeroSingleton 𝕜 x h).apply_symm_apply y\n\n"}
{"name":"ContinuousLinearEquiv.coord_self","module":"Mathlib.Analysis.Normed.Module.Span","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : NormedField 𝕜\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\nx : E\nh : Ne x 0\n⊢ Eq ((ContinuousLinearEquiv.coord 𝕜 x h) ⟨x, ⋯⟩) 1","decl":"@[simp]\ntheorem coord_self (x : E) (h : x ≠ 0) :\n    (coord 𝕜 x h) (⟨x, Submodule.mem_span_singleton_self x⟩ : 𝕜 ∙ x) = 1 :=\n  LinearEquiv.coord_self 𝕜 E x h\n\n"}
{"name":"LinearIsometryEquiv.toSpanUnitSingleton_apply","module":"Mathlib.Analysis.Normed.Module.Span","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : NormedDivisionRing 𝕜\ninst✝² : SeminormedAddCommGroup E\ninst✝¹ : Module 𝕜 E\ninst✝ : BoundedSMul 𝕜 E\nx : E\nhx : Eq (Norm.norm x) 1\nr : 𝕜\n⊢ Eq ((LinearIsometryEquiv.toSpanUnitSingleton x hx) r) ⟨HSMul.hSMul r x, ⋯⟩","decl":"@[simp] theorem toSpanUnitSingleton_apply (x : E) (hx : ‖x‖ = 1) (r : 𝕜) :\n    toSpanUnitSingleton x hx r = (⟨r • x, by aesop⟩ : 𝕜 ∙ x) := by\n  rfl\n\n"}
