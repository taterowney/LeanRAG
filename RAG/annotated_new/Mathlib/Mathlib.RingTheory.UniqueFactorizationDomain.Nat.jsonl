{"name":"Nat.instWfDvdMonoid","module":"Mathlib.RingTheory.UniqueFactorizationDomain.Nat","initialProofState":"⊢ WfDvdMonoid Nat","decl":"instance instWfDvdMonoid : WfDvdMonoid ℕ where\n  wf := by\n    refine RelHomClass.wellFounded\n      (⟨fun x : ℕ => if x = 0 then (⊤ : ℕ∞) else x, ?_⟩ : DvdNotUnit →r (· < ·)) wellFounded_lt\n    intro a b h\n    cases' a with a\n    · exfalso\n      revert h\n      simp [DvdNotUnit]\n    cases b\n    · simpa [succ_ne_zero] using ENat.coe_lt_top (a + 1)\n    cases' dvd_and_not_dvd_iff.2 h with h1 h2\n    simp only [succ_ne_zero, cast_lt, if_false]\n    refine lt_of_le_of_ne (Nat.le_of_dvd (Nat.succ_pos _) h1) fun con => h2 ?_\n    rw [con]\n\n"}
{"name":"Nat.instUniqueFactorizationMonoid","module":"Mathlib.RingTheory.UniqueFactorizationDomain.Nat","initialProofState":"⊢ UniqueFactorizationMonoid Nat","decl":"instance instUniqueFactorizationMonoid : UniqueFactorizationMonoid ℕ where\n  irreducible_iff_prime := Nat.irreducible_iff_prime\n\n"}
{"name":"Nat.factors_eq","module":"Mathlib.RingTheory.UniqueFactorizationDomain.Nat","initialProofState":"n : Nat\n⊢ Eq (UniqueFactorizationMonoid.normalizedFactors n) ↑n.primeFactorsList","decl":"lemma factors_eq : ∀ n : ℕ, normalizedFactors n = n.primeFactorsList\n  | 0 => by simp\n  | n + 1 => by\n    rw [← Multiset.rel_eq, ← associated_eq_eq]\n    apply UniqueFactorizationMonoid.factors_unique irreducible_of_normalized_factor _\n    · rw [Multiset.prod_coe, Nat.prod_primeFactorsList n.succ_ne_zero]\n      exact prod_normalizedFactors n.succ_ne_zero\n    · intro x hx\n      rw [Nat.irreducible_iff_prime, ← Nat.prime_iff]\n      exact Nat.prime_of_mem_primeFactorsList hx\n\n"}
{"name":"Nat.factors_multiset_prod_of_irreducible","module":"Mathlib.RingTheory.UniqueFactorizationDomain.Nat","initialProofState":"s : Multiset Nat\nh : ∀ (x : Nat), Membership.mem s x → Irreducible x\n⊢ Eq (UniqueFactorizationMonoid.normalizedFactors s.prod) s","decl":"lemma factors_multiset_prod_of_irreducible {s : Multiset ℕ} (h : ∀ x : ℕ, x ∈ s → Irreducible x) :\n    normalizedFactors s.prod = s := by\n  rw [← Multiset.rel_eq, ← associated_eq_eq]\n  apply UniqueFactorizationMonoid.factors_unique irreducible_of_normalized_factor h\n    (prod_normalizedFactors _)\n  rw [Ne, Multiset.prod_eq_zero_iff]\n  exact fun con ↦ not_irreducible_zero (h 0 con)\n\n"}
