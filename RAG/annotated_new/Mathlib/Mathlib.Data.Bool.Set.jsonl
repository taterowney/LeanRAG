{"name":"Bool.univ_eq","module":"Mathlib.Data.Bool.Set","initialProofState":"⊢ Eq Set.univ (Insert.insert Bool.false (Singleton.singleton Bool.true))","decl":"@[simp]\ntheorem univ_eq : (univ : Set Bool) = {false, true} :=\n  (eq_univ_of_forall Bool.dichotomy).symm\n\n"}
{"name":"Bool.range_eq","module":"Mathlib.Data.Bool.Set","initialProofState":"α : Type u_1\nf : Bool → α\n⊢ Eq (Set.range f) (Insert.insert (f Bool.false) (Singleton.singleton (f Bool.true)))","decl":"@[simp]\ntheorem range_eq {α : Type*} (f : Bool → α) : range f = {f false, f true} := by\n  rw [← image_univ, univ_eq, image_pair]\n\n"}
{"name":"Bool.compl_singleton","module":"Mathlib.Data.Bool.Set","initialProofState":"b : Bool\n⊢ Eq (HasCompl.compl (Singleton.singleton b)) (Singleton.singleton b.not)","decl":"@[simp] theorem compl_singleton (b : Bool) : ({b}ᶜ : Set Bool) = {!b} :=\n  Set.ext fun _ => eq_not_iff.symm\n\n"}
