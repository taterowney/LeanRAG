{"name":"MeasureTheory.lintegral_add_left_eq_self","module":"Mathlib.MeasureTheory.Group.LIntegral","initialProofState":"G : Type u_1\ninst✝³ : MeasurableSpace G\nμ : MeasureTheory.Measure G\ninst✝² : AddGroup G\ninst✝¹ : MeasurableAdd G\ninst✝ : μ.IsAddLeftInvariant\nf : G → ENNReal\ng : G\n⊢ Eq (MeasureTheory.lintegral μ fun x => f (HAdd.hAdd g x)) (MeasureTheory.lintegral μ fun x => f x)","decl":"/-- Translating a function by left-multiplication does not change its Lebesgue integral\nwith respect to a left-invariant measure. -/\n@[to_additive\n      \"Translating a function by left-addition does not change its Lebesgue integral with\n      respect to a left-invariant measure.\"]\ntheorem lintegral_mul_left_eq_self [IsMulLeftInvariant μ] (f : G → ℝ≥0∞) (g : G) :\n    (∫⁻ x, f (g * x) ∂μ) = ∫⁻ x, f x ∂μ := by\n  convert (lintegral_map_equiv f <| MeasurableEquiv.mulLeft g).symm\n  simp [map_mul_left_eq_self μ g]\n\n"}
{"name":"MeasureTheory.lintegral_mul_left_eq_self","module":"Mathlib.MeasureTheory.Group.LIntegral","initialProofState":"G : Type u_1\ninst✝³ : MeasurableSpace G\nμ : MeasureTheory.Measure G\ninst✝² : Group G\ninst✝¹ : MeasurableMul G\ninst✝ : μ.IsMulLeftInvariant\nf : G → ENNReal\ng : G\n⊢ Eq (MeasureTheory.lintegral μ fun x => f (HMul.hMul g x)) (MeasureTheory.lintegral μ fun x => f x)","decl":"/-- Translating a function by left-multiplication does not change its Lebesgue integral\nwith respect to a left-invariant measure. -/\n@[to_additive\n      \"Translating a function by left-addition does not change its Lebesgue integral with\n      respect to a left-invariant measure.\"]\ntheorem lintegral_mul_left_eq_self [IsMulLeftInvariant μ] (f : G → ℝ≥0∞) (g : G) :\n    (∫⁻ x, f (g * x) ∂μ) = ∫⁻ x, f x ∂μ := by\n  convert (lintegral_map_equiv f <| MeasurableEquiv.mulLeft g).symm\n  simp [map_mul_left_eq_self μ g]\n\n"}
{"name":"MeasureTheory.lintegral_mul_right_eq_self","module":"Mathlib.MeasureTheory.Group.LIntegral","initialProofState":"G : Type u_1\ninst✝³ : MeasurableSpace G\nμ : MeasureTheory.Measure G\ninst✝² : Group G\ninst✝¹ : MeasurableMul G\ninst✝ : μ.IsMulRightInvariant\nf : G → ENNReal\ng : G\n⊢ Eq (MeasureTheory.lintegral μ fun x => f (HMul.hMul x g)) (MeasureTheory.lintegral μ fun x => f x)","decl":"/-- Translating a function by right-multiplication does not change its Lebesgue integral\nwith respect to a right-invariant measure. -/\n@[to_additive\n      \"Translating a function by right-addition does not change its Lebesgue integral with\n      respect to a right-invariant measure.\"]\ntheorem lintegral_mul_right_eq_self [IsMulRightInvariant μ] (f : G → ℝ≥0∞) (g : G) :\n    (∫⁻ x, f (x * g) ∂μ) = ∫⁻ x, f x ∂μ := by\n  convert (lintegral_map_equiv f <| MeasurableEquiv.mulRight g).symm using 1\n  simp [map_mul_right_eq_self μ g]\n\n"}
{"name":"MeasureTheory.lintegral_add_right_eq_self","module":"Mathlib.MeasureTheory.Group.LIntegral","initialProofState":"G : Type u_1\ninst✝³ : MeasurableSpace G\nμ : MeasureTheory.Measure G\ninst✝² : AddGroup G\ninst✝¹ : MeasurableAdd G\ninst✝ : μ.IsAddRightInvariant\nf : G → ENNReal\ng : G\n⊢ Eq (MeasureTheory.lintegral μ fun x => f (HAdd.hAdd x g)) (MeasureTheory.lintegral μ fun x => f x)","decl":"/-- Translating a function by right-multiplication does not change its Lebesgue integral\nwith respect to a right-invariant measure. -/\n@[to_additive\n      \"Translating a function by right-addition does not change its Lebesgue integral with\n      respect to a right-invariant measure.\"]\ntheorem lintegral_mul_right_eq_self [IsMulRightInvariant μ] (f : G → ℝ≥0∞) (g : G) :\n    (∫⁻ x, f (x * g) ∂μ) = ∫⁻ x, f x ∂μ := by\n  convert (lintegral_map_equiv f <| MeasurableEquiv.mulRight g).symm using 1\n  simp [map_mul_right_eq_self μ g]\n\n"}
{"name":"MeasureTheory.lintegral_div_right_eq_self","module":"Mathlib.MeasureTheory.Group.LIntegral","initialProofState":"G : Type u_1\ninst✝³ : MeasurableSpace G\nμ : MeasureTheory.Measure G\ninst✝² : Group G\ninst✝¹ : MeasurableMul G\ninst✝ : μ.IsMulRightInvariant\nf : G → ENNReal\ng : G\n⊢ Eq (MeasureTheory.lintegral μ fun x => f (HDiv.hDiv x g)) (MeasureTheory.lintegral μ fun x => f x)","decl":"@[to_additive] -- Porting note: was `@[simp]`\ntheorem lintegral_div_right_eq_self [IsMulRightInvariant μ] (f : G → ℝ≥0∞) (g : G) :\n    (∫⁻ x, f (x / g) ∂μ) = ∫⁻ x, f x ∂μ := by\n  simp_rw [div_eq_mul_inv, lintegral_mul_right_eq_self f g⁻¹]\n\n"}
{"name":"MeasureTheory.lintegral_sub_right_eq_self","module":"Mathlib.MeasureTheory.Group.LIntegral","initialProofState":"G : Type u_1\ninst✝³ : MeasurableSpace G\nμ : MeasureTheory.Measure G\ninst✝² : AddGroup G\ninst✝¹ : MeasurableAdd G\ninst✝ : μ.IsAddRightInvariant\nf : G → ENNReal\ng : G\n⊢ Eq (MeasureTheory.lintegral μ fun x => f (HSub.hSub x g)) (MeasureTheory.lintegral μ fun x => f x)","decl":"@[to_additive] -- Porting note: was `@[simp]`\ntheorem lintegral_div_right_eq_self [IsMulRightInvariant μ] (f : G → ℝ≥0∞) (g : G) :\n    (∫⁻ x, f (x / g) ∂μ) = ∫⁻ x, f x ∂μ := by\n  simp_rw [div_eq_mul_inv, lintegral_mul_right_eq_self f g⁻¹]\n\n"}
{"name":"MeasureTheory.lintegral_eq_zero_of_isAddLeftInvariant","module":"Mathlib.MeasureTheory.Group.LIntegral","initialProofState":"G : Type u_1\ninst✝⁷ : MeasurableSpace G\nμ : MeasureTheory.Measure G\ninst✝⁶ : TopologicalSpace G\ninst✝⁵ : AddGroup G\ninst✝⁴ : TopologicalAddGroup G\ninst✝³ : BorelSpace G\ninst✝² : μ.IsAddLeftInvariant\ninst✝¹ : μ.Regular\ninst✝ : NeZero μ\nf : G → ENNReal\nhf : Continuous f\n⊢ Iff (Eq (MeasureTheory.lintegral μ fun x => f x) 0) (Eq f 0)","decl":"/-- For nonzero regular left invariant measures, the integral of a continuous nonnegative function\n  `f` is 0 iff `f` is 0. -/\n@[to_additive\n      \"For nonzero regular left invariant measures, the integral of a continuous nonnegative\n      function `f` is 0 iff `f` is 0.\"]\ntheorem lintegral_eq_zero_of_isMulLeftInvariant [Regular μ] [NeZero μ] {f : G → ℝ≥0∞}\n    (hf : Continuous f) : ∫⁻ x, f x ∂μ = 0 ↔ f = 0 := by\n  rw [lintegral_eq_zero_iff hf.measurable, hf.ae_eq_iff_eq μ continuous_zero]\n\n"}
{"name":"MeasureTheory.lintegral_eq_zero_of_isMulLeftInvariant","module":"Mathlib.MeasureTheory.Group.LIntegral","initialProofState":"G : Type u_1\ninst✝⁷ : MeasurableSpace G\nμ : MeasureTheory.Measure G\ninst✝⁶ : TopologicalSpace G\ninst✝⁵ : Group G\ninst✝⁴ : TopologicalGroup G\ninst✝³ : BorelSpace G\ninst✝² : μ.IsMulLeftInvariant\ninst✝¹ : μ.Regular\ninst✝ : NeZero μ\nf : G → ENNReal\nhf : Continuous f\n⊢ Iff (Eq (MeasureTheory.lintegral μ fun x => f x) 0) (Eq f 0)","decl":"/-- For nonzero regular left invariant measures, the integral of a continuous nonnegative function\n  `f` is 0 iff `f` is 0. -/\n@[to_additive\n      \"For nonzero regular left invariant measures, the integral of a continuous nonnegative\n      function `f` is 0 iff `f` is 0.\"]\ntheorem lintegral_eq_zero_of_isMulLeftInvariant [Regular μ] [NeZero μ] {f : G → ℝ≥0∞}\n    (hf : Continuous f) : ∫⁻ x, f x ∂μ = 0 ↔ f = 0 := by\n  rw [lintegral_eq_zero_iff hf.measurable, hf.ae_eq_iff_eq μ continuous_zero]\n\n"}
