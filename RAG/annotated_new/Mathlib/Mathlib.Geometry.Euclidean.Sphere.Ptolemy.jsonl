{"name":"EuclideanGeometry.mul_dist_add_mul_dist_eq_mul_dist_of_cospherical","module":"Mathlib.Geometry.Euclidean.Sphere.Ptolemy","initialProofState":"V : Type u_1\ninst✝³ : NormedAddCommGroup V\ninst✝² : InnerProductSpace Real V\nP : Type u_2\ninst✝¹ : MetricSpace P\ninst✝ : NormedAddTorsor V P\na b c d p : P\nh : EuclideanGeometry.Cospherical (Insert.insert a (Insert.insert b (Insert.insert c (Singleton.singleton d))))\nhapc : Eq (EuclideanGeometry.angle a p c) Real.pi\nhbpd : Eq (EuclideanGeometry.angle b p d) Real.pi\n⊢ Eq (HAdd.hAdd (HMul.hMul (Dist.dist a b) (Dist.dist c d)) (HMul.hMul (Dist.dist b c) (Dist.dist d a))) (HMul.hMul (Dist.dist a c) (Dist.dist b d))","decl":"/-- **Ptolemy’s Theorem**. -/\ntheorem mul_dist_add_mul_dist_eq_mul_dist_of_cospherical {a b c d p : P}\n    (h : Cospherical ({a, b, c, d} : Set P)) (hapc : ∠ a p c = π) (hbpd : ∠ b p d = π) :\n    dist a b * dist c d + dist b c * dist d a = dist a c * dist b d := by\n  have h' : Cospherical ({a, c, b, d} : Set P) := by rwa [Set.insert_comm c b {d}]\n  have hmul := mul_dist_eq_mul_dist_of_cospherical_of_angle_eq_pi h' hapc hbpd\n  have hbp := left_dist_ne_zero_of_angle_eq_pi hbpd\n  have h₁ : dist c d = dist c p / dist b p * dist a b := by\n    rw [dist_mul_of_eq_angle_of_dist_mul b p a c p d, dist_comm a b]\n    · rw [angle_eq_angle_of_angle_eq_pi_of_angle_eq_pi hbpd hapc, angle_comm]\n    all_goals field_simp [mul_comm, hmul]\n  have h₂ : dist d a = dist a p / dist b p * dist b c := by\n    rw [dist_mul_of_eq_angle_of_dist_mul c p b d p a, dist_comm c b]\n    · rwa [angle_comm, angle_eq_angle_of_angle_eq_pi_of_angle_eq_pi]; rwa [angle_comm]\n    all_goals field_simp [mul_comm, hmul]\n  have h₃ : dist d p = dist a p * dist c p / dist b p := by field_simp [mul_comm, hmul]\n  have h₄ : ∀ x y : ℝ, x * (y * x) = x * x * y := fun x y => by rw [mul_left_comm, mul_comm]\n  -- takes 450ms, but the \"equivalent\" simp call leaves some remaining goals\n  field_simp [h₁, h₂, dist_eq_add_dist_of_angle_eq_pi hbpd, h₃, hbp, dist_comm a b, h₄, ← sq,\n    dist_sq_mul_dist_add_dist_sq_mul_dist b, hapc]\n\n"}
