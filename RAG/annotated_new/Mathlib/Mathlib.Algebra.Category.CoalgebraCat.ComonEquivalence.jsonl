{"name":"CoalgebraCat.toComonObj_counit","module":"Mathlib.Algebra.Category.CoalgebraCat.ComonEquivalence","initialProofState":"R : Type u\ninst✝ : CommRing R\nX : CoalgebraCat R\n⊢ Eq X.toComonObj.counit (ModuleCat.ofHom CoalgebraStruct.counit)","decl":"/-- An `R`-coalgebra is a comonoid object in the category of `R`-modules. -/\n@[simps X counit comul] def toComonObj (X : CoalgebraCat R) : Comon_ (ModuleCat R) where\n  X := ModuleCat.of R X\n  counit := ModuleCat.ofHom Coalgebra.counit\n  comul := ModuleCat.ofHom Coalgebra.comul\n  counit_comul := ModuleCat.hom_ext <| by simpa using Coalgebra.rTensor_counit_comp_comul\n  comul_counit := ModuleCat.hom_ext <| by simpa using Coalgebra.lTensor_counit_comp_comul\n  comul_assoc := ModuleCat.hom_ext <| by simp_rw [ModuleCat.of_coe]; exact Coalgebra.coassoc.symm\n\n"}
{"name":"CoalgebraCat.toComonObj_comul","module":"Mathlib.Algebra.Category.CoalgebraCat.ComonEquivalence","initialProofState":"R : Type u\ninst✝ : CommRing R\nX : CoalgebraCat R\n⊢ Eq X.toComonObj.comul (ModuleCat.ofHom CoalgebraStruct.comul)","decl":"/-- An `R`-coalgebra is a comonoid object in the category of `R`-modules. -/\n@[simps X counit comul] def toComonObj (X : CoalgebraCat R) : Comon_ (ModuleCat R) where\n  X := ModuleCat.of R X\n  counit := ModuleCat.ofHom Coalgebra.counit\n  comul := ModuleCat.ofHom Coalgebra.comul\n  counit_comul := ModuleCat.hom_ext <| by simpa using Coalgebra.rTensor_counit_comp_comul\n  comul_counit := ModuleCat.hom_ext <| by simpa using Coalgebra.lTensor_counit_comp_comul\n  comul_assoc := ModuleCat.hom_ext <| by simp_rw [ModuleCat.of_coe]; exact Coalgebra.coassoc.symm\n\n"}
{"name":"CoalgebraCat.toComonObj_X","module":"Mathlib.Algebra.Category.CoalgebraCat.ComonEquivalence","initialProofState":"R : Type u\ninst✝ : CommRing R\nX : CoalgebraCat R\n⊢ Eq X.toComonObj.X (ModuleCat.of R ↑X.toModuleCat)","decl":"/-- An `R`-coalgebra is a comonoid object in the category of `R`-modules. -/\n@[simps X counit comul] def toComonObj (X : CoalgebraCat R) : Comon_ (ModuleCat R) where\n  X := ModuleCat.of R X\n  counit := ModuleCat.ofHom Coalgebra.counit\n  comul := ModuleCat.ofHom Coalgebra.comul\n  counit_comul := ModuleCat.hom_ext <| by simpa using Coalgebra.rTensor_counit_comp_comul\n  comul_counit := ModuleCat.hom_ext <| by simpa using Coalgebra.lTensor_counit_comp_comul\n  comul_assoc := ModuleCat.hom_ext <| by simp_rw [ModuleCat.of_coe]; exact Coalgebra.coassoc.symm\n\n"}
{"name":"CoalgebraCat.toComon_map_hom","module":"Mathlib.Algebra.Category.CoalgebraCat.ComonEquivalence","initialProofState":"R : Type u\ninst✝ : CommRing R\nX✝ Y✝ : CoalgebraCat R\nf : Quiver.Hom X✝ Y✝\n⊢ Eq ((CoalgebraCat.toComon R).map f).hom (ModuleCat.ofHom ↑f.toCoalgHom)","decl":"variable (R) in\n/-- The natural functor from `R`-coalgebras to comonoid objects in the category of `R`-modules. -/\n@[simps]\ndef toComon : CoalgebraCat R ⥤ Comon_ (ModuleCat R) where\n  obj X := toComonObj X\n  map f :=\n    { hom := ModuleCat.ofHom f.1\n      hom_counit := ModuleCat.hom_ext f.1.counit_comp\n      hom_comul := ModuleCat.hom_ext f.1.map_comp_comul.symm }\n\n"}
{"name":"CoalgebraCat.toComon_obj","module":"Mathlib.Algebra.Category.CoalgebraCat.ComonEquivalence","initialProofState":"R : Type u\ninst✝ : CommRing R\nX : CoalgebraCat R\n⊢ Eq ((CoalgebraCat.toComon R).obj X) X.toComonObj","decl":"variable (R) in\n/-- The natural functor from `R`-coalgebras to comonoid objects in the category of `R`-modules. -/\n@[simps]\ndef toComon : CoalgebraCat R ⥤ Comon_ (ModuleCat R) where\n  obj X := toComonObj X\n  map f :=\n    { hom := ModuleCat.ofHom f.1\n      hom_counit := ModuleCat.hom_ext f.1.counit_comp\n      hom_comul := ModuleCat.hom_ext f.1.map_comp_comul.symm }\n\n"}
{"name":"CoalgebraCat.ofComonObjCoalgebraStruct_counit","module":"Mathlib.Algebra.Category.CoalgebraCat.ComonEquivalence","initialProofState":"R : Type u\ninst✝ : CommRing R\nX : Comon_ (ModuleCat R)\n⊢ Eq CoalgebraStruct.counit (ModuleCat.Hom.hom X.counit)","decl":"/-- A comonoid object in the category of `R`-modules has a natural comultiplication\nand counit. -/\n@[simps]\ninstance ofComonObjCoalgebraStruct (X : Comon_ (ModuleCat R)) :\n    CoalgebraStruct R X.X where\n  comul := X.comul.hom\n  counit := X.counit.hom\n\n"}
{"name":"CoalgebraCat.ofComonObjCoalgebraStruct_comul","module":"Mathlib.Algebra.Category.CoalgebraCat.ComonEquivalence","initialProofState":"R : Type u\ninst✝ : CommRing R\nX : Comon_ (ModuleCat R)\n⊢ Eq CoalgebraStruct.comul (ModuleCat.Hom.hom X.comul)","decl":"/-- A comonoid object in the category of `R`-modules has a natural comultiplication\nand counit. -/\n@[simps]\ninstance ofComonObjCoalgebraStruct (X : Comon_ (ModuleCat R)) :\n    CoalgebraStruct R X.X where\n  comul := X.comul.hom\n  counit := X.counit.hom\n\n"}
{"name":"CoalgebraCat.comonEquivalence_counitIso","module":"Mathlib.Algebra.Category.CoalgebraCat.ComonEquivalence","initialProofState":"R : Type u\ninst✝ : CommRing R\n⊢ Eq (CoalgebraCat.comonEquivalence R).counitIso (CategoryTheory.NatIso.ofComponents (fun x => CategoryTheory.Iso.refl (((CoalgebraCat.ofComon R).comp (CoalgebraCat.toComon R)).obj x)) ⋯)","decl":"/-- The natural category equivalence between `R`-coalgebras and comonoid objects in the\ncategory of `R`-modules. -/\n@[simps]\nnoncomputable def comonEquivalence : CoalgebraCat R ≌ Comon_ (ModuleCat R) where\n  functor := toComon R\n  inverse := ofComon R\n  unitIso := NatIso.ofComponents (fun _ => Iso.refl _) fun _ => by rfl\n  counitIso := NatIso.ofComponents (fun _ => Iso.refl _) fun _ => by rfl\n\n"}
{"name":"CoalgebraCat.comonEquivalence_inverse","module":"Mathlib.Algebra.Category.CoalgebraCat.ComonEquivalence","initialProofState":"R : Type u\ninst✝ : CommRing R\n⊢ Eq (CoalgebraCat.comonEquivalence R).inverse (CoalgebraCat.ofComon R)","decl":"/-- The natural category equivalence between `R`-coalgebras and comonoid objects in the\ncategory of `R`-modules. -/\n@[simps]\nnoncomputable def comonEquivalence : CoalgebraCat R ≌ Comon_ (ModuleCat R) where\n  functor := toComon R\n  inverse := ofComon R\n  unitIso := NatIso.ofComponents (fun _ => Iso.refl _) fun _ => by rfl\n  counitIso := NatIso.ofComponents (fun _ => Iso.refl _) fun _ => by rfl\n\n"}
{"name":"CoalgebraCat.comonEquivalence_functor","module":"Mathlib.Algebra.Category.CoalgebraCat.ComonEquivalence","initialProofState":"R : Type u\ninst✝ : CommRing R\n⊢ Eq (CoalgebraCat.comonEquivalence R).functor (CoalgebraCat.toComon R)","decl":"/-- The natural category equivalence between `R`-coalgebras and comonoid objects in the\ncategory of `R`-modules. -/\n@[simps]\nnoncomputable def comonEquivalence : CoalgebraCat R ≌ Comon_ (ModuleCat R) where\n  functor := toComon R\n  inverse := ofComon R\n  unitIso := NatIso.ofComponents (fun _ => Iso.refl _) fun _ => by rfl\n  counitIso := NatIso.ofComponents (fun _ => Iso.refl _) fun _ => by rfl\n\n"}
{"name":"CoalgebraCat.comonEquivalence_unitIso","module":"Mathlib.Algebra.Category.CoalgebraCat.ComonEquivalence","initialProofState":"R : Type u\ninst✝ : CommRing R\n⊢ Eq (CoalgebraCat.comonEquivalence R).unitIso (CategoryTheory.NatIso.ofComponents (fun x => CategoryTheory.Iso.refl ((CategoryTheory.Functor.id (CoalgebraCat R)).obj x)) ⋯)","decl":"/-- The natural category equivalence between `R`-coalgebras and comonoid objects in the\ncategory of `R`-modules. -/\n@[simps]\nnoncomputable def comonEquivalence : CoalgebraCat R ≌ Comon_ (ModuleCat R) where\n  functor := toComon R\n  inverse := ofComon R\n  unitIso := NatIso.ofComponents (fun _ => Iso.refl _) fun _ => by rfl\n  counitIso := NatIso.ofComponents (fun _ => Iso.refl _) fun _ => by rfl\n\n"}
{"name":"CoalgebraCat.MonoidalCategoryAux.tensorObj_comul","module":"Mathlib.Algebra.Category.CoalgebraCat.ComonEquivalence","initialProofState":"R : Type u\ninst✝ : CommRing R\nK L : CoalgebraCat R\n⊢ Eq CoalgebraStruct.comul ((↑(TensorProduct.tensorTensorTensorComm R ↑K.toModuleCat ↑K.toModuleCat ↑L.toModuleCat ↑L.toModuleCat)).comp (TensorProduct.map CoalgebraStruct.comul CoalgebraStruct.comul))","decl":"theorem tensorObj_comul (K L : CoalgebraCat R) :\n    Coalgebra.comul (R := R) (A := (K ⊗ L : CoalgebraCat R))\n      = (TensorProduct.tensorTensorTensorComm R K K L L).toLinearMap\n      ∘ₗ TensorProduct.map Coalgebra.comul Coalgebra.comul := by\n  rw [ofComonObjCoalgebraStruct_comul]\n  dsimp only [Equivalence.symm_inverse, comonEquivalence_functor, toComon_obj]\n  simp only [Comon_.monoidal_tensorObj_comul, toComonObj_X, ModuleCat.of_coe, toComonObj_comul,\n    tensorμ_eq_tensorTensorTensorComm]\n  rfl\n\n"}
{"name":"CoalgebraCat.MonoidalCategoryAux.tensorHom_toLinearMap","module":"Mathlib.Algebra.Category.CoalgebraCat.ComonEquivalence","initialProofState":"R : Type u\ninst✝¹² : CommRing R\nM N P Q : Type u\ninst✝¹¹ : AddCommGroup M\ninst✝¹⁰ : AddCommGroup N\ninst✝⁹ : AddCommGroup P\ninst✝⁸ : AddCommGroup Q\ninst✝⁷ : Module R M\ninst✝⁶ : Module R N\ninst✝⁵ : Module R P\ninst✝⁴ : Module R Q\ninst✝³ : Coalgebra R M\ninst✝² : Coalgebra R N\ninst✝¹ : Coalgebra R P\ninst✝ : Coalgebra R Q\nf : CoalgHom R M N\ng : CoalgHom R P Q\n⊢ Eq (CategoryTheory.MonoidalCategoryStruct.tensorHom (CoalgebraCat.ofHom f) (CoalgebraCat.ofHom g)).toCoalgHom.toLinearMap (TensorProduct.map f.toLinearMap g.toLinearMap)","decl":"theorem tensorHom_toLinearMap (f : M →ₗc[R] N) (g : P →ₗc[R] Q) :\n    (CoalgebraCat.ofHom f ⊗ CoalgebraCat.ofHom g).1.toLinearMap\n      = TensorProduct.map f.toLinearMap g.toLinearMap := rfl\n\n"}
{"name":"CoalgebraCat.MonoidalCategoryAux.associator_hom_toLinearMap","module":"Mathlib.Algebra.Category.CoalgebraCat.ComonEquivalence","initialProofState":"R : Type u\ninst✝⁹ : CommRing R\nM N P : Type u\ninst✝⁸ : AddCommGroup M\ninst✝⁷ : AddCommGroup N\ninst✝⁶ : AddCommGroup P\ninst✝⁵ : Module R M\ninst✝⁴ : Module R N\ninst✝³ : Module R P\ninst✝² : Coalgebra R M\ninst✝¹ : Coalgebra R N\ninst✝ : Coalgebra R P\n⊢ Eq (CategoryTheory.MonoidalCategoryStruct.associator (CoalgebraCat.of R M) (CoalgebraCat.of R N) (CoalgebraCat.of R P)).hom.toCoalgHom.toLinearMap ↑(TensorProduct.assoc R M N P)","decl":"theorem associator_hom_toLinearMap :\n    (α_ (CoalgebraCat.of R M) (CoalgebraCat.of R N) (CoalgebraCat.of R P)).hom.1.toLinearMap\n      = (TensorProduct.assoc R M N P).toLinearMap :=\n  TensorProduct.ext <| TensorProduct.ext <| by ext; rfl\n\n"}
{"name":"CoalgebraCat.MonoidalCategoryAux.leftUnitor_hom_toLinearMap","module":"Mathlib.Algebra.Category.CoalgebraCat.ComonEquivalence","initialProofState":"R : Type u\ninst✝³ : CommRing R\nM : Type u\ninst✝² : AddCommGroup M\ninst✝¹ : Module R M\ninst✝ : Coalgebra R M\n⊢ Eq (CategoryTheory.MonoidalCategoryStruct.leftUnitor (CoalgebraCat.of R M)).hom.toCoalgHom.toLinearMap ↑(TensorProduct.lid R M)","decl":"theorem leftUnitor_hom_toLinearMap :\n    (λ_ (CoalgebraCat.of R M)).hom.1.toLinearMap = (TensorProduct.lid R M).toLinearMap :=\n  TensorProduct.ext <| by ext; rfl\n\n"}
{"name":"CoalgebraCat.MonoidalCategoryAux.rightUnitor_hom_toLinearMap","module":"Mathlib.Algebra.Category.CoalgebraCat.ComonEquivalence","initialProofState":"R : Type u\ninst✝³ : CommRing R\nM : Type u\ninst✝² : AddCommGroup M\ninst✝¹ : Module R M\ninst✝ : Coalgebra R M\n⊢ Eq (CategoryTheory.MonoidalCategoryStruct.rightUnitor (CoalgebraCat.of R M)).hom.toCoalgHom.toLinearMap ↑(TensorProduct.rid R M)","decl":"theorem rightUnitor_hom_toLinearMap :\n    (ρ_ (CoalgebraCat.of R M)).hom.1.toLinearMap = (TensorProduct.rid R M).toLinearMap :=\n  TensorProduct.ext <| by ext; rfl\n\n"}
{"name":"CoalgebraCat.MonoidalCategoryAux.comul_tensorObj","module":"Mathlib.Algebra.Category.CoalgebraCat.ComonEquivalence","initialProofState":"R : Type u\ninst✝⁶ : CommRing R\nM N : Type u\ninst✝⁵ : AddCommGroup M\ninst✝⁴ : AddCommGroup N\ninst✝³ : Module R M\ninst✝² : Module R N\ninst✝¹ : Coalgebra R M\ninst✝ : Coalgebra R N\n⊢ Eq CoalgebraStruct.comul CoalgebraStruct.comul","decl":"theorem comul_tensorObj :\n    Coalgebra.comul (R := R) (A := (CoalgebraCat.of R M ⊗ CoalgebraCat.of R N : CoalgebraCat R))\n      = Coalgebra.comul (A := M ⊗[R] N) := by\n  rw [ofComonObjCoalgebraStruct_comul]\n  dsimp only [Equivalence.symm_inverse, comonEquivalence_functor, toComon_obj,\n    instCoalgebraStruct_comul]\n  simp only [Comon_.monoidal_tensorObj_comul, toComonObj_X, of_carrier, of_isAddCommGroup,\n    of_isModule, toComonObj_comul, of_instCoalgebra, tensorμ_eq_tensorTensorTensorComm]\n  rfl\n\n"}
{"name":"CoalgebraCat.MonoidalCategoryAux.comul_tensorObj_tensorObj_right","module":"Mathlib.Algebra.Category.CoalgebraCat.ComonEquivalence","initialProofState":"R : Type u\ninst✝⁹ : CommRing R\nM N P : Type u\ninst✝⁸ : AddCommGroup M\ninst✝⁷ : AddCommGroup N\ninst✝⁶ : AddCommGroup P\ninst✝⁵ : Module R M\ninst✝⁴ : Module R N\ninst✝³ : Module R P\ninst✝² : Coalgebra R M\ninst✝¹ : Coalgebra R N\ninst✝ : Coalgebra R P\n⊢ Eq CoalgebraStruct.comul CoalgebraStruct.comul","decl":"theorem comul_tensorObj_tensorObj_right :\n    Coalgebra.comul (R := R) (A := (CoalgebraCat.of R M ⊗\n      (CoalgebraCat.of R N ⊗ CoalgebraCat.of R P) : CoalgebraCat R))\n      = Coalgebra.comul (A := M ⊗[R] N ⊗[R] P) := by\n  rw [ofComonObjCoalgebraStruct_comul]\n  dsimp only [Equivalence.symm_inverse, comonEquivalence_functor, toComon_obj,\n    instCoalgebraStruct_comul]\n  simp only [Comon_.monoidal_tensorObj_comul, toComonObj_X, of_carrier, of_isAddCommGroup,\n    of_isModule, ModuleCat.of_coe, toComonObj_comul, of_instCoalgebra]\n  rw [ofComonObjCoalgebraStruct_comul]\n  dsimp only [Equivalence.symm_inverse, comonEquivalence_functor, toComon_obj]\n  simp only [instMonoidalCategoryStruct_tensorObj, ModuleCat.MonoidalCategory.tensorObj,\n    ModuleCat.coe_of, Comon_.monoidal_tensorObj_comul, toComonObj_X, of_carrier, of_isAddCommGroup,\n    of_isModule, toComonObj_comul, of_instCoalgebra, tensorμ_eq_tensorTensorTensorComm]\n  rfl\n\n"}
{"name":"CoalgebraCat.MonoidalCategoryAux.comul_tensorObj_tensorObj_left","module":"Mathlib.Algebra.Category.CoalgebraCat.ComonEquivalence","initialProofState":"R : Type u\ninst✝⁹ : CommRing R\nM N P : Type u\ninst✝⁸ : AddCommGroup M\ninst✝⁷ : AddCommGroup N\ninst✝⁶ : AddCommGroup P\ninst✝⁵ : Module R M\ninst✝⁴ : Module R N\ninst✝³ : Module R P\ninst✝² : Coalgebra R M\ninst✝¹ : Coalgebra R N\ninst✝ : Coalgebra R P\n⊢ Eq CoalgebraStruct.comul CoalgebraStruct.comul","decl":"theorem comul_tensorObj_tensorObj_left :\n    Coalgebra.comul (R := R)\n      (A := ((CoalgebraCat.of R M ⊗ CoalgebraCat.of R N) ⊗ CoalgebraCat.of R P : CoalgebraCat R))\n      = Coalgebra.comul (A := (M ⊗[R] N) ⊗[R] P) := by\n  rw [ofComonObjCoalgebraStruct_comul]\n  dsimp only [Equivalence.symm_inverse, comonEquivalence_functor, toComon_obj,\n    instCoalgebraStruct_comul]\n  simp only [Comon_.monoidal_tensorObj_comul, toComonObj_X, ModuleCat.of_coe, of_carrier,\n    of_isAddCommGroup, of_isModule, toComonObj_comul, of_instCoalgebra]\n  rw [ofComonObjCoalgebraStruct_comul]\n  dsimp only [Equivalence.symm_inverse, comonEquivalence_functor, toComon_obj]\n  simp only [instMonoidalCategoryStruct_tensorObj, ModuleCat.MonoidalCategory.tensorObj,\n    ModuleCat.coe_of, Comon_.monoidal_tensorObj_comul, toComonObj_X, of_carrier, of_isAddCommGroup,\n    of_isModule, toComonObj_comul, of_instCoalgebra, tensorμ_eq_tensorTensorTensorComm]\n  rfl\n\n"}
{"name":"CoalgebraCat.MonoidalCategoryAux.counit_tensorObj","module":"Mathlib.Algebra.Category.CoalgebraCat.ComonEquivalence","initialProofState":"R : Type u\ninst✝⁶ : CommRing R\nM N : Type u\ninst✝⁵ : AddCommGroup M\ninst✝⁴ : AddCommGroup N\ninst✝³ : Module R M\ninst✝² : Module R N\ninst✝¹ : Coalgebra R M\ninst✝ : Coalgebra R N\n⊢ Eq CoalgebraStruct.counit CoalgebraStruct.counit","decl":"theorem counit_tensorObj :\n    Coalgebra.counit (R := R) (A := (CoalgebraCat.of R M ⊗ CoalgebraCat.of R N : CoalgebraCat R))\n      = Coalgebra.counit (A := M ⊗[R] N) := by\n  rfl\n\n"}
{"name":"CoalgebraCat.MonoidalCategoryAux.counit_tensorObj_tensorObj_right","module":"Mathlib.Algebra.Category.CoalgebraCat.ComonEquivalence","initialProofState":"R : Type u\ninst✝⁹ : CommRing R\nM N P : Type u\ninst✝⁸ : AddCommGroup M\ninst✝⁷ : AddCommGroup N\ninst✝⁶ : AddCommGroup P\ninst✝⁵ : Module R M\ninst✝⁴ : Module R N\ninst✝³ : Module R P\ninst✝² : Coalgebra R M\ninst✝¹ : Coalgebra R N\ninst✝ : Coalgebra R P\n⊢ Eq CoalgebraStruct.counit CoalgebraStruct.counit","decl":"theorem counit_tensorObj_tensorObj_right :\n    Coalgebra.counit (R := R)\n      (A := (CoalgebraCat.of R M ⊗ (CoalgebraCat.of R N ⊗ CoalgebraCat.of R P) : CoalgebraCat R))\n      = Coalgebra.counit (A := M ⊗[R] (N ⊗[R] P)) := by\n  ext; rfl\n\n"}
{"name":"CoalgebraCat.MonoidalCategoryAux.counit_tensorObj_tensorObj_left","module":"Mathlib.Algebra.Category.CoalgebraCat.ComonEquivalence","initialProofState":"R : Type u\ninst✝⁹ : CommRing R\nM N P : Type u\ninst✝⁸ : AddCommGroup M\ninst✝⁷ : AddCommGroup N\ninst✝⁶ : AddCommGroup P\ninst✝⁵ : Module R M\ninst✝⁴ : Module R N\ninst✝³ : Module R P\ninst✝² : Coalgebra R M\ninst✝¹ : Coalgebra R N\ninst✝ : Coalgebra R P\n⊢ Eq CoalgebraStruct.counit CoalgebraStruct.counit","decl":"theorem counit_tensorObj_tensorObj_left :\n    Coalgebra.counit (R := R)\n      (A := ((CoalgebraCat.of R M ⊗ CoalgebraCat.of R N) ⊗ CoalgebraCat.of R P : CoalgebraCat R))\n      = Coalgebra.counit (A := (M ⊗[R] N) ⊗[R] P) := by\n  ext; rfl\n\n"}
