{"name":"Finset.mem_symmDiff","module":"Mathlib.Data.Finset.SymmDiff","initialProofState":"α : Type u_1\ninst✝ : DecidableEq α\ns t : Finset α\na : α\n⊢ Iff (Membership.mem (symmDiff s t) a) (Or (And (Membership.mem s a) (Not (Membership.mem t a))) (And (Membership.mem t a) (Not (Membership.mem s a))))","decl":"theorem mem_symmDiff : a ∈ s ∆ t ↔ a ∈ s ∧ a ∉ t ∨ a ∈ t ∧ a ∉ s := by\n  simp_rw [symmDiff, sup_eq_union, mem_union, mem_sdiff]\n\n"}
{"name":"Finset.coe_symmDiff","module":"Mathlib.Data.Finset.SymmDiff","initialProofState":"α : Type u_1\ninst✝ : DecidableEq α\ns t : Finset α\n⊢ Eq (↑(symmDiff s t)) (symmDiff ↑s ↑t)","decl":"@[simp, norm_cast]\ntheorem coe_symmDiff : (↑(s ∆ t) : Set α) = (s : Set α) ∆ t :=\n  Set.ext fun x => by simp [mem_symmDiff, Set.mem_symmDiff]\n\n"}
{"name":"Finset.symmDiff_eq_empty","module":"Mathlib.Data.Finset.SymmDiff","initialProofState":"α : Type u_1\ninst✝ : DecidableEq α\ns t : Finset α\n⊢ Iff (Eq (symmDiff s t) EmptyCollection.emptyCollection) (Eq s t)","decl":"@[simp] lemma symmDiff_eq_empty : s ∆ t = ∅ ↔ s = t := symmDiff_eq_bot\n"}
{"name":"Finset.symmDiff_nonempty","module":"Mathlib.Data.Finset.SymmDiff","initialProofState":"α : Type u_1\ninst✝ : DecidableEq α\ns t : Finset α\n⊢ Iff (symmDiff s t).Nonempty (Ne s t)","decl":"@[simp] lemma symmDiff_nonempty : (s ∆ t).Nonempty ↔ s ≠ t :=\n  nonempty_iff_ne_empty.trans symmDiff_eq_empty.not\n\n"}
