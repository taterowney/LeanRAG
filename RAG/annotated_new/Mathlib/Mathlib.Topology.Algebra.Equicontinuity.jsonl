{"name":"equicontinuous_of_equicontinuousAt_zero","module":"Mathlib.Topology.Algebra.Equicontinuity","initialProofState":"ι : Type u_1\nG : Type u_2\nM : Type u_3\nhom : Type u_4\ninst✝⁷ : TopologicalSpace G\ninst✝⁶ : UniformSpace M\ninst✝⁵ : AddGroup G\ninst✝⁴ : AddGroup M\ninst✝³ : TopologicalAddGroup G\ninst✝² : UniformAddGroup M\ninst✝¹ : FunLike hom G M\ninst✝ : AddMonoidHomClass hom G M\nF : ι → hom\nhf : EquicontinuousAt (Function.comp DFunLike.coe F) 0\n⊢ Equicontinuous (Function.comp DFunLike.coe F)","decl":"@[to_additive]\ntheorem equicontinuous_of_equicontinuousAt_one {ι G M hom : Type*} [TopologicalSpace G]\n    [UniformSpace M] [Group G] [Group M] [TopologicalGroup G] [UniformGroup M]\n    [FunLike hom G M] [MonoidHomClass hom G M] (F : ι → hom)\n    (hf : EquicontinuousAt ((↑) ∘ F) (1 : G)) :\n    Equicontinuous ((↑) ∘ F) := by\n  rw [equicontinuous_iff_continuous]\n  rw [equicontinuousAt_iff_continuousAt] at hf\n  let φ : G →* (ι →ᵤ M) :=\n    { toFun := swap ((↑) ∘ F)\n      map_one' := by dsimp [UniformFun]; ext; exact map_one _\n      map_mul' := fun a b => by dsimp [UniformFun]; ext; exact map_mul _ _ _ }\n  exact continuous_of_continuousAt_one φ hf\n\n"}
{"name":"equicontinuous_of_equicontinuousAt_one","module":"Mathlib.Topology.Algebra.Equicontinuity","initialProofState":"ι : Type u_1\nG : Type u_2\nM : Type u_3\nhom : Type u_4\ninst✝⁷ : TopologicalSpace G\ninst✝⁶ : UniformSpace M\ninst✝⁵ : Group G\ninst✝⁴ : Group M\ninst✝³ : TopologicalGroup G\ninst✝² : UniformGroup M\ninst✝¹ : FunLike hom G M\ninst✝ : MonoidHomClass hom G M\nF : ι → hom\nhf : EquicontinuousAt (Function.comp DFunLike.coe F) 1\n⊢ Equicontinuous (Function.comp DFunLike.coe F)","decl":"@[to_additive]\ntheorem equicontinuous_of_equicontinuousAt_one {ι G M hom : Type*} [TopologicalSpace G]\n    [UniformSpace M] [Group G] [Group M] [TopologicalGroup G] [UniformGroup M]\n    [FunLike hom G M] [MonoidHomClass hom G M] (F : ι → hom)\n    (hf : EquicontinuousAt ((↑) ∘ F) (1 : G)) :\n    Equicontinuous ((↑) ∘ F) := by\n  rw [equicontinuous_iff_continuous]\n  rw [equicontinuousAt_iff_continuousAt] at hf\n  let φ : G →* (ι →ᵤ M) :=\n    { toFun := swap ((↑) ∘ F)\n      map_one' := by dsimp [UniformFun]; ext; exact map_one _\n      map_mul' := fun a b => by dsimp [UniformFun]; ext; exact map_mul _ _ _ }\n  exact continuous_of_continuousAt_one φ hf\n\n"}
{"name":"uniformEquicontinuous_of_equicontinuousAt_one","module":"Mathlib.Topology.Algebra.Equicontinuity","initialProofState":"ι : Type u_1\nG : Type u_2\nM : Type u_3\nhom : Type u_4\ninst✝⁷ : UniformSpace G\ninst✝⁶ : UniformSpace M\ninst✝⁵ : Group G\ninst✝⁴ : Group M\ninst✝³ : UniformGroup G\ninst✝² : UniformGroup M\ninst✝¹ : FunLike hom G M\ninst✝ : MonoidHomClass hom G M\nF : ι → hom\nhf : EquicontinuousAt (Function.comp DFunLike.coe F) 1\n⊢ UniformEquicontinuous (Function.comp DFunLike.coe F)","decl":"@[to_additive]\ntheorem uniformEquicontinuous_of_equicontinuousAt_one {ι G M hom : Type*} [UniformSpace G]\n    [UniformSpace M] [Group G] [Group M] [UniformGroup G] [UniformGroup M]\n    [FunLike hom G M] [MonoidHomClass hom G M]\n    (F : ι → hom) (hf : EquicontinuousAt ((↑) ∘ F) (1 : G)) :\n    UniformEquicontinuous ((↑) ∘ F) := by\n  rw [uniformEquicontinuous_iff_uniformContinuous]\n  rw [equicontinuousAt_iff_continuousAt] at hf\n  let φ : G →* (ι →ᵤ M) :=\n    { toFun := swap ((↑) ∘ F)\n      map_one' := by dsimp [UniformFun]; ext; exact map_one _\n      map_mul' := fun a b => by dsimp [UniformFun]; ext; exact map_mul _ _ _ }\n  exact uniformContinuous_of_continuousAt_one φ hf\n"}
{"name":"uniformEquicontinuous_of_equicontinuousAt_zero","module":"Mathlib.Topology.Algebra.Equicontinuity","initialProofState":"ι : Type u_1\nG : Type u_2\nM : Type u_3\nhom : Type u_4\ninst✝⁷ : UniformSpace G\ninst✝⁶ : UniformSpace M\ninst✝⁵ : AddGroup G\ninst✝⁴ : AddGroup M\ninst✝³ : UniformAddGroup G\ninst✝² : UniformAddGroup M\ninst✝¹ : FunLike hom G M\ninst✝ : AddMonoidHomClass hom G M\nF : ι → hom\nhf : EquicontinuousAt (Function.comp DFunLike.coe F) 0\n⊢ UniformEquicontinuous (Function.comp DFunLike.coe F)","decl":"@[to_additive]\ntheorem uniformEquicontinuous_of_equicontinuousAt_one {ι G M hom : Type*} [UniformSpace G]\n    [UniformSpace M] [Group G] [Group M] [UniformGroup G] [UniformGroup M]\n    [FunLike hom G M] [MonoidHomClass hom G M]\n    (F : ι → hom) (hf : EquicontinuousAt ((↑) ∘ F) (1 : G)) :\n    UniformEquicontinuous ((↑) ∘ F) := by\n  rw [uniformEquicontinuous_iff_uniformContinuous]\n  rw [equicontinuousAt_iff_continuousAt] at hf\n  let φ : G →* (ι →ᵤ M) :=\n    { toFun := swap ((↑) ∘ F)\n      map_one' := by dsimp [UniformFun]; ext; exact map_one _\n      map_mul' := fun a b => by dsimp [UniformFun]; ext; exact map_mul _ _ _ }\n  exact uniformContinuous_of_continuousAt_one φ hf\n"}
