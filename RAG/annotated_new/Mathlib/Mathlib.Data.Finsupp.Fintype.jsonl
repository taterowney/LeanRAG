{"name":"Finsupp.infinite_of_left","module":"Mathlib.Data.Finsupp.Fintype","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝² : Zero α\ninst✝¹ : Nontrivial α\ninst✝ : Infinite ι\n⊢ Infinite (Finsupp ι α)","decl":"instance Finsupp.infinite_of_left [Nontrivial α] [Infinite ι] : Infinite (ι →₀ α) :=\n  let ⟨_, hm⟩ := exists_ne (0 : α)\n  Infinite.of_injective _ <| Finsupp.single_left_injective hm\n\n"}
{"name":"Finsupp.infinite_of_right","module":"Mathlib.Data.Finsupp.Fintype","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝² : Zero α\ninst✝¹ : Infinite α\ninst✝ : Nonempty ι\n⊢ Infinite (Finsupp ι α)","decl":"instance Finsupp.infinite_of_right [Infinite α] [Nonempty ι] : Infinite (ι →₀ α) :=\n  Infinite.of_injective (fun i => Finsupp.single (Classical.arbitrary ι) i)\n    (Finsupp.single_injective (Classical.arbitrary ι))\n\n"}
{"name":"Fintype.card_finsupp","module":"Mathlib.Data.Finsupp.Fintype","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝³ : DecidableEq ι\ninst✝² : Fintype ι\ninst✝¹ : Zero α\ninst✝ : Fintype α\n⊢ Eq (Fintype.card (Finsupp ι α)) (HPow.hPow (Fintype.card α) (Fintype.card ι))","decl":"variable (ι α) in\n@[simp] lemma Fintype.card_finsupp : card (ι →₀ α) = card α ^ card ι := by\n  simp [card_congr Finsupp.equivFunOnFinite]\n"}
