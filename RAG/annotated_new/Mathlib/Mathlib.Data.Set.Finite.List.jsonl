{"name":"List.finite_length_eq","module":"Mathlib.Data.Set.Finite.List","initialProofState":"α : Type u_1\ninst✝ : Finite α\nn : Nat\n⊢ (setOf fun l => Eq l.length n).Finite","decl":"lemma finite_length_eq : {l : List α | l.length = n}.Finite := List.Vector.finite\n\n"}
{"name":"List.finite_length_lt","module":"Mathlib.Data.Set.Finite.List","initialProofState":"α : Type u_1\ninst✝ : Finite α\nn : Nat\n⊢ (setOf fun l => LT.lt l.length n).Finite","decl":"lemma finite_length_lt : {l : List α | l.length < n}.Finite := by\n  convert (Finset.range n).finite_toSet.biUnion fun i _ ↦ finite_length_eq α i; ext; simp\n\n"}
{"name":"List.finite_length_le","module":"Mathlib.Data.Set.Finite.List","initialProofState":"α : Type u_1\ninst✝ : Finite α\nn : Nat\n⊢ (setOf fun l => LE.le l.length n).Finite","decl":"lemma finite_length_le : {l : List α | l.length ≤ n}.Finite := by\n  simpa [Nat.lt_succ_iff] using finite_length_lt α (n + 1)\n\n"}
