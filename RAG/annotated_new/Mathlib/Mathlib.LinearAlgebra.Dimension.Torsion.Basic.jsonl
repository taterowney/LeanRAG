{"name":"rank_quotient_eq_of_le_torsion","module":"Mathlib.LinearAlgebra.Dimension.Torsion.Basic","initialProofState":"R : Type u_1\nM : Type u_2\ninst✝² : CommRing R\ninst✝¹ : AddCommGroup M\ninst✝ : Module R M\nM' : Submodule R M\nhN : LE.le M' (Submodule.torsion R M)\n⊢ Eq (Module.rank R (HasQuotient.Quotient M M')) (Module.rank R M)","decl":"theorem rank_quotient_eq_of_le_torsion {R M : Type*} [CommRing R] [AddCommGroup M] [Module R M]\n    {M' : Submodule R M} (hN : M' ≤ torsion R M) : Module.rank R (M ⧸ M') = Module.rank R M :=\n  (rank_quotient_le M').antisymm <| by\n    nontriviality R\n    rw [Module.rank]\n    have := nonempty_linearIndependent_set R M\n    refine ciSup_le fun ⟨s, hs⟩ ↦ LinearIndependent.cardinal_le_rank (v := (M'.mkQ ·)) ?_\n    rw [linearIndependent_iff'] at hs ⊢\n    simp_rw [← map_smul, ← map_sum, mkQ_apply, Quotient.mk_eq_zero]\n    intro t g hg i hi\n    obtain ⟨r, hg⟩ := hN hg\n    simp_rw [Finset.smul_sum, Submonoid.smul_def, smul_smul] at hg\n    exact r.prop _ (mul_comm (g i) r ▸ hs t _ hg i hi)\n"}
