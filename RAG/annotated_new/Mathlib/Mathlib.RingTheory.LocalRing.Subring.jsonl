{"name":"IsLocalRing.of_injective","module":"Mathlib.RingTheory.LocalRing.Subring","initialProofState":"R : Type u_2\nS : Type u_1\ninst✝² : Semiring R\ninst✝¹ : Semiring S\ninst✝ : IsLocalRing S\nf : RingHom R S\nhf : Function.Injective ⇑f\nh : ∀ (a : R), Membership.mem (nonZeroDivisors R) a → IsUnit a\n⊢ IsLocalRing R","decl":"/-- If a (semi)ring `R` in which every element is either invertible or a zero divisor\nembeds in a local (semi)ring `S`, then `R` is local. -/\ntheorem of_injective [IsLocalRing S] {f : R →+* S} (hf : Function.Injective f)\n    (h : ∀ a, a ∈ R⁰ → IsUnit a) : IsLocalRing R := by\n  haveI : Nontrivial R := f.domain_nontrivial\n  refine .of_is_unit_or_is_unit_of_add_one fun {a b} hab ↦\n    (IsLocalRing.isUnit_or_isUnit_of_add_one (map_add f .. ▸ map_one f ▸ congrArg f hab)).imp ?_ ?_\n  <;> exact h _ ∘ mem_nonZeroDivisor_of_injective hf ∘ IsUnit.mem_nonZeroDivisors\n\n"}
{"name":"IsLocalRing.of_subring","module":"Mathlib.RingTheory.LocalRing.Subring","initialProofState":"S : Type u_1\ninst✝¹ : Semiring S\ninst✝ : IsLocalRing S\nR : Subsemiring S\nh : ∀ (a : Subtype fun x => Membership.mem R x), Membership.mem (nonZeroDivisors (Subtype fun x => Membership.mem R x)) a → IsUnit a\n⊢ IsLocalRing (Subtype fun x => Membership.mem R x)","decl":"/-- If in a sub(semi)ring `R` of a local (semi)ring `S` every element is either\ninvertible or a zero divisor, then `R` is local. -/\ntheorem of_subring [IsLocalRing S]  {R : Subsemiring S} (h : ∀ a, a ∈ R⁰ → IsUnit a) :\n    IsLocalRing R :=\n  of_injective R.subtype_injective h\n\n"}
{"name":"IsLocalRing.of_subring'","module":"Mathlib.RingTheory.LocalRing.Subring","initialProofState":"S : Type u_1\ninst✝¹ : Semiring S\nR R' : Subsemiring S\ninst✝ : IsLocalRing (Subtype fun x => Membership.mem R' x)\ninc : LE.le R R'\nh : ∀ (a : Subtype fun x => Membership.mem R x), Membership.mem (nonZeroDivisors (Subtype fun x => Membership.mem R x)) a → IsUnit a\n⊢ IsLocalRing (Subtype fun x => Membership.mem R x)","decl":"/-- If in a sub(semi)ring `R` of a local (semi)ring `R'` every element is either\ninvertible or a zero divisor, then `R` is local.\nThis version is for `R` and `R'` that are both sub(semi)rings of a (semi)ring `S`. -/\ntheorem of_subring' {R R' : Subsemiring S} [IsLocalRing R'] (inc : R ≤ R')\n    (h : ∀ a, a ∈ R⁰ → IsUnit a) : IsLocalRing R :=\n  of_injective (Subsemiring.inclusion_injective inc) h\n\n"}
