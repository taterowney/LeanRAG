{"name":"CoalgebraCat.instMonoidalCategoryStruct_leftUnitor","module":"Mathlib.Algebra.Category.CoalgebraCat.Monoidal","initialProofState":"R : Type u\ninst✝ : CommRing R\nX : CoalgebraCat R\n⊢ Eq (CategoryTheory.MonoidalCategoryStruct.leftUnitor X) (Coalgebra.TensorProduct.lid R ↑X.toModuleCat).toCoalgebraCatIso","decl":"@[simps]\nnoncomputable instance instMonoidalCategoryStruct :\n    MonoidalCategoryStruct.{u} (CoalgebraCat R) where\n  tensorObj X Y := of R (X ⊗[R] Y)\n  whiskerLeft X _ _ f := ofHom (f.1.lTensor X)\n  whiskerRight f X := ofHom (f.1.rTensor X)\n  tensorHom f g := ofHom (Coalgebra.TensorProduct.map f.1 g.1)\n  tensorUnit := CoalgebraCat.of R R\n  associator X Y Z := (Coalgebra.TensorProduct.assoc R X Y Z).toCoalgebraCatIso\n  leftUnitor X := (Coalgebra.TensorProduct.lid R X).toCoalgebraCatIso\n  rightUnitor X := (Coalgebra.TensorProduct.rid R X).toCoalgebraCatIso\n\n"}
{"name":"CoalgebraCat.instMonoidalCategoryStruct_associator","module":"Mathlib.Algebra.Category.CoalgebraCat.Monoidal","initialProofState":"R : Type u\ninst✝ : CommRing R\nX Y Z : CoalgebraCat R\n⊢ Eq (CategoryTheory.MonoidalCategoryStruct.associator X Y Z) (Coalgebra.TensorProduct.assoc R ↑X.toModuleCat ↑Y.toModuleCat ↑Z.toModuleCat).toCoalgebraCatIso","decl":"@[simps]\nnoncomputable instance instMonoidalCategoryStruct :\n    MonoidalCategoryStruct.{u} (CoalgebraCat R) where\n  tensorObj X Y := of R (X ⊗[R] Y)\n  whiskerLeft X _ _ f := ofHom (f.1.lTensor X)\n  whiskerRight f X := ofHom (f.1.rTensor X)\n  tensorHom f g := ofHom (Coalgebra.TensorProduct.map f.1 g.1)\n  tensorUnit := CoalgebraCat.of R R\n  associator X Y Z := (Coalgebra.TensorProduct.assoc R X Y Z).toCoalgebraCatIso\n  leftUnitor X := (Coalgebra.TensorProduct.lid R X).toCoalgebraCatIso\n  rightUnitor X := (Coalgebra.TensorProduct.rid R X).toCoalgebraCatIso\n\n"}
{"name":"CoalgebraCat.instMonoidalCategoryStruct_tensorUnit","module":"Mathlib.Algebra.Category.CoalgebraCat.Monoidal","initialProofState":"R : Type u\ninst✝ : CommRing R\n⊢ Eq CategoryTheory.MonoidalCategoryStruct.tensorUnit (CoalgebraCat.of R R)","decl":"@[simps]\nnoncomputable instance instMonoidalCategoryStruct :\n    MonoidalCategoryStruct.{u} (CoalgebraCat R) where\n  tensorObj X Y := of R (X ⊗[R] Y)\n  whiskerLeft X _ _ f := ofHom (f.1.lTensor X)\n  whiskerRight f X := ofHom (f.1.rTensor X)\n  tensorHom f g := ofHom (Coalgebra.TensorProduct.map f.1 g.1)\n  tensorUnit := CoalgebraCat.of R R\n  associator X Y Z := (Coalgebra.TensorProduct.assoc R X Y Z).toCoalgebraCatIso\n  leftUnitor X := (Coalgebra.TensorProduct.lid R X).toCoalgebraCatIso\n  rightUnitor X := (Coalgebra.TensorProduct.rid R X).toCoalgebraCatIso\n\n"}
{"name":"CoalgebraCat.instMonoidalCategoryStruct_tensorHom_toCoalgHom","module":"Mathlib.Algebra.Category.CoalgebraCat.Monoidal","initialProofState":"R : Type u\ninst✝ : CommRing R\nX₁✝ Y₁✝ X₂✝ Y₂✝ : CoalgebraCat R\nf : Quiver.Hom X₁✝ Y₁✝\ng : Quiver.Hom X₂✝ Y₂✝\n⊢ Eq (CategoryTheory.MonoidalCategoryStruct.tensorHom f g).toCoalgHom (Coalgebra.TensorProduct.map f.toCoalgHom g.toCoalgHom)","decl":"@[simps]\nnoncomputable instance instMonoidalCategoryStruct :\n    MonoidalCategoryStruct.{u} (CoalgebraCat R) where\n  tensorObj X Y := of R (X ⊗[R] Y)\n  whiskerLeft X _ _ f := ofHom (f.1.lTensor X)\n  whiskerRight f X := ofHom (f.1.rTensor X)\n  tensorHom f g := ofHom (Coalgebra.TensorProduct.map f.1 g.1)\n  tensorUnit := CoalgebraCat.of R R\n  associator X Y Z := (Coalgebra.TensorProduct.assoc R X Y Z).toCoalgebraCatIso\n  leftUnitor X := (Coalgebra.TensorProduct.lid R X).toCoalgebraCatIso\n  rightUnitor X := (Coalgebra.TensorProduct.rid R X).toCoalgebraCatIso\n\n"}
{"name":"CoalgebraCat.instMonoidalCategoryStruct_whiskerRight_toCoalgHom","module":"Mathlib.Algebra.Category.CoalgebraCat.Monoidal","initialProofState":"R : Type u\ninst✝ : CommRing R\nX₁✝ X₂✝ : CoalgebraCat R\nf : Quiver.Hom X₁✝ X₂✝\nX : CoalgebraCat R\n⊢ Eq (CategoryTheory.MonoidalCategoryStruct.whiskerRight f X).toCoalgHom (CoalgHom.rTensor (↑X.toModuleCat) f.toCoalgHom)","decl":"@[simps]\nnoncomputable instance instMonoidalCategoryStruct :\n    MonoidalCategoryStruct.{u} (CoalgebraCat R) where\n  tensorObj X Y := of R (X ⊗[R] Y)\n  whiskerLeft X _ _ f := ofHom (f.1.lTensor X)\n  whiskerRight f X := ofHom (f.1.rTensor X)\n  tensorHom f g := ofHom (Coalgebra.TensorProduct.map f.1 g.1)\n  tensorUnit := CoalgebraCat.of R R\n  associator X Y Z := (Coalgebra.TensorProduct.assoc R X Y Z).toCoalgebraCatIso\n  leftUnitor X := (Coalgebra.TensorProduct.lid R X).toCoalgebraCatIso\n  rightUnitor X := (Coalgebra.TensorProduct.rid R X).toCoalgebraCatIso\n\n"}
{"name":"CoalgebraCat.instMonoidalCategoryStruct_whiskerLeft_toCoalgHom","module":"Mathlib.Algebra.Category.CoalgebraCat.Monoidal","initialProofState":"R : Type u\ninst✝ : CommRing R\nX x✝¹ x✝ : CoalgebraCat R\nf : Quiver.Hom x✝¹ x✝\n⊢ Eq (CategoryTheory.MonoidalCategoryStruct.whiskerLeft X f).toCoalgHom (CoalgHom.lTensor (↑X.toModuleCat) f.toCoalgHom)","decl":"@[simps]\nnoncomputable instance instMonoidalCategoryStruct :\n    MonoidalCategoryStruct.{u} (CoalgebraCat R) where\n  tensorObj X Y := of R (X ⊗[R] Y)\n  whiskerLeft X _ _ f := ofHom (f.1.lTensor X)\n  whiskerRight f X := ofHom (f.1.rTensor X)\n  tensorHom f g := ofHom (Coalgebra.TensorProduct.map f.1 g.1)\n  tensorUnit := CoalgebraCat.of R R\n  associator X Y Z := (Coalgebra.TensorProduct.assoc R X Y Z).toCoalgebraCatIso\n  leftUnitor X := (Coalgebra.TensorProduct.lid R X).toCoalgebraCatIso\n  rightUnitor X := (Coalgebra.TensorProduct.rid R X).toCoalgebraCatIso\n\n"}
{"name":"CoalgebraCat.instMonoidalCategoryStruct_rightUnitor","module":"Mathlib.Algebra.Category.CoalgebraCat.Monoidal","initialProofState":"R : Type u\ninst✝ : CommRing R\nX : CoalgebraCat R\n⊢ Eq (CategoryTheory.MonoidalCategoryStruct.rightUnitor X) (Coalgebra.TensorProduct.rid R ↑X.toModuleCat).toCoalgebraCatIso","decl":"@[simps]\nnoncomputable instance instMonoidalCategoryStruct :\n    MonoidalCategoryStruct.{u} (CoalgebraCat R) where\n  tensorObj X Y := of R (X ⊗[R] Y)\n  whiskerLeft X _ _ f := ofHom (f.1.lTensor X)\n  whiskerRight f X := ofHom (f.1.rTensor X)\n  tensorHom f g := ofHom (Coalgebra.TensorProduct.map f.1 g.1)\n  tensorUnit := CoalgebraCat.of R R\n  associator X Y Z := (Coalgebra.TensorProduct.assoc R X Y Z).toCoalgebraCatIso\n  leftUnitor X := (Coalgebra.TensorProduct.lid R X).toCoalgebraCatIso\n  rightUnitor X := (Coalgebra.TensorProduct.rid R X).toCoalgebraCatIso\n\n"}
{"name":"CoalgebraCat.instMonoidalCategoryStruct_tensorObj","module":"Mathlib.Algebra.Category.CoalgebraCat.Monoidal","initialProofState":"R : Type u\ninst✝ : CommRing R\nX Y : CoalgebraCat R\n⊢ Eq (CategoryTheory.MonoidalCategoryStruct.tensorObj X Y) (CoalgebraCat.of R (TensorProduct R ↑X.toModuleCat ↑Y.toModuleCat))","decl":"@[simps]\nnoncomputable instance instMonoidalCategoryStruct :\n    MonoidalCategoryStruct.{u} (CoalgebraCat R) where\n  tensorObj X Y := of R (X ⊗[R] Y)\n  whiskerLeft X _ _ f := ofHom (f.1.lTensor X)\n  whiskerRight f X := ofHom (f.1.rTensor X)\n  tensorHom f g := ofHom (Coalgebra.TensorProduct.map f.1 g.1)\n  tensorUnit := CoalgebraCat.of R R\n  associator X Y Z := (Coalgebra.TensorProduct.assoc R X Y Z).toCoalgebraCatIso\n  leftUnitor X := (Coalgebra.TensorProduct.lid R X).toCoalgebraCatIso\n  rightUnitor X := (Coalgebra.TensorProduct.rid R X).toCoalgebraCatIso\n\n"}
{"name":"CoalgebraCat.MonoidalCategory.inducingFunctorData_μIso","module":"Mathlib.Algebra.Category.CoalgebraCat.Monoidal","initialProofState":"R : Type u\ninst✝ : CommRing R\nx✝¹ x✝ : CoalgebraCat R\n⊢ Eq ((CoalgebraCat.MonoidalCategory.inducingFunctorData R).μIso x✝¹ x✝) (CategoryTheory.Iso.refl (CategoryTheory.MonoidalCategoryStruct.tensorObj ((CategoryTheory.forget₂ (CoalgebraCat R) (ModuleCat R)).obj x✝¹) ((CategoryTheory.forget₂ (CoalgebraCat R) (ModuleCat R)).obj x✝)))","decl":"/-- The data needed to induce a `MonoidalCategory` structure via\n`CoalgebraCat.instMonoidalCategoryStruct` and the forgetful functor to modules. -/\n@[simps]\nnoncomputable def MonoidalCategory.inducingFunctorData :\n    Monoidal.InducingFunctorData (forget₂ (CoalgebraCat R) (ModuleCat R)) where\n  μIso _ _ := Iso.refl _\n  whiskerLeft_eq X Y Z f := by ext; rfl\n  whiskerRight_eq X f := by ext; rfl\n  tensorHom_eq f g := by ext; rfl\n  εIso := Iso.refl _\n  associator_eq X Y Z := ModuleCat.hom_ext <| TensorProduct.ext <| TensorProduct.ext <| by ext; rfl\n  leftUnitor_eq X := ModuleCat.hom_ext <| TensorProduct.ext <| by ext; rfl\n  rightUnitor_eq X := ModuleCat.hom_ext <| TensorProduct.ext <| by ext; rfl\n\n"}
{"name":"CoalgebraCat.MonoidalCategory.inducingFunctorData_εIso","module":"Mathlib.Algebra.Category.CoalgebraCat.Monoidal","initialProofState":"R : Type u\ninst✝ : CommRing R\n⊢ Eq (CoalgebraCat.MonoidalCategory.inducingFunctorData R).εIso (CategoryTheory.Iso.refl CategoryTheory.MonoidalCategoryStruct.tensorUnit)","decl":"/-- The data needed to induce a `MonoidalCategory` structure via\n`CoalgebraCat.instMonoidalCategoryStruct` and the forgetful functor to modules. -/\n@[simps]\nnoncomputable def MonoidalCategory.inducingFunctorData :\n    Monoidal.InducingFunctorData (forget₂ (CoalgebraCat R) (ModuleCat R)) where\n  μIso _ _ := Iso.refl _\n  whiskerLeft_eq X Y Z f := by ext; rfl\n  whiskerRight_eq X f := by ext; rfl\n  tensorHom_eq f g := by ext; rfl\n  εIso := Iso.refl _\n  associator_eq X Y Z := ModuleCat.hom_ext <| TensorProduct.ext <| TensorProduct.ext <| by ext; rfl\n  leftUnitor_eq X := ModuleCat.hom_ext <| TensorProduct.ext <| by ext; rfl\n  rightUnitor_eq X := ModuleCat.hom_ext <| TensorProduct.ext <| by ext; rfl\n\n"}
