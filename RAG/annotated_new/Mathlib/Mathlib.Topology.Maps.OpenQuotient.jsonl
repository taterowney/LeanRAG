{"name":"IsOpenQuotientMap.id","module":"Mathlib.Topology.Maps.OpenQuotient","initialProofState":"X : Type u_1\ninst‚úù : TopologicalSpace X\n‚ä¢ IsOpenQuotientMap id","decl":"protected theorem id : IsOpenQuotientMap (id : X ‚Üí X) := ‚ü®surjective_id, continuous_id, .id‚ü©\n\n"}
{"name":"IsOpenQuotientMap.isQuotientMap","module":"Mathlib.Topology.Maps.OpenQuotient","initialProofState":"X : Type u_1\nY : Type u_2\ninst‚úù¬π : TopologicalSpace X\ninst‚úù : TopologicalSpace Y\nf : X ‚Üí Y\nh : IsOpenQuotientMap f\n‚ä¢ Topology.IsQuotientMap f","decl":"/-- An open quotient map is a quotient map. -/\ntheorem isQuotientMap (h : IsOpenQuotientMap f) : IsQuotientMap f :=\n  h.isOpenMap.isQuotientMap h.continuous h.surjective\n\n"}
{"name":"IsOpenQuotientMap.quotientMap","module":"Mathlib.Topology.Maps.OpenQuotient","initialProofState":"X : Type u_1\nY : Type u_2\ninst‚úù¬π : TopologicalSpace X\ninst‚úù : TopologicalSpace Y\nf : X ‚Üí Y\nh : IsOpenQuotientMap f\n‚ä¢ Topology.IsQuotientMap f","decl":"@[deprecated (since := \"2024-10-22\")]\nalias quotientMap := isQuotientMap\n\n"}
{"name":"IsOpenQuotientMap.iff_isOpenMap_isQuotientMap","module":"Mathlib.Topology.Maps.OpenQuotient","initialProofState":"X : Type u_1\nY : Type u_2\ninst‚úù¬π : TopologicalSpace X\ninst‚úù : TopologicalSpace Y\nf : X ‚Üí Y\n‚ä¢ Iff (IsOpenQuotientMap f) (And (IsOpenMap f) (Topology.IsQuotientMap f))","decl":"theorem iff_isOpenMap_isQuotientMap : IsOpenQuotientMap f ‚Üî IsOpenMap f ‚àß IsQuotientMap f :=\n  ‚ü®fun h ‚Ü¶ ‚ü®h.isOpenMap, h.isQuotientMap‚ü©, fun ‚ü®ho, hq‚ü© ‚Ü¶ ‚ü®hq.surjective, hq.continuous, ho‚ü©‚ü©\n\n"}
{"name":"IsOpenQuotientMap.iff_isOpenMap_quotientMap","module":"Mathlib.Topology.Maps.OpenQuotient","initialProofState":"X : Type u_1\nY : Type u_2\ninst‚úù¬π : TopologicalSpace X\ninst‚úù : TopologicalSpace Y\nf : X ‚Üí Y\n‚ä¢ Iff (IsOpenQuotientMap f) (And (IsOpenMap f) (Topology.IsQuotientMap f))","decl":"@[deprecated (since := \"2024-10-22\")]\nalias iff_isOpenMap_quotientMap := iff_isOpenMap_isQuotientMap\n\n"}
{"name":"IsOpenQuotientMap.of_isOpenMap_isQuotientMap","module":"Mathlib.Topology.Maps.OpenQuotient","initialProofState":"X : Type u_1\nY : Type u_2\ninst‚úù¬π : TopologicalSpace X\ninst‚úù : TopologicalSpace Y\nf : X ‚Üí Y\nho : IsOpenMap f\nhq : Topology.IsQuotientMap f\n‚ä¢ IsOpenQuotientMap f","decl":"theorem of_isOpenMap_isQuotientMap (ho : IsOpenMap f) (hq : IsQuotientMap f) :\n    IsOpenQuotientMap f :=\n  iff_isOpenMap_isQuotientMap.2 ‚ü®ho, hq‚ü©\n\n"}
{"name":"IsOpenQuotientMap.of_isOpenMap_quotientMap","module":"Mathlib.Topology.Maps.OpenQuotient","initialProofState":"X : Type u_1\nY : Type u_2\ninst‚úù¬π : TopologicalSpace X\ninst‚úù : TopologicalSpace Y\nf : X ‚Üí Y\nho : IsOpenMap f\nhq : Topology.IsQuotientMap f\n‚ä¢ IsOpenQuotientMap f","decl":"@[deprecated (since := \"2024-10-22\")]\nalias of_isOpenMap_quotientMap := of_isOpenMap_isQuotientMap\n\n"}
{"name":"IsOpenQuotientMap.comp","module":"Mathlib.Topology.Maps.OpenQuotient","initialProofState":"X : Type u_1\nY : Type u_2\nZ : Type u_3\ninst‚úù¬≤ : TopologicalSpace X\ninst‚úù¬π : TopologicalSpace Y\ninst‚úù : TopologicalSpace Z\nf : X ‚Üí Y\ng : Y ‚Üí Z\nhg : IsOpenQuotientMap g\nhf : IsOpenQuotientMap f\n‚ä¢ IsOpenQuotientMap (Function.comp g f)","decl":"theorem comp {g : Y ‚Üí Z} (hg : IsOpenQuotientMap g) (hf : IsOpenQuotientMap f) :\n    IsOpenQuotientMap (g ‚àò f) :=\n  ‚ü®.comp hg.1 hf.1, .comp hg.2 hf.2, .comp hg.3 hf.3‚ü©\n\n"}
{"name":"IsOpenQuotientMap.map_nhds_eq","module":"Mathlib.Topology.Maps.OpenQuotient","initialProofState":"X : Type u_1\nY : Type u_2\ninst‚úù¬π : TopologicalSpace X\ninst‚úù : TopologicalSpace Y\nf : X ‚Üí Y\nh : IsOpenQuotientMap f\nx : X\n‚ä¢ Eq (Filter.map f (nhds x)) (nhds (f x))","decl":"theorem map_nhds_eq (h : IsOpenQuotientMap f) (x : X) : map f (ùìù x) = ùìù (f x) :=\n  le_antisymm h.continuous.continuousAt <| h.isOpenMap.nhds_le _\n\n"}
{"name":"IsOpenQuotientMap.continuous_comp_iff","module":"Mathlib.Topology.Maps.OpenQuotient","initialProofState":"X : Type u_1\nY : Type u_2\nZ : Type u_3\ninst‚úù¬≤ : TopologicalSpace X\ninst‚úù¬π : TopologicalSpace Y\ninst‚úù : TopologicalSpace Z\nf : X ‚Üí Y\nh : IsOpenQuotientMap f\ng : Y ‚Üí Z\n‚ä¢ Iff (Continuous (Function.comp g f)) (Continuous g)","decl":"theorem continuous_comp_iff (h : IsOpenQuotientMap f) {g : Y ‚Üí Z} :\n    Continuous (g ‚àò f) ‚Üî Continuous g :=\n  h.isQuotientMap.continuous_iff.symm\n\n"}
{"name":"IsOpenQuotientMap.continuousAt_comp_iff","module":"Mathlib.Topology.Maps.OpenQuotient","initialProofState":"X : Type u_1\nY : Type u_2\nZ : Type u_3\ninst‚úù¬≤ : TopologicalSpace X\ninst‚úù¬π : TopologicalSpace Y\ninst‚úù : TopologicalSpace Z\nf : X ‚Üí Y\nh : IsOpenQuotientMap f\ng : Y ‚Üí Z\nx : X\n‚ä¢ Iff (ContinuousAt (Function.comp g f) x) (ContinuousAt g (f x))","decl":"theorem continuousAt_comp_iff (h : IsOpenQuotientMap f) {g : Y ‚Üí Z} {x : X} :\n    ContinuousAt (g ‚àò f) x ‚Üî ContinuousAt g (f x) := by\n  simp only [ContinuousAt, ‚Üê h.map_nhds_eq, tendsto_map'_iff, comp_def]\n\n"}
{"name":"IsOpenQuotientMap.dense_preimage_iff","module":"Mathlib.Topology.Maps.OpenQuotient","initialProofState":"X : Type u_1\nY : Type u_2\ninst‚úù¬π : TopologicalSpace X\ninst‚úù : TopologicalSpace Y\nf : X ‚Üí Y\nh : IsOpenQuotientMap f\ns : Set Y\n‚ä¢ Iff (Dense (Set.preimage f s)) (Dense s)","decl":"theorem dense_preimage_iff (h : IsOpenQuotientMap f) {s : Set Y} : Dense (f ‚Åª¬π' s) ‚Üî Dense s :=\n  ‚ü®fun hs ‚Ü¶ h.surjective.denseRange.dense_of_mapsTo h.continuous hs (mapsTo_preimage _ _),\n    fun hs ‚Ü¶ hs.preimage h.isOpenMap‚ü©\n\n"}
