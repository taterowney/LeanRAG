{"name":"CategoryTheory.Adjunction.isIso_unit_iff_isIso_counit","module":"Mathlib.CategoryTheory.Adjunction.Triple","initialProofState":"C : Type u_1\nD : Type u_2\ninst✝¹ : CategoryTheory.Category.{u_3, u_1} C\ninst✝ : CategoryTheory.Category.{u_4, u_2} D\nF H : CategoryTheory.Functor C D\nG : CategoryTheory.Functor D C\nadj₁ : CategoryTheory.Adjunction F G\nadj₂ : CategoryTheory.Adjunction G H\n⊢ Iff (CategoryTheory.IsIso adj₁.unit) (CategoryTheory.IsIso adj₂.counit)","decl":"lemma isIso_unit_iff_isIso_counit : IsIso adj₁.unit ↔ IsIso adj₂.counit := by\n  let adj : F ⋙ G ⊣ H ⋙ G := adj₁.comp adj₂\n  constructor\n  · intro h\n    let idAdj : 𝟭 C ⊣ H ⋙ G := adj.ofNatIsoLeft (asIso adj₁.unit).symm\n    exact adj₂.isIso_counit_of_iso (idAdj.rightAdjointUniq id)\n  · intro h\n    let adjId : F ⋙ G ⊣ 𝟭 C := adj.ofNatIsoRight (asIso adj₂.counit)\n    exact adj₁.isIso_unit_of_iso (adjId.leftAdjointUniq id)\n\n"}
