{"name":"DifferentiableWithinAt.comp_mdifferentiableWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝⁹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁸ : NormedAddCommGroup E\ninst✝⁷ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁶ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁵ : TopologicalSpace M\ninst✝⁴ : ChartedSpace H M\nF : Type u_8\ninst✝³ : NormedAddCommGroup F\ninst✝² : NormedSpace 𝕜 F\nF' : Type u_11\ninst✝¹ : NormedAddCommGroup F'\ninst✝ : NormedSpace 𝕜 F'\ng : F → F'\nf : M → F\ns : Set M\nt : Set F\nx : M\nhg : DifferentiableWithinAt 𝕜 g t (f x)\nhf : MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 F) f s x\nh : Set.MapsTo f s t\n⊢ MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 F') (Function.comp g f) s x","decl":"theorem DifferentiableWithinAt.comp_mdifferentiableWithinAt\n    {g : F → F'} {f : M → F} {s : Set M} {t : Set F}\n    {x : M} (hg : DifferentiableWithinAt 𝕜 g t (f x)) (hf : MDifferentiableWithinAt I 𝓘(𝕜, F) f s x)\n    (h : MapsTo f s t) : MDifferentiableWithinAt I 𝓘(𝕜, F') (g ∘ f) s x :=\n  hg.mdifferentiableWithinAt.comp x hf h\n\n"}
{"name":"DifferentiableAt.comp_mdifferentiableWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝⁹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁸ : NormedAddCommGroup E\ninst✝⁷ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁶ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁵ : TopologicalSpace M\ninst✝⁴ : ChartedSpace H M\nF : Type u_8\ninst✝³ : NormedAddCommGroup F\ninst✝² : NormedSpace 𝕜 F\nF' : Type u_11\ninst✝¹ : NormedAddCommGroup F'\ninst✝ : NormedSpace 𝕜 F'\ng : F → F'\nf : M → F\ns : Set M\nx : M\nhg : DifferentiableAt 𝕜 g (f x)\nhf : MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 F) f s x\n⊢ MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 F') (Function.comp g f) s x","decl":"theorem DifferentiableAt.comp_mdifferentiableWithinAt {g : F → F'} {f : M → F} {s : Set M}\n    {x : M} (hg : DifferentiableAt 𝕜 g (f x)) (hf : MDifferentiableWithinAt I 𝓘(𝕜, F) f s x) :\n    MDifferentiableWithinAt I 𝓘(𝕜, F') (g ∘ f) s x :=\n  hg.mdifferentiableAt.comp_mdifferentiableWithinAt x hf\n\n"}
{"name":"DifferentiableAt.comp_mdifferentiableAt","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝⁹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁸ : NormedAddCommGroup E\ninst✝⁷ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁶ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁵ : TopologicalSpace M\ninst✝⁴ : ChartedSpace H M\nF : Type u_8\ninst✝³ : NormedAddCommGroup F\ninst✝² : NormedSpace 𝕜 F\nF' : Type u_11\ninst✝¹ : NormedAddCommGroup F'\ninst✝ : NormedSpace 𝕜 F'\ng : F → F'\nf : M → F\nx : M\nhg : DifferentiableAt 𝕜 g (f x)\nhf : MDifferentiableAt I (modelWithCornersSelf 𝕜 F) f x\n⊢ MDifferentiableAt I (modelWithCornersSelf 𝕜 F') (Function.comp g f) x","decl":"theorem DifferentiableAt.comp_mdifferentiableAt\n    {g : F → F'} {f : M → F} {x : M} (hg : DifferentiableAt 𝕜 g (f x))\n    (hf : MDifferentiableAt I 𝓘(𝕜, F) f x) : MDifferentiableAt I 𝓘(𝕜, F') (g ∘ f) x :=\n  hg.comp_mdifferentiableWithinAt hf\n\n"}
{"name":"Differentiable.comp_mdifferentiableWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝⁹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁸ : NormedAddCommGroup E\ninst✝⁷ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁶ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁵ : TopologicalSpace M\ninst✝⁴ : ChartedSpace H M\nF : Type u_8\ninst✝³ : NormedAddCommGroup F\ninst✝² : NormedSpace 𝕜 F\nF' : Type u_11\ninst✝¹ : NormedAddCommGroup F'\ninst✝ : NormedSpace 𝕜 F'\ng : F → F'\nf : M → F\ns : Set M\nx : M\nhg : Differentiable 𝕜 g\nhf : MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 F) f s x\n⊢ MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 F') (Function.comp g f) s x","decl":"theorem Differentiable.comp_mdifferentiableWithinAt {g : F → F'} {f : M → F} {s : Set M} {x : M}\n    (hg : Differentiable 𝕜 g) (hf : MDifferentiableWithinAt I 𝓘(𝕜, F) f s x) :\n    MDifferentiableWithinAt I 𝓘(𝕜, F') (g ∘ f) s x :=\n  hg.differentiableAt.comp_mdifferentiableWithinAt hf\n\n"}
{"name":"Differentiable.comp_mdifferentiableAt","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝⁹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁸ : NormedAddCommGroup E\ninst✝⁷ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁶ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁵ : TopologicalSpace M\ninst✝⁴ : ChartedSpace H M\nF : Type u_8\ninst✝³ : NormedAddCommGroup F\ninst✝² : NormedSpace 𝕜 F\nF' : Type u_11\ninst✝¹ : NormedAddCommGroup F'\ninst✝ : NormedSpace 𝕜 F'\ng : F → F'\nf : M → F\nx : M\nhg : Differentiable 𝕜 g\nhf : MDifferentiableAt I (modelWithCornersSelf 𝕜 F) f x\n⊢ MDifferentiableAt I (modelWithCornersSelf 𝕜 F') (Function.comp g f) x","decl":"theorem Differentiable.comp_mdifferentiableAt\n    {g : F → F'} {f : M → F} {x : M} (hg : Differentiable 𝕜 g)\n    (hf : MDifferentiableAt I 𝓘(𝕜, F) f x) : MDifferentiableAt I 𝓘(𝕜, F') (g ∘ f) x :=\n  hg.comp_mdifferentiableWithinAt hf\n\n"}
{"name":"Differentiable.comp_mdifferentiable","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝⁹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁸ : NormedAddCommGroup E\ninst✝⁷ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁶ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁵ : TopologicalSpace M\ninst✝⁴ : ChartedSpace H M\nF : Type u_8\ninst✝³ : NormedAddCommGroup F\ninst✝² : NormedSpace 𝕜 F\nF' : Type u_11\ninst✝¹ : NormedAddCommGroup F'\ninst✝ : NormedSpace 𝕜 F'\ng : F → F'\nf : M → F\nhg : Differentiable 𝕜 g\nhf : MDifferentiable I (modelWithCornersSelf 𝕜 F) f\n⊢ MDifferentiable I (modelWithCornersSelf 𝕜 F') (Function.comp g f)","decl":"theorem Differentiable.comp_mdifferentiable {g : F → F'} {f : M → F} (hg : Differentiable 𝕜 g)\n    (hf : MDifferentiable I 𝓘(𝕜, F) f) : MDifferentiable I 𝓘(𝕜, F') (g ∘ f) := fun x =>\n  hg.differentiableAt.comp_mdifferentiableAt (hf x)\n\n"}
{"name":"MDifferentiableWithinAt.clm_precomp","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝¹¹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁰ : NormedAddCommGroup E\ninst✝⁹ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁸ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁷ : TopologicalSpace M\ninst✝⁶ : ChartedSpace H M\nF₁ : Type u_14\ninst✝⁵ : NormedAddCommGroup F₁\ninst✝⁴ : NormedSpace 𝕜 F₁\nF₂ : Type u_15\ninst✝³ : NormedAddCommGroup F₂\ninst✝² : NormedSpace 𝕜 F₂\nF₃ : Type u_16\ninst✝¹ : NormedAddCommGroup F₃\ninst✝ : NormedSpace 𝕜 F₃\nf : M → ContinuousLinearMap (RingHom.id 𝕜) F₁ F₂\ns : Set M\nx : M\nhf : MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₂)) f s x\n⊢ MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₃) (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃))) (fun y => ContinuousLinearMap.precomp F₃ (f y)) s x","decl":"theorem MDifferentiableWithinAt.clm_precomp {f : M → F₁ →L[𝕜] F₂} {s : Set M} {x : M}\n    (hf : MDifferentiableWithinAt I 𝓘(𝕜, F₁ →L[𝕜] F₂) f s x) :\n    MDifferentiableWithinAt I 𝓘(𝕜, (F₂ →L[𝕜] F₃) →L[𝕜] (F₁ →L[𝕜] F₃))\n      (fun y ↦ (f y).precomp F₃ : M → (F₂ →L[𝕜] F₃) →L[𝕜] (F₁ →L[𝕜] F₃)) s x :=\n  Differentiable.comp_mdifferentiableWithinAt (g := (ContinuousLinearMap.compL 𝕜 F₁ F₂ F₃).flip)\n    (ContinuousLinearMap.differentiable (𝕜 := 𝕜) (F := ((F₂ →L[𝕜] F₃) →L[𝕜] F₁ →L[𝕜] F₃))\n      (ContinuousLinearMap.compL 𝕜 F₁ F₂ F₃).flip) hf\n\n"}
{"name":"MDifferentiableAt.clm_precomp","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝¹¹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁰ : NormedAddCommGroup E\ninst✝⁹ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁸ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁷ : TopologicalSpace M\ninst✝⁶ : ChartedSpace H M\nF₁ : Type u_14\ninst✝⁵ : NormedAddCommGroup F₁\ninst✝⁴ : NormedSpace 𝕜 F₁\nF₂ : Type u_15\ninst✝³ : NormedAddCommGroup F₂\ninst✝² : NormedSpace 𝕜 F₂\nF₃ : Type u_16\ninst✝¹ : NormedAddCommGroup F₃\ninst✝ : NormedSpace 𝕜 F₃\nf : M → ContinuousLinearMap (RingHom.id 𝕜) F₁ F₂\nx : M\nhf : MDifferentiableAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₂)) f x\n⊢ MDifferentiableAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₃) (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃))) (fun y => ContinuousLinearMap.precomp F₃ (f y)) x","decl":"nonrec theorem MDifferentiableAt.clm_precomp {f : M → F₁ →L[𝕜] F₂} {x : M}\n    (hf : MDifferentiableAt I 𝓘(𝕜, F₁ →L[𝕜] F₂) f x) :\n    MDifferentiableAt I 𝓘(𝕜, (F₂ →L[𝕜] F₃) →L[𝕜] (F₁ →L[𝕜] F₃))\n      (fun y ↦ (f y).precomp F₃ : M → (F₂ →L[𝕜] F₃) →L[𝕜] (F₁ →L[𝕜] F₃)) x :=\n  Differentiable.comp_mdifferentiableAt (g := (ContinuousLinearMap.compL 𝕜 F₁ F₂ F₃).flip)\n    (ContinuousLinearMap.differentiable (𝕜 := 𝕜) (F := ((F₂ →L[𝕜] F₃) →L[𝕜] F₁ →L[𝕜] F₃))\n      (ContinuousLinearMap.compL 𝕜 F₁ F₂ F₃).flip) hf\n\n"}
{"name":"MDifferentiableOn.clm_precomp","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝¹¹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁰ : NormedAddCommGroup E\ninst✝⁹ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁸ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁷ : TopologicalSpace M\ninst✝⁶ : ChartedSpace H M\nF₁ : Type u_14\ninst✝⁵ : NormedAddCommGroup F₁\ninst✝⁴ : NormedSpace 𝕜 F₁\nF₂ : Type u_15\ninst✝³ : NormedAddCommGroup F₂\ninst✝² : NormedSpace 𝕜 F₂\nF₃ : Type u_16\ninst✝¹ : NormedAddCommGroup F₃\ninst✝ : NormedSpace 𝕜 F₃\nf : M → ContinuousLinearMap (RingHom.id 𝕜) F₁ F₂\ns : Set M\nhf : MDifferentiableOn I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₂)) f s\n⊢ MDifferentiableOn I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₃) (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃))) (fun y => ContinuousLinearMap.precomp F₃ (f y)) s","decl":"theorem MDifferentiableOn.clm_precomp {f : M → F₁ →L[𝕜] F₂} {s : Set M}\n    (hf : MDifferentiableOn I 𝓘(𝕜, F₁ →L[𝕜] F₂) f s) :\n    MDifferentiableOn I 𝓘(𝕜, (F₂ →L[𝕜] F₃) →L[𝕜] (F₁ →L[𝕜] F₃))\n      (fun y ↦ (f y).precomp F₃ : M → (F₂ →L[𝕜] F₃) →L[𝕜] (F₁ →L[𝕜] F₃)) s := fun x hx ↦\n  (hf x hx).clm_precomp\n\n"}
{"name":"MDifferentiable.clm_precomp","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝¹¹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁰ : NormedAddCommGroup E\ninst✝⁹ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁸ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁷ : TopologicalSpace M\ninst✝⁶ : ChartedSpace H M\nF₁ : Type u_14\ninst✝⁵ : NormedAddCommGroup F₁\ninst✝⁴ : NormedSpace 𝕜 F₁\nF₂ : Type u_15\ninst✝³ : NormedAddCommGroup F₂\ninst✝² : NormedSpace 𝕜 F₂\nF₃ : Type u_16\ninst✝¹ : NormedAddCommGroup F₃\ninst✝ : NormedSpace 𝕜 F₃\nf : M → ContinuousLinearMap (RingHom.id 𝕜) F₁ F₂\nhf : MDifferentiable I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₂)) f\n⊢ MDifferentiable I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₃) (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃))) fun y => ContinuousLinearMap.precomp F₃ (f y)","decl":"theorem MDifferentiable.clm_precomp\n    {f : M → F₁ →L[𝕜] F₂} (hf : MDifferentiable I 𝓘(𝕜, F₁ →L[𝕜] F₂) f) :\n    MDifferentiable I 𝓘(𝕜, (F₂ →L[𝕜] F₃) →L[𝕜] (F₁ →L[𝕜] F₃))\n      (fun y ↦ (f y).precomp F₃ : M → (F₂ →L[𝕜] F₃) →L[𝕜] (F₁ →L[𝕜] F₃)) := fun x ↦\n  (hf x).clm_precomp\n\n"}
{"name":"MDifferentiableWithinAt.clm_postcomp","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝¹¹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁰ : NormedAddCommGroup E\ninst✝⁹ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁸ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁷ : TopologicalSpace M\ninst✝⁶ : ChartedSpace H M\nF₁ : Type u_14\ninst✝⁵ : NormedAddCommGroup F₁\ninst✝⁴ : NormedSpace 𝕜 F₁\nF₂ : Type u_15\ninst✝³ : NormedAddCommGroup F₂\ninst✝² : NormedSpace 𝕜 F₂\nF₃ : Type u_16\ninst✝¹ : NormedAddCommGroup F₃\ninst✝ : NormedSpace 𝕜 F₃\nf : M → ContinuousLinearMap (RingHom.id 𝕜) F₂ F₃\ns : Set M\nx : M\nhf : MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₃)) f s x\n⊢ MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₂) (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃))) (fun y => ContinuousLinearMap.postcomp F₁ (f y)) s x","decl":"theorem MDifferentiableWithinAt.clm_postcomp {f : M → F₂ →L[𝕜] F₃} {s : Set M} {x : M}\n    (hf : MDifferentiableWithinAt I 𝓘(𝕜, F₂ →L[𝕜] F₃) f s x) :\n    MDifferentiableWithinAt I 𝓘(𝕜, (F₁ →L[𝕜] F₂) →L[𝕜] (F₁ →L[𝕜] F₃))\n      (fun y ↦ (f y).postcomp F₁ : M → (F₁ →L[𝕜] F₂) →L[𝕜] (F₁ →L[𝕜] F₃)) s x :=\n  Differentiable.comp_mdifferentiableWithinAt (F' := (F₁ →L[𝕜] F₂) →L[𝕜] (F₁ →L[𝕜] F₃))\n    (g := ContinuousLinearMap.compL 𝕜 F₁ F₂ F₃)\n    (ContinuousLinearMap.differentiable (𝕜 := 𝕜) (F := ((F₁ →L[𝕜] F₂) →L[𝕜] F₁ →L[𝕜] F₃))\n      (ContinuousLinearMap.compL 𝕜 F₁ F₂ F₃)) hf\n\n"}
{"name":"MDifferentiableAt.clm_postcomp","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝¹¹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁰ : NormedAddCommGroup E\ninst✝⁹ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁸ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁷ : TopologicalSpace M\ninst✝⁶ : ChartedSpace H M\nF₁ : Type u_14\ninst✝⁵ : NormedAddCommGroup F₁\ninst✝⁴ : NormedSpace 𝕜 F₁\nF₂ : Type u_15\ninst✝³ : NormedAddCommGroup F₂\ninst✝² : NormedSpace 𝕜 F₂\nF₃ : Type u_16\ninst✝¹ : NormedAddCommGroup F₃\ninst✝ : NormedSpace 𝕜 F₃\nf : M → ContinuousLinearMap (RingHom.id 𝕜) F₂ F₃\nx : M\nhf : MDifferentiableAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₃)) f x\n⊢ MDifferentiableAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₂) (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃))) (fun y => ContinuousLinearMap.postcomp F₁ (f y)) x","decl":"theorem MDifferentiableAt.clm_postcomp {f : M → F₂ →L[𝕜] F₃} {x : M}\n    (hf : MDifferentiableAt I 𝓘(𝕜, F₂ →L[𝕜] F₃) f x) :\n    MDifferentiableAt I 𝓘(𝕜, (F₁ →L[𝕜] F₂) →L[𝕜] (F₁ →L[𝕜] F₃))\n      (fun y ↦ (f y).postcomp F₁ : M → (F₁ →L[𝕜] F₂) →L[𝕜] (F₁ →L[𝕜] F₃)) x :=\n  Differentiable.comp_mdifferentiableAt (F' := (F₁ →L[𝕜] F₂) →L[𝕜] (F₁ →L[𝕜] F₃))\n    (g := ContinuousLinearMap.compL 𝕜 F₁ F₂ F₃)\n    (ContinuousLinearMap.differentiable (𝕜 := 𝕜) (F := ((F₁ →L[𝕜] F₂) →L[𝕜] F₁ →L[𝕜] F₃))\n      (ContinuousLinearMap.compL 𝕜 F₁ F₂ F₃)) hf\n\n"}
{"name":"MDifferentiableOn.clm_postcomp","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝¹¹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁰ : NormedAddCommGroup E\ninst✝⁹ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁸ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁷ : TopologicalSpace M\ninst✝⁶ : ChartedSpace H M\nF₁ : Type u_14\ninst✝⁵ : NormedAddCommGroup F₁\ninst✝⁴ : NormedSpace 𝕜 F₁\nF₂ : Type u_15\ninst✝³ : NormedAddCommGroup F₂\ninst✝² : NormedSpace 𝕜 F₂\nF₃ : Type u_16\ninst✝¹ : NormedAddCommGroup F₃\ninst✝ : NormedSpace 𝕜 F₃\nf : M → ContinuousLinearMap (RingHom.id 𝕜) F₂ F₃\ns : Set M\nhf : MDifferentiableOn I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₃)) f s\n⊢ MDifferentiableOn I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₂) (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃))) (fun y => ContinuousLinearMap.postcomp F₁ (f y)) s","decl":"nonrec theorem MDifferentiableOn.clm_postcomp {f : M → F₂ →L[𝕜] F₃} {s : Set M}\n    (hf : MDifferentiableOn I 𝓘(𝕜, F₂ →L[𝕜] F₃) f s) :\n    MDifferentiableOn I 𝓘(𝕜, (F₁ →L[𝕜] F₂) →L[𝕜] (F₁ →L[𝕜] F₃))\n      (fun y ↦ (f y).postcomp F₁ : M → (F₁ →L[𝕜] F₂) →L[𝕜] (F₁ →L[𝕜] F₃)) s := fun x hx ↦\n  (hf x hx).clm_postcomp\n\n"}
{"name":"MDifferentiable.clm_postcomp","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝¹¹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁰ : NormedAddCommGroup E\ninst✝⁹ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁸ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁷ : TopologicalSpace M\ninst✝⁶ : ChartedSpace H M\nF₁ : Type u_14\ninst✝⁵ : NormedAddCommGroup F₁\ninst✝⁴ : NormedSpace 𝕜 F₁\nF₂ : Type u_15\ninst✝³ : NormedAddCommGroup F₂\ninst✝² : NormedSpace 𝕜 F₂\nF₃ : Type u_16\ninst✝¹ : NormedAddCommGroup F₃\ninst✝ : NormedSpace 𝕜 F₃\nf : M → ContinuousLinearMap (RingHom.id 𝕜) F₂ F₃\nhf : MDifferentiable I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₃)) f\n⊢ MDifferentiable I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₂) (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃))) fun y => ContinuousLinearMap.postcomp F₁ (f y)","decl":"theorem MDifferentiable.clm_postcomp\n    {f : M → F₂ →L[𝕜] F₃} (hf : MDifferentiable I 𝓘(𝕜, F₂ →L[𝕜] F₃) f) :\n    MDifferentiable I 𝓘(𝕜, (F₁ →L[𝕜] F₂) →L[𝕜] (F₁ →L[𝕜] F₃))\n      (fun y ↦ (f y).postcomp F₁ : M → (F₁ →L[𝕜] F₂) →L[𝕜] (F₁ →L[𝕜] F₃)) := fun x ↦\n  (hf x).clm_postcomp\n\n"}
{"name":"MDifferentiableWithinAt.clm_comp","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝¹¹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁰ : NormedAddCommGroup E\ninst✝⁹ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁸ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁷ : TopologicalSpace M\ninst✝⁶ : ChartedSpace H M\nF₁ : Type u_14\ninst✝⁵ : NormedAddCommGroup F₁\ninst✝⁴ : NormedSpace 𝕜 F₁\nF₂ : Type u_15\ninst✝³ : NormedAddCommGroup F₂\ninst✝² : NormedSpace 𝕜 F₂\nF₃ : Type u_16\ninst✝¹ : NormedAddCommGroup F₃\ninst✝ : NormedSpace 𝕜 F₃\ng : M → ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃\nf : M → ContinuousLinearMap (RingHom.id 𝕜) F₂ F₁\ns : Set M\nx : M\nhg : MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃)) g s x\nhf : MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₁)) f s x\n⊢ MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₃)) (fun x => (g x).comp (f x)) s x","decl":"theorem MDifferentiableWithinAt.clm_comp\n    {g : M → F₁ →L[𝕜] F₃} {f : M → F₂ →L[𝕜] F₁} {s : Set M} {x : M}\n    (hg : MDifferentiableWithinAt I 𝓘(𝕜, F₁ →L[𝕜] F₃) g s x)\n    (hf : MDifferentiableWithinAt I 𝓘(𝕜, F₂ →L[𝕜] F₁) f s x) :\n    MDifferentiableWithinAt I 𝓘(𝕜, F₂ →L[𝕜] F₃) (fun x => (g x).comp (f x)) s x :=\n  Differentiable.comp_mdifferentiableWithinAt\n    (g := fun x : (F₁ →L[𝕜] F₃) × (F₂ →L[𝕜] F₁) => x.1.comp x.2)\n    (f := fun x => (g x, f x)) (differentiable_fst.clm_comp differentiable_snd)\n    (hg.prod_mk_space hf)\n\n"}
{"name":"MDifferentiableAt.clm_comp","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝¹¹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁰ : NormedAddCommGroup E\ninst✝⁹ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁸ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁷ : TopologicalSpace M\ninst✝⁶ : ChartedSpace H M\nF₁ : Type u_14\ninst✝⁵ : NormedAddCommGroup F₁\ninst✝⁴ : NormedSpace 𝕜 F₁\nF₂ : Type u_15\ninst✝³ : NormedAddCommGroup F₂\ninst✝² : NormedSpace 𝕜 F₂\nF₃ : Type u_16\ninst✝¹ : NormedAddCommGroup F₃\ninst✝ : NormedSpace 𝕜 F₃\ng : M → ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃\nf : M → ContinuousLinearMap (RingHom.id 𝕜) F₂ F₁\nx : M\nhg : MDifferentiableAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃)) g x\nhf : MDifferentiableAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₁)) f x\n⊢ MDifferentiableAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₃)) (fun x => (g x).comp (f x)) x","decl":"theorem MDifferentiableAt.clm_comp {g : M → F₁ →L[𝕜] F₃} {f : M → F₂ →L[𝕜] F₁} {x : M}\n    (hg : MDifferentiableAt I 𝓘(𝕜, F₁ →L[𝕜] F₃) g x)\n    (hf : MDifferentiableAt I 𝓘(𝕜, F₂ →L[𝕜] F₁) f x) :\n    MDifferentiableAt I 𝓘(𝕜, F₂ →L[𝕜] F₃) (fun x => (g x).comp (f x)) x :=\n  (hg.mdifferentiableWithinAt.clm_comp hf.mdifferentiableWithinAt).mdifferentiableAt Filter.univ_mem\n\n"}
{"name":"MDifferentiableOn.clm_comp","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝¹¹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁰ : NormedAddCommGroup E\ninst✝⁹ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁸ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁷ : TopologicalSpace M\ninst✝⁶ : ChartedSpace H M\nF₁ : Type u_14\ninst✝⁵ : NormedAddCommGroup F₁\ninst✝⁴ : NormedSpace 𝕜 F₁\nF₂ : Type u_15\ninst✝³ : NormedAddCommGroup F₂\ninst✝² : NormedSpace 𝕜 F₂\nF₃ : Type u_16\ninst✝¹ : NormedAddCommGroup F₃\ninst✝ : NormedSpace 𝕜 F₃\ng : M → ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃\nf : M → ContinuousLinearMap (RingHom.id 𝕜) F₂ F₁\ns : Set M\nhg : MDifferentiableOn I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃)) g s\nhf : MDifferentiableOn I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₁)) f s\n⊢ MDifferentiableOn I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₃)) (fun x => (g x).comp (f x)) s","decl":"theorem MDifferentiableOn.clm_comp {g : M → F₁ →L[𝕜] F₃} {f : M → F₂ →L[𝕜] F₁} {s : Set M}\n    (hg : MDifferentiableOn I 𝓘(𝕜, F₁ →L[𝕜] F₃) g s)\n    (hf : MDifferentiableOn I 𝓘(𝕜, F₂ →L[𝕜] F₁) f s) :\n    MDifferentiableOn I 𝓘(𝕜, F₂ →L[𝕜] F₃) (fun x => (g x).comp (f x)) s := fun x hx =>\n  (hg x hx).clm_comp (hf x hx)\n\n"}
{"name":"MDifferentiable.clm_comp","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝¹¹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁰ : NormedAddCommGroup E\ninst✝⁹ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁸ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁷ : TopologicalSpace M\ninst✝⁶ : ChartedSpace H M\nF₁ : Type u_14\ninst✝⁵ : NormedAddCommGroup F₁\ninst✝⁴ : NormedSpace 𝕜 F₁\nF₂ : Type u_15\ninst✝³ : NormedAddCommGroup F₂\ninst✝² : NormedSpace 𝕜 F₂\nF₃ : Type u_16\ninst✝¹ : NormedAddCommGroup F₃\ninst✝ : NormedSpace 𝕜 F₃\ng : M → ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃\nf : M → ContinuousLinearMap (RingHom.id 𝕜) F₂ F₁\nhg : MDifferentiable I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃)) g\nhf : MDifferentiable I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₁)) f\n⊢ MDifferentiable I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₃)) fun x => (g x).comp (f x)","decl":"theorem MDifferentiable.clm_comp {g : M → F₁ →L[𝕜] F₃} {f : M → F₂ →L[𝕜] F₁}\n    (hg : MDifferentiable I 𝓘(𝕜, F₁ →L[𝕜] F₃) g) (hf : MDifferentiable I 𝓘(𝕜, F₂ →L[𝕜] F₁) f) :\n    MDifferentiable I 𝓘(𝕜, F₂ →L[𝕜] F₃) fun x => (g x).comp (f x) := fun x => (hg x).clm_comp (hf x)\n\n"}
{"name":"MDifferentiableWithinAt.clm_apply","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝⁹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁸ : NormedAddCommGroup E\ninst✝⁷ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁶ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁵ : TopologicalSpace M\ninst✝⁴ : ChartedSpace H M\nF₁ : Type u_14\ninst✝³ : NormedAddCommGroup F₁\ninst✝² : NormedSpace 𝕜 F₁\nF₂ : Type u_15\ninst✝¹ : NormedAddCommGroup F₂\ninst✝ : NormedSpace 𝕜 F₂\ng : M → ContinuousLinearMap (RingHom.id 𝕜) F₁ F₂\nf : M → F₁\ns : Set M\nx : M\nhg : MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₂)) g s x\nhf : MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 F₁) f s x\n⊢ MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 F₂) (fun x => (g x) (f x)) s x","decl":"/-- Applying a linear map to a vector is differentiable within a set. Version in vector spaces. For\na version in nontrivial vector bundles, see `MDifferentiableWithinAt.clm_apply_of_inCoordinates`. -/\ntheorem MDifferentiableWithinAt.clm_apply {g : M → F₁ →L[𝕜] F₂} {f : M → F₁} {s : Set M} {x : M}\n    (hg : MDifferentiableWithinAt I 𝓘(𝕜, F₁ →L[𝕜] F₂) g s x)\n    (hf : MDifferentiableWithinAt I 𝓘(𝕜, F₁) f s x) :\n    MDifferentiableWithinAt I 𝓘(𝕜, F₂) (fun x => g x (f x)) s x :=\n  DifferentiableWithinAt.comp_mdifferentiableWithinAt (t := univ)\n    (g := fun x : (F₁ →L[𝕜] F₂) × F₁ => x.1 x.2)\n    (by apply (Differentiable.differentiableAt _).differentiableWithinAt\n        exact differentiable_fst.clm_apply differentiable_snd) (hg.prod_mk_space hf)\n    (by simp_rw [mapsTo_univ])\n\n"}
{"name":"MDifferentiableAt.clm_apply","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝⁹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁸ : NormedAddCommGroup E\ninst✝⁷ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁶ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁵ : TopologicalSpace M\ninst✝⁴ : ChartedSpace H M\nF₁ : Type u_14\ninst✝³ : NormedAddCommGroup F₁\ninst✝² : NormedSpace 𝕜 F₁\nF₂ : Type u_15\ninst✝¹ : NormedAddCommGroup F₂\ninst✝ : NormedSpace 𝕜 F₂\ng : M → ContinuousLinearMap (RingHom.id 𝕜) F₁ F₂\nf : M → F₁\nx : M\nhg : MDifferentiableAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₂)) g x\nhf : MDifferentiableAt I (modelWithCornersSelf 𝕜 F₁) f x\n⊢ MDifferentiableAt I (modelWithCornersSelf 𝕜 F₂) (fun x => (g x) (f x)) x","decl":"/-- Applying a linear map to a vector is differentiable. Version in vector spaces. For a\nversion in nontrivial vector bundles, see `MDifferentiableAt.clm_apply_of_inCoordinates`. -/\ntheorem MDifferentiableAt.clm_apply {g : M → F₁ →L[𝕜] F₂} {f : M → F₁} {x : M}\n    (hg : MDifferentiableAt I 𝓘(𝕜, F₁ →L[𝕜] F₂) g x) (hf : MDifferentiableAt I 𝓘(𝕜, F₁) f x) :\n    MDifferentiableAt I 𝓘(𝕜, F₂) (fun x => g x (f x)) x :=\n  DifferentiableWithinAt.comp_mdifferentiableWithinAt (t := univ)\n    (g := fun x : (F₁ →L[𝕜] F₂) × F₁ => x.1 x.2)\n    (by apply (Differentiable.differentiableAt _).differentiableWithinAt\n        exact differentiable_fst.clm_apply differentiable_snd) (hg.prod_mk_space hf)\n    (by simp_rw [mapsTo_univ])\n\n"}
{"name":"MDifferentiableOn.clm_apply","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝⁹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁸ : NormedAddCommGroup E\ninst✝⁷ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁶ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁵ : TopologicalSpace M\ninst✝⁴ : ChartedSpace H M\nF₁ : Type u_14\ninst✝³ : NormedAddCommGroup F₁\ninst✝² : NormedSpace 𝕜 F₁\nF₂ : Type u_15\ninst✝¹ : NormedAddCommGroup F₂\ninst✝ : NormedSpace 𝕜 F₂\ng : M → ContinuousLinearMap (RingHom.id 𝕜) F₁ F₂\nf : M → F₁\ns : Set M\nhg : MDifferentiableOn I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₂)) g s\nhf : MDifferentiableOn I (modelWithCornersSelf 𝕜 F₁) f s\n⊢ MDifferentiableOn I (modelWithCornersSelf 𝕜 F₂) (fun x => (g x) (f x)) s","decl":"theorem MDifferentiableOn.clm_apply {g : M → F₁ →L[𝕜] F₂} {f : M → F₁} {s : Set M}\n    (hg : MDifferentiableOn I 𝓘(𝕜, F₁ →L[𝕜] F₂) g s) (hf : MDifferentiableOn I 𝓘(𝕜, F₁) f s) :\n    MDifferentiableOn I 𝓘(𝕜, F₂) (fun x => g x (f x)) s := fun x hx => (hg x hx).clm_apply (hf x hx)\n\n"}
{"name":"MDifferentiable.clm_apply","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝⁹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁸ : NormedAddCommGroup E\ninst✝⁷ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁶ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁵ : TopologicalSpace M\ninst✝⁴ : ChartedSpace H M\nF₁ : Type u_14\ninst✝³ : NormedAddCommGroup F₁\ninst✝² : NormedSpace 𝕜 F₁\nF₂ : Type u_15\ninst✝¹ : NormedAddCommGroup F₂\ninst✝ : NormedSpace 𝕜 F₂\ng : M → ContinuousLinearMap (RingHom.id 𝕜) F₁ F₂\nf : M → F₁\nhg : MDifferentiable I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₂)) g\nhf : MDifferentiable I (modelWithCornersSelf 𝕜 F₁) f\n⊢ MDifferentiable I (modelWithCornersSelf 𝕜 F₂) fun x => (g x) (f x)","decl":"theorem MDifferentiable.clm_apply {g : M → F₁ →L[𝕜] F₂} {f : M → F₁}\n    (hg : MDifferentiable I 𝓘(𝕜, F₁ →L[𝕜] F₂) g) (hf : MDifferentiable I 𝓘(𝕜, F₁) f) :\n    MDifferentiable I 𝓘(𝕜, F₂) fun x => g x (f x) := fun x => (hg x).clm_apply (hf x)\n\n"}
{"name":"MDifferentiableWithinAt.cle_arrowCongr","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝¹³ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹² : NormedAddCommGroup E\ninst✝¹¹ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹⁰ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁹ : TopologicalSpace M\ninst✝⁸ : ChartedSpace H M\nF₁ : Type u_14\ninst✝⁷ : NormedAddCommGroup F₁\ninst✝⁶ : NormedSpace 𝕜 F₁\nF₂ : Type u_15\ninst✝⁵ : NormedAddCommGroup F₂\ninst✝⁴ : NormedSpace 𝕜 F₂\nF₃ : Type u_16\ninst✝³ : NormedAddCommGroup F₃\ninst✝² : NormedSpace 𝕜 F₃\nF₄ : Type u_17\ninst✝¹ : NormedAddCommGroup F₄\ninst✝ : NormedSpace 𝕜 F₄\nf : M → ContinuousLinearEquiv (RingHom.id 𝕜) F₁ F₂\ng : M → ContinuousLinearEquiv (RingHom.id 𝕜) F₃ F₄\ns : Set M\nx : M\nhf : MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₁)) (fun x => ↑(f x).symm) s x\nhg : MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₃ F₄)) (fun x => ↑(g x)) s x\n⊢ MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃) (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₄))) (fun y => ↑((f y).arrowCongr (g y))) s x","decl":"theorem MDifferentiableWithinAt.cle_arrowCongr {f : M → F₁ ≃L[𝕜] F₂} {g : M → F₃ ≃L[𝕜] F₄}\n    {s : Set M} {x : M}\n    (hf : MDifferentiableWithinAt I 𝓘(𝕜, F₂ →L[𝕜] F₁) (fun x ↦ ((f x).symm : F₂ →L[𝕜] F₁)) s x)\n    (hg : MDifferentiableWithinAt I 𝓘(𝕜, F₃ →L[𝕜] F₄) (fun x ↦ (g x : F₃ →L[𝕜] F₄)) s x) :\n    MDifferentiableWithinAt I 𝓘(𝕜, (F₁ →L[𝕜] F₃) →L[𝕜] (F₂ →L[𝕜] F₄))\n      (fun y ↦ (f y).arrowCongr (g y) : M → (F₁ →L[𝕜] F₃) →L[𝕜] (F₂ →L[𝕜] F₄)) s x :=\n  show MDifferentiableWithinAt I 𝓘(𝕜, (F₁ →L[𝕜] F₃) →L[𝕜] (F₂ →L[𝕜] F₄))\n    (fun y ↦ (((f y).symm : F₂ →L[𝕜] F₁).precomp F₄).comp ((g y : F₃ →L[𝕜] F₄).postcomp F₁)) s x\n  from hf.clm_precomp (F₃ := F₄) |>.clm_comp <| hg.clm_postcomp (F₁ := F₁)\n\n"}
{"name":"MDifferentiableAt.cle_arrowCongr","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝¹³ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹² : NormedAddCommGroup E\ninst✝¹¹ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹⁰ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁹ : TopologicalSpace M\ninst✝⁸ : ChartedSpace H M\nF₁ : Type u_14\ninst✝⁷ : NormedAddCommGroup F₁\ninst✝⁶ : NormedSpace 𝕜 F₁\nF₂ : Type u_15\ninst✝⁵ : NormedAddCommGroup F₂\ninst✝⁴ : NormedSpace 𝕜 F₂\nF₃ : Type u_16\ninst✝³ : NormedAddCommGroup F₃\ninst✝² : NormedSpace 𝕜 F₃\nF₄ : Type u_17\ninst✝¹ : NormedAddCommGroup F₄\ninst✝ : NormedSpace 𝕜 F₄\nf : M → ContinuousLinearEquiv (RingHom.id 𝕜) F₁ F₂\ng : M → ContinuousLinearEquiv (RingHom.id 𝕜) F₃ F₄\nx : M\nhf : MDifferentiableAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₁)) (fun x => ↑(f x).symm) x\nhg : MDifferentiableAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₃ F₄)) (fun x => ↑(g x)) x\n⊢ MDifferentiableAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃) (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₄))) (fun y => ↑((f y).arrowCongr (g y))) x","decl":"theorem MDifferentiableAt.cle_arrowCongr {f : M → F₁ ≃L[𝕜] F₂} {g : M → F₃ ≃L[𝕜] F₄} {x : M}\n    (hf : MDifferentiableAt I 𝓘(𝕜, F₂ →L[𝕜] F₁) (fun x ↦ ((f x).symm : F₂ →L[𝕜] F₁)) x)\n    (hg : MDifferentiableAt I 𝓘(𝕜, F₃ →L[𝕜] F₄) (fun x ↦ (g x : F₃ →L[𝕜] F₄)) x) :\n    MDifferentiableAt I 𝓘(𝕜, (F₁ →L[𝕜] F₃) →L[𝕜] (F₂ →L[𝕜] F₄))\n      (fun y ↦ (f y).arrowCongr (g y) : M → (F₁ →L[𝕜] F₃) →L[𝕜] (F₂ →L[𝕜] F₄)) x :=\n  show MDifferentiableAt I 𝓘(𝕜, (F₁ →L[𝕜] F₃) →L[𝕜] (F₂ →L[𝕜] F₄))\n    (fun y ↦ (((f y).symm : F₂ →L[𝕜] F₁).precomp F₄).comp ((g y : F₃ →L[𝕜] F₄).postcomp F₁)) x\n  from hf.clm_precomp (F₃ := F₄) |>.clm_comp <| hg.clm_postcomp (F₁ := F₁)\n\n"}
{"name":"MDifferentiableOn.cle_arrowCongr","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝¹³ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹² : NormedAddCommGroup E\ninst✝¹¹ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹⁰ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁹ : TopologicalSpace M\ninst✝⁸ : ChartedSpace H M\nF₁ : Type u_14\ninst✝⁷ : NormedAddCommGroup F₁\ninst✝⁶ : NormedSpace 𝕜 F₁\nF₂ : Type u_15\ninst✝⁵ : NormedAddCommGroup F₂\ninst✝⁴ : NormedSpace 𝕜 F₂\nF₃ : Type u_16\ninst✝³ : NormedAddCommGroup F₃\ninst✝² : NormedSpace 𝕜 F₃\nF₄ : Type u_17\ninst✝¹ : NormedAddCommGroup F₄\ninst✝ : NormedSpace 𝕜 F₄\nf : M → ContinuousLinearEquiv (RingHom.id 𝕜) F₁ F₂\ng : M → ContinuousLinearEquiv (RingHom.id 𝕜) F₃ F₄\ns : Set M\nhf : MDifferentiableOn I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₁)) (fun x => ↑(f x).symm) s\nhg : MDifferentiableOn I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₃ F₄)) (fun x => ↑(g x)) s\n⊢ MDifferentiableOn I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃) (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₄))) (fun y => ↑((f y).arrowCongr (g y))) s","decl":"theorem MDifferentiableOn.cle_arrowCongr {f : M → F₁ ≃L[𝕜] F₂} {g : M → F₃ ≃L[𝕜] F₄} {s : Set M}\n    (hf : MDifferentiableOn I 𝓘(𝕜, F₂ →L[𝕜] F₁) (fun x ↦ ((f x).symm : F₂ →L[𝕜] F₁)) s)\n    (hg : MDifferentiableOn I 𝓘(𝕜, F₃ →L[𝕜] F₄) (fun x ↦ (g x : F₃ →L[𝕜] F₄)) s) :\n    MDifferentiableOn I 𝓘(𝕜, (F₁ →L[𝕜] F₃) →L[𝕜] (F₂ →L[𝕜] F₄))\n      (fun y ↦ (f y).arrowCongr (g y) : M → (F₁ →L[𝕜] F₃) →L[𝕜] (F₂ →L[𝕜] F₄)) s := fun x hx ↦\n  (hf x hx).cle_arrowCongr (hg x hx)\n\n"}
{"name":"MDifferentiable.cle_arrowCongr","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝¹³ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹² : NormedAddCommGroup E\ninst✝¹¹ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹⁰ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁹ : TopologicalSpace M\ninst✝⁸ : ChartedSpace H M\nF₁ : Type u_14\ninst✝⁷ : NormedAddCommGroup F₁\ninst✝⁶ : NormedSpace 𝕜 F₁\nF₂ : Type u_15\ninst✝⁵ : NormedAddCommGroup F₂\ninst✝⁴ : NormedSpace 𝕜 F₂\nF₃ : Type u_16\ninst✝³ : NormedAddCommGroup F₃\ninst✝² : NormedSpace 𝕜 F₃\nF₄ : Type u_17\ninst✝¹ : NormedAddCommGroup F₄\ninst✝ : NormedSpace 𝕜 F₄\nf : M → ContinuousLinearEquiv (RingHom.id 𝕜) F₁ F₂\ng : M → ContinuousLinearEquiv (RingHom.id 𝕜) F₃ F₄\nhf : MDifferentiable I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₁)) fun x => ↑(f x).symm\nhg : MDifferentiable I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₃ F₄)) fun x => ↑(g x)\n⊢ MDifferentiable I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃) (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₄))) fun y => ↑((f y).arrowCongr (g y))","decl":"theorem MDifferentiable.cle_arrowCongr {f : M → F₁ ≃L[𝕜] F₂} {g : M → F₃ ≃L[𝕜] F₄}\n    (hf : MDifferentiable I 𝓘(𝕜, F₂ →L[𝕜] F₁) (fun x ↦ ((f x).symm : F₂ →L[𝕜] F₁)))\n    (hg : MDifferentiable I 𝓘(𝕜, F₃ →L[𝕜] F₄) (fun x ↦ (g x : F₃ →L[𝕜] F₄))) :\n    MDifferentiable I 𝓘(𝕜, (F₁ →L[𝕜] F₃) →L[𝕜] (F₂ →L[𝕜] F₄))\n      (fun y ↦ (f y).arrowCongr (g y) : M → (F₁ →L[𝕜] F₃) →L[𝕜] (F₂ →L[𝕜] F₄)) := fun x ↦\n  (hf x).cle_arrowCongr (hg x)\n\n"}
{"name":"MDifferentiableWithinAt.clm_prodMap","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝¹³ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹² : NormedAddCommGroup E\ninst✝¹¹ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹⁰ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁹ : TopologicalSpace M\ninst✝⁸ : ChartedSpace H M\nF₁ : Type u_14\ninst✝⁷ : NormedAddCommGroup F₁\ninst✝⁶ : NormedSpace 𝕜 F₁\nF₂ : Type u_15\ninst✝⁵ : NormedAddCommGroup F₂\ninst✝⁴ : NormedSpace 𝕜 F₂\nF₃ : Type u_16\ninst✝³ : NormedAddCommGroup F₃\ninst✝² : NormedSpace 𝕜 F₃\nF₄ : Type u_17\ninst✝¹ : NormedAddCommGroup F₄\ninst✝ : NormedSpace 𝕜 F₄\ng : M → ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃\nf : M → ContinuousLinearMap (RingHom.id 𝕜) F₂ F₄\ns : Set M\nx : M\nhg : MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃)) g s x\nhf : MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₄)) f s x\n⊢ MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) (Prod F₁ F₂) (Prod F₃ F₄))) (fun x => (g x).prodMap (f x)) s x","decl":"theorem MDifferentiableWithinAt.clm_prodMap {g : M → F₁ →L[𝕜] F₃} {f : M → F₂ →L[𝕜] F₄} {s : Set M}\n    {x : M} (hg : MDifferentiableWithinAt I 𝓘(𝕜, F₁ →L[𝕜] F₃) g s x)\n    (hf : MDifferentiableWithinAt I 𝓘(𝕜, F₂ →L[𝕜] F₄) f s x) :\n    MDifferentiableWithinAt I 𝓘(𝕜, F₁ × F₂ →L[𝕜] F₃ × F₄) (fun x => (g x).prodMap (f x)) s x :=\n  Differentiable.comp_mdifferentiableWithinAt\n    (g := fun x : (F₁ →L[𝕜] F₃) × (F₂ →L[𝕜] F₄) => x.1.prodMap x.2)\n    (f := fun x => (g x, f x)) (ContinuousLinearMap.prodMapL 𝕜 F₁ F₃ F₂ F₄).differentiable\n    (hg.prod_mk_space hf)\n\n"}
{"name":"MDifferentiableAt.clm_prodMap","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝¹³ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹² : NormedAddCommGroup E\ninst✝¹¹ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹⁰ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁹ : TopologicalSpace M\ninst✝⁸ : ChartedSpace H M\nF₁ : Type u_14\ninst✝⁷ : NormedAddCommGroup F₁\ninst✝⁶ : NormedSpace 𝕜 F₁\nF₂ : Type u_15\ninst✝⁵ : NormedAddCommGroup F₂\ninst✝⁴ : NormedSpace 𝕜 F₂\nF₃ : Type u_16\ninst✝³ : NormedAddCommGroup F₃\ninst✝² : NormedSpace 𝕜 F₃\nF₄ : Type u_17\ninst✝¹ : NormedAddCommGroup F₄\ninst✝ : NormedSpace 𝕜 F₄\ng : M → ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃\nf : M → ContinuousLinearMap (RingHom.id 𝕜) F₂ F₄\nx : M\nhg : MDifferentiableAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃)) g x\nhf : MDifferentiableAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₄)) f x\n⊢ MDifferentiableAt I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) (Prod F₁ F₂) (Prod F₃ F₄))) (fun x => (g x).prodMap (f x)) x","decl":"nonrec theorem MDifferentiableAt.clm_prodMap {g : M → F₁ →L[𝕜] F₃} {f : M → F₂ →L[𝕜] F₄} {x : M}\n    (hg : MDifferentiableAt I 𝓘(𝕜, F₁ →L[𝕜] F₃) g x)\n    (hf : MDifferentiableAt I 𝓘(𝕜, F₂ →L[𝕜] F₄) f x) :\n    MDifferentiableAt I 𝓘(𝕜, F₁ × F₂ →L[𝕜] F₃ × F₄) (fun x => (g x).prodMap (f x)) x :=\n  Differentiable.comp_mdifferentiableWithinAt\n    (g := fun x : (F₁ →L[𝕜] F₃) × (F₂ →L[𝕜] F₄) => x.1.prodMap x.2)\n    (f := fun x => (g x, f x)) (ContinuousLinearMap.prodMapL 𝕜 F₁ F₃ F₂ F₄).differentiable\n    (hg.prod_mk_space hf)\n\n"}
{"name":"MDifferentiableOn.clm_prodMap","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝¹³ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹² : NormedAddCommGroup E\ninst✝¹¹ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹⁰ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁹ : TopologicalSpace M\ninst✝⁸ : ChartedSpace H M\nF₁ : Type u_14\ninst✝⁷ : NormedAddCommGroup F₁\ninst✝⁶ : NormedSpace 𝕜 F₁\nF₂ : Type u_15\ninst✝⁵ : NormedAddCommGroup F₂\ninst✝⁴ : NormedSpace 𝕜 F₂\nF₃ : Type u_16\ninst✝³ : NormedAddCommGroup F₃\ninst✝² : NormedSpace 𝕜 F₃\nF₄ : Type u_17\ninst✝¹ : NormedAddCommGroup F₄\ninst✝ : NormedSpace 𝕜 F₄\ng : M → ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃\nf : M → ContinuousLinearMap (RingHom.id 𝕜) F₂ F₄\ns : Set M\nhg : MDifferentiableOn I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃)) g s\nhf : MDifferentiableOn I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₄)) f s\n⊢ MDifferentiableOn I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) (Prod F₁ F₂) (Prod F₃ F₄))) (fun x => (g x).prodMap (f x)) s","decl":"theorem MDifferentiableOn.clm_prodMap {g : M → F₁ →L[𝕜] F₃} {f : M → F₂ →L[𝕜] F₄} {s : Set M}\n    (hg : MDifferentiableOn I 𝓘(𝕜, F₁ →L[𝕜] F₃) g s)\n    (hf : MDifferentiableOn I 𝓘(𝕜, F₂ →L[𝕜] F₄) f s) :\n    MDifferentiableOn I 𝓘(𝕜, F₁ × F₂ →L[𝕜] F₃ × F₄) (fun x => (g x).prodMap (f x)) s := fun x hx =>\n  (hg x hx).clm_prodMap (hf x hx)\n\n"}
{"name":"MDifferentiable.clm_prodMap","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝¹³ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹² : NormedAddCommGroup E\ninst✝¹¹ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹⁰ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁹ : TopologicalSpace M\ninst✝⁸ : ChartedSpace H M\nF₁ : Type u_14\ninst✝⁷ : NormedAddCommGroup F₁\ninst✝⁶ : NormedSpace 𝕜 F₁\nF₂ : Type u_15\ninst✝⁵ : NormedAddCommGroup F₂\ninst✝⁴ : NormedSpace 𝕜 F₂\nF₃ : Type u_16\ninst✝³ : NormedAddCommGroup F₃\ninst✝² : NormedSpace 𝕜 F₃\nF₄ : Type u_17\ninst✝¹ : NormedAddCommGroup F₄\ninst✝ : NormedSpace 𝕜 F₄\ng : M → ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃\nf : M → ContinuousLinearMap (RingHom.id 𝕜) F₂ F₄\nhg : MDifferentiable I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₁ F₃)) g\nhf : MDifferentiable I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) F₂ F₄)) f\n⊢ MDifferentiable I (modelWithCornersSelf 𝕜 (ContinuousLinearMap (RingHom.id 𝕜) (Prod F₁ F₂) (Prod F₃ F₄))) fun x => (g x).prodMap (f x)","decl":"theorem MDifferentiable.clm_prodMap {g : M → F₁ →L[𝕜] F₃} {f : M → F₂ →L[𝕜] F₄}\n    (hg : MDifferentiable I 𝓘(𝕜, F₁ →L[𝕜] F₃) g) (hf : MDifferentiable I 𝓘(𝕜, F₂ →L[𝕜] F₄) f) :\n    MDifferentiable I 𝓘(𝕜, F₁ × F₂ →L[𝕜] F₃ × F₄) fun x => (g x).prodMap (f x) := fun x =>\n  (hg x).clm_prodMap (hf x)\n\n"}
{"name":"MDifferentiableWithinAt.smul","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\ns : Set M\nx : M\nV : Type u_18\ninst✝¹ : NormedAddCommGroup V\ninst✝ : NormedSpace 𝕜 V\nf : M → 𝕜\ng : M → V\nhf : MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 𝕜) f s x\nhg : MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 V) g s x\n⊢ MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 V) (fun p => HSMul.hSMul (f p) (g p)) s x","decl":"theorem MDifferentiableWithinAt.smul {f : M → 𝕜} {g : M → V}\n    (hf : MDifferentiableWithinAt I 𝓘(𝕜) f s x) (hg : MDifferentiableWithinAt I 𝓘(𝕜, V) g s x) :\n    MDifferentiableWithinAt I 𝓘(𝕜, V) (fun p => f p • g p) s x :=\n  ((contMDiff_smul.of_le le_top).mdifferentiable le_rfl _).comp_mdifferentiableWithinAt x\n    (hf.prod_mk hg)\n\n"}
{"name":"MDifferentiableAt.smul","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nx : M\nV : Type u_18\ninst✝¹ : NormedAddCommGroup V\ninst✝ : NormedSpace 𝕜 V\nf : M → 𝕜\ng : M → V\nhf : MDifferentiableAt I (modelWithCornersSelf 𝕜 𝕜) f x\nhg : MDifferentiableAt I (modelWithCornersSelf 𝕜 V) g x\n⊢ MDifferentiableAt I (modelWithCornersSelf 𝕜 V) (fun p => HSMul.hSMul (f p) (g p)) x","decl":"theorem MDifferentiableAt.smul {f : M → 𝕜} {g : M → V} (hf : MDifferentiableAt I 𝓘(𝕜) f x)\n    (hg : MDifferentiableAt I 𝓘(𝕜, V) g x) : MDifferentiableAt I 𝓘(𝕜, V) (fun p => f p • g p) x :=\n  ((contMDiff_smul.of_le le_top).mdifferentiable le_rfl _).comp x (hf.prod_mk hg)\n\n"}
{"name":"MDifferentiableOn.smul","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\ns : Set M\nV : Type u_18\ninst✝¹ : NormedAddCommGroup V\ninst✝ : NormedSpace 𝕜 V\nf : M → 𝕜\ng : M → V\nhf : MDifferentiableOn I (modelWithCornersSelf 𝕜 𝕜) f s\nhg : MDifferentiableOn I (modelWithCornersSelf 𝕜 V) g s\n⊢ MDifferentiableOn I (modelWithCornersSelf 𝕜 V) (fun p => HSMul.hSMul (f p) (g p)) s","decl":"theorem MDifferentiableOn.smul {f : M → 𝕜} {g : M → V} (hf : MDifferentiableOn I 𝓘(𝕜) f s)\n    (hg : MDifferentiableOn I 𝓘(𝕜, V) g s) : MDifferentiableOn I 𝓘(𝕜, V) (fun p => f p • g p) s :=\n  fun x hx => (hf x hx).smul (hg x hx)\n\n"}
{"name":"MDifferentiable.smul","module":"Mathlib.Geometry.Manifold.MFDeriv.NormedSpace","initialProofState":"𝕜 : Type u_1\ninst✝⁷ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁶ : NormedAddCommGroup E\ninst✝⁵ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁴ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nV : Type u_18\ninst✝¹ : NormedAddCommGroup V\ninst✝ : NormedSpace 𝕜 V\nf : M → 𝕜\ng : M → V\nhf : MDifferentiable I (modelWithCornersSelf 𝕜 𝕜) f\nhg : MDifferentiable I (modelWithCornersSelf 𝕜 V) g\n⊢ MDifferentiable I (modelWithCornersSelf 𝕜 V) fun p => HSMul.hSMul (f p) (g p)","decl":"theorem MDifferentiable.smul {f : M → 𝕜} {g : M → V} (hf : MDifferentiable I 𝓘(𝕜) f)\n    (hg : MDifferentiable I 𝓘(𝕜, V) g) : MDifferentiable I 𝓘(𝕜, V) fun p => f p • g p := fun x =>\n  (hf x).smul (hg x)\n"}
