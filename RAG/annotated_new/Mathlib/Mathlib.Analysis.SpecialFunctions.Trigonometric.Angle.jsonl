{"name":"Real.Angle.continuous_coe","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Continuous Real.Angle.coe","decl":"@[continuity]\ntheorem continuous_coe : Continuous ((↑) : ℝ → Angle) :=\n  continuous_quotient_mk'\n\n"}
{"name":"Real.Angle.coe_coeHom","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Eq (⇑Real.Angle.coeHom) Real.Angle.coe","decl":"@[simp]\ntheorem coe_coeHom : (coeHom : ℝ → Angle) = ((↑) : ℝ → Angle) :=\n  rfl\n\n"}
{"name":"Real.Angle.induction_on","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"p : Real.Angle → Prop\nθ : Real.Angle\nh : ∀ (x : Real), p ↑x\n⊢ p θ","decl":"/-- An induction principle to deduce results for `Angle` from those for `ℝ`, used with\n`induction θ using Real.Angle.induction_on`. -/\n@[elab_as_elim]\nprotected theorem induction_on {p : Angle → Prop} (θ : Angle) (h : ∀ x : ℝ, p x) : p θ :=\n  Quotient.inductionOn' θ h\n\n"}
{"name":"Real.Angle.coe_zero","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Eq (↑0) 0","decl":"@[simp]\ntheorem coe_zero : ↑(0 : ℝ) = (0 : Angle) :=\n  rfl\n\n"}
{"name":"Real.Angle.coe_add","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"x y : Real\n⊢ Eq (↑(HAdd.hAdd x y)) (HAdd.hAdd ↑x ↑y)","decl":"@[simp]\ntheorem coe_add (x y : ℝ) : ↑(x + y : ℝ) = (↑x + ↑y : Angle) :=\n  rfl\n\n"}
{"name":"Real.Angle.coe_neg","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"x : Real\n⊢ Eq (↑(Neg.neg x)) (Neg.neg ↑x)","decl":"@[simp]\ntheorem coe_neg (x : ℝ) : ↑(-x : ℝ) = -(↑x : Angle) :=\n  rfl\n\n"}
{"name":"Real.Angle.coe_sub","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"x y : Real\n⊢ Eq (↑(HSub.hSub x y)) (HSub.hSub ↑x ↑y)","decl":"@[simp]\ntheorem coe_sub (x y : ℝ) : ↑(x - y : ℝ) = (↑x - ↑y : Angle) :=\n  rfl\n\n"}
{"name":"Real.Angle.coe_nsmul","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"n : Nat\nx : Real\n⊢ Eq (↑(HSMul.hSMul n x)) (HSMul.hSMul n ↑x)","decl":"theorem coe_nsmul (n : ℕ) (x : ℝ) : ↑(n • x : ℝ) = n • (↑x : Angle) :=\n  rfl\n\n"}
{"name":"Real.Angle.coe_zsmul","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"z : Int\nx : Real\n⊢ Eq (↑(HSMul.hSMul z x)) (HSMul.hSMul z ↑x)","decl":"theorem coe_zsmul (z : ℤ) (x : ℝ) : ↑(z • x : ℝ) = z • (↑x : Angle) :=\n  rfl\n\n"}
{"name":"Real.Angle.natCast_mul_eq_nsmul","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"x : Real\nn : Nat\n⊢ Eq (↑(HMul.hMul (↑n) x)) (HSMul.hSMul n ↑x)","decl":"@[simp, norm_cast]\ntheorem natCast_mul_eq_nsmul (x : ℝ) (n : ℕ) : ↑((n : ℝ) * x) = n • (↑x : Angle) := by\n  simpa only [nsmul_eq_mul] using coeHom.map_nsmul x n\n\n"}
{"name":"Real.Angle.intCast_mul_eq_zsmul","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"x : Real\nn : Int\n⊢ Eq (↑(HMul.hMul (↑n) x)) (HSMul.hSMul n ↑x)","decl":"@[simp, norm_cast]\ntheorem intCast_mul_eq_zsmul (x : ℝ) (n : ℤ) : ↑((n : ℝ) * x : ℝ) = n • (↑x : Angle) := by\n  simpa only [zsmul_eq_mul] using coeHom.map_zsmul x n\n\n"}
{"name":"Real.Angle.angle_eq_iff_two_pi_dvd_sub","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"ψ θ : Real\n⊢ Iff (Eq ↑θ ↑ψ) (Exists fun k => Eq (HSub.hSub θ ψ) (HMul.hMul (HMul.hMul 2 Real.pi) ↑k))","decl":"theorem angle_eq_iff_two_pi_dvd_sub {ψ θ : ℝ} : (θ : Angle) = ψ ↔ ∃ k : ℤ, θ - ψ = 2 * π * k := by\n  simp only [QuotientAddGroup.eq, AddSubgroup.zmultiples_eq_closure,\n    AddSubgroup.mem_closure_singleton, zsmul_eq_mul', (sub_eq_neg_add _ _).symm, eq_comm]\n  -- Porting note: added `rw`, `simp [Angle.coe, QuotientAddGroup.eq]` doesn't fire otherwise\n  rw [Angle.coe, Angle.coe, QuotientAddGroup.eq]\n  simp only [AddSubgroup.zmultiples_eq_closure,\n    AddSubgroup.mem_closure_singleton, zsmul_eq_mul', (sub_eq_neg_add _ _).symm, eq_comm]\n\n"}
{"name":"Real.Angle.coe_two_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Eq (↑(HMul.hMul 2 Real.pi)) 0","decl":"@[simp]\ntheorem coe_two_pi : ↑(2 * π : ℝ) = (0 : Angle) :=\n  angle_eq_iff_two_pi_dvd_sub.2 ⟨1, by rw [sub_zero, Int.cast_one, mul_one]⟩\n\n"}
{"name":"Real.Angle.neg_coe_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Eq (Neg.neg ↑Real.pi) ↑Real.pi","decl":"@[simp]\ntheorem neg_coe_pi : -(π : Angle) = π := by\n  rw [← coe_neg, angle_eq_iff_two_pi_dvd_sub]\n  use -1\n  simp [two_mul, sub_eq_add_neg]\n\n"}
{"name":"Real.Angle.two_nsmul_coe_div_two","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real\n⊢ Eq (HSMul.hSMul 2 ↑(HDiv.hDiv θ 2)) ↑θ","decl":"@[simp]\ntheorem two_nsmul_coe_div_two (θ : ℝ) : (2 : ℕ) • (↑(θ / 2) : Angle) = θ := by\n  rw [← coe_nsmul, two_nsmul, add_halves]\n\n"}
{"name":"Real.Angle.two_zsmul_coe_div_two","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real\n⊢ Eq (HSMul.hSMul 2 ↑(HDiv.hDiv θ 2)) ↑θ","decl":"@[simp]\ntheorem two_zsmul_coe_div_two (θ : ℝ) : (2 : ℤ) • (↑(θ / 2) : Angle) = θ := by\n  rw [← coe_zsmul, two_zsmul, add_halves]\n\n"}
{"name":"Real.Angle.two_nsmul_neg_pi_div_two","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Eq (HSMul.hSMul 2 ↑(HDiv.hDiv (Neg.neg Real.pi) 2)) ↑Real.pi","decl":"theorem two_nsmul_neg_pi_div_two : (2 : ℕ) • (↑(-π / 2) : Angle) = π := by\n  rw [two_nsmul_coe_div_two, coe_neg, neg_coe_pi]\n\n"}
{"name":"Real.Angle.two_zsmul_neg_pi_div_two","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Eq (HSMul.hSMul 2 ↑(HDiv.hDiv (Neg.neg Real.pi) 2)) ↑Real.pi","decl":"theorem two_zsmul_neg_pi_div_two : (2 : ℤ) • (↑(-π / 2) : Angle) = π := by\n  rw [two_zsmul, ← two_nsmul, two_nsmul_neg_pi_div_two]\n\n"}
{"name":"Real.Angle.sub_coe_pi_eq_add_coe_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq (HSub.hSub θ ↑Real.pi) (HAdd.hAdd θ ↑Real.pi)","decl":"theorem sub_coe_pi_eq_add_coe_pi (θ : Angle) : θ - π = θ + π := by\n  rw [sub_eq_add_neg, neg_coe_pi]\n\n"}
{"name":"Real.Angle.two_nsmul_coe_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Eq (HSMul.hSMul 2 ↑Real.pi) 0","decl":"@[simp]\ntheorem two_nsmul_coe_pi : (2 : ℕ) • (π : Angle) = 0 := by simp [← natCast_mul_eq_nsmul]\n\n"}
{"name":"Real.Angle.two_zsmul_coe_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Eq (HSMul.hSMul 2 ↑Real.pi) 0","decl":"@[simp]\ntheorem two_zsmul_coe_pi : (2 : ℤ) • (π : Angle) = 0 := by simp [← intCast_mul_eq_zsmul]\n\n"}
{"name":"Real.Angle.coe_pi_add_coe_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Eq (HAdd.hAdd ↑Real.pi ↑Real.pi) 0","decl":"@[simp]\ntheorem coe_pi_add_coe_pi : (π : Real.Angle) + π = 0 := by rw [← two_nsmul, two_nsmul_coe_pi]\n\n"}
{"name":"Real.Angle.zsmul_eq_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"ψ θ : Real.Angle\nz : Int\nhz : Ne z 0\n⊢ Iff (Eq (HSMul.hSMul z ψ) (HSMul.hSMul z θ)) (Exists fun k => Eq ψ (HAdd.hAdd θ (HSMul.hSMul ↑k ↑(HDiv.hDiv (HMul.hMul 2 Real.pi) ↑z))))","decl":"theorem zsmul_eq_iff {ψ θ : Angle} {z : ℤ} (hz : z ≠ 0) :\n    z • ψ = z • θ ↔ ∃ k : Fin z.natAbs, ψ = θ + (k : ℕ) • (2 * π / z : ℝ) :=\n  QuotientAddGroup.zmultiples_zsmul_eq_zsmul_iff hz\n\n"}
{"name":"Real.Angle.nsmul_eq_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"ψ θ : Real.Angle\nn : Nat\nhz : Ne n 0\n⊢ Iff (Eq (HSMul.hSMul n ψ) (HSMul.hSMul n θ)) (Exists fun k => Eq ψ (HAdd.hAdd θ (HSMul.hSMul ↑k ↑(HDiv.hDiv (HMul.hMul 2 Real.pi) ↑n))))","decl":"theorem nsmul_eq_iff {ψ θ : Angle} {n : ℕ} (hz : n ≠ 0) :\n    n • ψ = n • θ ↔ ∃ k : Fin n, ψ = θ + (k : ℕ) • (2 * π / n : ℝ) :=\n  QuotientAddGroup.zmultiples_nsmul_eq_nsmul_iff hz\n\n"}
{"name":"Real.Angle.two_zsmul_eq_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"ψ θ : Real.Angle\n⊢ Iff (Eq (HSMul.hSMul 2 ψ) (HSMul.hSMul 2 θ)) (Or (Eq ψ θ) (Eq ψ (HAdd.hAdd θ ↑Real.pi)))","decl":"theorem two_zsmul_eq_iff {ψ θ : Angle} : (2 : ℤ) • ψ = (2 : ℤ) • θ ↔ ψ = θ ∨ ψ = θ + ↑π := by\n  have : Int.natAbs 2 = 2 := rfl\n  rw [zsmul_eq_iff two_ne_zero, this, Fin.exists_fin_two, Fin.val_zero,\n    Fin.val_one, zero_smul, add_zero, one_smul, Int.cast_two,\n    mul_div_cancel_left₀ (_ : ℝ) two_ne_zero]\n\n"}
{"name":"Real.Angle.two_nsmul_eq_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"ψ θ : Real.Angle\n⊢ Iff (Eq (HSMul.hSMul 2 ψ) (HSMul.hSMul 2 θ)) (Or (Eq ψ θ) (Eq ψ (HAdd.hAdd θ ↑Real.pi)))","decl":"theorem two_nsmul_eq_iff {ψ θ : Angle} : (2 : ℕ) • ψ = (2 : ℕ) • θ ↔ ψ = θ ∨ ψ = θ + ↑π := by\n  simp_rw [← natCast_zsmul, Nat.cast_ofNat, two_zsmul_eq_iff]\n\n"}
{"name":"Real.Angle.two_nsmul_eq_zero_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Eq (HSMul.hSMul 2 θ) 0) (Or (Eq θ 0) (Eq θ ↑Real.pi))","decl":"theorem two_nsmul_eq_zero_iff {θ : Angle} : (2 : ℕ) • θ = 0 ↔ θ = 0 ∨ θ = π := by\n  convert two_nsmul_eq_iff <;> simp\n\n"}
{"name":"Real.Angle.two_nsmul_ne_zero_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Ne (HSMul.hSMul 2 θ) 0) (And (Ne θ 0) (Ne θ ↑Real.pi))","decl":"theorem two_nsmul_ne_zero_iff {θ : Angle} : (2 : ℕ) • θ ≠ 0 ↔ θ ≠ 0 ∧ θ ≠ π := by\n  rw [← not_or, ← two_nsmul_eq_zero_iff]\n\n"}
{"name":"Real.Angle.two_zsmul_eq_zero_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Eq (HSMul.hSMul 2 θ) 0) (Or (Eq θ 0) (Eq θ ↑Real.pi))","decl":"theorem two_zsmul_eq_zero_iff {θ : Angle} : (2 : ℤ) • θ = 0 ↔ θ = 0 ∨ θ = π := by\n  simp_rw [two_zsmul, ← two_nsmul, two_nsmul_eq_zero_iff]\n\n"}
{"name":"Real.Angle.two_zsmul_ne_zero_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Ne (HSMul.hSMul 2 θ) 0) (And (Ne θ 0) (Ne θ ↑Real.pi))","decl":"theorem two_zsmul_ne_zero_iff {θ : Angle} : (2 : ℤ) • θ ≠ 0 ↔ θ ≠ 0 ∧ θ ≠ π := by\n  rw [← not_or, ← two_zsmul_eq_zero_iff]\n\n"}
{"name":"Real.Angle.eq_neg_self_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Eq θ (Neg.neg θ)) (Or (Eq θ 0) (Eq θ ↑Real.pi))","decl":"theorem eq_neg_self_iff {θ : Angle} : θ = -θ ↔ θ = 0 ∨ θ = π := by\n  rw [← add_eq_zero_iff_eq_neg, ← two_nsmul, two_nsmul_eq_zero_iff]\n\n"}
{"name":"Real.Angle.ne_neg_self_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Ne θ (Neg.neg θ)) (And (Ne θ 0) (Ne θ ↑Real.pi))","decl":"theorem ne_neg_self_iff {θ : Angle} : θ ≠ -θ ↔ θ ≠ 0 ∧ θ ≠ π := by\n  rw [← not_or, ← eq_neg_self_iff.not]\n\n"}
{"name":"Real.Angle.neg_eq_self_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Eq (Neg.neg θ) θ) (Or (Eq θ 0) (Eq θ ↑Real.pi))","decl":"theorem neg_eq_self_iff {θ : Angle} : -θ = θ ↔ θ = 0 ∨ θ = π := by rw [eq_comm, eq_neg_self_iff]\n\n"}
{"name":"Real.Angle.neg_ne_self_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Ne (Neg.neg θ) θ) (And (Ne θ 0) (Ne θ ↑Real.pi))","decl":"theorem neg_ne_self_iff {θ : Angle} : -θ ≠ θ ↔ θ ≠ 0 ∧ θ ≠ π := by\n  rw [← not_or, ← neg_eq_self_iff.not]\n\n"}
{"name":"Real.Angle.two_nsmul_eq_pi_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Eq (HSMul.hSMul 2 θ) ↑Real.pi) (Or (Eq θ ↑(HDiv.hDiv Real.pi 2)) (Eq θ ↑(HDiv.hDiv (Neg.neg Real.pi) 2)))","decl":"theorem two_nsmul_eq_pi_iff {θ : Angle} : (2 : ℕ) • θ = π ↔ θ = (π / 2 : ℝ) ∨ θ = (-π / 2 : ℝ) := by\n  have h : (π : Angle) = ((2 : ℕ) • (π / 2 : ℝ):) := by rw [two_nsmul, add_halves]\n  nth_rw 1 [h]\n  rw [coe_nsmul, two_nsmul_eq_iff]\n  -- Porting note: `congr` didn't simplify the goal of iff of `Or`s\n  convert Iff.rfl\n  rw [add_comm, ← coe_add, ← sub_eq_zero, ← coe_sub, neg_div, ← neg_sub, sub_neg_eq_add, add_assoc,\n    add_halves, ← two_mul, coe_neg, coe_two_pi, neg_zero]\n\n"}
{"name":"Real.Angle.two_zsmul_eq_pi_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Eq (HSMul.hSMul 2 θ) ↑Real.pi) (Or (Eq θ ↑(HDiv.hDiv Real.pi 2)) (Eq θ ↑(HDiv.hDiv (Neg.neg Real.pi) 2)))","decl":"theorem two_zsmul_eq_pi_iff {θ : Angle} : (2 : ℤ) • θ = π ↔ θ = (π / 2 : ℝ) ∨ θ = (-π / 2 : ℝ) := by\n  rw [two_zsmul, ← two_nsmul, two_nsmul_eq_pi_iff]\n\n"}
{"name":"Real.Angle.cos_eq_iff_coe_eq_or_eq_neg","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ ψ : Real\n⊢ Iff (Eq (Real.cos θ) (Real.cos ψ)) (Or (Eq ↑θ ↑ψ) (Eq (↑θ) (Neg.neg ↑ψ)))","decl":"theorem cos_eq_iff_coe_eq_or_eq_neg {θ ψ : ℝ} :\n    cos θ = cos ψ ↔ (θ : Angle) = ψ ∨ (θ : Angle) = -ψ := by\n  constructor\n  · intro Hcos\n    rw [← sub_eq_zero, cos_sub_cos, mul_eq_zero, mul_eq_zero, neg_eq_zero,\n      eq_false (two_ne_zero' ℝ), false_or, sin_eq_zero_iff, sin_eq_zero_iff] at Hcos\n    rcases Hcos with (⟨n, hn⟩ | ⟨n, hn⟩)\n    · right\n      rw [eq_div_iff_mul_eq (two_ne_zero' ℝ), ← sub_eq_iff_eq_add] at hn\n      rw [← hn, coe_sub, eq_neg_iff_add_eq_zero, sub_add_cancel, mul_assoc, intCast_mul_eq_zsmul,\n        mul_comm, coe_two_pi, zsmul_zero]\n    · left\n      rw [eq_div_iff_mul_eq (two_ne_zero' ℝ), eq_sub_iff_add_eq] at hn\n      rw [← hn, coe_add, mul_assoc, intCast_mul_eq_zsmul, mul_comm, coe_two_pi, zsmul_zero,\n        zero_add]\n  · rw [angle_eq_iff_two_pi_dvd_sub, ← coe_neg, angle_eq_iff_two_pi_dvd_sub]\n    rintro (⟨k, H⟩ | ⟨k, H⟩)\n    · rw [← sub_eq_zero, cos_sub_cos, H, mul_assoc 2 π k, mul_div_cancel_left₀ _ (two_ne_zero' ℝ),\n        mul_comm π _, sin_int_mul_pi, mul_zero]\n    rw [← sub_eq_zero, cos_sub_cos, ← sub_neg_eq_add, H, mul_assoc 2 π k,\n      mul_div_cancel_left₀ _ (two_ne_zero' ℝ), mul_comm π _, sin_int_mul_pi, mul_zero,\n      zero_mul]\n\n"}
{"name":"Real.Angle.sin_eq_iff_coe_eq_or_add_eq_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ ψ : Real\n⊢ Iff (Eq (Real.sin θ) (Real.sin ψ)) (Or (Eq ↑θ ↑ψ) (Eq (HAdd.hAdd ↑θ ↑ψ) ↑Real.pi))","decl":"theorem sin_eq_iff_coe_eq_or_add_eq_pi {θ ψ : ℝ} :\n    sin θ = sin ψ ↔ (θ : Angle) = ψ ∨ (θ : Angle) + ψ = π := by\n  constructor\n  · intro Hsin\n    rw [← cos_pi_div_two_sub, ← cos_pi_div_two_sub] at Hsin\n    cases' cos_eq_iff_coe_eq_or_eq_neg.mp Hsin with h h\n    · left\n      rw [coe_sub, coe_sub] at h\n      exact sub_right_inj.1 h\n    right\n    rw [coe_sub, coe_sub, eq_neg_iff_add_eq_zero, add_sub, sub_add_eq_add_sub, ← coe_add,\n      add_halves, sub_sub, sub_eq_zero] at h\n    exact h.symm\n  · rw [angle_eq_iff_two_pi_dvd_sub, ← eq_sub_iff_add_eq, ← coe_sub, angle_eq_iff_two_pi_dvd_sub]\n    rintro (⟨k, H⟩ | ⟨k, H⟩)\n    · rw [← sub_eq_zero, sin_sub_sin, H, mul_assoc 2 π k, mul_div_cancel_left₀ _ (two_ne_zero' ℝ),\n        mul_comm π _, sin_int_mul_pi, mul_zero, zero_mul]\n    have H' : θ + ψ = 2 * k * π + π := by\n      rwa [← sub_add, sub_add_eq_add_sub, sub_eq_iff_eq_add, mul_assoc, mul_comm π _, ←\n        mul_assoc] at H\n    rw [← sub_eq_zero, sin_sub_sin, H', add_div, mul_assoc 2 _ π,\n      mul_div_cancel_left₀ _ (two_ne_zero' ℝ), cos_add_pi_div_two, sin_int_mul_pi, neg_zero,\n      mul_zero]\n\n"}
{"name":"Real.Angle.cos_sin_inj","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ ψ : Real\nHcos : Eq (Real.cos θ) (Real.cos ψ)\nHsin : Eq (Real.sin θ) (Real.sin ψ)\n⊢ Eq ↑θ ↑ψ","decl":"theorem cos_sin_inj {θ ψ : ℝ} (Hcos : cos θ = cos ψ) (Hsin : sin θ = sin ψ) : (θ : Angle) = ψ := by\n  cases' cos_eq_iff_coe_eq_or_eq_neg.mp Hcos with hc hc; · exact hc\n  cases' sin_eq_iff_coe_eq_or_add_eq_pi.mp Hsin with hs hs; · exact hs\n  rw [eq_neg_iff_add_eq_zero, hs] at hc\n  obtain ⟨n, hn⟩ : ∃ n, n • _ = _ := QuotientAddGroup.leftRel_apply.mp (Quotient.exact' hc)\n  rw [← neg_one_mul, add_zero, ← sub_eq_zero, zsmul_eq_mul, ← mul_assoc, ← sub_mul, mul_eq_zero,\n    eq_false (ne_of_gt pi_pos), or_false, sub_neg_eq_add, ← Int.cast_zero, ← Int.cast_one,\n    ← Int.cast_ofNat, ← Int.cast_mul, ← Int.cast_add, Int.cast_inj] at hn\n  have : (n * 2 + 1) % (2 : ℤ) = 0 % (2 : ℤ) := congr_arg (· % (2 : ℤ)) hn\n  rw [add_comm, Int.add_mul_emod_self] at this\n  exact absurd this one_ne_zero\n\n"}
{"name":"Real.Angle.sin_coe","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"x : Real\n⊢ Eq (↑x).sin (Real.sin x)","decl":"@[simp]\ntheorem sin_coe (x : ℝ) : sin (x : Angle) = Real.sin x :=\n  rfl\n\n"}
{"name":"Real.Angle.continuous_sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Continuous Real.Angle.sin","decl":"@[continuity]\ntheorem continuous_sin : Continuous sin :=\n  Real.continuous_sin.quotient_liftOn' _\n\n"}
{"name":"Real.Angle.cos_coe","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"x : Real\n⊢ Eq (↑x).cos (Real.cos x)","decl":"@[simp]\ntheorem cos_coe (x : ℝ) : cos (x : Angle) = Real.cos x :=\n  rfl\n\n"}
{"name":"Real.Angle.continuous_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Continuous Real.Angle.cos","decl":"@[continuity]\ntheorem continuous_cos : Continuous cos :=\n  Real.continuous_cos.quotient_liftOn' _\n\n"}
{"name":"Real.Angle.cos_eq_real_cos_iff_eq_or_eq_neg","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\nψ : Real\n⊢ Iff (Eq θ.cos (Real.cos ψ)) (Or (Eq θ ↑ψ) (Eq θ (Neg.neg ↑ψ)))","decl":"theorem cos_eq_real_cos_iff_eq_or_eq_neg {θ : Angle} {ψ : ℝ} :\n    cos θ = Real.cos ψ ↔ θ = ψ ∨ θ = -ψ := by\n  induction θ using Real.Angle.induction_on\n  exact cos_eq_iff_coe_eq_or_eq_neg\n\n"}
{"name":"Real.Angle.cos_eq_iff_eq_or_eq_neg","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ ψ : Real.Angle\n⊢ Iff (Eq θ.cos ψ.cos) (Or (Eq θ ψ) (Eq θ (Neg.neg ψ)))","decl":"theorem cos_eq_iff_eq_or_eq_neg {θ ψ : Angle} : cos θ = cos ψ ↔ θ = ψ ∨ θ = -ψ := by\n  induction ψ using Real.Angle.induction_on\n  exact cos_eq_real_cos_iff_eq_or_eq_neg\n\n"}
{"name":"Real.Angle.sin_eq_real_sin_iff_eq_or_add_eq_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\nψ : Real\n⊢ Iff (Eq θ.sin (Real.sin ψ)) (Or (Eq θ ↑ψ) (Eq (HAdd.hAdd θ ↑ψ) ↑Real.pi))","decl":"theorem sin_eq_real_sin_iff_eq_or_add_eq_pi {θ : Angle} {ψ : ℝ} :\n    sin θ = Real.sin ψ ↔ θ = ψ ∨ θ + ψ = π := by\n  induction θ using Real.Angle.induction_on\n  exact sin_eq_iff_coe_eq_or_add_eq_pi\n\n"}
{"name":"Real.Angle.sin_eq_iff_eq_or_add_eq_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ ψ : Real.Angle\n⊢ Iff (Eq θ.sin ψ.sin) (Or (Eq θ ψ) (Eq (HAdd.hAdd θ ψ) ↑Real.pi))","decl":"theorem sin_eq_iff_eq_or_add_eq_pi {θ ψ : Angle} : sin θ = sin ψ ↔ θ = ψ ∨ θ + ψ = π := by\n  induction ψ using Real.Angle.induction_on\n  exact sin_eq_real_sin_iff_eq_or_add_eq_pi\n\n"}
{"name":"Real.Angle.sin_zero","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Eq (Real.Angle.sin 0) 0","decl":"@[simp]\ntheorem sin_zero : sin (0 : Angle) = 0 := by rw [← coe_zero, sin_coe, Real.sin_zero]\n\n"}
{"name":"Real.Angle.sin_coe_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Eq (↑Real.pi).sin 0","decl":"theorem sin_coe_pi : sin (π : Angle) = 0 := by rw [sin_coe, Real.sin_pi]\n\n"}
{"name":"Real.Angle.sin_eq_zero_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Eq θ.sin 0) (Or (Eq θ 0) (Eq θ ↑Real.pi))","decl":"theorem sin_eq_zero_iff {θ : Angle} : sin θ = 0 ↔ θ = 0 ∨ θ = π := by\n  nth_rw 1 [← sin_zero]\n  rw [sin_eq_iff_eq_or_add_eq_pi]\n  simp\n\n"}
{"name":"Real.Angle.sin_ne_zero_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Ne θ.sin 0) (And (Ne θ 0) (Ne θ ↑Real.pi))","decl":"theorem sin_ne_zero_iff {θ : Angle} : sin θ ≠ 0 ↔ θ ≠ 0 ∧ θ ≠ π := by\n  rw [← not_or, ← sin_eq_zero_iff]\n\n"}
{"name":"Real.Angle.sin_neg","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq (Neg.neg θ).sin (Neg.neg θ.sin)","decl":"@[simp]\ntheorem sin_neg (θ : Angle) : sin (-θ) = -sin θ := by\n  induction θ using Real.Angle.induction_on\n  exact Real.sin_neg _\n\n"}
{"name":"Real.Angle.sin_antiperiodic","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Function.Antiperiodic Real.Angle.sin ↑Real.pi","decl":"theorem sin_antiperiodic : Function.Antiperiodic sin (π : Angle) := by\n  intro θ\n  induction θ using Real.Angle.induction_on\n  exact Real.sin_antiperiodic _\n\n"}
{"name":"Real.Angle.sin_add_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq (HAdd.hAdd θ ↑Real.pi).sin (Neg.neg θ.sin)","decl":"@[simp]\ntheorem sin_add_pi (θ : Angle) : sin (θ + π) = -sin θ :=\n  sin_antiperiodic θ\n\n"}
{"name":"Real.Angle.sin_sub_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq (HSub.hSub θ ↑Real.pi).sin (Neg.neg θ.sin)","decl":"@[simp]\ntheorem sin_sub_pi (θ : Angle) : sin (θ - π) = -sin θ :=\n  sin_antiperiodic.sub_eq θ\n\n"}
{"name":"Real.Angle.cos_zero","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Eq (Real.Angle.cos 0) 1","decl":"@[simp]\ntheorem cos_zero : cos (0 : Angle) = 1 := by rw [← coe_zero, cos_coe, Real.cos_zero]\n\n"}
{"name":"Real.Angle.cos_coe_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Eq (↑Real.pi).cos (-1)","decl":"theorem cos_coe_pi : cos (π : Angle) = -1 := by rw [cos_coe, Real.cos_pi]\n\n"}
{"name":"Real.Angle.cos_neg","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq (Neg.neg θ).cos θ.cos","decl":"@[simp]\ntheorem cos_neg (θ : Angle) : cos (-θ) = cos θ := by\n  induction θ using Real.Angle.induction_on\n  exact Real.cos_neg _\n\n"}
{"name":"Real.Angle.cos_antiperiodic","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Function.Antiperiodic Real.Angle.cos ↑Real.pi","decl":"theorem cos_antiperiodic : Function.Antiperiodic cos (π : Angle) := by\n  intro θ\n  induction θ using Real.Angle.induction_on\n  exact Real.cos_antiperiodic _\n\n"}
{"name":"Real.Angle.cos_add_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq (HAdd.hAdd θ ↑Real.pi).cos (Neg.neg θ.cos)","decl":"@[simp]\ntheorem cos_add_pi (θ : Angle) : cos (θ + π) = -cos θ :=\n  cos_antiperiodic θ\n\n"}
{"name":"Real.Angle.cos_sub_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq (HSub.hSub θ ↑Real.pi).cos (Neg.neg θ.cos)","decl":"@[simp]\ntheorem cos_sub_pi (θ : Angle) : cos (θ - π) = -cos θ :=\n  cos_antiperiodic.sub_eq θ\n\n"}
{"name":"Real.Angle.cos_eq_zero_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Eq θ.cos 0) (Or (Eq θ ↑(HDiv.hDiv Real.pi 2)) (Eq θ ↑(HDiv.hDiv (Neg.neg Real.pi) 2)))","decl":"theorem cos_eq_zero_iff {θ : Angle} : cos θ = 0 ↔ θ = (π / 2 : ℝ) ∨ θ = (-π / 2 : ℝ) := by\n  rw [← cos_pi_div_two, ← cos_coe, cos_eq_iff_eq_or_eq_neg, ← coe_neg, ← neg_div]\n\n"}
{"name":"Real.Angle.sin_add","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ₁ θ₂ : Real.Angle\n⊢ Eq (HAdd.hAdd θ₁ θ₂).sin (HAdd.hAdd (HMul.hMul θ₁.sin θ₂.cos) (HMul.hMul θ₁.cos θ₂.sin))","decl":"theorem sin_add (θ₁ θ₂ : Real.Angle) : sin (θ₁ + θ₂) = sin θ₁ * cos θ₂ + cos θ₁ * sin θ₂ := by\n  induction θ₁ using Real.Angle.induction_on\n  induction θ₂ using Real.Angle.induction_on\n  exact Real.sin_add _ _\n\n"}
{"name":"Real.Angle.cos_add","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ₁ θ₂ : Real.Angle\n⊢ Eq (HAdd.hAdd θ₁ θ₂).cos (HSub.hSub (HMul.hMul θ₁.cos θ₂.cos) (HMul.hMul θ₁.sin θ₂.sin))","decl":"theorem cos_add (θ₁ θ₂ : Real.Angle) : cos (θ₁ + θ₂) = cos θ₁ * cos θ₂ - sin θ₁ * sin θ₂ := by\n  induction θ₂ using Real.Angle.induction_on\n  induction θ₁ using Real.Angle.induction_on\n  exact Real.cos_add _ _\n\n"}
{"name":"Real.Angle.cos_sq_add_sin_sq","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq (HAdd.hAdd (HPow.hPow θ.cos 2) (HPow.hPow θ.sin 2)) 1","decl":"@[simp]\ntheorem cos_sq_add_sin_sq (θ : Real.Angle) : cos θ ^ 2 + sin θ ^ 2 = 1 := by\n  induction θ using Real.Angle.induction_on\n  exact Real.cos_sq_add_sin_sq _\n\n"}
{"name":"Real.Angle.sin_add_pi_div_two","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq (HAdd.hAdd θ ↑(HDiv.hDiv Real.pi 2)).sin θ.cos","decl":"theorem sin_add_pi_div_two (θ : Angle) : sin (θ + ↑(π / 2)) = cos θ := by\n  induction θ using Real.Angle.induction_on\n  exact Real.sin_add_pi_div_two _\n\n"}
{"name":"Real.Angle.sin_sub_pi_div_two","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq (HSub.hSub θ ↑(HDiv.hDiv Real.pi 2)).sin (Neg.neg θ.cos)","decl":"theorem sin_sub_pi_div_two (θ : Angle) : sin (θ - ↑(π / 2)) = -cos θ := by\n  induction θ using Real.Angle.induction_on\n  exact Real.sin_sub_pi_div_two _\n\n"}
{"name":"Real.Angle.sin_pi_div_two_sub","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq (HSub.hSub (↑(HDiv.hDiv Real.pi 2)) θ).sin θ.cos","decl":"theorem sin_pi_div_two_sub (θ : Angle) : sin (↑(π / 2) - θ) = cos θ := by\n  induction θ using Real.Angle.induction_on\n  exact Real.sin_pi_div_two_sub _\n\n"}
{"name":"Real.Angle.cos_add_pi_div_two","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq (HAdd.hAdd θ ↑(HDiv.hDiv Real.pi 2)).cos (Neg.neg θ.sin)","decl":"theorem cos_add_pi_div_two (θ : Angle) : cos (θ + ↑(π / 2)) = -sin θ := by\n  induction θ using Real.Angle.induction_on\n  exact Real.cos_add_pi_div_two _\n\n"}
{"name":"Real.Angle.cos_sub_pi_div_two","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq (HSub.hSub θ ↑(HDiv.hDiv Real.pi 2)).cos θ.sin","decl":"theorem cos_sub_pi_div_two (θ : Angle) : cos (θ - ↑(π / 2)) = sin θ := by\n  induction θ using Real.Angle.induction_on\n  exact Real.cos_sub_pi_div_two _\n\n"}
{"name":"Real.Angle.cos_pi_div_two_sub","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq (HSub.hSub (↑(HDiv.hDiv Real.pi 2)) θ).cos θ.sin","decl":"theorem cos_pi_div_two_sub (θ : Angle) : cos (↑(π / 2) - θ) = sin θ := by\n  induction θ using Real.Angle.induction_on\n  exact Real.cos_pi_div_two_sub _\n\n"}
{"name":"Real.Angle.abs_sin_eq_of_two_nsmul_eq","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ ψ : Real.Angle\nh : Eq (HSMul.hSMul 2 θ) (HSMul.hSMul 2 ψ)\n⊢ Eq (abs θ.sin) (abs ψ.sin)","decl":"theorem abs_sin_eq_of_two_nsmul_eq {θ ψ : Angle} (h : (2 : ℕ) • θ = (2 : ℕ) • ψ) :\n    |sin θ| = |sin ψ| := by\n  rw [two_nsmul_eq_iff] at h\n  rcases h with (rfl | rfl)\n  · rfl\n  · rw [sin_add_pi, abs_neg]\n\n"}
{"name":"Real.Angle.abs_sin_eq_of_two_zsmul_eq","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ ψ : Real.Angle\nh : Eq (HSMul.hSMul 2 θ) (HSMul.hSMul 2 ψ)\n⊢ Eq (abs θ.sin) (abs ψ.sin)","decl":"theorem abs_sin_eq_of_two_zsmul_eq {θ ψ : Angle} (h : (2 : ℤ) • θ = (2 : ℤ) • ψ) :\n    |sin θ| = |sin ψ| := by\n  simp_rw [two_zsmul, ← two_nsmul] at h\n  exact abs_sin_eq_of_two_nsmul_eq h\n\n"}
{"name":"Real.Angle.abs_cos_eq_of_two_nsmul_eq","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ ψ : Real.Angle\nh : Eq (HSMul.hSMul 2 θ) (HSMul.hSMul 2 ψ)\n⊢ Eq (abs θ.cos) (abs ψ.cos)","decl":"theorem abs_cos_eq_of_two_nsmul_eq {θ ψ : Angle} (h : (2 : ℕ) • θ = (2 : ℕ) • ψ) :\n    |cos θ| = |cos ψ| := by\n  rw [two_nsmul_eq_iff] at h\n  rcases h with (rfl | rfl)\n  · rfl\n  · rw [cos_add_pi, abs_neg]\n\n"}
{"name":"Real.Angle.abs_cos_eq_of_two_zsmul_eq","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ ψ : Real.Angle\nh : Eq (HSMul.hSMul 2 θ) (HSMul.hSMul 2 ψ)\n⊢ Eq (abs θ.cos) (abs ψ.cos)","decl":"theorem abs_cos_eq_of_two_zsmul_eq {θ ψ : Angle} (h : (2 : ℤ) • θ = (2 : ℤ) • ψ) :\n    |cos θ| = |cos ψ| := by\n  simp_rw [two_zsmul, ← two_nsmul] at h\n  exact abs_cos_eq_of_two_nsmul_eq h\n\n"}
{"name":"Real.Angle.coe_toIcoMod","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ ψ : Real\n⊢ Eq ↑(toIcoMod Real.two_pi_pos ψ θ) ↑θ","decl":"@[simp]\ntheorem coe_toIcoMod (θ ψ : ℝ) : ↑(toIcoMod two_pi_pos ψ θ) = (θ : Angle) := by\n  rw [angle_eq_iff_two_pi_dvd_sub]\n  refine ⟨-toIcoDiv two_pi_pos ψ θ, ?_⟩\n  rw [toIcoMod_sub_self, zsmul_eq_mul, mul_comm]\n\n"}
{"name":"Real.Angle.coe_toIocMod","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ ψ : Real\n⊢ Eq ↑(toIocMod Real.two_pi_pos ψ θ) ↑θ","decl":"@[simp]\ntheorem coe_toIocMod (θ ψ : ℝ) : ↑(toIocMod two_pi_pos ψ θ) = (θ : Angle) := by\n  rw [angle_eq_iff_two_pi_dvd_sub]\n  refine ⟨-toIocDiv two_pi_pos ψ θ, ?_⟩\n  rw [toIocMod_sub_self, zsmul_eq_mul, mul_comm]\n\n"}
{"name":"Real.Angle.toReal_coe","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real\n⊢ Eq (↑θ).toReal (toIocMod Real.two_pi_pos (Neg.neg Real.pi) θ)","decl":"theorem toReal_coe (θ : ℝ) : (θ : Angle).toReal = toIocMod two_pi_pos (-π) θ :=\n  rfl\n\n"}
{"name":"Real.Angle.toReal_coe_eq_self_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real\n⊢ Iff (Eq (↑θ).toReal θ) (And (LT.lt (Neg.neg Real.pi) θ) (LE.le θ Real.pi))","decl":"theorem toReal_coe_eq_self_iff {θ : ℝ} : (θ : Angle).toReal = θ ↔ -π < θ ∧ θ ≤ π := by\n  rw [toReal_coe, toIocMod_eq_self two_pi_pos]\n  ring_nf\n  rfl\n\n"}
{"name":"Real.Angle.toReal_coe_eq_self_iff_mem_Ioc","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real\n⊢ Iff (Eq (↑θ).toReal θ) (Membership.mem (Set.Ioc (Neg.neg Real.pi) Real.pi) θ)","decl":"theorem toReal_coe_eq_self_iff_mem_Ioc {θ : ℝ} : (θ : Angle).toReal = θ ↔ θ ∈ Set.Ioc (-π) π := by\n  rw [toReal_coe_eq_self_iff, ← Set.mem_Ioc]\n\n"}
{"name":"Real.Angle.toReal_injective","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Function.Injective Real.Angle.toReal","decl":"theorem toReal_injective : Function.Injective toReal := by\n  intro θ ψ h\n  induction θ using Real.Angle.induction_on\n  induction ψ using Real.Angle.induction_on\n  simpa [toReal_coe, toIocMod_eq_toIocMod, zsmul_eq_mul, mul_comm _ (2 * π), ←\n    angle_eq_iff_two_pi_dvd_sub, eq_comm] using h\n\n"}
{"name":"Real.Angle.toReal_inj","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ ψ : Real.Angle\n⊢ Iff (Eq θ.toReal ψ.toReal) (Eq θ ψ)","decl":"@[simp]\ntheorem toReal_inj {θ ψ : Angle} : θ.toReal = ψ.toReal ↔ θ = ψ :=\n  toReal_injective.eq_iff\n\n"}
{"name":"Real.Angle.coe_toReal","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq (↑θ.toReal) θ","decl":"@[simp]\ntheorem coe_toReal (θ : Angle) : (θ.toReal : Angle) = θ := by\n  induction θ using Real.Angle.induction_on\n  exact coe_toIocMod _ _\n\n"}
{"name":"Real.Angle.neg_pi_lt_toReal","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ LT.lt (Neg.neg Real.pi) θ.toReal","decl":"theorem neg_pi_lt_toReal (θ : Angle) : -π < θ.toReal := by\n  induction θ using Real.Angle.induction_on\n  exact left_lt_toIocMod _ _ _\n\n"}
{"name":"Real.Angle.toReal_le_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ LE.le θ.toReal Real.pi","decl":"theorem toReal_le_pi (θ : Angle) : θ.toReal ≤ π := by\n  induction θ using Real.Angle.induction_on\n  convert toIocMod_le_right two_pi_pos _ _\n  ring\n\n"}
{"name":"Real.Angle.abs_toReal_le_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ LE.le (abs θ.toReal) Real.pi","decl":"theorem abs_toReal_le_pi (θ : Angle) : |θ.toReal| ≤ π :=\n  abs_le.2 ⟨(neg_pi_lt_toReal _).le, toReal_le_pi _⟩\n\n"}
{"name":"Real.Angle.toReal_mem_Ioc","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Membership.mem (Set.Ioc (Neg.neg Real.pi) Real.pi) θ.toReal","decl":"theorem toReal_mem_Ioc (θ : Angle) : θ.toReal ∈ Set.Ioc (-π) π :=\n  ⟨neg_pi_lt_toReal _, toReal_le_pi _⟩\n\n"}
{"name":"Real.Angle.toIocMod_toReal","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq (toIocMod Real.two_pi_pos (Neg.neg Real.pi) θ.toReal) θ.toReal","decl":"@[simp]\ntheorem toIocMod_toReal (θ : Angle) : toIocMod two_pi_pos (-π) θ.toReal = θ.toReal := by\n  induction θ using Real.Angle.induction_on\n  rw [toReal_coe]\n  exact toIocMod_toIocMod _ _ _ _\n\n"}
{"name":"Real.Angle.toReal_zero","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Eq (Real.Angle.toReal 0) 0","decl":"@[simp]\ntheorem toReal_zero : (0 : Angle).toReal = 0 := by\n  rw [← coe_zero, toReal_coe_eq_self_iff]\n  exact ⟨Left.neg_neg_iff.2 Real.pi_pos, Real.pi_pos.le⟩\n\n"}
{"name":"Real.Angle.toReal_eq_zero_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Eq θ.toReal 0) (Eq θ 0)","decl":"@[simp]\ntheorem toReal_eq_zero_iff {θ : Angle} : θ.toReal = 0 ↔ θ = 0 := by\n  nth_rw 1 [← toReal_zero]\n  exact toReal_inj\n\n"}
{"name":"Real.Angle.toReal_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Eq (↑Real.pi).toReal Real.pi","decl":"@[simp]\ntheorem toReal_pi : (π : Angle).toReal = π := by\n  rw [toReal_coe_eq_self_iff]\n  exact ⟨Left.neg_lt_self Real.pi_pos, le_refl _⟩\n\n"}
{"name":"Real.Angle.toReal_eq_pi_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Eq θ.toReal Real.pi) (Eq θ ↑Real.pi)","decl":"@[simp]\ntheorem toReal_eq_pi_iff {θ : Angle} : θ.toReal = π ↔ θ = π := by rw [← toReal_inj, toReal_pi]\n\n"}
{"name":"Real.Angle.pi_ne_zero","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Ne (↑Real.pi) 0","decl":"theorem pi_ne_zero : (π : Angle) ≠ 0 := by\n  rw [← toReal_injective.ne_iff, toReal_pi, toReal_zero]\n  exact Real.pi_ne_zero\n\n"}
{"name":"Real.Angle.toReal_pi_div_two","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Eq (↑(HDiv.hDiv Real.pi 2)).toReal (HDiv.hDiv Real.pi 2)","decl":"@[simp]\ntheorem toReal_pi_div_two : ((π / 2 : ℝ) : Angle).toReal = π / 2 :=\n  toReal_coe_eq_self_iff.2 <| by constructor <;> linarith [pi_pos]\n\n"}
{"name":"Real.Angle.toReal_eq_pi_div_two_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Eq θ.toReal (HDiv.hDiv Real.pi 2)) (Eq θ ↑(HDiv.hDiv Real.pi 2))","decl":"@[simp]\ntheorem toReal_eq_pi_div_two_iff {θ : Angle} : θ.toReal = π / 2 ↔ θ = (π / 2 : ℝ) := by\n  rw [← toReal_inj, toReal_pi_div_two]\n\n"}
{"name":"Real.Angle.toReal_neg_pi_div_two","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Eq (↑(HDiv.hDiv (Neg.neg Real.pi) 2)).toReal (HDiv.hDiv (Neg.neg Real.pi) 2)","decl":"@[simp]\ntheorem toReal_neg_pi_div_two : ((-π / 2 : ℝ) : Angle).toReal = -π / 2 :=\n  toReal_coe_eq_self_iff.2 <| by constructor <;> linarith [pi_pos]\n\n"}
{"name":"Real.Angle.toReal_eq_neg_pi_div_two_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Eq θ.toReal (HDiv.hDiv (Neg.neg Real.pi) 2)) (Eq θ ↑(HDiv.hDiv (Neg.neg Real.pi) 2))","decl":"@[simp]\ntheorem toReal_eq_neg_pi_div_two_iff {θ : Angle} : θ.toReal = -π / 2 ↔ θ = (-π / 2 : ℝ) := by\n  rw [← toReal_inj, toReal_neg_pi_div_two]\n\n"}
{"name":"Real.Angle.pi_div_two_ne_zero","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Ne (↑(HDiv.hDiv Real.pi 2)) 0","decl":"theorem pi_div_two_ne_zero : ((π / 2 : ℝ) : Angle) ≠ 0 := by\n  rw [← toReal_injective.ne_iff, toReal_pi_div_two, toReal_zero]\n  exact div_ne_zero Real.pi_ne_zero two_ne_zero\n\n"}
{"name":"Real.Angle.neg_pi_div_two_ne_zero","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Ne (↑(HDiv.hDiv (Neg.neg Real.pi) 2)) 0","decl":"theorem neg_pi_div_two_ne_zero : ((-π / 2 : ℝ) : Angle) ≠ 0 := by\n  rw [← toReal_injective.ne_iff, toReal_neg_pi_div_two, toReal_zero]\n  exact div_ne_zero (neg_ne_zero.2 Real.pi_ne_zero) two_ne_zero\n\n"}
{"name":"Real.Angle.abs_toReal_coe_eq_self_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real\n⊢ Iff (Eq (abs (↑θ).toReal) θ) (And (LE.le 0 θ) (LE.le θ Real.pi))","decl":"theorem abs_toReal_coe_eq_self_iff {θ : ℝ} : |(θ : Angle).toReal| = θ ↔ 0 ≤ θ ∧ θ ≤ π :=\n  ⟨fun h => h ▸ ⟨abs_nonneg _, abs_toReal_le_pi _⟩, fun h =>\n    (toReal_coe_eq_self_iff.2 ⟨(Left.neg_neg_iff.2 Real.pi_pos).trans_le h.1, h.2⟩).symm ▸\n      abs_eq_self.2 h.1⟩\n\n"}
{"name":"Real.Angle.abs_toReal_neg_coe_eq_self_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real\n⊢ Iff (Eq (abs (Neg.neg ↑θ).toReal) θ) (And (LE.le 0 θ) (LE.le θ Real.pi))","decl":"theorem abs_toReal_neg_coe_eq_self_iff {θ : ℝ} : |(-θ : Angle).toReal| = θ ↔ 0 ≤ θ ∧ θ ≤ π := by\n  refine ⟨fun h => h ▸ ⟨abs_nonneg _, abs_toReal_le_pi _⟩, fun h => ?_⟩\n  by_cases hnegpi : θ = π; · simp [hnegpi, Real.pi_pos.le]\n  rw [← coe_neg,\n    toReal_coe_eq_self_iff.2\n      ⟨neg_lt_neg (lt_of_le_of_ne h.2 hnegpi), (neg_nonpos.2 h.1).trans Real.pi_pos.le⟩,\n    abs_neg, abs_eq_self.2 h.1]\n\n"}
{"name":"Real.Angle.abs_toReal_eq_pi_div_two_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Eq (abs θ.toReal) (HDiv.hDiv Real.pi 2)) (Or (Eq θ ↑(HDiv.hDiv Real.pi 2)) (Eq θ ↑(HDiv.hDiv (Neg.neg Real.pi) 2)))","decl":"theorem abs_toReal_eq_pi_div_two_iff {θ : Angle} :\n    |θ.toReal| = π / 2 ↔ θ = (π / 2 : ℝ) ∨ θ = (-π / 2 : ℝ) := by\n  rw [abs_eq (div_nonneg Real.pi_pos.le two_pos.le), ← neg_div, toReal_eq_pi_div_two_iff,\n    toReal_eq_neg_pi_div_two_iff]\n\n"}
{"name":"Real.Angle.nsmul_toReal_eq_mul","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"n : Nat\nh : Ne n 0\nθ : Real.Angle\n⊢ Iff (Eq (HSMul.hSMul n θ).toReal (HMul.hMul (↑n) θ.toReal)) (Membership.mem (Set.Ioc (HDiv.hDiv (Neg.neg Real.pi) ↑n) (HDiv.hDiv Real.pi ↑n)) θ.toReal)","decl":"theorem nsmul_toReal_eq_mul {n : ℕ} (h : n ≠ 0) {θ : Angle} :\n    (n • θ).toReal = n * θ.toReal ↔ θ.toReal ∈ Set.Ioc (-π / n) (π / n) := by\n  nth_rw 1 [← coe_toReal θ]\n  have h' : 0 < (n : ℝ) := mod_cast Nat.pos_of_ne_zero h\n  rw [← coe_nsmul, nsmul_eq_mul, toReal_coe_eq_self_iff, Set.mem_Ioc, div_lt_iff₀' h',\n    le_div_iff₀' h']\n\n"}
{"name":"Real.Angle.two_nsmul_toReal_eq_two_mul","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Eq (HSMul.hSMul 2 θ).toReal (HMul.hMul 2 θ.toReal)) (Membership.mem (Set.Ioc (HDiv.hDiv (Neg.neg Real.pi) 2) (HDiv.hDiv Real.pi 2)) θ.toReal)","decl":"theorem two_nsmul_toReal_eq_two_mul {θ : Angle} :\n    ((2 : ℕ) • θ).toReal = 2 * θ.toReal ↔ θ.toReal ∈ Set.Ioc (-π / 2) (π / 2) :=\n  mod_cast nsmul_toReal_eq_mul two_ne_zero\n\n"}
{"name":"Real.Angle.two_zsmul_toReal_eq_two_mul","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Eq (HSMul.hSMul 2 θ).toReal (HMul.hMul 2 θ.toReal)) (Membership.mem (Set.Ioc (HDiv.hDiv (Neg.neg Real.pi) 2) (HDiv.hDiv Real.pi 2)) θ.toReal)","decl":"theorem two_zsmul_toReal_eq_two_mul {θ : Angle} :\n    ((2 : ℤ) • θ).toReal = 2 * θ.toReal ↔ θ.toReal ∈ Set.Ioc (-π / 2) (π / 2) := by\n  rw [two_zsmul, ← two_nsmul, two_nsmul_toReal_eq_two_mul]\n\n"}
{"name":"Real.Angle.toReal_coe_eq_self_sub_two_mul_int_mul_pi_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real\nk : Int\n⊢ Iff (Eq (↑θ).toReal (HSub.hSub θ (HMul.hMul (HMul.hMul 2 ↑k) Real.pi))) (Membership.mem (Set.Ioc (HMul.hMul (HSub.hSub (HMul.hMul 2 ↑k) 1) Real.pi) (HMul.hMul (HAdd.hAdd (HMul.hMul 2 ↑k) 1) Real.pi)) θ)","decl":"theorem toReal_coe_eq_self_sub_two_mul_int_mul_pi_iff {θ : ℝ} {k : ℤ} :\n    (θ : Angle).toReal = θ - 2 * k * π ↔ θ ∈ Set.Ioc ((2 * k - 1 : ℝ) * π) ((2 * k + 1) * π) := by\n  rw [← sub_zero (θ : Angle), ← zsmul_zero k, ← coe_two_pi, ← coe_zsmul, ← coe_sub, zsmul_eq_mul, ←\n    mul_assoc, mul_comm (k : ℝ), toReal_coe_eq_self_iff, Set.mem_Ioc]\n  exact ⟨fun h => ⟨by linarith, by linarith⟩, fun h => ⟨by linarith, by linarith⟩⟩\n\n"}
{"name":"Real.Angle.toReal_coe_eq_self_sub_two_pi_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real\n⊢ Iff (Eq (↑θ).toReal (HSub.hSub θ (HMul.hMul 2 Real.pi))) (Membership.mem (Set.Ioc Real.pi (HMul.hMul 3 Real.pi)) θ)","decl":"theorem toReal_coe_eq_self_sub_two_pi_iff {θ : ℝ} :\n    (θ : Angle).toReal = θ - 2 * π ↔ θ ∈ Set.Ioc π (3 * π) := by\n  convert @toReal_coe_eq_self_sub_two_mul_int_mul_pi_iff θ 1 <;> norm_num\n\n"}
{"name":"Real.Angle.toReal_coe_eq_self_add_two_pi_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real\n⊢ Iff (Eq (↑θ).toReal (HAdd.hAdd θ (HMul.hMul 2 Real.pi))) (Membership.mem (Set.Ioc (HMul.hMul (-3) Real.pi) (Neg.neg Real.pi)) θ)","decl":"theorem toReal_coe_eq_self_add_two_pi_iff {θ : ℝ} :\n    (θ : Angle).toReal = θ + 2 * π ↔ θ ∈ Set.Ioc (-3 * π) (-π) := by\n  convert @toReal_coe_eq_self_sub_two_mul_int_mul_pi_iff θ (-1) using 2 <;> norm_num\n\n"}
{"name":"Real.Angle.two_nsmul_toReal_eq_two_mul_sub_two_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Eq (HSMul.hSMul 2 θ).toReal (HSub.hSub (HMul.hMul 2 θ.toReal) (HMul.hMul 2 Real.pi))) (LT.lt (HDiv.hDiv Real.pi 2) θ.toReal)","decl":"theorem two_nsmul_toReal_eq_two_mul_sub_two_pi {θ : Angle} :\n    ((2 : ℕ) • θ).toReal = 2 * θ.toReal - 2 * π ↔ π / 2 < θ.toReal := by\n  nth_rw 1 [← coe_toReal θ]\n  rw [← coe_nsmul, two_nsmul, ← two_mul, toReal_coe_eq_self_sub_two_pi_iff, Set.mem_Ioc]\n  exact\n    ⟨fun h => by linarith, fun h =>\n      ⟨(div_lt_iff₀' (zero_lt_two' ℝ)).1 h, by linarith [pi_pos, toReal_le_pi θ]⟩⟩\n\n"}
{"name":"Real.Angle.two_zsmul_toReal_eq_two_mul_sub_two_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Eq (HSMul.hSMul 2 θ).toReal (HSub.hSub (HMul.hMul 2 θ.toReal) (HMul.hMul 2 Real.pi))) (LT.lt (HDiv.hDiv Real.pi 2) θ.toReal)","decl":"theorem two_zsmul_toReal_eq_two_mul_sub_two_pi {θ : Angle} :\n    ((2 : ℤ) • θ).toReal = 2 * θ.toReal - 2 * π ↔ π / 2 < θ.toReal := by\n  rw [two_zsmul, ← two_nsmul, two_nsmul_toReal_eq_two_mul_sub_two_pi]\n\n"}
{"name":"Real.Angle.two_nsmul_toReal_eq_two_mul_add_two_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Eq (HSMul.hSMul 2 θ).toReal (HAdd.hAdd (HMul.hMul 2 θ.toReal) (HMul.hMul 2 Real.pi))) (LE.le θ.toReal (HDiv.hDiv (Neg.neg Real.pi) 2))","decl":"theorem two_nsmul_toReal_eq_two_mul_add_two_pi {θ : Angle} :\n    ((2 : ℕ) • θ).toReal = 2 * θ.toReal + 2 * π ↔ θ.toReal ≤ -π / 2 := by\n  nth_rw 1 [← coe_toReal θ]\n  rw [← coe_nsmul, two_nsmul, ← two_mul, toReal_coe_eq_self_add_two_pi_iff, Set.mem_Ioc]\n  refine\n    ⟨fun h => by linarith, fun h =>\n      ⟨by linarith [pi_pos, neg_pi_lt_toReal θ], (le_div_iff₀' (zero_lt_two' ℝ)).1 h⟩⟩\n\n"}
{"name":"Real.Angle.two_zsmul_toReal_eq_two_mul_add_two_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Eq (HSMul.hSMul 2 θ).toReal (HAdd.hAdd (HMul.hMul 2 θ.toReal) (HMul.hMul 2 Real.pi))) (LE.le θ.toReal (HDiv.hDiv (Neg.neg Real.pi) 2))","decl":"theorem two_zsmul_toReal_eq_two_mul_add_two_pi {θ : Angle} :\n    ((2 : ℤ) • θ).toReal = 2 * θ.toReal + 2 * π ↔ θ.toReal ≤ -π / 2 := by\n  rw [two_zsmul, ← two_nsmul, two_nsmul_toReal_eq_two_mul_add_two_pi]\n\n"}
{"name":"Real.Angle.sin_toReal","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq (Real.sin θ.toReal) θ.sin","decl":"@[simp]\ntheorem sin_toReal (θ : Angle) : Real.sin θ.toReal = sin θ := by\n  conv_rhs => rw [← coe_toReal θ, sin_coe]\n\n"}
{"name":"Real.Angle.cos_toReal","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq (Real.cos θ.toReal) θ.cos","decl":"@[simp]\ntheorem cos_toReal (θ : Angle) : Real.cos θ.toReal = cos θ := by\n  conv_rhs => rw [← coe_toReal θ, cos_coe]\n\n"}
{"name":"Real.Angle.cos_nonneg_iff_abs_toReal_le_pi_div_two","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (LE.le 0 θ.cos) (LE.le (abs θ.toReal) (HDiv.hDiv Real.pi 2))","decl":"theorem cos_nonneg_iff_abs_toReal_le_pi_div_two {θ : Angle} : 0 ≤ cos θ ↔ |θ.toReal| ≤ π / 2 := by\n  nth_rw 1 [← coe_toReal θ]\n  rw [abs_le, cos_coe]\n  refine ⟨fun h => ?_, cos_nonneg_of_mem_Icc⟩\n  by_contra hn\n  rw [not_and_or, not_le, not_le] at hn\n  refine (not_lt.2 h) ?_\n  rcases hn with (hn | hn)\n  · rw [← Real.cos_neg]\n    refine cos_neg_of_pi_div_two_lt_of_lt (by linarith) ?_\n    linarith [neg_pi_lt_toReal θ]\n  · refine cos_neg_of_pi_div_two_lt_of_lt hn ?_\n    linarith [toReal_le_pi θ]\n\n"}
{"name":"Real.Angle.cos_pos_iff_abs_toReal_lt_pi_div_two","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (LT.lt 0 θ.cos) (LT.lt (abs θ.toReal) (HDiv.hDiv Real.pi 2))","decl":"theorem cos_pos_iff_abs_toReal_lt_pi_div_two {θ : Angle} : 0 < cos θ ↔ |θ.toReal| < π / 2 := by\n  rw [lt_iff_le_and_ne, lt_iff_le_and_ne, cos_nonneg_iff_abs_toReal_le_pi_div_two, ←\n    and_congr_right]\n  rintro -\n  rw [Ne, Ne, not_iff_not, @eq_comm ℝ 0, abs_toReal_eq_pi_div_two_iff, cos_eq_zero_iff]\n\n"}
{"name":"Real.Angle.cos_neg_iff_pi_div_two_lt_abs_toReal","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (LT.lt θ.cos 0) (LT.lt (HDiv.hDiv Real.pi 2) (abs θ.toReal))","decl":"theorem cos_neg_iff_pi_div_two_lt_abs_toReal {θ : Angle} : cos θ < 0 ↔ π / 2 < |θ.toReal| := by\n  rw [← not_le, ← not_le, not_iff_not, cos_nonneg_iff_abs_toReal_le_pi_div_two]\n\n"}
{"name":"Real.Angle.abs_cos_eq_abs_sin_of_two_nsmul_add_two_nsmul_eq_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ ψ : Real.Angle\nh : Eq (HAdd.hAdd (HSMul.hSMul 2 θ) (HSMul.hSMul 2 ψ)) ↑Real.pi\n⊢ Eq (abs θ.cos) (abs ψ.sin)","decl":"theorem abs_cos_eq_abs_sin_of_two_nsmul_add_two_nsmul_eq_pi {θ ψ : Angle}\n    (h : (2 : ℕ) • θ + (2 : ℕ) • ψ = π) : |cos θ| = |sin ψ| := by\n  rw [← eq_sub_iff_add_eq, ← two_nsmul_coe_div_two, ← nsmul_sub, two_nsmul_eq_iff] at h\n  rcases h with (rfl | rfl) <;> simp [cos_pi_div_two_sub]\n\n"}
{"name":"Real.Angle.abs_cos_eq_abs_sin_of_two_zsmul_add_two_zsmul_eq_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ ψ : Real.Angle\nh : Eq (HAdd.hAdd (HSMul.hSMul 2 θ) (HSMul.hSMul 2 ψ)) ↑Real.pi\n⊢ Eq (abs θ.cos) (abs ψ.sin)","decl":"theorem abs_cos_eq_abs_sin_of_two_zsmul_add_two_zsmul_eq_pi {θ ψ : Angle}\n    (h : (2 : ℤ) • θ + (2 : ℤ) • ψ = π) : |cos θ| = |sin ψ| := by\n  simp_rw [two_zsmul, ← two_nsmul] at h\n  exact abs_cos_eq_abs_sin_of_two_nsmul_add_two_nsmul_eq_pi h\n\n"}
{"name":"Real.Angle.tan_eq_sin_div_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq θ.tan (HDiv.hDiv θ.sin θ.cos)","decl":"theorem tan_eq_sin_div_cos (θ : Angle) : tan θ = sin θ / cos θ :=\n  rfl\n\n"}
{"name":"Real.Angle.tan_coe","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"x : Real\n⊢ Eq (↑x).tan (Real.tan x)","decl":"@[simp]\ntheorem tan_coe (x : ℝ) : tan (x : Angle) = Real.tan x := by\n  rw [tan, sin_coe, cos_coe, Real.tan_eq_sin_div_cos]\n\n"}
{"name":"Real.Angle.tan_zero","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Eq (Real.Angle.tan 0) 0","decl":"@[simp]\ntheorem tan_zero : tan (0 : Angle) = 0 := by rw [← coe_zero, tan_coe, Real.tan_zero]\n\n"}
{"name":"Real.Angle.tan_coe_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Eq (↑Real.pi).tan 0","decl":"theorem tan_coe_pi : tan (π : Angle) = 0 := by rw [tan_coe, Real.tan_pi]\n\n"}
{"name":"Real.Angle.tan_periodic","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Function.Periodic Real.Angle.tan ↑Real.pi","decl":"theorem tan_periodic : Function.Periodic tan (π : Angle) := by\n  intro θ\n  induction θ using Real.Angle.induction_on\n  rw [← coe_add, tan_coe, tan_coe]\n  exact Real.tan_periodic _\n\n"}
{"name":"Real.Angle.tan_add_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq (HAdd.hAdd θ ↑Real.pi).tan θ.tan","decl":"@[simp]\ntheorem tan_add_pi (θ : Angle) : tan (θ + π) = tan θ :=\n  tan_periodic θ\n\n"}
{"name":"Real.Angle.tan_sub_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq (HSub.hSub θ ↑Real.pi).tan θ.tan","decl":"@[simp]\ntheorem tan_sub_pi (θ : Angle) : tan (θ - π) = tan θ :=\n  tan_periodic.sub_eq θ\n\n"}
{"name":"Real.Angle.tan_toReal","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq (Real.tan θ.toReal) θ.tan","decl":"@[simp]\ntheorem tan_toReal (θ : Angle) : Real.tan θ.toReal = tan θ := by\n  conv_rhs => rw [← coe_toReal θ, tan_coe]\n\n"}
{"name":"Real.Angle.tan_eq_of_two_nsmul_eq","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ ψ : Real.Angle\nh : Eq (HSMul.hSMul 2 θ) (HSMul.hSMul 2 ψ)\n⊢ Eq θ.tan ψ.tan","decl":"theorem tan_eq_of_two_nsmul_eq {θ ψ : Angle} (h : (2 : ℕ) • θ = (2 : ℕ) • ψ) : tan θ = tan ψ := by\n  rw [two_nsmul_eq_iff] at h\n  rcases h with (rfl | rfl)\n  · rfl\n  · exact tan_add_pi _\n\n"}
{"name":"Real.Angle.tan_eq_of_two_zsmul_eq","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ ψ : Real.Angle\nh : Eq (HSMul.hSMul 2 θ) (HSMul.hSMul 2 ψ)\n⊢ Eq θ.tan ψ.tan","decl":"theorem tan_eq_of_two_zsmul_eq {θ ψ : Angle} (h : (2 : ℤ) • θ = (2 : ℤ) • ψ) : tan θ = tan ψ := by\n  simp_rw [two_zsmul, ← two_nsmul] at h\n  exact tan_eq_of_two_nsmul_eq h\n\n"}
{"name":"Real.Angle.tan_eq_inv_of_two_nsmul_add_two_nsmul_eq_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ ψ : Real.Angle\nh : Eq (HAdd.hAdd (HSMul.hSMul 2 θ) (HSMul.hSMul 2 ψ)) ↑Real.pi\n⊢ Eq ψ.tan (Inv.inv θ.tan)","decl":"theorem tan_eq_inv_of_two_nsmul_add_two_nsmul_eq_pi {θ ψ : Angle}\n    (h : (2 : ℕ) • θ + (2 : ℕ) • ψ = π) : tan ψ = (tan θ)⁻¹ := by\n  induction θ using Real.Angle.induction_on\n  induction ψ using Real.Angle.induction_on\n  rw [← smul_add, ← coe_add, ← coe_nsmul, two_nsmul, ← two_mul, angle_eq_iff_two_pi_dvd_sub] at h\n  rcases h with ⟨k, h⟩\n  rw [sub_eq_iff_eq_add, ← mul_inv_cancel_left₀ two_ne_zero π, mul_assoc, ← mul_add,\n    mul_right_inj' (two_ne_zero' ℝ), ← eq_sub_iff_add_eq', mul_inv_cancel_left₀ two_ne_zero π,\n    inv_mul_eq_div, mul_comm] at h\n  rw [tan_coe, tan_coe, ← tan_pi_div_two_sub, h, add_sub_assoc, add_comm]\n  exact Real.tan_periodic.int_mul _ _\n\n"}
{"name":"Real.Angle.tan_eq_inv_of_two_zsmul_add_two_zsmul_eq_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ ψ : Real.Angle\nh : Eq (HAdd.hAdd (HSMul.hSMul 2 θ) (HSMul.hSMul 2 ψ)) ↑Real.pi\n⊢ Eq ψ.tan (Inv.inv θ.tan)","decl":"theorem tan_eq_inv_of_two_zsmul_add_two_zsmul_eq_pi {θ ψ : Angle}\n    (h : (2 : ℤ) • θ + (2 : ℤ) • ψ = π) : tan ψ = (tan θ)⁻¹ := by\n  simp_rw [two_zsmul, ← two_nsmul] at h\n  exact tan_eq_inv_of_two_nsmul_add_two_nsmul_eq_pi h\n\n"}
{"name":"Real.Angle.sign_zero","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Eq (Real.Angle.sign 0) 0","decl":"@[simp]\ntheorem sign_zero : (0 : Angle).sign = 0 := by\n  rw [sign, sin_zero, _root_.sign_zero]\n\n"}
{"name":"Real.Angle.sign_coe_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Eq (↑Real.pi).sign 0","decl":"@[simp]\ntheorem sign_coe_pi : (π : Angle).sign = 0 := by rw [sign, sin_coe_pi, _root_.sign_zero]\n\n"}
{"name":"Real.Angle.sign_neg","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq (Neg.neg θ).sign (Neg.neg θ.sign)","decl":"@[simp]\ntheorem sign_neg (θ : Angle) : (-θ).sign = -θ.sign := by\n  simp_rw [sign, sin_neg, Left.sign_neg]\n\n"}
{"name":"Real.Angle.sign_antiperiodic","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Function.Antiperiodic Real.Angle.sign ↑Real.pi","decl":"theorem sign_antiperiodic : Function.Antiperiodic sign (π : Angle) := fun θ => by\n  rw [sign, sign, sin_add_pi, Left.sign_neg]\n\n"}
{"name":"Real.Angle.sign_add_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq (HAdd.hAdd θ ↑Real.pi).sign (Neg.neg θ.sign)","decl":"@[simp]\ntheorem sign_add_pi (θ : Angle) : (θ + π).sign = -θ.sign :=\n  sign_antiperiodic θ\n\n"}
{"name":"Real.Angle.sign_pi_add","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq (HAdd.hAdd (↑Real.pi) θ).sign (Neg.neg θ.sign)","decl":"@[simp]\ntheorem sign_pi_add (θ : Angle) : ((π : Angle) + θ).sign = -θ.sign := by rw [add_comm, sign_add_pi]\n\n"}
{"name":"Real.Angle.sign_sub_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq (HSub.hSub θ ↑Real.pi).sign (Neg.neg θ.sign)","decl":"@[simp]\ntheorem sign_sub_pi (θ : Angle) : (θ - π).sign = -θ.sign :=\n  sign_antiperiodic.sub_eq θ\n\n"}
{"name":"Real.Angle.sign_pi_sub","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Eq (HSub.hSub (↑Real.pi) θ).sign θ.sign","decl":"@[simp]\ntheorem sign_pi_sub (θ : Angle) : ((π : Angle) - θ).sign = θ.sign := by\n  simp [sign_antiperiodic.sub_eq']\n\n"}
{"name":"Real.Angle.sign_eq_zero_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Eq θ.sign 0) (Or (Eq θ 0) (Eq θ ↑Real.pi))","decl":"theorem sign_eq_zero_iff {θ : Angle} : θ.sign = 0 ↔ θ = 0 ∨ θ = π := by\n  rw [sign, _root_.sign_eq_zero_iff, sin_eq_zero_iff]\n\n"}
{"name":"Real.Angle.sign_ne_zero_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Ne θ.sign 0) (And (Ne θ 0) (Ne θ ↑Real.pi))","decl":"theorem sign_ne_zero_iff {θ : Angle} : θ.sign ≠ 0 ↔ θ ≠ 0 ∧ θ ≠ π := by\n  rw [← not_or, ← sign_eq_zero_iff]\n\n"}
{"name":"Real.Angle.toReal_neg_iff_sign_neg","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (LT.lt θ.toReal 0) (Eq θ.sign (-1))","decl":"theorem toReal_neg_iff_sign_neg {θ : Angle} : θ.toReal < 0 ↔ θ.sign = -1 := by\n  rw [sign, ← sin_toReal, sign_eq_neg_one_iff]\n  rcases lt_trichotomy θ.toReal 0 with (h | h | h)\n  · exact ⟨fun _ => Real.sin_neg_of_neg_of_neg_pi_lt h (neg_pi_lt_toReal θ), fun _ => h⟩\n  · simp [h]\n  · exact\n      ⟨fun hn => False.elim (h.asymm hn), fun hn =>\n        False.elim (hn.not_le (sin_nonneg_of_nonneg_of_le_pi h.le (toReal_le_pi θ)))⟩\n\n"}
{"name":"Real.Angle.toReal_nonneg_iff_sign_nonneg","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (LE.le 0 θ.toReal) (LE.le 0 θ.sign)","decl":"theorem toReal_nonneg_iff_sign_nonneg {θ : Angle} : 0 ≤ θ.toReal ↔ 0 ≤ θ.sign := by\n  rcases lt_trichotomy θ.toReal 0 with (h | h | h)\n  · refine ⟨fun hn => False.elim (h.not_le hn), fun hn => ?_⟩\n    rw [toReal_neg_iff_sign_neg.1 h] at hn\n    exact False.elim (hn.not_lt (by decide))\n  · simp [h, sign, ← sin_toReal]\n  · refine ⟨fun _ => ?_, fun _ => h.le⟩\n    rw [sign, ← sin_toReal, sign_nonneg_iff]\n    exact sin_nonneg_of_nonneg_of_le_pi h.le (toReal_le_pi θ)\n\n"}
{"name":"Real.Angle.sign_toReal","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\nh : Ne θ ↑Real.pi\n⊢ Eq (SignType.sign θ.toReal) θ.sign","decl":"@[simp]\ntheorem sign_toReal {θ : Angle} (h : θ ≠ π) : SignType.sign θ.toReal = θ.sign := by\n  rcases lt_trichotomy θ.toReal 0 with (ht | ht | ht)\n  · simp [ht, toReal_neg_iff_sign_neg.1 ht]\n  · simp [sign, ht, ← sin_toReal]\n  · rw [sign, ← sin_toReal, sign_pos ht,\n      sign_pos\n        (sin_pos_of_pos_of_lt_pi ht ((toReal_le_pi θ).lt_of_ne (toReal_eq_pi_iff.not.2 h)))]\n\n"}
{"name":"Real.Angle.coe_abs_toReal_of_sign_nonneg","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\nh : LE.le 0 θ.sign\n⊢ Eq (↑(abs θ.toReal)) θ","decl":"theorem coe_abs_toReal_of_sign_nonneg {θ : Angle} (h : 0 ≤ θ.sign) : ↑|θ.toReal| = θ := by\n  rw [abs_eq_self.2 (toReal_nonneg_iff_sign_nonneg.2 h), coe_toReal]\n\n"}
{"name":"Real.Angle.neg_coe_abs_toReal_of_sign_nonpos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\nh : LE.le θ.sign 0\n⊢ Eq (Neg.neg ↑(abs θ.toReal)) θ","decl":"theorem neg_coe_abs_toReal_of_sign_nonpos {θ : Angle} (h : θ.sign ≤ 0) : -↑|θ.toReal| = θ := by\n  rw [SignType.nonpos_iff] at h\n  rcases h with (h | h)\n  · rw [abs_of_neg (toReal_neg_iff_sign_neg.2 h), coe_neg, neg_neg, coe_toReal]\n  · rw [sign_eq_zero_iff] at h\n    rcases h with (rfl | rfl) <;> simp [abs_of_pos Real.pi_pos]\n\n"}
{"name":"Real.Angle.eq_iff_sign_eq_and_abs_toReal_eq","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ ψ : Real.Angle\n⊢ Iff (Eq θ ψ) (And (Eq θ.sign ψ.sign) (Eq (abs θ.toReal) (abs ψ.toReal)))","decl":"theorem eq_iff_sign_eq_and_abs_toReal_eq {θ ψ : Angle} :\n    θ = ψ ↔ θ.sign = ψ.sign ∧ |θ.toReal| = |ψ.toReal| := by\n  refine ⟨?_, fun h => ?_⟩\n  · rintro rfl\n    exact ⟨rfl, rfl⟩\n  rcases h with ⟨hs, hr⟩\n  rw [abs_eq_abs] at hr\n  rcases hr with (hr | hr)\n  · exact toReal_injective hr\n  · by_cases h : θ = π\n    · rw [h, toReal_pi, ← neg_eq_iff_eq_neg] at hr\n      exact False.elim ((neg_pi_lt_toReal ψ).ne hr)\n    · by_cases h' : ψ = π\n      · rw [h', toReal_pi] at hr\n        exact False.elim ((neg_pi_lt_toReal θ).ne hr.symm)\n      · rw [← sign_toReal h, ← sign_toReal h', hr, Left.sign_neg, SignType.neg_eq_self_iff,\n          _root_.sign_eq_zero_iff, toReal_eq_zero_iff] at hs\n        rw [hs, toReal_zero, neg_zero, toReal_eq_zero_iff] at hr\n        rw [hr, hs]\n\n"}
{"name":"Real.Angle.eq_iff_abs_toReal_eq_of_sign_eq","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ ψ : Real.Angle\nh : Eq θ.sign ψ.sign\n⊢ Iff (Eq θ ψ) (Eq (abs θ.toReal) (abs ψ.toReal))","decl":"theorem eq_iff_abs_toReal_eq_of_sign_eq {θ ψ : Angle} (h : θ.sign = ψ.sign) :\n    θ = ψ ↔ |θ.toReal| = |ψ.toReal| := by simpa [h] using @eq_iff_sign_eq_and_abs_toReal_eq θ ψ\n\n"}
{"name":"Real.Angle.sign_coe_pi_div_two","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Eq (↑(HDiv.hDiv Real.pi 2)).sign 1","decl":"@[simp]\ntheorem sign_coe_pi_div_two : (↑(π / 2) : Angle).sign = 1 := by\n  rw [sign, sin_coe, sin_pi_div_two, sign_one]\n\n"}
{"name":"Real.Angle.sign_coe_neg_pi_div_two","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"⊢ Eq (↑(HDiv.hDiv (Neg.neg Real.pi) 2)).sign (-1)","decl":"@[simp]\ntheorem sign_coe_neg_pi_div_two : (↑(-π / 2) : Angle).sign = -1 := by\n  rw [sign, sin_coe, neg_div, Real.sin_neg, sin_pi_div_two, Left.sign_neg, sign_one]\n\n"}
{"name":"Real.Angle.sign_coe_nonneg_of_nonneg_of_le_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real\nh0 : LE.le 0 θ\nhpi : LE.le θ Real.pi\n⊢ LE.le 0 (↑θ).sign","decl":"theorem sign_coe_nonneg_of_nonneg_of_le_pi {θ : ℝ} (h0 : 0 ≤ θ) (hpi : θ ≤ π) :\n    0 ≤ (θ : Angle).sign := by\n  rw [sign, sign_nonneg_iff]\n  exact sin_nonneg_of_nonneg_of_le_pi h0 hpi\n\n"}
{"name":"Real.Angle.sign_neg_coe_nonpos_of_nonneg_of_le_pi","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real\nh0 : LE.le 0 θ\nhpi : LE.le θ Real.pi\n⊢ LE.le (Neg.neg ↑θ).sign 0","decl":"theorem sign_neg_coe_nonpos_of_nonneg_of_le_pi {θ : ℝ} (h0 : 0 ≤ θ) (hpi : θ ≤ π) :\n    (-θ : Angle).sign ≤ 0 := by\n  rw [sign, sign_nonpos_iff, sin_neg, Left.neg_nonpos_iff]\n  exact sin_nonneg_of_nonneg_of_le_pi h0 hpi\n\n"}
{"name":"Real.Angle.sign_two_nsmul_eq_sign_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Eq (HSMul.hSMul 2 θ).sign θ.sign) (Or (Eq θ ↑Real.pi) (LT.lt (abs θ.toReal) (HDiv.hDiv Real.pi 2)))","decl":"theorem sign_two_nsmul_eq_sign_iff {θ : Angle} :\n    ((2 : ℕ) • θ).sign = θ.sign ↔ θ = π ∨ |θ.toReal| < π / 2 := by\n  by_cases hpi : θ = π; · simp [hpi]\n  rw [or_iff_right hpi]\n  refine ⟨fun h => ?_, fun h => ?_⟩\n  · by_contra hle\n    rw [not_lt, le_abs, le_neg] at hle\n    have hpi' : θ.toReal ≠ π := by simpa using hpi\n    rcases hle with (hle | hle) <;> rcases hle.eq_or_lt with (heq | hlt)\n    · rw [← coe_toReal θ, ← heq] at h\n      simp at h\n    · rw [← sign_toReal hpi, sign_pos (pi_div_two_pos.trans hlt), ← sign_toReal,\n        two_nsmul_toReal_eq_two_mul_sub_two_pi.2 hlt, _root_.sign_neg] at h\n      · simp at h\n      · rw [← mul_sub]\n        exact mul_neg_of_pos_of_neg two_pos (sub_neg.2 ((toReal_le_pi _).lt_of_ne hpi'))\n      · intro he\n        simp [he] at h\n    · rw [← coe_toReal θ, heq] at h\n      simp at h\n    · rw [← sign_toReal hpi, _root_.sign_neg (hlt.trans (Left.neg_neg_iff.2 pi_div_two_pos)), ←\n        sign_toReal] at h\n      swap\n      · intro he\n        simp [he] at h\n      rw [← neg_div] at hlt\n      rw [two_nsmul_toReal_eq_two_mul_add_two_pi.2 hlt.le, sign_pos] at h\n      · simp at h\n      · linarith [neg_pi_lt_toReal θ]\n  · have hpi' : (2 : ℕ) • θ ≠ π := by\n      rw [Ne, two_nsmul_eq_pi_iff, not_or]\n      constructor\n      · rintro rfl\n        simp [pi_pos, div_pos, abs_of_pos] at h\n      · rintro rfl\n        rw [toReal_neg_pi_div_two] at h\n        simp [pi_pos, div_pos, neg_div, abs_of_pos] at h\n    rw [abs_lt, ← neg_div] at h\n    rw [← sign_toReal hpi, ← sign_toReal hpi', two_nsmul_toReal_eq_two_mul.2 ⟨h.1, h.2.le⟩,\n      sign_mul, sign_pos (zero_lt_two' ℝ), one_mul]\n\n"}
{"name":"Real.Angle.sign_two_zsmul_eq_sign_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\n⊢ Iff (Eq (HSMul.hSMul 2 θ).sign θ.sign) (Or (Eq θ ↑Real.pi) (LT.lt (abs θ.toReal) (HDiv.hDiv Real.pi 2)))","decl":"theorem sign_two_zsmul_eq_sign_iff {θ : Angle} :\n    ((2 : ℤ) • θ).sign = θ.sign ↔ θ = π ∨ |θ.toReal| < π / 2 := by\n  rw [two_zsmul, ← two_nsmul, sign_two_nsmul_eq_sign_iff]\n\n"}
{"name":"Real.Angle.continuousAt_sign","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"θ : Real.Angle\nh0 : Ne θ 0\nhpi : Ne θ ↑Real.pi\n⊢ ContinuousAt Real.Angle.sign θ","decl":"theorem continuousAt_sign {θ : Angle} (h0 : θ ≠ 0) (hpi : θ ≠ π) : ContinuousAt sign θ :=\n  (continuousAt_sign_of_ne_zero (sin_ne_zero_iff.2 ⟨h0, hpi⟩)).comp continuous_sin.continuousAt\n\n"}
{"name":"ContinuousOn.angle_sign_comp","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\nf : α → Real.Angle\ns : Set α\nhf : ContinuousOn f s\nhs : ∀ (z : α), Membership.mem s z → And (Ne (f z) 0) (Ne (f z) ↑Real.pi)\n⊢ ContinuousOn (Function.comp Real.Angle.sign f) s","decl":"theorem _root_.ContinuousOn.angle_sign_comp {α : Type*} [TopologicalSpace α] {f : α → Angle}\n    {s : Set α} (hf : ContinuousOn f s) (hs : ∀ z ∈ s, f z ≠ 0 ∧ f z ≠ π) :\n    ContinuousOn (sign ∘ f) s := by\n  refine (continuousOn_of_forall_continuousAt fun θ hθ => ?_).comp hf (Set.mapsTo_image f s)\n  obtain ⟨z, hz, rfl⟩ := hθ\n  exact continuousAt_sign (hs _ hz).1 (hs _ hz).2\n\n"}
{"name":"Real.Angle.sign_eq_of_continuousOn","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Angle","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\nf : α → Real.Angle\ns : Set α\nx y : α\nhc : IsConnected s\nhf : ContinuousOn f s\nhs : ∀ (z : α), Membership.mem s z → And (Ne (f z) 0) (Ne (f z) ↑Real.pi)\nhx : Membership.mem s x\nhy : Membership.mem s y\n⊢ Eq (f y).sign (f x).sign","decl":"/-- Suppose a function to angles is continuous on a connected set and never takes the values `0`\nor `π` on that set. Then the values of the function on that set all have the same sign. -/\ntheorem sign_eq_of_continuousOn {α : Type*} [TopologicalSpace α] {f : α → Angle} {s : Set α}\n    {x y : α} (hc : IsConnected s) (hf : ContinuousOn f s) (hs : ∀ z ∈ s, f z ≠ 0 ∧ f z ≠ π)\n    (hx : x ∈ s) (hy : y ∈ s) : (f y).sign = (f x).sign :=\n  (hc.image _ (hf.angle_sign_comp hs)).isPreconnected.subsingleton (Set.mem_image_of_mem _ hy)\n    (Set.mem_image_of_mem _ hx)\n\n"}
