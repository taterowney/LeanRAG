{"name":"CategoryTheory.ShortComplex.QuasiIso.isIso'","module":"Mathlib.Algebra.Homology.ShortComplex.QuasiIso","initialProofState":"C : Type u_1\ninst✝³ : CategoryTheory.Category.{u_2, u_1} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\nS₁ S₂ : CategoryTheory.ShortComplex C\ninst✝¹ : S₁.HasHomology\ninst✝ : S₂.HasHomology\nφ : Quiver.Hom S₁ S₂\nself : CategoryTheory.ShortComplex.QuasiIso φ\n⊢ CategoryTheory.IsIso (CategoryTheory.ShortComplex.homologyMap φ)","decl":"/-- A morphism `φ : S₁ ⟶ S₂` of short complexes that have homology is a quasi-isomorphism if\nthe induced map `homologyMap φ : S₁.homology ⟶ S₂.homology` is an isomorphism. -/\nclass QuasiIso (φ : S₁ ⟶ S₂) : Prop where\n  /-- the homology map is an isomorphism -/\n  isIso' : IsIso (homologyMap φ)\n\n"}
{"name":"CategoryTheory.ShortComplex.QuasiIso.isIso","module":"Mathlib.Algebra.Homology.ShortComplex.QuasiIso","initialProofState":"C : Type u_2\ninst✝⁴ : CategoryTheory.Category.{u_1, u_2} C\ninst✝³ : CategoryTheory.Limits.HasZeroMorphisms C\nS₁ S₂ : CategoryTheory.ShortComplex C\ninst✝² : S₁.HasHomology\ninst✝¹ : S₂.HasHomology\nφ : Quiver.Hom S₁ S₂\ninst✝ : CategoryTheory.ShortComplex.QuasiIso φ\n⊢ CategoryTheory.IsIso (CategoryTheory.ShortComplex.homologyMap φ)","decl":"instance QuasiIso.isIso (φ : S₁ ⟶ S₂) [QuasiIso φ] : IsIso (homologyMap φ) := QuasiIso.isIso'\n\n"}
{"name":"CategoryTheory.ShortComplex.quasiIso_iff","module":"Mathlib.Algebra.Homology.ShortComplex.QuasiIso","initialProofState":"C : Type u_2\ninst✝³ : CategoryTheory.Category.{u_1, u_2} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\nS₁ S₂ : CategoryTheory.ShortComplex C\ninst✝¹ : S₁.HasHomology\ninst✝ : S₂.HasHomology\nφ : Quiver.Hom S₁ S₂\n⊢ Iff (CategoryTheory.ShortComplex.QuasiIso φ) (CategoryTheory.IsIso (CategoryTheory.ShortComplex.homologyMap φ))","decl":"lemma quasiIso_iff (φ : S₁ ⟶ S₂) :\n    QuasiIso φ ↔ IsIso (homologyMap φ) := by\n  constructor\n  · intro h\n    infer_instance\n  · intro h\n    exact ⟨h⟩\n\n"}
{"name":"CategoryTheory.ShortComplex.quasiIso_of_isIso","module":"Mathlib.Algebra.Homology.ShortComplex.QuasiIso","initialProofState":"C : Type u_2\ninst✝⁴ : CategoryTheory.Category.{u_1, u_2} C\ninst✝³ : CategoryTheory.Limits.HasZeroMorphisms C\nS₁ S₂ : CategoryTheory.ShortComplex C\ninst✝² : S₁.HasHomology\ninst✝¹ : S₂.HasHomology\nφ : Quiver.Hom S₁ S₂\ninst✝ : CategoryTheory.IsIso φ\n⊢ CategoryTheory.ShortComplex.QuasiIso φ","decl":"instance quasiIso_of_isIso (φ : S₁ ⟶ S₂) [IsIso φ] : QuasiIso φ :=\n  ⟨(homologyMapIso (asIso φ)).isIso_hom⟩\n\n"}
{"name":"CategoryTheory.ShortComplex.quasiIso_comp","module":"Mathlib.Algebra.Homology.ShortComplex.QuasiIso","initialProofState":"C : Type u_2\ninst✝⁴ : CategoryTheory.Category.{u_1, u_2} C\ninst✝³ : CategoryTheory.Limits.HasZeroMorphisms C\nS₁ S₂ S₃ : CategoryTheory.ShortComplex C\ninst✝² : S₁.HasHomology\ninst✝¹ : S₂.HasHomology\ninst✝ : S₃.HasHomology\nφ : Quiver.Hom S₁ S₂\nφ' : Quiver.Hom S₂ S₃\nhφ : CategoryTheory.ShortComplex.QuasiIso φ\nhφ' : CategoryTheory.ShortComplex.QuasiIso φ'\n⊢ CategoryTheory.ShortComplex.QuasiIso (CategoryTheory.CategoryStruct.comp φ φ')","decl":"instance quasiIso_comp (φ : S₁ ⟶ S₂) (φ' : S₂ ⟶ S₃) [hφ : QuasiIso φ] [hφ' : QuasiIso φ'] :\n    QuasiIso (φ ≫ φ') := by\n  rw [quasiIso_iff] at hφ hφ' ⊢\n  rw [homologyMap_comp]\n  infer_instance\n\n"}
{"name":"CategoryTheory.ShortComplex.quasiIso_of_comp_left","module":"Mathlib.Algebra.Homology.ShortComplex.QuasiIso","initialProofState":"C : Type u_2\ninst✝⁴ : CategoryTheory.Category.{u_1, u_2} C\ninst✝³ : CategoryTheory.Limits.HasZeroMorphisms C\nS₁ S₂ S₃ : CategoryTheory.ShortComplex C\ninst✝² : S₁.HasHomology\ninst✝¹ : S₂.HasHomology\ninst✝ : S₃.HasHomology\nφ : Quiver.Hom S₁ S₂\nφ' : Quiver.Hom S₂ S₃\nhφ : CategoryTheory.ShortComplex.QuasiIso φ\nhφφ' : CategoryTheory.ShortComplex.QuasiIso (CategoryTheory.CategoryStruct.comp φ φ')\n⊢ CategoryTheory.ShortComplex.QuasiIso φ'","decl":"lemma quasiIso_of_comp_left (φ : S₁ ⟶ S₂) (φ' : S₂ ⟶ S₃)\n    [hφ : QuasiIso φ] [hφφ' : QuasiIso (φ ≫ φ')] :\n    QuasiIso φ' := by\n  rw [quasiIso_iff] at hφ hφφ' ⊢\n  rw [homologyMap_comp] at hφφ'\n  exact IsIso.of_isIso_comp_left (homologyMap φ) (homologyMap φ')\n\n"}
{"name":"CategoryTheory.ShortComplex.quasiIso_iff_comp_left","module":"Mathlib.Algebra.Homology.ShortComplex.QuasiIso","initialProofState":"C : Type u_2\ninst✝⁴ : CategoryTheory.Category.{u_1, u_2} C\ninst✝³ : CategoryTheory.Limits.HasZeroMorphisms C\nS₁ S₂ S₃ : CategoryTheory.ShortComplex C\ninst✝² : S₁.HasHomology\ninst✝¹ : S₂.HasHomology\ninst✝ : S₃.HasHomology\nφ : Quiver.Hom S₁ S₂\nφ' : Quiver.Hom S₂ S₃\nhφ : CategoryTheory.ShortComplex.QuasiIso φ\n⊢ Iff (CategoryTheory.ShortComplex.QuasiIso (CategoryTheory.CategoryStruct.comp φ φ')) (CategoryTheory.ShortComplex.QuasiIso φ')","decl":"lemma quasiIso_iff_comp_left (φ : S₁ ⟶ S₂) (φ' : S₂ ⟶ S₃) [hφ : QuasiIso φ] :\n    QuasiIso (φ ≫ φ') ↔ QuasiIso φ' := by\n  constructor\n  · intro\n    exact quasiIso_of_comp_left φ φ'\n  · intro\n    exact quasiIso_comp φ φ'\n\n"}
{"name":"CategoryTheory.ShortComplex.quasiIso_of_comp_right","module":"Mathlib.Algebra.Homology.ShortComplex.QuasiIso","initialProofState":"C : Type u_2\ninst✝⁴ : CategoryTheory.Category.{u_1, u_2} C\ninst✝³ : CategoryTheory.Limits.HasZeroMorphisms C\nS₁ S₂ S₃ : CategoryTheory.ShortComplex C\ninst✝² : S₁.HasHomology\ninst✝¹ : S₂.HasHomology\ninst✝ : S₃.HasHomology\nφ : Quiver.Hom S₁ S₂\nφ' : Quiver.Hom S₂ S₃\nhφ' : CategoryTheory.ShortComplex.QuasiIso φ'\nhφφ' : CategoryTheory.ShortComplex.QuasiIso (CategoryTheory.CategoryStruct.comp φ φ')\n⊢ CategoryTheory.ShortComplex.QuasiIso φ","decl":"lemma quasiIso_of_comp_right (φ : S₁ ⟶ S₂) (φ' : S₂ ⟶ S₃)\n    [hφ' : QuasiIso φ'] [hφφ' : QuasiIso (φ ≫ φ')] :\n    QuasiIso φ := by\n  rw [quasiIso_iff] at hφ' hφφ' ⊢\n  rw [homologyMap_comp] at hφφ'\n  exact IsIso.of_isIso_comp_right (homologyMap φ) (homologyMap φ')\n\n"}
{"name":"CategoryTheory.ShortComplex.quasiIso_iff_comp_right","module":"Mathlib.Algebra.Homology.ShortComplex.QuasiIso","initialProofState":"C : Type u_2\ninst✝⁴ : CategoryTheory.Category.{u_1, u_2} C\ninst✝³ : CategoryTheory.Limits.HasZeroMorphisms C\nS₁ S₂ S₃ : CategoryTheory.ShortComplex C\ninst✝² : S₁.HasHomology\ninst✝¹ : S₂.HasHomology\ninst✝ : S₃.HasHomology\nφ : Quiver.Hom S₁ S₂\nφ' : Quiver.Hom S₂ S₃\nhφ' : CategoryTheory.ShortComplex.QuasiIso φ'\n⊢ Iff (CategoryTheory.ShortComplex.QuasiIso (CategoryTheory.CategoryStruct.comp φ φ')) (CategoryTheory.ShortComplex.QuasiIso φ)","decl":"lemma quasiIso_iff_comp_right (φ : S₁ ⟶ S₂) (φ' : S₂ ⟶ S₃) [hφ' : QuasiIso φ'] :\n    QuasiIso (φ ≫ φ') ↔ QuasiIso φ := by\n  constructor\n  · intro\n    exact quasiIso_of_comp_right φ φ'\n  · intro\n    exact quasiIso_comp φ φ'\n\n"}
{"name":"CategoryTheory.ShortComplex.quasiIso_of_arrow_mk_iso","module":"Mathlib.Algebra.Homology.ShortComplex.QuasiIso","initialProofState":"C : Type u_2\ninst✝⁵ : CategoryTheory.Category.{u_1, u_2} C\ninst✝⁴ : CategoryTheory.Limits.HasZeroMorphisms C\nS₁ S₂ S₃ S₄ : CategoryTheory.ShortComplex C\ninst✝³ : S₁.HasHomology\ninst✝² : S₂.HasHomology\ninst✝¹ : S₃.HasHomology\ninst✝ : S₄.HasHomology\nφ : Quiver.Hom S₁ S₂\nφ' : Quiver.Hom S₃ S₄\ne : CategoryTheory.Iso (CategoryTheory.Arrow.mk φ) (CategoryTheory.Arrow.mk φ')\nhφ : CategoryTheory.ShortComplex.QuasiIso φ\n⊢ CategoryTheory.ShortComplex.QuasiIso φ'","decl":"lemma quasiIso_of_arrow_mk_iso (φ : S₁ ⟶ S₂) (φ' : S₃ ⟶ S₄) (e : Arrow.mk φ ≅ Arrow.mk φ')\n    [hφ : QuasiIso φ] : QuasiIso φ' := by\n  let α : S₃ ⟶ S₁ := e.inv.left\n  let β : S₂ ⟶ S₄ := e.hom.right\n  suffices φ' = α ≫ φ ≫ β by\n    rw [this]\n    infer_instance\n  simp only [α, β, Arrow.w_mk_right_assoc, Arrow.mk_left, Arrow.mk_right, Arrow.mk_hom,\n    ← Arrow.comp_right, e.inv_hom_id, Arrow.id_right, comp_id]\n\n"}
{"name":"CategoryTheory.ShortComplex.quasiIso_iff_of_arrow_mk_iso","module":"Mathlib.Algebra.Homology.ShortComplex.QuasiIso","initialProofState":"C : Type u_2\ninst✝⁵ : CategoryTheory.Category.{u_1, u_2} C\ninst✝⁴ : CategoryTheory.Limits.HasZeroMorphisms C\nS₁ S₂ S₃ S₄ : CategoryTheory.ShortComplex C\ninst✝³ : S₁.HasHomology\ninst✝² : S₂.HasHomology\ninst✝¹ : S₃.HasHomology\ninst✝ : S₄.HasHomology\nφ : Quiver.Hom S₁ S₂\nφ' : Quiver.Hom S₃ S₄\ne : CategoryTheory.Iso (CategoryTheory.Arrow.mk φ) (CategoryTheory.Arrow.mk φ')\n⊢ Iff (CategoryTheory.ShortComplex.QuasiIso φ) (CategoryTheory.ShortComplex.QuasiIso φ')","decl":"lemma quasiIso_iff_of_arrow_mk_iso (φ : S₁ ⟶ S₂) (φ' : S₃ ⟶ S₄) (e : Arrow.mk φ ≅ Arrow.mk φ') :\n    QuasiIso φ ↔ QuasiIso φ' :=\n  ⟨fun _ => quasiIso_of_arrow_mk_iso φ φ' e, fun _ => quasiIso_of_arrow_mk_iso φ' φ e.symm⟩\n\n"}
{"name":"CategoryTheory.ShortComplex.LeftHomologyMapData.quasiIso_iff","module":"Mathlib.Algebra.Homology.ShortComplex.QuasiIso","initialProofState":"C : Type u_2\ninst✝³ : CategoryTheory.Category.{u_1, u_2} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\nS₁ S₂ : CategoryTheory.ShortComplex C\ninst✝¹ : S₁.HasHomology\ninst✝ : S₂.HasHomology\nφ : Quiver.Hom S₁ S₂\nh₁ : S₁.LeftHomologyData\nh₂ : S₂.LeftHomologyData\nγ : CategoryTheory.ShortComplex.LeftHomologyMapData φ h₁ h₂\n⊢ Iff (CategoryTheory.ShortComplex.QuasiIso φ) (CategoryTheory.IsIso γ.φH)","decl":"lemma LeftHomologyMapData.quasiIso_iff {φ : S₁ ⟶ S₂} {h₁ : S₁.LeftHomologyData}\n    {h₂ : S₂.LeftHomologyData} (γ : LeftHomologyMapData φ h₁ h₂) :\n    QuasiIso φ ↔ IsIso γ.φH := by\n  rw [ShortComplex.quasiIso_iff, γ.homologyMap_eq]\n  constructor\n  · intro h\n    haveI : IsIso (γ.φH ≫ (LeftHomologyData.homologyIso h₂).inv) :=\n      IsIso.of_isIso_comp_left (LeftHomologyData.homologyIso h₁).hom _\n    exact IsIso.of_isIso_comp_right _ (LeftHomologyData.homologyIso h₂).inv\n  · intro h\n    infer_instance\n\n"}
{"name":"CategoryTheory.ShortComplex.RightHomologyMapData.quasiIso_iff","module":"Mathlib.Algebra.Homology.ShortComplex.QuasiIso","initialProofState":"C : Type u_2\ninst✝³ : CategoryTheory.Category.{u_1, u_2} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\nS₁ S₂ : CategoryTheory.ShortComplex C\ninst✝¹ : S₁.HasHomology\ninst✝ : S₂.HasHomology\nφ : Quiver.Hom S₁ S₂\nh₁ : S₁.RightHomologyData\nh₂ : S₂.RightHomologyData\nγ : CategoryTheory.ShortComplex.RightHomologyMapData φ h₁ h₂\n⊢ Iff (CategoryTheory.ShortComplex.QuasiIso φ) (CategoryTheory.IsIso γ.φH)","decl":"lemma RightHomologyMapData.quasiIso_iff {φ : S₁ ⟶ S₂} {h₁ : S₁.RightHomologyData}\n    {h₂ : S₂.RightHomologyData} (γ : RightHomologyMapData φ h₁ h₂) :\n    QuasiIso φ ↔ IsIso γ.φH := by\n  rw [ShortComplex.quasiIso_iff, γ.homologyMap_eq]\n  constructor\n  · intro h\n    haveI : IsIso (γ.φH ≫ (RightHomologyData.homologyIso h₂).inv) :=\n      IsIso.of_isIso_comp_left (RightHomologyData.homologyIso h₁).hom _\n    exact IsIso.of_isIso_comp_right _ (RightHomologyData.homologyIso h₂).inv\n  · intro h\n    infer_instance\n\n"}
{"name":"CategoryTheory.ShortComplex.quasiIso_iff_isIso_leftHomologyMap'","module":"Mathlib.Algebra.Homology.ShortComplex.QuasiIso","initialProofState":"C : Type u_2\ninst✝³ : CategoryTheory.Category.{u_1, u_2} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\nS₁ S₂ : CategoryTheory.ShortComplex C\ninst✝¹ : S₁.HasHomology\ninst✝ : S₂.HasHomology\nφ : Quiver.Hom S₁ S₂\nh₁ : S₁.LeftHomologyData\nh₂ : S₂.LeftHomologyData\n⊢ Iff (CategoryTheory.ShortComplex.QuasiIso φ) (CategoryTheory.IsIso (CategoryTheory.ShortComplex.leftHomologyMap' φ h₁ h₂))","decl":"lemma quasiIso_iff_isIso_leftHomologyMap' (φ : S₁ ⟶ S₂)\n    (h₁ : S₁.LeftHomologyData) (h₂ : S₂.LeftHomologyData) :\n    QuasiIso φ ↔ IsIso (leftHomologyMap' φ h₁ h₂) := by\n  have γ : LeftHomologyMapData φ h₁ h₂ := default\n  rw [γ.quasiIso_iff, γ.leftHomologyMap'_eq]\n\n"}
{"name":"CategoryTheory.ShortComplex.quasiIso_iff_isIso_rightHomologyMap'","module":"Mathlib.Algebra.Homology.ShortComplex.QuasiIso","initialProofState":"C : Type u_2\ninst✝³ : CategoryTheory.Category.{u_1, u_2} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\nS₁ S₂ : CategoryTheory.ShortComplex C\ninst✝¹ : S₁.HasHomology\ninst✝ : S₂.HasHomology\nφ : Quiver.Hom S₁ S₂\nh₁ : S₁.RightHomologyData\nh₂ : S₂.RightHomologyData\n⊢ Iff (CategoryTheory.ShortComplex.QuasiIso φ) (CategoryTheory.IsIso (CategoryTheory.ShortComplex.rightHomologyMap' φ h₁ h₂))","decl":"lemma quasiIso_iff_isIso_rightHomologyMap' (φ : S₁ ⟶ S₂)\n    (h₁ : S₁.RightHomologyData) (h₂ : S₂.RightHomologyData) :\n    QuasiIso φ ↔ IsIso (rightHomologyMap' φ h₁ h₂) := by\n  have γ : RightHomologyMapData φ h₁ h₂ := default\n  rw [γ.quasiIso_iff, γ.rightHomologyMap'_eq]\n\n"}
{"name":"CategoryTheory.ShortComplex.quasiIso_iff_isIso_homologyMap'","module":"Mathlib.Algebra.Homology.ShortComplex.QuasiIso","initialProofState":"C : Type u_2\ninst✝³ : CategoryTheory.Category.{u_1, u_2} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\nS₁ S₂ : CategoryTheory.ShortComplex C\ninst✝¹ : S₁.HasHomology\ninst✝ : S₂.HasHomology\nφ : Quiver.Hom S₁ S₂\nh₁ : S₁.HomologyData\nh₂ : S₂.HomologyData\n⊢ Iff (CategoryTheory.ShortComplex.QuasiIso φ) (CategoryTheory.IsIso (CategoryTheory.ShortComplex.homologyMap' φ h₁ h₂))","decl":"lemma quasiIso_iff_isIso_homologyMap' (φ : S₁ ⟶ S₂)\n    (h₁ : S₁.HomologyData) (h₂ : S₂.HomologyData) :\n    QuasiIso φ ↔ IsIso (homologyMap' φ h₁ h₂) :=\n  quasiIso_iff_isIso_leftHomologyMap' _ _ _\n\n"}
{"name":"CategoryTheory.ShortComplex.quasiIso_of_epi_of_isIso_of_mono","module":"Mathlib.Algebra.Homology.ShortComplex.QuasiIso","initialProofState":"C : Type u_2\ninst✝⁶ : CategoryTheory.Category.{u_1, u_2} C\ninst✝⁵ : CategoryTheory.Limits.HasZeroMorphisms C\nS₁ S₂ : CategoryTheory.ShortComplex C\ninst✝⁴ : S₁.HasHomology\ninst✝³ : S₂.HasHomology\nφ : Quiver.Hom S₁ S₂\ninst✝² : CategoryTheory.Epi φ.τ₁\ninst✝¹ : CategoryTheory.IsIso φ.τ₂\ninst✝ : CategoryTheory.Mono φ.τ₃\n⊢ CategoryTheory.ShortComplex.QuasiIso φ","decl":"lemma quasiIso_of_epi_of_isIso_of_mono (φ : S₁ ⟶ S₂) [Epi φ.τ₁] [IsIso φ.τ₂] [Mono φ.τ₃] :\n    QuasiIso φ := by\n  rw [((LeftHomologyMapData.ofEpiOfIsIsoOfMono φ) S₁.leftHomologyData).quasiIso_iff]\n  dsimp\n  infer_instance\n\n"}
{"name":"CategoryTheory.ShortComplex.quasiIso_opMap_iff","module":"Mathlib.Algebra.Homology.ShortComplex.QuasiIso","initialProofState":"C : Type u_2\ninst✝³ : CategoryTheory.Category.{u_1, u_2} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\nS₁ S₂ : CategoryTheory.ShortComplex C\ninst✝¹ : S₁.HasHomology\ninst✝ : S₂.HasHomology\nφ : Quiver.Hom S₁ S₂\n⊢ Iff (CategoryTheory.ShortComplex.QuasiIso (CategoryTheory.ShortComplex.opMap φ)) (CategoryTheory.ShortComplex.QuasiIso φ)","decl":"lemma quasiIso_opMap_iff (φ : S₁ ⟶ S₂) :\n    QuasiIso (opMap φ) ↔ QuasiIso φ := by\n  have γ : HomologyMapData φ S₁.homologyData S₂.homologyData := default\n  rw [γ.left.quasiIso_iff, γ.op.right.quasiIso_iff]\n  dsimp\n  constructor\n  · intro h\n    apply isIso_of_op\n  · intro h\n    infer_instance\n\n"}
{"name":"CategoryTheory.ShortComplex.quasiIso_opMap","module":"Mathlib.Algebra.Homology.ShortComplex.QuasiIso","initialProofState":"C : Type u_2\ninst✝⁴ : CategoryTheory.Category.{u_1, u_2} C\ninst✝³ : CategoryTheory.Limits.HasZeroMorphisms C\nS₁ S₂ : CategoryTheory.ShortComplex C\ninst✝² : S₁.HasHomology\ninst✝¹ : S₂.HasHomology\nφ : Quiver.Hom S₁ S₂\ninst✝ : CategoryTheory.ShortComplex.QuasiIso φ\n⊢ CategoryTheory.ShortComplex.QuasiIso (CategoryTheory.ShortComplex.opMap φ)","decl":"lemma quasiIso_opMap (φ : S₁ ⟶ S₂) [QuasiIso φ] :\n    QuasiIso (opMap φ) := by\n  rw [quasiIso_opMap_iff]\n  infer_instance\n\n"}
{"name":"CategoryTheory.ShortComplex.quasiIso_unopMap","module":"Mathlib.Algebra.Homology.ShortComplex.QuasiIso","initialProofState":"C : Type u_1\ninst✝⁶ : CategoryTheory.Category.{u_2, u_1} C\ninst✝⁵ : CategoryTheory.Limits.HasZeroMorphisms C\nS₁ S₂ : CategoryTheory.ShortComplex (Opposite C)\ninst✝⁴ : S₁.HasHomology\ninst✝³ : S₂.HasHomology\ninst✝² : S₁.unop.HasHomology\ninst✝¹ : S₂.unop.HasHomology\nφ : Quiver.Hom S₁ S₂\ninst✝ : CategoryTheory.ShortComplex.QuasiIso φ\n⊢ CategoryTheory.ShortComplex.QuasiIso (CategoryTheory.ShortComplex.unopMap φ)","decl":"lemma quasiIso_unopMap {S₁ S₂ : ShortComplex Cᵒᵖ} [S₁.HasHomology] [S₂.HasHomology]\n    [S₁.unop.HasHomology] [S₂.unop.HasHomology]\n    (φ : S₁ ⟶ S₂) [QuasiIso φ] : QuasiIso (unopMap φ) := by\n  rw [← quasiIso_opMap_iff]\n  change QuasiIso φ\n  infer_instance\n\n"}
{"name":"CategoryTheory.ShortComplex.quasiIso_iff_isIso_liftCycles","module":"Mathlib.Algebra.Homology.ShortComplex.QuasiIso","initialProofState":"C : Type u_2\ninst✝³ : CategoryTheory.Category.{u_1, u_2} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\nS₁ S₂ : CategoryTheory.ShortComplex C\ninst✝¹ : S₁.HasHomology\ninst✝ : S₂.HasHomology\nφ : Quiver.Hom S₁ S₂\nhf₁ : Eq S₁.f 0\nhg₁ : Eq S₁.g 0\nhf₂ : Eq S₂.f 0\n⊢ Iff (CategoryTheory.ShortComplex.QuasiIso φ) (CategoryTheory.IsIso (S₂.liftCycles φ.τ₂ ⋯))","decl":"lemma quasiIso_iff_isIso_liftCycles (φ : S₁ ⟶ S₂)\n    (hf₁ : S₁.f = 0) (hg₁ : S₁.g = 0) (hf₂ : S₂.f = 0) :\n    QuasiIso φ ↔ IsIso (S₂.liftCycles φ.τ₂ (by rw [φ.comm₂₃, hg₁, zero_comp])) := by\n  let H : LeftHomologyMapData φ (LeftHomologyData.ofZeros S₁ hf₁ hg₁)\n      (LeftHomologyData.ofIsLimitKernelFork S₂ hf₂ _ S₂.cyclesIsKernel) :=\n    { φK := S₂.liftCycles φ.τ₂ (by rw [φ.comm₂₃, hg₁, zero_comp])\n      φH := S₂.liftCycles φ.τ₂ (by rw [φ.comm₂₃, hg₁, zero_comp]) }\n  exact H.quasiIso_iff\n\n"}
{"name":"CategoryTheory.ShortComplex.quasiIso_iff_isIso_descOpcycles","module":"Mathlib.Algebra.Homology.ShortComplex.QuasiIso","initialProofState":"C : Type u_2\ninst✝³ : CategoryTheory.Category.{u_1, u_2} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\nS₁ S₂ : CategoryTheory.ShortComplex C\ninst✝¹ : S₁.HasHomology\ninst✝ : S₂.HasHomology\nφ : Quiver.Hom S₁ S₂\nhg₁ : Eq S₁.g 0\nhf₂ : Eq S₂.f 0\nhg₂ : Eq S₂.g 0\n⊢ Iff (CategoryTheory.ShortComplex.QuasiIso φ) (CategoryTheory.IsIso (S₁.descOpcycles φ.τ₂ ⋯))","decl":"lemma quasiIso_iff_isIso_descOpcycles (φ : S₁ ⟶ S₂)\n    (hg₁ : S₁.g = 0) (hf₂ : S₂.f = 0) (hg₂ : S₂.g = 0) :\n    QuasiIso φ ↔ IsIso (S₁.descOpcycles φ.τ₂ (by rw [← φ.comm₁₂, hf₂, comp_zero])) := by\n  let H : RightHomologyMapData φ\n      (RightHomologyData.ofIsColimitCokernelCofork S₁ hg₁ _ S₁.opcyclesIsCokernel)\n        (RightHomologyData.ofZeros S₂ hf₂ hg₂) :=\n    { φQ := S₁.descOpcycles φ.τ₂ (by rw [← φ.comm₁₂, hf₂, comp_zero])\n      φH := S₁.descOpcycles φ.τ₂ (by rw [← φ.comm₁₂, hf₂, comp_zero]) }\n  exact H.quasiIso_iff\n\n"}
