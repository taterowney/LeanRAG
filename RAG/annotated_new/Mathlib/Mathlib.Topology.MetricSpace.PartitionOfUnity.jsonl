{"name":"EMetric.eventually_nhds_zero_forall_closedBall_subset","module":"Mathlib.Topology.MetricSpace.PartitionOfUnity","initialProofState":"ι : Type u_1\nX : Type u_2\ninst✝ : EMetricSpace X\nK U : ι → Set X\nhK : ∀ (i : ι), IsClosed (K i)\nhU : ∀ (i : ι), IsOpen (U i)\nhKU : ∀ (i : ι), HasSubset.Subset (K i) (U i)\nhfin : LocallyFinite K\nx : X\n⊢ Filter.Eventually (fun p => ∀ (i : ι), Membership.mem (K i) p.2 → HasSubset.Subset (EMetric.closedBall p.2 p.1) (U i)) (SProd.sprod (nhds 0) (nhds x))","decl":"/-- Let `K : ι → Set X` be a locally finite family of closed sets in an emetric space. Let\n`U : ι → Set X` be a family of open sets such that `K i ⊆ U i` for all `i`. Then for any point\n`x : X`, for sufficiently small `r : ℝ≥0∞` and for `y` sufficiently close to `x`, for all `i`, if\n`y ∈ K i`, then `EMetric.closedBall y r ⊆ U i`. -/\ntheorem eventually_nhds_zero_forall_closedBall_subset (hK : ∀ i, IsClosed (K i))\n    (hU : ∀ i, IsOpen (U i)) (hKU : ∀ i, K i ⊆ U i) (hfin : LocallyFinite K) (x : X) :\n    ∀ᶠ p : ℝ≥0∞ × X in 𝓝 0 ×ˢ 𝓝 x, ∀ i, p.2 ∈ K i → closedBall p.2 p.1 ⊆ U i := by\n  suffices ∀ i, x ∈ K i → ∀ᶠ p : ℝ≥0∞ × X in 𝓝 0 ×ˢ 𝓝 x, closedBall p.2 p.1 ⊆ U i by\n    apply mp_mem ((eventually_all_finite (hfin.point_finite x)).2 this)\n      (mp_mem (@tendsto_snd ℝ≥0∞ _ (𝓝 0) _ _ (hfin.iInter_compl_mem_nhds hK x)) _)\n    apply univ_mem'\n    rintro ⟨r, y⟩ hxy hyU i hi\n    simp only [mem_iInter, mem_compl_iff, not_imp_not, mem_preimage] at hxy\n    exact hyU _ (hxy _ hi)\n  intro i hi\n  rcases nhds_basis_closed_eball.mem_iff.1 ((hU i).mem_nhds <| hKU i hi) with ⟨R, hR₀, hR⟩\n  rcases ENNReal.lt_iff_exists_nnreal_btwn.mp hR₀ with ⟨r, hr₀, hrR⟩\n  filter_upwards [prod_mem_prod (eventually_lt_nhds hr₀)\n      (closedBall_mem_nhds x (tsub_pos_iff_lt.2 hrR))] with p hp z hz\n  apply hR\n  calc\n    edist z x ≤ edist z p.2 + edist p.2 x := edist_triangle _ _ _\n    _ ≤ p.1 + (R - p.1) := add_le_add hz <| le_trans hp.2 <| tsub_le_tsub_left hp.1.out.le _\n    _ = R := add_tsub_cancel_of_le (lt_trans (by exact hp.1) hrR).le\n\n"}
{"name":"EMetric.exists_forall_closedBall_subset_aux₁","module":"Mathlib.Topology.MetricSpace.PartitionOfUnity","initialProofState":"ι : Type u_1\nX : Type u_2\ninst✝ : EMetricSpace X\nK U : ι → Set X\nhK : ∀ (i : ι), IsClosed (K i)\nhU : ∀ (i : ι), IsOpen (U i)\nhKU : ∀ (i : ι), HasSubset.Subset (K i) (U i)\nhfin : LocallyFinite K\nx : X\n⊢ Exists fun r => Filter.Eventually (fun y => Membership.mem (Inter.inter (Set.Ioi 0) (Set.preimage ENNReal.ofReal (Set.iInter fun i => Set.iInter fun x => setOf fun r => HasSubset.Subset (EMetric.closedBall y r) (U i)))) r) (nhds x)","decl":"theorem exists_forall_closedBall_subset_aux₁ (hK : ∀ i, IsClosed (K i)) (hU : ∀ i, IsOpen (U i))\n    (hKU : ∀ i, K i ⊆ U i) (hfin : LocallyFinite K) (x : X) :\n    ∃ r : ℝ, ∀ᶠ y in 𝓝 x,\n      r ∈ Ioi (0 : ℝ) ∩ ENNReal.ofReal ⁻¹' ⋂ (i) (_ : y ∈ K i), { r | closedBall y r ⊆ U i } := by\n  have := (ENNReal.continuous_ofReal.tendsto' 0 0 ENNReal.ofReal_zero).eventually\n    (eventually_nhds_zero_forall_closedBall_subset hK hU hKU hfin x).curry\n  rcases this.exists_gt with ⟨r, hr0, hr⟩\n  refine ⟨r, hr.mono fun y hy => ⟨hr0, ?_⟩⟩\n  rwa [mem_preimage, mem_iInter₂]\n\n"}
{"name":"EMetric.exists_forall_closedBall_subset_aux₂","module":"Mathlib.Topology.MetricSpace.PartitionOfUnity","initialProofState":"ι : Type u_1\nX : Type u_2\ninst✝ : EMetricSpace X\nK U : ι → Set X\ny : X\n⊢ Convex Real (Inter.inter (Set.Ioi 0) (Set.preimage ENNReal.ofReal (Set.iInter fun i => Set.iInter fun x => setOf fun r => HasSubset.Subset (EMetric.closedBall y r) (U i))))","decl":"theorem exists_forall_closedBall_subset_aux₂ (y : X) :\n    Convex ℝ\n      (Ioi (0 : ℝ) ∩ ENNReal.ofReal ⁻¹' ⋂ (i) (_ : y ∈ K i), { r | closedBall y r ⊆ U i }) :=\n  (convex_Ioi _).inter <| OrdConnected.convex <| OrdConnected.preimage_ennreal_ofReal <|\n    ordConnected_iInter fun i => ordConnected_iInter fun (_ : y ∈ K i) =>\n      ordConnected_setOf_closedBall_subset y (U i)\n\n"}
{"name":"EMetric.exists_continuous_real_forall_closedBall_subset","module":"Mathlib.Topology.MetricSpace.PartitionOfUnity","initialProofState":"ι : Type u_1\nX : Type u_2\ninst✝ : EMetricSpace X\nK U : ι → Set X\nhK : ∀ (i : ι), IsClosed (K i)\nhU : ∀ (i : ι), IsOpen (U i)\nhKU : ∀ (i : ι), HasSubset.Subset (K i) (U i)\nhfin : LocallyFinite K\n⊢ Exists fun δ => And (∀ (x : X), LT.lt 0 (δ x)) (∀ (i : ι) (x : X), Membership.mem (K i) x → HasSubset.Subset (EMetric.closedBall x (ENNReal.ofReal (δ x))) (U i))","decl":"/-- Let `X` be an extended metric space. Let `K : ι → Set X` be a locally finite family of closed\nsets, let `U : ι → Set X` be a family of open sets such that `K i ⊆ U i` for all `i`. Then there\nexists a positive continuous function `δ : C(X, ℝ)` such that for any `i` and `x ∈ K i`,\nwe have `EMetric.closedBall x (ENNReal.ofReal (δ x)) ⊆ U i`. -/\ntheorem exists_continuous_real_forall_closedBall_subset (hK : ∀ i, IsClosed (K i))\n    (hU : ∀ i, IsOpen (U i)) (hKU : ∀ i, K i ⊆ U i) (hfin : LocallyFinite K) :\n    ∃ δ : C(X, ℝ), (∀ x, 0 < δ x) ∧\n      ∀ (i), ∀ x ∈ K i, closedBall x (ENNReal.ofReal <| δ x) ⊆ U i := by\n  simpa only [mem_inter_iff, forall_and, mem_preimage, mem_iInter, @forall_swap ι X] using\n    exists_continuous_forall_mem_convex_of_local_const exists_forall_closedBall_subset_aux₂\n      (exists_forall_closedBall_subset_aux₁ hK hU hKU hfin)\n\n"}
{"name":"EMetric.exists_continuous_nnreal_forall_closedBall_subset","module":"Mathlib.Topology.MetricSpace.PartitionOfUnity","initialProofState":"ι : Type u_1\nX : Type u_2\ninst✝ : EMetricSpace X\nK U : ι → Set X\nhK : ∀ (i : ι), IsClosed (K i)\nhU : ∀ (i : ι), IsOpen (U i)\nhKU : ∀ (i : ι), HasSubset.Subset (K i) (U i)\nhfin : LocallyFinite K\n⊢ Exists fun δ => And (∀ (x : X), LT.lt 0 (δ x)) (∀ (i : ι) (x : X), Membership.mem (K i) x → HasSubset.Subset (EMetric.closedBall x ↑(δ x)) (U i))","decl":"/-- Let `X` be an extended metric space. Let `K : ι → Set X` be a locally finite family of closed\nsets, let `U : ι → Set X` be a family of open sets such that `K i ⊆ U i` for all `i`. Then there\nexists a positive continuous function `δ : C(X, ℝ≥0)` such that for any `i` and `x ∈ K i`,\nwe have `EMetric.closedBall x (δ x) ⊆ U i`. -/\ntheorem exists_continuous_nnreal_forall_closedBall_subset (hK : ∀ i, IsClosed (K i))\n    (hU : ∀ i, IsOpen (U i)) (hKU : ∀ i, K i ⊆ U i) (hfin : LocallyFinite K) :\n    ∃ δ : C(X, ℝ≥0), (∀ x, 0 < δ x) ∧ ∀ (i), ∀ x ∈ K i, closedBall x (δ x) ⊆ U i := by\n  rcases exists_continuous_real_forall_closedBall_subset hK hU hKU hfin with ⟨δ, hδ₀, hδ⟩\n  lift δ to C(X, ℝ≥0) using fun x => (hδ₀ x).le\n  refine ⟨δ, hδ₀, fun i x hi => ?_⟩\n  simpa only [← ENNReal.ofReal_coe_nnreal] using hδ i x hi\n\n"}
{"name":"EMetric.exists_continuous_eNNReal_forall_closedBall_subset","module":"Mathlib.Topology.MetricSpace.PartitionOfUnity","initialProofState":"ι : Type u_1\nX : Type u_2\ninst✝ : EMetricSpace X\nK U : ι → Set X\nhK : ∀ (i : ι), IsClosed (K i)\nhU : ∀ (i : ι), IsOpen (U i)\nhKU : ∀ (i : ι), HasSubset.Subset (K i) (U i)\nhfin : LocallyFinite K\n⊢ Exists fun δ => And (∀ (x : X), LT.lt 0 (δ x)) (∀ (i : ι) (x : X), Membership.mem (K i) x → HasSubset.Subset (EMetric.closedBall x (δ x)) (U i))","decl":"/-- Let `X` be an extended metric space. Let `K : ι → Set X` be a locally finite family of closed\nsets, let `U : ι → Set X` be a family of open sets such that `K i ⊆ U i` for all `i`. Then there\nexists a positive continuous function `δ : C(X, ℝ≥0∞)` such that for any `i` and `x ∈ K i`,\nwe have `EMetric.closedBall x (δ x) ⊆ U i`. -/\ntheorem exists_continuous_eNNReal_forall_closedBall_subset (hK : ∀ i, IsClosed (K i))\n    (hU : ∀ i, IsOpen (U i)) (hKU : ∀ i, K i ⊆ U i) (hfin : LocallyFinite K) :\n    ∃ δ : C(X, ℝ≥0∞), (∀ x, 0 < δ x) ∧ ∀ (i), ∀ x ∈ K i, closedBall x (δ x) ⊆ U i :=\n  let ⟨δ, hδ₀, hδ⟩ := exists_continuous_nnreal_forall_closedBall_subset hK hU hKU hfin\n  ⟨ContinuousMap.comp ⟨Coe.coe, ENNReal.continuous_coe⟩ δ, fun x => ENNReal.coe_pos.2 (hδ₀ x), hδ⟩\n\n"}
{"name":"Metric.exists_continuous_nnreal_forall_closedBall_subset","module":"Mathlib.Topology.MetricSpace.PartitionOfUnity","initialProofState":"ι : Type u_1\nX : Type u_2\ninst✝ : MetricSpace X\nK U : ι → Set X\nhK : ∀ (i : ι), IsClosed (K i)\nhU : ∀ (i : ι), IsOpen (U i)\nhKU : ∀ (i : ι), HasSubset.Subset (K i) (U i)\nhfin : LocallyFinite K\n⊢ Exists fun δ => And (∀ (x : X), LT.lt 0 (δ x)) (∀ (i : ι) (x : X), Membership.mem (K i) x → HasSubset.Subset (Metric.closedBall x ↑(δ x)) (U i))","decl":"/-- Let `X` be a metric space. Let `K : ι → Set X` be a locally finite family of closed sets, let\n`U : ι → Set X` be a family of open sets such that `K i ⊆ U i` for all `i`. Then there exists a\npositive continuous function `δ : C(X, ℝ≥0)` such that for any `i` and `x ∈ K i`, we have\n`Metric.closedBall x (δ x) ⊆ U i`. -/\ntheorem exists_continuous_nnreal_forall_closedBall_subset (hK : ∀ i, IsClosed (K i))\n    (hU : ∀ i, IsOpen (U i)) (hKU : ∀ i, K i ⊆ U i) (hfin : LocallyFinite K) :\n    ∃ δ : C(X, ℝ≥0), (∀ x, 0 < δ x) ∧ ∀ (i), ∀ x ∈ K i, closedBall x (δ x) ⊆ U i := by\n  rcases EMetric.exists_continuous_nnreal_forall_closedBall_subset hK hU hKU hfin with ⟨δ, hδ0, hδ⟩\n  refine ⟨δ, hδ0, fun i x hx => ?_⟩\n  rw [← emetric_closedBall_nnreal]\n  exact hδ i x hx\n\n"}
{"name":"Metric.exists_continuous_real_forall_closedBall_subset","module":"Mathlib.Topology.MetricSpace.PartitionOfUnity","initialProofState":"ι : Type u_1\nX : Type u_2\ninst✝ : MetricSpace X\nK U : ι → Set X\nhK : ∀ (i : ι), IsClosed (K i)\nhU : ∀ (i : ι), IsOpen (U i)\nhKU : ∀ (i : ι), HasSubset.Subset (K i) (U i)\nhfin : LocallyFinite K\n⊢ Exists fun δ => And (∀ (x : X), LT.lt 0 (δ x)) (∀ (i : ι) (x : X), Membership.mem (K i) x → HasSubset.Subset (Metric.closedBall x (δ x)) (U i))","decl":"/-- Let `X` be a metric space. Let `K : ι → Set X` be a locally finite family of closed sets, let\n`U : ι → Set X` be a family of open sets such that `K i ⊆ U i` for all `i`. Then there exists a\npositive continuous function `δ : C(X, ℝ)` such that for any `i` and `x ∈ K i`, we have\n`Metric.closedBall x (δ x) ⊆ U i`. -/\ntheorem exists_continuous_real_forall_closedBall_subset (hK : ∀ i, IsClosed (K i))\n    (hU : ∀ i, IsOpen (U i)) (hKU : ∀ i, K i ⊆ U i) (hfin : LocallyFinite K) :\n    ∃ δ : C(X, ℝ), (∀ x, 0 < δ x) ∧ ∀ (i), ∀ x ∈ K i, closedBall x (δ x) ⊆ U i :=\n  let ⟨δ, hδ₀, hδ⟩ := exists_continuous_nnreal_forall_closedBall_subset hK hU hKU hfin\n  ⟨ContinuousMap.comp ⟨Coe.coe, NNReal.continuous_coe⟩ δ, hδ₀, hδ⟩\n\n"}
