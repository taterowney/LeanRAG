{"name":"MetricSpace.eq_of_dist_eq_zero","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"Œ± : Type u\nself : MetricSpace Œ±\nx y : Œ±\na‚úù : Eq (Dist.dist x y) 0\n‚ä¢ Eq x y","decl":"/-- We now define `MetricSpace`, extending `PseudoMetricSpace`. -/\nclass MetricSpace (Œ± : Type u) extends PseudoMetricSpace Œ± : Type u where\n  eq_of_dist_eq_zero : ‚àÄ {x y : Œ±}, dist x y = 0 ‚Üí x = y\n\n"}
{"name":"MetricSpace.ext_iff","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"Œ± : Type u_3\nm m' : MetricSpace Œ±\n‚ä¢ Iff (Eq m m') (Eq PseudoMetricSpace.toDist PseudoMetricSpace.toDist)","decl":"/-- Two metric space structures with the same distance coincide. -/\n@[ext]\ntheorem MetricSpace.ext {Œ± : Type*} {m m' : MetricSpace Œ±} (h : m.toDist = m'.toDist) :\n    m = m' := by\n  cases m; cases m'; congr; ext1; assumption\n\n"}
{"name":"MetricSpace.ext","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"Œ± : Type u_3\nm m' : MetricSpace Œ±\nh : Eq PseudoMetricSpace.toDist PseudoMetricSpace.toDist\n‚ä¢ Eq m m'","decl":"/-- Two metric space structures with the same distance coincide. -/\n@[ext]\ntheorem MetricSpace.ext {Œ± : Type*} {m m' : MetricSpace Œ±} (h : m.toDist = m'.toDist) :\n    m = m' := by\n  cases m; cases m'; congr; ext1; assumption\n\n"}
{"name":"eq_of_dist_eq_zero","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"Œ≥ : Type w\ninst‚úù : MetricSpace Œ≥\nx y : Œ≥\na‚úù : Eq (Dist.dist x y) 0\n‚ä¢ Eq x y","decl":"theorem eq_of_dist_eq_zero {x y : Œ≥} : dist x y = 0 ‚Üí x = y :=\n  MetricSpace.eq_of_dist_eq_zero\n\n"}
{"name":"dist_eq_zero","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"Œ≥ : Type w\ninst‚úù : MetricSpace Œ≥\nx y : Œ≥\n‚ä¢ Iff (Eq (Dist.dist x y) 0) (Eq x y)","decl":"@[simp]\ntheorem dist_eq_zero {x y : Œ≥} : dist x y = 0 ‚Üî x = y :=\n  Iff.intro eq_of_dist_eq_zero fun this => this ‚ñ∏ dist_self _\n\n"}
{"name":"zero_eq_dist","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"Œ≥ : Type w\ninst‚úù : MetricSpace Œ≥\nx y : Œ≥\n‚ä¢ Iff (Eq 0 (Dist.dist x y)) (Eq x y)","decl":"@[simp]\ntheorem zero_eq_dist {x y : Œ≥} : 0 = dist x y ‚Üî x = y := by rw [eq_comm, dist_eq_zero]\n\n"}
{"name":"dist_ne_zero","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"Œ≥ : Type w\ninst‚úù : MetricSpace Œ≥\nx y : Œ≥\n‚ä¢ Iff (Ne (Dist.dist x y) 0) (Ne x y)","decl":"theorem dist_ne_zero {x y : Œ≥} : dist x y ‚â† 0 ‚Üî x ‚â† y := by\n  simpa only [not_iff_not] using dist_eq_zero\n\n"}
{"name":"dist_le_zero","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"Œ≥ : Type w\ninst‚úù : MetricSpace Œ≥\nx y : Œ≥\n‚ä¢ Iff (LE.le (Dist.dist x y) 0) (Eq x y)","decl":"@[simp]\ntheorem dist_le_zero {x y : Œ≥} : dist x y ‚â§ 0 ‚Üî x = y := by\n  simpa [le_antisymm_iff, dist_nonneg] using @dist_eq_zero _ _ x y\n\n"}
{"name":"dist_pos","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"Œ≥ : Type w\ninst‚úù : MetricSpace Œ≥\nx y : Œ≥\n‚ä¢ Iff (LT.lt 0 (Dist.dist x y)) (Ne x y)","decl":"@[simp]\ntheorem dist_pos {x y : Œ≥} : 0 < dist x y ‚Üî x ‚â† y := by\n  simpa only [not_le] using not_congr dist_le_zero\n\n"}
{"name":"eq_of_forall_dist_le","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"Œ≥ : Type w\ninst‚úù : MetricSpace Œ≥\nx y : Œ≥\nh : ‚àÄ (Œµ : Real), GT.gt Œµ 0 ‚Üí LE.le (Dist.dist x y) Œµ\n‚ä¢ Eq x y","decl":"theorem eq_of_forall_dist_le {x y : Œ≥} (h : ‚àÄ Œµ > 0, dist x y ‚â§ Œµ) : x = y :=\n  eq_of_dist_eq_zero (eq_of_le_of_forall_lt_imp_le_of_dense dist_nonneg h)\n\n"}
{"name":"eq_of_nndist_eq_zero","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"Œ≥ : Type w\ninst‚úù : MetricSpace Œ≥\nx y : Œ≥\na‚úù : Eq (NNDist.nndist x y) 0\n‚ä¢ Eq x y","decl":"/-- Deduce the equality of points from the vanishing of the nonnegative distance -/\ntheorem eq_of_nndist_eq_zero {x y : Œ≥} : nndist x y = 0 ‚Üí x = y := by\n  simp only [NNReal.eq_iff, ‚Üê dist_nndist, imp_self, NNReal.coe_zero, dist_eq_zero]\n\n"}
{"name":"nndist_eq_zero","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"Œ≥ : Type w\ninst‚úù : MetricSpace Œ≥\nx y : Œ≥\n‚ä¢ Iff (Eq (NNDist.nndist x y) 0) (Eq x y)","decl":"/-- Characterize the equality of points as the vanishing of the nonnegative distance -/\n@[simp]\ntheorem nndist_eq_zero {x y : Œ≥} : nndist x y = 0 ‚Üî x = y := by\n  simp only [NNReal.eq_iff, ‚Üê dist_nndist, imp_self, NNReal.coe_zero, dist_eq_zero]\n\n"}
{"name":"zero_eq_nndist","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"Œ≥ : Type w\ninst‚úù : MetricSpace Œ≥\nx y : Œ≥\n‚ä¢ Iff (Eq 0 (NNDist.nndist x y)) (Eq x y)","decl":"@[simp]\ntheorem zero_eq_nndist {x y : Œ≥} : 0 = nndist x y ‚Üî x = y := by\n  simp only [NNReal.eq_iff, ‚Üê dist_nndist, imp_self, NNReal.coe_zero, zero_eq_dist]\n\n"}
{"name":"Metric.closedBall_zero","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"Œ≥ : Type w\ninst‚úù : MetricSpace Œ≥\nx : Œ≥\n‚ä¢ Eq (Metric.closedBall x 0) (Singleton.singleton x)","decl":"@[simp] theorem closedBall_zero : closedBall x 0 = {x} := Set.ext fun _ => dist_le_zero\n\n"}
{"name":"Metric.sphere_zero","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"Œ≥ : Type w\ninst‚úù : MetricSpace Œ≥\nx : Œ≥\n‚ä¢ Eq (Metric.sphere x 0) (Singleton.singleton x)","decl":"@[simp] theorem sphere_zero : sphere x 0 = {x} := Set.ext fun _ => dist_eq_zero\n\n"}
{"name":"Metric.subsingleton_closedBall","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"Œ≥ : Type w\ninst‚úù : MetricSpace Œ≥\nx : Œ≥\nr : Real\nhr : LE.le r 0\n‚ä¢ (Metric.closedBall x r).Subsingleton","decl":"theorem subsingleton_closedBall (x : Œ≥) {r : ‚Ñù} (hr : r ‚â§ 0) : (closedBall x r).Subsingleton := by\n  rcases hr.lt_or_eq with (hr | rfl)\n  ¬∑ rw [closedBall_eq_empty.2 hr]\n    exact subsingleton_empty\n  ¬∑ rw [closedBall_zero]\n    exact subsingleton_singleton\n\n"}
{"name":"Metric.subsingleton_sphere","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"Œ≥ : Type w\ninst‚úù : MetricSpace Œ≥\nx : Œ≥\nr : Real\nhr : LE.le r 0\n‚ä¢ (Metric.sphere x r).Subsingleton","decl":"theorem subsingleton_sphere (x : Œ≥) {r : ‚Ñù} (hr : r ‚â§ 0) : (sphere x r).Subsingleton :=\n  (subsingleton_closedBall x hr).anti sphere_subset_closedBall\n\n"}
{"name":"MetricSpace.replaceUniformity_eq","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"Œ≥ : Type u_3\nU : UniformSpace Œ≥\nm : MetricSpace Œ≥\nH : Eq (uniformity Œ≥) (uniformity Œ≥)\n‚ä¢ Eq (m.replaceUniformity H) m","decl":"theorem MetricSpace.replaceUniformity_eq {Œ≥} [U : UniformSpace Œ≥] (m : MetricSpace Œ≥)\n    (H : ùì§[U] = ùì§[PseudoEMetricSpace.toUniformSpace]) : m.replaceUniformity H = m := by\n  ext; rfl\n\n"}
{"name":"MetricSpace.replaceTopology_eq","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"Œ≥ : Type u_3\nU : TopologicalSpace Œ≥\nm : MetricSpace Œ≥\nH : Eq U UniformSpace.toTopologicalSpace\n‚ä¢ Eq (m.replaceTopology H) m","decl":"theorem MetricSpace.replaceTopology_eq {Œ≥} [U : TopologicalSpace Œ≥] (m : MetricSpace Œ≥)\n    (H : U = m.toPseudoMetricSpace.toUniformSpace.toTopologicalSpace) :\n    m.replaceTopology H = m := by\n  ext; rfl\n\n"}
{"name":"MetricSpace.replaceBornology_eq","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"Œ± : Type u_3\nm : MetricSpace Œ±\nB : Bornology Œ±\nH : ‚àÄ (s : Set Œ±), Iff (Bornology.IsBounded s) (Bornology.IsBounded s)\n‚ä¢ Eq (m.replaceBornology H) m","decl":"theorem MetricSpace.replaceBornology_eq {Œ±} [m : MetricSpace Œ±] [B : Bornology Œ±]\n    (H : ‚àÄ s, @IsBounded _ B s ‚Üî @IsBounded _ PseudoMetricSpace.toBornology s) :\n    MetricSpace.replaceBornology _ H = m := by\n  ext\n  rfl\n\n"}
{"name":"dist_ofMul","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"X : Type u_1\ninst‚úù : Dist X\na b : X\n‚ä¢ Eq (Dist.dist (Additive.ofMul a) (Additive.ofMul b)) (Dist.dist a b)","decl":"@[simp] theorem dist_ofMul (a b : X) : dist (ofMul a) (ofMul b) = dist a b := rfl\n\n"}
{"name":"dist_ofAdd","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"X : Type u_1\ninst‚úù : Dist X\na b : X\n‚ä¢ Eq (Dist.dist (Multiplicative.ofAdd a) (Multiplicative.ofAdd b)) (Dist.dist a b)","decl":"@[simp] theorem dist_ofAdd (a b : X) : dist (ofAdd a) (ofAdd b) = dist a b := rfl\n\n"}
{"name":"dist_toMul","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"X : Type u_1\ninst‚úù : Dist X\na b : Additive X\n‚ä¢ Eq (Dist.dist (Additive.toMul a) (Additive.toMul b)) (Dist.dist a b)","decl":"@[simp] theorem dist_toMul (a b : Additive X) : dist a.toMul b.toMul = dist a b := rfl\n\n"}
{"name":"dist_toAdd","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"X : Type u_1\ninst‚úù : Dist X\na b : Multiplicative X\n‚ä¢ Eq (Dist.dist (Multiplicative.toAdd a) (Multiplicative.toAdd b)) (Dist.dist a b)","decl":"@[simp] theorem dist_toAdd (a b : Multiplicative X) : dist a.toAdd b.toAdd = dist a b := rfl\n\n"}
{"name":"nndist_ofMul","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"X : Type u_1\ninst‚úù : PseudoMetricSpace X\na b : X\n‚ä¢ Eq (NNDist.nndist (Additive.ofMul a) (Additive.ofMul b)) (NNDist.nndist a b)","decl":"@[simp] theorem nndist_ofMul (a b : X) : nndist (ofMul a) (ofMul b) = nndist a b := rfl\n\n"}
{"name":"nndist_ofAdd","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"X : Type u_1\ninst‚úù : PseudoMetricSpace X\na b : X\n‚ä¢ Eq (NNDist.nndist (Multiplicative.ofAdd a) (Multiplicative.ofAdd b)) (NNDist.nndist a b)","decl":"@[simp] theorem nndist_ofAdd (a b : X) : nndist (ofAdd a) (ofAdd b) = nndist a b := rfl\n\n"}
{"name":"nndist_toMul","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"X : Type u_1\ninst‚úù : PseudoMetricSpace X\na b : Additive X\n‚ä¢ Eq (NNDist.nndist (Additive.toMul a) (Additive.toMul b)) (NNDist.nndist a b)","decl":"@[simp] theorem nndist_toMul (a b : Additive X) : nndist a.toMul b.toMul = nndist a b := rfl\n\n"}
{"name":"nndist_toAdd","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"X : Type u_1\ninst‚úù : PseudoMetricSpace X\na b : Multiplicative X\n‚ä¢ Eq (NNDist.nndist (Multiplicative.toAdd a) (Multiplicative.toAdd b)) (NNDist.nndist a b)","decl":"@[simp]\ntheorem nndist_toAdd (a b : Multiplicative X) : nndist a.toAdd b.toAdd = nndist a b := rfl\n\n"}
{"name":"dist_toDual","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"X : Type u_1\ninst‚úù : Dist X\na b : X\n‚ä¢ Eq (Dist.dist (OrderDual.toDual a) (OrderDual.toDual b)) (Dist.dist a b)","decl":"@[simp] theorem dist_toDual (a b : X) : dist (toDual a) (toDual b) = dist a b := rfl\n\n"}
{"name":"dist_ofDual","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"X : Type u_1\ninst‚úù : Dist X\na b : OrderDual X\n‚ä¢ Eq (Dist.dist (OrderDual.ofDual a) (OrderDual.ofDual b)) (Dist.dist a b)","decl":"@[simp] theorem dist_ofDual (a b : X·µí·µà) : dist (ofDual a) (ofDual b) = dist a b := rfl\n\n"}
{"name":"nndist_toDual","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"X : Type u_1\ninst‚úù : PseudoMetricSpace X\na b : X\n‚ä¢ Eq (NNDist.nndist (OrderDual.toDual a) (OrderDual.toDual b)) (NNDist.nndist a b)","decl":"@[simp] theorem nndist_toDual (a b : X) : nndist (toDual a) (toDual b) = nndist a b := rfl\n\n"}
{"name":"nndist_ofDual","module":"Mathlib.Topology.MetricSpace.Defs","initialProofState":"X : Type u_1\ninst‚úù : PseudoMetricSpace X\na b : OrderDual X\n‚ä¢ Eq (NNDist.nndist (OrderDual.ofDual a) (OrderDual.ofDual b)) (NNDist.nndist a b)","decl":"@[simp] theorem nndist_ofDual (a b : X·µí·µà) : nndist (ofDual a) (ofDual b) = nndist a b := rfl\n\n"}
