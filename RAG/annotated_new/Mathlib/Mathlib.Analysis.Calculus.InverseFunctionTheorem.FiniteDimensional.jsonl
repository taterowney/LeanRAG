{"name":"ApproximatesLinearOn.exists_homeomorph_extension","module":"Mathlib.Analysis.Calculus.InverseFunctionTheorem.FiniteDimensional","initialProofState":"E : Type u_1\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace Real E\nF : Type u_2\ninst✝² : NormedAddCommGroup F\ninst✝¹ : NormedSpace Real F\ninst✝ : FiniteDimensional Real F\ns : Set E\nf : E → F\nf' : ContinuousLinearEquiv (RingHom.id Real) E F\nc : NNReal\nhf : ApproximatesLinearOn f (↑f') s c\nhc : Or (Subsingleton E) (LT.lt (HMul.hMul (lipschitzExtensionConstant F) c) (Inv.inv (NNNorm.nnnorm ↑f'.symm)))\n⊢ Exists fun g => Set.EqOn f (⇑g) s","decl":"/-- In a real vector space, a function `f` that approximates a linear equivalence on a subset `s`\ncan be extended to a homeomorphism of the whole space. -/\ntheorem exists_homeomorph_extension {E : Type*} [NormedAddCommGroup E] [NormedSpace ℝ E]\n    {F : Type*} [NormedAddCommGroup F] [NormedSpace ℝ F] [FiniteDimensional ℝ F] {s : Set E}\n    {f : E → F} {f' : E ≃L[ℝ] F} {c : ℝ≥0} (hf : ApproximatesLinearOn f (f' : E →L[ℝ] F) s c)\n    (hc : Subsingleton E ∨ lipschitzExtensionConstant F * c < ‖(f'.symm : F →L[ℝ] E)‖₊⁻¹) :\n    ∃ g : E ≃ₜ F, EqOn f g s := by\n  -- the difference `f - f'` is Lipschitz on `s`. It can be extended to a Lipschitz function `u`\n  -- on the whole space, with a slightly worse Lipschitz constant. Then `f' + u` will be the\n  -- desired homeomorphism.\n  obtain ⟨u, hu, uf⟩ :\n    ∃ u : E → F, LipschitzWith (lipschitzExtensionConstant F * c) u ∧ EqOn (f - ⇑f') u s :=\n    hf.lipschitzOnWith.extend_finite_dimension\n  let g : E → F := fun x => f' x + u x\n  have fg : EqOn f g s := fun x hx => by simp_rw [g, ← uf hx, Pi.sub_apply, add_sub_cancel]\n  have hg : ApproximatesLinearOn g (f' : E →L[ℝ] F) univ (lipschitzExtensionConstant F * c) := by\n    apply LipschitzOnWith.approximatesLinearOn\n    rw [lipschitzOnWith_univ]\n    convert hu\n    ext x\n    simp only [g, add_sub_cancel_left, ContinuousLinearEquiv.coe_coe, Pi.sub_apply]\n  haveI : FiniteDimensional ℝ E := f'.symm.finiteDimensional\n  exact ⟨hg.toHomeomorph g hc, fg⟩\n\n"}
