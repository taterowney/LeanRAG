{"name":"CategoryTheory.MonoidalLinear.smul_whiskerRight","module":"Mathlib.CategoryTheory.Monoidal.Linear","initialProofState":"R : Type u_1\ninst✝⁵ : Semiring R\nC : Type u_2\ninst✝⁴ : CategoryTheory.Category.{u_3, u_2} C\ninst✝³ : CategoryTheory.Preadditive C\ninst✝² : CategoryTheory.Linear R C\ninst✝¹ : CategoryTheory.MonoidalCategory C\ninst✝ : CategoryTheory.MonoidalPreadditive C\nself : CategoryTheory.MonoidalLinear R C\nr : R\nY Z : C\nf : Quiver.Hom Y Z\nX : C\n⊢ Eq (CategoryTheory.MonoidalCategoryStruct.whiskerRight (HSMul.hSMul r f) X) (HSMul.hSMul r (CategoryTheory.MonoidalCategoryStruct.whiskerRight f X))","decl":"/-- A category is `MonoidalLinear R` if tensoring is `R`-linear in both factors.\n-/\nclass MonoidalLinear [MonoidalPreadditive C] : Prop where\n  whiskerLeft_smul : ∀ (X : C) {Y Z : C} (r : R) (f : Y ⟶ Z) , X ◁ (r • f) = r • (X ◁ f) := by\n    aesop_cat\n  smul_whiskerRight : ∀ (r : R) {Y Z : C} (f : Y ⟶ Z) (X : C), (r • f) ▷ X = r • (f ▷ X) := by\n    aesop_cat\n\n"}
{"name":"CategoryTheory.MonoidalLinear.whiskerLeft_smul","module":"Mathlib.CategoryTheory.Monoidal.Linear","initialProofState":"R : Type u_1\ninst✝⁵ : Semiring R\nC : Type u_2\ninst✝⁴ : CategoryTheory.Category.{u_3, u_2} C\ninst✝³ : CategoryTheory.Preadditive C\ninst✝² : CategoryTheory.Linear R C\ninst✝¹ : CategoryTheory.MonoidalCategory C\ninst✝ : CategoryTheory.MonoidalPreadditive C\nself : CategoryTheory.MonoidalLinear R C\nX Y Z : C\nr : R\nf : Quiver.Hom Y Z\n⊢ Eq (CategoryTheory.MonoidalCategoryStruct.whiskerLeft X (HSMul.hSMul r f)) (HSMul.hSMul r (CategoryTheory.MonoidalCategoryStruct.whiskerLeft X f))","decl":"/-- A category is `MonoidalLinear R` if tensoring is `R`-linear in both factors.\n-/\nclass MonoidalLinear [MonoidalPreadditive C] : Prop where\n  whiskerLeft_smul : ∀ (X : C) {Y Z : C} (r : R) (f : Y ⟶ Z) , X ◁ (r • f) = r • (X ◁ f) := by\n    aesop_cat\n  smul_whiskerRight : ∀ (r : R) {Y Z : C} (f : Y ⟶ Z) (X : C), (r • f) ▷ X = r • (f ▷ X) := by\n    aesop_cat\n\n"}
{"name":"CategoryTheory.tensorLeft_linear","module":"Mathlib.CategoryTheory.Monoidal.Linear","initialProofState":"R : Type u_1\ninst✝⁵ : Semiring R\nC : Type u_2\ninst✝⁴ : CategoryTheory.Category.{u_3, u_2} C\ninst✝³ : CategoryTheory.Preadditive C\ninst✝² : CategoryTheory.Linear R C\ninst✝¹ : CategoryTheory.MonoidalCategory C\ninst✝ : CategoryTheory.MonoidalPreadditive C\nX : C\n⊢ CategoryTheory.Functor.Linear R (CategoryTheory.MonoidalCategory.tensorLeft X)","decl":"instance tensorLeft_linear (X : C) : (tensorLeft X).Linear R where\n\n"}
{"name":"CategoryTheory.tensorRight_linear","module":"Mathlib.CategoryTheory.Monoidal.Linear","initialProofState":"R : Type u_1\ninst✝⁵ : Semiring R\nC : Type u_2\ninst✝⁴ : CategoryTheory.Category.{u_3, u_2} C\ninst✝³ : CategoryTheory.Preadditive C\ninst✝² : CategoryTheory.Linear R C\ninst✝¹ : CategoryTheory.MonoidalCategory C\ninst✝ : CategoryTheory.MonoidalPreadditive C\nX : C\n⊢ CategoryTheory.Functor.Linear R (CategoryTheory.MonoidalCategory.tensorRight X)","decl":"instance tensorRight_linear (X : C) : (tensorRight X).Linear R where\n\n"}
{"name":"CategoryTheory.tensoringLeft_linear","module":"Mathlib.CategoryTheory.Monoidal.Linear","initialProofState":"R : Type u_1\ninst✝⁵ : Semiring R\nC : Type u_2\ninst✝⁴ : CategoryTheory.Category.{u_3, u_2} C\ninst✝³ : CategoryTheory.Preadditive C\ninst✝² : CategoryTheory.Linear R C\ninst✝¹ : CategoryTheory.MonoidalCategory C\ninst✝ : CategoryTheory.MonoidalPreadditive C\nX : C\n⊢ CategoryTheory.Functor.Linear R ((CategoryTheory.MonoidalCategory.tensoringLeft C).obj X)","decl":"instance tensoringLeft_linear (X : C) : ((tensoringLeft C).obj X).Linear R where\n\n"}
{"name":"CategoryTheory.tensoringRight_linear","module":"Mathlib.CategoryTheory.Monoidal.Linear","initialProofState":"R : Type u_1\ninst✝⁵ : Semiring R\nC : Type u_2\ninst✝⁴ : CategoryTheory.Category.{u_3, u_2} C\ninst✝³ : CategoryTheory.Preadditive C\ninst✝² : CategoryTheory.Linear R C\ninst✝¹ : CategoryTheory.MonoidalCategory C\ninst✝ : CategoryTheory.MonoidalPreadditive C\nX : C\n⊢ CategoryTheory.Functor.Linear R ((CategoryTheory.MonoidalCategory.tensoringRight C).obj X)","decl":"instance tensoringRight_linear (X : C) : ((tensoringRight C).obj X).Linear R where\n\n"}
{"name":"CategoryTheory.monoidalLinearOfFaithful","module":"Mathlib.CategoryTheory.Monoidal.Linear","initialProofState":"R : Type u_1\ninst✝¹⁵ : Semiring R\nC : Type u_2\ninst✝¹⁴ : CategoryTheory.Category.{u_5, u_2} C\ninst✝¹³ : CategoryTheory.Preadditive C\ninst✝¹² : CategoryTheory.Linear R C\ninst✝¹¹ : CategoryTheory.MonoidalCategory C\ninst✝¹⁰ : CategoryTheory.MonoidalPreadditive C\ninst✝⁹ : CategoryTheory.MonoidalLinear R C\nD : Type u_3\ninst✝⁸ : CategoryTheory.Category.{u_4, u_3} D\ninst✝⁷ : CategoryTheory.Preadditive D\ninst✝⁶ : CategoryTheory.Linear R D\ninst✝⁵ : CategoryTheory.MonoidalCategory D\ninst✝⁴ : CategoryTheory.MonoidalPreadditive D\nF : CategoryTheory.Functor D C\ninst✝³ : F.Monoidal\ninst✝² : F.Faithful\ninst✝¹ : F.Additive\ninst✝ : CategoryTheory.Functor.Linear R F\n⊢ CategoryTheory.MonoidalLinear R D","decl":"/-- A faithful linear monoidal functor to a linear monoidal category\nensures that the domain is linear monoidal. -/\ntheorem monoidalLinearOfFaithful {D : Type*} [Category D] [Preadditive D] [Linear R D]\n    [MonoidalCategory D] [MonoidalPreadditive D] (F : D ⥤ C) [F.Monoidal] [F.Faithful]\n    [F.Additive] [F.Linear R] : MonoidalLinear R D :=\n  { whiskerLeft_smul := by\n      intros X Y Z r f\n      apply F.map_injective\n      rw [Functor.Monoidal.map_whiskerLeft]\n      simp\n    smul_whiskerRight := by\n      intros r X Y f Z\n      apply F.map_injective\n      rw [Functor.Monoidal.map_whiskerRight]\n      simp }\n\n"}
