{"name":"WithAbs.instNonTrivial","module":"Mathlib.Analysis.Normed.Ring.WithAbs","initialProofState":"R : Type u_1\ninst✝¹ : Semiring R\nv : AbsoluteValue R Real\ninst✝ : Nontrivial R\n⊢ Nontrivial (WithAbs v)","decl":"instance instNonTrivial [Nontrivial R] : Nontrivial (WithAbs v) := inferInstanceAs (Nontrivial R)\n\n"}
{"name":"WithAbs.equiv_zero","module":"Mathlib.Analysis.Normed.Ring.WithAbs","initialProofState":"R : Type u_1\ninst✝ : Semiring R\nv : AbsoluteValue R Real\n⊢ Eq ((WithAbs.equiv v) 0) 0","decl":"@[deprecated \"Use map_zero\" (since := \"2025-01-13\"), simp]\ntheorem equiv_zero : equiv v 0 = 0 := rfl\n\n"}
{"name":"WithAbs.equiv_symm_zero","module":"Mathlib.Analysis.Normed.Ring.WithAbs","initialProofState":"R : Type u_1\ninst✝ : Semiring R\nv : AbsoluteValue R Real\n⊢ Eq ((WithAbs.equiv v).symm 0) 0","decl":"@[deprecated \"Use map_zero\" (since := \"2025-01-13\"), simp]\ntheorem equiv_symm_zero : (equiv v).symm 0 = 0 := rfl\n\n"}
{"name":"WithAbs.equiv_add","module":"Mathlib.Analysis.Normed.Ring.WithAbs","initialProofState":"R : Type u_1\ninst✝ : Semiring R\nv : AbsoluteValue R Real\nx y : WithAbs v\n⊢ Eq ((WithAbs.equiv v) (HAdd.hAdd x y)) (HAdd.hAdd ((WithAbs.equiv v) x) ((WithAbs.equiv v) y))","decl":"@[deprecated \"Use map_add\" (since := \"2025-01-13\"), simp]\ntheorem equiv_add : equiv v (x + y) = equiv v x + equiv v y := rfl\n\n"}
{"name":"WithAbs.equiv_symm_add","module":"Mathlib.Analysis.Normed.Ring.WithAbs","initialProofState":"R : Type u_1\ninst✝ : Semiring R\nv : AbsoluteValue R Real\nr s : R\n⊢ Eq ((WithAbs.equiv v).symm (HAdd.hAdd r s)) (HAdd.hAdd ((WithAbs.equiv v).symm r) ((WithAbs.equiv v).symm s))","decl":"@[deprecated \"Use map_add\" (since := \"2025-01-13\"), simp]\ntheorem equiv_symm_add :\n    (equiv v).symm (r + s) = (equiv v).symm r + (equiv v).symm s :=\n  rfl\n\n"}
{"name":"WithAbs.equiv_sub","module":"Mathlib.Analysis.Normed.Ring.WithAbs","initialProofState":"R' : Type u_2\ninst✝ : Ring R'\nv' : AbsoluteValue R' Real\nx' y' : WithAbs v'\n⊢ Eq ((WithAbs.equiv v') (HSub.hSub x' y')) (HSub.hSub ((WithAbs.equiv v') x') ((WithAbs.equiv v') y'))","decl":"@[deprecated \"Use map_sub\" (since := \"2025-01-13\"), simp]\ntheorem equiv_sub : equiv v' (x' - y') = equiv v' x' - equiv v' y' := rfl\n\n"}
{"name":"WithAbs.equiv_symm_sub","module":"Mathlib.Analysis.Normed.Ring.WithAbs","initialProofState":"R' : Type u_2\ninst✝ : Ring R'\nv' : AbsoluteValue R' Real\nr' s' : R'\n⊢ Eq ((WithAbs.equiv v').symm (HSub.hSub r' s')) (HSub.hSub ((WithAbs.equiv v').symm r') ((WithAbs.equiv v').symm s'))","decl":"@[deprecated \"Use map_sub\" (since := \"2025-01-13\"), simp]\ntheorem equiv_symm_sub :\n    (equiv v').symm (r' - s') = (equiv v').symm r' - (equiv v').symm s' :=\n  rfl\n\n"}
{"name":"WithAbs.equiv_neg","module":"Mathlib.Analysis.Normed.Ring.WithAbs","initialProofState":"R' : Type u_2\ninst✝ : Ring R'\nv' : AbsoluteValue R' Real\nx' : WithAbs v'\n⊢ Eq ((WithAbs.equiv v') (Neg.neg x')) (Neg.neg ((WithAbs.equiv v') x'))","decl":"@[deprecated \"Use map_neg\" (since := \"2025-01-13\"), simp]\ntheorem equiv_neg : equiv v' (-x') = - equiv v' x' := rfl\n\n"}
{"name":"WithAbs.equiv_symm_neg","module":"Mathlib.Analysis.Normed.Ring.WithAbs","initialProofState":"R' : Type u_2\ninst✝ : Ring R'\nv' : AbsoluteValue R' Real\nr' : R'\n⊢ Eq ((WithAbs.equiv v').symm (Neg.neg r')) (Neg.neg ((WithAbs.equiv v').symm r'))","decl":"@[deprecated \"Use map_neg\" (since := \"2025-01-13\"), simp]\ntheorem equiv_symm_neg : (equiv v').symm (-r') = - (equiv v').symm r' := rfl\n\n"}
{"name":"WithAbs.equiv_mul","module":"Mathlib.Analysis.Normed.Ring.WithAbs","initialProofState":"R : Type u_1\ninst✝ : Semiring R\nv : AbsoluteValue R Real\nx y : WithAbs v\n⊢ Eq ((WithAbs.equiv v) (HMul.hMul x y)) (HMul.hMul ((WithAbs.equiv v) x) ((WithAbs.equiv v) y))","decl":"@[deprecated \"Use map_mul\" (since := \"2025-01-13\"), simp]\ntheorem equiv_mul : equiv v (x * y) = equiv v x * equiv v y := rfl\n\n"}
{"name":"WithAbs.equiv_symm_mul","module":"Mathlib.Analysis.Normed.Ring.WithAbs","initialProofState":"R : Type u_1\ninst✝ : Semiring R\nv : AbsoluteValue R Real\nx y : WithAbs v\n⊢ Eq ((WithAbs.equiv v).symm (HMul.hMul x y)) (HMul.hMul ((WithAbs.equiv v).symm x) ((WithAbs.equiv v).symm y))","decl":"@[deprecated \"Use map_mul\" (since := \"2025-01-13\"), simp]\ntheorem equiv_symm_mul :\n    (equiv v).symm (x * y) = (equiv v).symm x * (equiv v).symm y :=\n  rfl\n\n"}
{"name":"WithAbs.isometry_of_comp","module":"Mathlib.Analysis.Normed.Ring.WithAbs","initialProofState":"K : Type u_5\ninst✝¹ : Field K\nv : AbsoluteValue K Real\nL : Type u_6\ninst✝ : NormedField L\nf : RingHom (WithAbs v) L\nh : ∀ (x : WithAbs v), Eq (Norm.norm (f x)) (v x)\n⊢ Isometry ⇑f","decl":"/-- If the absolute value `v` factors through an embedding `f` into a normed field, then\n`f` is an isometry. -/\ntheorem isometry_of_comp (h : ∀ x, ‖f x‖ = v x) : Isometry f :=\n  Isometry.of_dist_eq <| fun x y => by simp only [‹NormedField L›.dist_eq, ← f.map_sub, h]; rfl\n\n"}
{"name":"WithAbs.pseudoMetricSpace_induced_of_comp","module":"Mathlib.Analysis.Normed.Ring.WithAbs","initialProofState":"K : Type u_5\ninst✝¹ : Field K\nv : AbsoluteValue K Real\nL : Type u_6\ninst✝ : NormedField L\nf : RingHom (WithAbs v) L\nh : ∀ (x : WithAbs v), Eq (Norm.norm (f x)) (v x)\n⊢ Eq (PseudoMetricSpace.induced (⇑f) inferInstance) MetricSpace.toPseudoMetricSpace","decl":"/-- If the absolute value `v` factors through an embedding `f` into a normed field, then\nthe pseudo metric space associated to the absolute value is the same as the pseudo metric space\ninduced by `f`. -/\ntheorem pseudoMetricSpace_induced_of_comp (h : ∀ x, ‖f x‖ = v x) :\n    PseudoMetricSpace.induced f inferInstance = (normedField v).toPseudoMetricSpace := by\n  ext; exact isometry_of_comp h |>.dist_eq _ _\n\n"}
{"name":"WithAbs.uniformSpace_comap_eq_of_comp","module":"Mathlib.Analysis.Normed.Ring.WithAbs","initialProofState":"K : Type u_5\ninst✝¹ : Field K\nv : AbsoluteValue K Real\nL : Type u_6\ninst✝ : NormedField L\nf : RingHom (WithAbs v) L\nh : ∀ (x : WithAbs v), Eq (Norm.norm (f x)) (v x)\n⊢ Eq (UniformSpace.comap (⇑f) inferInstance) PseudoMetricSpace.toUniformSpace","decl":"/-- If the absolute value `v` factors through an embedding `f` into a normed field, then\nthe uniform structure associated to the absolute value is the same as the uniform structure\ninduced by `f`. -/\ntheorem uniformSpace_comap_eq_of_comp (h : ∀ x, ‖f x‖ = v x) :\n    UniformSpace.comap f inferInstance = (normedField v).toUniformSpace := by\n  simp only [← pseudoMetricSpace_induced_of_comp h, PseudoMetricSpace.toUniformSpace]\n\n"}
{"name":"WithAbs.isUniformInducing_of_comp","module":"Mathlib.Analysis.Normed.Ring.WithAbs","initialProofState":"K : Type u_5\ninst✝¹ : Field K\nv : AbsoluteValue K Real\nL : Type u_6\ninst✝ : NormedField L\nf : RingHom (WithAbs v) L\nh : ∀ (x : WithAbs v), Eq (Norm.norm (f x)) (v x)\n⊢ IsUniformInducing ⇑f","decl":"/-- If the absolute value `v` factors through an embedding `f` into a normed field, then\n`f` is uniform inducing. -/\ntheorem isUniformInducing_of_comp (h : ∀ x, ‖f x‖ = v x) : IsUniformInducing f :=\n  isUniformInducing_iff_uniformSpace.2 <| uniformSpace_comap_eq_of_comp h\n\n"}
{"name":"AbsoluteValue.Completion.extensionEmbedding_of_comp_coe","module":"Mathlib.Analysis.Normed.Ring.WithAbs","initialProofState":"K : Type u_1\ninst✝² : Field K\nv : AbsoluteValue K Real\nL : Type u_2\ninst✝¹ : NormedField L\ninst✝ : CompleteSpace L\nf : RingHom (WithAbs v) L\nh : ∀ (x : WithAbs v), Eq (Norm.norm (f x)) (v x)\nx : K\n⊢ Eq ((AbsoluteValue.Completion.extensionEmbedding_of_comp h) ↑x) (f x)","decl":"theorem extensionEmbedding_of_comp_coe (h : ∀ x, ‖f x‖ = v x) (x : K) :\n    extensionEmbedding_of_comp h x = f x := by\n  rw [← UniformSpace.Completion.extensionHom_coe f\n    (WithAbs.isUniformInducing_of_comp h).uniformContinuous.continuous]\n\n"}
{"name":"AbsoluteValue.Completion.extensionEmbedding_dist_eq_of_comp","module":"Mathlib.Analysis.Normed.Ring.WithAbs","initialProofState":"K : Type u_1\ninst✝² : Field K\nv : AbsoluteValue K Real\nL : Type u_2\ninst✝¹ : NormedField L\ninst✝ : CompleteSpace L\nf : RingHom (WithAbs v) L\nh : ∀ (x : WithAbs v), Eq (Norm.norm (f x)) (v x)\nx y : v.Completion\n⊢ Eq (Dist.dist ((AbsoluteValue.Completion.extensionEmbedding_of_comp h) x) ((AbsoluteValue.Completion.extensionEmbedding_of_comp h) y)) (Dist.dist x y)","decl":"/-- If the absolute value of a normed field factors through an embedding into another normed field,\nthen the extended embedding `v.Completion →+* L` preserves distances. -/\ntheorem extensionEmbedding_dist_eq_of_comp (h : ∀ x, ‖f x‖ = v x) (x y : v.Completion) :\n    dist (extensionEmbedding_of_comp h x) (extensionEmbedding_of_comp h y) =\n      dist x y := by\n  refine UniformSpace.Completion.induction_on₂ x y ?_ (fun x y => ?_)\n  · refine isClosed_eq ?_ continuous_dist\n    exact continuous_iff_continuous_dist.1 UniformSpace.Completion.continuous_extension\n  · simp only [extensionEmbedding_of_comp_coe]\n    exact UniformSpace.Completion.dist_eq x y ▸ (WithAbs.isometry_of_comp h).dist_eq _ _\n\n"}
{"name":"AbsoluteValue.Completion.isometry_extensionEmbedding_of_comp","module":"Mathlib.Analysis.Normed.Ring.WithAbs","initialProofState":"K : Type u_1\ninst✝² : Field K\nv : AbsoluteValue K Real\nL : Type u_2\ninst✝¹ : NormedField L\ninst✝ : CompleteSpace L\nf : RingHom (WithAbs v) L\nh : ∀ (x : WithAbs v), Eq (Norm.norm (f x)) (v x)\n⊢ Isometry ⇑(AbsoluteValue.Completion.extensionEmbedding_of_comp h)","decl":"/-- If the absolute value of a normed field factors through an embedding into another normed field,\nthen the extended embedding `v.Completion →+* L` is an isometry. -/\ntheorem isometry_extensionEmbedding_of_comp (h : ∀ x, ‖f x‖ = v x) :\n    Isometry (extensionEmbedding_of_comp h) :=\n  Isometry.of_dist_eq <| extensionEmbedding_dist_eq_of_comp h\n\n"}
{"name":"AbsoluteValue.Completion.isClosedEmbedding_extensionEmbedding_of_comp","module":"Mathlib.Analysis.Normed.Ring.WithAbs","initialProofState":"K : Type u_1\ninst✝² : Field K\nv : AbsoluteValue K Real\nL : Type u_2\ninst✝¹ : NormedField L\ninst✝ : CompleteSpace L\nf : RingHom (WithAbs v) L\nh : ∀ (x : WithAbs v), Eq (Norm.norm (f x)) (v x)\n⊢ Topology.IsClosedEmbedding ⇑(AbsoluteValue.Completion.extensionEmbedding_of_comp h)","decl":"/-- If the absolute value of a normed field factors through an embedding into another normed field,\nthen the extended embedding `v.Completion →+* L` is a closed embedding. -/\ntheorem isClosedEmbedding_extensionEmbedding_of_comp (h : ∀ x, ‖f x‖ = v x) :\n    IsClosedEmbedding (extensionEmbedding_of_comp h) :=\n  (isometry_extensionEmbedding_of_comp h).isClosedEmbedding\n\n"}
{"name":"AbsoluteValue.Completion.locallyCompactSpace","module":"Mathlib.Analysis.Normed.Ring.WithAbs","initialProofState":"K : Type u_1\ninst✝³ : Field K\nv : AbsoluteValue K Real\nL : Type u_2\ninst✝² : NormedField L\ninst✝¹ : CompleteSpace L\nf : RingHom (WithAbs v) L\ninst✝ : LocallyCompactSpace L\nh : ∀ (x : WithAbs v), Eq (Norm.norm (f x)) (v x)\n⊢ LocallyCompactSpace v.Completion","decl":"/-- If the absolute value of a normed field factors through an embedding into another normed field\nthat is locally compact, then the completion of the first normed field is also locally compact. -/\ntheorem locallyCompactSpace [LocallyCompactSpace L] (h : ∀ x, ‖f x‖ = v x)  :\n    LocallyCompactSpace (v.Completion) :=\n  (isClosedEmbedding_extensionEmbedding_of_comp h).locallyCompactSpace\n\n"}
