{"name":"MvPolynomial.polynomial_eval_eval₂","module":"Mathlib.Algebra.MvPolynomial.Polynomial","initialProofState":"R : Type u_1\nS : Type u_2\nσ : Type u_3\ninst✝¹ : CommSemiring R\ninst✝ : CommSemiring S\nx : S\nf : RingHom R (Polynomial S)\ng : σ → Polynomial S\np : MvPolynomial σ R\n⊢ Eq (Polynomial.eval x (MvPolynomial.eval₂ f g p)) (MvPolynomial.eval₂ ((Polynomial.evalRingHom x).comp f) (fun s => Polynomial.eval x (g s)) p)","decl":"theorem polynomial_eval_eval₂ [CommSemiring R] [CommSemiring S]\n    {x : S} (f : R →+* Polynomial S) (g : σ → Polynomial S) (p : MvPolynomial σ R) :\n    Polynomial.eval x (eval₂ f g p) =\n      eval₂ ((Polynomial.evalRingHom x).comp f) (fun s => Polynomial.eval x (g s)) p := by\n  apply induction_on p\n  · simp\n  · intro p q hp hq\n    simp [hp, hq]\n  · intro p n hp\n    simp [hp]\n\n"}
{"name":"MvPolynomial.eval_polynomial_eval_finSuccEquiv","module":"Mathlib.Algebra.MvPolynomial.Polynomial","initialProofState":"R : Type u_1\nn : Nat\nx : Fin n → R\ninst✝ : CommSemiring R\nf : MvPolynomial (Fin (HAdd.hAdd n 1)) R\nq : MvPolynomial (Fin n) R\n⊢ Eq ((MvPolynomial.eval x) (Polynomial.eval q ((MvPolynomial.finSuccEquiv R n) f))) ((MvPolynomial.eval fun i => Fin.cases ((MvPolynomial.eval x) q) x i) f)","decl":"theorem eval_polynomial_eval_finSuccEquiv {n : ℕ} {x : Fin n → R}\n    [CommSemiring R] (f : MvPolynomial (Fin (n + 1)) R) (q : MvPolynomial (Fin n) R) :\n    (eval x) (Polynomial.eval q (finSuccEquiv R n f)) = eval (Fin.cases (eval x q) x) f := by\n  simp only [finSuccEquiv_apply, coe_eval₂Hom, polynomial_eval_eval₂, eval_eval₂]\n  conv in RingHom.comp _ _ =>\n    refine @RingHom.ext _ _ _ _ _ (RingHom.id _) fun r => ?_\n    simp\n  simp only [eval₂_id]\n  congr\n  funext i\n  refine Fin.cases (by simp) (by simp) i\n\n"}
