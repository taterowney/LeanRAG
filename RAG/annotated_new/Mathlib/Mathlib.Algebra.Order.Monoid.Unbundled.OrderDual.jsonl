{"name":"OrderDual.mulLeftReflectLE","module":"Mathlib.Algebra.Order.Monoid.Unbundled.OrderDual","initialProofState":"α : Type u\ninst✝¹ : LE α\ninst✝ : Mul α\nc : MulLeftReflectLE α\n⊢ MulLeftReflectLE (OrderDual α)","decl":"@[to_additive]\ninstance mulLeftReflectLE [LE α] [Mul α] [c : MulLeftReflectLE α] : MulLeftReflectLE αᵒᵈ :=\n  ⟨c.1.flip⟩\n\n"}
{"name":"OrderDual.addLeftReflectLE","module":"Mathlib.Algebra.Order.Monoid.Unbundled.OrderDual","initialProofState":"α : Type u\ninst✝¹ : LE α\ninst✝ : Add α\nc : AddLeftReflectLE α\n⊢ AddLeftReflectLE (OrderDual α)","decl":"@[to_additive]\ninstance mulLeftReflectLE [LE α] [Mul α] [c : MulLeftReflectLE α] : MulLeftReflectLE αᵒᵈ :=\n  ⟨c.1.flip⟩\n\n"}
{"name":"OrderDual.mulLeftMono","module":"Mathlib.Algebra.Order.Monoid.Unbundled.OrderDual","initialProofState":"α : Type u\ninst✝¹ : LE α\ninst✝ : Mul α\nc : MulLeftMono α\n⊢ MulLeftMono (OrderDual α)","decl":"@[to_additive]\ninstance mulLeftMono [LE α] [Mul α] [c : MulLeftMono α] : MulLeftMono αᵒᵈ :=\n  ⟨c.1.flip⟩\n\n"}
{"name":"OrderDual.addLeftMono","module":"Mathlib.Algebra.Order.Monoid.Unbundled.OrderDual","initialProofState":"α : Type u\ninst✝¹ : LE α\ninst✝ : Add α\nc : AddLeftMono α\n⊢ AddLeftMono (OrderDual α)","decl":"@[to_additive]\ninstance mulLeftMono [LE α] [Mul α] [c : MulLeftMono α] : MulLeftMono αᵒᵈ :=\n  ⟨c.1.flip⟩\n\n"}
{"name":"OrderDual.addRightReflectLE","module":"Mathlib.Algebra.Order.Monoid.Unbundled.OrderDual","initialProofState":"α : Type u\ninst✝¹ : LE α\ninst✝ : Add α\nc : AddRightReflectLE α\n⊢ AddRightReflectLE (OrderDual α)","decl":"@[to_additive]\ninstance mulRightReflectLE [LE α] [Mul α] [c : MulRightReflectLE α] : MulRightReflectLE αᵒᵈ :=\n  ⟨c.1.flip⟩\n\n"}
{"name":"OrderDual.mulRightReflectLE","module":"Mathlib.Algebra.Order.Monoid.Unbundled.OrderDual","initialProofState":"α : Type u\ninst✝¹ : LE α\ninst✝ : Mul α\nc : MulRightReflectLE α\n⊢ MulRightReflectLE (OrderDual α)","decl":"@[to_additive]\ninstance mulRightReflectLE [LE α] [Mul α] [c : MulRightReflectLE α] : MulRightReflectLE αᵒᵈ :=\n  ⟨c.1.flip⟩\n\n"}
{"name":"OrderDual.mulRightMono","module":"Mathlib.Algebra.Order.Monoid.Unbundled.OrderDual","initialProofState":"α : Type u\ninst✝¹ : LE α\ninst✝ : Mul α\nc : MulRightMono α\n⊢ MulRightMono (OrderDual α)","decl":"@[to_additive]\ninstance mulRightMono [LE α] [Mul α] [c : MulRightMono α] : MulRightMono αᵒᵈ :=\n  ⟨c.1.flip⟩\n\n"}
{"name":"OrderDual.addRightMono","module":"Mathlib.Algebra.Order.Monoid.Unbundled.OrderDual","initialProofState":"α : Type u\ninst✝¹ : LE α\ninst✝ : Add α\nc : AddRightMono α\n⊢ AddRightMono (OrderDual α)","decl":"@[to_additive]\ninstance mulRightMono [LE α] [Mul α] [c : MulRightMono α] : MulRightMono αᵒᵈ :=\n  ⟨c.1.flip⟩\n\n"}
{"name":"OrderDual.mulLeftReflectLT","module":"Mathlib.Algebra.Order.Monoid.Unbundled.OrderDual","initialProofState":"α : Type u\ninst✝¹ : LT α\ninst✝ : Mul α\nc : MulLeftReflectLT α\n⊢ MulLeftReflectLT (OrderDual α)","decl":"@[to_additive]\ninstance mulLeftReflectLT [LT α] [Mul α] [c : MulLeftReflectLT α] : MulLeftReflectLT αᵒᵈ :=\n  ⟨c.1.flip⟩\n\n"}
{"name":"OrderDual.addLeftReflectLT","module":"Mathlib.Algebra.Order.Monoid.Unbundled.OrderDual","initialProofState":"α : Type u\ninst✝¹ : LT α\ninst✝ : Add α\nc : AddLeftReflectLT α\n⊢ AddLeftReflectLT (OrderDual α)","decl":"@[to_additive]\ninstance mulLeftReflectLT [LT α] [Mul α] [c : MulLeftReflectLT α] : MulLeftReflectLT αᵒᵈ :=\n  ⟨c.1.flip⟩\n\n"}
{"name":"OrderDual.mulLeftStrictMono","module":"Mathlib.Algebra.Order.Monoid.Unbundled.OrderDual","initialProofState":"α : Type u\ninst✝¹ : LT α\ninst✝ : Mul α\nc : MulLeftStrictMono α\n⊢ MulLeftStrictMono (OrderDual α)","decl":"@[to_additive]\ninstance mulLeftStrictMono [LT α] [Mul α] [c : MulLeftStrictMono α] : MulLeftStrictMono αᵒᵈ :=\n  ⟨c.1.flip⟩\n\n"}
{"name":"OrderDual.addLeftStrictMono","module":"Mathlib.Algebra.Order.Monoid.Unbundled.OrderDual","initialProofState":"α : Type u\ninst✝¹ : LT α\ninst✝ : Add α\nc : AddLeftStrictMono α\n⊢ AddLeftStrictMono (OrderDual α)","decl":"@[to_additive]\ninstance mulLeftStrictMono [LT α] [Mul α] [c : MulLeftStrictMono α] : MulLeftStrictMono αᵒᵈ :=\n  ⟨c.1.flip⟩\n\n"}
{"name":"OrderDual.mulRightReflectLT","module":"Mathlib.Algebra.Order.Monoid.Unbundled.OrderDual","initialProofState":"α : Type u\ninst✝¹ : LT α\ninst✝ : Mul α\nc : MulRightReflectLT α\n⊢ MulRightReflectLT (OrderDual α)","decl":"@[to_additive]\ninstance mulRightReflectLT [LT α] [Mul α] [c : MulRightReflectLT α] : MulRightReflectLT αᵒᵈ :=\n  ⟨c.1.flip⟩\n\n"}
{"name":"OrderDual.addRightReflectLT","module":"Mathlib.Algebra.Order.Monoid.Unbundled.OrderDual","initialProofState":"α : Type u\ninst✝¹ : LT α\ninst✝ : Add α\nc : AddRightReflectLT α\n⊢ AddRightReflectLT (OrderDual α)","decl":"@[to_additive]\ninstance mulRightReflectLT [LT α] [Mul α] [c : MulRightReflectLT α] : MulRightReflectLT αᵒᵈ :=\n  ⟨c.1.flip⟩\n\n"}
{"name":"OrderDual.addRightStrictMono","module":"Mathlib.Algebra.Order.Monoid.Unbundled.OrderDual","initialProofState":"α : Type u\ninst✝¹ : LT α\ninst✝ : Add α\nc : AddRightStrictMono α\n⊢ AddRightStrictMono (OrderDual α)","decl":"@[to_additive]\ninstance mulRightStrictMono [LT α] [Mul α] [c : MulRightStrictMono α] : MulRightStrictMono αᵒᵈ :=\n  ⟨c.1.flip⟩\n\n"}
{"name":"OrderDual.mulRightStrictMono","module":"Mathlib.Algebra.Order.Monoid.Unbundled.OrderDual","initialProofState":"α : Type u\ninst✝¹ : LT α\ninst✝ : Mul α\nc : MulRightStrictMono α\n⊢ MulRightStrictMono (OrderDual α)","decl":"@[to_additive]\ninstance mulRightStrictMono [LT α] [Mul α] [c : MulRightStrictMono α] : MulRightStrictMono αᵒᵈ :=\n  ⟨c.1.flip⟩\n\n"}
