{"name":"Matrix.SpecialLinearGroup.ext_iff","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝² : DecidableEq n\ninst✝¹ : Fintype n\nR : Type v\ninst✝ : CommRing R\nA B : Matrix.SpecialLinearGroup n R\n⊢ Iff (Eq A B) (∀ (i j : n), Eq (↑A i j) (↑B i j))","decl":"theorem ext_iff (A B : SpecialLinearGroup n R) : A = B ↔ ∀ i j, A i j = B i j :=\n  Subtype.ext_iff.trans Matrix.ext_iff.symm\n\n"}
{"name":"Matrix.SpecialLinearGroup.ext","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝² : DecidableEq n\ninst✝¹ : Fintype n\nR : Type v\ninst✝ : CommRing R\nA B : Matrix.SpecialLinearGroup n R\na✝ : ∀ (i j : n), Eq (↑A i j) (↑B i j)\n⊢ Eq A B","decl":"@[ext]\ntheorem ext (A B : SpecialLinearGroup n R) : (∀ i j, A i j = B i j) → A = B :=\n  (SpecialLinearGroup.ext_iff A B).mpr\n\n"}
{"name":"Matrix.SpecialLinearGroup.subsingleton_of_subsingleton","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝³ : DecidableEq n\ninst✝² : Fintype n\nR : Type v\ninst✝¹ : CommRing R\ninst✝ : Subsingleton n\n⊢ Subsingleton (Matrix.SpecialLinearGroup n R)","decl":"instance subsingleton_of_subsingleton [Subsingleton n] : Subsingleton (SpecialLinearGroup n R) := by\n  refine ⟨fun ⟨A, hA⟩ ⟨B, hB⟩ ↦ ?_⟩\n  ext i j\n  rcases isEmpty_or_nonempty n with hn | hn; · exfalso; exact IsEmpty.false i\n  rw [det_eq_elem_of_subsingleton _ i] at hA hB\n  simp only [Subsingleton.elim j i, hA, hB]\n\n"}
{"name":"Matrix.SpecialLinearGroup.instFinite","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝³ : DecidableEq n\ninst✝² : Fintype n\nR : Type v\ninst✝¹ : CommRing R\ninst✝ : Finite R\n⊢ Finite (Matrix.SpecialLinearGroup n R)","decl":"instance [Finite R] : Finite (SpecialLinearGroup n R) := Subtype.finite\n\n"}
{"name":"Matrix.SpecialLinearGroup.coe_mk","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝² : DecidableEq n\ninst✝¹ : Fintype n\nR : Type v\ninst✝ : CommRing R\nA : Matrix n n R\nh : Eq A.det 1\n⊢ Eq (↑⟨A, h⟩) A","decl":"theorem coe_mk (A : Matrix n n R) (h : det A = 1) : ↑(⟨A, h⟩ : SpecialLinearGroup n R) = A :=\n  rfl\n\n"}
{"name":"Matrix.SpecialLinearGroup.coe_inv","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝² : DecidableEq n\ninst✝¹ : Fintype n\nR : Type v\ninst✝ : CommRing R\nA : Matrix.SpecialLinearGroup n R\n⊢ Eq (↑(Inv.inv A)) (↑A).adjugate","decl":"@[simp]\ntheorem coe_inv : ↑ₘ(A⁻¹) = adjugate A :=\n  rfl\n\n"}
{"name":"Matrix.SpecialLinearGroup.coe_mul","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝² : DecidableEq n\ninst✝¹ : Fintype n\nR : Type v\ninst✝ : CommRing R\nA B : Matrix.SpecialLinearGroup n R\n⊢ Eq (↑(HMul.hMul A B)) (HMul.hMul ↑A ↑B)","decl":"@[simp]\ntheorem coe_mul : ↑ₘ(A * B) = ↑ₘA * ↑ₘB :=\n  rfl\n\n"}
{"name":"Matrix.SpecialLinearGroup.coe_one","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝² : DecidableEq n\ninst✝¹ : Fintype n\nR : Type v\ninst✝ : CommRing R\n⊢ Eq (↑1) 1","decl":"@[simp]\ntheorem coe_one : (1 : SpecialLinearGroup n R) = (1 : Matrix n n R) :=\n  rfl\n\n"}
{"name":"Matrix.SpecialLinearGroup.det_coe","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝² : DecidableEq n\ninst✝¹ : Fintype n\nR : Type v\ninst✝ : CommRing R\nA : Matrix.SpecialLinearGroup n R\n⊢ Eq (↑A).det 1","decl":"@[simp]\ntheorem det_coe : det ↑ₘA = 1 :=\n  A.2\n\n"}
{"name":"Matrix.SpecialLinearGroup.coe_pow","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝² : DecidableEq n\ninst✝¹ : Fintype n\nR : Type v\ninst✝ : CommRing R\nA : Matrix.SpecialLinearGroup n R\nm : Nat\n⊢ Eq (↑(HPow.hPow A m)) (HPow.hPow (↑A) m)","decl":"@[simp]\ntheorem coe_pow (m : ℕ) : ↑ₘ(A ^ m) = ↑ₘA ^ m :=\n  rfl\n\n"}
{"name":"Matrix.SpecialLinearGroup.coe_transpose","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝² : DecidableEq n\ninst✝¹ : Fintype n\nR : Type v\ninst✝ : CommRing R\nA : Matrix.SpecialLinearGroup n R\n⊢ Eq (↑A.transpose) (↑A).transpose","decl":"@[simp]\nlemma coe_transpose (A : SpecialLinearGroup n R) : ↑ₘAᵀ = (↑ₘA)ᵀ :=\n  rfl\n\n"}
{"name":"Matrix.SpecialLinearGroup.det_ne_zero","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝³ : DecidableEq n\ninst✝² : Fintype n\nR : Type v\ninst✝¹ : CommRing R\ninst✝ : Nontrivial R\ng : Matrix.SpecialLinearGroup n R\n⊢ Ne (↑g).det 0","decl":"theorem det_ne_zero [Nontrivial R] (g : SpecialLinearGroup n R) : det ↑ₘg ≠ 0 := by\n  rw [g.det_coe]\n  norm_num\n\n"}
{"name":"Matrix.SpecialLinearGroup.row_ne_zero","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝³ : DecidableEq n\ninst✝² : Fintype n\nR : Type v\ninst✝¹ : CommRing R\ninst✝ : Nontrivial R\ng : Matrix.SpecialLinearGroup n R\ni : n\n⊢ Ne (↑g i) 0","decl":"theorem row_ne_zero [Nontrivial R] (g : SpecialLinearGroup n R) (i : n) : g i ≠ 0 := fun h =>\n  g.det_ne_zero <| det_eq_zero_of_row_eq_zero i <| by simp [h]\n\n"}
{"name":"Matrix.SpecialLinearGroup.toLin'_apply","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝² : DecidableEq n\ninst✝¹ : Fintype n\nR : Type v\ninst✝ : CommRing R\nA : Matrix.SpecialLinearGroup n R\nv : n → R\n⊢ Eq ((Matrix.SpecialLinearGroup.toLin' A) v) ((Matrix.toLin' ↑A) v)","decl":"theorem toLin'_apply (A : SpecialLinearGroup n R) (v : n → R) :\n    SpecialLinearGroup.toLin' A v = Matrix.toLin' (↑ₘA) v :=\n  rfl\n\n"}
{"name":"Matrix.SpecialLinearGroup.toLin'_to_linearMap","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝² : DecidableEq n\ninst✝¹ : Fintype n\nR : Type v\ninst✝ : CommRing R\nA : Matrix.SpecialLinearGroup n R\n⊢ Eq (↑(Matrix.SpecialLinearGroup.toLin' A)) (Matrix.toLin' ↑A)","decl":"theorem toLin'_to_linearMap (A : SpecialLinearGroup n R) :\n    ↑(SpecialLinearGroup.toLin' A) = Matrix.toLin' ↑ₘA :=\n  rfl\n\n"}
{"name":"Matrix.SpecialLinearGroup.toLin'_symm_apply","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝² : DecidableEq n\ninst✝¹ : Fintype n\nR : Type v\ninst✝ : CommRing R\nA : Matrix.SpecialLinearGroup n R\nv : n → R\n⊢ Eq ((Matrix.SpecialLinearGroup.toLin' A).symm v) ((Matrix.toLin' ↑(Inv.inv A)) v)","decl":"theorem toLin'_symm_apply (A : SpecialLinearGroup n R) (v : n → R) :\n    A.toLin'.symm v = Matrix.toLin' (↑ₘA⁻¹) v :=\n  rfl\n\n"}
{"name":"Matrix.SpecialLinearGroup.toLin'_symm_to_linearMap","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝² : DecidableEq n\ninst✝¹ : Fintype n\nR : Type v\ninst✝ : CommRing R\nA : Matrix.SpecialLinearGroup n R\n⊢ Eq (↑(Matrix.SpecialLinearGroup.toLin' A).symm) (Matrix.toLin' ↑(Inv.inv A))","decl":"theorem toLin'_symm_to_linearMap (A : SpecialLinearGroup n R) :\n    ↑A.toLin'.symm = Matrix.toLin' ↑ₘA⁻¹ :=\n  rfl\n\n"}
{"name":"Matrix.SpecialLinearGroup.toLin'_injective","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝² : DecidableEq n\ninst✝¹ : Fintype n\nR : Type v\ninst✝ : CommRing R\n⊢ Function.Injective ⇑Matrix.SpecialLinearGroup.toLin'","decl":"theorem toLin'_injective :\n    Function.Injective ↑(toLin' : SpecialLinearGroup n R →* (n → R) ≃ₗ[R] n → R) := fun _ _ h =>\n  Subtype.coe_injective <| Matrix.toLin'.injective <| LinearEquiv.toLinearMap_injective.eq_iff.mpr h\n\n"}
{"name":"Matrix.SpecialLinearGroup.map_apply_coe","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝³ : DecidableEq n\ninst✝² : Fintype n\nR : Type v\ninst✝¹ : CommRing R\nS : Type u_1\ninst✝ : CommRing S\nf : RingHom R S\ng : Matrix.SpecialLinearGroup n R\n⊢ Eq (↑((Matrix.SpecialLinearGroup.map f) g)) (f.mapMatrix ↑g)","decl":"/-- A ring homomorphism from `R` to `S` induces a group homomorphism from\n`SpecialLinearGroup n R` to `SpecialLinearGroup n S`. -/\n@[simps]\ndef map (f : R →+* S) : SpecialLinearGroup n R →* SpecialLinearGroup n S where\n  toFun g :=\n    ⟨f.mapMatrix ↑ₘg, by\n      rw [← f.map_det]\n      simp [g.prop]⟩\n  map_one' := Subtype.ext <| f.mapMatrix.map_one\n  map_mul' x y := Subtype.ext <| f.mapMatrix.map_mul ↑ₘx ↑ₘy\n\n"}
{"name":"Matrix.SpecialLinearGroup.center_eq_bot_of_subsingleton","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝³ : DecidableEq n\ninst✝² : Fintype n\nR : Type v\ninst✝¹ : CommRing R\ninst✝ : Subsingleton n\n⊢ Eq (Subgroup.center (Matrix.SpecialLinearGroup n R)) Bot.bot","decl":"@[simp]\ntheorem center_eq_bot_of_subsingleton [Subsingleton n] :\n    center (SpecialLinearGroup n R) = ⊥ :=\n  eq_bot_iff.mpr fun x _ ↦ by rw [mem_bot, Subsingleton.elim x 1]\n\n"}
{"name":"Matrix.SpecialLinearGroup.scalar_eq_self_of_mem_center","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝² : DecidableEq n\ninst✝¹ : Fintype n\nR : Type v\ninst✝ : CommRing R\nA : Matrix.SpecialLinearGroup n R\nhA : Membership.mem (Subgroup.center (Matrix.SpecialLinearGroup n R)) A\ni : n\n⊢ Eq ((Matrix.scalar n) (↑A i i)) ↑A","decl":"theorem scalar_eq_self_of_mem_center\n    {A : SpecialLinearGroup n R} (hA : A ∈ center (SpecialLinearGroup n R)) (i : n) :\n    scalar n (A i i) = A := by\n  obtain ⟨r : R, hr : scalar n r = A⟩ := mem_range_scalar_of_commute_transvectionStruct fun t ↦\n    Subtype.ext_iff.mp <| Subgroup.mem_center_iff.mp hA ⟨t.toMatrix, by simp⟩\n  simp [← congr_fun₂ hr i i, ← hr]\n\n"}
{"name":"Matrix.SpecialLinearGroup.scalar_eq_coe_self_center","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝² : DecidableEq n\ninst✝¹ : Fintype n\nR : Type v\ninst✝ : CommRing R\nA : Subtype fun x => Membership.mem (Subgroup.center (Matrix.SpecialLinearGroup n R)) x\ni : n\n⊢ Eq ((Matrix.scalar n) (↑↑A i i)) ↑↑A","decl":"theorem scalar_eq_coe_self_center\n    (A : center (SpecialLinearGroup n R)) (i : n) :\n    scalar n ((A : Matrix n n R) i i) = A :=\n  scalar_eq_self_of_mem_center A.property i\n\n"}
{"name":"Matrix.SpecialLinearGroup.mem_center_iff","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝² : DecidableEq n\ninst✝¹ : Fintype n\nR : Type v\ninst✝ : CommRing R\nA : Matrix.SpecialLinearGroup n R\n⊢ Iff (Membership.mem (Subgroup.center (Matrix.SpecialLinearGroup n R)) A) (Exists fun r => And (Eq (HPow.hPow r (Fintype.card n)) 1) (Eq ((Matrix.scalar n) r) ↑A))","decl":"/-- The center of a special linear group of degree `n` is the subgroup of scalar matrices, for which\nthe scalars are the `n`-th roots of unity. -/\ntheorem mem_center_iff {A : SpecialLinearGroup n R} :\n    A ∈ center (SpecialLinearGroup n R) ↔ ∃ (r : R), r ^ (Fintype.card n) = 1 ∧ scalar n r = A := by\n  rcases isEmpty_or_nonempty n with hn | ⟨⟨i⟩⟩; · exact ⟨by aesop, by simp [Subsingleton.elim A 1]⟩\n  refine ⟨fun h ↦ ⟨A i i, ?_, ?_⟩, fun ⟨r, _, hr⟩ ↦ Subgroup.mem_center_iff.mpr fun B ↦ ?_⟩\n  · have : det ((scalar n) (A i i)) = 1 := (scalar_eq_self_of_mem_center h i).symm ▸ A.property\n    simpa using this\n  · exact scalar_eq_self_of_mem_center h i\n  · suffices ↑ₘ(B * A) = ↑ₘ(A * B) from Subtype.val_injective this\n    simpa only [coe_mul, ← hr] using (scalar_commute (n := n) r (Commute.all r) B).symm\n\n"}
{"name":"Matrix.SpecialLinearGroup.center_equiv_rootsOfUnity'_apply","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝² : DecidableEq n\ninst✝¹ : Fintype n\nR : Type v\ninst✝ : CommRing R\ni : n\nA : Subtype fun x => Membership.mem (Subgroup.center (Matrix.SpecialLinearGroup n R)) x\n⊢ Eq ((Matrix.SpecialLinearGroup.center_equiv_rootsOfUnity' i) A) (rootsOfUnity.mkOfPowEq (↑↑A i i) ⋯)","decl":"/-- An equivalence of groups, from the center of the special linear group to the roots of unity. -/\n-- replaced `(Fintype.card n).mkPNat'` by `Fintype.card n` (note `n` is nonempty here)\n@[simps]\ndef center_equiv_rootsOfUnity' (i : n) :\n    center (SpecialLinearGroup n R) ≃* rootsOfUnity (Fintype.card n) R where\n  toFun A :=\n    haveI : Nonempty n := ⟨i⟩\n    rootsOfUnity.mkOfPowEq (↑ₘA i i) <| by\n      obtain ⟨r, hr, hr'⟩ := mem_center_iff.mp A.property\n      replace hr' : A.val i i = r := by simp only [← hr', scalar_apply, diagonal_apply_eq]\n      simp only [hr', hr]\n  invFun a := ⟨⟨a • (1 : Matrix n n R), by aesop⟩,\n    Subgroup.mem_center_iff.mpr fun B ↦ Subtype.val_injective <| by simp [coe_mul]⟩\n  left_inv A := by\n    refine SetCoe.ext <| SetCoe.ext ?_\n    obtain ⟨r, _, hr⟩ := mem_center_iff.mp A.property\n    simpa [← hr, Submonoid.smul_def, Units.smul_def] using smul_one_eq_diagonal r\n  right_inv a := by\n    obtain ⟨⟨a, _⟩, ha⟩ := a\n    exact SetCoe.ext <| Units.eq_iff.mp <| by simp\n  map_mul' A B := by\n    dsimp\n    ext\n    simp only [rootsOfUnity.val_mkOfPowEq_coe, Subgroup.coe_mul, Units.val_mul]\n    rw [← scalar_eq_coe_self_center A i, ← scalar_eq_coe_self_center B i]\n    simp\n\n"}
{"name":"Matrix.SpecialLinearGroup.center_equiv_rootsOfUnity'_symm_apply_coe_coe","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝² : DecidableEq n\ninst✝¹ : Fintype n\nR : Type v\ninst✝ : CommRing R\ni : n\na : Subtype fun x => Membership.mem (rootsOfUnity (Fintype.card n) R) x\n⊢ Eq (↑↑((Matrix.SpecialLinearGroup.center_equiv_rootsOfUnity' i).symm a)) (HSMul.hSMul a 1)","decl":"/-- An equivalence of groups, from the center of the special linear group to the roots of unity. -/\n-- replaced `(Fintype.card n).mkPNat'` by `Fintype.card n` (note `n` is nonempty here)\n@[simps]\ndef center_equiv_rootsOfUnity' (i : n) :\n    center (SpecialLinearGroup n R) ≃* rootsOfUnity (Fintype.card n) R where\n  toFun A :=\n    haveI : Nonempty n := ⟨i⟩\n    rootsOfUnity.mkOfPowEq (↑ₘA i i) <| by\n      obtain ⟨r, hr, hr'⟩ := mem_center_iff.mp A.property\n      replace hr' : A.val i i = r := by simp only [← hr', scalar_apply, diagonal_apply_eq]\n      simp only [hr', hr]\n  invFun a := ⟨⟨a • (1 : Matrix n n R), by aesop⟩,\n    Subgroup.mem_center_iff.mpr fun B ↦ Subtype.val_injective <| by simp [coe_mul]⟩\n  left_inv A := by\n    refine SetCoe.ext <| SetCoe.ext ?_\n    obtain ⟨r, _, hr⟩ := mem_center_iff.mp A.property\n    simpa [← hr, Submonoid.smul_def, Units.smul_def] using smul_one_eq_diagonal r\n  right_inv a := by\n    obtain ⟨⟨a, _⟩, ha⟩ := a\n    exact SetCoe.ext <| Units.eq_iff.mp <| by simp\n  map_mul' A B := by\n    dsimp\n    ext\n    simp only [rootsOfUnity.val_mkOfPowEq_coe, Subgroup.coe_mul, Units.val_mul]\n    rw [← scalar_eq_coe_self_center A i, ← scalar_eq_coe_self_center B i]\n    simp\n\n"}
{"name":"Matrix.SpecialLinearGroup.coe_matrix_coe","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝² : DecidableEq n\ninst✝¹ : Fintype n\nR : Type v\ninst✝ : CommRing R\ng : Matrix.SpecialLinearGroup n Int\n⊢ Eq (↑((Matrix.SpecialLinearGroup.map (Int.castRingHom R)) g)) ((↑g).map ⇑(Int.castRingHom R))","decl":"@[simp]\ntheorem coe_matrix_coe (g : SpecialLinearGroup n ℤ) :\n    ↑(g : SpecialLinearGroup n R) = (↑g : Matrix n n ℤ).map (Int.castRingHom R) :=\n  map_apply_coe (Int.castRingHom R) g\n\n"}
{"name":"Matrix.SpecialLinearGroup.coe_neg","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝³ : DecidableEq n\ninst✝² : Fintype n\nR : Type v\ninst✝¹ : CommRing R\ninst✝ : Fact (Even (Fintype.card n))\ng : Matrix.SpecialLinearGroup n R\n⊢ Eq (↑(Neg.neg g)) (Neg.neg ↑g)","decl":"@[simp]\ntheorem coe_neg (g : SpecialLinearGroup n R) : ↑(-g) = -(g : Matrix n n R) :=\n  rfl\n\n"}
{"name":"Matrix.SpecialLinearGroup.coe_int_neg","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Type u\ninst✝³ : DecidableEq n\ninst✝² : Fintype n\nR : Type v\ninst✝¹ : CommRing R\ninst✝ : Fact (Even (Fintype.card n))\ng : Matrix.SpecialLinearGroup n Int\n⊢ Eq ((Matrix.SpecialLinearGroup.map (Int.castRingHom R)) (Neg.neg g)) (Neg.neg ((Matrix.SpecialLinearGroup.map (Int.castRingHom R)) g))","decl":"@[simp]\ntheorem coe_int_neg (g : SpecialLinearGroup n ℤ) : ↑(-g) = (-↑g : SpecialLinearGroup n R) :=\n  Subtype.ext <| (@RingHom.mapMatrix n _ _ _ _ _ _ (Int.castRingHom R)).map_neg ↑g\n\n"}
{"name":"Matrix.SpecialLinearGroup.SL2_inv_expl_det","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"R : Type v\ninst✝ : CommRing R\nA : Matrix.SpecialLinearGroup (Fin 2) R\n⊢ Eq (Matrix.det (Matrix.vecCons (Matrix.vecCons (↑A 1 1) (Matrix.vecCons (Neg.neg (↑A 0 1)) Matrix.vecEmpty)) (Matrix.vecCons (Matrix.vecCons (Neg.neg (↑A 1 0)) (Matrix.vecCons (↑A 0 0) Matrix.vecEmpty)) Matrix.vecEmpty))) 1","decl":"theorem SL2_inv_expl_det (A : SL(2, R)) :\n    det ![![A.1 1 1, -A.1 0 1], ![-A.1 1 0, A.1 0 0]] = 1 := by\n  rw [Matrix.det_fin_two, mul_comm]\n  simp only [cons_val_zero, cons_val_one, head_cons, mul_neg, neg_mul, neg_neg]\n  have := A.2\n  rw [Matrix.det_fin_two] at this\n  convert this\n\n"}
{"name":"Matrix.SpecialLinearGroup.SL2_inv_expl","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"R : Type v\ninst✝ : CommRing R\nA : Matrix.SpecialLinearGroup (Fin 2) R\n⊢ Eq (Inv.inv A) ⟨Matrix.vecCons (Matrix.vecCons (↑A 1 1) (Matrix.vecCons (Neg.neg (↑A 0 1)) Matrix.vecEmpty)) (Matrix.vecCons (Matrix.vecCons (Neg.neg (↑A 1 0)) (Matrix.vecCons (↑A 0 0) Matrix.vecEmpty)) Matrix.vecEmpty), ⋯⟩","decl":"theorem SL2_inv_expl (A : SL(2, R)) :\n    A⁻¹ = ⟨![![A.1 1 1, -A.1 0 1], ![-A.1 1 0, A.1 0 0]], SL2_inv_expl_det A⟩ := by\n  ext\n  have := Matrix.adjugate_fin_two A.1\n  rw [coe_inv, this]\n  rfl\n\n"}
{"name":"Matrix.SpecialLinearGroup.fin_two_induction","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"R : Type v\ninst✝ : CommRing R\nP : Matrix.SpecialLinearGroup (Fin 2) R → Prop\nh : ∀ (a b c d : R), Eq (HSub.hSub (HMul.hMul a d) (HMul.hMul b c)) 1 → P ⟨Matrix.of (Matrix.vecCons (Matrix.vecCons a (Matrix.vecCons b Matrix.vecEmpty)) (Matrix.vecCons (Matrix.vecCons c (Matrix.vecCons d Matrix.vecEmpty)) Matrix.vecEmpty)), ⋯⟩\ng : Matrix.SpecialLinearGroup (Fin 2) R\n⊢ P g","decl":"theorem fin_two_induction (P : SL(2, R) → Prop)\n    (h : ∀ (a b c d : R) (hdet : a * d - b * c = 1), P ⟨!![a, b; c, d], by rwa [det_fin_two_of]⟩)\n    (g : SL(2, R)) : P g := by\n  obtain ⟨m, hm⟩ := g\n  convert h (m 0 0) (m 0 1) (m 1 0) (m 1 1) (by rwa [det_fin_two] at hm)\n  ext i j; fin_cases i <;> fin_cases j <;> rfl\n\n"}
{"name":"Matrix.SpecialLinearGroup.fin_two_exists_eq_mk_of_apply_zero_one_eq_zero","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"R : Type u_2\ninst✝ : Field R\ng : Matrix.SpecialLinearGroup (Fin 2) R\nhg : Eq (↑g 1 0) 0\n⊢ Exists fun a => Exists fun b => Exists fun h => Eq g ⟨Matrix.of (Matrix.vecCons (Matrix.vecCons a (Matrix.vecCons b Matrix.vecEmpty)) (Matrix.vecCons (Matrix.vecCons 0 (Matrix.vecCons (Inv.inv a) Matrix.vecEmpty)) Matrix.vecEmpty)), ⋯⟩","decl":"theorem fin_two_exists_eq_mk_of_apply_zero_one_eq_zero {R : Type*} [Field R] (g : SL(2, R))\n    (hg : g 1 0 = 0) :\n    ∃ (a b : R) (h : a ≠ 0), g = (⟨!![a, b; 0, a⁻¹], by simp [h]⟩ : SL(2, R)) := by\n  induction' g using Matrix.SpecialLinearGroup.fin_two_induction with a b c d h_det\n  replace hg : c = 0 := by simpa using hg\n  have had : a * d = 1 := by rwa [hg, mul_zero, sub_zero] at h_det\n  refine ⟨a, b, left_ne_zero_of_mul_eq_one had, ?_⟩\n  simp_rw [eq_inv_of_mul_eq_one_right had, hg]\n\n"}
{"name":"Matrix.SpecialLinearGroup.isCoprime_row","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"R : Type v\ninst✝ : CommRing R\nA : Matrix.SpecialLinearGroup (Fin 2) R\ni : Fin 2\n⊢ IsCoprime (↑A i 0) (↑A i 1)","decl":"lemma isCoprime_row (A : SL(2, R)) (i : Fin 2) : IsCoprime (A i 0) (A i 1) := by\n  refine match i with\n  | 0 => ⟨A 1 1, -(A 1 0), ?_⟩\n  | 1 => ⟨-(A 0 1), A 0 0, ?_⟩ <;>\n  · simp_rw [det_coe A ▸ det_fin_two A.1]\n    ring\n\n"}
{"name":"Matrix.SpecialLinearGroup.isCoprime_col","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"R : Type v\ninst✝ : CommRing R\nA : Matrix.SpecialLinearGroup (Fin 2) R\nj : Fin 2\n⊢ IsCoprime (↑A 0 j) (↑A 1 j)","decl":"lemma isCoprime_col (A : SL(2, R)) (j : Fin 2) : IsCoprime (A 0 j) (A 1 j) := by\n  refine match j with\n  | 0 => ⟨A 1 1, -(A 0 1), ?_⟩\n  | 1 => ⟨-(A 1 0), A 0 0, ?_⟩ <;>\n  · simp_rw [det_coe A ▸ det_fin_two A.1]\n    ring\n\n"}
{"name":"IsCoprime.exists_SL2_col","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"R : Type u_1\ninst✝ : CommRing R\na b : R\nhab : IsCoprime a b\nj : Fin 2\n⊢ Exists fun g => And (Eq (↑g 0 j) a) (Eq (↑g 1 j) b)","decl":"/-- Given any pair of coprime elements of `R`, there exists a matrix in `SL(2, R)` having those\nentries as its left or right column. -/\nlemma exists_SL2_col {a b : R} (hab : IsCoprime a b) (j : Fin 2) :\n    ∃ g : SL(2, R), g 0 j = a ∧ g 1 j = b := by\n  obtain ⟨u, v, h⟩ := hab\n  refine match j with\n  | 0 => ⟨⟨!![a, -v; b, u], ?_⟩, rfl, rfl⟩\n  | 1 => ⟨⟨!![v, a; -u, b], ?_⟩, rfl, rfl⟩ <;>\n  · rw [Matrix.det_fin_two_of, ← h]\n    ring\n\n"}
{"name":"IsCoprime.exists_SL2_row","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"R : Type u_1\ninst✝ : CommRing R\na b : R\nhab : IsCoprime a b\ni : Fin 2\n⊢ Exists fun g => And (Eq (↑g i 0) a) (Eq (↑g i 1) b)","decl":"/-- Given any pair of coprime elements of `R`, there exists a matrix in `SL(2, R)` having those\nentries as its top or bottom row. -/\nlemma exists_SL2_row {a b : R} (hab : IsCoprime a b) (i : Fin 2) :\n    ∃ g : SL(2, R), g i 0 = a ∧ g i 1 = b := by\n  obtain ⟨u, v, h⟩ := hab\n  refine match i with\n  | 0 => ⟨⟨!![a, b; -v, u], ?_⟩, rfl, rfl⟩\n  | 1 => ⟨⟨!![v, -u; a, b], ?_⟩, rfl, rfl⟩ <;>\n  · rw [Matrix.det_fin_two_of, ← h]\n    ring\n\n"}
{"name":"IsCoprime.vecMulSL","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"R : Type u_1\ninst✝ : CommRing R\nv : Fin 2 → R\nhab : IsCoprime (v 0) (v 1)\nA : Matrix.SpecialLinearGroup (Fin 2) R\n⊢ IsCoprime (Matrix.vecMul v (↑A) 0) (Matrix.vecMul v (↑A) 1)","decl":"/-- A vector with coprime entries, right-multiplied by a matrix in `SL(2, R)`, has\ncoprime entries. -/\nlemma vecMulSL {v : Fin 2 → R} (hab : IsCoprime (v 0) (v 1)) (A : SL(2, R)) :\n    IsCoprime ((v ᵥ* A.1) 0) ((v ᵥ* A.1) 1) := by\n  obtain ⟨g, hg⟩ := hab.exists_SL2_row 0\n  have : v = g 0 := funext fun t ↦ by { fin_cases t <;> tauto }\n  simpa only [this] using isCoprime_row (g * A) 0\n\n"}
{"name":"IsCoprime.mulVecSL","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"R : Type u_1\ninst✝ : CommRing R\nv : Fin 2 → R\nhab : IsCoprime (v 0) (v 1)\nA : Matrix.SpecialLinearGroup (Fin 2) R\n⊢ IsCoprime ((↑A).mulVec v 0) ((↑A).mulVec v 1)","decl":"/-- A vector with coprime entries, left-multiplied by a matrix in `SL(2, R)`, has\ncoprime entries. -/\nlemma mulVecSL {v : Fin 2 → R} (hab : IsCoprime (v 0) (v 1)) (A : SL(2, R)) :\n    IsCoprime ((A.1 *ᵥ v) 0) ((A.1 *ᵥ v) 1) := by\n  simpa only [← vecMul_transpose] using hab.vecMulSL A.transpose\n\n"}
{"name":"ModularGroup.coe_S","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"⊢ Eq (↑ModularGroup.S) (Matrix.of (Matrix.vecCons (Matrix.vecCons 0 (Matrix.vecCons (-1) Matrix.vecEmpty)) (Matrix.vecCons (Matrix.vecCons 1 (Matrix.vecCons 0 Matrix.vecEmpty)) Matrix.vecEmpty)))","decl":"theorem coe_S : ↑S = !![0, -1; 1, 0] :=\n  rfl\n\n"}
{"name":"ModularGroup.coe_T","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"⊢ Eq (↑ModularGroup.T) (Matrix.of (Matrix.vecCons (Matrix.vecCons 1 (Matrix.vecCons 1 Matrix.vecEmpty)) (Matrix.vecCons (Matrix.vecCons 0 (Matrix.vecCons 1 Matrix.vecEmpty)) Matrix.vecEmpty)))","decl":"theorem coe_T : ↑T = (!![1, 1; 0, 1] : Matrix _ _ ℤ) :=\n  rfl\n\n"}
{"name":"ModularGroup.coe_T_inv","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"⊢ Eq (↑(Inv.inv ModularGroup.T)) (Matrix.of (Matrix.vecCons (Matrix.vecCons 1 (Matrix.vecCons (-1) Matrix.vecEmpty)) (Matrix.vecCons (Matrix.vecCons 0 (Matrix.vecCons 1 Matrix.vecEmpty)) Matrix.vecEmpty)))","decl":"theorem coe_T_inv : ↑(T⁻¹) = !![1, -1; 0, 1] := by simp [coe_inv, coe_T, adjugate_fin_two]\n\n"}
{"name":"ModularGroup.coe_T_zpow","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Int\n⊢ Eq (↑(HPow.hPow ModularGroup.T n)) (Matrix.of (Matrix.vecCons (Matrix.vecCons 1 (Matrix.vecCons n Matrix.vecEmpty)) (Matrix.vecCons (Matrix.vecCons 0 (Matrix.vecCons 1 Matrix.vecEmpty)) Matrix.vecEmpty)))","decl":"theorem coe_T_zpow (n : ℤ) : (T ^ n).1 = !![1, n; 0, 1] := by\n  induction' n using Int.induction_on with n h n h\n  · rw [zpow_zero, coe_one, Matrix.one_fin_two]\n  · simp_rw [zpow_add, zpow_one, coe_mul, h, coe_T, Matrix.mul_fin_two]\n    congrm !![_, ?_; _, _]\n    rw [mul_one, mul_one, add_comm]\n  · simp_rw [zpow_sub, zpow_one, coe_mul, h, coe_T_inv, Matrix.mul_fin_two]\n    congrm !![?_, ?_; _, _] <;> ring\n\n"}
{"name":"ModularGroup.T_pow_mul_apply_one","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"n : Int\ng : Matrix.SpecialLinearGroup (Fin 2) Int\n⊢ Eq (↑(HMul.hMul (HPow.hPow ModularGroup.T n) g) 1) (↑g 1)","decl":"@[simp]\ntheorem T_pow_mul_apply_one (n : ℤ) (g : SL(2, ℤ)) : (T ^ n * g) 1 = g 1 := by\n  ext j\n  simp [coe_T_zpow, Matrix.vecMul, dotProduct, Fin.sum_univ_succ, vecTail]\n\n"}
{"name":"ModularGroup.T_mul_apply_one","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"g : Matrix.SpecialLinearGroup (Fin 2) Int\n⊢ Eq (↑(HMul.hMul ModularGroup.T g) 1) (↑g 1)","decl":"@[simp]\ntheorem T_mul_apply_one (g : SL(2, ℤ)) : (T * g) 1 = g 1 := by\n  simpa using T_pow_mul_apply_one 1 g\n\n"}
{"name":"ModularGroup.T_inv_mul_apply_one","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"g : Matrix.SpecialLinearGroup (Fin 2) Int\n⊢ Eq (↑(HMul.hMul (Inv.inv ModularGroup.T) g) 1) (↑g 1)","decl":"@[simp]\ntheorem T_inv_mul_apply_one (g : SL(2, ℤ)) : (T⁻¹ * g) 1 = g 1 := by\n  simpa using T_pow_mul_apply_one (-1) g\n\n"}
{"name":"ModularGroup.S_mul_S_eq","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"⊢ Eq (HMul.hMul ↑ModularGroup.S ↑ModularGroup.S) (-1)","decl":"lemma S_mul_S_eq : (S : Matrix (Fin 2) (Fin 2) ℤ) * S = -1 := by\n  simp only [S, Int.reduceNeg, pow_two, coe_mul, cons_mul, Nat.succ_eq_add_one, Nat.reduceAdd,\n    vecMul_cons, head_cons, zero_smul, tail_cons, neg_smul, one_smul, neg_cons, neg_zero, neg_empty,\n    empty_vecMul, add_zero, zero_add, empty_mul, Equiv.symm_apply_apply]\n  exact Eq.symm (eta_fin_two (-1))\n\n"}
{"name":"ModularGroup.T_S_rel","module":"Mathlib.LinearAlgebra.Matrix.SpecialLinearGroup","initialProofState":"⊢ Eq (HSMul.hSMul ModularGroup.S (HSMul.hSMul ModularGroup.S (HSMul.hSMul ModularGroup.S (HSMul.hSMul ModularGroup.T (HSMul.hSMul ModularGroup.S (HSMul.hSMul ModularGroup.T ModularGroup.S)))))) (Inv.inv ModularGroup.T)","decl":"lemma T_S_rel : S • S • S • T • S • T • S = T⁻¹ := by\n  ext i j\n  fin_cases i <;> fin_cases j <;> rfl\n\n"}
