{"name":"Commensurable.refl","module":"Mathlib.GroupTheory.Commensurable","initialProofState":"G : Type u_1\ninst✝ : Group G\nH : Subgroup G\n⊢ Commensurable H H","decl":"@[refl]\nprotected theorem refl (H : Subgroup G) : Commensurable H H := by simp [Commensurable]\n\n"}
{"name":"Commensurable.comm","module":"Mathlib.GroupTheory.Commensurable","initialProofState":"G : Type u_1\ninst✝ : Group G\nH K : Subgroup G\n⊢ Iff (Commensurable H K) (Commensurable K H)","decl":"theorem comm {H K : Subgroup G} : Commensurable H K ↔ Commensurable K H := and_comm\n\n"}
{"name":"Commensurable.symm","module":"Mathlib.GroupTheory.Commensurable","initialProofState":"G : Type u_1\ninst✝ : Group G\nH K : Subgroup G\na✝ : Commensurable H K\n⊢ Commensurable K H","decl":"@[symm]\ntheorem symm {H K : Subgroup G} : Commensurable H K → Commensurable K H := And.symm\n\n"}
{"name":"Commensurable.trans","module":"Mathlib.GroupTheory.Commensurable","initialProofState":"G : Type u_1\ninst✝ : Group G\nH K L : Subgroup G\nhhk : Commensurable H K\nhkl : Commensurable K L\n⊢ Commensurable H L","decl":"@[trans]\ntheorem trans {H K L : Subgroup G} (hhk : Commensurable H K) (hkl : Commensurable K L) :\n    Commensurable H L :=\n  ⟨Subgroup.relindex_ne_zero_trans hhk.1 hkl.1, Subgroup.relindex_ne_zero_trans hkl.2 hhk.2⟩\n\n"}
{"name":"Commensurable.equivalence","module":"Mathlib.GroupTheory.Commensurable","initialProofState":"G : Type u_1\ninst✝ : Group G\n⊢ Equivalence Commensurable","decl":"theorem equivalence : Equivalence (@Commensurable G _) :=\n  ⟨Commensurable.refl, fun h => Commensurable.symm h, fun h₁ h₂ => Commensurable.trans h₁ h₂⟩\n\n"}
{"name":"Commensurable.commensurable_conj","module":"Mathlib.GroupTheory.Commensurable","initialProofState":"G : Type u_1\ninst✝ : Group G\nH K : Subgroup G\ng : ConjAct G\n⊢ Iff (Commensurable H K) (Commensurable (HSMul.hSMul g H) (HSMul.hSMul g K))","decl":"theorem commensurable_conj {H K : Subgroup G} (g : ConjAct G) :\n    Commensurable H K ↔ Commensurable (g • H) (g • K) :=\n  and_congr (not_iff_not.mpr (Eq.congr_left (Cardinal.toNat_congr (quotConjEquiv H K g))))\n    (not_iff_not.mpr (Eq.congr_left (Cardinal.toNat_congr (quotConjEquiv K H g))))\n\n"}
{"name":"Commensurable.commensurable_inv","module":"Mathlib.GroupTheory.Commensurable","initialProofState":"G : Type u_1\ninst✝ : Group G\nH : Subgroup G\ng : ConjAct G\n⊢ Iff (Commensurable (HSMul.hSMul g H) H) (Commensurable H (HSMul.hSMul (Inv.inv g) H))","decl":"theorem commensurable_inv (H : Subgroup G) (g : ConjAct G) :\n    Commensurable (g • H) H ↔ Commensurable H (g⁻¹ • H) := by rw [commensurable_conj, inv_smul_smul]\n\n"}
{"name":"Commensurable.commensurator'_mem_iff","module":"Mathlib.GroupTheory.Commensurable","initialProofState":"G : Type u_1\ninst✝ : Group G\nH : Subgroup G\ng : ConjAct G\n⊢ Iff (Membership.mem (Commensurable.commensurator' H) g) (Commensurable (HSMul.hSMul g H) H)","decl":"@[simp]\ntheorem commensurator'_mem_iff (H : Subgroup G) (g : ConjAct G) :\n    g ∈ commensurator' H ↔ Commensurable (g • H) H := Iff.rfl\n\n"}
{"name":"Commensurable.commensurator_mem_iff","module":"Mathlib.GroupTheory.Commensurable","initialProofState":"G : Type u_1\ninst✝ : Group G\nH : Subgroup G\ng : G\n⊢ Iff (Membership.mem (Commensurable.commensurator H) g) (Commensurable (HSMul.hSMul (ConjAct.toConjAct g) H) H)","decl":"@[simp]\ntheorem commensurator_mem_iff (H : Subgroup G) (g : G) :\n    g ∈ commensurator H ↔ Commensurable (ConjAct.toConjAct g • H) H := Iff.rfl\n\n"}
{"name":"Commensurable.eq","module":"Mathlib.GroupTheory.Commensurable","initialProofState":"G : Type u_1\ninst✝ : Group G\nH K : Subgroup G\nhk : Commensurable H K\n⊢ Eq (Commensurable.commensurator H) (Commensurable.commensurator K)","decl":"theorem eq {H K : Subgroup G} (hk : Commensurable H K) : commensurator H = commensurator K :=\n  Subgroup.ext fun x =>\n    let hx := (commensurable_conj x).1 hk\n    ⟨fun h => hx.symm.trans (h.trans hk), fun h => hx.trans (h.trans hk.symm)⟩\n\n"}
