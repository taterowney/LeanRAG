{"name":"top_sup_eq","module":"Mathlib.Order.BoundedOrder.Lattice","initialProofState":"α : Type u\ninst✝¹ : SemilatticeSup α\ninst✝ : OrderTop α\na : α\n⊢ Eq (Max.max Top.top a) Top.top","decl":"theorem top_sup_eq (a : α) : ⊤ ⊔ a = ⊤ :=\n  sup_of_le_left le_top\n\n"}
{"name":"sup_top_eq","module":"Mathlib.Order.BoundedOrder.Lattice","initialProofState":"α : Type u\ninst✝¹ : SemilatticeSup α\ninst✝ : OrderTop α\na : α\n⊢ Eq (Max.max a Top.top) Top.top","decl":"theorem sup_top_eq (a : α) : a ⊔ ⊤ = ⊤ :=\n  sup_of_le_right le_top\n\n"}
{"name":"bot_sup_eq","module":"Mathlib.Order.BoundedOrder.Lattice","initialProofState":"α : Type u\ninst✝¹ : SemilatticeSup α\ninst✝ : OrderBot α\na : α\n⊢ Eq (Max.max Bot.bot a) a","decl":"theorem bot_sup_eq (a : α) : ⊥ ⊔ a = a :=\n  sup_of_le_right bot_le\n\n"}
{"name":"sup_bot_eq","module":"Mathlib.Order.BoundedOrder.Lattice","initialProofState":"α : Type u\ninst✝¹ : SemilatticeSup α\ninst✝ : OrderBot α\na : α\n⊢ Eq (Max.max a Bot.bot) a","decl":"theorem sup_bot_eq (a : α) : a ⊔ ⊥ = a :=\n  sup_of_le_left bot_le\n\n"}
{"name":"sup_eq_bot_iff","module":"Mathlib.Order.BoundedOrder.Lattice","initialProofState":"α : Type u\ninst✝¹ : SemilatticeSup α\ninst✝ : OrderBot α\na b : α\n⊢ Iff (Eq (Max.max a b) Bot.bot) (And (Eq a Bot.bot) (Eq b Bot.bot))","decl":"@[simp]\ntheorem sup_eq_bot_iff : a ⊔ b = ⊥ ↔ a = ⊥ ∧ b = ⊥ := by rw [eq_bot_iff, sup_le_iff]; simp\n\n"}
{"name":"top_inf_eq","module":"Mathlib.Order.BoundedOrder.Lattice","initialProofState":"α : Type u\ninst✝¹ : SemilatticeInf α\ninst✝ : OrderTop α\na : α\n⊢ Eq (Min.min Top.top a) a","decl":"lemma top_inf_eq (a : α) : ⊤ ⊓ a = a := inf_of_le_right le_top\n\n"}
{"name":"inf_top_eq","module":"Mathlib.Order.BoundedOrder.Lattice","initialProofState":"α : Type u\ninst✝¹ : SemilatticeInf α\ninst✝ : OrderTop α\na : α\n⊢ Eq (Min.min a Top.top) a","decl":"lemma inf_top_eq (a : α) : a ⊓ ⊤ = a := inf_of_le_left le_top\n\n"}
{"name":"inf_eq_top_iff","module":"Mathlib.Order.BoundedOrder.Lattice","initialProofState":"α : Type u\ninst✝¹ : SemilatticeInf α\ninst✝ : OrderTop α\na b : α\n⊢ Iff (Eq (Min.min a b) Top.top) (And (Eq a Top.top) (Eq b Top.top))","decl":"@[simp]\ntheorem inf_eq_top_iff : a ⊓ b = ⊤ ↔ a = ⊤ ∧ b = ⊤ :=\n  @sup_eq_bot_iff αᵒᵈ _ _ _ _\n\n"}
{"name":"bot_inf_eq","module":"Mathlib.Order.BoundedOrder.Lattice","initialProofState":"α : Type u\ninst✝¹ : SemilatticeInf α\ninst✝ : OrderBot α\na : α\n⊢ Eq (Min.min Bot.bot a) Bot.bot","decl":"lemma bot_inf_eq (a : α) : ⊥ ⊓ a = ⊥ := inf_of_le_left bot_le\n\n"}
{"name":"inf_bot_eq","module":"Mathlib.Order.BoundedOrder.Lattice","initialProofState":"α : Type u\ninst✝¹ : SemilatticeInf α\ninst✝ : OrderBot α\na : α\n⊢ Eq (Min.min a Bot.bot) Bot.bot","decl":"lemma inf_bot_eq (a : α) : a ⊓ ⊥ = ⊥ := inf_of_le_right bot_le\n\n"}
{"name":"exists_ge_and_iff_exists","module":"Mathlib.Order.BoundedOrder.Lattice","initialProofState":"α : Type u\ninst✝ : SemilatticeSup α\nP : α → Prop\nx₀ : α\nhP : Monotone P\n⊢ Iff (Exists fun x => And (LE.le x₀ x) (P x)) (Exists fun x => P x)","decl":"theorem exists_ge_and_iff_exists {P : α → Prop} {x₀ : α} (hP : Monotone P) :\n    (∃ x, x₀ ≤ x ∧ P x) ↔ ∃ x, P x :=\n  ⟨fun h => h.imp fun _ h => h.2, fun ⟨x, hx⟩ => ⟨x ⊔ x₀, le_sup_right, hP le_sup_left hx⟩⟩\n\n"}
{"name":"exists_and_iff_of_monotone","module":"Mathlib.Order.BoundedOrder.Lattice","initialProofState":"α : Type u\ninst✝ : SemilatticeSup α\nP Q : α → Prop\nhP : Monotone P\nhQ : Monotone Q\n⊢ Iff (And (Exists fun x => P x) (Exists fun x => Q x)) (Exists fun x => And (P x) (Q x))","decl":"lemma exists_and_iff_of_monotone {P Q : α → Prop} (hP : Monotone P) (hQ : Monotone Q) :\n    ((∃ x, P x) ∧ ∃ x, Q x) ↔ (∃ x, P x ∧ Q x) :=\n  ⟨fun ⟨⟨x, hPx⟩, ⟨y, hQx⟩⟩ ↦ ⟨x ⊔ y, ⟨hP le_sup_left hPx, hQ le_sup_right hQx⟩⟩,\n    fun ⟨x, hPx, hQx⟩ ↦ ⟨⟨x, hPx⟩, ⟨x, hQx⟩⟩⟩\n\n"}
{"name":"exists_le_and_iff_exists","module":"Mathlib.Order.BoundedOrder.Lattice","initialProofState":"α : Type u\ninst✝ : SemilatticeInf α\nP : α → Prop\nx₀ : α\nhP : Antitone P\n⊢ Iff (Exists fun x => And (LE.le x x₀) (P x)) (Exists fun x => P x)","decl":"theorem exists_le_and_iff_exists {P : α → Prop} {x₀ : α} (hP : Antitone P) :\n    (∃ x, x ≤ x₀ ∧ P x) ↔ ∃ x, P x :=\n  exists_ge_and_iff_exists <| hP.dual_left\n\n"}
{"name":"exists_and_iff_of_antitone","module":"Mathlib.Order.BoundedOrder.Lattice","initialProofState":"α : Type u\ninst✝ : SemilatticeInf α\nP Q : α → Prop\nhP : Antitone P\nhQ : Antitone Q\n⊢ Iff (And (Exists fun x => P x) (Exists fun x => Q x)) (Exists fun x => And (P x) (Q x))","decl":"lemma exists_and_iff_of_antitone {P Q : α → Prop} (hP : Antitone P) (hQ : Antitone Q) :\n    ((∃ x, P x) ∧ ∃ x, Q x) ↔ (∃ x, P x ∧ Q x) :=\n  ⟨fun ⟨⟨x, hPx⟩, ⟨y, hQx⟩⟩ ↦ ⟨x ⊓ y, ⟨hP inf_le_left hPx, hQ inf_le_right hQx⟩⟩,\n    fun ⟨x, hPx, hQx⟩ ↦ ⟨⟨x, hPx⟩, ⟨x, hQx⟩⟩⟩\n\n"}
{"name":"min_bot_left","module":"Mathlib.Order.BoundedOrder.Lattice","initialProofState":"α : Type u\ninst✝¹ : LinearOrder α\ninst✝ : OrderBot α\na : α\n⊢ Eq (Min.min Bot.bot a) Bot.bot","decl":"theorem min_bot_left [OrderBot α] (a : α) : min ⊥ a = ⊥ := bot_inf_eq _\n\n"}
{"name":"max_top_left","module":"Mathlib.Order.BoundedOrder.Lattice","initialProofState":"α : Type u\ninst✝¹ : LinearOrder α\ninst✝ : OrderTop α\na : α\n⊢ Eq (Max.max Top.top a) Top.top","decl":"theorem max_top_left [OrderTop α] (a : α) : max ⊤ a = ⊤ := top_sup_eq _\n\n"}
{"name":"min_top_left","module":"Mathlib.Order.BoundedOrder.Lattice","initialProofState":"α : Type u\ninst✝¹ : LinearOrder α\ninst✝ : OrderTop α\na : α\n⊢ Eq (Min.min Top.top a) a","decl":"theorem min_top_left [OrderTop α] (a : α) : min ⊤ a = a := top_inf_eq _\n\n"}
{"name":"max_bot_left","module":"Mathlib.Order.BoundedOrder.Lattice","initialProofState":"α : Type u\ninst✝¹ : LinearOrder α\ninst✝ : OrderBot α\na : α\n⊢ Eq (Max.max Bot.bot a) a","decl":"theorem max_bot_left [OrderBot α] (a : α) : max ⊥ a = a := bot_sup_eq _\n\n"}
{"name":"min_top_right","module":"Mathlib.Order.BoundedOrder.Lattice","initialProofState":"α : Type u\ninst✝¹ : LinearOrder α\ninst✝ : OrderTop α\na : α\n⊢ Eq (Min.min a Top.top) a","decl":"theorem min_top_right [OrderTop α] (a : α) : min a ⊤ = a := inf_top_eq _\n\n"}
{"name":"max_bot_right","module":"Mathlib.Order.BoundedOrder.Lattice","initialProofState":"α : Type u\ninst✝¹ : LinearOrder α\ninst✝ : OrderBot α\na : α\n⊢ Eq (Max.max a Bot.bot) a","decl":"theorem max_bot_right [OrderBot α] (a : α) : max a ⊥ = a := sup_bot_eq _\n\n"}
{"name":"min_bot_right","module":"Mathlib.Order.BoundedOrder.Lattice","initialProofState":"α : Type u\ninst✝¹ : LinearOrder α\ninst✝ : OrderBot α\na : α\n⊢ Eq (Min.min a Bot.bot) Bot.bot","decl":"theorem min_bot_right [OrderBot α] (a : α) : min a ⊥ = ⊥ := inf_bot_eq _\n\n"}
{"name":"max_top_right","module":"Mathlib.Order.BoundedOrder.Lattice","initialProofState":"α : Type u\ninst✝¹ : LinearOrder α\ninst✝ : OrderTop α\na : α\n⊢ Eq (Max.max a Top.top) Top.top","decl":"theorem max_top_right [OrderTop α] (a : α) : max a ⊤ = ⊤ := sup_top_eq _\n\n"}
{"name":"max_eq_bot","module":"Mathlib.Order.BoundedOrder.Lattice","initialProofState":"α : Type u\ninst✝¹ : LinearOrder α\ninst✝ : OrderBot α\na b : α\n⊢ Iff (Eq (Max.max a b) Bot.bot) (And (Eq a Bot.bot) (Eq b Bot.bot))","decl":"theorem max_eq_bot [OrderBot α] {a b : α} : max a b = ⊥ ↔ a = ⊥ ∧ b = ⊥ :=\n  sup_eq_bot_iff\n\n"}
{"name":"min_eq_top","module":"Mathlib.Order.BoundedOrder.Lattice","initialProofState":"α : Type u\ninst✝¹ : LinearOrder α\ninst✝ : OrderTop α\na b : α\n⊢ Iff (Eq (Min.min a b) Top.top) (And (Eq a Top.top) (Eq b Top.top))","decl":"theorem min_eq_top [OrderTop α] {a b : α} : min a b = ⊤ ↔ a = ⊤ ∧ b = ⊤ :=\n  inf_eq_top_iff\n\n"}
{"name":"min_eq_bot","module":"Mathlib.Order.BoundedOrder.Lattice","initialProofState":"α : Type u\ninst✝¹ : LinearOrder α\ninst✝ : OrderBot α\na b : α\n⊢ Iff (Eq (Min.min a b) Bot.bot) (Or (Eq a Bot.bot) (Eq b Bot.bot))","decl":"@[simp]\ntheorem min_eq_bot [OrderBot α] {a b : α} : min a b = ⊥ ↔ a = ⊥ ∨ b = ⊥ := by\n  simp_rw [← le_bot_iff, inf_le_iff]\n\n"}
{"name":"max_eq_top","module":"Mathlib.Order.BoundedOrder.Lattice","initialProofState":"α : Type u\ninst✝¹ : LinearOrder α\ninst✝ : OrderTop α\na b : α\n⊢ Iff (Eq (Max.max a b) Top.top) (Or (Eq a Top.top) (Eq b Top.top))","decl":"@[simp]\ntheorem max_eq_top [OrderTop α] {a b : α} : max a b = ⊤ ↔ a = ⊤ ∨ b = ⊤ :=\n  @min_eq_bot αᵒᵈ _ _ a b\n\n"}
