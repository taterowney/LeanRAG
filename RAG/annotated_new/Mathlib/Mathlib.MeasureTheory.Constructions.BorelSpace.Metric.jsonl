{"name":"measurableSet_ball","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\ninst✝² : PseudoMetricSpace α\ninst✝¹ : MeasurableSpace α\ninst✝ : OpensMeasurableSpace α\nx : α\nε : Real\n⊢ MeasurableSet (Metric.ball x ε)","decl":"@[measurability]\ntheorem measurableSet_ball : MeasurableSet (Metric.ball x ε) :=\n  Metric.isOpen_ball.measurableSet\n\n"}
{"name":"measurableSet_closedBall","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\ninst✝² : PseudoMetricSpace α\ninst✝¹ : MeasurableSpace α\ninst✝ : OpensMeasurableSpace α\nx : α\nε : Real\n⊢ MeasurableSet (Metric.closedBall x ε)","decl":"@[measurability]\ntheorem measurableSet_closedBall : MeasurableSet (Metric.closedBall x ε) :=\n  Metric.isClosed_ball.measurableSet\n\n"}
{"name":"measurable_infDist","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\ninst✝² : PseudoMetricSpace α\ninst✝¹ : MeasurableSpace α\ninst✝ : OpensMeasurableSpace α\ns : Set α\n⊢ Measurable fun x => Metric.infDist x s","decl":"@[measurability]\ntheorem measurable_infDist {s : Set α} : Measurable fun x => infDist x s :=\n  (continuous_infDist_pt s).measurable\n\n"}
{"name":"Measurable.infDist","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝³ : PseudoMetricSpace α\ninst✝² : MeasurableSpace α\ninst✝¹ : OpensMeasurableSpace α\ninst✝ : MeasurableSpace β\nf : β → α\nhf : Measurable f\ns : Set α\n⊢ Measurable fun x => Metric.infDist (f x) s","decl":"@[measurability, fun_prop]\ntheorem Measurable.infDist {f : β → α} (hf : Measurable f) {s : Set α} :\n    Measurable fun x => infDist (f x) s :=\n  measurable_infDist.comp hf\n\n"}
{"name":"measurable_infNndist","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\ninst✝² : PseudoMetricSpace α\ninst✝¹ : MeasurableSpace α\ninst✝ : OpensMeasurableSpace α\ns : Set α\n⊢ Measurable fun x => Metric.infNndist x s","decl":"@[measurability]\ntheorem measurable_infNndist {s : Set α} : Measurable fun x => infNndist x s :=\n  (continuous_infNndist_pt s).measurable\n\n"}
{"name":"Measurable.infNndist","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝³ : PseudoMetricSpace α\ninst✝² : MeasurableSpace α\ninst✝¹ : OpensMeasurableSpace α\ninst✝ : MeasurableSpace β\nf : β → α\nhf : Measurable f\ns : Set α\n⊢ Measurable fun x => Metric.infNndist (f x) s","decl":"@[measurability, fun_prop]\ntheorem Measurable.infNndist {f : β → α} (hf : Measurable f) {s : Set α} :\n    Measurable fun x => infNndist (f x) s :=\n  measurable_infNndist.comp hf\n\n"}
{"name":"measurable_dist","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\ninst✝³ : PseudoMetricSpace α\ninst✝² : MeasurableSpace α\ninst✝¹ : OpensMeasurableSpace α\ninst✝ : SecondCountableTopology α\n⊢ Measurable fun p => Dist.dist p.1 p.2","decl":"@[measurability]\ntheorem measurable_dist : Measurable fun p : α × α => dist p.1 p.2 :=\n  continuous_dist.measurable\n\n"}
{"name":"Measurable.dist","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁴ : PseudoMetricSpace α\ninst✝³ : MeasurableSpace α\ninst✝² : OpensMeasurableSpace α\ninst✝¹ : MeasurableSpace β\ninst✝ : SecondCountableTopology α\nf g : β → α\nhf : Measurable f\nhg : Measurable g\n⊢ Measurable fun b => Dist.dist (f b) (g b)","decl":"@[measurability, fun_prop]\ntheorem Measurable.dist {f g : β → α} (hf : Measurable f) (hg : Measurable g) :\n    Measurable fun b => dist (f b) (g b) :=\n  (@continuous_dist α _).measurable2 hf hg\n\n"}
{"name":"measurable_nndist","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\ninst✝³ : PseudoMetricSpace α\ninst✝² : MeasurableSpace α\ninst✝¹ : OpensMeasurableSpace α\ninst✝ : SecondCountableTopology α\n⊢ Measurable fun p => NNDist.nndist p.1 p.2","decl":"@[measurability]\ntheorem measurable_nndist : Measurable fun p : α × α => nndist p.1 p.2 :=\n  continuous_nndist.measurable\n\n"}
{"name":"Measurable.nndist","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁴ : PseudoMetricSpace α\ninst✝³ : MeasurableSpace α\ninst✝² : OpensMeasurableSpace α\ninst✝¹ : MeasurableSpace β\ninst✝ : SecondCountableTopology α\nf g : β → α\nhf : Measurable f\nhg : Measurable g\n⊢ Measurable fun b => NNDist.nndist (f b) (g b)","decl":"@[measurability, fun_prop]\ntheorem Measurable.nndist {f g : β → α} (hf : Measurable f) (hg : Measurable g) :\n    Measurable fun b => nndist (f b) (g b) :=\n  (@continuous_nndist α _).measurable2 hf hg\n\n"}
{"name":"measurableSet_eball","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\ninst✝² : PseudoEMetricSpace α\ninst✝¹ : MeasurableSpace α\ninst✝ : OpensMeasurableSpace α\nx : α\nε : ENNReal\n⊢ MeasurableSet (EMetric.ball x ε)","decl":"@[measurability]\ntheorem measurableSet_eball : MeasurableSet (EMetric.ball x ε) :=\n  EMetric.isOpen_ball.measurableSet\n\n"}
{"name":"measurable_edist_right","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\ninst✝² : PseudoEMetricSpace α\ninst✝¹ : MeasurableSpace α\ninst✝ : OpensMeasurableSpace α\nx : α\n⊢ Measurable (EDist.edist x)","decl":"@[measurability, fun_prop]\ntheorem measurable_edist_right : Measurable (edist x) :=\n  (continuous_const.edist continuous_id).measurable\n\n"}
{"name":"measurable_edist_left","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\ninst✝² : PseudoEMetricSpace α\ninst✝¹ : MeasurableSpace α\ninst✝ : OpensMeasurableSpace α\nx : α\n⊢ Measurable fun y => EDist.edist y x","decl":"@[measurability, fun_prop]\ntheorem measurable_edist_left : Measurable fun y => edist y x :=\n  (continuous_id.edist continuous_const).measurable\n\n"}
{"name":"measurable_infEdist","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\ninst✝² : PseudoEMetricSpace α\ninst✝¹ : MeasurableSpace α\ninst✝ : OpensMeasurableSpace α\ns : Set α\n⊢ Measurable fun x => EMetric.infEdist x s","decl":"@[measurability]\ntheorem measurable_infEdist {s : Set α} : Measurable fun x => infEdist x s :=\n  continuous_infEdist.measurable\n\n"}
{"name":"Measurable.infEdist","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝³ : PseudoEMetricSpace α\ninst✝² : MeasurableSpace α\ninst✝¹ : OpensMeasurableSpace α\ninst✝ : MeasurableSpace β\nf : β → α\nhf : Measurable f\ns : Set α\n⊢ Measurable fun x => EMetric.infEdist (f x) s","decl":"@[measurability, fun_prop]\ntheorem Measurable.infEdist {f : β → α} (hf : Measurable f) {s : Set α} :\n    Measurable fun x => infEdist (f x) s :=\n  measurable_infEdist.comp hf\n\n"}
{"name":"tendsto_measure_cthickening","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\ninst✝² : PseudoEMetricSpace α\ninst✝¹ : MeasurableSpace α\ninst✝ : OpensMeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set α\nhs : Exists fun R => And (GT.gt R 0) (Ne (μ (Metric.cthickening R s)) Top.top)\n⊢ Filter.Tendsto (fun r => μ (Metric.cthickening r s)) (nhds 0) (nhds (μ (closure s)))","decl":"/-- If a set has a closed thickening with finite measure, then the measure of its `r`-closed\nthickenings converges to the measure of its closure as `r` tends to `0`. -/\ntheorem tendsto_measure_cthickening {μ : Measure α} {s : Set α}\n    (hs : ∃ R > 0, μ (cthickening R s) ≠ ∞) :\n    Tendsto (fun r => μ (cthickening r s)) (𝓝 0) (𝓝 (μ (closure s))) := by\n  have A : Tendsto (fun r => μ (cthickening r s)) (𝓝[Ioi 0] 0) (𝓝 (μ (closure s))) := by\n    rw [closure_eq_iInter_cthickening]\n    exact\n      tendsto_measure_biInter_gt (fun r _ => isClosed_cthickening.nullMeasurableSet)\n        (fun i j _ ij => cthickening_mono ij _) hs\n  have B : Tendsto (fun r => μ (cthickening r s)) (𝓝[Iic 0] 0) (𝓝 (μ (closure s))) := by\n    apply Tendsto.congr' _ tendsto_const_nhds\n    filter_upwards [self_mem_nhdsWithin (α := ℝ)] with _ hr\n    rw [cthickening_of_nonpos hr]\n  convert B.sup A\n  exact (nhdsLE_sup_nhdsGT 0).symm\n\n"}
{"name":"tendsto_measure_cthickening_of_isClosed","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\ninst✝² : PseudoEMetricSpace α\ninst✝¹ : MeasurableSpace α\ninst✝ : OpensMeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set α\nhs : Exists fun R => And (GT.gt R 0) (Ne (μ (Metric.cthickening R s)) Top.top)\nh's : IsClosed s\n⊢ Filter.Tendsto (fun r => μ (Metric.cthickening r s)) (nhds 0) (nhds (μ s))","decl":"/-- If a closed set has a closed thickening with finite measure, then the measure of its closed\n`r`-thickenings converge to its measure as `r` tends to `0`. -/\ntheorem tendsto_measure_cthickening_of_isClosed {μ : Measure α} {s : Set α}\n    (hs : ∃ R > 0, μ (cthickening R s) ≠ ∞) (h's : IsClosed s) :\n    Tendsto (fun r => μ (cthickening r s)) (𝓝 0) (𝓝 (μ s)) := by\n  convert tendsto_measure_cthickening hs\n  exact h's.closure_eq.symm\n\n"}
{"name":"tendsto_measure_thickening","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\ninst✝² : PseudoEMetricSpace α\ninst✝¹ : MeasurableSpace α\ninst✝ : OpensMeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set α\nhs : Exists fun R => And (GT.gt R 0) (Ne (μ (Metric.thickening R s)) Top.top)\n⊢ Filter.Tendsto (fun r => μ (Metric.thickening r s)) (nhdsWithin 0 (Set.Ioi 0)) (nhds (μ (closure s)))","decl":"/-- If a set has a thickening with finite measure, then the measures of its `r`-thickenings\nconverge to the measure of its closure as `r > 0` tends to `0`. -/\ntheorem tendsto_measure_thickening {μ : Measure α} {s : Set α}\n    (hs : ∃ R > 0, μ (thickening R s) ≠ ∞) :\n    Tendsto (fun r => μ (thickening r s)) (𝓝[>] 0) (𝓝 (μ (closure s))) := by\n  rw [closure_eq_iInter_thickening]\n  exact tendsto_measure_biInter_gt (fun r _ => isOpen_thickening.nullMeasurableSet)\n      (fun i j _ ij => thickening_mono ij _) hs\n\n"}
{"name":"tendsto_measure_thickening_of_isClosed","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\ninst✝² : PseudoEMetricSpace α\ninst✝¹ : MeasurableSpace α\ninst✝ : OpensMeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set α\nhs : Exists fun R => And (GT.gt R 0) (Ne (μ (Metric.thickening R s)) Top.top)\nh's : IsClosed s\n⊢ Filter.Tendsto (fun r => μ (Metric.thickening r s)) (nhdsWithin 0 (Set.Ioi 0)) (nhds (μ s))","decl":"/-- If a closed set has a thickening with finite measure, then the measure of its\n`r`-thickenings converge to its measure as `r > 0` tends to `0`. -/\ntheorem tendsto_measure_thickening_of_isClosed {μ : Measure α} {s : Set α}\n    (hs : ∃ R > 0, μ (thickening R s) ≠ ∞) (h's : IsClosed s) :\n    Tendsto (fun r => μ (thickening r s)) (𝓝[>] 0) (𝓝 (μ s)) := by\n  convert tendsto_measure_thickening hs\n  exact h's.closure_eq.symm\n\n"}
{"name":"measurable_edist","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\ninst✝³ : PseudoEMetricSpace α\ninst✝² : MeasurableSpace α\ninst✝¹ : OpensMeasurableSpace α\ninst✝ : SecondCountableTopology α\n⊢ Measurable fun p => EDist.edist p.1 p.2","decl":"@[measurability]\ntheorem measurable_edist : Measurable fun p : α × α => edist p.1 p.2 :=\n  continuous_edist.measurable\n\n"}
{"name":"Measurable.edist","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁴ : PseudoEMetricSpace α\ninst✝³ : MeasurableSpace α\ninst✝² : OpensMeasurableSpace α\ninst✝¹ : MeasurableSpace β\ninst✝ : SecondCountableTopology α\nf g : β → α\nhf : Measurable f\nhg : Measurable g\n⊢ Measurable fun b => EDist.edist (f b) (g b)","decl":"@[measurability, fun_prop]\ntheorem Measurable.edist {f g : β → α} (hf : Measurable f) (hg : Measurable g) :\n    Measurable fun b => edist (f b) (g b) :=\n  (@continuous_edist α _).measurable2 hf hg\n\n"}
{"name":"AEMeasurable.edist","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁴ : PseudoEMetricSpace α\ninst✝³ : MeasurableSpace α\ninst✝² : OpensMeasurableSpace α\ninst✝¹ : MeasurableSpace β\ninst✝ : SecondCountableTopology α\nf g : β → α\nμ : MeasureTheory.Measure β\nhf : AEMeasurable f μ\nhg : AEMeasurable g μ\n⊢ AEMeasurable (fun a => EDist.edist (f a) (g a)) μ","decl":"@[measurability, fun_prop]\ntheorem AEMeasurable.edist {f g : β → α} {μ : Measure β} (hf : AEMeasurable f μ)\n    (hg : AEMeasurable g μ) : AEMeasurable (fun a => edist (f a) (g a)) μ :=\n  (@continuous_edist α _).aemeasurable2 hf hg\n\n"}
{"name":"tendsto_measure_cthickening_of_isCompact","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\ninst✝⁴ : MetricSpace α\ninst✝³ : MeasurableSpace α\ninst✝² : OpensMeasurableSpace α\ninst✝¹ : ProperSpace α\nμ : MeasureTheory.Measure α\ninst✝ : MeasureTheory.IsFiniteMeasureOnCompacts μ\ns : Set α\nhs : IsCompact s\n⊢ Filter.Tendsto (fun r => μ (Metric.cthickening r s)) (nhds 0) (nhds (μ s))","decl":"/-- Given a compact set in a proper space, the measure of its `r`-closed thickenings converges to\nits measure as `r` tends to `0`. -/\ntheorem tendsto_measure_cthickening_of_isCompact [MetricSpace α] [MeasurableSpace α]\n    [OpensMeasurableSpace α] [ProperSpace α] {μ : Measure α} [IsFiniteMeasureOnCompacts μ]\n    {s : Set α} (hs : IsCompact s) :\n    Tendsto (fun r => μ (Metric.cthickening r s)) (𝓝 0) (𝓝 (μ s)) :=\n  tendsto_measure_cthickening_of_isClosed\n    ⟨1, zero_lt_one, hs.isBounded.cthickening.measure_lt_top.ne⟩ hs.isClosed\n\n"}
{"name":"exists_borelSpace_of_countablyGenerated_of_separatesPoints","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_5\nm : MeasurableSpace α\ninst✝¹ : MeasurableSpace.CountablyGenerated α\ninst✝ : MeasurableSpace.SeparatesPoints α\n⊢ Exists fun x => And (SecondCountableTopology α) (And (T4Space α) (BorelSpace α))","decl":"/-- If a measurable space is countably generated and separates points, it arises as\nthe borel sets of some second countable t4 topology (i.e. a separable metrizable one). -/\ntheorem exists_borelSpace_of_countablyGenerated_of_separatesPoints (α : Type*)\n    [m : MeasurableSpace α] [CountablyGenerated α] [SeparatesPoints α] :\n    ∃ _ : TopologicalSpace α, SecondCountableTopology α ∧ T4Space α ∧ BorelSpace α := by\n  rcases measurableEquiv_nat_bool_of_countablyGenerated α with ⟨s, ⟨f⟩⟩\n  letI := induced f inferInstance\n  let F := f.toEquiv.toHomeomorphOfIsInducing <| .induced _\n  exact ⟨inferInstance, F.secondCountableTopology, F.symm.t4Space,\n    f.measurableEmbedding.borelSpace F.isInducing⟩\n\n"}
{"name":"exists_opensMeasurableSpace_of_countablySeparated","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_5\nm : MeasurableSpace α\ninst✝ : MeasurableSpace.CountablySeparated α\n⊢ Exists fun x => And (SecondCountableTopology α) (And (T4Space α) (OpensMeasurableSpace α))","decl":"/-- If a measurable space on `α` is countably generated and separates points, there is some\nsecond countable t4 topology on `α` (i.e. a separable metrizable one) for which every\nopen set is measurable. -/\ntheorem exists_opensMeasurableSpace_of_countablySeparated (α : Type*)\n    [m : MeasurableSpace α] [CountablySeparated α] :\n    ∃ _ : TopologicalSpace α, SecondCountableTopology α ∧ T4Space α ∧ OpensMeasurableSpace α := by\n  rcases exists_countablyGenerated_le_of_countablySeparated α with ⟨m', _, _, m'le⟩\n  rcases exists_borelSpace_of_countablyGenerated_of_separatesPoints (m := m') with ⟨τ, _, _, τm'⟩\n  exact ⟨τ, ‹_›, ‹_›, @OpensMeasurableSpace.mk _ _ m (τm'.measurable_eq.symm.le.trans m'le)⟩\n\n"}
{"name":"measurable_norm","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\ninst✝² : MeasurableSpace α\ninst✝¹ : NormedAddCommGroup α\ninst✝ : OpensMeasurableSpace α\n⊢ Measurable Norm.norm","decl":"@[fun_prop, measurability]\ntheorem measurable_norm : Measurable (norm : α → ℝ) :=\n  continuous_norm.measurable\n\n"}
{"name":"Measurable.norm","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝³ : MeasurableSpace α\ninst✝² : NormedAddCommGroup α\ninst✝¹ : OpensMeasurableSpace α\ninst✝ : MeasurableSpace β\nf : β → α\nhf : Measurable f\n⊢ Measurable fun a => Norm.norm (f a)","decl":"@[measurability, fun_prop]\ntheorem Measurable.norm {f : β → α} (hf : Measurable f) : Measurable fun a => norm (f a) :=\n  measurable_norm.comp hf\n\n"}
{"name":"AEMeasurable.norm","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝³ : MeasurableSpace α\ninst✝² : NormedAddCommGroup α\ninst✝¹ : OpensMeasurableSpace α\ninst✝ : MeasurableSpace β\nf : β → α\nμ : MeasureTheory.Measure β\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun a => Norm.norm (f a)) μ","decl":"@[measurability, fun_prop]\ntheorem AEMeasurable.norm {f : β → α} {μ : Measure β} (hf : AEMeasurable f μ) :\n    AEMeasurable (fun a => norm (f a)) μ :=\n  measurable_norm.comp_aemeasurable hf\n\n"}
{"name":"measurable_nnnorm","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\ninst✝² : MeasurableSpace α\ninst✝¹ : NormedAddCommGroup α\ninst✝ : OpensMeasurableSpace α\n⊢ Measurable NNNorm.nnnorm","decl":"@[measurability]\ntheorem measurable_nnnorm : Measurable (nnnorm : α → ℝ≥0) :=\n  continuous_nnnorm.measurable\n\n"}
{"name":"Measurable.nnnorm","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝³ : MeasurableSpace α\ninst✝² : NormedAddCommGroup α\ninst✝¹ : OpensMeasurableSpace α\ninst✝ : MeasurableSpace β\nf : β → α\nhf : Measurable f\n⊢ Measurable fun a => NNNorm.nnnorm (f a)","decl":"@[measurability, fun_prop]\nprotected theorem Measurable.nnnorm {f : β → α} (hf : Measurable f) : Measurable fun a => ‖f a‖₊ :=\n  measurable_nnnorm.comp hf\n\n"}
{"name":"AEMeasurable.nnnorm","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝³ : MeasurableSpace α\ninst✝² : NormedAddCommGroup α\ninst✝¹ : OpensMeasurableSpace α\ninst✝ : MeasurableSpace β\nf : β → α\nμ : MeasureTheory.Measure β\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun a => NNNorm.nnnorm (f a)) μ","decl":"@[measurability, fun_prop]\nprotected lemma AEMeasurable.nnnorm {f : β → α} {μ : Measure β} (hf : AEMeasurable f μ) :\n    AEMeasurable (fun a => ‖f a‖₊) μ :=\n  measurable_nnnorm.comp_aemeasurable hf\n\n"}
{"name":"measurable_enorm","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\ninst✝² : MeasurableSpace α\ninst✝¹ : NormedAddCommGroup α\ninst✝ : OpensMeasurableSpace α\n⊢ Measurable ENorm.enorm","decl":"@[measurability]\nlemma measurable_enorm : Measurable (enorm : α → ℝ≥0∞) := continuous_enorm.measurable\n\n"}
{"name":"Measurable.enorm","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝³ : MeasurableSpace α\ninst✝² : NormedAddCommGroup α\ninst✝¹ : OpensMeasurableSpace α\ninst✝ : MeasurableSpace β\nf : β → α\nhf : Measurable f\n⊢ Measurable fun x => ENorm.enorm (f x)","decl":"@[measurability, fun_prop]\nprotected lemma Measurable.enorm {f : β → α} (hf : Measurable f) : Measurable (‖f ·‖ₑ) :=\n  hf.nnnorm.coe_nnreal_ennreal\n\n"}
{"name":"AEMeasurable.enorm","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝³ : MeasurableSpace α\ninst✝² : NormedAddCommGroup α\ninst✝¹ : OpensMeasurableSpace α\ninst✝ : MeasurableSpace β\nf : β → α\nμ : MeasureTheory.Measure β\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => ENorm.enorm (f x)) μ","decl":"@[measurability, fun_prop]\nprotected lemma AEMeasurable.enorm {f : β → α} {μ : Measure β} (hf : AEMeasurable f μ) :\n    AEMeasurable (‖f ·‖ₑ) μ :=\n  measurable_enorm.comp_aemeasurable hf\n\n"}
{"name":"measurable_ennnorm","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\ninst✝² : MeasurableSpace α\ninst✝¹ : NormedAddCommGroup α\ninst✝ : OpensMeasurableSpace α\n⊢ Measurable ENorm.enorm","decl":"@[deprecated (since := \"2025-01-21\")] alias measurable_ennnorm := measurable_enorm\n"}
{"name":"Measurable.ennnorm","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝³ : MeasurableSpace α\ninst✝² : NormedAddCommGroup α\ninst✝¹ : OpensMeasurableSpace α\ninst✝ : MeasurableSpace β\nf : β → α\nhf : Measurable f\n⊢ Measurable fun x => ENorm.enorm (f x)","decl":"@[deprecated (since := \"2025-01-21\")] alias Measurable.ennnorm := Measurable.enorm\n"}
{"name":"AEMeasurable.ennnorm","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Metric","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝³ : MeasurableSpace α\ninst✝² : NormedAddCommGroup α\ninst✝¹ : OpensMeasurableSpace α\ninst✝ : MeasurableSpace β\nf : β → α\nμ : MeasureTheory.Measure β\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => ENorm.enorm (f x)) μ","decl":"@[deprecated (since := \"2025-01-21\")] alias AEMeasurable.ennnorm := AEMeasurable.enorm\n\n"}
