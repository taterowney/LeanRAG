{"name":"OrderedAddCommMonoid.add_le_add_left","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_2\nself : OrderedAddCommMonoid α\na b : α\na✝ : LE.le a b\nc : α\n⊢ LE.le (HAdd.hAdd c a) (HAdd.hAdd c b)","decl":"/-- An ordered (additive) commutative monoid is a commutative monoid with a partial order such that\naddition is monotone. -/\nclass OrderedAddCommMonoid (α : Type*) extends AddCommMonoid α, PartialOrder α where\n  protected add_le_add_left : ∀ a b : α, a ≤ b → ∀ c, c + a ≤ c + b\n\n"}
{"name":"OrderedCommMonoid.mul_le_mul_left","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_2\nself : OrderedCommMonoid α\na b : α\na✝ : LE.le a b\nc : α\n⊢ LE.le (HMul.hMul c a) (HMul.hMul c b)","decl":"/-- An ordered commutative monoid is a commutative monoid with a partial order such that\nmultiplication is monotone. -/\n@[to_additive]\nclass OrderedCommMonoid (α : Type*) extends CommMonoid α, PartialOrder α where\n  protected mul_le_mul_left : ∀ a b : α, a ≤ b → ∀ c, c * a ≤ c * b\n\n"}
{"name":"OrderedAddCommMonoid.toAddLeftMono","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_1\ninst✝ : OrderedAddCommMonoid α\n⊢ AddLeftMono α","decl":"@[to_additive]\ninstance OrderedCommMonoid.toMulLeftMono : MulLeftMono α where\n  elim := fun a _ _ bc ↦ OrderedCommMonoid.mul_le_mul_left _ _ bc a\n\n"}
{"name":"OrderedCommMonoid.toMulLeftMono","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_1\ninst✝ : OrderedCommMonoid α\n⊢ MulLeftMono α","decl":"@[to_additive]\ninstance OrderedCommMonoid.toMulLeftMono : MulLeftMono α where\n  elim := fun a _ _ bc ↦ OrderedCommMonoid.mul_le_mul_left _ _ bc a\n\n"}
{"name":"OrderedAddCommMonoid.toAddRightMono","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"M : Type u_2\ninst✝ : OrderedAddCommMonoid M\n⊢ AddRightMono M","decl":"@[to_additive]\ntheorem OrderedCommMonoid.toMulRightMono (M : Type*) [OrderedCommMonoid M] :\n    MulRightMono M :=\n  inferInstance\n\n"}
{"name":"OrderedCommMonoid.toMulRightMono","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"M : Type u_2\ninst✝ : OrderedCommMonoid M\n⊢ MulRightMono M","decl":"@[to_additive]\ntheorem OrderedCommMonoid.toMulRightMono (M : Type*) [OrderedCommMonoid M] :\n    MulRightMono M :=\n  inferInstance\n\n"}
{"name":"OrderedCancelAddCommMonoid.le_of_add_le_add_left","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_2\nself : OrderedCancelAddCommMonoid α\na b c : α\na✝ : LE.le (HAdd.hAdd a b) (HAdd.hAdd a c)\n⊢ LE.le b c","decl":"/-- An ordered cancellative additive commutative monoid is a partially ordered commutative additive\nmonoid in which addition is cancellative and monotone. -/\nclass OrderedCancelAddCommMonoid (α : Type*) extends OrderedAddCommMonoid α where\n  protected le_of_add_le_add_left : ∀ a b c : α, a + b ≤ a + c → b ≤ c\n\n"}
{"name":"OrderedCancelCommMonoid.le_of_mul_le_mul_left","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_2\nself : OrderedCancelCommMonoid α\na b c : α\na✝ : LE.le (HMul.hMul a b) (HMul.hMul a c)\n⊢ LE.le b c","decl":"/-- An ordered cancellative commutative monoid is a partially ordered commutative monoid in which\nmultiplication is cancellative and monotone. -/\n@[to_additive OrderedCancelAddCommMonoid]\nclass OrderedCancelCommMonoid (α : Type*) extends OrderedCommMonoid α where\n  protected le_of_mul_le_mul_left : ∀ a b c : α, a * b ≤ a * c → b ≤ c\n\n"}
{"name":"OrderedCancelAddCommMonoid.toAddLeftReflectLE","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_1\ninst✝ : OrderedCancelAddCommMonoid α\n⊢ AddLeftReflectLE α","decl":"@[to_additive]\ninstance (priority := 200) OrderedCancelCommMonoid.toMulLeftReflectLE :\n    MulLeftReflectLE α :=\n  ⟨OrderedCancelCommMonoid.le_of_mul_le_mul_left⟩\n\n"}
{"name":"OrderedCancelCommMonoid.toMulLeftReflectLE","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_1\ninst✝ : OrderedCancelCommMonoid α\n⊢ MulLeftReflectLE α","decl":"@[to_additive]\ninstance (priority := 200) OrderedCancelCommMonoid.toMulLeftReflectLE :\n    MulLeftReflectLE α :=\n  ⟨OrderedCancelCommMonoid.le_of_mul_le_mul_left⟩\n\n"}
{"name":"OrderedCancelAddCommMonoid.toAddLeftReflectLT","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_1\ninst✝ : OrderedCancelAddCommMonoid α\n⊢ AddLeftReflectLT α","decl":"@[to_additive]\ninstance OrderedCancelCommMonoid.toMulLeftReflectLT :\n    MulLeftReflectLT α where\n  elim := contravariant_lt_of_contravariant_le α α _ ContravariantClass.elim\n\n"}
{"name":"OrderedCancelCommMonoid.toMulLeftReflectLT","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_1\ninst✝ : OrderedCancelCommMonoid α\n⊢ MulLeftReflectLT α","decl":"@[to_additive]\ninstance OrderedCancelCommMonoid.toMulLeftReflectLT :\n    MulLeftReflectLT α where\n  elim := contravariant_lt_of_contravariant_le α α _ ContravariantClass.elim\n\n"}
{"name":"OrderedCancelCommMonoid.toMulRightReflectLT","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_1\ninst✝ : OrderedCancelCommMonoid α\n⊢ MulRightReflectLT α","decl":"@[to_additive]\ntheorem OrderedCancelCommMonoid.toMulRightReflectLT :\n    MulRightReflectLT α :=\n  inferInstance\n\n-- See note [lower instance priority]\n"}
{"name":"OrderedCancelAddCommMonoid.toAddRightReflectLT","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_1\ninst✝ : OrderedCancelAddCommMonoid α\n⊢ AddRightReflectLT α","decl":"@[to_additive]\ntheorem OrderedCancelCommMonoid.toMulRightReflectLT :\n    MulRightReflectLT α :=\n  inferInstance\n\n-- See note [lower instance priority]\n"}
{"name":"LinearOrderedAddCommMonoid.compare_eq_compareOfLessAndEq","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedAddCommMonoid α\na b : α\n⊢ Eq (Ord.compare a b) (compareOfLessAndEq a b)","decl":"/-- A linearly ordered additive commutative monoid. -/\nclass LinearOrderedAddCommMonoid (α : Type*) extends OrderedAddCommMonoid α, LinearOrder α\n\n"}
{"name":"LinearOrderedAddCommMonoid.max_def","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedAddCommMonoid α\na b : α\n⊢ Eq (Max.max a b) (ite (LE.le a b) b a)","decl":"/-- A linearly ordered additive commutative monoid. -/\nclass LinearOrderedAddCommMonoid (α : Type*) extends OrderedAddCommMonoid α, LinearOrder α\n\n"}
{"name":"LinearOrderedAddCommMonoid.le_total","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedAddCommMonoid α\na b : α\n⊢ Or (LE.le a b) (LE.le b a)","decl":"/-- A linearly ordered additive commutative monoid. -/\nclass LinearOrderedAddCommMonoid (α : Type*) extends OrderedAddCommMonoid α, LinearOrder α\n\n"}
{"name":"LinearOrderedAddCommMonoid.min_def","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedAddCommMonoid α\na b : α\n⊢ Eq (Min.min a b) (ite (LE.le a b) a b)","decl":"/-- A linearly ordered additive commutative monoid. -/\nclass LinearOrderedAddCommMonoid (α : Type*) extends OrderedAddCommMonoid α, LinearOrder α\n\n"}
{"name":"LinearOrderedCommMonoid.compare_eq_compareOfLessAndEq","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedCommMonoid α\na b : α\n⊢ Eq (Ord.compare a b) (compareOfLessAndEq a b)","decl":"/-- A linearly ordered commutative monoid. -/\n@[to_additive]\nclass LinearOrderedCommMonoid (α : Type*) extends OrderedCommMonoid α, LinearOrder α\n\n"}
{"name":"LinearOrderedCommMonoid.max_def","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedCommMonoid α\na b : α\n⊢ Eq (Max.max a b) (ite (LE.le a b) b a)","decl":"/-- A linearly ordered commutative monoid. -/\n@[to_additive]\nclass LinearOrderedCommMonoid (α : Type*) extends OrderedCommMonoid α, LinearOrder α\n\n"}
{"name":"LinearOrderedCommMonoid.le_total","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedCommMonoid α\na b : α\n⊢ Or (LE.le a b) (LE.le b a)","decl":"/-- A linearly ordered commutative monoid. -/\n@[to_additive]\nclass LinearOrderedCommMonoid (α : Type*) extends OrderedCommMonoid α, LinearOrder α\n\n"}
{"name":"LinearOrderedCommMonoid.min_def","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedCommMonoid α\na b : α\n⊢ Eq (Min.min a b) (ite (LE.le a b) a b)","decl":"/-- A linearly ordered commutative monoid. -/\n@[to_additive]\nclass LinearOrderedCommMonoid (α : Type*) extends OrderedCommMonoid α, LinearOrder α\n\n"}
{"name":"LinearOrderedCancelAddCommMonoid.max_def","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedCancelAddCommMonoid α\na b : α\n⊢ Eq (Max.max a b) (ite (LE.le a b) b a)","decl":"/-- A linearly ordered cancellative additive commutative monoid is an additive commutative monoid\nwith a decidable linear order in which addition is cancellative and monotone. -/\nclass LinearOrderedCancelAddCommMonoid (α : Type*) extends OrderedCancelAddCommMonoid α,\n    LinearOrderedAddCommMonoid α\n\n"}
{"name":"LinearOrderedCancelAddCommMonoid.min_def","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedCancelAddCommMonoid α\na b : α\n⊢ Eq (Min.min a b) (ite (LE.le a b) a b)","decl":"/-- A linearly ordered cancellative additive commutative monoid is an additive commutative monoid\nwith a decidable linear order in which addition is cancellative and monotone. -/\nclass LinearOrderedCancelAddCommMonoid (α : Type*) extends OrderedCancelAddCommMonoid α,\n    LinearOrderedAddCommMonoid α\n\n"}
{"name":"LinearOrderedCancelAddCommMonoid.le_total","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedCancelAddCommMonoid α\na b : α\n⊢ Or (LE.le a b) (LE.le b a)","decl":"/-- A linearly ordered cancellative additive commutative monoid is an additive commutative monoid\nwith a decidable linear order in which addition is cancellative and monotone. -/\nclass LinearOrderedCancelAddCommMonoid (α : Type*) extends OrderedCancelAddCommMonoid α,\n    LinearOrderedAddCommMonoid α\n\n"}
{"name":"LinearOrderedCancelAddCommMonoid.compare_eq_compareOfLessAndEq","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedCancelAddCommMonoid α\na b : α\n⊢ Eq (Ord.compare a b) (compareOfLessAndEq a b)","decl":"/-- A linearly ordered cancellative additive commutative monoid is an additive commutative monoid\nwith a decidable linear order in which addition is cancellative and monotone. -/\nclass LinearOrderedCancelAddCommMonoid (α : Type*) extends OrderedCancelAddCommMonoid α,\n    LinearOrderedAddCommMonoid α\n\n"}
{"name":"LinearOrderedCancelCommMonoid.max_def","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedCancelCommMonoid α\na b : α\n⊢ Eq (Max.max a b) (ite (LE.le a b) b a)","decl":"/-- A linearly ordered cancellative commutative monoid is a commutative monoid with a linear order\nin which multiplication is cancellative and monotone. -/\n@[to_additive LinearOrderedCancelAddCommMonoid]\nclass LinearOrderedCancelCommMonoid (α : Type*) extends OrderedCancelCommMonoid α,\n    LinearOrderedCommMonoid α\n\n"}
{"name":"LinearOrderedCancelCommMonoid.compare_eq_compareOfLessAndEq","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedCancelCommMonoid α\na b : α\n⊢ Eq (Ord.compare a b) (compareOfLessAndEq a b)","decl":"/-- A linearly ordered cancellative commutative monoid is a commutative monoid with a linear order\nin which multiplication is cancellative and monotone. -/\n@[to_additive LinearOrderedCancelAddCommMonoid]\nclass LinearOrderedCancelCommMonoid (α : Type*) extends OrderedCancelCommMonoid α,\n    LinearOrderedCommMonoid α\n\n"}
{"name":"LinearOrderedCancelCommMonoid.min_def","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedCancelCommMonoid α\na b : α\n⊢ Eq (Min.min a b) (ite (LE.le a b) a b)","decl":"/-- A linearly ordered cancellative commutative monoid is a commutative monoid with a linear order\nin which multiplication is cancellative and monotone. -/\n@[to_additive LinearOrderedCancelAddCommMonoid]\nclass LinearOrderedCancelCommMonoid (α : Type*) extends OrderedCancelCommMonoid α,\n    LinearOrderedCommMonoid α\n\n"}
{"name":"LinearOrderedCancelCommMonoid.le_total","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedCancelCommMonoid α\na b : α\n⊢ Or (LE.le a b) (LE.le b a)","decl":"/-- A linearly ordered cancellative commutative monoid is a commutative monoid with a linear order\nin which multiplication is cancellative and monotone. -/\n@[to_additive LinearOrderedCancelAddCommMonoid]\nclass LinearOrderedCancelCommMonoid (α : Type*) extends OrderedCancelCommMonoid α,\n    LinearOrderedCommMonoid α\n\n"}
{"name":"nonneg_add_self_iff","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedAddCommMonoid α\na : α\n⊢ Iff (LE.le 0 (HAdd.hAdd a a)) (LE.le 0 a)","decl":"@[to_additive (attr := simp)]\ntheorem one_le_mul_self_iff : 1 ≤ a * a ↔ 1 ≤ a :=\n  ⟨(fun h ↦ by push_neg at h ⊢; exact mul_lt_one' h h).mtr, fun h ↦ one_le_mul h h⟩\n\n"}
{"name":"one_le_mul_self_iff","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedCommMonoid α\na : α\n⊢ Iff (LE.le 1 (HMul.hMul a a)) (LE.le 1 a)","decl":"@[to_additive (attr := simp)]\ntheorem one_le_mul_self_iff : 1 ≤ a * a ↔ 1 ≤ a :=\n  ⟨(fun h ↦ by push_neg at h ⊢; exact mul_lt_one' h h).mtr, fun h ↦ one_le_mul h h⟩\n\n"}
{"name":"pos_add_self_iff","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedAddCommMonoid α\na : α\n⊢ Iff (LT.lt 0 (HAdd.hAdd a a)) (LT.lt 0 a)","decl":"@[to_additive (attr := simp)]\ntheorem one_lt_mul_self_iff : 1 < a * a ↔ 1 < a :=\n  ⟨(fun h ↦ by push_neg at h ⊢; exact mul_le_one' h h).mtr, fun h ↦ one_lt_mul'' h h⟩\n\n"}
{"name":"one_lt_mul_self_iff","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedCommMonoid α\na : α\n⊢ Iff (LT.lt 1 (HMul.hMul a a)) (LT.lt 1 a)","decl":"@[to_additive (attr := simp)]\ntheorem one_lt_mul_self_iff : 1 < a * a ↔ 1 < a :=\n  ⟨(fun h ↦ by push_neg at h ⊢; exact mul_le_one' h h).mtr, fun h ↦ one_lt_mul'' h h⟩\n\n"}
{"name":"mul_self_le_one_iff","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedCommMonoid α\na : α\n⊢ Iff (LE.le (HMul.hMul a a) 1) (LE.le a 1)","decl":"@[to_additive (attr := simp)]\ntheorem mul_self_le_one_iff : a * a ≤ 1 ↔ a ≤ 1 := by simp [← not_iff_not]\n\n"}
{"name":"add_self_nonpos_iff","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedAddCommMonoid α\na : α\n⊢ Iff (LE.le (HAdd.hAdd a a) 0) (LE.le a 0)","decl":"@[to_additive (attr := simp)]\ntheorem mul_self_le_one_iff : a * a ≤ 1 ↔ a ≤ 1 := by simp [← not_iff_not]\n\n"}
{"name":"mul_self_lt_one_iff","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedCommMonoid α\na : α\n⊢ Iff (LT.lt (HMul.hMul a a) 1) (LT.lt a 1)","decl":"@[to_additive (attr := simp)]\ntheorem mul_self_lt_one_iff : a * a < 1 ↔ a < 1 := by simp [← not_iff_not]\n"}
{"name":"add_self_neg_iff","module":"Mathlib.Algebra.Order.Monoid.Defs","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedAddCommMonoid α\na : α\n⊢ Iff (LT.lt (HAdd.hAdd a a) 0) (LT.lt a 0)","decl":"@[to_additive (attr := simp)]\ntheorem mul_self_lt_one_iff : a * a < 1 ↔ a < 1 := by simp [← not_iff_not]\n"}
