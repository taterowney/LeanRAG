{"name":"Subsemigroup.mem_square","module":"Mathlib.Algebra.Group.Subgroup.Even","initialProofState":"S : Type u_1\ninst✝ : CommSemigroup S\na : S\n⊢ Iff (Membership.mem (Subsemigroup.square S) a) (IsSquare a)","decl":"@[to_additive (attr := simp)]\ntheorem mem_square {a : S} : a ∈ square S ↔ IsSquare a := Iff.rfl\n\n"}
{"name":"AddSubsemigroup.mem_even","module":"Mathlib.Algebra.Group.Subgroup.Even","initialProofState":"S : Type u_1\ninst✝ : AddCommSemigroup S\na : S\n⊢ Iff (Membership.mem (AddSubsemigroup.even S) a) (Even a)","decl":"@[to_additive (attr := simp)]\ntheorem mem_square {a : S} : a ∈ square S ↔ IsSquare a := Iff.rfl\n\n"}
{"name":"Subsemigroup.coe_square","module":"Mathlib.Algebra.Group.Subgroup.Even","initialProofState":"S : Type u_1\ninst✝ : CommSemigroup S\n⊢ Eq (↑(Subsemigroup.square S)) (setOf fun s => IsSquare s)","decl":"@[to_additive (attr := simp, norm_cast)]\ntheorem coe_square : square S = {s : S | IsSquare s} := rfl\n\n"}
{"name":"AddSubsemigroup.coe_even","module":"Mathlib.Algebra.Group.Subgroup.Even","initialProofState":"S : Type u_1\ninst✝ : AddCommSemigroup S\n⊢ Eq (↑(AddSubsemigroup.even S)) (setOf fun s => Even s)","decl":"@[to_additive (attr := simp, norm_cast)]\ntheorem coe_square : square S = {s : S | IsSquare s} := rfl\n\n"}
{"name":"AddSubmonoid.even_toSubsemigroup","module":"Mathlib.Algebra.Group.Subgroup.Even","initialProofState":"M : Type u_1\ninst✝ : AddCommMonoid M\n⊢ Eq (AddSubmonoid.even M).toAddSubsemigroup (AddSubsemigroup.even M)","decl":"@[to_additive (attr := simp)]\ntheorem square_toSubsemigroup : (square M).toSubsemigroup = .square M := rfl\n\n"}
{"name":"Submonoid.square_toSubsemigroup","module":"Mathlib.Algebra.Group.Subgroup.Even","initialProofState":"M : Type u_1\ninst✝ : CommMonoid M\n⊢ Eq (Submonoid.square M).toSubsemigroup (Subsemigroup.square M)","decl":"@[to_additive (attr := simp)]\ntheorem square_toSubsemigroup : (square M).toSubsemigroup = .square M := rfl\n\n"}
{"name":"Submonoid.mem_square","module":"Mathlib.Algebra.Group.Subgroup.Even","initialProofState":"M : Type u_1\ninst✝ : CommMonoid M\na : M\n⊢ Iff (Membership.mem (Submonoid.square M) a) (IsSquare a)","decl":"@[to_additive (attr := simp)]\ntheorem mem_square {a : M} : a ∈ square M ↔ IsSquare a := Iff.rfl\n\n"}
{"name":"AddSubmonoid.mem_even","module":"Mathlib.Algebra.Group.Subgroup.Even","initialProofState":"M : Type u_1\ninst✝ : AddCommMonoid M\na : M\n⊢ Iff (Membership.mem (AddSubmonoid.even M) a) (Even a)","decl":"@[to_additive (attr := simp)]\ntheorem mem_square {a : M} : a ∈ square M ↔ IsSquare a := Iff.rfl\n\n"}
{"name":"Submonoid.coe_square","module":"Mathlib.Algebra.Group.Subgroup.Even","initialProofState":"M : Type u_1\ninst✝ : CommMonoid M\n⊢ Eq (↑(Submonoid.square M)) (setOf fun s => IsSquare s)","decl":"@[to_additive (attr := simp, norm_cast)]\ntheorem coe_square : square M = {s : M | IsSquare s} := rfl\n\n"}
{"name":"AddSubmonoid.coe_even","module":"Mathlib.Algebra.Group.Subgroup.Even","initialProofState":"M : Type u_1\ninst✝ : AddCommMonoid M\n⊢ Eq (↑(AddSubmonoid.even M)) (setOf fun s => Even s)","decl":"@[to_additive (attr := simp, norm_cast)]\ntheorem coe_square : square M = {s : M | IsSquare s} := rfl\n\n"}
{"name":"Subgroup.square_toSubmonoid","module":"Mathlib.Algebra.Group.Subgroup.Even","initialProofState":"G : Type u_1\ninst✝ : CommGroup G\n⊢ Eq (Subgroup.square G).toSubmonoid (Submonoid.square G)","decl":"@[to_additive (attr := simp)]\ntheorem square_toSubmonoid : (square G).toSubmonoid = .square G := rfl\n\n"}
{"name":"AddSubgroup.even_toAddSubmonoid","module":"Mathlib.Algebra.Group.Subgroup.Even","initialProofState":"G : Type u_1\ninst✝ : AddCommGroup G\n⊢ Eq (AddSubgroup.even G).toAddSubmonoid (AddSubmonoid.even G)","decl":"@[to_additive (attr := simp)]\ntheorem square_toSubmonoid : (square G).toSubmonoid = .square G := rfl\n\n"}
{"name":"Subgroup.mem_square","module":"Mathlib.Algebra.Group.Subgroup.Even","initialProofState":"G : Type u_1\ninst✝ : CommGroup G\na : G\n⊢ Iff (Membership.mem (Subgroup.square G) a) (IsSquare a)","decl":"@[to_additive (attr := simp)]\ntheorem mem_square {a : G} : a ∈ square G ↔ IsSquare a := Iff.rfl\n\n"}
{"name":"AddSubgroup.mem_even","module":"Mathlib.Algebra.Group.Subgroup.Even","initialProofState":"G : Type u_1\ninst✝ : AddCommGroup G\na : G\n⊢ Iff (Membership.mem (AddSubgroup.even G) a) (Even a)","decl":"@[to_additive (attr := simp)]\ntheorem mem_square {a : G} : a ∈ square G ↔ IsSquare a := Iff.rfl\n\n"}
{"name":"AddSubgroup.coe_even","module":"Mathlib.Algebra.Group.Subgroup.Even","initialProofState":"G : Type u_1\ninst✝ : AddCommGroup G\n⊢ Eq (↑(AddSubgroup.even G)) (setOf fun s => Even s)","decl":"@[to_additive (attr := simp, norm_cast)]\ntheorem coe_square : square G = {s : G | IsSquare s} := rfl\n\n"}
{"name":"Subgroup.coe_square","module":"Mathlib.Algebra.Group.Subgroup.Even","initialProofState":"G : Type u_1\ninst✝ : CommGroup G\n⊢ Eq (↑(Subgroup.square G)) (setOf fun s => IsSquare s)","decl":"@[to_additive (attr := simp, norm_cast)]\ntheorem coe_square : square G = {s : G | IsSquare s} := rfl\n\n"}
