{"name":"Measurable.inner","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Inner","initialProofState":"α : Type u_1\n𝕜 : Type u_2\nE : Type u_3\ninst✝⁵ : RCLike 𝕜\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : InnerProductSpace 𝕜 E\nx✝ : MeasurableSpace α\ninst✝² : MeasurableSpace E\ninst✝¹ : OpensMeasurableSpace E\ninst✝ : SecondCountableTopology E\nf g : α → E\nhf : Measurable f\nhg : Measurable g\n⊢ Measurable fun t => Inner.inner (f t) (g t)","decl":"@[aesop safe 20 apply (rule_sets := [Measurable])]\ntheorem Measurable.inner {_ : MeasurableSpace α} [MeasurableSpace E] [OpensMeasurableSpace E]\n    [SecondCountableTopology E] {f g : α → E} (hf : Measurable f)\n    (hg : Measurable g) : Measurable fun t => ⟪f t, g t⟫ :=\n  Continuous.measurable2 continuous_inner hf hg\n\n"}
{"name":"Measurable.const_inner","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Inner","initialProofState":"α : Type u_1\n𝕜 : Type u_2\nE : Type u_3\ninst✝⁵ : RCLike 𝕜\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : InnerProductSpace 𝕜 E\nx✝ : MeasurableSpace α\ninst✝² : MeasurableSpace E\ninst✝¹ : OpensMeasurableSpace E\ninst✝ : SecondCountableTopology E\nc : E\nf : α → E\nhf : Measurable f\n⊢ Measurable fun t => Inner.inner c (f t)","decl":"@[measurability]\ntheorem Measurable.const_inner {_ : MeasurableSpace α} [MeasurableSpace E] [OpensMeasurableSpace E]\n    [SecondCountableTopology E] {c : E} {f : α → E} (hf : Measurable f) :\n    Measurable fun t => ⟪c, f t⟫ :=\n  Measurable.inner measurable_const hf\n\n"}
{"name":"Measurable.inner_const","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Inner","initialProofState":"α : Type u_1\n𝕜 : Type u_2\nE : Type u_3\ninst✝⁵ : RCLike 𝕜\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : InnerProductSpace 𝕜 E\nx✝ : MeasurableSpace α\ninst✝² : MeasurableSpace E\ninst✝¹ : OpensMeasurableSpace E\ninst✝ : SecondCountableTopology E\nc : E\nf : α → E\nhf : Measurable f\n⊢ Measurable fun t => Inner.inner (f t) c","decl":"@[measurability]\ntheorem Measurable.inner_const {_ : MeasurableSpace α} [MeasurableSpace E] [OpensMeasurableSpace E]\n    [SecondCountableTopology E] {c : E} {f : α → E} (hf : Measurable f) :\n    Measurable fun t => ⟪f t, c⟫ :=\n  Measurable.inner hf measurable_const\n\n"}
{"name":"AEMeasurable.inner","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Inner","initialProofState":"α : Type u_1\n𝕜 : Type u_2\nE : Type u_3\ninst✝⁵ : RCLike 𝕜\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : InnerProductSpace 𝕜 E\nm : MeasurableSpace α\ninst✝² : MeasurableSpace E\ninst✝¹ : OpensMeasurableSpace E\ninst✝ : SecondCountableTopology E\nμ : MeasureTheory.Measure α\nf g : α → E\nhf : AEMeasurable f μ\nhg : AEMeasurable g μ\n⊢ AEMeasurable (fun x => Inner.inner (f x) (g x)) μ","decl":"@[aesop safe 20 apply (rule_sets := [Measurable])]\ntheorem AEMeasurable.inner {m : MeasurableSpace α} [MeasurableSpace E] [OpensMeasurableSpace E]\n    [SecondCountableTopology E] {μ : MeasureTheory.Measure α} {f g : α → E}\n    (hf : AEMeasurable f μ) (hg : AEMeasurable g μ) : AEMeasurable (fun x => ⟪f x, g x⟫) μ := by\n  refine ⟨fun x => ⟪hf.mk f x, hg.mk g x⟫, hf.measurable_mk.inner hg.measurable_mk, ?_⟩\n  refine hf.ae_eq_mk.mp (hg.ae_eq_mk.mono fun x hxg hxf => ?_)\n  dsimp only\n  congr\n\n"}
{"name":"AEMeasurable.const_inner","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Inner","initialProofState":"α : Type u_1\n𝕜 : Type u_2\nE : Type u_3\ninst✝⁵ : RCLike 𝕜\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : InnerProductSpace 𝕜 E\nm : MeasurableSpace α\ninst✝² : MeasurableSpace E\ninst✝¹ : OpensMeasurableSpace E\ninst✝ : SecondCountableTopology E\nμ : MeasureTheory.Measure α\nf : α → E\nc : E\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => Inner.inner c (f x)) μ","decl":"set_option linter.unusedVariables false in\n@[measurability]\ntheorem AEMeasurable.const_inner {m : MeasurableSpace α} [MeasurableSpace E]\n    [OpensMeasurableSpace E] [SecondCountableTopology E]\n    {μ : MeasureTheory.Measure α} {f : α → E} {c : E} (hf : AEMeasurable f μ) :\n    AEMeasurable (fun x => ⟪c, f x⟫) μ :=\n  AEMeasurable.inner aemeasurable_const hf\n\n"}
{"name":"AEMeasurable.inner_const","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Inner","initialProofState":"α : Type u_1\n𝕜 : Type u_2\nE : Type u_3\ninst✝⁵ : RCLike 𝕜\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : InnerProductSpace 𝕜 E\nm : MeasurableSpace α\ninst✝² : MeasurableSpace E\ninst✝¹ : OpensMeasurableSpace E\ninst✝ : SecondCountableTopology E\nμ : MeasureTheory.Measure α\nf : α → E\nc : E\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => Inner.inner (f x) c) μ","decl":"set_option linter.unusedVariables false in\n@[measurability]\ntheorem AEMeasurable.inner_const {m : MeasurableSpace α} [MeasurableSpace E]\n    [OpensMeasurableSpace E] [SecondCountableTopology E]\n    {μ : MeasureTheory.Measure α} {f : α → E} {c : E} (hf : AEMeasurable f μ) :\n    AEMeasurable (fun x => ⟪f x, c⟫) μ :=\n  AEMeasurable.inner hf aemeasurable_const\n"}
