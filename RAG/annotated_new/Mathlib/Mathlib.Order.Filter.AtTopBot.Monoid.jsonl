{"name":"Filter.tendsto_atTop_add_nonneg_left'","module":"Mathlib.Order.Filter.AtTopBot.Monoid","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedAddCommMonoid β\nl : Filter α\nf g : α → β\nhf : Filter.Eventually (fun x => LE.le 0 (f x)) l\nhg : Filter.Tendsto g l Filter.atTop\n⊢ Filter.Tendsto (fun x => HAdd.hAdd (f x) (g x)) l Filter.atTop","decl":"theorem tendsto_atTop_add_nonneg_left' (hf : ∀ᶠ x in l, 0 ≤ f x) (hg : Tendsto g l atTop) :\n    Tendsto (fun x => f x + g x) l atTop :=\n  tendsto_atTop_mono' l (hf.mono fun _ => le_add_of_nonneg_left) hg\n\n"}
{"name":"Filter.tendsto_atBot_add_nonpos_left'","module":"Mathlib.Order.Filter.AtTopBot.Monoid","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedAddCommMonoid β\nl : Filter α\nf g : α → β\nhf : Filter.Eventually (fun x => LE.le (f x) 0) l\nhg : Filter.Tendsto g l Filter.atBot\n⊢ Filter.Tendsto (fun x => HAdd.hAdd (f x) (g x)) l Filter.atBot","decl":"theorem tendsto_atBot_add_nonpos_left' (hf : ∀ᶠ x in l, f x ≤ 0) (hg : Tendsto g l atBot) :\n    Tendsto (fun x => f x + g x) l atBot :=\n  @tendsto_atTop_add_nonneg_left' _ βᵒᵈ _ _ _ _ hf hg\n\n"}
{"name":"Filter.tendsto_atTop_add_nonneg_left","module":"Mathlib.Order.Filter.AtTopBot.Monoid","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedAddCommMonoid β\nl : Filter α\nf g : α → β\nhf : ∀ (x : α), LE.le 0 (f x)\nhg : Filter.Tendsto g l Filter.atTop\n⊢ Filter.Tendsto (fun x => HAdd.hAdd (f x) (g x)) l Filter.atTop","decl":"theorem tendsto_atTop_add_nonneg_left (hf : ∀ x, 0 ≤ f x) (hg : Tendsto g l atTop) :\n    Tendsto (fun x => f x + g x) l atTop :=\n  tendsto_atTop_add_nonneg_left' (Eventually.of_forall hf) hg\n\n"}
{"name":"Filter.tendsto_atBot_add_nonpos_left","module":"Mathlib.Order.Filter.AtTopBot.Monoid","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedAddCommMonoid β\nl : Filter α\nf g : α → β\nhf : ∀ (x : α), LE.le (f x) 0\nhg : Filter.Tendsto g l Filter.atBot\n⊢ Filter.Tendsto (fun x => HAdd.hAdd (f x) (g x)) l Filter.atBot","decl":"theorem tendsto_atBot_add_nonpos_left (hf : ∀ x, f x ≤ 0) (hg : Tendsto g l atBot) :\n    Tendsto (fun x => f x + g x) l atBot :=\n  @tendsto_atTop_add_nonneg_left _ βᵒᵈ _ _ _ _ hf hg\n\n"}
{"name":"Filter.tendsto_atTop_add_nonneg_right'","module":"Mathlib.Order.Filter.AtTopBot.Monoid","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedAddCommMonoid β\nl : Filter α\nf g : α → β\nhf : Filter.Tendsto f l Filter.atTop\nhg : Filter.Eventually (fun x => LE.le 0 (g x)) l\n⊢ Filter.Tendsto (fun x => HAdd.hAdd (f x) (g x)) l Filter.atTop","decl":"theorem tendsto_atTop_add_nonneg_right' (hf : Tendsto f l atTop) (hg : ∀ᶠ x in l, 0 ≤ g x) :\n    Tendsto (fun x => f x + g x) l atTop :=\n  tendsto_atTop_mono' l (monotone_mem (fun _ => le_add_of_nonneg_right) hg) hf\n\n"}
{"name":"Filter.tendsto_atBot_add_nonpos_right'","module":"Mathlib.Order.Filter.AtTopBot.Monoid","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedAddCommMonoid β\nl : Filter α\nf g : α → β\nhf : Filter.Tendsto f l Filter.atBot\nhg : Filter.Eventually (fun x => LE.le (g x) 0) l\n⊢ Filter.Tendsto (fun x => HAdd.hAdd (f x) (g x)) l Filter.atBot","decl":"theorem tendsto_atBot_add_nonpos_right' (hf : Tendsto f l atBot) (hg : ∀ᶠ x in l, g x ≤ 0) :\n    Tendsto (fun x => f x + g x) l atBot :=\n  @tendsto_atTop_add_nonneg_right' _ βᵒᵈ _ _ _ _ hf hg\n\n"}
{"name":"Filter.tendsto_atTop_add_nonneg_right","module":"Mathlib.Order.Filter.AtTopBot.Monoid","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedAddCommMonoid β\nl : Filter α\nf g : α → β\nhf : Filter.Tendsto f l Filter.atTop\nhg : ∀ (x : α), LE.le 0 (g x)\n⊢ Filter.Tendsto (fun x => HAdd.hAdd (f x) (g x)) l Filter.atTop","decl":"theorem tendsto_atTop_add_nonneg_right (hf : Tendsto f l atTop) (hg : ∀ x, 0 ≤ g x) :\n    Tendsto (fun x => f x + g x) l atTop :=\n  tendsto_atTop_add_nonneg_right' hf (Eventually.of_forall hg)\n\n"}
{"name":"Filter.tendsto_atBot_add_nonpos_right","module":"Mathlib.Order.Filter.AtTopBot.Monoid","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedAddCommMonoid β\nl : Filter α\nf g : α → β\nhf : Filter.Tendsto f l Filter.atBot\nhg : ∀ (x : α), LE.le (g x) 0\n⊢ Filter.Tendsto (fun x => HAdd.hAdd (f x) (g x)) l Filter.atBot","decl":"theorem tendsto_atBot_add_nonpos_right (hf : Tendsto f l atBot) (hg : ∀ x, g x ≤ 0) :\n    Tendsto (fun x => f x + g x) l atBot :=\n  @tendsto_atTop_add_nonneg_right _ βᵒᵈ _ _ _ _ hf hg\n\n"}
{"name":"Filter.tendsto_atTop_add","module":"Mathlib.Order.Filter.AtTopBot.Monoid","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedAddCommMonoid β\nl : Filter α\nf g : α → β\nhf : Filter.Tendsto f l Filter.atTop\nhg : Filter.Tendsto g l Filter.atTop\n⊢ Filter.Tendsto (fun x => HAdd.hAdd (f x) (g x)) l Filter.atTop","decl":"theorem tendsto_atTop_add (hf : Tendsto f l atTop) (hg : Tendsto g l atTop) :\n    Tendsto (fun x => f x + g x) l atTop :=\n  tendsto_atTop_add_nonneg_left' (tendsto_atTop.mp hf 0) hg\n\n"}
{"name":"Filter.tendsto_atBot_add","module":"Mathlib.Order.Filter.AtTopBot.Monoid","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedAddCommMonoid β\nl : Filter α\nf g : α → β\nhf : Filter.Tendsto f l Filter.atBot\nhg : Filter.Tendsto g l Filter.atBot\n⊢ Filter.Tendsto (fun x => HAdd.hAdd (f x) (g x)) l Filter.atBot","decl":"theorem tendsto_atBot_add (hf : Tendsto f l atBot) (hg : Tendsto g l atBot) :\n    Tendsto (fun x => f x + g x) l atBot :=\n  @tendsto_atTop_add _ βᵒᵈ _ _ _ _ hf hg\n\n"}
{"name":"Filter.Tendsto.nsmul_atTop","module":"Mathlib.Order.Filter.AtTopBot.Monoid","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedAddCommMonoid β\nl : Filter α\nf : α → β\nhf : Filter.Tendsto f l Filter.atTop\nn : Nat\nhn : LT.lt 0 n\n⊢ Filter.Tendsto (fun x => HSMul.hSMul n (f x)) l Filter.atTop","decl":"theorem Tendsto.nsmul_atTop (hf : Tendsto f l atTop) {n : ℕ} (hn : 0 < n) :\n    Tendsto (fun x => n • f x) l atTop :=\n  tendsto_atTop.2 fun y =>\n    (tendsto_atTop.1 hf y).mp <|\n      (tendsto_atTop.1 hf 0).mono fun x h₀ hy =>\n        calc\n          y ≤ f x := hy\n          _ = 1 • f x := (one_nsmul _).symm\n          _ ≤ n • f x := nsmul_le_nsmul_left h₀ hn\n\n"}
{"name":"Filter.Tendsto.nsmul_atBot","module":"Mathlib.Order.Filter.AtTopBot.Monoid","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedAddCommMonoid β\nl : Filter α\nf : α → β\nhf : Filter.Tendsto f l Filter.atBot\nn : Nat\nhn : LT.lt 0 n\n⊢ Filter.Tendsto (fun x => HSMul.hSMul n (f x)) l Filter.atBot","decl":"theorem Tendsto.nsmul_atBot (hf : Tendsto f l atBot) {n : ℕ} (hn : 0 < n) :\n    Tendsto (fun x => n • f x) l atBot :=\n  @Tendsto.nsmul_atTop α βᵒᵈ _ l f hf n hn\n\n"}
{"name":"Filter.tendsto_atTop_of_add_const_left","module":"Mathlib.Order.Filter.AtTopBot.Monoid","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedCancelAddCommMonoid β\nl : Filter α\nf : α → β\nC : β\nhf : Filter.Tendsto (fun x => HAdd.hAdd C (f x)) l Filter.atTop\n⊢ Filter.Tendsto f l Filter.atTop","decl":"theorem tendsto_atTop_of_add_const_left (C : β) (hf : Tendsto (fun x => C + f x) l atTop) :\n    Tendsto f l atTop :=\n  tendsto_atTop.2 fun b => (tendsto_atTop.1 hf (C + b)).mono fun _ => le_of_add_le_add_left\n\n-- Porting note: the \"order dual\" trick timeouts\n"}
{"name":"Filter.tendsto_atBot_of_add_const_left","module":"Mathlib.Order.Filter.AtTopBot.Monoid","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedCancelAddCommMonoid β\nl : Filter α\nf : α → β\nC : β\nhf : Filter.Tendsto (fun x => HAdd.hAdd C (f x)) l Filter.atBot\n⊢ Filter.Tendsto f l Filter.atBot","decl":"theorem tendsto_atBot_of_add_const_left (C : β) (hf : Tendsto (fun x => C + f x) l atBot) :\n    Tendsto f l atBot :=\n  tendsto_atBot.2 fun b => (tendsto_atBot.1 hf (C + b)).mono fun _ => le_of_add_le_add_left\n\n"}
{"name":"Filter.tendsto_atTop_of_add_const_right","module":"Mathlib.Order.Filter.AtTopBot.Monoid","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedCancelAddCommMonoid β\nl : Filter α\nf : α → β\nC : β\nhf : Filter.Tendsto (fun x => HAdd.hAdd (f x) C) l Filter.atTop\n⊢ Filter.Tendsto f l Filter.atTop","decl":"theorem tendsto_atTop_of_add_const_right (C : β) (hf : Tendsto (fun x => f x + C) l atTop) :\n    Tendsto f l atTop :=\n  tendsto_atTop.2 fun b => (tendsto_atTop.1 hf (b + C)).mono fun _ => le_of_add_le_add_right\n\n-- Porting note: the \"order dual\" trick timeouts\n"}
{"name":"Filter.tendsto_atBot_of_add_const_right","module":"Mathlib.Order.Filter.AtTopBot.Monoid","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedCancelAddCommMonoid β\nl : Filter α\nf : α → β\nC : β\nhf : Filter.Tendsto (fun x => HAdd.hAdd (f x) C) l Filter.atBot\n⊢ Filter.Tendsto f l Filter.atBot","decl":"theorem tendsto_atBot_of_add_const_right (C : β) (hf : Tendsto (fun x => f x + C) l atBot) :\n    Tendsto f l atBot :=\n  tendsto_atBot.2 fun b => (tendsto_atBot.1 hf (b + C)).mono fun _ => le_of_add_le_add_right\n\n"}
{"name":"Filter.tendsto_atTop_of_add_bdd_above_left'","module":"Mathlib.Order.Filter.AtTopBot.Monoid","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedCancelAddCommMonoid β\nl : Filter α\nf g : α → β\nC : β\nhC : Filter.Eventually (fun x => LE.le (f x) C) l\nh : Filter.Tendsto (fun x => HAdd.hAdd (f x) (g x)) l Filter.atTop\n⊢ Filter.Tendsto g l Filter.atTop","decl":"theorem tendsto_atTop_of_add_bdd_above_left' (C) (hC : ∀ᶠ x in l, f x ≤ C)\n    (h : Tendsto (fun x => f x + g x) l atTop) : Tendsto g l atTop :=\n  tendsto_atTop_of_add_const_left C\n    (tendsto_atTop_mono' l (hC.mono fun x hx => add_le_add_right hx (g x)) h)\n\n-- Porting note: the \"order dual\" trick timeouts\n"}
{"name":"Filter.tendsto_atBot_of_add_bdd_below_left'","module":"Mathlib.Order.Filter.AtTopBot.Monoid","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedCancelAddCommMonoid β\nl : Filter α\nf g : α → β\nC : β\nhC : Filter.Eventually (fun x => LE.le C (f x)) l\nh : Filter.Tendsto (fun x => HAdd.hAdd (f x) (g x)) l Filter.atBot\n⊢ Filter.Tendsto g l Filter.atBot","decl":"theorem tendsto_atBot_of_add_bdd_below_left' (C) (hC : ∀ᶠ x in l, C ≤ f x)\n    (h : Tendsto (fun x => f x + g x) l atBot) : Tendsto g l atBot :=\n  tendsto_atBot_of_add_const_left C\n    (tendsto_atBot_mono' l (hC.mono fun x hx => add_le_add_right hx (g x)) h)\n\n"}
{"name":"Filter.tendsto_atTop_of_add_bdd_above_left","module":"Mathlib.Order.Filter.AtTopBot.Monoid","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedCancelAddCommMonoid β\nl : Filter α\nf g : α → β\nC : β\nhC : ∀ (x : α), LE.le (f x) C\na✝ : Filter.Tendsto (fun x => HAdd.hAdd (f x) (g x)) l Filter.atTop\n⊢ Filter.Tendsto g l Filter.atTop","decl":"theorem tendsto_atTop_of_add_bdd_above_left (C) (hC : ∀ x, f x ≤ C) :\n    Tendsto (fun x => f x + g x) l atTop → Tendsto g l atTop :=\n  tendsto_atTop_of_add_bdd_above_left' C (univ_mem' hC)\n\n-- Porting note: the \"order dual\" trick timeouts\n"}
{"name":"Filter.tendsto_atBot_of_add_bdd_below_left","module":"Mathlib.Order.Filter.AtTopBot.Monoid","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedCancelAddCommMonoid β\nl : Filter α\nf g : α → β\nC : β\nhC : ∀ (x : α), LE.le C (f x)\na✝ : Filter.Tendsto (fun x => HAdd.hAdd (f x) (g x)) l Filter.atBot\n⊢ Filter.Tendsto g l Filter.atBot","decl":"theorem tendsto_atBot_of_add_bdd_below_left (C) (hC : ∀ x, C ≤ f x) :\n    Tendsto (fun x => f x + g x) l atBot → Tendsto g l atBot :=\n  tendsto_atBot_of_add_bdd_below_left' C (univ_mem' hC)\n\n"}
{"name":"Filter.tendsto_atTop_of_add_bdd_above_right'","module":"Mathlib.Order.Filter.AtTopBot.Monoid","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedCancelAddCommMonoid β\nl : Filter α\nf g : α → β\nC : β\nhC : Filter.Eventually (fun x => LE.le (g x) C) l\nh : Filter.Tendsto (fun x => HAdd.hAdd (f x) (g x)) l Filter.atTop\n⊢ Filter.Tendsto f l Filter.atTop","decl":"theorem tendsto_atTop_of_add_bdd_above_right' (C) (hC : ∀ᶠ x in l, g x ≤ C)\n    (h : Tendsto (fun x => f x + g x) l atTop) : Tendsto f l atTop :=\n  tendsto_atTop_of_add_const_right C\n    (tendsto_atTop_mono' l (hC.mono fun x hx => add_le_add_left hx (f x)) h)\n\n-- Porting note: the \"order dual\" trick timeouts\n"}
{"name":"Filter.tendsto_atBot_of_add_bdd_below_right'","module":"Mathlib.Order.Filter.AtTopBot.Monoid","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedCancelAddCommMonoid β\nl : Filter α\nf g : α → β\nC : β\nhC : Filter.Eventually (fun x => LE.le C (g x)) l\nh : Filter.Tendsto (fun x => HAdd.hAdd (f x) (g x)) l Filter.atBot\n⊢ Filter.Tendsto f l Filter.atBot","decl":"theorem tendsto_atBot_of_add_bdd_below_right' (C) (hC : ∀ᶠ x in l, C ≤ g x)\n    (h : Tendsto (fun x => f x + g x) l atBot) : Tendsto f l atBot :=\n  tendsto_atBot_of_add_const_right C\n    (tendsto_atBot_mono' l (hC.mono fun x hx => add_le_add_left hx (f x)) h)\n\n"}
{"name":"Filter.tendsto_atTop_of_add_bdd_above_right","module":"Mathlib.Order.Filter.AtTopBot.Monoid","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedCancelAddCommMonoid β\nl : Filter α\nf g : α → β\nC : β\nhC : ∀ (x : α), LE.le (g x) C\na✝ : Filter.Tendsto (fun x => HAdd.hAdd (f x) (g x)) l Filter.atTop\n⊢ Filter.Tendsto f l Filter.atTop","decl":"theorem tendsto_atTop_of_add_bdd_above_right (C) (hC : ∀ x, g x ≤ C) :\n    Tendsto (fun x => f x + g x) l atTop → Tendsto f l atTop :=\n  tendsto_atTop_of_add_bdd_above_right' C (univ_mem' hC)\n\n-- Porting note: the \"order dual\" trick timeouts\n"}
{"name":"Filter.tendsto_atBot_of_add_bdd_below_right","module":"Mathlib.Order.Filter.AtTopBot.Monoid","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedCancelAddCommMonoid β\nl : Filter α\nf g : α → β\nC : β\nhC : ∀ (x : α), LE.le C (g x)\na✝ : Filter.Tendsto (fun x => HAdd.hAdd (f x) (g x)) l Filter.atBot\n⊢ Filter.Tendsto f l Filter.atBot","decl":"theorem tendsto_atBot_of_add_bdd_below_right (C) (hC : ∀ x, C ≤ g x) :\n    Tendsto (fun x => f x + g x) l atBot → Tendsto f l atBot :=\n  tendsto_atBot_of_add_bdd_below_right' C (univ_mem' hC)\n\n"}
