{"name":"UniformSpace.hasBasis_ofFun","module":"Mathlib.Topology.UniformSpace.OfFun","initialProofState":"X : Type u_1\nM : Type u_2\ninst✝ : LinearOrderedAddCommMonoid M\nh₀ : Exists fun x => LT.lt 0 x\nd : X → X → M\nrefl : ∀ (x : X), Eq (d x x) 0\nsymm : ∀ (x y : X), Eq (d x y) (d y x)\ntriangle : ∀ (x y z : X), LE.le (d x z) (HAdd.hAdd (d x y) (d y z))\nhalf : ∀ (ε : M), GT.gt ε 0 → Exists fun δ => And (GT.gt δ 0) (∀ (x : M), LT.lt x δ → ∀ (y : M), LT.lt y δ → LT.lt (HAdd.hAdd x y) ε)\n⊢ (uniformity X).HasBasis (fun x => LT.lt 0 x) fun ε => setOf fun x => LT.lt (d x.1 x.2) ε","decl":"theorem hasBasis_ofFun [LinearOrderedAddCommMonoid M]\n    (h₀ : ∃ x : M, 0 < x) (d : X → X → M) (refl : ∀ x, d x x = 0) (symm : ∀ x y, d x y = d y x)\n    (triangle : ∀ x y z, d x z ≤ d x y + d y z)\n    (half : ∀ ε > (0 : M), ∃ δ > (0 : M), ∀ x < δ, ∀ y < δ, x + y < ε) :\n    𝓤[.ofFun d refl symm triangle half].HasBasis ((0 : M) < ·) (fun ε => { x | d x.1 x.2 < ε }) :=\n  hasBasis_biInf_principal'\n    (fun ε₁ h₁ ε₂ h₂ => ⟨min ε₁ ε₂, lt_min h₁ h₂, fun _x hx => lt_of_lt_of_le hx (min_le_left _ _),\n      fun _x hx => lt_of_lt_of_le hx (min_le_right _ _)⟩) h₀\n\n"}
