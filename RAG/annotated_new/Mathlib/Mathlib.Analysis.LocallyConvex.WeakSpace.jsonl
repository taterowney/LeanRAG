{"name":"Convex.toWeakSpace_closure","module":"Mathlib.Analysis.LocallyConvex.WeakSpace","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁸ : RCLike 𝕜\ninst✝⁷ : AddCommGroup E\ninst✝⁶ : Module 𝕜 E\ninst✝⁵ : Module Real E\ninst✝⁴ : IsScalarTower Real 𝕜 E\ninst✝³ : TopologicalSpace E\ninst✝² : TopologicalAddGroup E\ninst✝¹ : ContinuousSMul 𝕜 E\ninst✝ : LocallyConvexSpace Real E\ns : Set E\nhs : Convex Real s\n⊢ Eq (Set.image (⇑(toWeakSpace 𝕜 E)) (closure s)) (closure (Set.image (⇑(toWeakSpace 𝕜 E)) s))","decl":"variable (𝕜) in\n/-- If `E` is a locally convex space over `𝕜` (with `RCLike 𝕜`), and `s : Set E` is `ℝ`-convex, then\nthe closure of `s` and the weak closure of `s` coincide. More precisely, the topological closure\ncommutes with `toWeakSpace 𝕜 E`.\n\nThis holds more generally for any linear equivalence `e : E ≃ₗ[𝕜] F` between locally convex spaces\nsuch that precomposition with `e` and `e.symm` preserves continuity of linear functionals. See\n`LinearEquiv.image_closure_of_convex`. -/\ntheorem Convex.toWeakSpace_closure {s : Set E} (hs : Convex ℝ s) :\n    (toWeakSpace 𝕜 E) '' (closure s) = closure (toWeakSpace 𝕜 E '' s) := by\n  refine le_antisymm (map_continuous <| toWeakSpaceCLM 𝕜 E).continuousOn.image_closure\n    (Set.compl_subset_compl.mp fun x hx ↦ ?_)\n  obtain ⟨x, -, rfl⟩ := (toWeakSpace 𝕜 E).toEquiv.image_compl (closure s) |>.symm.subset hx\n  have : ContinuousSMul ℝ E := IsScalarTower.continuousSMul 𝕜\n  obtain ⟨f, u, hus, hux⟩ := RCLike.geometric_hahn_banach_closed_point (𝕜 := 𝕜)\n    hs.closure isClosed_closure (by simpa using hx)\n  let f' : WeakSpace 𝕜 E →L[𝕜] 𝕜 :=\n    { toLinearMap := (f : E →ₗ[𝕜] 𝕜).comp ((toWeakSpace 𝕜 E).symm : WeakSpace 𝕜 E →ₗ[𝕜] E)\n      cont := WeakBilin.eval_continuous (topDualPairing 𝕜 E).flip _ }\n  have hux' : u < RCLike.reCLM.comp (f'.restrictScalars ℝ) (toWeakSpace 𝕜 E x) := by simpa [f']\n  have hus' : closure (toWeakSpace 𝕜 E '' s) ⊆\n      {y | RCLike.reCLM.comp (f'.restrictScalars ℝ) y ≤ u} := by\n    refine closure_minimal ?_ <| isClosed_le (by fun_prop) (by fun_prop)\n    rintro - ⟨y, hy, rfl⟩\n    simpa [f'] using (hus y <| subset_closure hy).le\n  exact (hux'.not_le <| hus' ·)\n\n"}
{"name":"LinearMap.image_closure_of_convex","module":"Mathlib.Analysis.LocallyConvex.WeakSpace","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\ninst✝¹⁶ : RCLike 𝕜\ninst✝¹⁵ : AddCommGroup E\ninst✝¹⁴ : Module 𝕜 E\ninst✝¹³ : AddCommGroup F\ninst✝¹² : Module 𝕜 F\ninst✝¹¹ : Module Real E\ninst✝¹⁰ : IsScalarTower Real 𝕜 E\ninst✝⁹ : Module Real F\ninst✝⁸ : IsScalarTower Real 𝕜 F\ninst✝⁷ : TopologicalSpace E\ninst✝⁶ : TopologicalAddGroup E\ninst✝⁵ : ContinuousSMul 𝕜 E\ninst✝⁴ : LocallyConvexSpace Real E\ninst✝³ : TopologicalSpace F\ninst✝² : TopologicalAddGroup F\ninst✝¹ : ContinuousSMul 𝕜 F\ninst✝ : LocallyConvexSpace Real F\ns : Set E\nhs : Convex Real s\ne : LinearMap (RingHom.id 𝕜) E F\nhe : ∀ (f : ContinuousLinearMap (RingHom.id 𝕜) F 𝕜), Continuous ⇑(e.dualMap ↑f)\n⊢ HasSubset.Subset (Set.image (⇑e) (closure s)) (closure (Set.image (⇑e) s))","decl":"/-- If `e : E →ₗ[𝕜] F` is a linear map between locally convex spaces, and `f ∘ e` is continuous\nfor every continuous linear functional `f : F →L[𝕜] 𝕜`, then `e` commutes with the closure on\nconvex sets. -/\ntheorem LinearMap.image_closure_of_convex {s : Set E} (hs : Convex ℝ s) (e : E →ₗ[𝕜] F)\n    (he : ∀ f : F →L[𝕜] 𝕜, Continuous (e.dualMap f)) :\n    e '' (closure s) ⊆ closure (e '' s) := by\n  suffices he' : Continuous (toWeakSpace 𝕜 F <| e <| (toWeakSpace 𝕜 E).symm ·) by\n    have h_convex : Convex ℝ (e '' s) := hs.linear_image (F := F) e\n    rw [← Set.image_subset_image_iff (toWeakSpace 𝕜 F).injective, h_convex.toWeakSpace_closure 𝕜]\n    simpa only [Set.image_image, ← hs.toWeakSpace_closure 𝕜, LinearEquiv.symm_apply_apply]\n      using he'.continuousOn.image_closure (s := toWeakSpace 𝕜 E '' s)\n  exact WeakBilin.continuous_of_continuous_eval _ fun f ↦\n    WeakBilin.eval_continuous _ { toLinearMap := e.dualMap f : E →L[𝕜] 𝕜 }\n\n"}
{"name":"LinearEquiv.image_closure_of_convex","module":"Mathlib.Analysis.LocallyConvex.WeakSpace","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\ninst✝¹⁶ : RCLike 𝕜\ninst✝¹⁵ : AddCommGroup E\ninst✝¹⁴ : Module 𝕜 E\ninst✝¹³ : AddCommGroup F\ninst✝¹² : Module 𝕜 F\ninst✝¹¹ : Module Real E\ninst✝¹⁰ : IsScalarTower Real 𝕜 E\ninst✝⁹ : Module Real F\ninst✝⁸ : IsScalarTower Real 𝕜 F\ninst✝⁷ : TopologicalSpace E\ninst✝⁶ : TopologicalAddGroup E\ninst✝⁵ : ContinuousSMul 𝕜 E\ninst✝⁴ : LocallyConvexSpace Real E\ninst✝³ : TopologicalSpace F\ninst✝² : TopologicalAddGroup F\ninst✝¹ : ContinuousSMul 𝕜 F\ninst✝ : LocallyConvexSpace Real F\ns : Set E\nhs : Convex Real s\ne : LinearEquiv (RingHom.id 𝕜) E F\nhe₁ : ∀ (f : ContinuousLinearMap (RingHom.id 𝕜) F 𝕜), Continuous ⇑(e.dualMap ↑f)\nhe₂ : ∀ (f : ContinuousLinearMap (RingHom.id 𝕜) E 𝕜), Continuous ⇑(e.symm.dualMap ↑f)\n⊢ Eq (Set.image (⇑e) (closure s)) (closure (Set.image (⇑e) s))","decl":"/-- If `e` is a linear isomorphism between two locally convex spaces, and `e` induces (via\nprecomposition) an isomorphism between their continuous duals, then `e` commutes with the closure\non convex sets.\n\nThe hypotheses hold automatically for `e := toWeakSpace 𝕜 E`, see `Convex.toWeakSpace_closure`. -/\ntheorem LinearEquiv.image_closure_of_convex {s : Set E} (hs : Convex ℝ s) (e : E ≃ₗ[𝕜] F)\n    (he₁ : ∀ f : F →L[𝕜] 𝕜, Continuous (e.dualMap f))\n    (he₂ : ∀ f : E →L[𝕜] 𝕜, Continuous (e.symm.dualMap f)) :\n    e '' (closure s) = closure (e '' s) := by\n  refine le_antisymm ((e : E →ₗ[𝕜] F).image_closure_of_convex hs he₁) ?_\n  simp only [Set.le_eq_subset, ← Set.image_subset_image_iff e.symm.injective]\n  simpa [Set.image_image]\n    using (e.symm : F →ₗ[𝕜] E).image_closure_of_convex (hs.linear_image (e : E →ₗ[𝕜] F)) he₂\n\n"}
{"name":"LinearEquiv.image_closure_of_convex'","module":"Mathlib.Analysis.LocallyConvex.WeakSpace","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\ninst✝¹⁶ : RCLike 𝕜\ninst✝¹⁵ : AddCommGroup E\ninst✝¹⁴ : Module 𝕜 E\ninst✝¹³ : AddCommGroup F\ninst✝¹² : Module 𝕜 F\ninst✝¹¹ : Module Real E\ninst✝¹⁰ : IsScalarTower Real 𝕜 E\ninst✝⁹ : Module Real F\ninst✝⁸ : IsScalarTower Real 𝕜 F\ninst✝⁷ : TopologicalSpace E\ninst✝⁶ : TopologicalAddGroup E\ninst✝⁵ : ContinuousSMul 𝕜 E\ninst✝⁴ : LocallyConvexSpace Real E\ninst✝³ : TopologicalSpace F\ninst✝² : TopologicalAddGroup F\ninst✝¹ : ContinuousSMul 𝕜 F\ninst✝ : LocallyConvexSpace Real F\ns : Set E\nhs : Convex Real s\ne : LinearEquiv (RingHom.id 𝕜) E F\ne_dual : Equiv (ContinuousLinearMap (RingHom.id 𝕜) F 𝕜) (ContinuousLinearMap (RingHom.id 𝕜) E 𝕜)\nhe : ∀ (f : ContinuousLinearMap (RingHom.id 𝕜) F 𝕜), Eq (↑(e_dual f)) (e.dualMap ↑f)\n⊢ Eq (Set.image (⇑e) (closure s)) (closure (Set.image (⇑e) s))","decl":"/-- If `e` is a linear isomorphism between two locally convex spaces, and `e` induces (via\nprecomposition) an isomorphism between their continuous duals, then `e` commutes with the closure\non convex sets.\n\nThe hypotheses hold automatically for `e := toWeakSpace 𝕜 E`, see `Convex.toWeakSpace_closure`. -/\ntheorem LinearEquiv.image_closure_of_convex' {s : Set E} (hs : Convex ℝ s) (e : E ≃ₗ[𝕜] F)\n    (e_dual : (F →L[𝕜] 𝕜) ≃ (E →L[𝕜] 𝕜))\n    (he : ∀ f : F →L[𝕜] 𝕜, (e_dual f : E →ₗ[𝕜] 𝕜) = e.dualMap f) :\n    e '' (closure s) = closure (e '' s) := by\n  have he' (f : E →L[𝕜] 𝕜) : (e_dual.symm f : F →ₗ[𝕜] 𝕜) = e.symm.dualMap f := by\n    simp only [DFunLike.ext'_iff, ContinuousLinearMap.coe_coe] at he ⊢\n    have (g : E →L[𝕜] 𝕜) : ⇑g = e_dual.symm g ∘ e := by\n      have := he _ ▸ congr(⇑$(e_dual.apply_symm_apply g)).symm\n      simpa\n    ext x\n    conv_rhs => rw [LinearEquiv.dualMap_apply, ContinuousLinearMap.coe_coe, this]\n    simp\n  refine e.image_closure_of_convex hs ?_ ?_\n  · simpa [← he] using fun f ↦ map_continuous (e_dual f)\n  · simpa [← he'] using fun f ↦ map_continuous (e_dual.symm f)\n"}
