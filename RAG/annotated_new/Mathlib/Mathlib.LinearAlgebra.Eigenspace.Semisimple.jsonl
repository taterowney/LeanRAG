{"name":"Module.End.apply_eq_of_mem_of_comm_of_isFinitelySemisimple_of_isNil","module":"Mathlib.LinearAlgebra.Eigenspace.Semisimple","initialProofState":"R : Type u_1\nM : Type u_2\ninst✝² : CommRing R\ninst✝¹ : AddCommGroup M\ninst✝ : Module R M\nf g : Module.End R M\nμ : R\nk : ENat\nm : M\nhm : Membership.mem ((f.genEigenspace μ) k) m\nhfg : Commute f g\nhss : g.IsFinitelySemisimple\nhnil : IsNilpotent (HSub.hSub f g)\n⊢ Eq (g m) (HSMul.hSMul μ m)","decl":"lemma apply_eq_of_mem_of_comm_of_isFinitelySemisimple_of_isNil\n    {μ : R} {k : ℕ∞} {m : M} (hm : m ∈ f.genEigenspace μ k)\n    (hfg : Commute f g) (hss : g.IsFinitelySemisimple) (hnil : IsNilpotent (f - g)) :\n    g m = μ • m := by\n  rw [f.mem_genEigenspace] at hm\n  obtain ⟨l, -, hm⟩ := hm\n  rw [← f.mem_genEigenspace_nat] at hm\n  set p := f.genEigenspace μ l\n  have h₁ : MapsTo g p p := mapsTo_genEigenspace_of_comm hfg μ l\n  have h₂ : MapsTo (g - algebraMap R (End R M) μ) p p :=\n    mapsTo_genEigenspace_of_comm (hfg.sub_right <| Algebra.commute_algebraMap_right μ f) μ l\n  have h₃ : MapsTo (f - g) p p :=\n    mapsTo_genEigenspace_of_comm (Commute.sub_right rfl hfg) μ l\n  have h₄ : MapsTo (f - algebraMap R (End R M) μ) p p :=\n    mapsTo_genEigenspace_of_comm (Algebra.mul_sub_algebraMap_commutes f μ) μ l\n  replace hfg : Commute (f - algebraMap R (End R M) μ) (f - g) :=\n    (Commute.sub_right rfl hfg).sub_left <| Algebra.commute_algebraMap_left μ (f - g)\n  suffices IsNilpotent ((g - algebraMap R (End R M) μ).restrict h₂) by\n    replace this : g.restrict h₁ - algebraMap R (End R p) μ = 0 :=\n      eq_zero_of_isNilpotent_of_isFinitelySemisimple this (by simpa using hss.restrict _)\n    simpa [LinearMap.restrict_apply, sub_eq_zero] using LinearMap.congr_fun this ⟨m, hm⟩\n  simpa [LinearMap.restrict_sub h₄ h₃] using (LinearMap.restrict_commute hfg h₄ h₃).isNilpotent_sub\n    (f.isNilpotent_restrict_sub_algebraMap μ l) (Module.End.isNilpotent.restrict h₃ hnil)\n\n"}
{"name":"Module.End.IsFinitelySemisimple.genEigenspace_eq_eigenspace","module":"Mathlib.LinearAlgebra.Eigenspace.Semisimple","initialProofState":"R : Type u_1\nM : Type u_2\ninst✝² : CommRing R\ninst✝¹ : AddCommGroup M\ninst✝ : Module R M\nf : Module.End R M\nhf : f.IsFinitelySemisimple\nμ : R\nk : ENat\nhk : LT.lt 0 k\n⊢ Eq ((f.genEigenspace μ) k) (f.eigenspace μ)","decl":"lemma IsFinitelySemisimple.genEigenspace_eq_eigenspace\n    (hf : f.IsFinitelySemisimple) (μ : R) {k : ℕ∞} (hk : 0 < k) :\n    f.genEigenspace μ k = f.eigenspace μ := by\n  refine le_antisymm (fun m hm ↦ mem_eigenspace_iff.mpr ?_) (f.genEigenspace μ |>.mono ?_)\n  · apply apply_eq_of_mem_of_comm_of_isFinitelySemisimple_of_isNil hm rfl hf\n    simp\n  · exact Order.one_le_iff_pos.mpr hk\n\n"}
{"name":"Module.End.IsFinitelySemisimple.maxGenEigenspace_eq_eigenspace","module":"Mathlib.LinearAlgebra.Eigenspace.Semisimple","initialProofState":"R : Type u_1\nM : Type u_2\ninst✝² : CommRing R\ninst✝¹ : AddCommGroup M\ninst✝ : Module R M\nf : Module.End R M\nhf : f.IsFinitelySemisimple\nμ : R\n⊢ Eq (f.maxGenEigenspace μ) (f.eigenspace μ)","decl":"lemma IsFinitelySemisimple.maxGenEigenspace_eq_eigenspace\n    (hf : f.IsFinitelySemisimple) (μ : R) :\n    f.maxGenEigenspace μ = f.eigenspace μ :=\n  hf.genEigenspace_eq_eigenspace μ ENat.top_pos\n\n"}
