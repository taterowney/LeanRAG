{"name":"Set.mem_sups","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns t : Set α\nc : α\n⊢ Iff (Membership.mem (HasSups.sups s t) c) (Exists fun a => And (Membership.mem s a) (Exists fun b => And (Membership.mem t b) (Eq (Max.max a b) c)))","decl":"@[simp]\ntheorem mem_sups : c ∈ s ⊻ t ↔ ∃ a ∈ s, ∃ b ∈ t, a ⊔ b = c := by simp [(· ⊻ ·)]\n\n"}
{"name":"Set.sup_mem_sups","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns t : Set α\na b : α\na✝¹ : Membership.mem s a\na✝ : Membership.mem t b\n⊢ Membership.mem (HasSups.sups s t) (Max.max a b)","decl":"theorem sup_mem_sups : a ∈ s → b ∈ t → a ⊔ b ∈ s ⊻ t :=\n  mem_image2_of_mem\n\n"}
{"name":"Set.sups_subset","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns₁ s₂ t₁ t₂ : Set α\na✝¹ : HasSubset.Subset s₁ s₂\na✝ : HasSubset.Subset t₁ t₂\n⊢ HasSubset.Subset (HasSups.sups s₁ t₁) (HasSups.sups s₂ t₂)","decl":"theorem sups_subset : s₁ ⊆ s₂ → t₁ ⊆ t₂ → s₁ ⊻ t₁ ⊆ s₂ ⊻ t₂ :=\n  image2_subset\n\n"}
{"name":"Set.sups_subset_left","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns t₁ t₂ : Set α\na✝ : HasSubset.Subset t₁ t₂\n⊢ HasSubset.Subset (HasSups.sups s t₁) (HasSups.sups s t₂)","decl":"theorem sups_subset_left : t₁ ⊆ t₂ → s ⊻ t₁ ⊆ s ⊻ t₂ :=\n  image2_subset_left\n\n"}
{"name":"Set.sups_subset_right","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns₁ s₂ t : Set α\na✝ : HasSubset.Subset s₁ s₂\n⊢ HasSubset.Subset (HasSups.sups s₁ t) (HasSups.sups s₂ t)","decl":"theorem sups_subset_right : s₁ ⊆ s₂ → s₁ ⊻ t ⊆ s₂ ⊻ t :=\n  image2_subset_right\n\n"}
{"name":"Set.image_subset_sups_left","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns t : Set α\nb : α\na✝ : Membership.mem t b\n⊢ HasSubset.Subset (Set.image (fun a => Max.max a b) s) (HasSups.sups s t)","decl":"theorem image_subset_sups_left : b ∈ t → (fun a => a ⊔ b) '' s ⊆ s ⊻ t :=\n  image_subset_image2_left\n\n"}
{"name":"Set.image_subset_sups_right","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns t : Set α\na : α\na✝ : Membership.mem s a\n⊢ HasSubset.Subset (Set.image ((fun x1 x2 => Max.max x1 x2) a) t) (HasSups.sups s t)","decl":"theorem image_subset_sups_right : a ∈ s → (· ⊔ ·) a '' t ⊆ s ⊻ t :=\n  image_subset_image2_right\n\n"}
{"name":"Set.forall_sups_iff","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns t : Set α\np : α → Prop\n⊢ Iff (∀ (c : α), Membership.mem (HasSups.sups s t) c → p c) (∀ (a : α), Membership.mem s a → ∀ (b : α), Membership.mem t b → p (Max.max a b))","decl":"theorem forall_sups_iff {p : α → Prop} : (∀ c ∈ s ⊻ t, p c) ↔ ∀ a ∈ s, ∀ b ∈ t, p (a ⊔ b) :=\n  forall_mem_image2\n\n"}
{"name":"Set.sups_subset_iff","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns t u : Set α\n⊢ Iff (HasSubset.Subset (HasSups.sups s t) u) (∀ (a : α), Membership.mem s a → ∀ (b : α), Membership.mem t b → Membership.mem u (Max.max a b))","decl":"@[simp]\ntheorem sups_subset_iff : s ⊻ t ⊆ u ↔ ∀ a ∈ s, ∀ b ∈ t, a ⊔ b ∈ u :=\n  image2_subset_iff\n\n"}
{"name":"Set.sups_nonempty","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns t : Set α\n⊢ Iff (HasSups.sups s t).Nonempty (And s.Nonempty t.Nonempty)","decl":"@[simp]\ntheorem sups_nonempty : (s ⊻ t).Nonempty ↔ s.Nonempty ∧ t.Nonempty :=\n  image2_nonempty_iff\n\n"}
{"name":"Set.Nonempty.sups","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns t : Set α\na✝¹ : s.Nonempty\na✝ : t.Nonempty\n⊢ (HasSups.sups s t).Nonempty","decl":"protected theorem Nonempty.sups : s.Nonempty → t.Nonempty → (s ⊻ t).Nonempty :=\n  Nonempty.image2\n\n"}
{"name":"Set.Nonempty.of_sups_left","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns t : Set α\na✝ : (HasSups.sups s t).Nonempty\n⊢ s.Nonempty","decl":"theorem Nonempty.of_sups_left : (s ⊻ t).Nonempty → s.Nonempty :=\n  Nonempty.of_image2_left\n\n"}
{"name":"Set.Nonempty.of_sups_right","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns t : Set α\na✝ : (HasSups.sups s t).Nonempty\n⊢ t.Nonempty","decl":"theorem Nonempty.of_sups_right : (s ⊻ t).Nonempty → t.Nonempty :=\n  Nonempty.of_image2_right\n\n"}
{"name":"Set.empty_sups","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\nt : Set α\n⊢ Eq (HasSups.sups EmptyCollection.emptyCollection t) EmptyCollection.emptyCollection","decl":"@[simp]\ntheorem empty_sups : ∅ ⊻ t = ∅ :=\n  image2_empty_left\n\n"}
{"name":"Set.sups_empty","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns : Set α\n⊢ Eq (HasSups.sups s EmptyCollection.emptyCollection) EmptyCollection.emptyCollection","decl":"@[simp]\ntheorem sups_empty : s ⊻ ∅ = ∅ :=\n  image2_empty_right\n\n"}
{"name":"Set.sups_eq_empty","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns t : Set α\n⊢ Iff (Eq (HasSups.sups s t) EmptyCollection.emptyCollection) (Or (Eq s EmptyCollection.emptyCollection) (Eq t EmptyCollection.emptyCollection))","decl":"@[simp]\ntheorem sups_eq_empty : s ⊻ t = ∅ ↔ s = ∅ ∨ t = ∅ :=\n  image2_eq_empty_iff\n\n"}
{"name":"Set.singleton_sups","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\nt : Set α\na : α\n⊢ Eq (HasSups.sups (Singleton.singleton a) t) (Set.image (fun b => Max.max a b) t)","decl":"@[simp]\ntheorem singleton_sups : {a} ⊻ t = t.image fun b => a ⊔ b :=\n  image2_singleton_left\n\n"}
{"name":"Set.sups_singleton","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns : Set α\nb : α\n⊢ Eq (HasSups.sups s (Singleton.singleton b)) (Set.image (fun a => Max.max a b) s)","decl":"@[simp]\ntheorem sups_singleton : s ⊻ {b} = s.image fun a => a ⊔ b :=\n  image2_singleton_right\n\n"}
{"name":"Set.singleton_sups_singleton","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\na b : α\n⊢ Eq (HasSups.sups (Singleton.singleton a) (Singleton.singleton b)) (Singleton.singleton (Max.max a b))","decl":"theorem singleton_sups_singleton : ({a} ⊻ {b} : Set α) = {a ⊔ b} :=\n  image2_singleton\n\n"}
{"name":"Set.sups_union_left","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns₁ s₂ t : Set α\n⊢ Eq (HasSups.sups (Union.union s₁ s₂) t) (Union.union (HasSups.sups s₁ t) (HasSups.sups s₂ t))","decl":"theorem sups_union_left : (s₁ ∪ s₂) ⊻ t = s₁ ⊻ t ∪ s₂ ⊻ t :=\n  image2_union_left\n\n"}
{"name":"Set.sups_union_right","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns t₁ t₂ : Set α\n⊢ Eq (HasSups.sups s (Union.union t₁ t₂)) (Union.union (HasSups.sups s t₁) (HasSups.sups s t₂))","decl":"theorem sups_union_right : s ⊻ (t₁ ∪ t₂) = s ⊻ t₁ ∪ s ⊻ t₂ :=\n  image2_union_right\n\n"}
{"name":"Set.sups_inter_subset_left","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns₁ s₂ t : Set α\n⊢ HasSubset.Subset (HasSups.sups (Inter.inter s₁ s₂) t) (Inter.inter (HasSups.sups s₁ t) (HasSups.sups s₂ t))","decl":"theorem sups_inter_subset_left : (s₁ ∩ s₂) ⊻ t ⊆ s₁ ⊻ t ∩ s₂ ⊻ t :=\n  image2_inter_subset_left\n\n"}
{"name":"Set.sups_inter_subset_right","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns t₁ t₂ : Set α\n⊢ HasSubset.Subset (HasSups.sups s (Inter.inter t₁ t₂)) (Inter.inter (HasSups.sups s t₁) (HasSups.sups s t₂))","decl":"theorem sups_inter_subset_right : s ⊻ (t₁ ∩ t₂) ⊆ s ⊻ t₁ ∩ s ⊻ t₂ :=\n  image2_inter_subset_right\n\n"}
{"name":"Set.image_sups","module":"Mathlib.Data.Set.Sups","initialProofState":"F : Type u_1\nα : Type u_2\nβ : Type u_3\ninst✝³ : SemilatticeSup α\ninst✝² : SemilatticeSup β\ninst✝¹ : FunLike F α β\ninst✝ : SupHomClass F α β\nf : F\ns t : Set α\n⊢ Eq (Set.image (⇑f) (HasSups.sups s t)) (HasSups.sups (Set.image (⇑f) s) (Set.image (⇑f) t))","decl":"lemma image_sups (f : F) (s t : Set α) : f '' (s ⊻ t) = f '' s ⊻ f '' t :=\n  image_image2_distrib <| map_sup f\n\n"}
{"name":"Set.subset_sups_self","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns : Set α\n⊢ HasSubset.Subset s (HasSups.sups s s)","decl":"lemma subset_sups_self : s ⊆ s ⊻ s := fun _a ha ↦ mem_sups.2 ⟨_, ha, _, ha, sup_idem _⟩\n"}
{"name":"Set.sups_subset_self","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns : Set α\n⊢ Iff (HasSubset.Subset (HasSups.sups s s) s) (SupClosed s)","decl":"lemma sups_subset_self : s ⊻ s ⊆ s ↔ SupClosed s := sups_subset_iff\n\n"}
{"name":"Set.sups_eq_self","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns : Set α\n⊢ Iff (Eq (HasSups.sups s s) s) (SupClosed s)","decl":"@[simp] lemma sups_eq_self : s ⊻ s = s ↔ SupClosed s :=\n  subset_sups_self.le.le_iff_eq.symm.trans sups_subset_self\n\n"}
{"name":"Set.sep_sups_le","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns t : Set α\na : α\n⊢ Eq (setOf fun b => And (Membership.mem (HasSups.sups s t) b) (LE.le b a)) (HasSups.sups (setOf fun b => And (Membership.mem s b) (LE.le b a)) (setOf fun b => And (Membership.mem t b) (LE.le b a)))","decl":"lemma sep_sups_le (s t : Set α) (a : α) :\n    {b ∈ s ⊻ t | b ≤ a} = {b ∈ s | b ≤ a} ⊻ {b ∈ t | b ≤ a} := by ext; aesop\n\n"}
{"name":"Set.iUnion_image_sup_left","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns t : Set α\n⊢ Eq (Set.iUnion fun a => Set.iUnion fun h => Set.image ((fun x1 x2 => Max.max x1 x2) a) t) (HasSups.sups s t)","decl":"theorem iUnion_image_sup_left : ⋃ a ∈ s, (· ⊔ ·) a '' t = s ⊻ t :=\n  iUnion_image_left _\n\n"}
{"name":"Set.iUnion_image_sup_right","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns t : Set α\n⊢ Eq (Set.iUnion fun b => Set.iUnion fun h => Set.image (fun x => Max.max x b) s) (HasSups.sups s t)","decl":"theorem iUnion_image_sup_right : ⋃ b ∈ t, (· ⊔ b) '' s = s ⊻ t :=\n  iUnion_image_right _\n\n"}
{"name":"Set.image_sup_prod","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns t : Set α\n⊢ Eq (Set.image2 (fun x1 x2 => Max.max x1 x2) s t) (HasSups.sups s t)","decl":"@[simp]\ntheorem image_sup_prod (s t : Set α) : Set.image2 (· ⊔ ·) s t = s ⊻ t := rfl\n\n"}
{"name":"Set.sups_assoc","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns t u : Set α\n⊢ Eq (HasSups.sups (HasSups.sups s t) u) (HasSups.sups s (HasSups.sups t u))","decl":"theorem sups_assoc : s ⊻ t ⊻ u = s ⊻ (t ⊻ u) := image2_assoc sup_assoc\n\n"}
{"name":"Set.sups_comm","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns t : Set α\n⊢ Eq (HasSups.sups s t) (HasSups.sups t s)","decl":"theorem sups_comm : s ⊻ t = t ⊻ s := image2_comm sup_comm\n\n"}
{"name":"Set.sups_left_comm","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns t u : Set α\n⊢ Eq (HasSups.sups s (HasSups.sups t u)) (HasSups.sups t (HasSups.sups s u))","decl":"theorem sups_left_comm : s ⊻ (t ⊻ u) = t ⊻ (s ⊻ u) :=\n  image2_left_comm sup_left_comm\n\n"}
{"name":"Set.sups_right_comm","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns t u : Set α\n⊢ Eq (HasSups.sups (HasSups.sups s t) u) (HasSups.sups (HasSups.sups s u) t)","decl":"theorem sups_right_comm : s ⊻ t ⊻ u = s ⊻ u ⊻ t :=\n  image2_right_comm sup_right_comm\n\n"}
{"name":"Set.sups_sups_sups_comm","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns t u v : Set α\n⊢ Eq (HasSups.sups (HasSups.sups s t) (HasSups.sups u v)) (HasSups.sups (HasSups.sups s u) (HasSups.sups t v))","decl":"theorem sups_sups_sups_comm : s ⊻ t ⊻ (u ⊻ v) = s ⊻ u ⊻ (t ⊻ v) :=\n  image2_image2_image2_comm sup_sup_sup_comm\n\n"}
{"name":"Set.mem_infs","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns t : Set α\nc : α\n⊢ Iff (Membership.mem (HasInfs.infs s t) c) (Exists fun a => And (Membership.mem s a) (Exists fun b => And (Membership.mem t b) (Eq (Min.min a b) c)))","decl":"@[simp]\ntheorem mem_infs : c ∈ s ⊼ t ↔ ∃ a ∈ s, ∃ b ∈ t, a ⊓ b = c := by simp [(· ⊼ ·)]\n\n"}
{"name":"Set.inf_mem_infs","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns t : Set α\na b : α\na✝¹ : Membership.mem s a\na✝ : Membership.mem t b\n⊢ Membership.mem (HasInfs.infs s t) (Min.min a b)","decl":"theorem inf_mem_infs : a ∈ s → b ∈ t → a ⊓ b ∈ s ⊼ t :=\n  mem_image2_of_mem\n\n"}
{"name":"Set.infs_subset","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns₁ s₂ t₁ t₂ : Set α\na✝¹ : HasSubset.Subset s₁ s₂\na✝ : HasSubset.Subset t₁ t₂\n⊢ HasSubset.Subset (HasInfs.infs s₁ t₁) (HasInfs.infs s₂ t₂)","decl":"theorem infs_subset : s₁ ⊆ s₂ → t₁ ⊆ t₂ → s₁ ⊼ t₁ ⊆ s₂ ⊼ t₂ :=\n  image2_subset\n\n"}
{"name":"Set.infs_subset_left","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns t₁ t₂ : Set α\na✝ : HasSubset.Subset t₁ t₂\n⊢ HasSubset.Subset (HasInfs.infs s t₁) (HasInfs.infs s t₂)","decl":"theorem infs_subset_left : t₁ ⊆ t₂ → s ⊼ t₁ ⊆ s ⊼ t₂ :=\n  image2_subset_left\n\n"}
{"name":"Set.infs_subset_right","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns₁ s₂ t : Set α\na✝ : HasSubset.Subset s₁ s₂\n⊢ HasSubset.Subset (HasInfs.infs s₁ t) (HasInfs.infs s₂ t)","decl":"theorem infs_subset_right : s₁ ⊆ s₂ → s₁ ⊼ t ⊆ s₂ ⊼ t :=\n  image2_subset_right\n\n"}
{"name":"Set.image_subset_infs_left","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns t : Set α\nb : α\na✝ : Membership.mem t b\n⊢ HasSubset.Subset (Set.image (fun a => Min.min a b) s) (HasInfs.infs s t)","decl":"theorem image_subset_infs_left : b ∈ t → (fun a => a ⊓ b) '' s ⊆ s ⊼ t :=\n  image_subset_image2_left\n\n"}
{"name":"Set.image_subset_infs_right","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns t : Set α\na : α\na✝ : Membership.mem s a\n⊢ HasSubset.Subset (Set.image (fun x => Min.min a x) t) (HasInfs.infs s t)","decl":"theorem image_subset_infs_right : a ∈ s → (a ⊓ ·) '' t ⊆ s ⊼ t :=\n  image_subset_image2_right\n\n"}
{"name":"Set.forall_infs_iff","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns t : Set α\np : α → Prop\n⊢ Iff (∀ (c : α), Membership.mem (HasInfs.infs s t) c → p c) (∀ (a : α), Membership.mem s a → ∀ (b : α), Membership.mem t b → p (Min.min a b))","decl":"theorem forall_infs_iff {p : α → Prop} : (∀ c ∈ s ⊼ t, p c) ↔ ∀ a ∈ s, ∀ b ∈ t, p (a ⊓ b) :=\n  forall_mem_image2\n\n"}
{"name":"Set.infs_subset_iff","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns t u : Set α\n⊢ Iff (HasSubset.Subset (HasInfs.infs s t) u) (∀ (a : α), Membership.mem s a → ∀ (b : α), Membership.mem t b → Membership.mem u (Min.min a b))","decl":"@[simp]\ntheorem infs_subset_iff : s ⊼ t ⊆ u ↔ ∀ a ∈ s, ∀ b ∈ t, a ⊓ b ∈ u :=\n  image2_subset_iff\n\n"}
{"name":"Set.infs_nonempty","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns t : Set α\n⊢ Iff (HasInfs.infs s t).Nonempty (And s.Nonempty t.Nonempty)","decl":"@[simp]\ntheorem infs_nonempty : (s ⊼ t).Nonempty ↔ s.Nonempty ∧ t.Nonempty :=\n  image2_nonempty_iff\n\n"}
{"name":"Set.Nonempty.infs","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns t : Set α\na✝¹ : s.Nonempty\na✝ : t.Nonempty\n⊢ (HasInfs.infs s t).Nonempty","decl":"protected theorem Nonempty.infs : s.Nonempty → t.Nonempty → (s ⊼ t).Nonempty :=\n  Nonempty.image2\n\n"}
{"name":"Set.Nonempty.of_infs_left","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns t : Set α\na✝ : (HasInfs.infs s t).Nonempty\n⊢ s.Nonempty","decl":"theorem Nonempty.of_infs_left : (s ⊼ t).Nonempty → s.Nonempty :=\n  Nonempty.of_image2_left\n\n"}
{"name":"Set.Nonempty.of_infs_right","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns t : Set α\na✝ : (HasInfs.infs s t).Nonempty\n⊢ t.Nonempty","decl":"theorem Nonempty.of_infs_right : (s ⊼ t).Nonempty → t.Nonempty :=\n  Nonempty.of_image2_right\n\n"}
{"name":"Set.empty_infs","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\nt : Set α\n⊢ Eq (HasInfs.infs EmptyCollection.emptyCollection t) EmptyCollection.emptyCollection","decl":"@[simp]\ntheorem empty_infs : ∅ ⊼ t = ∅ :=\n  image2_empty_left\n\n"}
{"name":"Set.infs_empty","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns : Set α\n⊢ Eq (HasInfs.infs s EmptyCollection.emptyCollection) EmptyCollection.emptyCollection","decl":"@[simp]\ntheorem infs_empty : s ⊼ ∅ = ∅ :=\n  image2_empty_right\n\n"}
{"name":"Set.infs_eq_empty","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns t : Set α\n⊢ Iff (Eq (HasInfs.infs s t) EmptyCollection.emptyCollection) (Or (Eq s EmptyCollection.emptyCollection) (Eq t EmptyCollection.emptyCollection))","decl":"@[simp]\ntheorem infs_eq_empty : s ⊼ t = ∅ ↔ s = ∅ ∨ t = ∅ :=\n  image2_eq_empty_iff\n\n"}
{"name":"Set.singleton_infs","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\nt : Set α\na : α\n⊢ Eq (HasInfs.infs (Singleton.singleton a) t) (Set.image (fun b => Min.min a b) t)","decl":"@[simp]\ntheorem singleton_infs : {a} ⊼ t = t.image fun b => a ⊓ b :=\n  image2_singleton_left\n\n"}
{"name":"Set.infs_singleton","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns : Set α\nb : α\n⊢ Eq (HasInfs.infs s (Singleton.singleton b)) (Set.image (fun a => Min.min a b) s)","decl":"@[simp]\ntheorem infs_singleton : s ⊼ {b} = s.image fun a => a ⊓ b :=\n  image2_singleton_right\n\n"}
{"name":"Set.singleton_infs_singleton","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\na b : α\n⊢ Eq (HasInfs.infs (Singleton.singleton a) (Singleton.singleton b)) (Singleton.singleton (Min.min a b))","decl":"theorem singleton_infs_singleton : ({a} ⊼ {b} : Set α) = {a ⊓ b} :=\n  image2_singleton\n\n"}
{"name":"Set.infs_union_left","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns₁ s₂ t : Set α\n⊢ Eq (HasInfs.infs (Union.union s₁ s₂) t) (Union.union (HasInfs.infs s₁ t) (HasInfs.infs s₂ t))","decl":"theorem infs_union_left : (s₁ ∪ s₂) ⊼ t = s₁ ⊼ t ∪ s₂ ⊼ t :=\n  image2_union_left\n\n"}
{"name":"Set.infs_union_right","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns t₁ t₂ : Set α\n⊢ Eq (HasInfs.infs s (Union.union t₁ t₂)) (Union.union (HasInfs.infs s t₁) (HasInfs.infs s t₂))","decl":"theorem infs_union_right : s ⊼ (t₁ ∪ t₂) = s ⊼ t₁ ∪ s ⊼ t₂ :=\n  image2_union_right\n\n"}
{"name":"Set.infs_inter_subset_left","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns₁ s₂ t : Set α\n⊢ HasSubset.Subset (HasInfs.infs (Inter.inter s₁ s₂) t) (Inter.inter (HasInfs.infs s₁ t) (HasInfs.infs s₂ t))","decl":"theorem infs_inter_subset_left : (s₁ ∩ s₂) ⊼ t ⊆ s₁ ⊼ t ∩ s₂ ⊼ t :=\n  image2_inter_subset_left\n\n"}
{"name":"Set.infs_inter_subset_right","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns t₁ t₂ : Set α\n⊢ HasSubset.Subset (HasInfs.infs s (Inter.inter t₁ t₂)) (Inter.inter (HasInfs.infs s t₁) (HasInfs.infs s t₂))","decl":"theorem infs_inter_subset_right : s ⊼ (t₁ ∩ t₂) ⊆ s ⊼ t₁ ∩ s ⊼ t₂ :=\n  image2_inter_subset_right\n\n"}
{"name":"Set.image_infs","module":"Mathlib.Data.Set.Sups","initialProofState":"F : Type u_1\nα : Type u_2\nβ : Type u_3\ninst✝³ : SemilatticeInf α\ninst✝² : SemilatticeInf β\ninst✝¹ : FunLike F α β\ninst✝ : InfHomClass F α β\nf : F\ns t : Set α\n⊢ Eq (Set.image (⇑f) (HasInfs.infs s t)) (HasInfs.infs (Set.image (⇑f) s) (Set.image (⇑f) t))","decl":"lemma image_infs (f : F) (s t : Set α) : f '' (s ⊼ t) = f '' s ⊼ f '' t :=\n  image_image2_distrib <| map_inf f\n\n"}
{"name":"Set.subset_infs_self","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns : Set α\n⊢ HasSubset.Subset s (HasInfs.infs s s)","decl":"lemma subset_infs_self : s ⊆ s ⊼ s := fun _a ha ↦ mem_infs.2 ⟨_, ha, _, ha, inf_idem _⟩\n"}
{"name":"Set.infs_self_subset","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns : Set α\n⊢ Iff (HasSubset.Subset (HasInfs.infs s s) s) (InfClosed s)","decl":"lemma infs_self_subset : s ⊼ s ⊆ s ↔ InfClosed s := infs_subset_iff\n\n"}
{"name":"Set.infs_self","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns : Set α\n⊢ Iff (Eq (HasInfs.infs s s) s) (InfClosed s)","decl":"@[simp] lemma infs_self : s ⊼ s = s ↔ InfClosed s :=\n  subset_infs_self.le.le_iff_eq.symm.trans infs_self_subset\n\n"}
{"name":"Set.sep_infs_le","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns t : Set α\na : α\n⊢ Eq (setOf fun b => And (Membership.mem (HasInfs.infs s t) b) (LE.le a b)) (HasInfs.infs (setOf fun b => And (Membership.mem s b) (LE.le a b)) (setOf fun b => And (Membership.mem t b) (LE.le a b)))","decl":"lemma sep_infs_le (s t : Set α) (a : α) :\n    {b ∈ s ⊼ t | a ≤ b} = {b ∈ s | a ≤ b} ⊼ {b ∈ t | a ≤ b} := by ext; aesop\n\n"}
{"name":"Set.iUnion_image_inf_left","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns t : Set α\n⊢ Eq (Set.iUnion fun a => Set.iUnion fun h => Set.image (fun x => Min.min a x) t) (HasInfs.infs s t)","decl":"theorem iUnion_image_inf_left : ⋃ a ∈ s, (a ⊓ ·) '' t = s ⊼ t :=\n  iUnion_image_left _\n\n"}
{"name":"Set.iUnion_image_inf_right","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns t : Set α\n⊢ Eq (Set.iUnion fun b => Set.iUnion fun h => Set.image (fun x => Min.min x b) s) (HasInfs.infs s t)","decl":"theorem iUnion_image_inf_right : ⋃ b ∈ t, (· ⊓ b) '' s = s ⊼ t :=\n  iUnion_image_right _\n\n"}
{"name":"Set.image_inf_prod","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns t : Set α\n⊢ Eq (Set.image2 (fun x x_1 => Min.min x x_1) s t) (HasInfs.infs s t)","decl":"@[simp]\ntheorem image_inf_prod (s t : Set α) : Set.image2 (fun x x_1 => x ⊓ x_1) s t = s ⊼ t := by\n  have : (s ×ˢ t).image (uncurry (· ⊓ ·)) = Set.image2 (fun x x_1 => x ⊓ x_1) s t := by\n    simp only [Set.image_uncurry_prod]\n  rw [← this]\n  exact image_uncurry_prod _ _ _\n\n"}
{"name":"Set.infs_assoc","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns t u : Set α\n⊢ Eq (HasInfs.infs (HasInfs.infs s t) u) (HasInfs.infs s (HasInfs.infs t u))","decl":"theorem infs_assoc : s ⊼ t ⊼ u = s ⊼ (t ⊼ u) := image2_assoc inf_assoc\n\n"}
{"name":"Set.infs_comm","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns t : Set α\n⊢ Eq (HasInfs.infs s t) (HasInfs.infs t s)","decl":"theorem infs_comm : s ⊼ t = t ⊼ s := image2_comm inf_comm\n\n"}
{"name":"Set.infs_left_comm","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns t u : Set α\n⊢ Eq (HasInfs.infs s (HasInfs.infs t u)) (HasInfs.infs t (HasInfs.infs s u))","decl":"theorem infs_left_comm : s ⊼ (t ⊼ u) = t ⊼ (s ⊼ u) :=\n  image2_left_comm inf_left_comm\n\n"}
{"name":"Set.infs_right_comm","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns t u : Set α\n⊢ Eq (HasInfs.infs (HasInfs.infs s t) u) (HasInfs.infs (HasInfs.infs s u) t)","decl":"theorem infs_right_comm : s ⊼ t ⊼ u = s ⊼ u ⊼ t :=\n  image2_right_comm inf_right_comm\n\n"}
{"name":"Set.infs_infs_infs_comm","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns t u v : Set α\n⊢ Eq (HasInfs.infs (HasInfs.infs s t) (HasInfs.infs u v)) (HasInfs.infs (HasInfs.infs s u) (HasInfs.infs t v))","decl":"theorem infs_infs_infs_comm : s ⊼ t ⊼ (u ⊼ v) = s ⊼ u ⊼ (t ⊼ v) :=\n  image2_image2_image2_comm inf_inf_inf_comm\n\n"}
{"name":"Set.sups_infs_subset_left","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : DistribLattice α\ns t u : Set α\n⊢ HasSubset.Subset (HasSups.sups s (HasInfs.infs t u)) (HasInfs.infs (HasSups.sups s t) (HasSups.sups s u))","decl":"theorem sups_infs_subset_left : s ⊻ t ⊼ u ⊆ (s ⊻ t) ⊼ (s ⊻ u) :=\n  image2_distrib_subset_left sup_inf_left\n\n"}
{"name":"Set.sups_infs_subset_right","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : DistribLattice α\ns t u : Set α\n⊢ HasSubset.Subset (HasSups.sups (HasInfs.infs t u) s) (HasInfs.infs (HasSups.sups t s) (HasSups.sups u s))","decl":"theorem sups_infs_subset_right : t ⊼ u ⊻ s ⊆ (t ⊻ s) ⊼ (u ⊻ s) :=\n  image2_distrib_subset_right sup_inf_right\n\n"}
{"name":"Set.infs_sups_subset_left","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : DistribLattice α\ns t u : Set α\n⊢ HasSubset.Subset (HasInfs.infs s (HasSups.sups t u)) (HasSups.sups (HasInfs.infs s t) (HasInfs.infs s u))","decl":"theorem infs_sups_subset_left : s ⊼ (t ⊻ u) ⊆ s ⊼ t ⊻ s ⊼ u :=\n  image2_distrib_subset_left inf_sup_left\n\n"}
{"name":"Set.infs_sups_subset_right","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : DistribLattice α\ns t u : Set α\n⊢ HasSubset.Subset (HasInfs.infs (HasSups.sups t u) s) (HasSups.sups (HasInfs.infs t s) (HasInfs.infs u s))","decl":"theorem infs_sups_subset_right : (t ⊻ u) ⊼ s ⊆ t ⊼ s ⊻ u ⊼ s :=\n  image2_distrib_subset_right inf_sup_right\n\n"}
{"name":"upperClosure_sups","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\ns t : Set α\n⊢ Eq (upperClosure (HasSups.sups s t)) (Max.max (upperClosure s) (upperClosure t))","decl":"@[simp]\ntheorem upperClosure_sups [SemilatticeSup α] (s t : Set α) :\n    upperClosure (s ⊻ t) = upperClosure s ⊔ upperClosure t := by\n  ext a\n  simp only [SetLike.mem_coe, mem_upperClosure, Set.mem_sups, exists_and_left, exists_prop,\n    UpperSet.coe_sup, Set.mem_inter_iff]\n  constructor\n  · rintro ⟨_, ⟨b, hb, c, hc, rfl⟩, ha⟩\n    exact ⟨⟨b, hb, le_sup_left.trans ha⟩, c, hc, le_sup_right.trans ha⟩\n  · rintro ⟨⟨b, hb, hab⟩, c, hc, hac⟩\n    exact ⟨_, ⟨b, hb, c, hc, rfl⟩, sup_le hab hac⟩\n\n"}
{"name":"lowerClosure_infs","module":"Mathlib.Data.Set.Sups","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\ns t : Set α\n⊢ Eq (lowerClosure (HasInfs.infs s t)) (Min.min (lowerClosure s) (lowerClosure t))","decl":"@[simp]\ntheorem lowerClosure_infs [SemilatticeInf α] (s t : Set α) :\n    lowerClosure (s ⊼ t) = lowerClosure s ⊓ lowerClosure t := by\n  ext a\n  simp only [SetLike.mem_coe, mem_lowerClosure, Set.mem_infs, exists_and_left, exists_prop,\n    LowerSet.coe_sup, Set.mem_inter_iff]\n  constructor\n  · rintro ⟨_, ⟨b, hb, c, hc, rfl⟩, ha⟩\n    exact ⟨⟨b, hb, ha.trans inf_le_left⟩, c, hc, ha.trans inf_le_right⟩\n  · rintro ⟨⟨b, hb, hab⟩, c, hc, hac⟩\n    exact ⟨_, ⟨b, hb, c, hc, rfl⟩, le_inf hab hac⟩\n"}
