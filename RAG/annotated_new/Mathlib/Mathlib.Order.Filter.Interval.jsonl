{"name":"Filter.TendstoIxxClass.tendsto_Ixx","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\nIxx : Œ± ‚Üí Œ± ‚Üí Set Œ±\nl‚ÇÅ : Filter Œ±\nl‚ÇÇ : outParam (Filter Œ±)\nself : Filter.TendstoIxxClass Ixx l‚ÇÅ l‚ÇÇ\n‚ä¢ Filter.Tendsto (fun p => Ixx p.1 p.2) (SProd.sprod l‚ÇÅ l‚ÇÅ) (Filter.smallSets l‚ÇÇ)","decl":"/-- A pair of filters `l‚ÇÅ`, `l‚ÇÇ` has `TendstoIxxClass Ixx` property if `Ixx a b` tends to\n`l‚ÇÇ.small_sets` as `a` and `b` tend to `l‚ÇÅ`. In all instances `Ixx` is one of `Set.Icc`, `Set.Ico`,\n`Set.Ioc`, or `Set.Ioo`. The instances provide the best `l‚ÇÇ` for a given `l‚ÇÅ`. In many cases\n`l‚ÇÅ = l‚ÇÇ` but sometimes we can drop an endpoint from an interval: e.g., we prove\n`TendstoIxxClass Set.Ico (ùìü (Set.Iic a)) (ùìü (Set.Iio a))`, i.e., if `u‚ÇÅ n` and `u‚ÇÇ n` belong\neventually to `Set.Iic a`, then the interval `Set.Ico (u‚ÇÅ n) (u‚ÇÇ n)` is eventually included in\n`Set.Iio a`.\n\nWe mark `l‚ÇÇ` as an `outParam` so that Lean can automatically find an appropriate `l‚ÇÇ` based on\n`Ixx` and `l‚ÇÅ`. This way, e.g., `tendsto.Ico h‚ÇÅ h‚ÇÇ` works without specifying explicitly `l‚ÇÇ`. -/\nclass TendstoIxxClass (Ixx : Œ± ‚Üí Œ± ‚Üí Set Œ±) (l‚ÇÅ : Filter Œ±) (l‚ÇÇ : outParam <| Filter Œ±) : Prop where\n  /-- `Function.uncurry Ixx` tends to `l‚ÇÇ.smallSets` along `l‚ÇÅ √óÀ¢ l‚ÇÅ`. In other words, for any\n  `s ‚àà l‚ÇÇ` there exists `t ‚àà l‚ÇÅ` such that `Ixx x y ‚äÜ s` whenever `x ‚àà t` and `y ‚àà t`.\n\n  Use lemmas like `Filter.Tendsto.Icc` instead. -/\n  tendsto_Ixx : Tendsto (fun p : Œ± √ó Œ± => Ixx p.1 p.2) (l‚ÇÅ √óÀ¢ l‚ÇÅ) l‚ÇÇ.smallSets\n\n"}
{"name":"Filter.tendstoIxxClass_principal","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ns t : Set Œ±\nIxx : Œ± ‚Üí Œ± ‚Üí Set Œ±\n‚ä¢ Iff (Filter.TendstoIxxClass Ixx (Filter.principal s) (Filter.principal t)) (‚àÄ (x : Œ±), Membership.mem s x ‚Üí ‚àÄ (y : Œ±), Membership.mem s y ‚Üí HasSubset.Subset (Ixx x y) t)","decl":"theorem tendstoIxxClass_principal {s t : Set Œ±} {Ixx : Œ± ‚Üí Œ± ‚Üí Set Œ±} :\n    TendstoIxxClass Ixx (ùìü s) (ùìü t) ‚Üî ‚àÄ·µâ (x ‚àà s) (y ‚àà s), Ixx x y ‚äÜ t :=\n  Iff.trans ‚ü®fun h => h.1, fun h => ‚ü®h‚ü©‚ü© <| by\n    simp only [smallSets_principal, prod_principal_principal, tendsto_principal_principal,\n      forall_prod_set, mem_powerset_iff, mem_principal]\n\n"}
{"name":"Filter.tendstoIxxClass_inf","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\nl‚ÇÅ l‚ÇÅ' l‚ÇÇ l‚ÇÇ' : Filter Œ±\nIxx : Œ± ‚Üí Œ± ‚Üí Set Œ±\nh : Filter.TendstoIxxClass Ixx l‚ÇÅ l‚ÇÇ\nh' : Filter.TendstoIxxClass Ixx l‚ÇÅ' l‚ÇÇ'\n‚ä¢ Filter.TendstoIxxClass Ixx (Min.min l‚ÇÅ l‚ÇÅ') (Min.min l‚ÇÇ l‚ÇÇ')","decl":"theorem tendstoIxxClass_inf {l‚ÇÅ l‚ÇÅ' l‚ÇÇ l‚ÇÇ' : Filter Œ±} {Ixx} [h : TendstoIxxClass Ixx l‚ÇÅ l‚ÇÇ]\n    [h' : TendstoIxxClass Ixx l‚ÇÅ' l‚ÇÇ'] : TendstoIxxClass Ixx (l‚ÇÅ ‚äì l‚ÇÅ') (l‚ÇÇ ‚äì l‚ÇÇ') :=\n  ‚ü®by simpa only [prod_inf_prod, smallSets_inf] using h.1.inf h'.1‚ü©\n\n"}
{"name":"Filter.tendstoIxxClass_of_subset","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\nl‚ÇÅ l‚ÇÇ : Filter Œ±\nIxx Ixx' : Œ± ‚Üí Œ± ‚Üí Set Œ±\nh : ‚àÄ (a b : Œ±), HasSubset.Subset (Ixx a b) (Ixx' a b)\nh' : Filter.TendstoIxxClass Ixx' l‚ÇÅ l‚ÇÇ\n‚ä¢ Filter.TendstoIxxClass Ixx l‚ÇÅ l‚ÇÇ","decl":"theorem tendstoIxxClass_of_subset {l‚ÇÅ l‚ÇÇ : Filter Œ±} {Ixx Ixx' : Œ± ‚Üí Œ± ‚Üí Set Œ±}\n    (h : ‚àÄ a b, Ixx a b ‚äÜ Ixx' a b) [h' : TendstoIxxClass Ixx' l‚ÇÅ l‚ÇÇ] : TendstoIxxClass Ixx l‚ÇÅ l‚ÇÇ :=\n  ‚ü®h'.1.smallSets_mono <| Eventually.of_forall <| Prod.forall.2 h‚ü©\n\n"}
{"name":"Filter.HasBasis.tendstoIxxClass","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\nŒπ : Type u_3\np : Œπ ‚Üí Prop\ns : Œπ ‚Üí Set Œ±\nl : Filter Œ±\nhl : l.HasBasis p s\nIxx : Œ± ‚Üí Œ± ‚Üí Set Œ±\nH : ‚àÄ (i : Œπ), p i ‚Üí ‚àÄ (x : Œ±), Membership.mem (s i) x ‚Üí ‚àÄ (y : Œ±), Membership.mem (s i) y ‚Üí HasSubset.Subset (Ixx x y) (s i)\n‚ä¢ Filter.TendstoIxxClass Ixx l l","decl":"theorem HasBasis.tendstoIxxClass {Œπ : Type*} {p : Œπ ‚Üí Prop} {s} {l : Filter Œ±}\n    (hl : l.HasBasis p s) {Ixx : Œ± ‚Üí Œ± ‚Üí Set Œ±}\n    (H : ‚àÄ i, p i ‚Üí ‚àÄ x ‚àà s i, ‚àÄ y ‚àà s i, Ixx x y ‚äÜ s i) : TendstoIxxClass Ixx l l :=\n  ‚ü®(hl.prod_self.tendsto_iff hl.smallSets).2 fun i hi => ‚ü®i, hi, fun _ h => H i hi _ h.1 _ h.2‚ü©‚ü©\n\n"}
{"name":"Filter.Tendsto.Icc","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\nŒ≤ : Type u_2\ninst‚úù¬π : Preorder Œ±\nl‚ÇÅ l‚ÇÇ : Filter Œ±\ninst‚úù : Filter.TendstoIxxClass Set.Icc l‚ÇÅ l‚ÇÇ\nlb : Filter Œ≤\nu‚ÇÅ u‚ÇÇ : Œ≤ ‚Üí Œ±\nh‚ÇÅ : Filter.Tendsto u‚ÇÅ lb l‚ÇÅ\nh‚ÇÇ : Filter.Tendsto u‚ÇÇ lb l‚ÇÅ\n‚ä¢ Filter.Tendsto (fun x => Set.Icc (u‚ÇÅ x) (u‚ÇÇ x)) lb l‚ÇÇ.smallSets","decl":"protected theorem Tendsto.Icc {l‚ÇÅ l‚ÇÇ : Filter Œ±} [TendstoIxxClass Icc l‚ÇÅ l‚ÇÇ] {lb : Filter Œ≤}\n    {u‚ÇÅ u‚ÇÇ : Œ≤ ‚Üí Œ±} (h‚ÇÅ : Tendsto u‚ÇÅ lb l‚ÇÅ) (h‚ÇÇ : Tendsto u‚ÇÇ lb l‚ÇÅ) :\n    Tendsto (fun x => Icc (u‚ÇÅ x) (u‚ÇÇ x)) lb l‚ÇÇ.smallSets :=\n  (@TendstoIxxClass.tendsto_Ixx Œ± Set.Icc _ _ _).comp <| h‚ÇÅ.prod_mk h‚ÇÇ\n\n"}
{"name":"Filter.Tendsto.Ioc","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\nŒ≤ : Type u_2\ninst‚úù¬π : Preorder Œ±\nl‚ÇÅ l‚ÇÇ : Filter Œ±\ninst‚úù : Filter.TendstoIxxClass Set.Ioc l‚ÇÅ l‚ÇÇ\nlb : Filter Œ≤\nu‚ÇÅ u‚ÇÇ : Œ≤ ‚Üí Œ±\nh‚ÇÅ : Filter.Tendsto u‚ÇÅ lb l‚ÇÅ\nh‚ÇÇ : Filter.Tendsto u‚ÇÇ lb l‚ÇÅ\n‚ä¢ Filter.Tendsto (fun x => Set.Ioc (u‚ÇÅ x) (u‚ÇÇ x)) lb l‚ÇÇ.smallSets","decl":"protected theorem Tendsto.Ioc {l‚ÇÅ l‚ÇÇ : Filter Œ±} [TendstoIxxClass Ioc l‚ÇÅ l‚ÇÇ] {lb : Filter Œ≤}\n    {u‚ÇÅ u‚ÇÇ : Œ≤ ‚Üí Œ±} (h‚ÇÅ : Tendsto u‚ÇÅ lb l‚ÇÅ) (h‚ÇÇ : Tendsto u‚ÇÇ lb l‚ÇÅ) :\n    Tendsto (fun x => Ioc (u‚ÇÅ x) (u‚ÇÇ x)) lb l‚ÇÇ.smallSets :=\n  (@TendstoIxxClass.tendsto_Ixx Œ± Set.Ioc _ _ _).comp <| h‚ÇÅ.prod_mk h‚ÇÇ\n\n"}
{"name":"Filter.Tendsto.Ico","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\nŒ≤ : Type u_2\ninst‚úù¬π : Preorder Œ±\nl‚ÇÅ l‚ÇÇ : Filter Œ±\ninst‚úù : Filter.TendstoIxxClass Set.Ico l‚ÇÅ l‚ÇÇ\nlb : Filter Œ≤\nu‚ÇÅ u‚ÇÇ : Œ≤ ‚Üí Œ±\nh‚ÇÅ : Filter.Tendsto u‚ÇÅ lb l‚ÇÅ\nh‚ÇÇ : Filter.Tendsto u‚ÇÇ lb l‚ÇÅ\n‚ä¢ Filter.Tendsto (fun x => Set.Ico (u‚ÇÅ x) (u‚ÇÇ x)) lb l‚ÇÇ.smallSets","decl":"protected theorem Tendsto.Ico {l‚ÇÅ l‚ÇÇ : Filter Œ±} [TendstoIxxClass Ico l‚ÇÅ l‚ÇÇ] {lb : Filter Œ≤}\n    {u‚ÇÅ u‚ÇÇ : Œ≤ ‚Üí Œ±} (h‚ÇÅ : Tendsto u‚ÇÅ lb l‚ÇÅ) (h‚ÇÇ : Tendsto u‚ÇÇ lb l‚ÇÅ) :\n    Tendsto (fun x => Ico (u‚ÇÅ x) (u‚ÇÇ x)) lb l‚ÇÇ.smallSets :=\n  (@TendstoIxxClass.tendsto_Ixx Œ± Set.Ico _ _ _).comp <| h‚ÇÅ.prod_mk h‚ÇÇ\n\n"}
{"name":"Filter.Tendsto.Ioo","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\nŒ≤ : Type u_2\ninst‚úù¬π : Preorder Œ±\nl‚ÇÅ l‚ÇÇ : Filter Œ±\ninst‚úù : Filter.TendstoIxxClass Set.Ioo l‚ÇÅ l‚ÇÇ\nlb : Filter Œ≤\nu‚ÇÅ u‚ÇÇ : Œ≤ ‚Üí Œ±\nh‚ÇÅ : Filter.Tendsto u‚ÇÅ lb l‚ÇÅ\nh‚ÇÇ : Filter.Tendsto u‚ÇÇ lb l‚ÇÅ\n‚ä¢ Filter.Tendsto (fun x => Set.Ioo (u‚ÇÅ x) (u‚ÇÇ x)) lb l‚ÇÇ.smallSets","decl":"protected theorem Tendsto.Ioo {l‚ÇÅ l‚ÇÇ : Filter Œ±} [TendstoIxxClass Ioo l‚ÇÅ l‚ÇÇ] {lb : Filter Œ≤}\n    {u‚ÇÅ u‚ÇÇ : Œ≤ ‚Üí Œ±} (h‚ÇÅ : Tendsto u‚ÇÅ lb l‚ÇÅ) (h‚ÇÇ : Tendsto u‚ÇÇ lb l‚ÇÅ) :\n    Tendsto (fun x => Ioo (u‚ÇÅ x) (u‚ÇÇ x)) lb l‚ÇÇ.smallSets :=\n  (@TendstoIxxClass.tendsto_Ixx Œ± Set.Ioo _ _ _).comp <| h‚ÇÅ.prod_mk h‚ÇÇ\n\n\n"}
{"name":"Filter.tendsto_Icc_atTop_atTop","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : Preorder Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Icc Filter.atTop Filter.atTop","decl":"instance tendsto_Icc_atTop_atTop : TendstoIxxClass Icc (atTop : Filter Œ±) atTop :=\n  (hasBasis_iInf_principal_finite _).tendstoIxxClass fun _ _ =>\n    Set.OrdConnected.out <| ordConnected_biInter fun _ _ => ordConnected_Ici\n\n"}
{"name":"Filter.tendsto_Ico_atTop_atTop","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : Preorder Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Ico Filter.atTop Filter.atTop","decl":"instance tendsto_Ico_atTop_atTop : TendstoIxxClass Ico (atTop : Filter Œ±) atTop :=\n  tendstoIxxClass_of_subset fun _ _ => Ico_subset_Icc_self\n\n"}
{"name":"Filter.tendsto_Ioc_atTop_atTop","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : Preorder Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Ioc Filter.atTop Filter.atTop","decl":"instance tendsto_Ioc_atTop_atTop : TendstoIxxClass Ioc (atTop : Filter Œ±) atTop :=\n  tendstoIxxClass_of_subset fun _ _ => Ioc_subset_Icc_self\n\n"}
{"name":"Filter.tendsto_Ioo_atTop_atTop","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : Preorder Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Ioo Filter.atTop Filter.atTop","decl":"instance tendsto_Ioo_atTop_atTop : TendstoIxxClass Ioo (atTop : Filter Œ±) atTop :=\n  tendstoIxxClass_of_subset fun _ _ => Ioo_subset_Icc_self\n\n"}
{"name":"Filter.tendsto_Icc_atBot_atBot","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : Preorder Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Icc Filter.atBot Filter.atBot","decl":"instance tendsto_Icc_atBot_atBot : TendstoIxxClass Icc (atBot : Filter Œ±) atBot :=\n  (hasBasis_iInf_principal_finite _).tendstoIxxClass fun _ _ =>\n    Set.OrdConnected.out <| ordConnected_biInter fun _ _ => ordConnected_Iic\n\n"}
{"name":"Filter.tendsto_Ico_atBot_atBot","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : Preorder Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Ico Filter.atBot Filter.atBot","decl":"instance tendsto_Ico_atBot_atBot : TendstoIxxClass Ico (atBot : Filter Œ±) atBot :=\n  tendstoIxxClass_of_subset fun _ _ => Ico_subset_Icc_self\n\n"}
{"name":"Filter.tendsto_Ioc_atBot_atBot","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : Preorder Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Ioc Filter.atBot Filter.atBot","decl":"instance tendsto_Ioc_atBot_atBot : TendstoIxxClass Ioc (atBot : Filter Œ±) atBot :=\n  tendstoIxxClass_of_subset fun _ _ => Ioc_subset_Icc_self\n\n"}
{"name":"Filter.tendsto_Ioo_atBot_atBot","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : Preorder Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Ioo Filter.atBot Filter.atBot","decl":"instance tendsto_Ioo_atBot_atBot : TendstoIxxClass Ioo (atBot : Filter Œ±) atBot :=\n  tendstoIxxClass_of_subset fun _ _ => Ioo_subset_Icc_self\n\n"}
{"name":"Filter.OrdConnected.tendsto_Icc","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : Preorder Œ±\ns : Set Œ±\nhs : s.OrdConnected\n‚ä¢ Filter.TendstoIxxClass Set.Icc (Filter.principal s) (Filter.principal s)","decl":"instance OrdConnected.tendsto_Icc {s : Set Œ±} [hs : OrdConnected s] :\n    TendstoIxxClass Icc (ùìü s) (ùìü s) :=\n  tendstoIxxClass_principal.2 hs.out\n\n"}
{"name":"Filter.tendsto_Ico_Ici_Ici","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : Preorder Œ±\na : Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Ico (Filter.principal (Set.Ici a)) (Filter.principal (Set.Ici a))","decl":"instance tendsto_Ico_Ici_Ici {a : Œ±} : TendstoIxxClass Ico (ùìü (Ici a)) (ùìü (Ici a)) :=\n  tendstoIxxClass_of_subset fun _ _ => Ico_subset_Icc_self\n\n"}
{"name":"Filter.tendsto_Ico_Ioi_Ioi","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : Preorder Œ±\na : Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Ico (Filter.principal (Set.Ioi a)) (Filter.principal (Set.Ioi a))","decl":"instance tendsto_Ico_Ioi_Ioi {a : Œ±} : TendstoIxxClass Ico (ùìü (Ioi a)) (ùìü (Ioi a)) :=\n  tendstoIxxClass_of_subset fun _ _ => Ico_subset_Icc_self\n\n"}
{"name":"Filter.tendsto_Ico_Iic_Iio","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : Preorder Œ±\na : Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Ico (Filter.principal (Set.Iic a)) (Filter.principal (Set.Iio a))","decl":"instance tendsto_Ico_Iic_Iio {a : Œ±} : TendstoIxxClass Ico (ùìü (Iic a)) (ùìü (Iio a)) :=\n  tendstoIxxClass_principal.2 fun _ _ _ h‚ÇÅ _ h‚ÇÇ => lt_of_lt_of_le h‚ÇÇ.2 h‚ÇÅ\n\n"}
{"name":"Filter.tendsto_Ico_Iio_Iio","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : Preorder Œ±\na : Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Ico (Filter.principal (Set.Iio a)) (Filter.principal (Set.Iio a))","decl":"instance tendsto_Ico_Iio_Iio {a : Œ±} : TendstoIxxClass Ico (ùìü (Iio a)) (ùìü (Iio a)) :=\n  tendstoIxxClass_of_subset fun _ _ => Ico_subset_Icc_self\n\n"}
{"name":"Filter.tendsto_Ioc_Ici_Ioi","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : Preorder Œ±\na : Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Ioc (Filter.principal (Set.Ici a)) (Filter.principal (Set.Ioi a))","decl":"instance tendsto_Ioc_Ici_Ioi {a : Œ±} : TendstoIxxClass Ioc (ùìü (Ici a)) (ùìü (Ioi a)) :=\n  tendstoIxxClass_principal.2 fun _ h‚ÇÅ _ _ _ h‚ÇÇ => lt_of_le_of_lt h‚ÇÅ h‚ÇÇ.1\n\n"}
{"name":"Filter.tendsto_Ioc_Iic_Iic","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : Preorder Œ±\na : Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Ioc (Filter.principal (Set.Iic a)) (Filter.principal (Set.Iic a))","decl":"instance tendsto_Ioc_Iic_Iic {a : Œ±} : TendstoIxxClass Ioc (ùìü (Iic a)) (ùìü (Iic a)) :=\n  tendstoIxxClass_of_subset fun _ _ => Ioc_subset_Icc_self\n\n"}
{"name":"Filter.tendsto_Ioc_Iio_Iio","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : Preorder Œ±\na : Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Ioc (Filter.principal (Set.Iio a)) (Filter.principal (Set.Iio a))","decl":"instance tendsto_Ioc_Iio_Iio {a : Œ±} : TendstoIxxClass Ioc (ùìü (Iio a)) (ùìü (Iio a)) :=\n  tendstoIxxClass_of_subset fun _ _ => Ioc_subset_Icc_self\n\n"}
{"name":"Filter.tendsto_Ioc_Ioi_Ioi","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : Preorder Œ±\na : Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Ioc (Filter.principal (Set.Ioi a)) (Filter.principal (Set.Ioi a))","decl":"instance tendsto_Ioc_Ioi_Ioi {a : Œ±} : TendstoIxxClass Ioc (ùìü (Ioi a)) (ùìü (Ioi a)) :=\n  tendstoIxxClass_of_subset fun _ _ => Ioc_subset_Icc_self\n\n"}
{"name":"Filter.tendsto_Ioo_Ici_Ioi","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : Preorder Œ±\na : Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Ioo (Filter.principal (Set.Ici a)) (Filter.principal (Set.Ioi a))","decl":"instance tendsto_Ioo_Ici_Ioi {a : Œ±} : TendstoIxxClass Ioo (ùìü (Ici a)) (ùìü (Ioi a)) :=\n  tendstoIxxClass_of_subset fun _ _ => Ioo_subset_Ioc_self\n\n"}
{"name":"Filter.tendsto_Ioo_Iic_Iio","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : Preorder Œ±\na : Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Ioo (Filter.principal (Set.Iic a)) (Filter.principal (Set.Iio a))","decl":"instance tendsto_Ioo_Iic_Iio {a : Œ±} : TendstoIxxClass Ioo (ùìü (Iic a)) (ùìü (Iio a)) :=\n  tendstoIxxClass_of_subset fun _ _ => Ioo_subset_Ico_self\n\n"}
{"name":"Filter.tendsto_Ioo_Ioi_Ioi","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : Preorder Œ±\na : Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Ioo (Filter.principal (Set.Ioi a)) (Filter.principal (Set.Ioi a))","decl":"instance tendsto_Ioo_Ioi_Ioi {a : Œ±} : TendstoIxxClass Ioo (ùìü (Ioi a)) (ùìü (Ioi a)) :=\n  tendstoIxxClass_of_subset fun _ _ => Ioo_subset_Ioc_self\n\n"}
{"name":"Filter.tendsto_Ioo_Iio_Iio","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : Preorder Œ±\na : Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Ioo (Filter.principal (Set.Iio a)) (Filter.principal (Set.Iio a))","decl":"instance tendsto_Ioo_Iio_Iio {a : Œ±} : TendstoIxxClass Ioo (ùìü (Iio a)) (ùìü (Iio a)) :=\n  tendstoIxxClass_of_subset fun _ _ => Ioo_subset_Ioc_self\n\n"}
{"name":"Filter.tendsto_Icc_Icc_Icc","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : Preorder Œ±\na b : Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Icc (Filter.principal (Set.Icc a b)) (Filter.principal (Set.Icc a b))","decl":"instance tendsto_Icc_Icc_Icc {a b : Œ±} : TendstoIxxClass Icc (ùìü (Icc a b)) (ùìü (Icc a b)) :=\n  tendstoIxxClass_principal.mpr fun _x hx _y hy => Icc_subset_Icc hx.1 hy.2\n\n"}
{"name":"Filter.tendsto_Ioc_Icc_Icc","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : Preorder Œ±\na b : Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Ioc (Filter.principal (Set.Icc a b)) (Filter.principal (Set.Icc a b))","decl":"instance tendsto_Ioc_Icc_Icc {a b : Œ±} : TendstoIxxClass Ioc (ùìü (Icc a b)) (ùìü (Icc a b)) :=\n  tendstoIxxClass_of_subset fun _ _ => Ioc_subset_Icc_self\n\n"}
{"name":"Filter.tendsto_Icc_pure_pure","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : PartialOrder Œ±\na : Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Icc (Pure.pure a) (Pure.pure a)","decl":"instance tendsto_Icc_pure_pure {a : Œ±} : TendstoIxxClass Icc (pure a) (pure a : Filter Œ±) := by\n  rw [‚Üê principal_singleton]\n  exact tendstoIxxClass_principal.2 ordConnected_singleton.out\n\n"}
{"name":"Filter.tendsto_Ico_pure_bot","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : PartialOrder Œ±\na : Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Ico (Pure.pure a) Bot.bot","decl":"instance tendsto_Ico_pure_bot {a : Œ±} : TendstoIxxClass Ico (pure a) ‚ä• :=\n  ‚ü®by simp‚ü©\n\n"}
{"name":"Filter.tendsto_Ioc_pure_bot","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : PartialOrder Œ±\na : Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Ioc (Pure.pure a) Bot.bot","decl":"instance tendsto_Ioc_pure_bot {a : Œ±} : TendstoIxxClass Ioc (pure a) ‚ä• :=\n  ‚ü®by simp‚ü©\n\n"}
{"name":"Filter.tendsto_Ioo_pure_bot","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : PartialOrder Œ±\na : Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Ioo (Pure.pure a) Bot.bot","decl":"instance tendsto_Ioo_pure_bot {a : Œ±} : TendstoIxxClass Ioo (pure a) ‚ä• :=\n  ‚ü®by simp‚ü©\n\n"}
{"name":"Filter.tendsto_Icc_uIcc_uIcc","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : LinearOrder Œ±\na b : Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Icc (Filter.principal (Set.uIcc a b)) (Filter.principal (Set.uIcc a b))","decl":"instance tendsto_Icc_uIcc_uIcc {a b : Œ±} : TendstoIxxClass Icc (ùìü [[a, b]]) (ùìü [[a, b]]) :=\n  Filter.tendsto_Icc_Icc_Icc\n\n"}
{"name":"Filter.tendsto_Ioc_uIcc_uIcc","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù : LinearOrder Œ±\na b : Œ±\n‚ä¢ Filter.TendstoIxxClass Set.Ioc (Filter.principal (Set.uIcc a b)) (Filter.principal (Set.uIcc a b))","decl":"instance tendsto_Ioc_uIcc_uIcc {a b : Œ±} : TendstoIxxClass Ioc (ùìü [[a, b]]) (ùìü [[a, b]]) :=\n  Filter.tendsto_Ioc_Icc_Icc\n\n"}
{"name":"Filter.tendsto_uIcc_of_Icc","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\ninst‚úù¬π : LinearOrder Œ±\nl : Filter Œ±\ninst‚úù : Filter.TendstoIxxClass Set.Icc l l\n‚ä¢ Filter.TendstoIxxClass Set.uIcc l l","decl":"instance tendsto_uIcc_of_Icc {l : Filter Œ±} [TendstoIxxClass Icc l l] :\n    TendstoIxxClass uIcc l l := by\n  refine ‚ü®fun s hs => mem_map.2 <| mem_prod_self_iff.2 ?_‚ü©\n  obtain ‚ü®t, htl, hts‚ü© : ‚àÉ t ‚àà l, ‚àÄ p ‚àà (t : Set Œ±) √óÀ¢ t, Icc (p : Œ± √ó Œ±).1 p.2 ‚àà s :=\n    mem_prod_self_iff.1 (mem_map.1 (tendsto_fst.Icc tendsto_snd hs))\n  refine ‚ü®t, htl, fun p hp => ?_‚ü©\n  rcases le_total p.1 p.2 with h | h\n  ¬∑ rw [mem_preimage, uIcc_of_le h]\n    exact hts p hp\n  ¬∑ rw [mem_preimage, uIcc_of_ge h]\n    exact hts ‚ü®p.2, p.1‚ü© ‚ü®hp.2, hp.1‚ü©\n\n"}
{"name":"Filter.Tendsto.uIcc","module":"Mathlib.Order.Filter.Interval","initialProofState":"Œ± : Type u_1\nŒ≤ : Type u_2\ninst‚úù¬π : LinearOrder Œ±\nl : Filter Œ±\ninst‚úù : Filter.TendstoIxxClass Set.Icc l l\nf g : Œ≤ ‚Üí Œ±\nlb : Filter Œ≤\nhf : Filter.Tendsto f lb l\nhg : Filter.Tendsto g lb l\n‚ä¢ Filter.Tendsto (fun x => Set.uIcc (f x) (g x)) lb l.smallSets","decl":"protected theorem Tendsto.uIcc {l : Filter Œ±} [TendstoIxxClass Icc l l] {f g : Œ≤ ‚Üí Œ±}\n    {lb : Filter Œ≤} (hf : Tendsto f lb l) (hg : Tendsto g lb l) :\n    Tendsto (fun x => [[f x, g x]]) lb l.smallSets :=\n  (@TendstoIxxClass.tendsto_Ixx Œ± Set.uIcc _ _ _).comp <| hf.prod_mk hg\n\n"}
