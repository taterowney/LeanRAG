{"name":"geom_sum_succ","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Semiring α\nx : α\nn : Nat\n⊢ Eq ((Finset.range (HAdd.hAdd n 1)).sum fun i => HPow.hPow x i) (HAdd.hAdd (HMul.hMul x ((Finset.range n).sum fun i => HPow.hPow x i)) 1)","decl":"theorem geom_sum_succ {x : α} {n : ℕ} :\n    ∑ i ∈ range (n + 1), x ^ i = (x * ∑ i ∈ range n, x ^ i) + 1 := by\n  simp only [mul_sum, ← pow_succ', sum_range_succ', pow_zero]\n\n"}
{"name":"geom_sum_succ'","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Semiring α\nx : α\nn : Nat\n⊢ Eq ((Finset.range (HAdd.hAdd n 1)).sum fun i => HPow.hPow x i) (HAdd.hAdd (HPow.hPow x n) ((Finset.range n).sum fun i => HPow.hPow x i))","decl":"theorem geom_sum_succ' {x : α} {n : ℕ} :\n    ∑ i ∈ range (n + 1), x ^ i = x ^ n + ∑ i ∈ range n, x ^ i :=\n  (sum_range_succ _ _).trans (add_comm _ _)\n\n"}
{"name":"geom_sum_zero","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Semiring α\nx : α\n⊢ Eq ((Finset.range 0).sum fun i => HPow.hPow x i) 0","decl":"theorem geom_sum_zero (x : α) : ∑ i ∈ range 0, x ^ i = 0 :=\n  rfl\n\n"}
{"name":"geom_sum_one","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Semiring α\nx : α\n⊢ Eq ((Finset.range 1).sum fun i => HPow.hPow x i) 1","decl":"theorem geom_sum_one (x : α) : ∑ i ∈ range 1, x ^ i = 1 := by simp [geom_sum_succ']\n\n"}
{"name":"geom_sum_two","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Semiring α\nx : α\n⊢ Eq ((Finset.range 2).sum fun i => HPow.hPow x i) (HAdd.hAdd x 1)","decl":"@[simp]\ntheorem geom_sum_two {x : α} : ∑ i ∈ range 2, x ^ i = x + 1 := by simp [geom_sum_succ']\n\n"}
{"name":"zero_geom_sum","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Semiring α\nn : Nat\n⊢ Eq ((Finset.range n).sum fun i => HPow.hPow 0 i) (ite (Eq n 0) 0 1)","decl":"@[simp]\ntheorem zero_geom_sum : ∀ {n}, ∑ i ∈ range n, (0 : α) ^ i = if n = 0 then 0 else 1\n  | 0 => by simp\n  | 1 => by simp\n  | n + 2 => by\n    rw [geom_sum_succ']\n    simp [zero_geom_sum]\n\n"}
{"name":"one_geom_sum","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Semiring α\nn : Nat\n⊢ Eq ((Finset.range n).sum fun i => HPow.hPow 1 i) ↑n","decl":"theorem one_geom_sum (n : ℕ) : ∑ i ∈ range n, (1 : α) ^ i = n := by simp\n\n"}
{"name":"op_geom_sum","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Semiring α\nx : α\nn : Nat\n⊢ Eq (MulOpposite.op ((Finset.range n).sum fun i => HPow.hPow x i)) ((Finset.range n).sum fun i => HPow.hPow (MulOpposite.op x) i)","decl":"theorem op_geom_sum (x : α) (n : ℕ) : op (∑ i ∈ range n, x ^ i) = ∑ i ∈ range n, op x ^ i := by\n  simp\n\n"}
{"name":"op_geom_sum₂","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Semiring α\nx y : α\nn : Nat\n⊢ Eq ((Finset.range n).sum fun i => HMul.hMul (HPow.hPow (MulOpposite.op y) (HSub.hSub (HSub.hSub n 1) i)) (HPow.hPow (MulOpposite.op x) i)) ((Finset.range n).sum fun i => HMul.hMul (HPow.hPow (MulOpposite.op y) i) (HPow.hPow (MulOpposite.op x) (HSub.hSub (HSub.hSub n 1) i)))","decl":"@[simp]\ntheorem op_geom_sum₂ (x y : α) (n : ℕ) : ∑ i ∈ range n, op y ^ (n - 1 - i) * op x ^ i =\n    ∑ i ∈ range n, op y ^ i * op x ^ (n - 1 - i) := by\n  rw [← sum_range_reflect]\n  refine sum_congr rfl fun j j_in => ?_\n  rw [mem_range, Nat.lt_iff_add_one_le] at j_in\n  congr\n  apply tsub_tsub_cancel_of_le\n  exact le_tsub_of_add_le_right j_in\n\n"}
{"name":"geom_sum₂_with_one","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Semiring α\nx : α\nn : Nat\n⊢ Eq ((Finset.range n).sum fun i => HMul.hMul (HPow.hPow x i) (HPow.hPow 1 (HSub.hSub (HSub.hSub n 1) i))) ((Finset.range n).sum fun i => HPow.hPow x i)","decl":"theorem geom_sum₂_with_one (x : α) (n : ℕ) :\n    ∑ i ∈ range n, x ^ i * 1 ^ (n - 1 - i) = ∑ i ∈ range n, x ^ i :=\n  sum_congr rfl fun i _ => by rw [one_pow, mul_one]\n\n"}
{"name":"Commute.geom_sum₂_mul_add","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Semiring α\nx y : α\nh : Commute x y\nn : Nat\n⊢ Eq (HAdd.hAdd (HMul.hMul ((Finset.range n).sum fun i => HMul.hMul (HPow.hPow (HAdd.hAdd x y) i) (HPow.hPow y (HSub.hSub (HSub.hSub n 1) i))) x) (HPow.hPow y n)) (HPow.hPow (HAdd.hAdd x y) n)","decl":"/-- $x^n-y^n = (x-y) \\sum x^ky^{n-1-k}$ reformulated without `-` signs. -/\nprotected theorem Commute.geom_sum₂_mul_add {x y : α} (h : Commute x y) (n : ℕ) :\n    (∑ i ∈ range n, (x + y) ^ i * y ^ (n - 1 - i)) * x + y ^ n = (x + y) ^ n := by\n  let f :  ℕ → ℕ → α := fun m i : ℕ => (x + y) ^ i * y ^ (m - 1 - i)\n  change (∑ i ∈ range n, (f n) i) * x + y ^ n = (x + y) ^ n\n  induction n with\n  | zero => rw [range_zero, sum_empty, zero_mul, zero_add, pow_zero, pow_zero]\n  | succ n ih =>\n    have f_last : f (n + 1) n = (x + y) ^ n := by\n      dsimp only [f]\n      rw [← tsub_add_eq_tsub_tsub, Nat.add_comm, tsub_self, pow_zero, mul_one]\n    have f_succ : ∀ i, i ∈ range n → f (n + 1) i = y * f n i := fun i hi => by\n      dsimp only [f]\n      have : Commute y ((x + y) ^ i) := (h.symm.add_right (Commute.refl y)).pow_right i\n      rw [← mul_assoc, this.eq, mul_assoc, ← pow_succ' y (n - 1 - i), add_tsub_cancel_right,\n        ← tsub_add_eq_tsub_tsub, add_comm 1 i]\n      have : i + 1 + (n - (i + 1)) = n := add_tsub_cancel_of_le (mem_range.mp hi)\n      rw [add_comm (i + 1)] at this\n      rw [← this, add_tsub_cancel_right, add_comm i 1, ← add_assoc, add_tsub_cancel_right]\n    rw [pow_succ' (x + y), add_mul, sum_range_succ_comm, add_mul, f_last, add_assoc,\n      (((Commute.refl x).add_right h).pow_right n).eq, sum_congr rfl f_succ, ← mul_sum,\n      pow_succ' y, mul_assoc, ← mul_add y, ih]\n\n"}
{"name":"neg_one_geom_sum","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Ring α\nn : Nat\n⊢ Eq ((Finset.range n).sum fun i => HPow.hPow (-1) i) (ite (Even n) 0 1)","decl":"@[simp]\ntheorem neg_one_geom_sum [Ring α] {n : ℕ} :\n    ∑ i ∈ range n, (-1 : α) ^ i = if Even n then 0 else 1 := by\n  induction n with\n  | zero => simp\n  | succ k hk =>\n    simp only [geom_sum_succ', Nat.even_add_one, hk]\n    split_ifs with h\n    · rw [h.neg_one_pow, add_zero]\n    · rw [(Nat.not_even_iff_odd.1 h).neg_one_pow, neg_add_cancel]\n\n"}
{"name":"geom_sum₂_self","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u_1\ninst✝ : CommRing α\nx : α\nn : Nat\n⊢ Eq ((Finset.range n).sum fun i => HMul.hMul (HPow.hPow x i) (HPow.hPow x (HSub.hSub (HSub.hSub n 1) i))) (HMul.hMul (↑n) (HPow.hPow x (HSub.hSub n 1)))","decl":"theorem geom_sum₂_self {α : Type*} [CommRing α] (x : α) (n : ℕ) :\n    ∑ i ∈ range n, x ^ i * x ^ (n - 1 - i) = n * x ^ (n - 1) :=\n  calc\n    ∑ i ∈ Finset.range n, x ^ i * x ^ (n - 1 - i) =\n        ∑ i ∈ Finset.range n, x ^ (i + (n - 1 - i)) := by\n      simp_rw [← pow_add]\n    _ = ∑ _i ∈ Finset.range n, x ^ (n - 1) :=\n      Finset.sum_congr rfl fun _ hi =>\n        congr_arg _ <| add_tsub_cancel_of_le <| Nat.le_sub_one_of_lt <| Finset.mem_range.1 hi\n    _ = #(range n) • x ^ (n - 1) := sum_const _\n    _ = n * x ^ (n - 1) := by rw [Finset.card_range, nsmul_eq_mul]\n\n"}
{"name":"geom_sum₂_mul_add","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : CommSemiring α\nx y : α\nn : Nat\n⊢ Eq (HAdd.hAdd (HMul.hMul ((Finset.range n).sum fun i => HMul.hMul (HPow.hPow (HAdd.hAdd x y) i) (HPow.hPow y (HSub.hSub (HSub.hSub n 1) i))) x) (HPow.hPow y n)) (HPow.hPow (HAdd.hAdd x y) n)","decl":"/-- $x^n-y^n = (x-y) \\sum x^ky^{n-1-k}$ reformulated without `-` signs. -/\ntheorem geom_sum₂_mul_add [CommSemiring α] (x y : α) (n : ℕ) :\n    (∑ i ∈ range n, (x + y) ^ i * y ^ (n - 1 - i)) * x + y ^ n = (x + y) ^ n :=\n  (Commute.all x y).geom_sum₂_mul_add n\n\n"}
{"name":"geom_sum_mul_add","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Semiring α\nx : α\nn : Nat\n⊢ Eq (HAdd.hAdd (HMul.hMul ((Finset.range n).sum fun i => HPow.hPow (HAdd.hAdd x 1) i) x) 1) (HPow.hPow (HAdd.hAdd x 1) n)","decl":"theorem geom_sum_mul_add [Semiring α] (x : α) (n : ℕ) :\n    (∑ i ∈ range n, (x + 1) ^ i) * x + 1 = (x + 1) ^ n := by\n  have := (Commute.one_right x).geom_sum₂_mul_add n\n  rw [one_pow, geom_sum₂_with_one] at this\n  exact this\n\n"}
{"name":"Commute.geom_sum₂_mul","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Ring α\nx y : α\nh : Commute x y\nn : Nat\n⊢ Eq (HMul.hMul ((Finset.range n).sum fun i => HMul.hMul (HPow.hPow x i) (HPow.hPow y (HSub.hSub (HSub.hSub n 1) i))) (HSub.hSub x y)) (HSub.hSub (HPow.hPow x n) (HPow.hPow y n))","decl":"protected theorem Commute.geom_sum₂_mul [Ring α] {x y : α} (h : Commute x y) (n : ℕ) :\n    (∑ i ∈ range n, x ^ i * y ^ (n - 1 - i)) * (x - y) = x ^ n - y ^ n := by\n  have := (h.sub_left (Commute.refl y)).geom_sum₂_mul_add n\n  rw [sub_add_cancel] at this\n  rw [← this, add_sub_cancel_right]\n\n"}
{"name":"Commute.mul_neg_geom_sum₂","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Ring α\nx y : α\nh : Commute x y\nn : Nat\n⊢ Eq (HMul.hMul (HSub.hSub y x) ((Finset.range n).sum fun i => HMul.hMul (HPow.hPow x i) (HPow.hPow y (HSub.hSub (HSub.hSub n 1) i)))) (HSub.hSub (HPow.hPow y n) (HPow.hPow x n))","decl":"theorem Commute.mul_neg_geom_sum₂ [Ring α] {x y : α} (h : Commute x y) (n : ℕ) :\n    ((y - x) * ∑ i ∈ range n, x ^ i * y ^ (n - 1 - i)) = y ^ n - x ^ n := by\n  apply op_injective\n  simp only [op_mul, op_sub, op_geom_sum₂, op_pow]\n  simp [(Commute.op h.symm).geom_sum₂_mul n]\n\n"}
{"name":"Commute.mul_geom_sum₂","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Ring α\nx y : α\nh : Commute x y\nn : Nat\n⊢ Eq (HMul.hMul (HSub.hSub x y) ((Finset.range n).sum fun i => HMul.hMul (HPow.hPow x i) (HPow.hPow y (HSub.hSub (HSub.hSub n 1) i)))) (HSub.hSub (HPow.hPow x n) (HPow.hPow y n))","decl":"theorem Commute.mul_geom_sum₂ [Ring α] {x y : α} (h : Commute x y) (n : ℕ) :\n    ((x - y) * ∑ i ∈ range n, x ^ i * y ^ (n - 1 - i)) = x ^ n - y ^ n := by\n  rw [← neg_sub (y ^ n), ← h.mul_neg_geom_sum₂, ← neg_mul, neg_sub]\n\n"}
{"name":"geom_sum₂_mul","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : CommRing α\nx y : α\nn : Nat\n⊢ Eq (HMul.hMul ((Finset.range n).sum fun i => HMul.hMul (HPow.hPow x i) (HPow.hPow y (HSub.hSub (HSub.hSub n 1) i))) (HSub.hSub x y)) (HSub.hSub (HPow.hPow x n) (HPow.hPow y n))","decl":"theorem geom_sum₂_mul [CommRing α] (x y : α) (n : ℕ) :\n    (∑ i ∈ range n, x ^ i * y ^ (n - 1 - i)) * (x - y) = x ^ n - y ^ n :=\n  (Commute.all x y).geom_sum₂_mul n\n\n"}
{"name":"geom_sum₂_mul_of_ge","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝⁶ : CommSemiring α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : AddLeftReflectLE α\ninst✝³ : AddLeftMono α\ninst✝² : ExistsAddOfLE α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\nx y : α\nhxy : LE.le y x\nn : Nat\n⊢ Eq (HMul.hMul ((Finset.range n).sum fun i => HMul.hMul (HPow.hPow x i) (HPow.hPow y (HSub.hSub (HSub.hSub n 1) i))) (HSub.hSub x y)) (HSub.hSub (HPow.hPow x n) (HPow.hPow y n))","decl":"theorem geom_sum₂_mul_of_ge [CommSemiring α] [PartialOrder α] [AddLeftReflectLE α] [AddLeftMono α]\n    [ExistsAddOfLE α] [Sub α] [OrderedSub α] {x y : α} (hxy : y ≤ x) (n : ℕ) :\n    (∑ i ∈ range n, x ^ i * y ^ (n - 1 - i)) * (x - y) = x ^ n - y ^ n := by\n  apply eq_tsub_of_add_eq\n  simpa only [tsub_add_cancel_of_le hxy] using geom_sum₂_mul_add (x - y) y n\n\n"}
{"name":"geom_sum₂_mul_of_le","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝⁶ : CommSemiring α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : AddLeftReflectLE α\ninst✝³ : AddLeftMono α\ninst✝² : ExistsAddOfLE α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\nx y : α\nhxy : LE.le x y\nn : Nat\n⊢ Eq (HMul.hMul ((Finset.range n).sum fun i => HMul.hMul (HPow.hPow x i) (HPow.hPow y (HSub.hSub (HSub.hSub n 1) i))) (HSub.hSub y x)) (HSub.hSub (HPow.hPow y n) (HPow.hPow x n))","decl":"theorem geom_sum₂_mul_of_le [CommSemiring α] [PartialOrder α] [AddLeftReflectLE α] [AddLeftMono α]\n    [ExistsAddOfLE α] [Sub α] [OrderedSub α] {x y : α} (hxy : x ≤ y) (n : ℕ) :\n    (∑ i ∈ range n, x ^ i * y ^ (n - 1 - i)) * (y - x) = y ^ n - x ^ n := by\n  rw [← Finset.sum_range_reflect]\n  convert geom_sum₂_mul_of_ge hxy n using 3\n  simp_all only [Finset.mem_range]\n  rw [mul_comm]\n  congr\n  omega\n\n"}
{"name":"Commute.sub_dvd_pow_sub_pow","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Ring α\nx y : α\nh : Commute x y\nn : Nat\n⊢ Dvd.dvd (HSub.hSub x y) (HSub.hSub (HPow.hPow x n) (HPow.hPow y n))","decl":"theorem Commute.sub_dvd_pow_sub_pow [Ring α] {x y : α} (h : Commute x y) (n : ℕ) :\n    x - y ∣ x ^ n - y ^ n :=\n  Dvd.intro _ <| h.mul_geom_sum₂ _\n\n"}
{"name":"sub_dvd_pow_sub_pow","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : CommRing α\nx y : α\nn : Nat\n⊢ Dvd.dvd (HSub.hSub x y) (HSub.hSub (HPow.hPow x n) (HPow.hPow y n))","decl":"theorem sub_dvd_pow_sub_pow [CommRing α] (x y : α) (n : ℕ) : x - y ∣ x ^ n - y ^ n :=\n  (Commute.all x y).sub_dvd_pow_sub_pow n\n\n"}
{"name":"nat_sub_dvd_pow_sub_pow","module":"Mathlib.Algebra.GeomSum","initialProofState":"x y n : Nat\n⊢ Dvd.dvd (HSub.hSub x y) (HSub.hSub (HPow.hPow x n) (HPow.hPow y n))","decl":"theorem nat_sub_dvd_pow_sub_pow (x y n : ℕ) : x - y ∣ x ^ n - y ^ n := by\n  rcases le_or_lt y x with h | h\n  · have : y ^ n ≤ x ^ n := Nat.pow_le_pow_left h _\n    exact mod_cast sub_dvd_pow_sub_pow (x : ℤ) (↑y) n\n  · have : x ^ n ≤ y ^ n := Nat.pow_le_pow_left h.le _\n    exact (Nat.sub_eq_zero_of_le this).symm ▸ dvd_zero (x - y)\n\n"}
{"name":"one_sub_dvd_one_sub_pow","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Ring α\nx : α\nn : Nat\n⊢ Dvd.dvd (HSub.hSub 1 x) (HSub.hSub 1 (HPow.hPow x n))","decl":"theorem one_sub_dvd_one_sub_pow [Ring α] (x : α) (n : ℕ) :\n    1 - x ∣ 1 - x ^ n := by\n  conv_rhs => rw [← one_pow n]\n  exact (Commute.one_left x).sub_dvd_pow_sub_pow n\n\n"}
{"name":"sub_one_dvd_pow_sub_one","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Ring α\nx : α\nn : Nat\n⊢ Dvd.dvd (HSub.hSub x 1) (HSub.hSub (HPow.hPow x n) 1)","decl":"theorem sub_one_dvd_pow_sub_one [Ring α] (x : α) (n : ℕ) :\n    x - 1 ∣ x ^ n - 1 := by\n  conv_rhs => rw [← one_pow n]\n  exact (Commute.one_right x).sub_dvd_pow_sub_pow n\n\n"}
{"name":"pow_one_sub_dvd_pow_mul_sub_one","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Ring α\nx : α\nm n : Nat\n⊢ Dvd.dvd (HSub.hSub (HPow.hPow x m) 1) (HSub.hSub (HPow.hPow x (HMul.hMul m n)) 1)","decl":"lemma pow_one_sub_dvd_pow_mul_sub_one [Ring α] (x : α) (m n : ℕ) :\n    ((x ^ m) - 1 : α) ∣ (x ^ (m * n) - 1) := by\n  rw [npow_mul]\n  exact sub_one_dvd_pow_sub_one (x := x ^ m) (n := n)\n\n"}
{"name":"nat_pow_one_sub_dvd_pow_mul_sub_one","module":"Mathlib.Algebra.GeomSum","initialProofState":"x m n : Nat\n⊢ Dvd.dvd (HSub.hSub (HPow.hPow x m) 1) (HSub.hSub (HPow.hPow x (HMul.hMul m n)) 1)","decl":"lemma nat_pow_one_sub_dvd_pow_mul_sub_one (x m n : ℕ) : x ^ m - 1 ∣ x ^ (m * n) - 1 := by\n  nth_rw 2 [← Nat.one_pow n]\n  rw [Nat.pow_mul x m n]\n  apply nat_sub_dvd_pow_sub_pow (x ^ m) 1\n\n"}
{"name":"Odd.add_dvd_pow_add_pow","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : CommRing α\nx y : α\nn : Nat\nh : Odd n\n⊢ Dvd.dvd (HAdd.hAdd x y) (HAdd.hAdd (HPow.hPow x n) (HPow.hPow y n))","decl":"theorem Odd.add_dvd_pow_add_pow [CommRing α] (x y : α) {n : ℕ} (h : Odd n) :\n    x + y ∣ x ^ n + y ^ n := by\n  have h₁ := geom_sum₂_mul x (-y) n\n  rw [Odd.neg_pow h y, sub_neg_eq_add, sub_neg_eq_add] at h₁\n  exact Dvd.intro_left _ h₁\n\n"}
{"name":"Odd.nat_add_dvd_pow_add_pow","module":"Mathlib.Algebra.GeomSum","initialProofState":"x y n : Nat\nh : Odd n\n⊢ Dvd.dvd (HAdd.hAdd x y) (HAdd.hAdd (HPow.hPow x n) (HPow.hPow y n))","decl":"theorem Odd.nat_add_dvd_pow_add_pow (x y : ℕ) {n : ℕ} (h : Odd n) : x + y ∣ x ^ n + y ^ n :=\n  mod_cast Odd.add_dvd_pow_add_pow (x : ℤ) (↑y) h\n\n"}
{"name":"geom_sum_mul","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Ring α\nx : α\nn : Nat\n⊢ Eq (HMul.hMul ((Finset.range n).sum fun i => HPow.hPow x i) (HSub.hSub x 1)) (HSub.hSub (HPow.hPow x n) 1)","decl":"theorem geom_sum_mul [Ring α] (x : α) (n : ℕ) : (∑ i ∈ range n, x ^ i) * (x - 1) = x ^ n - 1 := by\n  have := (Commute.one_right x).geom_sum₂_mul n\n  rw [one_pow, geom_sum₂_with_one] at this\n  exact this\n\n"}
{"name":"geom_sum_mul_of_one_le","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝⁶ : CommSemiring α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : AddLeftReflectLE α\ninst✝³ : AddLeftMono α\ninst✝² : ExistsAddOfLE α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\nx : α\nhx : LE.le 1 x\nn : Nat\n⊢ Eq (HMul.hMul ((Finset.range n).sum fun i => HPow.hPow x i) (HSub.hSub x 1)) (HSub.hSub (HPow.hPow x n) 1)","decl":"theorem geom_sum_mul_of_one_le [CommSemiring α] [PartialOrder α] [AddLeftReflectLE α]\n    [AddLeftMono α] [ExistsAddOfLE α] [Sub α] [OrderedSub α] {x : α} (hx : 1 ≤ x) (n : ℕ) :\n    (∑ i ∈ range n, x ^ i) * (x - 1) = x ^ n - 1 := by\n  simpa using geom_sum₂_mul_of_ge hx n\n\n"}
{"name":"geom_sum_mul_of_le_one","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝⁶ : CommSemiring α\ninst✝⁵ : PartialOrder α\ninst✝⁴ : AddLeftReflectLE α\ninst✝³ : AddLeftMono α\ninst✝² : ExistsAddOfLE α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\nx : α\nhx : LE.le x 1\nn : Nat\n⊢ Eq (HMul.hMul ((Finset.range n).sum fun i => HPow.hPow x i) (HSub.hSub 1 x)) (HSub.hSub 1 (HPow.hPow x n))","decl":"theorem geom_sum_mul_of_le_one [CommSemiring α] [PartialOrder α] [AddLeftReflectLE α]\n    [AddLeftMono α] [ExistsAddOfLE α] [Sub α] [OrderedSub α] {x : α} (hx : x ≤ 1) (n : ℕ) :\n    (∑ i ∈ range n, x ^ i) * (1 - x) = 1 - x ^ n := by\n  simpa using geom_sum₂_mul_of_le hx n\n\n"}
{"name":"mul_geom_sum","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Ring α\nx : α\nn : Nat\n⊢ Eq (HMul.hMul (HSub.hSub x 1) ((Finset.range n).sum fun i => HPow.hPow x i)) (HSub.hSub (HPow.hPow x n) 1)","decl":"theorem mul_geom_sum [Ring α] (x : α) (n : ℕ) : ((x - 1) * ∑ i ∈ range n, x ^ i) = x ^ n - 1 :=\n  op_injective <| by simpa using geom_sum_mul (op x) n\n\n"}
{"name":"geom_sum_mul_neg","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Ring α\nx : α\nn : Nat\n⊢ Eq (HMul.hMul ((Finset.range n).sum fun i => HPow.hPow x i) (HSub.hSub 1 x)) (HSub.hSub 1 (HPow.hPow x n))","decl":"theorem geom_sum_mul_neg [Ring α] (x : α) (n : ℕ) :\n    (∑ i ∈ range n, x ^ i) * (1 - x) = 1 - x ^ n := by\n  have := congr_arg Neg.neg (geom_sum_mul x n)\n  rw [neg_sub, ← mul_neg, neg_sub] at this\n  exact this\n\n"}
{"name":"mul_neg_geom_sum","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Ring α\nx : α\nn : Nat\n⊢ Eq (HMul.hMul (HSub.hSub 1 x) ((Finset.range n).sum fun i => HPow.hPow x i)) (HSub.hSub 1 (HPow.hPow x n))","decl":"theorem mul_neg_geom_sum [Ring α] (x : α) (n : ℕ) : ((1 - x) * ∑ i ∈ range n, x ^ i) = 1 - x ^ n :=\n  op_injective <| by simpa using geom_sum_mul_neg (op x) n\n\n"}
{"name":"Commute.geom_sum₂_comm","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Semiring α\nx y : α\nn : Nat\nh : Commute x y\n⊢ Eq ((Finset.range n).sum fun i => HMul.hMul (HPow.hPow x i) (HPow.hPow y (HSub.hSub (HSub.hSub n 1) i))) ((Finset.range n).sum fun i => HMul.hMul (HPow.hPow y i) (HPow.hPow x (HSub.hSub (HSub.hSub n 1) i)))","decl":"protected theorem Commute.geom_sum₂_comm {α : Type u} [Semiring α] {x y : α} (n : ℕ)\n    (h : Commute x y) :\n    ∑ i ∈ range n, x ^ i * y ^ (n - 1 - i) = ∑ i ∈ range n, y ^ i * x ^ (n - 1 - i) := by\n  cases n; · simp\n  simp only [Nat.succ_eq_add_one, Nat.add_sub_cancel]\n  rw [← Finset.sum_flip]\n  refine Finset.sum_congr rfl fun i hi => ?_\n  simpa [Nat.sub_sub_self (Nat.succ_le_succ_iff.mp (Finset.mem_range.mp hi))] using h.pow_pow _ _\n\n"}
{"name":"geom_sum₂_comm","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : CommSemiring α\nx y : α\nn : Nat\n⊢ Eq ((Finset.range n).sum fun i => HMul.hMul (HPow.hPow x i) (HPow.hPow y (HSub.hSub (HSub.hSub n 1) i))) ((Finset.range n).sum fun i => HMul.hMul (HPow.hPow y i) (HPow.hPow x (HSub.hSub (HSub.hSub n 1) i)))","decl":"theorem geom_sum₂_comm {α : Type u} [CommSemiring α] (x y : α) (n : ℕ) :\n    ∑ i ∈ range n, x ^ i * y ^ (n - 1 - i) = ∑ i ∈ range n, y ^ i * x ^ (n - 1 - i) :=\n  (Commute.all x y).geom_sum₂_comm n\n\n"}
{"name":"Commute.geom_sum₂","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : DivisionRing α\nx y : α\nh' : Commute x y\nh : Ne x y\nn : Nat\n⊢ Eq ((Finset.range n).sum fun i => HMul.hMul (HPow.hPow x i) (HPow.hPow y (HSub.hSub (HSub.hSub n 1) i))) (HDiv.hDiv (HSub.hSub (HPow.hPow x n) (HPow.hPow y n)) (HSub.hSub x y))","decl":"protected theorem Commute.geom_sum₂ [DivisionRing α] {x y : α} (h' : Commute x y) (h : x ≠ y)\n    (n : ℕ) : ∑ i ∈ range n, x ^ i * y ^ (n - 1 - i) = (x ^ n - y ^ n) / (x - y) := by\n  have : x - y ≠ 0 := by simp_all [sub_eq_iff_eq_add]\n  rw [← h'.geom_sum₂_mul, mul_div_cancel_right₀ _ this]\n\n"}
{"name":"geom₂_sum","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Field α\nx y : α\nh : Ne x y\nn : Nat\n⊢ Eq ((Finset.range n).sum fun i => HMul.hMul (HPow.hPow x i) (HPow.hPow y (HSub.hSub (HSub.hSub n 1) i))) (HDiv.hDiv (HSub.hSub (HPow.hPow x n) (HPow.hPow y n)) (HSub.hSub x y))","decl":"theorem geom₂_sum [Field α] {x y : α} (h : x ≠ y) (n : ℕ) :\n    ∑ i ∈ range n, x ^ i * y ^ (n - 1 - i) = (x ^ n - y ^ n) / (x - y) :=\n  (Commute.all x y).geom_sum₂ h n\n\n"}
{"name":"geom₂_sum_of_gt","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u_1\ninst✝³ : LinearOrderedSemifield α\ninst✝² : CanonicallyOrderedAdd α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\nx y : α\nh : LT.lt y x\nn : Nat\n⊢ Eq ((Finset.range n).sum fun i => HMul.hMul (HPow.hPow x i) (HPow.hPow y (HSub.hSub (HSub.hSub n 1) i))) (HDiv.hDiv (HSub.hSub (HPow.hPow x n) (HPow.hPow y n)) (HSub.hSub x y))","decl":"theorem geom₂_sum_of_gt {α : Type*} [LinearOrderedSemifield α] [CanonicallyOrderedAdd α]\n    [Sub α] [OrderedSub α]\n    {x y : α} (h : y < x) (n : ℕ) :\n    ∑ i ∈ range n, x ^ i * y ^ (n - 1 - i) = (x ^ n - y ^ n) / (x - y) :=\n  eq_div_of_mul_eq (tsub_pos_of_lt h).ne' (geom_sum₂_mul_of_ge h.le n)\n\n"}
{"name":"geom₂_sum_of_lt","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u_1\ninst✝³ : LinearOrderedSemifield α\ninst✝² : CanonicallyOrderedAdd α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\nx y : α\nh : LT.lt x y\nn : Nat\n⊢ Eq ((Finset.range n).sum fun i => HMul.hMul (HPow.hPow x i) (HPow.hPow y (HSub.hSub (HSub.hSub n 1) i))) (HDiv.hDiv (HSub.hSub (HPow.hPow y n) (HPow.hPow x n)) (HSub.hSub y x))","decl":"theorem geom₂_sum_of_lt {α : Type*} [LinearOrderedSemifield α] [CanonicallyOrderedAdd α]\n    [Sub α] [OrderedSub α]\n    {x y : α} (h : x < y) (n : ℕ) :\n    ∑ i ∈ range n, x ^ i * y ^ (n - 1 - i) = (y ^ n - x ^ n) / (y - x) :=\n  eq_div_of_mul_eq (tsub_pos_of_lt h).ne' (geom_sum₂_mul_of_le h.le n)\n\n"}
{"name":"geom_sum_eq","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : DivisionRing α\nx : α\nh : Ne x 1\nn : Nat\n⊢ Eq ((Finset.range n).sum fun i => HPow.hPow x i) (HDiv.hDiv (HSub.hSub (HPow.hPow x n) 1) (HSub.hSub x 1))","decl":"theorem geom_sum_eq [DivisionRing α] {x : α} (h : x ≠ 1) (n : ℕ) :\n    ∑ i ∈ range n, x ^ i = (x ^ n - 1) / (x - 1) := by\n  have : x - 1 ≠ 0 := by simp_all [sub_eq_iff_eq_add]\n  rw [← geom_sum_mul, mul_div_cancel_right₀ _ this]\n\n"}
{"name":"geom_sum_of_one_lt","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\nx : α\ninst✝³ : LinearOrderedSemifield α\ninst✝² : CanonicallyOrderedAdd α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\nh : LT.lt 1 x\nn : Nat\n⊢ Eq ((Finset.range n).sum fun i => HPow.hPow x i) (HDiv.hDiv (HSub.hSub (HPow.hPow x n) 1) (HSub.hSub x 1))","decl":"lemma geom_sum_of_one_lt {x : α} [LinearOrderedSemifield α] [CanonicallyOrderedAdd α]\n    [Sub α] [OrderedSub α]\n    (h : 1 < x) (n : ℕ) :\n    ∑ i ∈ Finset.range n, x ^ i = (x ^ n - 1) / (x - 1) :=\n  eq_div_of_mul_eq (tsub_pos_of_lt h).ne' (geom_sum_mul_of_one_le h.le n)\n\n"}
{"name":"geom_sum_of_lt_one","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\nx : α\ninst✝³ : LinearOrderedSemifield α\ninst✝² : CanonicallyOrderedAdd α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\nh : LT.lt x 1\nn : Nat\n⊢ Eq ((Finset.range n).sum fun i => HPow.hPow x i) (HDiv.hDiv (HSub.hSub 1 (HPow.hPow x n)) (HSub.hSub 1 x))","decl":"lemma geom_sum_of_lt_one {x : α} [LinearOrderedSemifield α] [CanonicallyOrderedAdd α]\n    [Sub α] [OrderedSub α]\n    (h : x < 1) (n : ℕ) :\n    ∑ i ∈ Finset.range n, x ^ i = (1 - x ^ n) / (1 - x) :=\n  eq_div_of_mul_eq (tsub_pos_of_lt h).ne' (geom_sum_mul_of_le_one h.le n)\n\n"}
{"name":"geom_sum_lt","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\nx : α\ninst✝³ : LinearOrderedSemifield α\ninst✝² : CanonicallyOrderedAdd α\ninst✝¹ : Sub α\ninst✝ : OrderedSub α\nh0 : Ne x 0\nh1 : LT.lt x 1\nn : Nat\n⊢ LT.lt ((Finset.range n).sum fun i => HPow.hPow x i) (Inv.inv (HSub.hSub 1 x))","decl":"theorem geom_sum_lt {x : α} [LinearOrderedSemifield α] [CanonicallyOrderedAdd α]\n    [Sub α] [OrderedSub α]\n    (h0 : x ≠ 0) (h1 : x < 1) (n : ℕ) : ∑ i ∈ range n, x ^ i < (1 - x)⁻¹ := by\n  rw [← pos_iff_ne_zero] at h0\n  rw [geom_sum_of_lt_one h1, div_lt_iff₀, inv_mul_cancel₀, tsub_lt_self_iff]\n  · exact ⟨h0.trans h1, pow_pos h0 n⟩\n  · rwa [ne_eq, tsub_eq_zero_iff_le, not_le]\n  · rwa [tsub_pos_iff_lt]\n\n"}
{"name":"Commute.mul_geom_sum₂_Ico","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Ring α\nx y : α\nh : Commute x y\nm n : Nat\nhmn : LE.le m n\n⊢ Eq (HMul.hMul (HSub.hSub x y) ((Finset.Ico m n).sum fun i => HMul.hMul (HPow.hPow x i) (HPow.hPow y (HSub.hSub (HSub.hSub n 1) i)))) (HSub.hSub (HPow.hPow x n) (HMul.hMul (HPow.hPow x m) (HPow.hPow y (HSub.hSub n m))))","decl":"protected theorem Commute.mul_geom_sum₂_Ico [Ring α] {x y : α} (h : Commute x y) {m n : ℕ}\n    (hmn : m ≤ n) :\n    ((x - y) * ∑ i ∈ Finset.Ico m n, x ^ i * y ^ (n - 1 - i)) = x ^ n - x ^ m * y ^ (n - m) := by\n  rw [sum_Ico_eq_sub _ hmn]\n  have :\n    ∑ k ∈ range m, x ^ k * y ^ (n - 1 - k) =\n      ∑ k ∈ range m, x ^ k * (y ^ (n - m) * y ^ (m - 1 - k)) := by\n    refine sum_congr rfl fun j j_in => ?_\n    rw [← pow_add]\n    congr\n    rw [mem_range] at j_in\n    omega\n  rw [this]\n  simp_rw [pow_mul_comm y (n - m) _]\n  simp_rw [← mul_assoc]\n  rw [← sum_mul, mul_sub, h.mul_geom_sum₂, ← mul_assoc, h.mul_geom_sum₂, sub_mul, ← pow_add,\n    add_tsub_cancel_of_le hmn, sub_sub_sub_cancel_right (x ^ n) (x ^ m * y ^ (n - m)) (y ^ n)]\n\n"}
{"name":"Commute.geom_sum₂_succ_eq","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Ring α\nx y : α\nh : Commute x y\nn : Nat\n⊢ Eq ((Finset.range (HAdd.hAdd n 1)).sum fun i => HMul.hMul (HPow.hPow x i) (HPow.hPow y (HSub.hSub n i))) (HAdd.hAdd (HPow.hPow x n) (HMul.hMul y ((Finset.range n).sum fun i => HMul.hMul (HPow.hPow x i) (HPow.hPow y (HSub.hSub (HSub.hSub n 1) i)))))","decl":"protected theorem Commute.geom_sum₂_succ_eq {α : Type u} [Ring α] {x y : α} (h : Commute x y)\n    {n : ℕ} :\n    ∑ i ∈ range (n + 1), x ^ i * y ^ (n - i) =\n      x ^ n + y * ∑ i ∈ range n, x ^ i * y ^ (n - 1 - i) := by\n  simp_rw [mul_sum, sum_range_succ_comm, tsub_self, pow_zero, mul_one, add_right_inj, ← mul_assoc,\n    (h.symm.pow_right _).eq, mul_assoc, ← pow_succ']\n  refine sum_congr rfl fun i hi => ?_\n  suffices n - 1 - i + 1 = n - i by rw [this]\n  rw [Finset.mem_range] at hi\n  omega\n\n"}
{"name":"geom_sum₂_succ_eq","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : CommRing α\nx y : α\nn : Nat\n⊢ Eq ((Finset.range (HAdd.hAdd n 1)).sum fun i => HMul.hMul (HPow.hPow x i) (HPow.hPow y (HSub.hSub n i))) (HAdd.hAdd (HPow.hPow x n) (HMul.hMul y ((Finset.range n).sum fun i => HMul.hMul (HPow.hPow x i) (HPow.hPow y (HSub.hSub (HSub.hSub n 1) i)))))","decl":"theorem geom_sum₂_succ_eq {α : Type u} [CommRing α] (x y : α) {n : ℕ} :\n    ∑ i ∈ range (n + 1), x ^ i * y ^ (n - i) =\n      x ^ n + y * ∑ i ∈ range n, x ^ i * y ^ (n - 1 - i) :=\n  (Commute.all x y).geom_sum₂_succ_eq\n\n"}
{"name":"mul_geom_sum₂_Ico","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : CommRing α\nx y : α\nm n : Nat\nhmn : LE.le m n\n⊢ Eq (HMul.hMul (HSub.hSub x y) ((Finset.Ico m n).sum fun i => HMul.hMul (HPow.hPow x i) (HPow.hPow y (HSub.hSub (HSub.hSub n 1) i)))) (HSub.hSub (HPow.hPow x n) (HMul.hMul (HPow.hPow x m) (HPow.hPow y (HSub.hSub n m))))","decl":"theorem mul_geom_sum₂_Ico [CommRing α] (x y : α) {m n : ℕ} (hmn : m ≤ n) :\n    ((x - y) * ∑ i ∈ Finset.Ico m n, x ^ i * y ^ (n - 1 - i)) = x ^ n - x ^ m * y ^ (n - m) :=\n  (Commute.all x y).mul_geom_sum₂_Ico hmn\n\n"}
{"name":"Commute.geom_sum₂_Ico_mul","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Ring α\nx y : α\nh : Commute x y\nm n : Nat\nhmn : LE.le m n\n⊢ Eq (HMul.hMul ((Finset.Ico m n).sum fun i => HMul.hMul (HPow.hPow x i) (HPow.hPow y (HSub.hSub (HSub.hSub n 1) i))) (HSub.hSub x y)) (HSub.hSub (HPow.hPow x n) (HMul.hMul (HPow.hPow y (HSub.hSub n m)) (HPow.hPow x m)))","decl":"protected theorem Commute.geom_sum₂_Ico_mul [Ring α] {x y : α} (h : Commute x y) {m n : ℕ}\n    (hmn : m ≤ n) :\n    (∑ i ∈ Finset.Ico m n, x ^ i * y ^ (n - 1 - i)) * (x - y) = x ^ n - y ^ (n - m) * x ^ m := by\n  apply op_injective\n  simp only [op_sub, op_mul, op_pow, op_sum]\n  have : (∑ k ∈ Ico m n, MulOpposite.op y ^ (n - 1 - k) * MulOpposite.op x ^ k) =\n      ∑ k ∈ Ico m n, MulOpposite.op x ^ k * MulOpposite.op y ^ (n - 1 - k) := by\n    refine sum_congr rfl fun k _ => ?_\n    have hp := Commute.pow_pow (Commute.op h.symm) (n - 1 - k) k\n    simpa [Commute, SemiconjBy] using hp\n  simp only [this]\n  convert (Commute.op h).mul_geom_sum₂_Ico hmn\n\n"}
{"name":"geom_sum_Ico_mul","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Ring α\nx : α\nm n : Nat\nhmn : LE.le m n\n⊢ Eq (HMul.hMul ((Finset.Ico m n).sum fun i => HPow.hPow x i) (HSub.hSub x 1)) (HSub.hSub (HPow.hPow x n) (HPow.hPow x m))","decl":"theorem geom_sum_Ico_mul [Ring α] (x : α) {m n : ℕ} (hmn : m ≤ n) :\n    (∑ i ∈ Finset.Ico m n, x ^ i) * (x - 1) = x ^ n - x ^ m := by\n  rw [sum_Ico_eq_sub _ hmn, sub_mul, geom_sum_mul, geom_sum_mul, sub_sub_sub_cancel_right]\n\n"}
{"name":"geom_sum_Ico_mul_neg","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Ring α\nx : α\nm n : Nat\nhmn : LE.le m n\n⊢ Eq (HMul.hMul ((Finset.Ico m n).sum fun i => HPow.hPow x i) (HSub.hSub 1 x)) (HSub.hSub (HPow.hPow x m) (HPow.hPow x n))","decl":"theorem geom_sum_Ico_mul_neg [Ring α] (x : α) {m n : ℕ} (hmn : m ≤ n) :\n    (∑ i ∈ Finset.Ico m n, x ^ i) * (1 - x) = x ^ m - x ^ n := by\n  rw [sum_Ico_eq_sub _ hmn, sub_mul, geom_sum_mul_neg, geom_sum_mul_neg, sub_sub_sub_cancel_left]\n\n"}
{"name":"Commute.geom_sum₂_Ico","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : DivisionRing α\nx y : α\nh : Commute x y\nhxy : Ne x y\nm n : Nat\nhmn : LE.le m n\n⊢ Eq ((Finset.Ico m n).sum fun i => HMul.hMul (HPow.hPow x i) (HPow.hPow y (HSub.hSub (HSub.hSub n 1) i))) (HDiv.hDiv (HSub.hSub (HPow.hPow x n) (HMul.hMul (HPow.hPow y (HSub.hSub n m)) (HPow.hPow x m))) (HSub.hSub x y))","decl":"protected theorem Commute.geom_sum₂_Ico [DivisionRing α] {x y : α} (h : Commute x y) (hxy : x ≠ y)\n    {m n : ℕ} (hmn : m ≤ n) :\n    (∑ i ∈ Finset.Ico m n, x ^ i * y ^ (n - 1 - i)) = (x ^ n - y ^ (n - m) * x ^ m) / (x - y) := by\n  have : x - y ≠ 0 := by simp_all [sub_eq_iff_eq_add]\n  rw [← h.geom_sum₂_Ico_mul hmn, mul_div_cancel_right₀ _ this]\n\n"}
{"name":"geom_sum₂_Ico","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : Field α\nx y : α\nhxy : Ne x y\nm n : Nat\nhmn : LE.le m n\n⊢ Eq ((Finset.Ico m n).sum fun i => HMul.hMul (HPow.hPow x i) (HPow.hPow y (HSub.hSub (HSub.hSub n 1) i))) (HDiv.hDiv (HSub.hSub (HPow.hPow x n) (HMul.hMul (HPow.hPow y (HSub.hSub n m)) (HPow.hPow x m))) (HSub.hSub x y))","decl":"theorem geom_sum₂_Ico [Field α] {x y : α} (hxy : x ≠ y) {m n : ℕ} (hmn : m ≤ n) :\n    (∑ i ∈ Finset.Ico m n, x ^ i * y ^ (n - 1 - i)) = (x ^ n - y ^ (n - m) * x ^ m) / (x - y) :=\n  (Commute.all x y).geom_sum₂_Ico hxy hmn\n\n"}
{"name":"geom_sum_Ico","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : DivisionRing α\nx : α\nhx : Ne x 1\nm n : Nat\nhmn : LE.le m n\n⊢ Eq ((Finset.Ico m n).sum fun i => HPow.hPow x i) (HDiv.hDiv (HSub.hSub (HPow.hPow x n) (HPow.hPow x m)) (HSub.hSub x 1))","decl":"theorem geom_sum_Ico [DivisionRing α] {x : α} (hx : x ≠ 1) {m n : ℕ} (hmn : m ≤ n) :\n    ∑ i ∈ Finset.Ico m n, x ^ i = (x ^ n - x ^ m) / (x - 1) := by\n  simp only [sum_Ico_eq_sub _ hmn, geom_sum_eq hx, div_sub_div_same, sub_sub_sub_cancel_right]\n\n"}
{"name":"geom_sum_Ico'","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : DivisionRing α\nx : α\nhx : Ne x 1\nm n : Nat\nhmn : LE.le m n\n⊢ Eq ((Finset.Ico m n).sum fun i => HPow.hPow x i) (HDiv.hDiv (HSub.hSub (HPow.hPow x m) (HPow.hPow x n)) (HSub.hSub 1 x))","decl":"theorem geom_sum_Ico' [DivisionRing α] {x : α} (hx : x ≠ 1) {m n : ℕ} (hmn : m ≤ n) :\n    ∑ i ∈ Finset.Ico m n, x ^ i = (x ^ m - x ^ n) / (1 - x) := by\n  simp only [geom_sum_Ico hx hmn]\n  convert neg_div_neg_eq (x ^ m - x ^ n) (1 - x) using 2 <;> abel\n\n"}
{"name":"geom_sum_Ico_le_of_lt_one","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : LinearOrderedField α\nx : α\nhx : LE.le 0 x\nh'x : LT.lt x 1\nm n : Nat\n⊢ LE.le ((Finset.Ico m n).sum fun i => HPow.hPow x i) (HDiv.hDiv (HPow.hPow x m) (HSub.hSub 1 x))","decl":"theorem geom_sum_Ico_le_of_lt_one [LinearOrderedField α] {x : α} (hx : 0 ≤ x) (h'x : x < 1)\n    {m n : ℕ} : ∑ i ∈ Ico m n, x ^ i ≤ x ^ m / (1 - x) := by\n  rcases le_or_lt m n with (hmn | hmn)\n  · rw [geom_sum_Ico' h'x.ne hmn]\n    apply div_le_div₀ (pow_nonneg hx _) _ (sub_pos.2 h'x) le_rfl\n    simpa using pow_nonneg hx _\n  · rw [Ico_eq_empty, sum_empty]\n    · apply div_nonneg (pow_nonneg hx _)\n      simpa using h'x.le\n    · simpa using hmn.le\n\n"}
{"name":"geom_sum_inv","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\ninst✝ : DivisionRing α\nx : α\nhx1 : Ne x 1\nhx0 : Ne x 0\nn : Nat\n⊢ Eq ((Finset.range n).sum fun i => HPow.hPow (Inv.inv x) i) (HMul.hMul (Inv.inv (HSub.hSub x 1)) (HSub.hSub x (HMul.hMul (HPow.hPow (Inv.inv x) n) x)))","decl":"theorem geom_sum_inv [DivisionRing α] {x : α} (hx1 : x ≠ 1) (hx0 : x ≠ 0) (n : ℕ) :\n    ∑ i ∈ range n, x⁻¹ ^ i = (x - 1)⁻¹ * (x - x⁻¹ ^ n * x) := by\n  have h₁ : x⁻¹ ≠ 1 := by rwa [inv_eq_one_div, Ne, div_eq_iff_mul_eq hx0, one_mul]\n  have h₂ : x⁻¹ - 1 ≠ 0 := mt sub_eq_zero.1 h₁\n  have h₃ : x - 1 ≠ 0 := mt sub_eq_zero.1 hx1\n  have h₄ : x * (x ^ n)⁻¹ = (x ^ n)⁻¹ * x :=\n    Nat.recOn n (by simp) fun n h => by\n      rw [pow_succ', mul_inv_rev, ← mul_assoc, h, mul_assoc, mul_inv_cancel₀ hx0, mul_assoc,\n        inv_mul_cancel₀ hx0]\n  rw [geom_sum_eq h₁, div_eq_iff_mul_eq h₂, ← mul_right_inj' h₃, ← mul_assoc, ← mul_assoc,\n    mul_inv_cancel₀ h₃]\n  simp [mul_add, add_mul, mul_inv_cancel₀ hx0, mul_assoc, h₄, sub_eq_add_neg, add_comm,\n    add_left_comm]\n  rw [add_comm _ (-x), add_assoc, add_assoc _ _ 1]\n\n"}
{"name":"RingHom.map_geom_sum","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\nβ : Type u_1\ninst✝¹ : Semiring α\ninst✝ : Semiring β\nx : α\nn : Nat\nf : RingHom α β\n⊢ Eq (f ((Finset.range n).sum fun i => HPow.hPow x i)) ((Finset.range n).sum fun i => HPow.hPow (f x) i)","decl":"theorem RingHom.map_geom_sum [Semiring α] [Semiring β] (x : α) (n : ℕ) (f : α →+* β) :\n    f (∑ i ∈ range n, x ^ i) = ∑ i ∈ range n, f x ^ i := by simp [map_sum f]\n\n"}
{"name":"RingHom.map_geom_sum₂","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\nβ : Type u_1\ninst✝¹ : Semiring α\ninst✝ : Semiring β\nx y : α\nn : Nat\nf : RingHom α β\n⊢ Eq (f ((Finset.range n).sum fun i => HMul.hMul (HPow.hPow x i) (HPow.hPow y (HSub.hSub (HSub.hSub n 1) i)))) ((Finset.range n).sum fun i => HMul.hMul (HPow.hPow (f x) i) (HPow.hPow (f y) (HSub.hSub (HSub.hSub n 1) i)))","decl":"theorem RingHom.map_geom_sum₂ [Semiring α] [Semiring β] (x y : α) (n : ℕ) (f : α →+* β) :\n    f (∑ i ∈ range n, x ^ i * y ^ (n - 1 - i)) = ∑ i ∈ range n, f x ^ i * f y ^ (n - 1 - i) := by\n  simp [map_sum f]\n\n"}
{"name":"Nat.pred_mul_geom_sum_le","module":"Mathlib.Algebra.GeomSum","initialProofState":"a b n : Nat\n⊢ LE.le (HMul.hMul (HSub.hSub b 1) ((Finset.range n.succ).sum fun i => HDiv.hDiv a (HPow.hPow b i))) (HSub.hSub (HMul.hMul a b) (HDiv.hDiv a (HPow.hPow b n)))","decl":"theorem Nat.pred_mul_geom_sum_le (a b n : ℕ) :\n    ((b - 1) * ∑ i ∈ range n.succ, a / b ^ i) ≤ a * b - a / b ^ n :=\n  calc\n    ((b - 1) * ∑ i ∈ range n.succ, a / b ^ i) =\n    (∑ i ∈ range n, a / b ^ (i + 1) * b) + a * b - ((∑ i ∈ range n, a / b ^ i) + a / b ^ n) := by\n      rw [tsub_mul, mul_comm, sum_mul, one_mul, sum_range_succ', sum_range_succ, pow_zero,\n        Nat.div_one]\n    _ ≤ (∑ i ∈ range n, a / b ^ i) + a * b - ((∑ i ∈ range n, a / b ^ i) + a / b ^ n) := by\n      gcongr with i hi\n      rw [pow_succ, ← Nat.div_div_eq_div_mul]\n      exact Nat.div_mul_le_self _ _\n    _ = a * b - a / b ^ n := add_tsub_add_eq_tsub_left _ _ _\n\n"}
{"name":"Nat.geom_sum_le","module":"Mathlib.Algebra.GeomSum","initialProofState":"b : Nat\nhb : LE.le 2 b\na n : Nat\n⊢ LE.le ((Finset.range n).sum fun i => HDiv.hDiv a (HPow.hPow b i)) (HDiv.hDiv (HMul.hMul a b) (HSub.hSub b 1))","decl":"theorem Nat.geom_sum_le {b : ℕ} (hb : 2 ≤ b) (a n : ℕ) :\n    ∑ i ∈ range n, a / b ^ i ≤ a * b / (b - 1) := by\n  refine (Nat.le_div_iff_mul_le <| tsub_pos_of_lt hb).2 ?_\n  rcases n with - | n\n  · rw [sum_range_zero, zero_mul]\n    exact Nat.zero_le _\n  rw [mul_comm]\n  exact (Nat.pred_mul_geom_sum_le a b n).trans tsub_le_self\n\n"}
{"name":"Nat.geom_sum_Ico_le","module":"Mathlib.Algebra.GeomSum","initialProofState":"b : Nat\nhb : LE.le 2 b\na n : Nat\n⊢ LE.le ((Finset.Ico 1 n).sum fun i => HDiv.hDiv a (HPow.hPow b i)) (HDiv.hDiv a (HSub.hSub b 1))","decl":"theorem Nat.geom_sum_Ico_le {b : ℕ} (hb : 2 ≤ b) (a n : ℕ) :\n    ∑ i ∈ Ico 1 n, a / b ^ i ≤ a / (b - 1) := by\n  rcases n with - | n\n  · rw [Ico_eq_empty_of_le (zero_le_one' ℕ), sum_empty]\n    exact Nat.zero_le _\n  rw [← add_le_add_iff_left a]\n  calc\n    (a + ∑ i ∈ Ico 1 n.succ, a / b ^ i) = a / b ^ 0 + ∑ i ∈ Ico 1 n.succ, a / b ^ i := by\n      rw [pow_zero, Nat.div_one]\n    _ = ∑ i ∈ range n.succ, a / b ^ i := by\n      rw [range_eq_Ico, ← Nat.Ico_insert_succ_left (Nat.succ_pos _), sum_insert]\n      exact fun h => zero_lt_one.not_le (mem_Ico.1 h).1\n    _ ≤ a * b / (b - 1) := Nat.geom_sum_le hb a _\n    _ = (a * 1 + a * (b - 1)) / (b - 1) := by\n      rw [← mul_add, add_tsub_cancel_of_le (one_le_two.trans hb)]\n    _ = a + a / (b - 1) := by rw [mul_one, Nat.add_mul_div_right _ _ (tsub_pos_of_lt hb), add_comm]\n\n"}
{"name":"geom_sum_pos","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\nn : Nat\nx : α\ninst✝ : StrictOrderedSemiring α\nhx : LE.le 0 x\nhn : Ne n 0\n⊢ LT.lt 0 ((Finset.range n).sum fun i => HPow.hPow x i)","decl":"theorem geom_sum_pos [StrictOrderedSemiring α] (hx : 0 ≤ x) (hn : n ≠ 0) :\n    0 < ∑ i ∈ range n, x ^ i :=\n  sum_pos' (fun _ _ => pow_nonneg hx _) ⟨0, mem_range.2 hn.bot_lt, by simp⟩\n\n"}
{"name":"geom_sum_pos_and_lt_one","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\nn : Nat\nx : α\ninst✝ : StrictOrderedRing α\nhx : LT.lt x 0\nhx' : LT.lt 0 (HAdd.hAdd x 1)\nhn : LT.lt 1 n\n⊢ And (LT.lt 0 ((Finset.range n).sum fun i => HPow.hPow x i)) (LT.lt ((Finset.range n).sum fun i => HPow.hPow x i) 1)","decl":"theorem geom_sum_pos_and_lt_one [StrictOrderedRing α] (hx : x < 0) (hx' : 0 < x + 1) (hn : 1 < n) :\n    (0 < ∑ i ∈ range n, x ^ i) ∧ ∑ i ∈ range n, x ^ i < 1 := by\n  refine Nat.le_induction ?_ ?_ n (show 2 ≤ n from hn)\n  · rw [geom_sum_two]\n    exact ⟨hx', (add_lt_iff_neg_right _).2 hx⟩\n  clear hn\n  intro n _ ihn\n  rw [geom_sum_succ, add_lt_iff_neg_right, ← neg_lt_iff_pos_add', neg_mul_eq_neg_mul]\n  exact\n    ⟨mul_lt_one_of_nonneg_of_lt_one_left (neg_nonneg.2 hx.le) (neg_lt_iff_pos_add'.2 hx') ihn.2.le,\n      mul_neg_of_neg_of_pos hx ihn.1⟩\n\n"}
{"name":"geom_sum_alternating_of_le_neg_one","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\nx : α\ninst✝ : StrictOrderedRing α\nhx : LE.le (HAdd.hAdd x 1) 0\nn : Nat\n⊢ ite (Even n) (LE.le ((Finset.range n).sum fun i => HPow.hPow x i) 0) (LE.le 1 ((Finset.range n).sum fun i => HPow.hPow x i))","decl":"theorem geom_sum_alternating_of_le_neg_one [StrictOrderedRing α] (hx : x + 1 ≤ 0) (n : ℕ) :\n    if Even n then (∑ i ∈ range n, x ^ i) ≤ 0 else 1 ≤ ∑ i ∈ range n, x ^ i := by\n  have hx0 : x ≤ 0 := (le_add_of_nonneg_right zero_le_one).trans hx\n  induction n with\n  | zero => simp only [range_zero, sum_empty, le_refl, ite_true, Even.zero]\n  | succ n ih =>\n    simp only [Nat.even_add_one, geom_sum_succ]\n    split_ifs at ih with h\n    · rw [if_neg (not_not_intro h), le_add_iff_nonneg_left]\n      exact mul_nonneg_of_nonpos_of_nonpos hx0 ih\n    · rw [if_pos h]\n      refine (add_le_add_right ?_ _).trans hx\n      simpa only [mul_one] using mul_le_mul_of_nonpos_left ih hx0\n\n"}
{"name":"geom_sum_alternating_of_lt_neg_one","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\nn : Nat\nx : α\ninst✝ : StrictOrderedRing α\nhx : LT.lt (HAdd.hAdd x 1) 0\nhn : LT.lt 1 n\n⊢ ite (Even n) (LT.lt ((Finset.range n).sum fun i => HPow.hPow x i) 0) (LT.lt 1 ((Finset.range n).sum fun i => HPow.hPow x i))","decl":"theorem geom_sum_alternating_of_lt_neg_one [StrictOrderedRing α] (hx : x + 1 < 0) (hn : 1 < n) :\n    if Even n then (∑ i ∈ range n, x ^ i) < 0 else 1 < ∑ i ∈ range n, x ^ i := by\n  have hx0 : x < 0 := (le_add_of_nonneg_right zero_le_one).trans_lt hx\n  refine Nat.le_induction ?_ ?_ n (show 2 ≤ n from hn)\n  · simp only [geom_sum_two, lt_add_iff_pos_left, ite_true, gt_iff_lt, hx, even_two]\n  clear hn\n  intro n _ ihn\n  simp only [Nat.even_add_one, geom_sum_succ]\n  by_cases hn' : Even n\n  · rw [if_pos hn'] at ihn\n    rw [if_neg, lt_add_iff_pos_left]\n    · exact mul_pos_of_neg_of_neg hx0 ihn\n    · exact not_not_intro hn'\n  · rw [if_neg hn'] at ihn\n    rw [if_pos]\n    swap\n    · exact hn'\n    have := add_lt_add_right (mul_lt_mul_of_neg_left ihn hx0) 1\n    rw [mul_one] at this\n    exact this.trans hx\n\n"}
{"name":"geom_sum_pos'","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\nn : Nat\nx : α\ninst✝ : LinearOrderedRing α\nhx : LT.lt 0 (HAdd.hAdd x 1)\nhn : Ne n 0\n⊢ LT.lt 0 ((Finset.range n).sum fun i => HPow.hPow x i)","decl":"theorem geom_sum_pos' [LinearOrderedRing α] (hx : 0 < x + 1) (hn : n ≠ 0) :\n    0 < ∑ i ∈ range n, x ^ i := by\n  obtain _ | _ | n := n\n  · cases hn rfl\n  · simp only [zero_add, range_one, sum_singleton, pow_zero, zero_lt_one]\n  obtain hx' | hx' := lt_or_le x 0\n  · exact (geom_sum_pos_and_lt_one hx' hx n.one_lt_succ_succ).1\n  · exact geom_sum_pos hx' (by simp only [Nat.succ_ne_zero, Ne, not_false_iff])\n\n"}
{"name":"Odd.geom_sum_pos","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\nn : Nat\nx : α\ninst✝ : LinearOrderedRing α\nh : Odd n\n⊢ LT.lt 0 ((Finset.range n).sum fun i => HPow.hPow x i)","decl":"theorem Odd.geom_sum_pos [LinearOrderedRing α] (h : Odd n) : 0 < ∑ i ∈ range n, x ^ i := by\n  rcases n with (_ | _ | k)\n  · exact (Nat.not_odd_zero h).elim\n  · simp only [zero_add, range_one, sum_singleton, pow_zero, zero_lt_one]\n  rw [← Nat.not_even_iff_odd] at h\n  rcases lt_trichotomy (x + 1) 0 with (hx | hx | hx)\n  · have := geom_sum_alternating_of_lt_neg_one hx k.one_lt_succ_succ\n    simp only [h, if_false] at this\n    exact zero_lt_one.trans this\n  · simp only [eq_neg_of_add_eq_zero_left hx, h, neg_one_geom_sum, if_false, zero_lt_one]\n  · exact geom_sum_pos' hx k.succ.succ_ne_zero\n\n"}
{"name":"geom_sum_pos_iff","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\nn : Nat\nx : α\ninst✝ : LinearOrderedRing α\nhn : Ne n 0\n⊢ Iff (LT.lt 0 ((Finset.range n).sum fun i => HPow.hPow x i)) (Or (Odd n) (LT.lt 0 (HAdd.hAdd x 1)))","decl":"theorem geom_sum_pos_iff [LinearOrderedRing α] (hn : n ≠ 0) :\n    (0 < ∑ i ∈ range n, x ^ i) ↔ Odd n ∨ 0 < x + 1 := by\n  refine ⟨fun h => ?_, ?_⟩\n  · rw [or_iff_not_imp_left, ← not_le, Nat.not_odd_iff_even]\n    refine fun hn hx => h.not_le ?_\n    simpa [if_pos hn] using geom_sum_alternating_of_le_neg_one hx n\n  · rintro (hn | hx')\n    · exact hn.geom_sum_pos\n    · exact geom_sum_pos' hx' hn\n\n"}
{"name":"geom_sum_ne_zero","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\nn : Nat\nx : α\ninst✝ : LinearOrderedRing α\nhx : Ne x (-1)\nhn : Ne n 0\n⊢ Ne ((Finset.range n).sum fun i => HPow.hPow x i) 0","decl":"theorem geom_sum_ne_zero [LinearOrderedRing α] (hx : x ≠ -1) (hn : n ≠ 0) :\n    ∑ i ∈ range n, x ^ i ≠ 0 := by\n  obtain _ | _ | n := n\n  · cases hn rfl\n  · simp only [zero_add, range_one, sum_singleton, pow_zero, ne_eq, one_ne_zero, not_false_eq_true]\n  rw [Ne, eq_neg_iff_add_eq_zero, ← Ne] at hx\n  obtain h | h := hx.lt_or_lt\n  · have := geom_sum_alternating_of_lt_neg_one h n.one_lt_succ_succ\n    split_ifs at this\n    · exact this.ne\n    · exact (zero_lt_one.trans this).ne'\n  · exact (geom_sum_pos' h n.succ.succ_ne_zero).ne'\n\n"}
{"name":"geom_sum_eq_zero_iff_neg_one","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\nn : Nat\nx : α\ninst✝ : LinearOrderedRing α\nhn : Ne n 0\n⊢ Iff (Eq ((Finset.range n).sum fun i => HPow.hPow x i) 0) (And (Eq x (-1)) (Even n))","decl":"theorem geom_sum_eq_zero_iff_neg_one [LinearOrderedRing α] (hn : n ≠ 0) :\n    ∑ i ∈ range n, x ^ i = 0 ↔ x = -1 ∧ Even n := by\n  refine ⟨fun h => ?_, @fun ⟨h, hn⟩ => by simp only [h, hn, neg_one_geom_sum, if_true]⟩\n  contrapose! h\n  have hx := eq_or_ne x (-1)\n  rcases hx with hx | hx\n  · rw [hx, neg_one_geom_sum]\n    simp only [h hx, ite_false, ne_eq, one_ne_zero, not_false_eq_true]\n  · exact geom_sum_ne_zero hx hn\n\n"}
{"name":"geom_sum_neg_iff","module":"Mathlib.Algebra.GeomSum","initialProofState":"α : Type u\nn : Nat\nx : α\ninst✝ : LinearOrderedRing α\nhn : Ne n 0\n⊢ Iff (LT.lt ((Finset.range n).sum fun i => HPow.hPow x i) 0) (And (Even n) (LT.lt (HAdd.hAdd x 1) 0))","decl":"theorem geom_sum_neg_iff [LinearOrderedRing α] (hn : n ≠ 0) :\n    ∑ i ∈ range n, x ^ i < 0 ↔ Even n ∧ x + 1 < 0 := by\n  rw [← not_iff_not, not_lt, le_iff_lt_or_eq, eq_comm,\n    or_congr (geom_sum_pos_iff hn) (geom_sum_eq_zero_iff_neg_one hn), ← Nat.not_even_iff_odd, ←\n    add_eq_zero_iff_eq_neg, not_and, not_lt, le_iff_lt_or_eq, eq_comm, ← imp_iff_not_or, or_comm,\n    and_comm, Decidable.and_or_imp, or_comm]\n\n"}
{"name":"Nat.geomSum_eq","module":"Mathlib.Algebra.GeomSum","initialProofState":"m : Nat\nhm : LE.le 2 m\nn : Nat\n⊢ Eq ((Finset.range n).sum fun k => HPow.hPow m k) (HDiv.hDiv (HSub.hSub (HPow.hPow m n) 1) (HSub.hSub m 1))","decl":"/-- Value of a geometric sum over the naturals. Note: see `geom_sum_mul_add` for a formulation\nthat avoids division and subtraction. -/\nlemma Nat.geomSum_eq (hm : 2 ≤ m) (n : ℕ) :\n    ∑ k ∈ range n, m ^ k = (m ^ n - 1) / (m - 1) := by\n  refine (Nat.div_eq_of_eq_mul_left (tsub_pos_iff_lt.2 hm) <| tsub_eq_of_eq_add ?_).symm\n  simpa only [tsub_add_cancel_of_le (one_le_two.trans hm), eq_comm] using geom_sum_mul_add (m - 1) n\n\n"}
{"name":"Nat.geomSum_lt","module":"Mathlib.Algebra.GeomSum","initialProofState":"m n : Nat\ns : Finset Nat\nhm : LE.le 2 m\nhs : ∀ (k : Nat), Membership.mem s k → LT.lt k n\n⊢ LT.lt (s.sum fun k => HPow.hPow m k) (HPow.hPow m n)","decl":"/-- If all the elements of a finset of naturals are less than `n`, then the sum of their powers of\n`m ≥ 2` is less than `m ^ n`. -/\nlemma Nat.geomSum_lt (hm : 2 ≤ m) (hs : ∀ k ∈ s, k < n) : ∑ k ∈ s, m ^ k < m ^ n :=\n  calc\n    ∑ k ∈ s, m ^ k ≤ ∑ k ∈ range n, m ^ k := sum_le_sum_of_subset fun _ hk ↦\n      mem_range.2 <| hs _ hk\n    _ = (m ^ n - 1) / (m - 1) := Nat.geomSum_eq hm _\n    _ ≤ m ^ n - 1 := Nat.div_le_self _ _\n    _ < m ^ n := tsub_lt_self (by positivity) zero_lt_one\n"}
