{"name":"Sum.one_le_elim_iff","module":"Mathlib.Algebra.Order.Sum","initialProofState":"α₁ : Type u_1\nα₂ : Type u_2\nβ : Type u_3\ninst✝¹ : LE β\ninst✝ : One β\nv₁ : α₁ → β\nv₂ : α₂ → β\n⊢ Iff (LE.le 1 (Sum.elim v₁ v₂)) (And (LE.le 1 v₁) (LE.le 1 v₂))","decl":"@[to_additive]\nlemma one_le_elim_iff : 1 ≤ Sum.elim v₁ v₂ ↔ 1 ≤ v₁ ∧ 1 ≤ v₂ :=\n  const_le_elim_iff\n\n"}
{"name":"Sum.nonneg_elim_iff","module":"Mathlib.Algebra.Order.Sum","initialProofState":"α₁ : Type u_1\nα₂ : Type u_2\nβ : Type u_3\ninst✝¹ : LE β\ninst✝ : Zero β\nv₁ : α₁ → β\nv₂ : α₂ → β\n⊢ Iff (LE.le 0 (Sum.elim v₁ v₂)) (And (LE.le 0 v₁) (LE.le 0 v₂))","decl":"@[to_additive]\nlemma one_le_elim_iff : 1 ≤ Sum.elim v₁ v₂ ↔ 1 ≤ v₁ ∧ 1 ≤ v₂ :=\n  const_le_elim_iff\n\n"}
{"name":"Sum.elim_nonpos_iff","module":"Mathlib.Algebra.Order.Sum","initialProofState":"α₁ : Type u_1\nα₂ : Type u_2\nβ : Type u_3\ninst✝¹ : LE β\ninst✝ : Zero β\nv₁ : α₁ → β\nv₂ : α₂ → β\n⊢ Iff (LE.le (Sum.elim v₁ v₂) 0) (And (LE.le v₁ 0) (LE.le v₂ 0))","decl":"@[to_additive]\nlemma elim_le_one_iff : Sum.elim v₁ v₂ ≤ 1 ↔ v₁ ≤ 1 ∧ v₂ ≤ 1 :=\n  elim_le_const_iff\n\n"}
{"name":"Sum.elim_le_one_iff","module":"Mathlib.Algebra.Order.Sum","initialProofState":"α₁ : Type u_1\nα₂ : Type u_2\nβ : Type u_3\ninst✝¹ : LE β\ninst✝ : One β\nv₁ : α₁ → β\nv₂ : α₂ → β\n⊢ Iff (LE.le (Sum.elim v₁ v₂) 1) (And (LE.le v₁ 1) (LE.le v₂ 1))","decl":"@[to_additive]\nlemma elim_le_one_iff : Sum.elim v₁ v₂ ≤ 1 ↔ v₁ ≤ 1 ∧ v₂ ≤ 1 :=\n  elim_le_const_iff\n\n"}
