{"name":"IsComplete.isClosed","module":"Mathlib.Topology.UniformSpace.CompleteSeparated","initialProofState":"α : Type u_1\ninst✝¹ : UniformSpace α\ninst✝ : T0Space α\ns : Set α\nh : IsComplete s\n⊢ IsClosed s","decl":"/-- In a separated space, a complete set is closed. -/\ntheorem IsComplete.isClosed [UniformSpace α] [T0Space α] {s : Set α} (h : IsComplete s) :\n    IsClosed s :=\n  isClosed_iff_clusterPt.2 fun a ha => by\n    let f := 𝓝[s] a\n    have : Cauchy f := cauchy_nhds.mono' ha inf_le_left\n    rcases h f this inf_le_right with ⟨y, ys, fy⟩\n    rwa [(tendsto_nhds_unique' ha inf_le_left fy : a = y)]\n\n"}
{"name":"IsUniformEmbedding.isClosedEmbedding","module":"Mathlib.Topology.UniformSpace.CompleteSeparated","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝³ : UniformSpace α\ninst✝² : UniformSpace β\ninst✝¹ : CompleteSpace α\ninst✝ : T0Space β\nf : α → β\nhf : IsUniformEmbedding f\n⊢ Topology.IsClosedEmbedding f","decl":"theorem IsUniformEmbedding.isClosedEmbedding [UniformSpace α] [UniformSpace β] [CompleteSpace α]\n    [T0Space β] {f : α → β} (hf : IsUniformEmbedding f) :\n    IsClosedEmbedding f :=\n  ⟨hf.isEmbedding, hf.isUniformInducing.isComplete_range.isClosed⟩\n\n"}
{"name":"IsUniformEmbedding.toIsClosedEmbedding","module":"Mathlib.Topology.UniformSpace.CompleteSeparated","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝³ : UniformSpace α\ninst✝² : UniformSpace β\ninst✝¹ : CompleteSpace α\ninst✝ : T0Space β\nf : α → β\nhf : IsUniformEmbedding f\n⊢ Topology.IsClosedEmbedding f","decl":"@[deprecated (since := \"2024-10-30\")]\nalias IsUniformEmbedding.toIsClosedEmbedding := IsUniformEmbedding.isClosedEmbedding\n\n"}
{"name":"IsUniformEmbedding.toClosedEmbedding","module":"Mathlib.Topology.UniformSpace.CompleteSeparated","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝³ : UniformSpace α\ninst✝² : UniformSpace β\ninst✝¹ : CompleteSpace α\ninst✝ : T0Space β\nf : α → β\nhf : IsUniformEmbedding f\n⊢ Topology.IsClosedEmbedding f","decl":"@[deprecated (since := \"2024-10-20\")]\nalias IsUniformEmbedding.toClosedEmbedding := IsUniformEmbedding.isClosedEmbedding\n\n"}
{"name":"UniformEmbedding.toIsClosedEmbedding","module":"Mathlib.Topology.UniformSpace.CompleteSeparated","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝³ : UniformSpace α\ninst✝² : UniformSpace β\ninst✝¹ : CompleteSpace α\ninst✝ : T0Space β\nf : α → β\nhf : IsUniformEmbedding f\n⊢ Topology.IsClosedEmbedding f","decl":"@[deprecated (since := \"2024-10-01\")]\nalias UniformEmbedding.toIsClosedEmbedding := IsUniformEmbedding.isClosedEmbedding\n\n"}
{"name":"UniformEmbedding.toClosedEmbedding","module":"Mathlib.Topology.UniformSpace.CompleteSeparated","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝³ : UniformSpace α\ninst✝² : UniformSpace β\ninst✝¹ : CompleteSpace α\ninst✝ : T0Space β\nf : α → β\nhf : IsUniformEmbedding f\n⊢ Topology.IsClosedEmbedding f","decl":"@[deprecated (since := \"2024-10-20\")]\nalias UniformEmbedding.toClosedEmbedding := IsUniformEmbedding.isClosedEmbedding\n\n"}
{"name":"IsDenseInducing.continuous_extend_of_cauchy","module":"Mathlib.Topology.UniformSpace.CompleteSeparated","initialProofState":"α : Type u_1\ninst✝⁴ : TopologicalSpace α\nβ : Type u_3\ninst✝³ : TopologicalSpace β\nγ : Type u_4\ninst✝² : UniformSpace γ\ninst✝¹ : CompleteSpace γ\ninst✝ : T0Space γ\ne : α → β\nf : α → γ\nde : IsDenseInducing e\nh : ∀ (b : β), Cauchy (Filter.map f (Filter.comap e (nhds b)))\n⊢ Continuous (de.extend f)","decl":"theorem continuous_extend_of_cauchy {e : α → β} {f : α → γ} (de : IsDenseInducing e)\n    (h : ∀ b : β, Cauchy (map f (comap e <| 𝓝 b))) : Continuous (de.extend f) :=\n  de.continuous_extend fun b => CompleteSpace.complete (h b)\n\n"}
