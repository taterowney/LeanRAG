{"name":"Nat.evenOddRec_zero","module":"Mathlib.Data.Nat.EvenOddRec","initialProofState":"P : Nat → Sort u_1\nh0 : P 0\nh_even : (i : Nat) → P i → P (HMul.hMul 2 i)\nh_odd : (i : Nat) → P i → P (HAdd.hAdd (HMul.hMul 2 i) 1)\n⊢ Eq (Nat.evenOddRec h0 h_even h_odd 0) h0","decl":"@[simp]\ntheorem evenOddRec_zero {P : ℕ → Sort*} (h0 : P 0) (h_even : ∀ i, P i → P (2 * i))\n    (h_odd : ∀ i, P i → P (2 * i + 1)) : evenOddRec h0 h_even h_odd 0 = h0 :=\n  binaryRec_zero _ _\n\n"}
{"name":"Nat.evenOddRec_even","module":"Mathlib.Data.Nat.EvenOddRec","initialProofState":"P : Nat → Sort u_1\nh0 : P 0\nh_even : (i : Nat) → P i → P (HMul.hMul 2 i)\nh_odd : (i : Nat) → P i → P (HAdd.hAdd (HMul.hMul 2 i) 1)\nH : Eq (h_even 0 h0) h0\nn : Nat\n⊢ Eq (Nat.evenOddRec h0 h_even h_odd (HMul.hMul 2 n)) (h_even n (Nat.evenOddRec h0 h_even h_odd n))","decl":"@[simp]\ntheorem evenOddRec_even {P : ℕ → Sort*} (h0 : P 0) (h_even : ∀ i, P i → P (2 * i))\n    (h_odd : ∀ i, P i → P (2 * i + 1)) (H : h_even 0 h0 = h0) (n : ℕ) :\n    (2 * n).evenOddRec h0 h_even h_odd = h_even n (evenOddRec h0 h_even h_odd n) := by\n  apply binaryRec_eq false n\n  simp [H]\n\n"}
{"name":"Nat.evenOddRec_odd","module":"Mathlib.Data.Nat.EvenOddRec","initialProofState":"P : Nat → Sort u_1\nh0 : P 0\nh_even : (i : Nat) → P i → P (HMul.hMul 2 i)\nh_odd : (i : Nat) → P i → P (HAdd.hAdd (HMul.hMul 2 i) 1)\nH : Eq (h_even 0 h0) h0\nn : Nat\n⊢ Eq (Nat.evenOddRec h0 h_even h_odd (HAdd.hAdd (HMul.hMul 2 n) 1)) (h_odd n (Nat.evenOddRec h0 h_even h_odd n))","decl":"@[simp]\ntheorem evenOddRec_odd {P : ℕ → Sort*} (h0 : P 0) (h_even : ∀ i, P i → P (2 * i))\n    (h_odd : ∀ i, P i → P (2 * i + 1)) (H : h_even 0 h0 = h0) (n : ℕ) :\n    (2 * n + 1).evenOddRec h0 h_even h_odd = h_odd n (evenOddRec h0 h_even h_odd n) := by\n  apply binaryRec_eq true n\n  simp [H]\n\n"}
