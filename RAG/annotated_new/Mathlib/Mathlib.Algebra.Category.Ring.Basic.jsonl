{"name":"SemiRingCat.coe_of","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R : Type u\ninst‚úù : Semiring R\n‚ä¢ Eq (‚Üë(SemiRingCat.of R)) R","decl":"lemma coe_of (R : Type u) [Semiring R] : (of R : Type u) = R :=\n  rfl\n\n"}
{"name":"SemiRingCat.of_carrier","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R : SemiRingCat\n‚ä¢ Eq (SemiRingCat.of ‚ÜëR) R","decl":"lemma of_carrier (R : SemiRingCat.{u}) : of R = R := rfl\n\n"}
{"name":"SemiRingCat.Hom.ext","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : SemiRingCat\nx y : R.Hom S\nhom' : Eq x.hom' y.hom'\n‚ä¢ Eq x y","decl":"variable {R} in\n/-- The type of morphisms in `SemiRingCat`. -/\n@[ext]\nstructure Hom (R S : SemiRingCat.{u}) where\n  private mk ::\n  /-- The underlying ring hom. -/\n  hom' : R ‚Üí+* S\n\n"}
{"name":"SemiRingCat.Hom.ext_iff","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : SemiRingCat\nx y : R.Hom S\n‚ä¢ Iff (Eq x y) (Eq x.hom' y.hom')","decl":"variable {R} in\n/-- The type of morphisms in `SemiRingCat`. -/\n@[ext]\nstructure Hom (R S : SemiRingCat.{u}) where\n  private mk ::\n  /-- The underlying ring hom. -/\n  hom' : R ‚Üí+* S\n\n"}
{"name":"SemiRingCat.hom_id","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R : SemiRingCat\n‚ä¢ Eq (SemiRingCat.Hom.hom (CategoryTheory.CategoryStruct.id R)) (RingHom.id ‚ÜëR)","decl":"@[simp]\nlemma hom_id {R : SemiRingCat} : (ùüô R : R ‚ü∂ R).hom = RingHom.id R := rfl\n\n/- Provided for rewriting. -/\n"}
{"name":"SemiRingCat.id_apply","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R : SemiRingCat\nr : ‚ÜëR\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom (CategoryTheory.CategoryStruct.id R)) r) r","decl":"lemma id_apply (R : SemiRingCat) (r : R) :\n    (ùüô R : R ‚ü∂ R) r = r := by simp\n\n"}
{"name":"SemiRingCat.hom_comp","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S T : SemiRingCat\nf : Quiver.Hom R S\ng : Quiver.Hom S T\n‚ä¢ Eq (SemiRingCat.Hom.hom (CategoryTheory.CategoryStruct.comp f g)) ((SemiRingCat.Hom.hom g).comp (SemiRingCat.Hom.hom f))","decl":"@[simp]\nlemma hom_comp {R S T : SemiRingCat} (f : R ‚ü∂ S) (g : S ‚ü∂ T) :\n    (f ‚â´ g).hom = g.hom.comp f.hom := rfl\n\n/- Provided for rewriting. -/\n"}
{"name":"SemiRingCat.comp_apply","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S T : SemiRingCat\nf : Quiver.Hom R S\ng : Quiver.Hom S T\nr : ‚ÜëR\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom (CategoryTheory.CategoryStruct.comp f g)) r) ((CategoryTheory.ConcreteCategory.hom g) ((CategoryTheory.ConcreteCategory.hom f) r))","decl":"lemma comp_apply {R S T : SemiRingCat} (f : R ‚ü∂ S) (g : S ‚ü∂ T) (r : R) :\n    (f ‚â´ g) r = g (f r) := by simp\n\n"}
{"name":"SemiRingCat.hom_ext","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : SemiRingCat\nf g : Quiver.Hom R S\nhf : Eq (SemiRingCat.Hom.hom f) (SemiRingCat.Hom.hom g)\n‚ä¢ Eq f g","decl":"@[ext]\nlemma hom_ext {R S : SemiRingCat} {f g : R ‚ü∂ S} (hf : f.hom = g.hom) : f = g :=\n  Hom.ext hf\n\n"}
{"name":"SemiRingCat.hom_ext_iff","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : SemiRingCat\nf g : Quiver.Hom R S\n‚ä¢ Iff (Eq f g) (Eq (SemiRingCat.Hom.hom f) (SemiRingCat.Hom.hom g))","decl":"@[ext]\nlemma hom_ext {R S : SemiRingCat} {f g : R ‚ü∂ S} (hf : f.hom = g.hom) : f = g :=\n  Hom.ext hf\n\n"}
{"name":"SemiRingCat.hom_ofHom","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : Type u\ninst‚úù¬π : Semiring R\ninst‚úù : Semiring S\nf : RingHom R S\n‚ä¢ Eq (SemiRingCat.Hom.hom (SemiRingCat.ofHom f)) f","decl":"@[simp]\nlemma hom_ofHom {R S : Type u} [Semiring R] [Semiring S] (f : R ‚Üí+* S) : (ofHom f).hom = f := rfl\n\n"}
{"name":"SemiRingCat.ofHom_hom","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : SemiRingCat\nf : Quiver.Hom R S\n‚ä¢ Eq (SemiRingCat.ofHom (SemiRingCat.Hom.hom f)) f","decl":"@[simp]\nlemma ofHom_hom {R S : SemiRingCat} (f : R ‚ü∂ S) :\n    ofHom (Hom.hom f) = f := rfl\n\n"}
{"name":"SemiRingCat.ofHom_id","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R : Type u\ninst‚úù : Semiring R\n‚ä¢ Eq (SemiRingCat.ofHom (RingHom.id R)) (CategoryTheory.CategoryStruct.id (SemiRingCat.of R))","decl":"@[simp]\nlemma ofHom_id {R : Type u} [Semiring R] : ofHom (RingHom.id R) = ùüô (of R) := rfl\n\n"}
{"name":"SemiRingCat.ofHom_comp","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S T : Type u\ninst‚úù¬≤ : Semiring R\ninst‚úù¬π : Semiring S\ninst‚úù : Semiring T\nf : RingHom R S\ng : RingHom S T\n‚ä¢ Eq (SemiRingCat.ofHom (g.comp f)) (CategoryTheory.CategoryStruct.comp (SemiRingCat.ofHom f) (SemiRingCat.ofHom g))","decl":"@[simp]\nlemma ofHom_comp {R S T : Type u} [Semiring R] [Semiring S] [Semiring T]\n    (f : R ‚Üí+* S) (g : S ‚Üí+* T) :\n    ofHom (g.comp f) = ofHom f ‚â´ ofHom g :=\n  rfl\n\n"}
{"name":"SemiRingCat.ofHom_apply","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : Type u\ninst‚úù¬π : Semiring R\ninst‚úù : Semiring S\nf : RingHom R S\nr : R\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom (SemiRingCat.ofHom f)) r) (f r)","decl":"lemma ofHom_apply {R S : Type u} [Semiring R] [Semiring S]\n    (f : R ‚Üí+* S) (r : R) : ofHom f r = f r := rfl\n\n"}
{"name":"SemiRingCat.inv_hom_apply","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : SemiRingCat\ne : CategoryTheory.Iso R S\nr : ‚ÜëR\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom e.inv) ((CategoryTheory.ConcreteCategory.hom e.hom) r)) r","decl":"@[simp]\nlemma inv_hom_apply {R S : SemiRingCat} (e : R ‚âÖ S) (r : R) : e.inv (e.hom r) = r := by\n  rw [‚Üê comp_apply]\n  simp\n\n"}
{"name":"SemiRingCat.hom_inv_apply","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : SemiRingCat\ne : CategoryTheory.Iso R S\ns : ‚ÜëS\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom e.hom) ((CategoryTheory.ConcreteCategory.hom e.inv) s)) s","decl":"@[simp]\nlemma hom_inv_apply {R S : SemiRingCat} (e : R ‚âÖ S) (s : S) : e.hom (e.inv s) = s := by\n  rw [‚Üê comp_apply]\n  simp\n\n"}
{"name":"SemiRingCat.forget_obj","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R : SemiRingCat\n‚ä¢ Eq ((CategoryTheory.forget SemiRingCat).obj R) ‚ÜëR","decl":"lemma forget_obj {R : SemiRingCat} : (forget SemiRingCat).obj R = R := rfl\n\n"}
{"name":"SemiRingCat.forget_map","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : SemiRingCat\nf : Quiver.Hom R S\n‚ä¢ Eq ((CategoryTheory.forget SemiRingCat).map f) ‚áë(CategoryTheory.ConcreteCategory.hom f)","decl":"lemma forget_map {R S : SemiRingCat} (f : R ‚ü∂ S) :\n    (forget SemiRingCat).map f = f :=\n  rfl\n\n"}
{"name":"RingEquiv.toSemiRingCatIso_inv","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : Type u\ninst‚úù¬π : Semiring R\ninst‚úù : Semiring S\ne : RingEquiv R S\n‚ä¢ Eq e.toSemiRingCatIso.inv (SemiRingCat.ofHom ‚Üëe.symm)","decl":"/-- Ring equivalence are isomorphisms in category of semirings -/\n@[simps]\ndef _root_.RingEquiv.toSemiRingCatIso {R S : Type u} [Semiring R] [Semiring S] (e : R ‚âÉ+* S) :\n    of R ‚âÖ of S where\n  hom := ofHom e\n  inv := ofHom e.symm\n\n"}
{"name":"RingEquiv.toSemiRingCatIso_hom","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : Type u\ninst‚úù¬π : Semiring R\ninst‚úù : Semiring S\ne : RingEquiv R S\n‚ä¢ Eq e.toSemiRingCatIso.hom (SemiRingCat.ofHom ‚Üëe)","decl":"/-- Ring equivalence are isomorphisms in category of semirings -/\n@[simps]\ndef _root_.RingEquiv.toSemiRingCatIso {R S : Type u} [Semiring R] [Semiring S] (e : R ‚âÉ+* S) :\n    of R ‚âÖ of S where\n  hom := ofHom e\n  inv := ofHom e.symm\n\n"}
{"name":"SemiRingCat.forgetReflectIsos","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"‚ä¢ (CategoryTheory.forget SemiRingCat).ReflectsIsomorphisms","decl":"instance forgetReflectIsos : (forget SemiRingCat).ReflectsIsomorphisms where\n  reflects {X Y} f _ := by\n    let i := asIso ((forget SemiRingCat).map f)\n    let ff : X ‚Üí+* Y := f.hom\n    let e : X ‚âÉ+* Y := { ff, i.toEquiv with }\n    exact e.toSemiRingCatIso.isIso_hom\n\n"}
{"name":"RingCat.coe_of","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R : Type u\ninst‚úù : Ring R\n‚ä¢ Eq (‚Üë(RingCat.of R)) R","decl":"lemma coe_of (R : Type u) [Ring R] : (of R : Type u) = R :=\n  rfl\n\n"}
{"name":"RingCat.of_carrier","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R : RingCat\n‚ä¢ Eq (RingCat.of ‚ÜëR) R","decl":"lemma of_carrier (R : RingCat.{u}) : of R = R := rfl\n\n"}
{"name":"RingCat.Hom.ext_iff","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : RingCat\nx y : R.Hom S\n‚ä¢ Iff (Eq x y) (Eq x.hom' y.hom')","decl":"variable {R} in\n/-- The type of morphisms in `RingCat`. -/\n@[ext]\nstructure Hom (R S : RingCat.{u}) where\n  private mk ::\n  /-- The underlying ring hom. -/\n  hom' : R ‚Üí+* S\n\n"}
{"name":"RingCat.Hom.ext","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : RingCat\nx y : R.Hom S\nhom' : Eq x.hom' y.hom'\n‚ä¢ Eq x y","decl":"variable {R} in\n/-- The type of morphisms in `RingCat`. -/\n@[ext]\nstructure Hom (R S : RingCat.{u}) where\n  private mk ::\n  /-- The underlying ring hom. -/\n  hom' : R ‚Üí+* S\n\n"}
{"name":"RingCat.hom_id","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R : RingCat\n‚ä¢ Eq (RingCat.Hom.hom (CategoryTheory.CategoryStruct.id R)) (RingHom.id ‚ÜëR)","decl":"@[simp]\nlemma hom_id {R : RingCat} : (ùüô R : R ‚ü∂ R).hom = RingHom.id R := rfl\n\n/- Provided for rewriting. -/\n"}
{"name":"RingCat.id_apply","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R : RingCat\nr : ‚ÜëR\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom (CategoryTheory.CategoryStruct.id R)) r) r","decl":"lemma id_apply (R : RingCat) (r : R) :\n    (ùüô R : R ‚ü∂ R) r = r := by simp\n\n"}
{"name":"RingCat.hom_comp","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S T : RingCat\nf : Quiver.Hom R S\ng : Quiver.Hom S T\n‚ä¢ Eq (RingCat.Hom.hom (CategoryTheory.CategoryStruct.comp f g)) ((RingCat.Hom.hom g).comp (RingCat.Hom.hom f))","decl":"@[simp]\nlemma hom_comp {R S T : RingCat} (f : R ‚ü∂ S) (g : S ‚ü∂ T) :\n    (f ‚â´ g).hom = g.hom.comp f.hom := rfl\n\n/- Provided for rewriting. -/\n"}
{"name":"RingCat.comp_apply","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S T : RingCat\nf : Quiver.Hom R S\ng : Quiver.Hom S T\nr : ‚ÜëR\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom (CategoryTheory.CategoryStruct.comp f g)) r) ((CategoryTheory.ConcreteCategory.hom g) ((CategoryTheory.ConcreteCategory.hom f) r))","decl":"lemma comp_apply {R S T : RingCat} (f : R ‚ü∂ S) (g : S ‚ü∂ T) (r : R) :\n    (f ‚â´ g) r = g (f r) := by simp\n\n"}
{"name":"RingCat.hom_ext","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : RingCat\nf g : Quiver.Hom R S\nhf : Eq (RingCat.Hom.hom f) (RingCat.Hom.hom g)\n‚ä¢ Eq f g","decl":"@[ext]\nlemma hom_ext {R S : RingCat} {f g : R ‚ü∂ S} (hf : f.hom = g.hom) : f = g :=\n  Hom.ext hf\n\n"}
{"name":"RingCat.hom_ext_iff","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : RingCat\nf g : Quiver.Hom R S\n‚ä¢ Iff (Eq f g) (Eq (RingCat.Hom.hom f) (RingCat.Hom.hom g))","decl":"@[ext]\nlemma hom_ext {R S : RingCat} {f g : R ‚ü∂ S} (hf : f.hom = g.hom) : f = g :=\n  Hom.ext hf\n\n"}
{"name":"RingCat.hom_ofHom","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : Type u\ninst‚úù¬π : Ring R\ninst‚úù : Ring S\nf : RingHom R S\n‚ä¢ Eq (RingCat.Hom.hom (RingCat.ofHom f)) f","decl":"@[simp]\nlemma hom_ofHom {R S : Type u} [Ring R] [Ring S] (f : R ‚Üí+* S) : (ofHom f).hom = f := rfl\n\n"}
{"name":"RingCat.ofHom_hom","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : RingCat\nf : Quiver.Hom R S\n‚ä¢ Eq (RingCat.ofHom (RingCat.Hom.hom f)) f","decl":"@[simp]\nlemma ofHom_hom {R S : RingCat} (f : R ‚ü∂ S) :\n    ofHom (Hom.hom f) = f := rfl\n\n"}
{"name":"RingCat.ofHom_id","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R : Type u\ninst‚úù : Ring R\n‚ä¢ Eq (RingCat.ofHom (RingHom.id R)) (CategoryTheory.CategoryStruct.id (RingCat.of R))","decl":"@[simp]\nlemma ofHom_id {R : Type u} [Ring R] : ofHom (RingHom.id R) = ùüô (of R) := rfl\n\n"}
{"name":"RingCat.ofHom_comp","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S T : Type u\ninst‚úù¬≤ : Ring R\ninst‚úù¬π : Ring S\ninst‚úù : Ring T\nf : RingHom R S\ng : RingHom S T\n‚ä¢ Eq (RingCat.ofHom (g.comp f)) (CategoryTheory.CategoryStruct.comp (RingCat.ofHom f) (RingCat.ofHom g))","decl":"@[simp]\nlemma ofHom_comp {R S T : Type u} [Ring R] [Ring S] [Ring T]\n    (f : R ‚Üí+* S) (g : S ‚Üí+* T) :\n    ofHom (g.comp f) = ofHom f ‚â´ ofHom g :=\n  rfl\n\n"}
{"name":"RingCat.ofHom_apply","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : Type u\ninst‚úù¬π : Ring R\ninst‚úù : Ring S\nf : RingHom R S\nr : R\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom (RingCat.ofHom f)) r) (f r)","decl":"lemma ofHom_apply {R S : Type u} [Ring R] [Ring S]\n    (f : R ‚Üí+* S) (r : R) : ofHom f r = f r := rfl\n\n"}
{"name":"RingCat.inv_hom_apply","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : RingCat\ne : CategoryTheory.Iso R S\nr : ‚ÜëR\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom e.inv) ((CategoryTheory.ConcreteCategory.hom e.hom) r)) r","decl":"@[simp]\nlemma inv_hom_apply {R S : RingCat} (e : R ‚âÖ S) (r : R) : e.inv (e.hom r) = r := by\n  rw [‚Üê comp_apply]\n  simp\n\n"}
{"name":"RingCat.hom_inv_apply","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : RingCat\ne : CategoryTheory.Iso R S\ns : ‚ÜëS\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom e.hom) ((CategoryTheory.ConcreteCategory.hom e.inv) s)) s","decl":"@[simp]\nlemma hom_inv_apply {R S : RingCat} (e : R ‚âÖ S) (s : S) : e.hom (e.inv s) = s := by\n  rw [‚Üê comp_apply]\n  simp\n\n"}
{"name":"RingCat.forget_obj","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R : RingCat\n‚ä¢ Eq ((CategoryTheory.forget RingCat).obj R) ‚ÜëR","decl":"lemma forget_obj {R : RingCat} : (forget RingCat).obj R = R := rfl\n\n"}
{"name":"RingCat.forget_map","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : RingCat\nf : Quiver.Hom R S\n‚ä¢ Eq ((CategoryTheory.forget RingCat).map f) ‚áë(CategoryTheory.ConcreteCategory.hom f)","decl":"lemma forget_map {R S : RingCat} (f : R ‚ü∂ S) :\n    (forget RingCat).map f = f :=\n  rfl\n\n"}
{"name":"RingEquiv.toRingCatIso_hom","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : Type u\ninst‚úù¬π : Ring R\ninst‚úù : Ring S\ne : RingEquiv R S\n‚ä¢ Eq e.toRingCatIso.hom (RingCat.ofHom ‚Üëe)","decl":"/-- Ring equivalence are isomorphisms in category of semirings -/\n@[simps]\ndef _root_.RingEquiv.toRingCatIso {R S : Type u} [Ring R] [Ring S] (e : R ‚âÉ+* S) :\n    of R ‚âÖ of S where\n  hom := ofHom e\n  inv := ofHom e.symm\n\n"}
{"name":"RingEquiv.toRingCatIso_inv","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : Type u\ninst‚úù¬π : Ring R\ninst‚úù : Ring S\ne : RingEquiv R S\n‚ä¢ Eq e.toRingCatIso.inv (RingCat.ofHom ‚Üëe.symm)","decl":"/-- Ring equivalence are isomorphisms in category of semirings -/\n@[simps]\ndef _root_.RingEquiv.toRingCatIso {R S : Type u} [Ring R] [Ring S] (e : R ‚âÉ+* S) :\n    of R ‚âÖ of S where\n  hom := ofHom e\n  inv := ofHom e.symm\n\n"}
{"name":"RingCat.forgetReflectIsos","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"‚ä¢ (CategoryTheory.forget RingCat).ReflectsIsomorphisms","decl":"instance forgetReflectIsos : (forget RingCat).ReflectsIsomorphisms where\n  reflects {X Y} f _ := by\n    let i := asIso ((forget RingCat).map f)\n    let ff : X ‚Üí+* Y := f.hom\n    let e : X ‚âÉ+* Y := { ff, i.toEquiv with }\n    exact e.toRingCatIso.isIso_hom\n\n"}
{"name":"CommSemiRingCat.coe_of","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R : Type u\ninst‚úù : CommSemiring R\n‚ä¢ Eq (‚Üë(CommSemiRingCat.of R)) R","decl":"lemma coe_of (R : Type u) [CommSemiring R] : (of R : Type u) = R :=\n  rfl\n\n"}
{"name":"CommSemiRingCat.of_carrier","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R : CommSemiRingCat\n‚ä¢ Eq (CommSemiRingCat.of ‚ÜëR) R","decl":"lemma of_carrier (R : CommSemiRingCat.{u}) : of R = R := rfl\n\n"}
{"name":"CommSemiRingCat.Hom.ext_iff","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : CommSemiRingCat\nx y : R.Hom S\n‚ä¢ Iff (Eq x y) (Eq x.hom' y.hom')","decl":"variable {R} in\n/-- The type of morphisms in `CommSemiRingCat`. -/\n@[ext]\nstructure Hom (R S : CommSemiRingCat.{u}) where\n  private mk ::\n  /-- The underlying ring hom. -/\n  hom' : R ‚Üí+* S\n\n"}
{"name":"CommSemiRingCat.Hom.ext","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : CommSemiRingCat\nx y : R.Hom S\nhom' : Eq x.hom' y.hom'\n‚ä¢ Eq x y","decl":"variable {R} in\n/-- The type of morphisms in `CommSemiRingCat`. -/\n@[ext]\nstructure Hom (R S : CommSemiRingCat.{u}) where\n  private mk ::\n  /-- The underlying ring hom. -/\n  hom' : R ‚Üí+* S\n\n"}
{"name":"CommSemiRingCat.hom_id","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R : CommSemiRingCat\n‚ä¢ Eq (CommSemiRingCat.Hom.hom (CategoryTheory.CategoryStruct.id R)) (RingHom.id ‚ÜëR)","decl":"@[simp]\nlemma hom_id {R : CommSemiRingCat} : (ùüô R : R ‚ü∂ R).hom = RingHom.id R := rfl\n\n/- Provided for rewriting. -/\n"}
{"name":"CommSemiRingCat.id_apply","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R : CommSemiRingCat\nr : ‚ÜëR\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom (CategoryTheory.CategoryStruct.id R)) r) r","decl":"lemma id_apply (R : CommSemiRingCat) (r : R) :\n    (ùüô R : R ‚ü∂ R) r = r := by simp\n\n"}
{"name":"CommSemiRingCat.hom_comp","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S T : CommSemiRingCat\nf : Quiver.Hom R S\ng : Quiver.Hom S T\n‚ä¢ Eq (CommSemiRingCat.Hom.hom (CategoryTheory.CategoryStruct.comp f g)) ((CommSemiRingCat.Hom.hom g).comp (CommSemiRingCat.Hom.hom f))","decl":"@[simp]\nlemma hom_comp {R S T : CommSemiRingCat} (f : R ‚ü∂ S) (g : S ‚ü∂ T) :\n    (f ‚â´ g).hom = g.hom.comp f.hom := rfl\n\n/- Provided for rewriting. -/\n"}
{"name":"CommSemiRingCat.comp_apply","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S T : CommSemiRingCat\nf : Quiver.Hom R S\ng : Quiver.Hom S T\nr : ‚ÜëR\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom (CategoryTheory.CategoryStruct.comp f g)) r) ((CategoryTheory.ConcreteCategory.hom g) ((CategoryTheory.ConcreteCategory.hom f) r))","decl":"lemma comp_apply {R S T : CommSemiRingCat} (f : R ‚ü∂ S) (g : S ‚ü∂ T) (r : R) :\n    (f ‚â´ g) r = g (f r) := by simp\n\n"}
{"name":"CommSemiRingCat.hom_ext_iff","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : CommSemiRingCat\nf g : Quiver.Hom R S\n‚ä¢ Iff (Eq f g) (Eq (CommSemiRingCat.Hom.hom f) (CommSemiRingCat.Hom.hom g))","decl":"@[ext]\nlemma hom_ext {R S : CommSemiRingCat} {f g : R ‚ü∂ S} (hf : f.hom = g.hom) : f = g :=\n  Hom.ext hf\n\n"}
{"name":"CommSemiRingCat.hom_ext","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : CommSemiRingCat\nf g : Quiver.Hom R S\nhf : Eq (CommSemiRingCat.Hom.hom f) (CommSemiRingCat.Hom.hom g)\n‚ä¢ Eq f g","decl":"@[ext]\nlemma hom_ext {R S : CommSemiRingCat} {f g : R ‚ü∂ S} (hf : f.hom = g.hom) : f = g :=\n  Hom.ext hf\n\n"}
{"name":"CommSemiRingCat.hom_ofHom","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : Type u\ninst‚úù¬π : CommSemiring R\ninst‚úù : CommSemiring S\nf : RingHom R S\n‚ä¢ Eq (CommSemiRingCat.Hom.hom (CommSemiRingCat.ofHom f)) f","decl":"@[simp]\nlemma hom_ofHom {R S : Type u} [CommSemiring R] [CommSemiring S] (f : R ‚Üí+* S) :\n  (ofHom f).hom = f := rfl\n\n"}
{"name":"CommSemiRingCat.ofHom_hom","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : CommSemiRingCat\nf : Quiver.Hom R S\n‚ä¢ Eq (CommSemiRingCat.ofHom (CommSemiRingCat.Hom.hom f)) f","decl":"@[simp]\nlemma ofHom_hom {R S : CommSemiRingCat} (f : R ‚ü∂ S) :\n    ofHom (Hom.hom f) = f := rfl\n\n"}
{"name":"CommSemiRingCat.ofHom_id","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R : Type u\ninst‚úù : CommSemiring R\n‚ä¢ Eq (CommSemiRingCat.ofHom (RingHom.id R)) (CategoryTheory.CategoryStruct.id (CommSemiRingCat.of R))","decl":"@[simp]\nlemma ofHom_id {R : Type u} [CommSemiring R] : ofHom (RingHom.id R) = ùüô (of R) := rfl\n\n"}
{"name":"CommSemiRingCat.ofHom_comp","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S T : Type u\ninst‚úù¬≤ : CommSemiring R\ninst‚úù¬π : CommSemiring S\ninst‚úù : CommSemiring T\nf : RingHom R S\ng : RingHom S T\n‚ä¢ Eq (CommSemiRingCat.ofHom (g.comp f)) (CategoryTheory.CategoryStruct.comp (CommSemiRingCat.ofHom f) (CommSemiRingCat.ofHom g))","decl":"@[simp]\nlemma ofHom_comp {R S T : Type u} [CommSemiring R] [CommSemiring S] [CommSemiring T]\n    (f : R ‚Üí+* S) (g : S ‚Üí+* T) :\n    ofHom (g.comp f) = ofHom f ‚â´ ofHom g :=\n  rfl\n\n"}
{"name":"CommSemiRingCat.ofHom_apply","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : Type u\ninst‚úù¬π : CommSemiring R\ninst‚úù : CommSemiring S\nf : RingHom R S\nr : R\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom (CommSemiRingCat.ofHom f)) r) (f r)","decl":"lemma ofHom_apply {R S : Type u} [CommSemiring R] [CommSemiring S]\n    (f : R ‚Üí+* S) (r : R) : ofHom f r = f r := rfl\n\n"}
{"name":"CommSemiRingCat.inv_hom_apply","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : CommSemiRingCat\ne : CategoryTheory.Iso R S\nr : ‚ÜëR\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom e.inv) ((CategoryTheory.ConcreteCategory.hom e.hom) r)) r","decl":"@[simp]\nlemma inv_hom_apply {R S : CommSemiRingCat} (e : R ‚âÖ S) (r : R) : e.inv (e.hom r) = r := by\n  rw [‚Üê comp_apply]\n  simp\n\n"}
{"name":"CommSemiRingCat.hom_inv_apply","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : CommSemiRingCat\ne : CategoryTheory.Iso R S\ns : ‚ÜëS\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom e.hom) ((CategoryTheory.ConcreteCategory.hom e.inv) s)) s","decl":"@[simp]\nlemma hom_inv_apply {R S : CommSemiRingCat} (e : R ‚âÖ S) (s : S) : e.hom (e.inv s) = s := by\n  rw [‚Üê comp_apply]\n  simp\n\n"}
{"name":"CommSemiRingCat.forget_obj","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R : CommSemiRingCat\n‚ä¢ Eq ((CategoryTheory.forget CommSemiRingCat).obj R) ‚ÜëR","decl":"lemma forget_obj {R : CommSemiRingCat} : (forget CommSemiRingCat).obj R = R := rfl\n\n"}
{"name":"CommSemiRingCat.forget_map","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : CommSemiRingCat\nf : Quiver.Hom R S\n‚ä¢ Eq ((CategoryTheory.forget CommSemiRingCat).map f) ‚áë(CategoryTheory.ConcreteCategory.hom f)","decl":"lemma forget_map {R S : CommSemiRingCat} (f : R ‚ü∂ S) :\n    (forget CommSemiRingCat).map f = f :=\n  rfl\n\n"}
{"name":"RingEquiv.toCommSemiRingCatIso_inv","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : Type u\ninst‚úù¬π : CommSemiring R\ninst‚úù : CommSemiring S\ne : RingEquiv R S\n‚ä¢ Eq e.toCommSemiRingCatIso.inv (CommSemiRingCat.ofHom ‚Üëe.symm)","decl":"/-- Ring equivalence are isomorphisms in category of semirings -/\n@[simps]\ndef _root_.RingEquiv.toCommSemiRingCatIso\n    {R S : Type u} [CommSemiring R] [CommSemiring S] (e : R ‚âÉ+* S) :\n    of R ‚âÖ of S where\n  hom := ofHom e\n  inv := ofHom e.symm\n\n"}
{"name":"RingEquiv.toCommSemiRingCatIso_hom","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : Type u\ninst‚úù¬π : CommSemiring R\ninst‚úù : CommSemiring S\ne : RingEquiv R S\n‚ä¢ Eq e.toCommSemiRingCatIso.hom (CommSemiRingCat.ofHom ‚Üëe)","decl":"/-- Ring equivalence are isomorphisms in category of semirings -/\n@[simps]\ndef _root_.RingEquiv.toCommSemiRingCatIso\n    {R S : Type u} [CommSemiring R] [CommSemiring S] (e : R ‚âÉ+* S) :\n    of R ‚âÖ of S where\n  hom := ofHom e\n  inv := ofHom e.symm\n\n"}
{"name":"CommSemiRingCat.forgetReflectIsos","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"‚ä¢ (CategoryTheory.forget CommSemiRingCat).ReflectsIsomorphisms","decl":"instance forgetReflectIsos : (forget CommSemiRingCat).ReflectsIsomorphisms where\n  reflects {X Y} f _ := by\n    let i := asIso ((forget CommSemiRingCat).map f)\n    let ff : X ‚Üí+* Y := f.hom\n    let e : X ‚âÉ+* Y := { ff, i.toEquiv with }\n    exact e.toCommSemiRingCatIso.isIso_hom\n\n"}
{"name":"CommRingCat.coe_of","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R : Type u\ninst‚úù : CommRing R\n‚ä¢ Eq (‚Üë(CommRingCat.of R)) R","decl":"lemma coe_of (R : Type u) [CommRing R] : (of R : Type u) = R :=\n  rfl\n\n"}
{"name":"CommRingCat.of_carrier","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R : CommRingCat\n‚ä¢ Eq (CommRingCat.of ‚ÜëR) R","decl":"lemma of_carrier (R : CommRingCat.{u}) : of R = R := rfl\n\n"}
{"name":"CommRingCat.Hom.ext_iff","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : CommRingCat\nx y : R.Hom S\n‚ä¢ Iff (Eq x y) (Eq x.hom' y.hom')","decl":"variable {R} in\n/-- The type of morphisms in `CommRingCat`. -/\n@[ext]\nstructure Hom (R S : CommRingCat.{u}) where\n  private mk ::\n  /-- The underlying ring hom. -/\n  hom' : R ‚Üí+* S\n\n"}
{"name":"CommRingCat.Hom.ext","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : CommRingCat\nx y : R.Hom S\nhom' : Eq x.hom' y.hom'\n‚ä¢ Eq x y","decl":"variable {R} in\n/-- The type of morphisms in `CommRingCat`. -/\n@[ext]\nstructure Hom (R S : CommRingCat.{u}) where\n  private mk ::\n  /-- The underlying ring hom. -/\n  hom' : R ‚Üí+* S\n\n"}
{"name":"CommRingCat.hom_id","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R : CommRingCat\n‚ä¢ Eq (CommRingCat.Hom.hom (CategoryTheory.CategoryStruct.id R)) (RingHom.id ‚ÜëR)","decl":"@[simp]\nlemma hom_id {R : CommRingCat} : (ùüô R : R ‚ü∂ R).hom = RingHom.id R := rfl\n\n/- Provided for rewriting. -/\n"}
{"name":"CommRingCat.id_apply","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R : CommRingCat\nr : ‚ÜëR\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom (CategoryTheory.CategoryStruct.id R)) r) r","decl":"lemma id_apply (R : CommRingCat) (r : R) :\n    (ùüô R : R ‚ü∂ R) r = r := by simp\n\n"}
{"name":"CommRingCat.hom_comp","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S T : CommRingCat\nf : Quiver.Hom R S\ng : Quiver.Hom S T\n‚ä¢ Eq (CommRingCat.Hom.hom (CategoryTheory.CategoryStruct.comp f g)) ((CommRingCat.Hom.hom g).comp (CommRingCat.Hom.hom f))","decl":"@[simp]\nlemma hom_comp {R S T : CommRingCat} (f : R ‚ü∂ S) (g : S ‚ü∂ T) :\n    (f ‚â´ g).hom = g.hom.comp f.hom := rfl\n\n/- Provided for rewriting. -/\n"}
{"name":"CommRingCat.comp_apply","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S T : CommRingCat\nf : Quiver.Hom R S\ng : Quiver.Hom S T\nr : ‚ÜëR\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom (CategoryTheory.CategoryStruct.comp f g)) r) ((CategoryTheory.ConcreteCategory.hom g) ((CategoryTheory.ConcreteCategory.hom f) r))","decl":"lemma comp_apply {R S T : CommRingCat} (f : R ‚ü∂ S) (g : S ‚ü∂ T) (r : R) :\n    (f ‚â´ g) r = g (f r) := by simp\n\n"}
{"name":"CommRingCat.hom_ext_iff","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : CommRingCat\nf g : Quiver.Hom R S\n‚ä¢ Iff (Eq f g) (Eq (CommRingCat.Hom.hom f) (CommRingCat.Hom.hom g))","decl":"@[ext]\nlemma hom_ext {R S : CommRingCat} {f g : R ‚ü∂ S} (hf : f.hom = g.hom) : f = g :=\n  Hom.ext hf\n\n"}
{"name":"CommRingCat.hom_ext","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : CommRingCat\nf g : Quiver.Hom R S\nhf : Eq (CommRingCat.Hom.hom f) (CommRingCat.Hom.hom g)\n‚ä¢ Eq f g","decl":"@[ext]\nlemma hom_ext {R S : CommRingCat} {f g : R ‚ü∂ S} (hf : f.hom = g.hom) : f = g :=\n  Hom.ext hf\n\n"}
{"name":"CommRingCat.hom_ofHom","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : Type u\ninst‚úù¬π : CommRing R\ninst‚úù : CommRing S\nf : RingHom R S\n‚ä¢ Eq (CommRingCat.Hom.hom (CommRingCat.ofHom f)) f","decl":"@[simp]\nlemma hom_ofHom {R S : Type u} [CommRing R] [CommRing S] (f : R ‚Üí+* S) :\n  (ofHom f).hom = f := rfl\n\n"}
{"name":"CommRingCat.ofHom_hom","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : CommRingCat\nf : Quiver.Hom R S\n‚ä¢ Eq (CommRingCat.ofHom (CommRingCat.Hom.hom f)) f","decl":"@[simp]\nlemma ofHom_hom {R S : CommRingCat} (f : R ‚ü∂ S) :\n    ofHom (Hom.hom f) = f := rfl\n\n"}
{"name":"CommRingCat.ofHom_id","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R : Type u\ninst‚úù : CommRing R\n‚ä¢ Eq (CommRingCat.ofHom (RingHom.id R)) (CategoryTheory.CategoryStruct.id (CommRingCat.of R))","decl":"@[simp]\nlemma ofHom_id {R : Type u} [CommRing R] : ofHom (RingHom.id R) = ùüô (of R) := rfl\n\n"}
{"name":"CommRingCat.ofHom_comp","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S T : Type u\ninst‚úù¬≤ : CommRing R\ninst‚úù¬π : CommRing S\ninst‚úù : CommRing T\nf : RingHom R S\ng : RingHom S T\n‚ä¢ Eq (CommRingCat.ofHom (g.comp f)) (CategoryTheory.CategoryStruct.comp (CommRingCat.ofHom f) (CommRingCat.ofHom g))","decl":"@[simp]\nlemma ofHom_comp {R S T : Type u} [CommRing R] [CommRing S] [CommRing T]\n    (f : R ‚Üí+* S) (g : S ‚Üí+* T) :\n    ofHom (g.comp f) = ofHom f ‚â´ ofHom g :=\n  rfl\n\n"}
{"name":"CommRingCat.ofHom_apply","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : Type u\ninst‚úù¬π : CommRing R\ninst‚úù : CommRing S\nf : RingHom R S\nr : R\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom (CommRingCat.ofHom f)) r) (f r)","decl":"lemma ofHom_apply {R S : Type u} [CommRing R] [CommRing S]\n    (f : R ‚Üí+* S) (r : R) : ofHom f r = f r := rfl\n\n"}
{"name":"CommRingCat.inv_hom_apply","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : CommRingCat\ne : CategoryTheory.Iso R S\nr : ‚ÜëR\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom e.inv) ((CategoryTheory.ConcreteCategory.hom e.hom) r)) r","decl":"@[simp]\nlemma inv_hom_apply {R S : CommRingCat} (e : R ‚âÖ S) (r : R) : e.inv (e.hom r) = r := by\n  rw [‚Üê comp_apply]\n  simp\n\n"}
{"name":"CommRingCat.hom_inv_apply","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : CommRingCat\ne : CategoryTheory.Iso R S\ns : ‚ÜëS\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom e.hom) ((CategoryTheory.ConcreteCategory.hom e.inv) s)) s","decl":"@[simp]\nlemma hom_inv_apply {R S : CommRingCat} (e : R ‚âÖ S) (s : S) : e.hom (e.inv s) = s := by\n  rw [‚Üê comp_apply]\n  simp\n\n"}
{"name":"CommRingCat.forget_obj","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R : CommRingCat\n‚ä¢ Eq ((CategoryTheory.forget CommRingCat).obj R) ‚ÜëR","decl":"lemma forget_obj {R : CommRingCat} : (forget CommRingCat).obj R = R := rfl\n\n"}
{"name":"CommRingCat.forget_map","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : CommRingCat\nf : Quiver.Hom R S\n‚ä¢ Eq ((CategoryTheory.forget CommRingCat).map f) ‚áë(CategoryTheory.ConcreteCategory.hom f)","decl":"lemma forget_map {R S : CommRingCat} (f : R ‚ü∂ S) :\n    (forget CommRingCat).map f = f :=\n  rfl\n\n"}
{"name":"CommRingCat.forgetToRingCat_map_hom","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : CommRingCat\nf : Quiver.Hom R S\n‚ä¢ Eq (RingCat.Hom.hom ((CategoryTheory.forget‚ÇÇ CommRingCat RingCat).map f)) (CommRingCat.Hom.hom f)","decl":"@[simp] lemma forgetToRingCat_map_hom {R S : CommRingCat} (f : R ‚ü∂ S) :\n    ((forget‚ÇÇ CommRingCat RingCat).map f).hom = f.hom :=\n  rfl\n\n"}
{"name":"CommRingCat.forgetToRingCat_obj","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R : CommRingCat\n‚ä¢ Eq ‚Üë((CategoryTheory.forget‚ÇÇ CommRingCat RingCat).obj R) ‚ÜëR","decl":"@[simp] lemma forgetToRingCat_obj {R : CommRingCat} :\n    (((forget‚ÇÇ CommRingCat RingCat).obj R) : Type u) = R :=\n  rfl\n\n"}
{"name":"RingEquiv.toCommRingCatIso_hom","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : Type u\ninst‚úù¬π : CommRing R\ninst‚úù : CommRing S\ne : RingEquiv R S\n‚ä¢ Eq e.toCommRingCatIso.hom (CommRingCat.ofHom ‚Üëe)","decl":"/-- Ring equivalence are isomorphisms in category of semirings -/\n@[simps]\ndef _root_.RingEquiv.toCommRingCatIso\n    {R S : Type u} [CommRing R] [CommRing S] (e : R ‚âÉ+* S) :\n    of R ‚âÖ of S where\n  hom := ofHom e\n  inv := ofHom e.symm\n\n"}
{"name":"RingEquiv.toCommRingCatIso_inv","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : Type u\ninst‚úù¬π : CommRing R\ninst‚úù : CommRing S\ne : RingEquiv R S\n‚ä¢ Eq e.toCommRingCatIso.inv (CommRingCat.ofHom ‚Üëe.symm)","decl":"/-- Ring equivalence are isomorphisms in category of semirings -/\n@[simps]\ndef _root_.RingEquiv.toCommRingCatIso\n    {R S : Type u} [CommRing R] [CommRing S] (e : R ‚âÉ+* S) :\n    of R ‚âÖ of S where\n  hom := ofHom e\n  inv := ofHom e.symm\n\n"}
{"name":"CommRingCat.forgetReflectIsos","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"‚ä¢ (CategoryTheory.forget CommRingCat).ReflectsIsomorphisms","decl":"instance forgetReflectIsos : (forget CommRingCat).ReflectsIsomorphisms where\n  reflects {X Y} f _ := by\n    let i := asIso ((forget CommRingCat).map f)\n    let ff : X ‚Üí+* Y := f.hom\n    let e : X ‚âÉ+* Y := { ff, i.toEquiv with }\n    exact e.toCommRingCatIso.isIso_hom\n\n"}
{"name":"CategoryTheory.Iso.semiRingCatIsoToRingEquiv_toRingHom","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : SemiRingCat\ne : CategoryTheory.Iso R S\n‚ä¢ Eq (‚Üëe.semiRingCatIsoToRingEquiv) (SemiRingCat.Hom.hom e.hom)","decl":"@[simp] lemma semiRingCatIsoToRingEquiv_toRingHom {R S : SemiRingCat.{u}} (e : R ‚âÖ S) :\n  (e.semiRingCatIsoToRingEquiv : R ‚Üí+* S) = e.hom.hom := rfl\n\n"}
{"name":"CategoryTheory.Iso.ringCatIsoToRingEquiv_toRingHom","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : RingCat\ne : CategoryTheory.Iso R S\n‚ä¢ Eq (‚Üëe.ringCatIsoToRingEquiv) (RingCat.Hom.hom e.hom)","decl":"@[simp] lemma ringCatIsoToRingEquiv_toRingHom {R S : RingCat.{u}} (e : R ‚âÖ S) :\n  (e.ringCatIsoToRingEquiv : R ‚Üí+* S) = e.hom.hom := rfl\n\n"}
{"name":"CategoryTheory.Iso.commSemiRingCatIsoToRingEquiv_toRingHom","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : CommSemiRingCat\ne : CategoryTheory.Iso R S\n‚ä¢ Eq (‚Üëe.commSemiRingCatIsoToRingEquiv) (CommSemiRingCat.Hom.hom e.hom)","decl":"@[simp] lemma commSemiRingCatIsoToRingEquiv_toRingHom {R S : CommSemiRingCat.{u}} (e : R ‚âÖ S) :\n  (e.commSemiRingCatIsoToRingEquiv : R ‚Üí+* S) = e.hom.hom := rfl\n\n"}
{"name":"CategoryTheory.Iso.commRingCatIsoToRingEquiv_toRingHom","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : CommRingCat\ne : CategoryTheory.Iso R S\n‚ä¢ Eq (‚Üëe.commRingCatIsoToRingEquiv) (CommRingCat.Hom.hom e.hom)","decl":"@[simp] lemma commRingCatIsoToRingEquiv_toRingHom {R S : CommRingCat.{u}} (e : R ‚âÖ S) :\n  (e.commRingCatIsoToRingEquiv : R ‚Üí+* S) = e.hom.hom := rfl\n\n"}
{"name":"RingCat.forget_map_apply","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : RingCat\nf : Quiver.Hom R S\nx : (CategoryTheory.forget RingCat).obj R\n‚ä¢ Eq ((CategoryTheory.forget RingCat).map f x) ((CategoryTheory.ConcreteCategory.hom f) x)","decl":"lemma RingCat.forget_map_apply {R S : RingCat} (f : R ‚ü∂ S)\n    (x : (CategoryTheory.forget RingCat).obj R) :\n    (forget _).map f x = f x :=\n  rfl\n\n"}
{"name":"CommRingCat.forget_map_apply","module":"Mathlib.Algebra.Category.Ring.Basic","initialProofState":"R S : CommRingCat\nf : Quiver.Hom R S\nx : (CategoryTheory.forget CommRingCat).obj R\n‚ä¢ Eq ((CategoryTheory.forget CommRingCat).map f x) ((CategoryTheory.ConcreteCategory.hom f) x)","decl":"lemma CommRingCat.forget_map_apply {R S : CommRingCat} (f : R ‚ü∂ S)\n    (x : (CategoryTheory.forget CommRingCat).obj R) :\n    (forget _).map f x = f x :=\n  rfl\n"}
