{"name":"Set.Countable.isPathConnected_compl_of_one_lt_rank","module":"Mathlib.Analysis.NormedSpace.Connected","initialProofState":"E : Type u_1\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module Real E\ninst✝² : TopologicalSpace E\ninst✝¹ : ContinuousAdd E\ninst✝ : ContinuousSMul Real E\nh : LT.lt 1 (Module.rank Real E)\ns : Set E\nhs : s.Countable\n⊢ IsPathConnected (HasCompl.compl s)","decl":"/-- In a real vector space of dimension `> 1`, the complement of any countable set is path\nconnected. -/\ntheorem Set.Countable.isPathConnected_compl_of_one_lt_rank\n    (h : 1 < Module.rank ℝ E) {s : Set E} (hs : s.Countable) :\n    IsPathConnected sᶜ := by\n  have : Nontrivial E := (rank_pos_iff_nontrivial (R := ℝ)).1 (zero_lt_one.trans h)\n  -- the set `sᶜ` is dense, therefore nonempty. Pick `a ∈ sᶜ`. We have to show that any\n  -- `b ∈ sᶜ` can be joined to `a`.\n  obtain ⟨a, ha⟩ : sᶜ.Nonempty := (hs.dense_compl ℝ).nonempty\n  refine ⟨a, ha, ?_⟩\n  intro b hb\n  rcases eq_or_ne a b with rfl|hab\n  · exact JoinedIn.refl ha\n  /- Assume `b ≠ a`. Write `a = c - x` and `b = c + x` for some nonzero `x`. Choose `y` which\n  is linearly independent from `x`. Then the segments joining `a = c - x` to `c + ty` are pairwise\n  disjoint for varying `t` (except for the endpoint `a`) so only countably many of them can\n  intersect `s`. In the same way, there are countably many `t`s for which the segment\n  from `b = c + x` to `c + ty` intersects `s`. Choosing `t` outside of these countable exceptions,\n  one gets a path in the complement of `s` from `a` to `z = c + ty` and then to `b`.\n  -/\n  let c := (2 : ℝ)⁻¹ • (a + b)\n  let x := (2 : ℝ)⁻¹ • (b - a)\n  have Ia : c - x = a := by\n    simp only [c, x]\n    module\n  have Ib : c + x = b := by\n    simp only [c, x]\n    module\n  have x_ne_zero : x ≠ 0 := by simpa [x] using sub_ne_zero.2 hab.symm\n  obtain ⟨y, hy⟩ : ∃ y, LinearIndependent ℝ ![x, y] :=\n    exists_linearIndependent_pair_of_one_lt_rank h x_ne_zero\n  have A : Set.Countable {t : ℝ | ([c + x -[ℝ] c + t • y] ∩ s).Nonempty} := by\n    apply countable_setOf_nonempty_of_disjoint _ (fun t ↦ inter_subset_right) hs\n    intro t t' htt'\n    apply disjoint_iff_inter_eq_empty.2\n    have N : {c + x} ∩ s = ∅ := by\n      simpa only [singleton_inter_eq_empty, mem_compl_iff, Ib] using hb\n    rw [inter_assoc, inter_comm s, inter_assoc, inter_self, ← inter_assoc, ← subset_empty_iff, ← N]\n    apply inter_subset_inter_left\n    apply Eq.subset\n    apply segment_inter_eq_endpoint_of_linearIndependent_of_ne hy htt'.symm\n  have B : Set.Countable {t : ℝ | ([c - x -[ℝ] c + t • y] ∩ s).Nonempty} := by\n    apply countable_setOf_nonempty_of_disjoint _ (fun t ↦ inter_subset_right) hs\n    intro t t' htt'\n    apply disjoint_iff_inter_eq_empty.2\n    have N : {c - x} ∩ s = ∅ := by\n      simpa only [singleton_inter_eq_empty, mem_compl_iff, Ia] using ha\n    rw [inter_assoc, inter_comm s, inter_assoc, inter_self, ← inter_assoc, ← subset_empty_iff, ← N]\n    apply inter_subset_inter_left\n    rw [sub_eq_add_neg _ x]\n    apply Eq.subset\n    apply segment_inter_eq_endpoint_of_linearIndependent_of_ne _ htt'.symm\n    convert hy.units_smul ![-1, 1]\n    simp [← List.ofFn_inj]\n  obtain ⟨t, ht⟩ : Set.Nonempty ({t : ℝ | ([c + x -[ℝ] c + t • y] ∩ s).Nonempty}\n      ∪ {t : ℝ | ([c - x -[ℝ] c + t • y] ∩ s).Nonempty})ᶜ := ((A.union B).dense_compl ℝ).nonempty\n  let z := c + t • y\n  simp only [compl_union, mem_inter_iff, mem_compl_iff, mem_setOf_eq, not_nonempty_iff_eq_empty]\n    at ht\n  have JA : JoinedIn sᶜ a z := by\n    apply JoinedIn.of_segment_subset\n    rw [subset_compl_iff_disjoint_right, disjoint_iff_inter_eq_empty]\n    convert ht.2\n    exact Ia.symm\n  have JB : JoinedIn sᶜ b z := by\n    apply JoinedIn.of_segment_subset\n    rw [subset_compl_iff_disjoint_right, disjoint_iff_inter_eq_empty]\n    convert ht.1\n    exact Ib.symm\n  exact JA.trans JB.symm\n\n"}
{"name":"Set.Countable.isConnected_compl_of_one_lt_rank","module":"Mathlib.Analysis.NormedSpace.Connected","initialProofState":"E : Type u_1\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module Real E\ninst✝² : TopologicalSpace E\ninst✝¹ : ContinuousAdd E\ninst✝ : ContinuousSMul Real E\nh : LT.lt 1 (Module.rank Real E)\ns : Set E\nhs : s.Countable\n⊢ IsConnected (HasCompl.compl s)","decl":"/-- In a real vector space of dimension `> 1`, the complement of any countable set is\nconnected. -/\ntheorem Set.Countable.isConnected_compl_of_one_lt_rank (h : 1 < Module.rank ℝ E) {s : Set E}\n    (hs : s.Countable) : IsConnected sᶜ :=\n  (hs.isPathConnected_compl_of_one_lt_rank h).isConnected\n\n"}
{"name":"isPathConnected_compl_singleton_of_one_lt_rank","module":"Mathlib.Analysis.NormedSpace.Connected","initialProofState":"E : Type u_1\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module Real E\ninst✝² : TopologicalSpace E\ninst✝¹ : ContinuousAdd E\ninst✝ : ContinuousSMul Real E\nh : LT.lt 1 (Module.rank Real E)\nx : E\n⊢ IsPathConnected (HasCompl.compl (Singleton.singleton x))","decl":"/-- In a real vector space of dimension `> 1`, the complement of any singleton is path-connected. -/\ntheorem isPathConnected_compl_singleton_of_one_lt_rank (h : 1 < Module.rank ℝ E) (x : E) :\n    IsPathConnected {x}ᶜ :=\n  Set.Countable.isPathConnected_compl_of_one_lt_rank h (countable_singleton x)\n\n"}
{"name":"isConnected_compl_singleton_of_one_lt_rank","module":"Mathlib.Analysis.NormedSpace.Connected","initialProofState":"E : Type u_1\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module Real E\ninst✝² : TopologicalSpace E\ninst✝¹ : ContinuousAdd E\ninst✝ : ContinuousSMul Real E\nh : LT.lt 1 (Module.rank Real E)\nx : E\n⊢ IsConnected (HasCompl.compl (Singleton.singleton x))","decl":"/-- In a real vector space of dimension `> 1`, the complement of a singleton is connected. -/\ntheorem isConnected_compl_singleton_of_one_lt_rank (h : 1 < Module.rank ℝ E) (x : E) :\n    IsConnected {x}ᶜ :=\n  (isPathConnected_compl_singleton_of_one_lt_rank h x).isConnected\n\n"}
{"name":"isPathConnected_sphere","module":"Mathlib.Analysis.NormedSpace.Connected","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nh : LT.lt 1 (Module.rank Real E)\nx : E\nr : Real\nhr : LE.le 0 r\n⊢ IsPathConnected (Metric.sphere x r)","decl":"/-- In a real vector space of dimension `> 1`, any sphere of nonnegative radius is\npath connected. -/\ntheorem isPathConnected_sphere (h : 1 < Module.rank ℝ E) (x : E) {r : ℝ} (hr : 0 ≤ r) :\n    IsPathConnected (sphere x r) := by\n  /- when `r > 0`, we write the sphere as the image of `{0}ᶜ` under the map\n  `y ↦ x + (r * ‖y‖⁻¹) • y`. Since the image under a continuous map of a path connected set\n  is path connected, this concludes the proof. -/\n  rcases hr.eq_or_lt with rfl|rpos\n  · simpa using isPathConnected_singleton x\n  let f : E → E := fun y ↦ x + (r * ‖y‖⁻¹) • y\n  have A : ContinuousOn f {0}ᶜ := by\n    intro y hy\n    apply (continuousAt_const.add _).continuousWithinAt\n    apply (continuousAt_const.mul (ContinuousAt.inv₀ continuousAt_id.norm ?_)).smul continuousAt_id\n    simpa using hy\n  have B : IsPathConnected ({0}ᶜ : Set E) := isPathConnected_compl_singleton_of_one_lt_rank h 0\n  have C : IsPathConnected (f '' {0}ᶜ) := B.image' A\n  have : f '' {0}ᶜ = sphere x r := by\n    apply Subset.antisymm\n    · rintro - ⟨y, hy, rfl⟩\n      have : ‖y‖ ≠ 0 := by simpa using hy\n      simp [f, norm_smul, abs_of_nonneg hr, mul_assoc, inv_mul_cancel₀ this]\n    · intro y hy\n      refine ⟨y - x, ?_, ?_⟩\n      · intro H\n        simp only [mem_singleton_iff, sub_eq_zero] at H\n        simp only [H, mem_sphere_iff_norm, sub_self, norm_zero] at hy\n        exact rpos.ne hy\n      · simp [f, mem_sphere_iff_norm.1 hy, mul_inv_cancel₀ rpos.ne']\n  rwa [this] at C\n\n"}
{"name":"isConnected_sphere","module":"Mathlib.Analysis.NormedSpace.Connected","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nh : LT.lt 1 (Module.rank Real E)\nx : E\nr : Real\nhr : LE.le 0 r\n⊢ IsConnected (Metric.sphere x r)","decl":"/-- In a real vector space of dimension `> 1`, any sphere of nonnegative radius is connected. -/\ntheorem isConnected_sphere (h : 1 < Module.rank ℝ E) (x : E) {r : ℝ} (hr : 0 ≤ r) :\n    IsConnected (sphere x r) :=\n  (isPathConnected_sphere h x hr).isConnected\n\n"}
{"name":"isPreconnected_sphere","module":"Mathlib.Analysis.NormedSpace.Connected","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nh : LT.lt 1 (Module.rank Real E)\nx : E\nr : Real\n⊢ IsPreconnected (Metric.sphere x r)","decl":"/-- In a real vector space of dimension `> 1`, any sphere is preconnected. -/\ntheorem isPreconnected_sphere (h : 1 < Module.rank ℝ E) (x : E) (r : ℝ) :\n    IsPreconnected (sphere x r) := by\n  rcases le_or_lt 0 r with hr|hr\n  · exact (isConnected_sphere h x hr).isPreconnected\n  · simpa [hr] using isPreconnected_empty\n\n"}
{"name":"isPathConnected_compl_of_one_lt_codim","module":"Mathlib.Analysis.NormedSpace.Connected","initialProofState":"F : Type u_1\ninst✝⁴ : AddCommGroup F\ninst✝³ : Module Real F\ninst✝² : TopologicalSpace F\ninst✝¹ : TopologicalAddGroup F\ninst✝ : ContinuousSMul Real F\nE : Submodule Real F\nhcodim : LT.lt 1 (Module.rank Real (HasQuotient.Quotient F E))\n⊢ IsPathConnected (HasCompl.compl ↑E)","decl":"/-- Let `E` be a linear subspace in a real vector space.\nIf `E` has codimension at least two, its complement is path-connected. -/\ntheorem isPathConnected_compl_of_one_lt_codim {E : Submodule ℝ F}\n    (hcodim : 1 < Module.rank ℝ (F ⧸ E)) : IsPathConnected (Eᶜ : Set F) := by\n  rcases E.exists_isCompl with ⟨E', hE'⟩\n  refine isPathConnected_compl_of_isPathConnected_compl_zero hE'.symm\n    (isPathConnected_compl_singleton_of_one_lt_rank ?_ 0)\n  rwa [← (E.quotientEquivOfIsCompl E' hE').rank_eq]\n\n"}
{"name":"isConnected_compl_of_one_lt_codim","module":"Mathlib.Analysis.NormedSpace.Connected","initialProofState":"F : Type u_1\ninst✝⁴ : AddCommGroup F\ninst✝³ : Module Real F\ninst✝² : TopologicalSpace F\ninst✝¹ : TopologicalAddGroup F\ninst✝ : ContinuousSMul Real F\nE : Submodule Real F\nhcodim : LT.lt 1 (Module.rank Real (HasQuotient.Quotient F E))\n⊢ IsConnected (HasCompl.compl ↑E)","decl":"/-- Let `E` be a linear subspace in a real vector space.\nIf `E` has codimension at least two, its complement is connected. -/\ntheorem isConnected_compl_of_one_lt_codim {E : Submodule ℝ F} (hcodim : 1 < Module.rank ℝ (F ⧸ E)) :\n    IsConnected (Eᶜ : Set F) :=\n  (isPathConnected_compl_of_one_lt_codim hcodim).isConnected\n\n"}
{"name":"Submodule.connectedComponentIn_eq_self_of_one_lt_codim","module":"Mathlib.Analysis.NormedSpace.Connected","initialProofState":"F : Type u_1\ninst✝⁴ : AddCommGroup F\ninst✝³ : Module Real F\ninst✝² : TopologicalSpace F\ninst✝¹ : TopologicalAddGroup F\ninst✝ : ContinuousSMul Real F\nE : Submodule Real F\nhcodim : LT.lt 1 (Module.rank Real (HasQuotient.Quotient F E))\nx : F\nhx : Not (Membership.mem E x)\n⊢ Eq (connectedComponentIn (HasCompl.compl ↑E) x) (HasCompl.compl ↑E)","decl":"theorem Submodule.connectedComponentIn_eq_self_of_one_lt_codim (E : Submodule ℝ F)\n    (hcodim : 1 < Module.rank ℝ (F ⧸ E)) {x : F} (hx : x ∉ E) :\n    connectedComponentIn ((E : Set F)ᶜ) x = (E : Set F)ᶜ :=\n  (isConnected_compl_of_one_lt_codim hcodim).2.connectedComponentIn hx\n\n"}
