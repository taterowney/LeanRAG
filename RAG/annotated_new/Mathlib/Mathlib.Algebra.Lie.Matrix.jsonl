{"name":"lieEquivMatrix'_apply","module":"Mathlib.Algebra.Lie.Matrix","initialProofState":"R : Type u\ninst✝² : CommRing R\nn : Type w\ninst✝¹ : DecidableEq n\ninst✝ : Fintype n\nf : Module.End R (n → R)\n⊢ Eq (lieEquivMatrix' f) (LinearMap.toMatrix' f)","decl":"@[simp]\ntheorem lieEquivMatrix'_apply (f : Module.End R (n → R)) :\n    lieEquivMatrix' f = LinearMap.toMatrix' f :=\n  rfl\n\n"}
{"name":"lieEquivMatrix'_symm_apply","module":"Mathlib.Algebra.Lie.Matrix","initialProofState":"R : Type u\ninst✝² : CommRing R\nn : Type w\ninst✝¹ : DecidableEq n\ninst✝ : Fintype n\nA : Matrix n n R\n⊢ Eq (lieEquivMatrix'.symm A) (Matrix.toLin' A)","decl":"@[simp]\ntheorem lieEquivMatrix'_symm_apply (A : Matrix n n R) :\n    (@lieEquivMatrix' R _ n _ _).symm A = Matrix.toLin' A :=\n  rfl\n\n"}
{"name":"Matrix.lieConj_apply","module":"Mathlib.Algebra.Lie.Matrix","initialProofState":"R : Type u\ninst✝² : CommRing R\nn : Type w\ninst✝¹ : DecidableEq n\ninst✝ : Fintype n\nP A : Matrix n n R\nh : Invertible P\n⊢ Eq ((P.lieConj h) A) (HMul.hMul (HMul.hMul P A) (Inv.inv P))","decl":"@[simp]\ntheorem Matrix.lieConj_apply (P A : Matrix n n R) (h : Invertible P) :\n    P.lieConj h A = P * A * P⁻¹ := by\n  simp [LinearEquiv.conj_apply, Matrix.lieConj, LinearMap.toMatrix'_comp,\n    LinearMap.toMatrix'_toLin']\n\n"}
{"name":"Matrix.lieConj_symm_apply","module":"Mathlib.Algebra.Lie.Matrix","initialProofState":"R : Type u\ninst✝² : CommRing R\nn : Type w\ninst✝¹ : DecidableEq n\ninst✝ : Fintype n\nP A : Matrix n n R\nh : Invertible P\n⊢ Eq ((P.lieConj h).symm A) (HMul.hMul (HMul.hMul (Inv.inv P) A) P)","decl":"@[simp]\ntheorem Matrix.lieConj_symm_apply (P A : Matrix n n R) (h : Invertible P) :\n    (P.lieConj h).symm A = P⁻¹ * A * P := by\n  simp [LinearEquiv.symm_conj_apply, Matrix.lieConj, LinearMap.toMatrix'_comp,\n    LinearMap.toMatrix'_toLin']\n\n"}
{"name":"Matrix.reindexLieEquiv_apply","module":"Mathlib.Algebra.Lie.Matrix","initialProofState":"R : Type u\ninst✝⁴ : CommRing R\nn : Type w\ninst✝³ : DecidableEq n\ninst✝² : Fintype n\nm : Type w₁\ninst✝¹ : DecidableEq m\ninst✝ : Fintype m\ne : Equiv n m\nM : Matrix n n R\n⊢ Eq ((Matrix.reindexLieEquiv e) M) ((Matrix.reindex e e) M)","decl":"@[simp]\ntheorem Matrix.reindexLieEquiv_apply (M : Matrix n n R) :\n    Matrix.reindexLieEquiv e M = Matrix.reindex e e M :=\n  rfl\n\n"}
{"name":"Matrix.reindexLieEquiv_symm","module":"Mathlib.Algebra.Lie.Matrix","initialProofState":"R : Type u\ninst✝⁴ : CommRing R\nn : Type w\ninst✝³ : DecidableEq n\ninst✝² : Fintype n\nm : Type w₁\ninst✝¹ : DecidableEq m\ninst✝ : Fintype m\ne : Equiv n m\n⊢ Eq (Matrix.reindexLieEquiv e).symm (Matrix.reindexLieEquiv e.symm)","decl":"@[simp]\ntheorem Matrix.reindexLieEquiv_symm :\n    (Matrix.reindexLieEquiv e : _ ≃ₗ⁅R⁆ _).symm = Matrix.reindexLieEquiv e.symm :=\n  rfl\n\n"}
