{"name":"CategoryTheory.preservesHomology_preadditiveYonedaObj_of_injective","module":"Mathlib.CategoryTheory.Abelian.Injective","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Abelian C\nJ : C\nhJ : CategoryTheory.Injective J\n⊢ (CategoryTheory.preadditiveYonedaObj J).PreservesHomology","decl":"/-- The preadditive Yoneda functor on `J` preserves homology if `J` is injective. -/\ninstance preservesHomology_preadditiveYonedaObj_of_injective (J : C) [hJ : Injective J] :\n    (preadditiveYonedaObj J).PreservesHomology  := by\n  letI := (injective_iff_preservesEpimorphisms_preadditive_yoneda_obj' J).mp hJ\n  apply Functor.preservesHomology_of_preservesEpis_and_kernels\n\n"}
{"name":"CategoryTheory.preservesFiniteColimits_preadditiveYonedaObj_of_injective","module":"Mathlib.CategoryTheory.Abelian.Injective","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Abelian C\nJ : C\nhP : CategoryTheory.Injective J\n⊢ CategoryTheory.Limits.PreservesFiniteColimits (CategoryTheory.preadditiveYonedaObj J)","decl":"/-- The preadditive Yoneda functor on `J` preserves colimits if `J` is injective. -/\ninstance preservesFiniteColimits_preadditiveYonedaObj_of_injective (J : C) [hP : Injective J] :\n    PreservesFiniteColimits (preadditiveYonedaObj J) := by\n  apply Functor.preservesFiniteColimits_of_preservesHomology\n\n"}
{"name":"CategoryTheory.injective_of_preservesFiniteColimits_preadditiveYonedaObj","module":"Mathlib.CategoryTheory.Abelian.Injective","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Abelian C\nJ : C\nhP : CategoryTheory.Limits.PreservesFiniteColimits (CategoryTheory.preadditiveYonedaObj J)\n⊢ CategoryTheory.Injective J","decl":"/-- An object is injective if its preadditive Yoneda functor preserves finite colimits. -/\ntheorem injective_of_preservesFiniteColimits_preadditiveYonedaObj (J : C)\n    [hP : PreservesFiniteColimits (preadditiveYonedaObj J)] : Injective J := by\n  rw [injective_iff_preservesEpimorphisms_preadditive_yoneda_obj']\n  have := Functor.preservesHomologyOfExact (preadditiveYonedaObj J)\n  infer_instance\n\n"}
