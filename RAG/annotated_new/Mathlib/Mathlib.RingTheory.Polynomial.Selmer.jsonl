{"name":"Polynomial.X_pow_sub_X_sub_one_irreducible_aux","module":"Mathlib.RingTheory.Polynomial.Selmer","initialProofState":"n : Nat\nz : Complex\n⊢ Not (And (Eq (HPow.hPow z n) (HAdd.hAdd z 1)) (Eq (HAdd.hAdd (HPow.hPow z n) (HPow.hPow z 2)) 0))","decl":"theorem X_pow_sub_X_sub_one_irreducible_aux (z : ℂ) : ¬(z ^ n = z + 1 ∧ z ^ n + z ^ 2 = 0) := by\n  rintro ⟨h1, h2⟩\n  replace h3 : z ^ 3 = 1 := by\n    linear_combination (1 - z - z ^ 2 - z ^ n) * h1 + (z ^ n - 2) * h2\n  have key : z ^ n = 1 ∨ z ^ n = z ∨ z ^ n = z ^ 2 := by\n    rw [← Nat.mod_add_div n 3, pow_add, pow_mul, h3, one_pow, mul_one]\n    have : n % 3 < 3 := Nat.mod_lt n zero_lt_three\n    interval_cases n % 3 <;>\n    simp only [this, pow_zero, pow_one, eq_self_iff_true, or_true, true_or]\n  have z_ne_zero : z ≠ 0 := fun h =>\n    zero_ne_one ((zero_pow three_ne_zero).symm.trans (show (0 : ℂ) ^ 3 = 1 from h ▸ h3))\n  rcases key with (key | key | key)\n  · exact z_ne_zero (by rwa [key, self_eq_add_left] at h1)\n  · exact one_ne_zero (by rwa [key, self_eq_add_right] at h1)\n  · exact z_ne_zero (pow_eq_zero (by rwa [key, add_self_eq_zero] at h2))\n\n"}
{"name":"Polynomial.X_pow_sub_X_sub_one_irreducible","module":"Mathlib.RingTheory.Polynomial.Selmer","initialProofState":"n : Nat\nhn1 : Ne n 1\n⊢ Irreducible (HSub.hSub (HSub.hSub (HPow.hPow Polynomial.X n) Polynomial.X) 1)","decl":"theorem X_pow_sub_X_sub_one_irreducible (hn1 : n ≠ 1) : Irreducible (X ^ n - X - 1 : ℤ[X]) := by\n  by_cases hn0 : n = 0\n  · rw [hn0, pow_zero, sub_sub, add_comm, ← sub_sub, sub_self, zero_sub]\n    exact Associated.irreducible ⟨-1, mul_neg_one X⟩ irreducible_X\n  have hn : 1 < n := Nat.one_lt_iff_ne_zero_and_ne_one.mpr ⟨hn0, hn1⟩\n  have hp : (X ^ n - X - 1 : ℤ[X]) = trinomial 0 1 n (-1) (-1) 1 := by\n    simp only [trinomial, C_neg, C_1]; ring\n  rw [hp]\n  apply IsUnitTrinomial.irreducible_of_coprime' ⟨0, 1, n, zero_lt_one, hn, -1, -1, 1, rfl⟩\n  rintro z ⟨h1, h2⟩\n  apply X_pow_sub_X_sub_one_irreducible_aux (n := n) z\n  rw [trinomial_mirror zero_lt_one hn (-1 : ℤˣ).ne_zero (1 : ℤˣ).ne_zero] at h2\n  simp_rw [trinomial, aeval_add, aeval_mul, aeval_X_pow, aeval_C,\n    Units.val_neg, Units.val_one, map_neg, map_one] at h1 h2\n  replace h1 : z ^ n = z + 1 := by linear_combination h1\n  replace h2 := mul_eq_zero_of_left h2 z\n  rw [add_mul, add_mul, add_zero, mul_assoc (-1 : ℂ), ← pow_succ, Nat.sub_add_cancel hn.le] at h2\n  rw [h1] at h2 ⊢\n  exact ⟨rfl, by linear_combination -h2⟩\n\n"}
{"name":"Polynomial.X_pow_sub_X_sub_one_irreducible_rat","module":"Mathlib.RingTheory.Polynomial.Selmer","initialProofState":"n : Nat\nhn1 : Ne n 1\n⊢ Irreducible (HSub.hSub (HSub.hSub (HPow.hPow Polynomial.X n) Polynomial.X) 1)","decl":"theorem X_pow_sub_X_sub_one_irreducible_rat (hn1 : n ≠ 1) : Irreducible (X ^ n - X - 1 : ℚ[X]) := by\n  by_cases hn0 : n = 0\n  · rw [hn0, pow_zero, sub_sub, add_comm, ← sub_sub, sub_self, zero_sub]\n    exact Associated.irreducible ⟨-1, mul_neg_one X⟩ irreducible_X\n  have hp : (X ^ n - X - 1 : ℤ[X]) = trinomial 0 1 n (-1) (-1) 1 := by\n    simp only [trinomial, C_neg, C_1]; ring\n  have hn : 1 < n := Nat.one_lt_iff_ne_zero_and_ne_one.mpr ⟨hn0, hn1⟩\n  have h := (IsPrimitive.Int.irreducible_iff_irreducible_map_cast ?_).mp\n    (X_pow_sub_X_sub_one_irreducible hn1)\n  · rwa [Polynomial.map_sub, Polynomial.map_sub, Polynomial.map_pow, Polynomial.map_one,\n      Polynomial.map_X] at h\n  · exact hp.symm ▸ (trinomial_monic zero_lt_one hn).isPrimitive\n\n"}
