{"name":"Int.succ_eq_succ","module":"Mathlib.Data.Int.SuccPred","initialProofState":"⊢ Eq Order.succ Int.succ","decl":"@[simp]\ntheorem succ_eq_succ : Order.succ = succ :=\n  rfl\n\n"}
{"name":"Int.pred_eq_pred","module":"Mathlib.Data.Int.SuccPred","initialProofState":"⊢ Eq Order.pred Int.pred","decl":"@[simp]\ntheorem pred_eq_pred : Order.pred = pred :=\n  rfl\n\n"}
{"name":"Int.pos_iff_one_le","module":"Mathlib.Data.Int.SuccPred","initialProofState":"a : Int\n⊢ Iff (LT.lt 0 a) (LE.le 1 a)","decl":"@[deprecated Order.one_le_iff_pos (since := \"2024-09-04\")]\ntheorem pos_iff_one_le {a : ℤ} : 0 < a ↔ 1 ≤ a :=\n  Order.succ_le_iff.symm\n\n"}
{"name":"Int.succ_iterate","module":"Mathlib.Data.Int.SuccPred","initialProofState":"a : Int\nn : Nat\n⊢ Eq (Nat.iterate Int.succ n a) (HAdd.hAdd a ↑n)","decl":"@[deprecated Order.succ_iterate (since := \"2024-09-04\")]\nprotected theorem succ_iterate (a : ℤ) : ∀ n, succ^[n] a = a + n :=\n  Order.succ_iterate a\n\n"}
{"name":"Int.pred_iterate","module":"Mathlib.Data.Int.SuccPred","initialProofState":"a : Int\nn : Nat\n⊢ Eq (Nat.iterate Int.pred n a) (HSub.hSub a ↑n)","decl":"@[deprecated Order.pred_iterate (since := \"2024-09-04\")]\nprotected theorem pred_iterate (a : ℤ) : ∀ n, pred^[n] a = a - n :=\n  Order.pred_iterate a\n\n"}
{"name":"Int.instIsSuccArchimedean","module":"Mathlib.Data.Int.SuccPred","initialProofState":"⊢ IsSuccArchimedean Int","decl":"instance : IsSuccArchimedean ℤ :=\n  ⟨fun {a b} h =>\n    ⟨(b - a).toNat, by rw [succ_iterate, toNat_sub_of_le h, ← add_sub_assoc, add_sub_cancel_left]⟩⟩\n\n"}
{"name":"Int.instIsPredArchimedean","module":"Mathlib.Data.Int.SuccPred","initialProofState":"⊢ IsPredArchimedean Int","decl":"instance : IsPredArchimedean ℤ :=\n  ⟨fun {a b} h =>\n    ⟨(b - a).toNat, by rw [pred_iterate, toNat_sub_of_le h, sub_sub_cancel]⟩⟩\n\n"}
{"name":"Int.covBy_iff_succ_eq","module":"Mathlib.Data.Int.SuccPred","initialProofState":"m n : Int\n⊢ Iff (CovBy m n) (Eq (HAdd.hAdd m 1) n)","decl":"@[deprecated Order.covBy_iff_add_one_eq (since := \"2024-09-04\")]\nprotected theorem covBy_iff_succ_eq {m n : ℤ} : m ⋖ n ↔ m + 1 = n :=\n  succ_eq_iff_covBy.symm\n\n"}
{"name":"Int.sub_one_covBy","module":"Mathlib.Data.Int.SuccPred","initialProofState":"z : Int\n⊢ CovBy (HSub.hSub z 1) z","decl":"@[deprecated Order.sub_one_covBy (since := \"2024-09-04\")]\ntheorem sub_one_covBy (z : ℤ) : z - 1 ⋖ z :=\n  Order.sub_one_covBy z\n\n"}
{"name":"Int.covBy_add_one","module":"Mathlib.Data.Int.SuccPred","initialProofState":"z : Int\n⊢ CovBy z (HAdd.hAdd z 1)","decl":"@[deprecated Order.covBy_add_one (since := \"2024-09-04\")]\ntheorem covBy_add_one (z : ℤ) : z ⋖ z + 1 :=\n  Order.covBy_add_one z\n\n"}
{"name":"Int.natCast_covBy","module":"Mathlib.Data.Int.SuccPred","initialProofState":"a b : Nat\n⊢ Iff (CovBy ↑a ↑b) (CovBy a b)","decl":"@[simp, norm_cast]\ntheorem natCast_covBy {a b : ℕ} : (a : ℤ) ⋖ b ↔ a ⋖ b := by\n  rw [Order.covBy_iff_add_one_eq, Order.covBy_iff_add_one_eq]\n  exact Int.natCast_inj\n\n"}
{"name":"CovBy.intCast","module":"Mathlib.Data.Int.SuccPred","initialProofState":"a b : Nat\na✝ : CovBy a b\n⊢ CovBy ↑a ↑b","decl":"alias ⟨_, CovBy.intCast⟩ := Int.natCast_covBy\n"}
