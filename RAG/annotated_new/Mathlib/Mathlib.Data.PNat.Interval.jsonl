{"name":"PNat.Icc_eq_finset_subtype","module":"Mathlib.Data.PNat.Interval","initialProofState":"a b : PNat\n⊢ Eq (Finset.Icc a b) (Finset.subtype (fun n => LT.lt 0 n) (Finset.Icc ↑a ↑b))","decl":"theorem Icc_eq_finset_subtype : Icc a b = (Icc (a : ℕ) b).subtype fun n : ℕ => 0 < n :=\n  rfl\n\n"}
{"name":"PNat.Ico_eq_finset_subtype","module":"Mathlib.Data.PNat.Interval","initialProofState":"a b : PNat\n⊢ Eq (Finset.Ico a b) (Finset.subtype (fun n => LT.lt 0 n) (Finset.Ico ↑a ↑b))","decl":"theorem Ico_eq_finset_subtype : Ico a b = (Ico (a : ℕ) b).subtype fun n : ℕ => 0 < n :=\n  rfl\n\n"}
{"name":"PNat.Ioc_eq_finset_subtype","module":"Mathlib.Data.PNat.Interval","initialProofState":"a b : PNat\n⊢ Eq (Finset.Ioc a b) (Finset.subtype (fun n => LT.lt 0 n) (Finset.Ioc ↑a ↑b))","decl":"theorem Ioc_eq_finset_subtype : Ioc a b = (Ioc (a : ℕ) b).subtype fun n : ℕ => 0 < n :=\n  rfl\n\n"}
{"name":"PNat.Ioo_eq_finset_subtype","module":"Mathlib.Data.PNat.Interval","initialProofState":"a b : PNat\n⊢ Eq (Finset.Ioo a b) (Finset.subtype (fun n => LT.lt 0 n) (Finset.Ioo ↑a ↑b))","decl":"theorem Ioo_eq_finset_subtype : Ioo a b = (Ioo (a : ℕ) b).subtype fun n : ℕ => 0 < n :=\n  rfl\n\n"}
{"name":"PNat.uIcc_eq_finset_subtype","module":"Mathlib.Data.PNat.Interval","initialProofState":"a b : PNat\n⊢ Eq (Finset.uIcc a b) (Finset.subtype (fun n => LT.lt 0 n) (Finset.uIcc ↑a ↑b))","decl":"theorem uIcc_eq_finset_subtype : uIcc a b = (uIcc (a : ℕ) b).subtype fun n : ℕ => 0 < n := rfl\n\n"}
{"name":"PNat.map_subtype_embedding_Icc","module":"Mathlib.Data.PNat.Interval","initialProofState":"a b : PNat\n⊢ Eq (Finset.map (Function.Embedding.subtype fun n => LT.lt 0 n) (Finset.Icc a b)) (Finset.Icc ↑a ↑b)","decl":"theorem map_subtype_embedding_Icc : (Icc a b).map (Embedding.subtype _) = Icc ↑a ↑b :=\n  Finset.map_subtype_embedding_Icc _ _ _ fun _c _ _x hx _ hc _ => hc.trans_le hx\n\n"}
{"name":"PNat.map_subtype_embedding_Ico","module":"Mathlib.Data.PNat.Interval","initialProofState":"a b : PNat\n⊢ Eq (Finset.map (Function.Embedding.subtype fun n => LT.lt 0 n) (Finset.Ico a b)) (Finset.Ico ↑a ↑b)","decl":"theorem map_subtype_embedding_Ico : (Ico a b).map (Embedding.subtype _) = Ico ↑a ↑b :=\n  Finset.map_subtype_embedding_Ico _ _ _ fun _c _ _x hx _ hc _ => hc.trans_le hx\n\n"}
{"name":"PNat.map_subtype_embedding_Ioc","module":"Mathlib.Data.PNat.Interval","initialProofState":"a b : PNat\n⊢ Eq (Finset.map (Function.Embedding.subtype fun n => LT.lt 0 n) (Finset.Ioc a b)) (Finset.Ioc ↑a ↑b)","decl":"theorem map_subtype_embedding_Ioc : (Ioc a b).map (Embedding.subtype _) = Ioc ↑a ↑b :=\n  Finset.map_subtype_embedding_Ioc _ _ _ fun _c _ _x hx _ hc _ => hc.trans_le hx\n\n"}
{"name":"PNat.map_subtype_embedding_Ioo","module":"Mathlib.Data.PNat.Interval","initialProofState":"a b : PNat\n⊢ Eq (Finset.map (Function.Embedding.subtype fun n => LT.lt 0 n) (Finset.Ioo a b)) (Finset.Ioo ↑a ↑b)","decl":"theorem map_subtype_embedding_Ioo : (Ioo a b).map (Embedding.subtype _) = Ioo ↑a ↑b :=\n  Finset.map_subtype_embedding_Ioo _ _ _ fun _c _ _x hx _ hc _ => hc.trans_le hx\n\n"}
{"name":"PNat.map_subtype_embedding_uIcc","module":"Mathlib.Data.PNat.Interval","initialProofState":"a b : PNat\n⊢ Eq (Finset.map (Function.Embedding.subtype fun n => LT.lt 0 n) (Finset.uIcc a b)) (Finset.uIcc ↑a ↑b)","decl":"theorem map_subtype_embedding_uIcc : (uIcc a b).map (Embedding.subtype _) = uIcc ↑a ↑b :=\n  map_subtype_embedding_Icc _ _\n\n"}
{"name":"PNat.card_Icc","module":"Mathlib.Data.PNat.Interval","initialProofState":"a b : PNat\n⊢ Eq (Finset.Icc a b).card (HSub.hSub (HAdd.hAdd (↑b) 1) ↑a)","decl":"@[simp]\ntheorem card_Icc : #(Icc a b) = b + 1 - a := by\n  rw [← Nat.card_Icc, ← map_subtype_embedding_Icc, card_map]\n\n"}
{"name":"PNat.card_Ico","module":"Mathlib.Data.PNat.Interval","initialProofState":"a b : PNat\n⊢ Eq (Finset.Ico a b).card (HSub.hSub ↑b ↑a)","decl":"@[simp]\ntheorem card_Ico : #(Ico a b) = b - a := by\n  rw [← Nat.card_Ico, ← map_subtype_embedding_Ico, card_map]\n\n"}
{"name":"PNat.card_Ioc","module":"Mathlib.Data.PNat.Interval","initialProofState":"a b : PNat\n⊢ Eq (Finset.Ioc a b).card (HSub.hSub ↑b ↑a)","decl":"@[simp]\ntheorem card_Ioc : #(Ioc a b) = b - a := by\n  rw [← Nat.card_Ioc, ← map_subtype_embedding_Ioc, card_map]\n\n"}
{"name":"PNat.card_Ioo","module":"Mathlib.Data.PNat.Interval","initialProofState":"a b : PNat\n⊢ Eq (Finset.Ioo a b).card (HSub.hSub (HSub.hSub ↑b ↑a) 1)","decl":"@[simp]\ntheorem card_Ioo : #(Ioo a b) = b - a - 1 := by\n  rw [← Nat.card_Ioo, ← map_subtype_embedding_Ioo, card_map]\n\n"}
{"name":"PNat.card_uIcc","module":"Mathlib.Data.PNat.Interval","initialProofState":"a b : PNat\n⊢ Eq (Finset.uIcc a b).card (HAdd.hAdd (HSub.hSub ↑↑b ↑↑a).natAbs 1)","decl":"@[simp]\ntheorem card_uIcc : #(uIcc a b) = (b - a : ℤ).natAbs + 1 := by\n  rw [← Nat.card_uIcc, ← map_subtype_embedding_uIcc, card_map]\n\n"}
{"name":"PNat.card_fintype_Icc","module":"Mathlib.Data.PNat.Interval","initialProofState":"a b : PNat\n⊢ Eq (Fintype.card ↑(Set.Icc a b)) (HSub.hSub (HAdd.hAdd (↑b) 1) ↑a)","decl":"theorem card_fintype_Icc : Fintype.card (Set.Icc a b) = b + 1 - a := by\n  rw [← card_Icc, Fintype.card_ofFinset]\n\n"}
{"name":"PNat.card_fintype_Ico","module":"Mathlib.Data.PNat.Interval","initialProofState":"a b : PNat\n⊢ Eq (Fintype.card ↑(Set.Ico a b)) (HSub.hSub ↑b ↑a)","decl":"theorem card_fintype_Ico : Fintype.card (Set.Ico a b) = b - a := by\n  rw [← card_Ico, Fintype.card_ofFinset]\n\n"}
{"name":"PNat.card_fintype_Ioc","module":"Mathlib.Data.PNat.Interval","initialProofState":"a b : PNat\n⊢ Eq (Fintype.card ↑(Set.Ioc a b)) (HSub.hSub ↑b ↑a)","decl":"theorem card_fintype_Ioc : Fintype.card (Set.Ioc a b) = b - a := by\n  rw [← card_Ioc, Fintype.card_ofFinset]\n\n"}
{"name":"PNat.card_fintype_Ioo","module":"Mathlib.Data.PNat.Interval","initialProofState":"a b : PNat\n⊢ Eq (Fintype.card ↑(Set.Ioo a b)) (HSub.hSub (HSub.hSub ↑b ↑a) 1)","decl":"theorem card_fintype_Ioo : Fintype.card (Set.Ioo a b) = b - a - 1 := by\n  rw [← card_Ioo, Fintype.card_ofFinset]\n\n"}
{"name":"PNat.card_fintype_uIcc","module":"Mathlib.Data.PNat.Interval","initialProofState":"a b : PNat\n⊢ Eq (Fintype.card ↑(Set.uIcc a b)) (HAdd.hAdd (HSub.hSub ↑↑b ↑↑a).natAbs 1)","decl":"theorem card_fintype_uIcc : Fintype.card (Set.uIcc a b) = (b - a : ℤ).natAbs + 1 := by\n  rw [← card_uIcc, Fintype.card_ofFinset]\n\n"}
