{"name":"Filter.IsApproximateUnit.tendsto_mul_right","module":"Mathlib.Topology.ApproximateUnit","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\ninst✝ : Mul α\nl : Filter α\nself : l.IsApproximateUnit\nm : α\n⊢ Filter.Tendsto (fun x => HMul.hMul x m) l (nhds m)","decl":"/-- An *approximate unit* is a proper filter (i.e., `≠ ⊥`) such that multiplication on the left\n(and separately on the right) by `m : α` tends to `𝓝 m` along the filter. -/\nstructure Filter.IsApproximateUnit {α : Type*} [TopologicalSpace α] [Mul α]\n    (l : Filter α) : Prop where\n  /-- Multiplication on the left by `m` tends to `𝓝 m` along the filter. -/\n  tendsto_mul_left m : Tendsto (m * ·) l (𝓝 m)\n  /-- Multiplication on the right by `m` tends to `𝓝 m` along the filter. -/\n  tendsto_mul_right m : Tendsto (· * m) l (𝓝 m)\n  /-- The filter is not `⊥`. -/\n  protected [neBot : NeBot l]\n\n"}
{"name":"Filter.IsApproximateUnit.neBot","module":"Mathlib.Topology.ApproximateUnit","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\ninst✝ : Mul α\nl : Filter α\nself : l.IsApproximateUnit\n⊢ l.NeBot","decl":"/-- An *approximate unit* is a proper filter (i.e., `≠ ⊥`) such that multiplication on the left\n(and separately on the right) by `m : α` tends to `𝓝 m` along the filter. -/\nstructure Filter.IsApproximateUnit {α : Type*} [TopologicalSpace α] [Mul α]\n    (l : Filter α) : Prop where\n  /-- Multiplication on the left by `m` tends to `𝓝 m` along the filter. -/\n  tendsto_mul_left m : Tendsto (m * ·) l (𝓝 m)\n  /-- Multiplication on the right by `m` tends to `𝓝 m` along the filter. -/\n  tendsto_mul_right m : Tendsto (· * m) l (𝓝 m)\n  /-- The filter is not `⊥`. -/\n  protected [neBot : NeBot l]\n\n"}
{"name":"Filter.IsApproximateUnit.tendsto_mul_left","module":"Mathlib.Topology.ApproximateUnit","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\ninst✝ : Mul α\nl : Filter α\nself : l.IsApproximateUnit\nm : α\n⊢ Filter.Tendsto (fun x => HMul.hMul m x) l (nhds m)","decl":"/-- An *approximate unit* is a proper filter (i.e., `≠ ⊥`) such that multiplication on the left\n(and separately on the right) by `m : α` tends to `𝓝 m` along the filter. -/\nstructure Filter.IsApproximateUnit {α : Type*} [TopologicalSpace α] [Mul α]\n    (l : Filter α) : Prop where\n  /-- Multiplication on the left by `m` tends to `𝓝 m` along the filter. -/\n  tendsto_mul_left m : Tendsto (m * ·) l (𝓝 m)\n  /-- Multiplication on the right by `m` tends to `𝓝 m` along the filter. -/\n  tendsto_mul_right m : Tendsto (· * m) l (𝓝 m)\n  /-- The filter is not `⊥`. -/\n  protected [neBot : NeBot l]\n\n"}
{"name":"Filter.IsApproximateUnit.pure_one","module":"Mathlib.Topology.ApproximateUnit","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\ninst✝ : MulOneClass α\n⊢ (Pure.pure 1).IsApproximateUnit","decl":"variable (α) in\n/-- A unital magma with a topology and bornology has the trivial approximate unit `pure 1`. -/\nlemma pure_one : IsApproximateUnit (pure (1 : α))  where\n  tendsto_mul_left m := by simpa using tendsto_pure_nhds (m * ·) (1 : α)\n  tendsto_mul_right m := by simpa using tendsto_pure_nhds (· * m) (1 : α)\n\n"}
{"name":"Filter.IsApproximateUnit.mono","module":"Mathlib.Topology.ApproximateUnit","initialProofState":"α : Type u_1\ninst✝¹ : TopologicalSpace α\ninst✝ : MulOneClass α\nl l' : Filter α\nhl : l.IsApproximateUnit\nhle : LE.le l' l\nhl' : l'.NeBot\n⊢ l'.IsApproximateUnit","decl":"set_option linter.unusedVariables false in\n/-- If `l` is an approximate unit and `⊥ < l' ≤ l`, then `l'` is also an approximate unit. -/\nlemma mono {l l' : Filter α} (hl : l.IsApproximateUnit) (hle : l' ≤ l) [hl' : l'.NeBot] :\n    l'.IsApproximateUnit where\n  tendsto_mul_left m := hl.tendsto_mul_left m |>.mono_left hle\n  tendsto_mul_right m := hl.tendsto_mul_right m |>.mono_left hle\n\n"}
{"name":"Filter.IsApproximateUnit.nhds_one","module":"Mathlib.Topology.ApproximateUnit","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\ninst✝¹ : MulOneClass α\ninst✝ : ContinuousMul α\n⊢ (nhds 1).IsApproximateUnit","decl":"variable (α) in\n/-- In a topological unital magma, `𝓝 1` is an approximate unit. -/\nlemma nhds_one [ContinuousMul α] : IsApproximateUnit (𝓝 (1 : α)) where\n  tendsto_mul_left m := by simpa using tendsto_id (x := 𝓝 1) |>.const_mul m\n  tendsto_mul_right m := by simpa using tendsto_id (x := 𝓝 1) |>.mul_const m\n\n"}
{"name":"Filter.IsApproximateUnit.iff_neBot_and_le_nhds_one","module":"Mathlib.Topology.ApproximateUnit","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\ninst✝¹ : MulOneClass α\ninst✝ : ContinuousMul α\nl : Filter α\n⊢ Iff l.IsApproximateUnit (And l.NeBot (LE.le l (nhds 1)))","decl":"/-- In a topological unital magma, `𝓝 1` is the largest approximate unit. -/\nlemma iff_neBot_and_le_nhds_one [ContinuousMul α] {l : Filter α} :\n    IsApproximateUnit l ↔ l.NeBot ∧ l ≤ 𝓝 1 :=\n  ⟨fun hl ↦ ⟨hl.neBot, by simpa using hl.tendsto_mul_left 1⟩,\n    And.elim fun _ hl ↦ nhds_one α |>.mono hl⟩\n\n"}
{"name":"Filter.IsApproximateUnit.iff_le_nhds_one","module":"Mathlib.Topology.ApproximateUnit","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\ninst✝² : MulOneClass α\ninst✝¹ : ContinuousMul α\nl : Filter α\ninst✝ : l.NeBot\n⊢ Iff l.IsApproximateUnit (LE.le l (nhds 1))","decl":"/-- In a topological unital magma, `𝓝 1` is the largest approximate unit. -/\nlemma iff_le_nhds_one [ContinuousMul α] {l : Filter α} [l.NeBot] :\n    IsApproximateUnit l ↔ l ≤ 𝓝 1 := by\n  simpa [iff_neBot_and_le_nhds_one] using fun _ ↦ ‹_›\n\n\n"}
