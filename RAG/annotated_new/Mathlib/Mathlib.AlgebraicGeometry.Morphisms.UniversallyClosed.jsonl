{"name":"AlgebraicGeometry.universallyClosed_iff","module":"Mathlib.AlgebraicGeometry.Morphisms.UniversallyClosed","initialProofState":"X Y : AlgebraicGeometry.Scheme\nf : Quiver.Hom X Y\n‚ä¢ Iff (AlgebraicGeometry.UniversallyClosed f) ((AlgebraicGeometry.topologically @IsClosedMap).universally f)","decl":"/-- A morphism of schemes `f : X ‚ü∂ Y` is universally closed if the base change `X √ó[Y] Y' ‚ü∂ Y'`\nalong any morphism `Y' ‚ü∂ Y` is (topologically) a closed map.\n-/\n@[mk_iff]\nclass UniversallyClosed (f : X ‚ü∂ Y) : Prop where\n  out : universally (topologically @IsClosedMap) f\n\n"}
{"name":"AlgebraicGeometry.UniversallyClosed.out","module":"Mathlib.AlgebraicGeometry.Morphisms.UniversallyClosed","initialProofState":"X Y : AlgebraicGeometry.Scheme\nf : Quiver.Hom X Y\nself : AlgebraicGeometry.UniversallyClosed f\n‚ä¢ (AlgebraicGeometry.topologically @IsClosedMap).universally f","decl":"/-- A morphism of schemes `f : X ‚ü∂ Y` is universally closed if the base change `X √ó[Y] Y' ‚ü∂ Y'`\nalong any morphism `Y' ‚ü∂ Y` is (topologically) a closed map.\n-/\n@[mk_iff]\nclass UniversallyClosed (f : X ‚ü∂ Y) : Prop where\n  out : universally (topologically @IsClosedMap) f\n\n"}
{"name":"AlgebraicGeometry.Scheme.Hom.isClosedMap","module":"Mathlib.AlgebraicGeometry.Morphisms.UniversallyClosed","initialProofState":"X Y : AlgebraicGeometry.Scheme\nf : X.Hom Y\ninst‚úù : AlgebraicGeometry.UniversallyClosed f\n‚ä¢ IsClosedMap ‚áëf.base","decl":"lemma Scheme.Hom.isClosedMap {X Y : Scheme} (f : X.Hom Y) [UniversallyClosed f] :\n    IsClosedMap f.base := UniversallyClosed.out _ _ _ IsPullback.of_id_snd\n\n"}
{"name":"AlgebraicGeometry.universallyClosed_eq","module":"Mathlib.AlgebraicGeometry.Morphisms.UniversallyClosed","initialProofState":"‚ä¢ Eq (@AlgebraicGeometry.UniversallyClosed) (AlgebraicGeometry.topologically @IsClosedMap).universally","decl":"theorem universallyClosed_eq : @UniversallyClosed = universally (topologically @IsClosedMap) := by\n  ext X Y f; rw [universallyClosed_iff]\n\n"}
{"name":"AlgebraicGeometry.instUniversallyClosedOfIsClosedImmersion","module":"Mathlib.AlgebraicGeometry.Morphisms.UniversallyClosed","initialProofState":"X Y : AlgebraicGeometry.Scheme\nf : Quiver.Hom X Y\ninst‚úù : AlgebraicGeometry.IsClosedImmersion f\n‚ä¢ AlgebraicGeometry.UniversallyClosed f","decl":"instance (priority := 900) [IsClosedImmersion f] : UniversallyClosed f := by\n  rw [universallyClosed_eq]\n  intro X' Y' i‚ÇÅ i‚ÇÇ f' hf\n  have hf' : IsClosedImmersion f' :=\n    MorphismProperty.of_isPullback hf.flip inferInstance\n  exact hf'.base_closed.isClosedMap\n\n"}
{"name":"AlgebraicGeometry.universallyClosed_respectsIso","module":"Mathlib.AlgebraicGeometry.Morphisms.UniversallyClosed","initialProofState":"‚ä¢ CategoryTheory.MorphismProperty.RespectsIso @AlgebraicGeometry.UniversallyClosed","decl":"theorem universallyClosed_respectsIso : RespectsIso @UniversallyClosed :=\n  universallyClosed_eq.symm ‚ñ∏ universally_respectsIso (topologically @IsClosedMap)\n\n"}
{"name":"AlgebraicGeometry.universallyClosed_isStableUnderBaseChange","module":"Mathlib.AlgebraicGeometry.Morphisms.UniversallyClosed","initialProofState":"‚ä¢ CategoryTheory.MorphismProperty.IsStableUnderBaseChange @AlgebraicGeometry.UniversallyClosed","decl":"instance universallyClosed_isStableUnderBaseChange : IsStableUnderBaseChange @UniversallyClosed :=\n  universallyClosed_eq.symm ‚ñ∏ universally_isStableUnderBaseChange (topologically @IsClosedMap)\n\n"}
{"name":"AlgebraicGeometry.isClosedMap_isStableUnderComposition","module":"Mathlib.AlgebraicGeometry.Morphisms.UniversallyClosed","initialProofState":"‚ä¢ (AlgebraicGeometry.topologically @IsClosedMap).IsStableUnderComposition","decl":"instance isClosedMap_isStableUnderComposition :\n    IsStableUnderComposition (topologically @IsClosedMap) where\n  comp_mem f g hf hg := IsClosedMap.comp (f := f.base) (g := g.base) hg hf\n\n"}
{"name":"AlgebraicGeometry.universallyClosed_isStableUnderComposition","module":"Mathlib.AlgebraicGeometry.Morphisms.UniversallyClosed","initialProofState":"‚ä¢ CategoryTheory.MorphismProperty.IsStableUnderComposition @AlgebraicGeometry.UniversallyClosed","decl":"instance universallyClosed_isStableUnderComposition :\n    IsStableUnderComposition @UniversallyClosed := by\n  rw [universallyClosed_eq]\n  infer_instance\n\n"}
{"name":"AlgebraicGeometry.UniversallyClosed.of_comp_surjective","module":"Mathlib.AlgebraicGeometry.Morphisms.UniversallyClosed","initialProofState":"X Y Z : AlgebraicGeometry.Scheme\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\ninst‚úù¬π : AlgebraicGeometry.UniversallyClosed (CategoryTheory.CategoryStruct.comp f g)\ninst‚úù : AlgebraicGeometry.Surjective f\n‚ä¢ AlgebraicGeometry.UniversallyClosed g","decl":"lemma UniversallyClosed.of_comp_surjective {X Y Z : Scheme} (f : X ‚ü∂ Y) (g : Y ‚ü∂ Z)\n    [UniversallyClosed (f ‚â´ g)] [Surjective f] : UniversallyClosed g := by\n  constructor\n  intro X' Y' i‚ÇÅ i‚ÇÇ f' H\n  have := UniversallyClosed.out _ _ _ ((IsPullback.of_hasPullback i‚ÇÅ f).paste_horiz H)\n  exact IsClosedMap.of_comp_surjective (MorphismProperty.pullback_fst (P := @Surjective) _ _ ‚Äπ_‚Ä∫).1\n    (Scheme.Hom.continuous _) this\n\n"}
{"name":"AlgebraicGeometry.universallyClosedTypeComp","module":"Mathlib.AlgebraicGeometry.Morphisms.UniversallyClosed","initialProofState":"X Y Z : AlgebraicGeometry.Scheme\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\nhf : AlgebraicGeometry.UniversallyClosed f\nhg : AlgebraicGeometry.UniversallyClosed g\n‚ä¢ AlgebraicGeometry.UniversallyClosed (CategoryTheory.CategoryStruct.comp f g)","decl":"instance universallyClosedTypeComp {X Y Z : Scheme} (f : X ‚ü∂ Y) (g : Y ‚ü∂ Z)\n    [hf : UniversallyClosed f] [hg : UniversallyClosed g] : UniversallyClosed (f ‚â´ g) :=\n  comp_mem _ _ _ hf hg\n\n"}
{"name":"AlgebraicGeometry.instIsMultiplicativeSchemeUniversallyClosed","module":"Mathlib.AlgebraicGeometry.Morphisms.UniversallyClosed","initialProofState":"‚ä¢ CategoryTheory.MorphismProperty.IsMultiplicative @AlgebraicGeometry.UniversallyClosed","decl":"instance : MorphismProperty.IsMultiplicative @UniversallyClosed where\n  id_mem _ := inferInstance\n\n"}
{"name":"AlgebraicGeometry.universallyClosed_fst","module":"Mathlib.AlgebraicGeometry.Morphisms.UniversallyClosed","initialProofState":"X Y Z : AlgebraicGeometry.Scheme\nf : Quiver.Hom X Z\ng : Quiver.Hom Y Z\nhg : AlgebraicGeometry.UniversallyClosed g\n‚ä¢ AlgebraicGeometry.UniversallyClosed (CategoryTheory.Limits.pullback.fst f g)","decl":"instance universallyClosed_fst {X Y Z : Scheme} (f : X ‚ü∂ Z) (g : Y ‚ü∂ Z) [hg : UniversallyClosed g] :\n    UniversallyClosed (pullback.fst f g) :=\n  MorphismProperty.pullback_fst f g hg\n\n"}
{"name":"AlgebraicGeometry.universallyClosed_snd","module":"Mathlib.AlgebraicGeometry.Morphisms.UniversallyClosed","initialProofState":"X Y Z : AlgebraicGeometry.Scheme\nf : Quiver.Hom X Z\ng : Quiver.Hom Y Z\nhf : AlgebraicGeometry.UniversallyClosed f\n‚ä¢ AlgebraicGeometry.UniversallyClosed (CategoryTheory.Limits.pullback.snd f g)","decl":"instance universallyClosed_snd {X Y Z : Scheme} (f : X ‚ü∂ Z) (g : Y ‚ü∂ Z) [hf : UniversallyClosed f] :\n    UniversallyClosed (pullback.snd f g) :=\n  MorphismProperty.pullback_snd f g hf\n\n"}
{"name":"AlgebraicGeometry.universallyClosed_isLocalAtTarget","module":"Mathlib.AlgebraicGeometry.Morphisms.UniversallyClosed","initialProofState":"‚ä¢ AlgebraicGeometry.IsLocalAtTarget @AlgebraicGeometry.UniversallyClosed","decl":"instance universallyClosed_isLocalAtTarget : IsLocalAtTarget @UniversallyClosed := by\n  rw [universallyClosed_eq]\n  apply universally_isLocalAtTarget\n  intro X Y f Œπ U hU H\n  simp_rw [topologically, morphismRestrict_base] at H\n  exact (isClosedMap_iff_isClosedMap_of_iSup_eq_top hU).mpr H\n\n"}
{"name":"AlgebraicGeometry.compactSpace_of_universallyClosed","module":"Mathlib.AlgebraicGeometry.Morphisms.UniversallyClosed","initialProofState":"X : AlgebraicGeometry.Scheme\nK : Type u\ninst‚úù¬π : Field K\nf : Quiver.Hom X (AlgebraicGeometry.Spec (CommRingCat.of K))\ninst‚úù : AlgebraicGeometry.UniversallyClosed f\n‚ä¢ CompactSpace ‚Üë‚ÜëX.toPresheafedSpace","decl":"open Scheme.Pullback _root_.PrimeSpectrum MvPolynomial in\n/-- If `X` is universally closed over a field, then `X` is quasi-compact. -/\nlemma compactSpace_of_universallyClosed\n    {K} [Field K] (f : X ‚ü∂ Spec (.of K)) [UniversallyClosed f] : CompactSpace X := by\n  classical\n  let ùí∞ : X.OpenCover := X.affineCover\n  let U (i : ùí∞.J) : X.Opens := (ùí∞.map i).opensRange\n  let T : Scheme := Spec (.of <| MvPolynomial ùí∞.J K)\n  let q : T ‚ü∂ Spec (.of K) := Spec.map (CommRingCat.ofHom MvPolynomial.C)\n  let Ti (i : ùí∞.J) : T.Opens := basicOpen (MvPolynomial.X i)\n  let fT : pullback f q ‚ü∂ T := pullback.snd f q\n  let p : pullback f q ‚ü∂ X := pullback.fst f q\n  let Z : Set (pullback f q :) := (‚®Ü i, fT ‚Åª¬π·µÅ (Ti i) ‚äì p ‚Åª¬π·µÅ (U i) : (pullback f q).Opens)·∂ú\n  have hZ : IsClosed Z := by\n    simp only [Z, isClosed_compl_iff, Opens.coe_iSup, Opens.coe_inf, Opens.map_coe]\n    exact isOpen_iUnion fun i ‚Ü¶ (fT.continuous.1 _ (Ti i).2).inter (p.continuous.1 _ (U i).2)\n  let Zc : T.Opens := ‚ü®(fT.base '' Z)·∂ú, (fT.isClosedMap _ hZ).isOpen_compl‚ü©\n  let œà : MvPolynomial ùí∞.J K ‚Üí‚Çê[K] K := MvPolynomial.aeval (fun _ ‚Ü¶ 1)\n  let t : T := (Spec.map <| CommRingCat.ofHom œà.toRingHom).base default\n  have ht (i : ùí∞.J) : t ‚àà Ti i := show œà (.X i) ‚â† 0 by simp [œà]\n  have htZc : t ‚àà Zc := by\n    intro ‚ü®z, hz, hzt‚ü©\n    suffices ‚àÉ i, fT.base z ‚àà Ti i ‚àß p.base z ‚àà U i from hz (by simpa)\n    exact ‚ü®ùí∞.f (p.base z), hzt ‚ñ∏ ht _, by simpa [U] using ùí∞.covers (p.base z)‚ü©\n  obtain ‚ü®U', ‚ü®g, rfl‚ü©, htU', hU'le‚ü© := Opens.isBasis_iff_nbhd.mp isBasis_basic_opens htZc\n  let œÉ : Finset ùí∞.J := MvPolynomial.vars g\n  let œÜ : MvPolynomial ùí∞.J K ‚Üí+* MvPolynomial ùí∞.J K :=\n    (MvPolynomial.aeval fun i : ùí∞.J ‚Ü¶ if i ‚àà œÉ then MvPolynomial.X i else 0).toRingHom\n  let t' : T := (Spec.map (CommRingCat.ofHom œÜ)).base t\n  have ht'g : t' ‚àà PrimeSpectrum.basicOpen g :=\n    show œÜ g ‚àâ t.asIdeal from (show œÜ g = g from aeval_ite_mem_eq_self g subset_rfl).symm ‚ñ∏ htU'\n  have h : t' ‚àâ fT.base '' Z := hU'le ht'g\n  suffices ‚ãÉ i ‚àà œÉ, (U i).1 = Set.univ from\n    ‚ü®this ‚ñ∏ Finset.isCompact_biUnion _ fun i _ ‚Ü¶ isCompact_range (ùí∞.map i).continuous‚ü©\n  rw [Set.iUnion‚ÇÇ_eq_univ_iff]\n  contrapose! h\n  obtain ‚ü®x, hx‚ü© := h\n  obtain ‚ü®z, rfl, hzr‚ü© := exists_preimage_pullback x t' (Subsingleton.elim (f.base x) (q.base t'))\n  suffices ‚àÄ i, t ‚àà (Ti i).comap (comap œÜ) ‚Üí p.base z ‚àâ U i from ‚ü®z, by simpa [Z, p, fT, hzr], hzr‚ü©\n  intro i hi‚ÇÅ hi‚ÇÇ\n  rw [comap_basicOpen, show œÜ (.X i) = 0 by simpa [œÜ] using (hx i ¬∑ hi‚ÇÇ), basicOpen_zero] at hi‚ÇÅ\n  cases hi‚ÇÅ\n\n"}
{"name":"AlgebraicGeometry.Scheme.Hom.isProperMap","module":"Mathlib.AlgebraicGeometry.Morphisms.UniversallyClosed","initialProofState":"X Y : AlgebraicGeometry.Scheme\nf : X.Hom Y\ninst‚úù : AlgebraicGeometry.UniversallyClosed f\n‚ä¢ IsProperMap ‚áëf.base","decl":"@[stacks 04XU]\nlemma Scheme.Hom.isProperMap (f : X.Hom Y) [UniversallyClosed f] : IsProperMap f.base := by\n  rw [isProperMap_iff_isClosedMap_and_compact_fibers]\n  refine ‚ü®Scheme.Hom.continuous f, ?_, ?_‚ü©\n  ¬∑ exact MorphismProperty.universally_le (P := topologically @IsClosedMap) _ UniversallyClosed.out\n  ¬∑ intro y\n    have := compactSpace_of_universallyClosed (pullback.snd f (Y.fromSpecResidueField y))\n    rw [‚Üê Scheme.range_fromSpecResidueField, ‚Üê Scheme.Pullback.range_fst]\n    exact isCompact_range (Scheme.Hom.continuous _)\n\n"}
{"name":"AlgebraicGeometry.instQuasiCompactOfUniversallyClosed","module":"Mathlib.AlgebraicGeometry.Morphisms.UniversallyClosed","initialProofState":"X Y : AlgebraicGeometry.Scheme\nf : Quiver.Hom X Y\ninst‚úù : AlgebraicGeometry.UniversallyClosed f\n‚ä¢ AlgebraicGeometry.QuasiCompact f","decl":"instance (priority := 900) [UniversallyClosed f] : QuasiCompact f where\n  isCompact_preimage _ _ := f.isProperMap.isCompact_preimage\n\n"}
{"name":"AlgebraicGeometry.universallyClosed_eq_universallySpecializing","module":"Mathlib.AlgebraicGeometry.Morphisms.UniversallyClosed","initialProofState":"‚ä¢ Eq (@AlgebraicGeometry.UniversallyClosed) (Min.min (AlgebraicGeometry.topologically @SpecializingMap).universally @AlgebraicGeometry.QuasiCompact)","decl":"lemma universallyClosed_eq_universallySpecializing :\n    @UniversallyClosed = (topologically @SpecializingMap).universally ‚äì @QuasiCompact := by\n  rw [‚Üê universally_eq_iff (P := @QuasiCompact).mpr inferInstance, ‚Üê universally_inf]\n  apply le_antisymm\n  ¬∑ rw [‚Üê universally_eq_iff (P := @UniversallyClosed).mpr inferInstance]\n    exact universally_mono fun X Y f H ‚Ü¶ ‚ü®f.isClosedMap.specializingMap, inferInstance‚ü©\n  ¬∑ rw [universallyClosed_eq]\n    exact universally_mono fun X Y f ‚ü®h‚ÇÅ, h‚ÇÇ‚ü© ‚Ü¶ (isClosedMap_iff_specializingMap _).mpr h‚ÇÅ\n\n"}
