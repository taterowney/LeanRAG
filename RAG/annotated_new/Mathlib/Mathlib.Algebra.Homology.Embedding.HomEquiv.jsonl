{"name":"ComplexShape.Embedding.liftExtend.f_eq","module":"Mathlib.Algebra.Homology.Embedding.HomEquiv","initialProofState":"ι : Type u_1\nι' : Type u_2\nc : ComplexShape ι\nc' : ComplexShape ι'\ne : c.Embedding c'\nC : Type u_3\ninst✝³ : CategoryTheory.Category.{u_4, u_3} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\ninst✝¹ : CategoryTheory.Limits.HasZeroObject C\nK : HomologicalComplex C c'\nL : HomologicalComplex C c\ninst✝ : e.IsRelIff\nφ : Quiver.Hom (K.restriction e) L\ni' : ι'\ni : ι\nhi : Eq (e.f i) i'\n⊢ Eq (ComplexShape.Embedding.liftExtend.f φ i') (CategoryTheory.CategoryStruct.comp (K.restrictionXIso e hi).inv (CategoryTheory.CategoryStruct.comp (φ.f i) (L.extendXIso e hi).inv))","decl":"lemma f_eq {i' : ι'} {i : ι} (hi : e.f i = i') :\n    f φ i' = (K.restrictionXIso e hi).inv ≫ φ.f i ≫ (L.extendXIso e hi).inv := by\n  have hi' : ∃ k, e.f k = i' := ⟨i, hi⟩\n  have : hi'.choose = i := e.injective_f (by rw [hi'.choose_spec, hi])\n  dsimp [f]\n  rw [dif_pos ⟨i, hi⟩]\n  subst this\n  rfl\n\n"}
{"name":"ComplexShape.Embedding.liftExtend.comm","module":"Mathlib.Algebra.Homology.Embedding.HomEquiv","initialProofState":"ι : Type u_1\nι' : Type u_2\nc : ComplexShape ι\nc' : ComplexShape ι'\ne : c.Embedding c'\nC : Type u_3\ninst✝³ : CategoryTheory.Category.{u_4, u_3} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\ninst✝¹ : CategoryTheory.Limits.HasZeroObject C\nK : HomologicalComplex C c'\nL : HomologicalComplex C c\ninst✝ : e.IsRelIff\nφ : Quiver.Hom (K.restriction e) L\nhφ : e.HasLift φ\ni' j' : ι'\n⊢ Eq (CategoryTheory.CategoryStruct.comp (ComplexShape.Embedding.liftExtend.f φ i') ((L.extend e).d i' j')) (CategoryTheory.CategoryStruct.comp (K.d i' j') (ComplexShape.Embedding.liftExtend.f φ j'))","decl":"@[reassoc (attr := simp)]\nlemma comm (hφ : e.HasLift φ) (i' j' : ι') :\n    f φ i' ≫ (L.extend e).d i' j' = K.d i' j' ≫ f φ j' := by\n  by_cases hij' : c'.Rel i' j'\n  · by_cases hi' : ∃ i, e.f i = i'\n    · obtain ⟨i, hi⟩ := hi'\n      rw [f_eq φ hi]\n      by_cases hj' : ∃ j, e.f j = j'\n      · obtain ⟨j, hj⟩ := hj'\n        rw [f_eq φ hj, L.extend_d_eq e hi hj]\n        subst hi hj\n        simp [HomologicalComplex.restrictionXIso]\n      · apply (L.isZero_extend_X e j' (by simpa using hj')).eq_of_tgt\n    · have : (L.extend e).d i' j' = 0 := by\n        apply (L.isZero_extend_X e i' (by simpa using hi')).eq_of_src\n      rw [this, comp_zero]\n      by_cases hj' : ∃ j, e.f j = j'\n      · obtain ⟨j, rfl⟩ := hj'\n        rw [f_eq φ rfl]\n        dsimp [restrictionXIso]\n        rw [id_comp, reassoc_of% (hφ j (e.boundaryGE hij'\n          (by simpa using hi')) i' hij'), zero_comp]\n      · have : f φ j' = 0 := by\n          apply (L.isZero_extend_X e j' (by simpa using hj')).eq_of_tgt\n        rw [this, comp_zero]\n  · simp [HomologicalComplex.shape _ _ _ hij']\n\n"}
{"name":"ComplexShape.Embedding.liftExtend.comm_assoc","module":"Mathlib.Algebra.Homology.Embedding.HomEquiv","initialProofState":"ι : Type u_1\nι' : Type u_2\nc : ComplexShape ι\nc' : ComplexShape ι'\ne : c.Embedding c'\nC : Type u_3\ninst✝³ : CategoryTheory.Category.{u_4, u_3} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\ninst✝¹ : CategoryTheory.Limits.HasZeroObject C\nK : HomologicalComplex C c'\nL : HomologicalComplex C c\ninst✝ : e.IsRelIff\nφ : Quiver.Hom (K.restriction e) L\nhφ : e.HasLift φ\ni' j' : ι'\nZ : C\nh : Quiver.Hom ((L.extend e).X j') Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (ComplexShape.Embedding.liftExtend.f φ i') (CategoryTheory.CategoryStruct.comp ((L.extend e).d i' j') h)) (CategoryTheory.CategoryStruct.comp (K.d i' j') (CategoryTheory.CategoryStruct.comp (ComplexShape.Embedding.liftExtend.f φ j') h))","decl":"@[reassoc (attr := simp)]\nlemma comm (hφ : e.HasLift φ) (i' j' : ι') :\n    f φ i' ≫ (L.extend e).d i' j' = K.d i' j' ≫ f φ j' := by\n  by_cases hij' : c'.Rel i' j'\n  · by_cases hi' : ∃ i, e.f i = i'\n    · obtain ⟨i, hi⟩ := hi'\n      rw [f_eq φ hi]\n      by_cases hj' : ∃ j, e.f j = j'\n      · obtain ⟨j, hj⟩ := hj'\n        rw [f_eq φ hj, L.extend_d_eq e hi hj]\n        subst hi hj\n        simp [HomologicalComplex.restrictionXIso]\n      · apply (L.isZero_extend_X e j' (by simpa using hj')).eq_of_tgt\n    · have : (L.extend e).d i' j' = 0 := by\n        apply (L.isZero_extend_X e i' (by simpa using hi')).eq_of_src\n      rw [this, comp_zero]\n      by_cases hj' : ∃ j, e.f j = j'\n      · obtain ⟨j, rfl⟩ := hj'\n        rw [f_eq φ rfl]\n        dsimp [restrictionXIso]\n        rw [id_comp, reassoc_of% (hφ j (e.boundaryGE hij'\n          (by simpa using hi')) i' hij'), zero_comp]\n      · have : f φ j' = 0 := by\n          apply (L.isZero_extend_X e j' (by simpa using hj')).eq_of_tgt\n        rw [this, comp_zero]\n  · simp [HomologicalComplex.shape _ _ _ hij']\n\n"}
{"name":"ComplexShape.Embedding.liftExtend_f","module":"Mathlib.Algebra.Homology.Embedding.HomEquiv","initialProofState":"ι : Type u_1\nι' : Type u_2\nc : ComplexShape ι\nc' : ComplexShape ι'\ne : c.Embedding c'\nC : Type u_3\ninst✝³ : CategoryTheory.Category.{u_4, u_3} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\ninst✝¹ : CategoryTheory.Limits.HasZeroObject C\nK : HomologicalComplex C c'\nL : HomologicalComplex C c\ninst✝ : e.IsRelIff\nφ : Quiver.Hom (K.restriction e) L\nhφ : e.HasLift φ\ni' : ι'\ni : ι\nhi : Eq (e.f i) i'\n⊢ Eq ((e.liftExtend φ hφ).f i') (CategoryTheory.CategoryStruct.comp (K.restrictionXIso e hi).inv (CategoryTheory.CategoryStruct.comp (φ.f i) (L.extendXIso e hi).inv))","decl":"lemma liftExtend_f :\n    (e.liftExtend φ hφ).f i' = (K.restrictionXIso e hi).inv ≫ φ.f i ≫\n      (L.extendXIso e hi).inv := by\n  apply liftExtend.f_eq\n\n"}
{"name":"ComplexShape.Embedding.isIso_liftExtend_f_iff","module":"Mathlib.Algebra.Homology.Embedding.HomEquiv","initialProofState":"ι : Type u_1\nι' : Type u_2\nc : ComplexShape ι\nc' : ComplexShape ι'\ne : c.Embedding c'\nC : Type u_3\ninst✝³ : CategoryTheory.Category.{u_4, u_3} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\ninst✝¹ : CategoryTheory.Limits.HasZeroObject C\nK : HomologicalComplex C c'\nL : HomologicalComplex C c\ninst✝ : e.IsRelIff\nφ : Quiver.Hom (K.restriction e) L\nhφ : e.HasLift φ\ni' : ι'\ni : ι\nhi : Eq (e.f i) i'\n⊢ Iff (CategoryTheory.IsIso ((e.liftExtend φ hφ).f i')) (CategoryTheory.IsIso (φ.f i))","decl":"lemma isIso_liftExtend_f_iff (hi : e.f i = i') :\n    IsIso ((e.liftExtend φ hφ).f i') ↔ IsIso (φ.f i) :=\n  (MorphismProperty.isomorphisms C).arrow_mk_iso_iff (e.liftExtendfArrowIso φ hφ hi)\n\n"}
{"name":"ComplexShape.Embedding.mono_liftExtend_f_iff","module":"Mathlib.Algebra.Homology.Embedding.HomEquiv","initialProofState":"ι : Type u_1\nι' : Type u_2\nc : ComplexShape ι\nc' : ComplexShape ι'\ne : c.Embedding c'\nC : Type u_3\ninst✝³ : CategoryTheory.Category.{u_4, u_3} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\ninst✝¹ : CategoryTheory.Limits.HasZeroObject C\nK : HomologicalComplex C c'\nL : HomologicalComplex C c\ninst✝ : e.IsRelIff\nφ : Quiver.Hom (K.restriction e) L\nhφ : e.HasLift φ\ni' : ι'\ni : ι\nhi : Eq (e.f i) i'\n⊢ Iff (CategoryTheory.Mono ((e.liftExtend φ hφ).f i')) (CategoryTheory.Mono (φ.f i))","decl":"lemma mono_liftExtend_f_iff (hi : e.f i = i') :\n    Mono ((e.liftExtend φ hφ).f i') ↔ Mono (φ.f i) :=\n  (MorphismProperty.monomorphisms C).arrow_mk_iso_iff (e.liftExtendfArrowIso φ hφ hi)\n\n"}
{"name":"ComplexShape.Embedding.epi_liftExtend_f_iff","module":"Mathlib.Algebra.Homology.Embedding.HomEquiv","initialProofState":"ι : Type u_1\nι' : Type u_2\nc : ComplexShape ι\nc' : ComplexShape ι'\ne : c.Embedding c'\nC : Type u_3\ninst✝³ : CategoryTheory.Category.{u_4, u_3} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\ninst✝¹ : CategoryTheory.Limits.HasZeroObject C\nK : HomologicalComplex C c'\nL : HomologicalComplex C c\ninst✝ : e.IsRelIff\nφ : Quiver.Hom (K.restriction e) L\nhφ : e.HasLift φ\ni' : ι'\ni : ι\nhi : Eq (e.f i) i'\n⊢ Iff (CategoryTheory.Epi ((e.liftExtend φ hφ).f i')) (CategoryTheory.Epi (φ.f i))","decl":"lemma epi_liftExtend_f_iff (hi : e.f i = i') :\n    Epi ((e.liftExtend φ hφ).f i') ↔ Epi (φ.f i) :=\n  (MorphismProperty.epimorphisms C).arrow_mk_iso_iff (e.liftExtendfArrowIso φ hφ hi)\n\n"}
{"name":"ComplexShape.Embedding.homRestrict.f_eq","module":"Mathlib.Algebra.Homology.Embedding.HomEquiv","initialProofState":"ι : Type u_1\nι' : Type u_2\nc : ComplexShape ι\nc' : ComplexShape ι'\ne : c.Embedding c'\nC : Type u_3\ninst✝³ : CategoryTheory.Category.{u_4, u_3} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\ninst✝¹ : CategoryTheory.Limits.HasZeroObject C\nK : HomologicalComplex C c'\nL : HomologicalComplex C c\ninst✝ : e.IsRelIff\nψ : Quiver.Hom K (L.extend e)\ni : ι\ni' : ι'\nh : Eq (e.f i) i'\n⊢ Eq (ComplexShape.Embedding.homRestrict.f ψ i) (CategoryTheory.CategoryStruct.comp (K.restrictionXIso e h).hom (CategoryTheory.CategoryStruct.comp (ψ.f i') (L.extendXIso e h).hom))","decl":"lemma f_eq {i : ι} {i' : ι'} (h : e.f i = i') :\n    f ψ i = (K.restrictionXIso e h).hom ≫ ψ.f i' ≫ (L.extendXIso e h).hom := by\n  subst h\n  simp [f, restrictionXIso]\n\n"}
{"name":"ComplexShape.Embedding.homRestrict.comm","module":"Mathlib.Algebra.Homology.Embedding.HomEquiv","initialProofState":"ι : Type u_1\nι' : Type u_2\nc : ComplexShape ι\nc' : ComplexShape ι'\ne : c.Embedding c'\nC : Type u_3\ninst✝³ : CategoryTheory.Category.{u_4, u_3} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\ninst✝¹ : CategoryTheory.Limits.HasZeroObject C\nK : HomologicalComplex C c'\nL : HomologicalComplex C c\ninst✝ : e.IsRelIff\nψ : Quiver.Hom K (L.extend e)\ni j : ι\n⊢ Eq (CategoryTheory.CategoryStruct.comp (ComplexShape.Embedding.homRestrict.f ψ i) (L.d i j)) (CategoryTheory.CategoryStruct.comp (K.d (e.f i) (e.f j)) (ComplexShape.Embedding.homRestrict.f ψ j))","decl":"@[reassoc (attr := simp)]\nlemma comm (i j : ι) :\n    f ψ i ≫ L.d i j = K.d (e.f i) (e.f j) ≫ f ψ j := by\n  dsimp [f]\n  simp only [assoc, ← ψ.comm_assoc, L.extend_d_eq e rfl rfl, Iso.inv_hom_id, comp_id]\n\n"}
{"name":"ComplexShape.Embedding.homRestrict.comm_assoc","module":"Mathlib.Algebra.Homology.Embedding.HomEquiv","initialProofState":"ι : Type u_1\nι' : Type u_2\nc : ComplexShape ι\nc' : ComplexShape ι'\ne : c.Embedding c'\nC : Type u_3\ninst✝³ : CategoryTheory.Category.{u_4, u_3} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\ninst✝¹ : CategoryTheory.Limits.HasZeroObject C\nK : HomologicalComplex C c'\nL : HomologicalComplex C c\ninst✝ : e.IsRelIff\nψ : Quiver.Hom K (L.extend e)\ni j : ι\nZ : C\nh : Quiver.Hom (L.X j) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (ComplexShape.Embedding.homRestrict.f ψ i) (CategoryTheory.CategoryStruct.comp (L.d i j) h)) (CategoryTheory.CategoryStruct.comp (K.d (e.f i) (e.f j)) (CategoryTheory.CategoryStruct.comp (ComplexShape.Embedding.homRestrict.f ψ j) h))","decl":"@[reassoc (attr := simp)]\nlemma comm (i j : ι) :\n    f ψ i ≫ L.d i j = K.d (e.f i) (e.f j) ≫ f ψ j := by\n  dsimp [f]\n  simp only [assoc, ← ψ.comm_assoc, L.extend_d_eq e rfl rfl, Iso.inv_hom_id, comp_id]\n\n"}
{"name":"ComplexShape.Embedding.homRestrict_f","module":"Mathlib.Algebra.Homology.Embedding.HomEquiv","initialProofState":"ι : Type u_1\nι' : Type u_2\nc : ComplexShape ι\nc' : ComplexShape ι'\ne : c.Embedding c'\nC : Type u_3\ninst✝³ : CategoryTheory.Category.{u_4, u_3} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\ninst✝¹ : CategoryTheory.Limits.HasZeroObject C\nK : HomologicalComplex C c'\nL : HomologicalComplex C c\ninst✝ : e.IsRelIff\nψ : Quiver.Hom K (L.extend e)\ni : ι\ni' : ι'\nh : Eq (e.f i) i'\n⊢ Eq ((e.homRestrict ψ).f i) (CategoryTheory.CategoryStruct.comp (K.restrictionXIso e h).hom (CategoryTheory.CategoryStruct.comp (ψ.f i') (L.extendXIso e h).hom))","decl":"lemma homRestrict_f (ψ : K ⟶ L.extend e) {i : ι} {i' : ι'} (h : e.f i = i') :\n    (e.homRestrict ψ).f i = (K.restrictionXIso e h).hom ≫ ψ.f i' ≫ (L.extendXIso e h).hom :=\n  homRestrict.f_eq ψ h\n\n"}
{"name":"ComplexShape.Embedding.homRestrict_hasLift","module":"Mathlib.Algebra.Homology.Embedding.HomEquiv","initialProofState":"ι : Type u_1\nι' : Type u_2\nc : ComplexShape ι\nc' : ComplexShape ι'\ne : c.Embedding c'\nC : Type u_3\ninst✝³ : CategoryTheory.Category.{u_4, u_3} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\ninst✝¹ : CategoryTheory.Limits.HasZeroObject C\nK : HomologicalComplex C c'\nL : HomologicalComplex C c\ninst✝ : e.IsRelIff\nψ : Quiver.Hom K (L.extend e)\n⊢ e.HasLift (e.homRestrict ψ)","decl":"lemma homRestrict_hasLift (ψ : K ⟶ L.extend e) :\n    e.HasLift (e.homRestrict ψ) := by\n  intro j hj i' hij'\n  have : (L.extend e).d i' (e.f j) = 0 := by\n    apply (L.isZero_extend_X e i' (hj.not_mem hij')).eq_of_src\n  dsimp [homRestrict]\n  rw [homRestrict.f_eq ψ rfl, restrictionXIso, eqToIso_refl, Iso.refl_hom, id_comp,\n    ← ψ.comm_assoc, this, zero_comp, comp_zero]\n\n"}
{"name":"ComplexShape.Embedding.liftExtend_homRestrict","module":"Mathlib.Algebra.Homology.Embedding.HomEquiv","initialProofState":"ι : Type u_1\nι' : Type u_2\nc : ComplexShape ι\nc' : ComplexShape ι'\ne : c.Embedding c'\nC : Type u_3\ninst✝³ : CategoryTheory.Category.{u_4, u_3} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\ninst✝¹ : CategoryTheory.Limits.HasZeroObject C\nK : HomologicalComplex C c'\nL : HomologicalComplex C c\ninst✝ : e.IsRelIff\nψ : Quiver.Hom K (L.extend e)\n⊢ Eq (e.liftExtend (e.homRestrict ψ) ⋯) ψ","decl":"@[simp]\nlemma liftExtend_homRestrict (ψ : K ⟶ L.extend e) :\n    e.liftExtend (e.homRestrict ψ) (e.homRestrict_hasLift ψ) = ψ := by\n  ext i'\n  by_cases hi' : ∃ i, e.f i = i'\n  · obtain ⟨i, rfl⟩ := hi'\n    simp [e.homRestrict_f _ rfl, e.liftExtend_f _ _ rfl]\n  · apply (L.isZero_extend_X e i' (by simpa using hi')).eq_of_tgt\n\n"}
{"name":"ComplexShape.Embedding.homRestrict_liftExtend","module":"Mathlib.Algebra.Homology.Embedding.HomEquiv","initialProofState":"ι : Type u_1\nι' : Type u_2\nc : ComplexShape ι\nc' : ComplexShape ι'\ne : c.Embedding c'\nC : Type u_3\ninst✝³ : CategoryTheory.Category.{u_4, u_3} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\ninst✝¹ : CategoryTheory.Limits.HasZeroObject C\nK : HomologicalComplex C c'\nL : HomologicalComplex C c\ninst✝ : e.IsRelIff\nφ : Quiver.Hom (K.restriction e) L\nhφ : e.HasLift φ\n⊢ Eq (e.homRestrict (e.liftExtend φ hφ)) φ","decl":"@[simp]\nlemma homRestrict_liftExtend (φ : K.restriction e ⟶ L) (hφ : e.HasLift φ) :\n    e.homRestrict (e.liftExtend φ hφ) = φ := by\n  ext i\n  simp [e.homRestrict_f _ rfl, e.liftExtend_f _ _ rfl]\n\n"}
{"name":"ComplexShape.Embedding.homRestrict_precomp","module":"Mathlib.Algebra.Homology.Embedding.HomEquiv","initialProofState":"ι : Type u_1\nι' : Type u_2\nc : ComplexShape ι\nc' : ComplexShape ι'\ne : c.Embedding c'\nC : Type u_3\ninst✝³ : CategoryTheory.Category.{u_4, u_3} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\ninst✝¹ : CategoryTheory.Limits.HasZeroObject C\nK K' : HomologicalComplex C c'\nL : HomologicalComplex C c\ninst✝ : e.IsRelIff\nα : Quiver.Hom K' K\nψ : Quiver.Hom K (L.extend e)\n⊢ Eq (e.homRestrict (CategoryTheory.CategoryStruct.comp α ψ)) (CategoryTheory.CategoryStruct.comp (HomologicalComplex.restrictionMap α e) (e.homRestrict ψ))","decl":"@[reassoc]\nlemma homRestrict_precomp (α : K' ⟶ K) (ψ : K ⟶ L.extend e) :\n    e.homRestrict (α ≫ ψ) = restrictionMap α e ≫ e.homRestrict ψ := by\n  ext i\n  simp [homRestrict_f _ _ rfl, restrictionXIso]\n\n"}
{"name":"ComplexShape.Embedding.homRestrict_precomp_assoc","module":"Mathlib.Algebra.Homology.Embedding.HomEquiv","initialProofState":"ι : Type u_1\nι' : Type u_2\nc : ComplexShape ι\nc' : ComplexShape ι'\ne : c.Embedding c'\nC : Type u_3\ninst✝³ : CategoryTheory.Category.{u_4, u_3} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\ninst✝¹ : CategoryTheory.Limits.HasZeroObject C\nK K' : HomologicalComplex C c'\nL : HomologicalComplex C c\ninst✝ : e.IsRelIff\nα : Quiver.Hom K' K\nψ : Quiver.Hom K (L.extend e)\nZ : HomologicalComplex C c\nh : Quiver.Hom L Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (e.homRestrict (CategoryTheory.CategoryStruct.comp α ψ)) h) (CategoryTheory.CategoryStruct.comp (HomologicalComplex.restrictionMap α e) (CategoryTheory.CategoryStruct.comp (e.homRestrict ψ) h))","decl":"@[reassoc]\nlemma homRestrict_precomp (α : K' ⟶ K) (ψ : K ⟶ L.extend e) :\n    e.homRestrict (α ≫ ψ) = restrictionMap α e ≫ e.homRestrict ψ := by\n  ext i\n  simp [homRestrict_f _ _ rfl, restrictionXIso]\n\n"}
{"name":"ComplexShape.Embedding.homRestrict_comp_extendMap","module":"Mathlib.Algebra.Homology.Embedding.HomEquiv","initialProofState":"ι : Type u_1\nι' : Type u_2\nc : ComplexShape ι\nc' : ComplexShape ι'\ne : c.Embedding c'\nC : Type u_3\ninst✝³ : CategoryTheory.Category.{u_4, u_3} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\ninst✝¹ : CategoryTheory.Limits.HasZeroObject C\nK : HomologicalComplex C c'\nL L' : HomologicalComplex C c\ninst✝ : e.IsRelIff\nψ : Quiver.Hom K (L.extend e)\nβ : Quiver.Hom L L'\n⊢ Eq (e.homRestrict (CategoryTheory.CategoryStruct.comp ψ (HomologicalComplex.extendMap β e))) (CategoryTheory.CategoryStruct.comp (e.homRestrict ψ) β)","decl":"@[reassoc]\nlemma homRestrict_comp_extendMap (ψ : K ⟶ L.extend e) (β : L ⟶ L') :\n    e.homRestrict (ψ ≫ extendMap β e) =\n      e.homRestrict ψ ≫ β := by\n  ext i\n  simp [homRestrict_f _ _ rfl, extendMap_f β e rfl]\n\n"}
{"name":"ComplexShape.Embedding.homRestrict_comp_extendMap_assoc","module":"Mathlib.Algebra.Homology.Embedding.HomEquiv","initialProofState":"ι : Type u_1\nι' : Type u_2\nc : ComplexShape ι\nc' : ComplexShape ι'\ne : c.Embedding c'\nC : Type u_3\ninst✝³ : CategoryTheory.Category.{u_4, u_3} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\ninst✝¹ : CategoryTheory.Limits.HasZeroObject C\nK : HomologicalComplex C c'\nL L' : HomologicalComplex C c\ninst✝ : e.IsRelIff\nψ : Quiver.Hom K (L.extend e)\nβ : Quiver.Hom L L'\nZ : HomologicalComplex C c\nh : Quiver.Hom L' Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (e.homRestrict (CategoryTheory.CategoryStruct.comp ψ (HomologicalComplex.extendMap β e))) h) (CategoryTheory.CategoryStruct.comp (e.homRestrict ψ) (CategoryTheory.CategoryStruct.comp β h))","decl":"@[reassoc]\nlemma homRestrict_comp_extendMap (ψ : K ⟶ L.extend e) (β : L ⟶ L') :\n    e.homRestrict (ψ ≫ extendMap β e) =\n      e.homRestrict ψ ≫ β := by\n  ext i\n  simp [homRestrict_f _ _ rfl, extendMap_f β e rfl]\n\n"}
{"name":"ComplexShape.Embedding.homEquiv_apply_coe","module":"Mathlib.Algebra.Homology.Embedding.HomEquiv","initialProofState":"ι : Type u_1\nι' : Type u_2\nc : ComplexShape ι\nc' : ComplexShape ι'\ne : c.Embedding c'\nC : Type u_3\ninst✝³ : CategoryTheory.Category.{u_4, u_3} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\ninst✝¹ : CategoryTheory.Limits.HasZeroObject C\nK : HomologicalComplex C c'\nL : HomologicalComplex C c\ninst✝ : e.IsRelIff\nψ : Quiver.Hom K (L.extend e)\n⊢ Eq (↑((e.homEquiv K L) ψ)) (e.homRestrict ψ)","decl":"/-- The bijection between `K ⟶ L.extend e` and the subtype of `K.restriction e ⟶ L`\nconsisting of morphisms `φ` such that `e.HasLift φ`. -/\n@[simps]\nnoncomputable def homEquiv :\n    (K ⟶ L.extend e) ≃ { φ : K.restriction e ⟶ L // e.HasLift φ } where\n  toFun ψ := ⟨e.homRestrict ψ, e.homRestrict_hasLift ψ⟩\n  invFun φ := e.liftExtend φ.1 φ.2\n  left_inv ψ := by simp\n  right_inv φ := by simp\n\n"}
{"name":"ComplexShape.Embedding.homEquiv_symm_apply","module":"Mathlib.Algebra.Homology.Embedding.HomEquiv","initialProofState":"ι : Type u_1\nι' : Type u_2\nc : ComplexShape ι\nc' : ComplexShape ι'\ne : c.Embedding c'\nC : Type u_3\ninst✝³ : CategoryTheory.Category.{u_4, u_3} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\ninst✝¹ : CategoryTheory.Limits.HasZeroObject C\nK : HomologicalComplex C c'\nL : HomologicalComplex C c\ninst✝ : e.IsRelIff\nφ : Subtype fun φ => e.HasLift φ\n⊢ Eq ((e.homEquiv K L).symm φ) (e.liftExtend ↑φ ⋯)","decl":"/-- The bijection between `K ⟶ L.extend e` and the subtype of `K.restriction e ⟶ L`\nconsisting of morphisms `φ` such that `e.HasLift φ`. -/\n@[simps]\nnoncomputable def homEquiv :\n    (K ⟶ L.extend e) ≃ { φ : K.restriction e ⟶ L // e.HasLift φ } where\n  toFun ψ := ⟨e.homRestrict ψ, e.homRestrict_hasLift ψ⟩\n  invFun φ := e.liftExtend φ.1 φ.2\n  left_inv ψ := by simp\n  right_inv φ := by simp\n\n"}
