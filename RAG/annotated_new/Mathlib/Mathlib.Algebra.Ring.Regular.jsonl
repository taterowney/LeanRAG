{"name":"isLeftRegular_of_non_zero_divisor","module":"Mathlib.Algebra.Ring.Regular","initialProofState":"α : Type u_1\ninst✝ : NonUnitalNonAssocRing α\nk : α\nh : ∀ (x : α), Eq (HMul.hMul k x) 0 → Eq x 0\n⊢ IsLeftRegular k","decl":"/-- Left `Mul` by a `k : α` over `[Ring α]` is injective, if `k` is not a zero divisor.\nThe typeclass that restricts all terms of `α` to have this property is `NoZeroDivisors`. -/\ntheorem isLeftRegular_of_non_zero_divisor [NonUnitalNonAssocRing α] (k : α)\n    (h : ∀ x : α, k * x = 0 → x = 0) : IsLeftRegular k := by\n  refine fun x y (h' : k * x = k * y) => sub_eq_zero.mp (h _ ?_)\n  rw [mul_sub, sub_eq_zero, h']\n\n"}
{"name":"isRightRegular_of_non_zero_divisor","module":"Mathlib.Algebra.Ring.Regular","initialProofState":"α : Type u_1\ninst✝ : NonUnitalNonAssocRing α\nk : α\nh : ∀ (x : α), Eq (HMul.hMul x k) 0 → Eq x 0\n⊢ IsRightRegular k","decl":"/-- Right `Mul` by a `k : α` over `[Ring α]` is injective, if `k` is not a zero divisor.\nThe typeclass that restricts all terms of `α` to have this property is `NoZeroDivisors`. -/\ntheorem isRightRegular_of_non_zero_divisor [NonUnitalNonAssocRing α] (k : α)\n    (h : ∀ x : α, x * k = 0 → x = 0) : IsRightRegular k := by\n  refine fun x y (h' : x * k = y * k) => sub_eq_zero.mp (h _ ?_)\n  rw [sub_mul, sub_eq_zero, h']\n\n"}
{"name":"isRegular_of_ne_zero'","module":"Mathlib.Algebra.Ring.Regular","initialProofState":"α : Type u_1\ninst✝¹ : NonUnitalNonAssocRing α\ninst✝ : NoZeroDivisors α\nk : α\nhk : Ne k 0\n⊢ IsRegular k","decl":"theorem isRegular_of_ne_zero' [NonUnitalNonAssocRing α] [NoZeroDivisors α] {k : α} (hk : k ≠ 0) :\n    IsRegular k :=\n  ⟨isLeftRegular_of_non_zero_divisor k fun _ h =>\n      (NoZeroDivisors.eq_zero_or_eq_zero_of_mul_eq_zero h).resolve_left hk,\n    isRightRegular_of_non_zero_divisor k fun _ h =>\n      (NoZeroDivisors.eq_zero_or_eq_zero_of_mul_eq_zero h).resolve_right hk⟩\n\n"}
{"name":"isRegular_iff_ne_zero'","module":"Mathlib.Algebra.Ring.Regular","initialProofState":"α : Type u_1\ninst✝² : Nontrivial α\ninst✝¹ : NonUnitalNonAssocRing α\ninst✝ : NoZeroDivisors α\nk : α\n⊢ Iff (IsRegular k) (Ne k 0)","decl":"theorem isRegular_iff_ne_zero' [Nontrivial α] [NonUnitalNonAssocRing α] [NoZeroDivisors α]\n    {k : α} : IsRegular k ↔ k ≠ 0 :=\n  ⟨fun h => by\n    rintro rfl\n    exact not_not.mpr h.left not_isLeftRegular_zero, isRegular_of_ne_zero'⟩\n\n"}
