{"name":"CategoryTheory.Functor.IsCardinalAccessible.preservesColimitOfShape","module":"Mathlib.CategoryTheory.Presentable.Basic","initialProofState":"C : Type u\ninst✝⁴ : CategoryTheory.Category.{v, u} C\nD : Type u'\ninst✝³ : CategoryTheory.Category.{v', u'} D\nF : CategoryTheory.Functor C D\nκ : Cardinal.{w}\ninst✝² : Fact κ.IsRegular\nself : F.IsCardinalAccessible κ\nJ : Type w\ninst✝¹ : CategoryTheory.SmallCategory J\ninst✝ : CategoryTheory.IsCardinalFiltered J κ\n⊢ CategoryTheory.Limits.PreservesColimitsOfShape J F","decl":"/-- A functor `F : C ⥤ D` is `κ`-accessible (with `κ` a regular cardinal)\nif it preserves colimits of shape `J` where `J` is any `κ`-filtered category.\nIn the mathematical literature, some assumptions are often made on the\ncategories `C` or `D` (e.g. the existence of `κ`-filtered colimits,\nsee `HasCardinalFilteredColimits` below), but here we do not\nmake such assumptions. -/\nclass IsCardinalAccessible : Prop where\n  preservesColimitOfShape (J : Type w) [SmallCategory J] [IsCardinalFiltered J κ] :\n    PreservesColimitsOfShape J F\n\n"}
{"name":"CategoryTheory.Functor.preservesColimitsOfShape_of_isCardinalAccessible","module":"Mathlib.CategoryTheory.Presentable.Basic","initialProofState":"C : Type u\ninst✝⁵ : CategoryTheory.Category.{v, u} C\nD : Type u'\ninst✝⁴ : CategoryTheory.Category.{v', u'} D\nF : CategoryTheory.Functor C D\nκ : Cardinal.{w}\ninst✝³ : Fact κ.IsRegular\ninst✝² : F.IsCardinalAccessible κ\nJ : Type w\ninst✝¹ : CategoryTheory.SmallCategory J\ninst✝ : CategoryTheory.IsCardinalFiltered J κ\n⊢ CategoryTheory.Limits.PreservesColimitsOfShape J F","decl":"lemma preservesColimitsOfShape_of_isCardinalAccessible [F.IsCardinalAccessible κ]\n    (J : Type w) [SmallCategory J] [IsCardinalFiltered J κ] :\n    PreservesColimitsOfShape J F :=\n  IsCardinalAccessible.preservesColimitOfShape κ _\n\n"}
{"name":"CategoryTheory.Functor.preservesColimitsOfShape_of_isCardinalAccessible_of_essentiallySmall","module":"Mathlib.CategoryTheory.Presentable.Basic","initialProofState":"C : Type u\ninst✝⁶ : CategoryTheory.Category.{v, u} C\nD : Type u'\ninst✝⁵ : CategoryTheory.Category.{v', u'} D\nF : CategoryTheory.Functor C D\nκ : Cardinal.{w}\ninst✝⁴ : Fact κ.IsRegular\ninst✝³ : F.IsCardinalAccessible κ\nJ : Type u''\ninst✝² : CategoryTheory.Category.{v'', u''} J\ninst✝¹ : CategoryTheory.EssentiallySmall.{w, v'', u''} J\ninst✝ : CategoryTheory.IsCardinalFiltered J κ\n⊢ CategoryTheory.Limits.PreservesColimitsOfShape J F","decl":"lemma preservesColimitsOfShape_of_isCardinalAccessible_of_essentiallySmall\n    [F.IsCardinalAccessible κ]\n    (J : Type u'') [Category.{v''} J] [EssentiallySmall.{w} J] [IsCardinalFiltered J κ] :\n    PreservesColimitsOfShape J F := by\n  have := IsCardinalFiltered.of_equivalence κ (equivSmallModel.{w} J)\n  have := F.preservesColimitsOfShape_of_isCardinalAccessible κ (SmallModel.{w} J)\n  exact preservesColimitsOfShape_of_equiv (equivSmallModel.{w} J).symm F\n\n"}
{"name":"CategoryTheory.Functor.isCardinalAccessible_of_le","module":"Mathlib.CategoryTheory.Presentable.Basic","initialProofState":"C : Type u\ninst✝⁴ : CategoryTheory.Category.{v, u} C\nD : Type u'\ninst✝³ : CategoryTheory.Category.{v', u'} D\nF : CategoryTheory.Functor C D\nκ : Cardinal.{w}\ninst✝² : Fact κ.IsRegular\ninst✝¹ : F.IsCardinalAccessible κ\nκ' : Cardinal.{w}\ninst✝ : Fact κ'.IsRegular\nh : LE.le κ κ'\n⊢ F.IsCardinalAccessible κ'","decl":"variable {κ} in\nlemma isCardinalAccessible_of_le\n    [F.IsCardinalAccessible κ] {κ' : Cardinal.{w}} [Fact κ'.IsRegular] (h : κ ≤ κ') :\n    F.IsCardinalAccessible κ' where\n  preservesColimitOfShape {J _ _} := by\n    have := IsCardinalFiltered.of_le J h\n    exact F.preservesColimitsOfShape_of_isCardinalAccessible κ J\n\n"}
{"name":"CategoryTheory.Functor.isCardinalAccessible_of_natIso","module":"Mathlib.CategoryTheory.Presentable.Basic","initialProofState":"C : Type u\ninst✝³ : CategoryTheory.Category.{v, u} C\nD : Type u'\ninst✝² : CategoryTheory.Category.{v', u'} D\nF G : CategoryTheory.Functor C D\ne : CategoryTheory.Iso F G\nκ : Cardinal.{w}\ninst✝¹ : Fact κ.IsRegular\ninst✝ : F.IsCardinalAccessible κ\n⊢ G.IsCardinalAccessible κ","decl":"include e in\nvariable {F G} in\nlemma isCardinalAccessible_of_natIso [F.IsCardinalAccessible κ] : G.IsCardinalAccessible κ where\n  preservesColimitOfShape J _ hκ := by\n    have := F.preservesColimitsOfShape_of_isCardinalAccessible κ J\n    exact preservesColimitsOfShape_of_natIso e\n\n"}
{"name":"CategoryTheory.preservesColimitsOfShape_of_isCardinalPresentable","module":"Mathlib.CategoryTheory.Presentable.Basic","initialProofState":"C : Type u\ninst✝⁴ : CategoryTheory.Category.{v, u} C\nX : C\nκ : Cardinal.{w}\ninst✝³ : Fact κ.IsRegular\ninst✝² : CategoryTheory.IsCardinalPresentable X κ\nJ : Type w\ninst✝¹ : CategoryTheory.SmallCategory J\ninst✝ : CategoryTheory.IsCardinalFiltered J κ\n⊢ CategoryTheory.Limits.PreservesColimitsOfShape J (CategoryTheory.coyoneda.obj { unop := X })","decl":"lemma preservesColimitsOfShape_of_isCardinalPresentable [IsCardinalPresentable X κ]\n    (J : Type w) [SmallCategory.{w} J] [IsCardinalFiltered J κ] :\n    PreservesColimitsOfShape J (coyoneda.obj (op X)) :=\n  (coyoneda.obj (op X)).preservesColimitsOfShape_of_isCardinalAccessible κ J\n\n"}
{"name":"CategoryTheory.preservesColimitsOfShape_of_isCardinalPresentable_of_essentiallySmall","module":"Mathlib.CategoryTheory.Presentable.Basic","initialProofState":"C : Type u\ninst✝⁵ : CategoryTheory.Category.{v, u} C\nX : C\nκ : Cardinal.{w}\ninst✝⁴ : Fact κ.IsRegular\ninst✝³ : CategoryTheory.IsCardinalPresentable X κ\nJ : Type u''\ninst✝² : CategoryTheory.Category.{v'', u''} J\ninst✝¹ : CategoryTheory.EssentiallySmall.{w, v'', u''} J\ninst✝ : CategoryTheory.IsCardinalFiltered J κ\n⊢ CategoryTheory.Limits.PreservesColimitsOfShape J (CategoryTheory.coyoneda.obj { unop := X })","decl":"lemma preservesColimitsOfShape_of_isCardinalPresentable_of_essentiallySmall\n    [IsCardinalPresentable X κ]\n    (J : Type u'') [Category.{v''} J] [EssentiallySmall.{w} J] [IsCardinalFiltered J κ] :\n    PreservesColimitsOfShape J (coyoneda.obj (op X)) :=\n  (coyoneda.obj (op X)).preservesColimitsOfShape_of_isCardinalAccessible_of_essentiallySmall κ J\n\n"}
{"name":"CategoryTheory.isCardinalPresentable_of_le","module":"Mathlib.CategoryTheory.Presentable.Basic","initialProofState":"C : Type u\ninst✝³ : CategoryTheory.Category.{v, u} C\nX : C\nκ : Cardinal.{w}\ninst✝² : Fact κ.IsRegular\ninst✝¹ : CategoryTheory.IsCardinalPresentable X κ\nκ' : Cardinal.{w}\ninst✝ : Fact κ'.IsRegular\nh : LE.le κ κ'\n⊢ CategoryTheory.IsCardinalPresentable X κ'","decl":"variable {κ} in\nlemma isCardinalPresentable_of_le [IsCardinalPresentable X κ]\n    {κ' : Cardinal.{w}} [Fact κ'.IsRegular] (h : κ ≤ κ') :\n    IsCardinalPresentable X κ' :=\n  (coyoneda.obj (op X)).isCardinalAccessible_of_le h\n\n"}
{"name":"CategoryTheory.isCardinalPresentable_of_iso","module":"Mathlib.CategoryTheory.Presentable.Basic","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\nX Y : C\ne : CategoryTheory.Iso X Y\nκ : Cardinal.{w}\ninst✝¹ : Fact κ.IsRegular\ninst✝ : CategoryTheory.IsCardinalPresentable X κ\n⊢ CategoryTheory.IsCardinalPresentable Y κ","decl":"include e in\nvariable {X Y} in\nlemma isCardinalPresentable_of_iso [IsCardinalPresentable X κ] : IsCardinalPresentable Y κ :=\n  Functor.isCardinalAccessible_of_natIso (coyoneda.mapIso e.symm.op) κ\n\n"}
{"name":"CategoryTheory.HasCardinalFilteredColimits.hasColimitsOfShape","module":"Mathlib.CategoryTheory.Presentable.Basic","initialProofState":"C : Type u\ninst✝³ : CategoryTheory.Category.{v, u} C\nκ : Cardinal.{w}\ninst✝² : Fact κ.IsRegular\nself : CategoryTheory.HasCardinalFilteredColimits C κ\nJ : Type w\ninst✝¹ : CategoryTheory.SmallCategory J\ninst✝ : CategoryTheory.IsCardinalFiltered J κ\n⊢ CategoryTheory.Limits.HasColimitsOfShape J C","decl":"/-- A category has `κ`-filtered colimits if it has colimits of shape `J`\nfor any `κ`-filtered category `J`. -/\nclass HasCardinalFilteredColimits : Prop where\n  hasColimitsOfShape (J : Type w) [SmallCategory J] [IsCardinalFiltered J κ] :\n    HasColimitsOfShape J C := by intros; infer_instance\n\n"}
{"name":"CategoryTheory.instHasCardinalFilteredColimitsOfHasColimitsOfSize","module":"Mathlib.CategoryTheory.Presentable.Basic","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\nκ : Cardinal.{w}\ninst✝¹ : Fact κ.IsRegular\ninst✝ : CategoryTheory.Limits.HasColimitsOfSize.{w, w, v, u} C\n⊢ CategoryTheory.HasCardinalFilteredColimits C κ","decl":"instance [HasColimitsOfSize.{w, w} C] : HasCardinalFilteredColimits.{w} C κ where\n\n"}
