{"name":"Complex.sameRay_iff","module":"Mathlib.Analysis.Complex.Arg","initialProofState":"x y : Complex\n⊢ Iff (SameRay Real x y) (Or (Eq x 0) (Or (Eq y 0) (Eq x.arg y.arg)))","decl":"theorem sameRay_iff : SameRay ℝ x y ↔ x = 0 ∨ y = 0 ∨ x.arg = y.arg := by\n  rcases eq_or_ne x 0 with (rfl | hx)\n  · simp\n  rcases eq_or_ne y 0 with (rfl | hy)\n  · simp\n  simp only [hx, hy, sameRay_iff_norm_smul_eq, arg_eq_arg_iff hx hy]\n  field_simp [hx, hy]\n  rw [mul_comm, eq_comm]\n\n"}
{"name":"Complex.sameRay_iff_arg_div_eq_zero","module":"Mathlib.Analysis.Complex.Arg","initialProofState":"x y : Complex\n⊢ Iff (SameRay Real x y) (Eq (HDiv.hDiv x y).arg 0)","decl":"theorem sameRay_iff_arg_div_eq_zero : SameRay ℝ x y ↔ arg (x / y) = 0 := by\n  rw [← Real.Angle.toReal_zero, ← arg_coe_angle_eq_iff_eq_toReal, sameRay_iff]\n  by_cases hx : x = 0; · simp [hx]\n  by_cases hy : y = 0; · simp [hy]\n  simp [hx, hy, arg_div_coe_angle, sub_eq_zero]\n\n-- Porting note: `(x + y).abs` stopped working.\n"}
{"name":"Complex.abs_add_eq_iff","module":"Mathlib.Analysis.Complex.Arg","initialProofState":"x y : Complex\n⊢ Iff (Eq (Complex.abs (HAdd.hAdd x y)) (HAdd.hAdd (Complex.abs x) (Complex.abs y))) (Or (Eq x 0) (Or (Eq y 0) (Eq x.arg y.arg)))","decl":"theorem abs_add_eq_iff : abs (x + y) = abs x + abs y ↔ x = 0 ∨ y = 0 ∨ x.arg = y.arg :=\n  sameRay_iff_norm_add.symm.trans sameRay_iff\n\n"}
{"name":"Complex.abs_sub_eq_iff","module":"Mathlib.Analysis.Complex.Arg","initialProofState":"x y : Complex\n⊢ Iff (Eq (Complex.abs (HSub.hSub x y)) (abs (HSub.hSub (Complex.abs x) (Complex.abs y)))) (Or (Eq x 0) (Or (Eq y 0) (Eq x.arg y.arg)))","decl":"theorem abs_sub_eq_iff : abs (x - y) = |abs x - abs y| ↔ x = 0 ∨ y = 0 ∨ x.arg = y.arg :=\n  sameRay_iff_norm_sub.symm.trans sameRay_iff\n\n"}
{"name":"Complex.sameRay_of_arg_eq","module":"Mathlib.Analysis.Complex.Arg","initialProofState":"x y : Complex\nh : Eq x.arg y.arg\n⊢ SameRay Real x y","decl":"theorem sameRay_of_arg_eq (h : x.arg = y.arg) : SameRay ℝ x y :=\n  sameRay_iff.mpr <| Or.inr <| Or.inr h\n\n"}
{"name":"Complex.abs_add_eq","module":"Mathlib.Analysis.Complex.Arg","initialProofState":"x y : Complex\nh : Eq x.arg y.arg\n⊢ Eq (Complex.abs (HAdd.hAdd x y)) (HAdd.hAdd (Complex.abs x) (Complex.abs y))","decl":"theorem abs_add_eq (h : x.arg = y.arg) : abs (x + y) = abs x + abs y :=\n  (sameRay_of_arg_eq h).norm_add\n\n"}
{"name":"Complex.abs_sub_eq","module":"Mathlib.Analysis.Complex.Arg","initialProofState":"x y : Complex\nh : Eq x.arg y.arg\n⊢ Eq (Complex.abs (HSub.hSub x y)) (Norm.norm (HSub.hSub (Complex.abs x) (Complex.abs y)))","decl":"theorem abs_sub_eq (h : x.arg = y.arg) : abs (x - y) = ‖abs x - abs y‖ :=\n  (sameRay_of_arg_eq h).norm_sub\n\n"}
