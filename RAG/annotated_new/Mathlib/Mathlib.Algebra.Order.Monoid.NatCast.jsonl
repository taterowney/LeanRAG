{"name":"lt_add_one","module":"Mathlib.Algebra.Order.Monoid.NatCast","initialProofState":"α : Type u_1\ninst✝⁵ : One α\ninst✝⁴ : AddZeroClass α\ninst✝³ : PartialOrder α\ninst✝² : ZeroLEOneClass α\ninst✝¹ : NeZero 1\ninst✝ : AddLeftStrictMono α\na : α\n⊢ LT.lt a (HAdd.hAdd a 1)","decl":"lemma lt_add_one [One α] [AddZeroClass α] [PartialOrder α] [ZeroLEOneClass α]\n    [NeZero (1 : α)] [AddLeftStrictMono α] (a : α) : a < a + 1 :=\n  lt_add_of_pos_right _ zero_lt_one\n\n"}
{"name":"lt_one_add","module":"Mathlib.Algebra.Order.Monoid.NatCast","initialProofState":"α : Type u_1\ninst✝⁵ : One α\ninst✝⁴ : AddZeroClass α\ninst✝³ : PartialOrder α\ninst✝² : ZeroLEOneClass α\ninst✝¹ : NeZero 1\ninst✝ : AddRightStrictMono α\na : α\n⊢ LT.lt a (HAdd.hAdd 1 a)","decl":"lemma lt_one_add [One α] [AddZeroClass α] [PartialOrder α] [ZeroLEOneClass α]\n    [NeZero (1 : α)] [AddRightStrictMono α] (a : α) : a < 1 + a :=\n  lt_add_of_pos_left _ zero_lt_one\n\n"}
{"name":"zero_le_two","module":"Mathlib.Algebra.Order.Monoid.NatCast","initialProofState":"α : Type u_1\ninst✝³ : AddMonoidWithOne α\ninst✝² : Preorder α\ninst✝¹ : ZeroLEOneClass α\ninst✝ : AddLeftMono α\n⊢ LE.le 0 2","decl":"lemma zero_le_two [Preorder α] [ZeroLEOneClass α] [AddLeftMono α] :\n    (0 : α) ≤ 2 := by\n  rw [← one_add_one_eq_two]\n  exact add_nonneg zero_le_one zero_le_one\n\n"}
{"name":"zero_le_three","module":"Mathlib.Algebra.Order.Monoid.NatCast","initialProofState":"α : Type u_1\ninst✝³ : AddMonoidWithOne α\ninst✝² : Preorder α\ninst✝¹ : ZeroLEOneClass α\ninst✝ : AddLeftMono α\n⊢ LE.le 0 3","decl":"lemma zero_le_three [Preorder α] [ZeroLEOneClass α] [AddLeftMono α] :\n    (0 : α) ≤ 3 := by\n  rw [← two_add_one_eq_three]\n  exact add_nonneg zero_le_two zero_le_one\n\n"}
{"name":"zero_le_four","module":"Mathlib.Algebra.Order.Monoid.NatCast","initialProofState":"α : Type u_1\ninst✝³ : AddMonoidWithOne α\ninst✝² : Preorder α\ninst✝¹ : ZeroLEOneClass α\ninst✝ : AddLeftMono α\n⊢ LE.le 0 4","decl":"lemma zero_le_four [Preorder α] [ZeroLEOneClass α] [AddLeftMono α] :\n    (0 : α) ≤ 4 := by\n  rw [← three_add_one_eq_four]\n  exact add_nonneg zero_le_three zero_le_one\n\n"}
{"name":"one_le_two","module":"Mathlib.Algebra.Order.Monoid.NatCast","initialProofState":"α : Type u_1\ninst✝³ : AddMonoidWithOne α\ninst✝² : LE α\ninst✝¹ : ZeroLEOneClass α\ninst✝ : AddLeftMono α\n⊢ LE.le 1 2","decl":"lemma one_le_two [LE α] [ZeroLEOneClass α] [AddLeftMono α] :\n    (1 : α) ≤ 2 :=\n  calc (1 : α) = 1 + 0 := (add_zero 1).symm\n     _ ≤ 1 + 1 := add_le_add_left zero_le_one _\n     _ = 2 := one_add_one_eq_two\n\n"}
{"name":"one_le_two'","module":"Mathlib.Algebra.Order.Monoid.NatCast","initialProofState":"α : Type u_1\ninst✝³ : AddMonoidWithOne α\ninst✝² : LE α\ninst✝¹ : ZeroLEOneClass α\ninst✝ : AddRightMono α\n⊢ LE.le 1 2","decl":"lemma one_le_two' [LE α] [ZeroLEOneClass α] [AddRightMono α] :\n    (1 : α) ≤ 2 :=\n  calc (1 : α) = 0 + 1 := (zero_add 1).symm\n     _ ≤ 1 + 1 := add_le_add_right zero_le_one _\n     _ = 2 := one_add_one_eq_two\n\n"}
{"name":"zero_lt_two","module":"Mathlib.Algebra.Order.Monoid.NatCast","initialProofState":"α : Type u_1\ninst✝⁴ : AddMonoidWithOne α\ninst✝³ : PartialOrder α\ninst✝² : ZeroLEOneClass α\ninst✝¹ : NeZero 1\ninst✝ : AddLeftMono α\n⊢ LT.lt 0 2","decl":"/-- See `zero_lt_two'` for a version with the type explicit. -/\n@[simp] lemma zero_lt_two : (0 : α) < 2 := zero_lt_one.trans_le one_le_two\n\n"}
{"name":"zero_lt_three","module":"Mathlib.Algebra.Order.Monoid.NatCast","initialProofState":"α : Type u_1\ninst✝⁴ : AddMonoidWithOne α\ninst✝³ : PartialOrder α\ninst✝² : ZeroLEOneClass α\ninst✝¹ : NeZero 1\ninst✝ : AddLeftMono α\n⊢ LT.lt 0 3","decl":"/-- See `zero_lt_three'` for a version with the type explicit. -/\n@[simp] lemma zero_lt_three : (0 : α) < 3 := by\n  rw [← two_add_one_eq_three]\n  exact lt_add_of_lt_of_nonneg zero_lt_two zero_le_one\n\n"}
{"name":"zero_lt_four","module":"Mathlib.Algebra.Order.Monoid.NatCast","initialProofState":"α : Type u_1\ninst✝⁴ : AddMonoidWithOne α\ninst✝³ : PartialOrder α\ninst✝² : ZeroLEOneClass α\ninst✝¹ : NeZero 1\ninst✝ : AddLeftMono α\n⊢ LT.lt 0 4","decl":"/-- See `zero_lt_four'` for a version with the type explicit. -/\n@[simp] lemma zero_lt_four : (0 : α) < 4 := by\n  rw [← three_add_one_eq_four]\n  exact lt_add_of_lt_of_nonneg zero_lt_three zero_le_one\n\n"}
{"name":"zero_lt_two'","module":"Mathlib.Algebra.Order.Monoid.NatCast","initialProofState":"α : Type u_1\ninst✝⁴ : AddMonoidWithOne α\ninst✝³ : PartialOrder α\ninst✝² : ZeroLEOneClass α\ninst✝¹ : NeZero 1\ninst✝ : AddLeftMono α\n⊢ LT.lt 0 2","decl":"/-- See `zero_lt_two` for a version with the type implicit. -/\nlemma zero_lt_two' : (0 : α) < 2 := zero_lt_two\n\n"}
{"name":"zero_lt_three'","module":"Mathlib.Algebra.Order.Monoid.NatCast","initialProofState":"α : Type u_1\ninst✝⁴ : AddMonoidWithOne α\ninst✝³ : PartialOrder α\ninst✝² : ZeroLEOneClass α\ninst✝¹ : NeZero 1\ninst✝ : AddLeftMono α\n⊢ LT.lt 0 3","decl":"/-- See `zero_lt_three` for a version with the type implicit. -/\nlemma zero_lt_three' : (0 : α) < 3 := zero_lt_three\n\n"}
{"name":"zero_lt_four'","module":"Mathlib.Algebra.Order.Monoid.NatCast","initialProofState":"α : Type u_1\ninst✝⁴ : AddMonoidWithOne α\ninst✝³ : PartialOrder α\ninst✝² : ZeroLEOneClass α\ninst✝¹ : NeZero 1\ninst✝ : AddLeftMono α\n⊢ LT.lt 0 4","decl":"/-- See `zero_lt_four` for a version with the type implicit. -/\nlemma zero_lt_four' : (0 : α) < 4 := zero_lt_four\n\n"}
{"name":"ZeroLEOneClass.neZero.two","module":"Mathlib.Algebra.Order.Monoid.NatCast","initialProofState":"α : Type u_1\ninst✝⁴ : AddMonoidWithOne α\ninst✝³ : PartialOrder α\ninst✝² : ZeroLEOneClass α\ninst✝¹ : NeZero 1\ninst✝ : AddLeftMono α\n⊢ NeZero 2","decl":"instance ZeroLEOneClass.neZero.two : NeZero (2 : α) := ⟨zero_lt_two.ne'⟩\n"}
{"name":"ZeroLEOneClass.neZero.three","module":"Mathlib.Algebra.Order.Monoid.NatCast","initialProofState":"α : Type u_1\ninst✝⁴ : AddMonoidWithOne α\ninst✝³ : PartialOrder α\ninst✝² : ZeroLEOneClass α\ninst✝¹ : NeZero 1\ninst✝ : AddLeftMono α\n⊢ NeZero 3","decl":"instance ZeroLEOneClass.neZero.three : NeZero (3 : α) := ⟨zero_lt_three.ne'⟩\n"}
{"name":"ZeroLEOneClass.neZero.four","module":"Mathlib.Algebra.Order.Monoid.NatCast","initialProofState":"α : Type u_1\ninst✝⁴ : AddMonoidWithOne α\ninst✝³ : PartialOrder α\ninst✝² : ZeroLEOneClass α\ninst✝¹ : NeZero 1\ninst✝ : AddLeftMono α\n⊢ NeZero 4","decl":"instance ZeroLEOneClass.neZero.four : NeZero (4 : α) := ⟨zero_lt_four.ne'⟩\n\n"}
{"name":"one_lt_two","module":"Mathlib.Algebra.Order.Monoid.NatCast","initialProofState":"α : Type u_1\ninst✝⁴ : AddMonoidWithOne α\ninst✝³ : PartialOrder α\ninst✝² : ZeroLEOneClass α\ninst✝¹ : NeZero 1\ninst✝ : AddLeftStrictMono α\n⊢ LT.lt 1 2","decl":"lemma one_lt_two [AddLeftStrictMono α] : (1 : α) < 2 := by\n  rw [← one_add_one_eq_two]\n  exact lt_add_one _\n\n"}
{"name":"two_pos","module":"Mathlib.Algebra.Order.Monoid.NatCast","initialProofState":"α : Type u_1\ninst✝⁴ : AddMonoidWithOne α\ninst✝³ : PartialOrder α\ninst✝² : ZeroLEOneClass α\ninst✝¹ : NeZero 1\ninst✝ : AddLeftMono α\n⊢ LT.lt 0 2","decl":"alias two_pos := zero_lt_two\n\n"}
{"name":"three_pos","module":"Mathlib.Algebra.Order.Monoid.NatCast","initialProofState":"α : Type u_1\ninst✝⁴ : AddMonoidWithOne α\ninst✝³ : PartialOrder α\ninst✝² : ZeroLEOneClass α\ninst✝¹ : NeZero 1\ninst✝ : AddLeftMono α\n⊢ LT.lt 0 3","decl":"alias three_pos := zero_lt_three\n\n"}
{"name":"four_pos","module":"Mathlib.Algebra.Order.Monoid.NatCast","initialProofState":"α : Type u_1\ninst✝⁴ : AddMonoidWithOne α\ninst✝³ : PartialOrder α\ninst✝² : ZeroLEOneClass α\ninst✝¹ : NeZero 1\ninst✝ : AddLeftMono α\n⊢ LT.lt 0 4","decl":"alias four_pos := zero_lt_four\n"}
