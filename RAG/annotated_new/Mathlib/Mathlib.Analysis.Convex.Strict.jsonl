{"name":"strictConvex_iff_openSegment_subset","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝³ : OrderedSemiring 𝕜\ninst✝² : TopologicalSpace E\ninst✝¹ : AddCommMonoid E\ninst✝ : SMul 𝕜 E\ns : Set E\n⊢ Iff (StrictConvex 𝕜 s) (s.Pairwise fun x y => HasSubset.Subset (openSegment 𝕜 x y) (interior s))","decl":"theorem strictConvex_iff_openSegment_subset :\n    StrictConvex 𝕜 s ↔ s.Pairwise fun x y => openSegment 𝕜 x y ⊆ interior s :=\n  forall₅_congr fun _ _ _ _ _ => (openSegment_subset_iff 𝕜).symm\n\n"}
{"name":"StrictConvex.openSegment_subset","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝³ : OrderedSemiring 𝕜\ninst✝² : TopologicalSpace E\ninst✝¹ : AddCommMonoid E\ninst✝ : SMul 𝕜 E\ns : Set E\nx y : E\nhs : StrictConvex 𝕜 s\nhx : Membership.mem s x\nhy : Membership.mem s y\nh : Ne x y\n⊢ HasSubset.Subset (openSegment 𝕜 x y) (interior s)","decl":"theorem StrictConvex.openSegment_subset (hs : StrictConvex 𝕜 s) (hx : x ∈ s) (hy : y ∈ s)\n    (h : x ≠ y) : openSegment 𝕜 x y ⊆ interior s :=\n  strictConvex_iff_openSegment_subset.1 hs hx hy h\n\n"}
{"name":"strictConvex_empty","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝³ : OrderedSemiring 𝕜\ninst✝² : TopologicalSpace E\ninst✝¹ : AddCommMonoid E\ninst✝ : SMul 𝕜 E\n⊢ StrictConvex 𝕜 EmptyCollection.emptyCollection","decl":"theorem strictConvex_empty : StrictConvex 𝕜 (∅ : Set E) :=\n  pairwise_empty _\n\n"}
{"name":"strictConvex_univ","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝³ : OrderedSemiring 𝕜\ninst✝² : TopologicalSpace E\ninst✝¹ : AddCommMonoid E\ninst✝ : SMul 𝕜 E\n⊢ StrictConvex 𝕜 Set.univ","decl":"theorem strictConvex_univ : StrictConvex 𝕜 (univ : Set E) := by\n  intro x _ y _ _ a b _ _ _\n  rw [interior_univ]\n  exact mem_univ _\n\n"}
{"name":"StrictConvex.eq","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝³ : OrderedSemiring 𝕜\ninst✝² : TopologicalSpace E\ninst✝¹ : AddCommMonoid E\ninst✝ : SMul 𝕜 E\ns : Set E\nx y : E\na b : 𝕜\nhs : StrictConvex 𝕜 s\nhx : Membership.mem s x\nhy : Membership.mem s y\nha : LT.lt 0 a\nhb : LT.lt 0 b\nhab : Eq (HAdd.hAdd a b) 1\nh : Not (Membership.mem (interior s) (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y)))\n⊢ Eq x y","decl":"protected nonrec theorem StrictConvex.eq (hs : StrictConvex 𝕜 s) (hx : x ∈ s) (hy : y ∈ s)\n    (ha : 0 < a) (hb : 0 < b) (hab : a + b = 1) (h : a • x + b • y ∉ interior s) : x = y :=\n  hs.eq hx hy fun H => h <| H ha hb hab\n\n"}
{"name":"StrictConvex.inter","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝³ : OrderedSemiring 𝕜\ninst✝² : TopologicalSpace E\ninst✝¹ : AddCommMonoid E\ninst✝ : SMul 𝕜 E\ns t : Set E\nhs : StrictConvex 𝕜 s\nht : StrictConvex 𝕜 t\n⊢ StrictConvex 𝕜 (Inter.inter s t)","decl":"protected theorem StrictConvex.inter {t : Set E} (hs : StrictConvex 𝕜 s) (ht : StrictConvex 𝕜 t) :\n    StrictConvex 𝕜 (s ∩ t) := by\n  intro x hx y hy hxy a b ha hb hab\n  rw [interior_inter]\n  exact ⟨hs hx.1 hy.1 hxy ha hb hab, ht hx.2 hy.2 hxy ha hb hab⟩\n\n"}
{"name":"Directed.strictConvex_iUnion","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝³ : OrderedSemiring 𝕜\ninst✝² : TopologicalSpace E\ninst✝¹ : AddCommMonoid E\ninst✝ : SMul 𝕜 E\nι : Sort u_6\ns : ι → Set E\nhdir : Directed (fun x1 x2 => HasSubset.Subset x1 x2) s\nhs : ∀ ⦃i : ι⦄, StrictConvex 𝕜 (s i)\n⊢ StrictConvex 𝕜 (Set.iUnion fun i => s i)","decl":"theorem Directed.strictConvex_iUnion {ι : Sort*} {s : ι → Set E} (hdir : Directed (· ⊆ ·) s)\n    (hs : ∀ ⦃i : ι⦄, StrictConvex 𝕜 (s i)) : StrictConvex 𝕜 (⋃ i, s i) := by\n  rintro x hx y hy hxy a b ha hb hab\n  rw [mem_iUnion] at hx hy\n  obtain ⟨i, hx⟩ := hx\n  obtain ⟨j, hy⟩ := hy\n  obtain ⟨k, hik, hjk⟩ := hdir i j\n  exact interior_mono (subset_iUnion s k) (hs (hik hx) (hjk hy) hxy ha hb hab)\n\n"}
{"name":"DirectedOn.strictConvex_sUnion","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝³ : OrderedSemiring 𝕜\ninst✝² : TopologicalSpace E\ninst✝¹ : AddCommMonoid E\ninst✝ : SMul 𝕜 E\nS : Set (Set E)\nhdir : DirectedOn (fun x1 x2 => HasSubset.Subset x1 x2) S\nhS : ∀ (s : Set E), Membership.mem S s → StrictConvex 𝕜 s\n⊢ StrictConvex 𝕜 S.sUnion","decl":"theorem DirectedOn.strictConvex_sUnion {S : Set (Set E)} (hdir : DirectedOn (· ⊆ ·) S)\n    (hS : ∀ s ∈ S, StrictConvex 𝕜 s) : StrictConvex 𝕜 (⋃₀ S) := by\n  rw [sUnion_eq_iUnion]\n  exact (directedOn_iff_directed.1 hdir).strictConvex_iUnion fun s => hS _ s.2\n\n"}
{"name":"StrictConvex.convex","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝³ : OrderedSemiring 𝕜\ninst✝² : TopologicalSpace E\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\nhs : StrictConvex 𝕜 s\n⊢ Convex 𝕜 s","decl":"protected theorem StrictConvex.convex (hs : StrictConvex 𝕜 s) : Convex 𝕜 s :=\n  convex_iff_pairwise_pos.2 fun _ hx _ hy hxy _ _ ha hb hab =>\n    interior_subset <| hs hx hy hxy ha hb hab\n\n"}
{"name":"Convex.strictConvex_of_isOpen","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝³ : OrderedSemiring 𝕜\ninst✝² : TopologicalSpace E\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\nh : IsOpen s\nhs : Convex 𝕜 s\n⊢ StrictConvex 𝕜 s","decl":"/-- An open convex set is strictly convex. -/\nprotected theorem Convex.strictConvex_of_isOpen (h : IsOpen s) (hs : Convex 𝕜 s) :\n    StrictConvex 𝕜 s :=\n  fun _ hx _ hy _ _ _ ha hb hab => h.interior_eq.symm ▸ hs hx hy ha.le hb.le hab\n\n"}
{"name":"IsOpen.strictConvex_iff","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝³ : OrderedSemiring 𝕜\ninst✝² : TopologicalSpace E\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\nh : IsOpen s\n⊢ Iff (StrictConvex 𝕜 s) (Convex 𝕜 s)","decl":"theorem IsOpen.strictConvex_iff (h : IsOpen s) : StrictConvex 𝕜 s ↔ Convex 𝕜 s :=\n  ⟨StrictConvex.convex, Convex.strictConvex_of_isOpen h⟩\n\n"}
{"name":"strictConvex_singleton","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝³ : OrderedSemiring 𝕜\ninst✝² : TopologicalSpace E\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\nc : E\n⊢ StrictConvex 𝕜 (Singleton.singleton c)","decl":"theorem strictConvex_singleton (c : E) : StrictConvex 𝕜 ({c} : Set E) :=\n  pairwise_singleton _ _\n\n"}
{"name":"Set.Subsingleton.strictConvex","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝³ : OrderedSemiring 𝕜\ninst✝² : TopologicalSpace E\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\nhs : s.Subsingleton\n⊢ StrictConvex 𝕜 s","decl":"theorem Set.Subsingleton.strictConvex (hs : s.Subsingleton) : StrictConvex 𝕜 s :=\n  hs.pairwise _\n\n"}
{"name":"StrictConvex.linear_image","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\n𝕝 : Type u_2\nE : Type u_3\nF : Type u_4\ninst✝¹⁰ : OrderedSemiring 𝕜\ninst✝⁹ : TopologicalSpace E\ninst✝⁸ : TopologicalSpace F\ninst✝⁷ : AddCommMonoid E\ninst✝⁶ : AddCommMonoid F\ninst✝⁵ : Module 𝕜 E\ninst✝⁴ : Module 𝕜 F\ns : Set E\ninst✝³ : Semiring 𝕝\ninst✝² : Module 𝕝 E\ninst✝¹ : Module 𝕝 F\ninst✝ : LinearMap.CompatibleSMul E F 𝕜 𝕝\nhs : StrictConvex 𝕜 s\nf : LinearMap (RingHom.id 𝕝) E F\nhf : IsOpenMap ⇑f\n⊢ StrictConvex 𝕜 (Set.image (⇑f) s)","decl":"theorem StrictConvex.linear_image [Semiring 𝕝] [Module 𝕝 E] [Module 𝕝 F]\n    [LinearMap.CompatibleSMul E F 𝕜 𝕝] (hs : StrictConvex 𝕜 s) (f : E →ₗ[𝕝] F) (hf : IsOpenMap f) :\n    StrictConvex 𝕜 (f '' s) := by\n  rintro _ ⟨x, hx, rfl⟩ _ ⟨y, hy, rfl⟩ hxy a b ha hb hab\n  refine hf.image_interior_subset _ ⟨a • x + b • y, hs hx hy (ne_of_apply_ne _ hxy) ha hb hab, ?_⟩\n  rw [map_add, f.map_smul_of_tower a, f.map_smul_of_tower b]\n\n"}
{"name":"StrictConvex.is_linear_image","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\nF : Type u_4\ninst✝⁶ : OrderedSemiring 𝕜\ninst✝⁵ : TopologicalSpace E\ninst✝⁴ : TopologicalSpace F\ninst✝³ : AddCommMonoid E\ninst✝² : AddCommMonoid F\ninst✝¹ : Module 𝕜 E\ninst✝ : Module 𝕜 F\ns : Set E\nhs : StrictConvex 𝕜 s\nf : E → F\nh : IsLinearMap 𝕜 f\nhf : IsOpenMap f\n⊢ StrictConvex 𝕜 (Set.image f s)","decl":"theorem StrictConvex.is_linear_image (hs : StrictConvex 𝕜 s) {f : E → F} (h : IsLinearMap 𝕜 f)\n    (hf : IsOpenMap f) : StrictConvex 𝕜 (f '' s) :=\n  hs.linear_image (h.mk' f) hf\n\n"}
{"name":"StrictConvex.linear_preimage","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\nF : Type u_4\ninst✝⁶ : OrderedSemiring 𝕜\ninst✝⁵ : TopologicalSpace E\ninst✝⁴ : TopologicalSpace F\ninst✝³ : AddCommMonoid E\ninst✝² : AddCommMonoid F\ninst✝¹ : Module 𝕜 E\ninst✝ : Module 𝕜 F\ns : Set F\nhs : StrictConvex 𝕜 s\nf : LinearMap (RingHom.id 𝕜) E F\nhf : Continuous ⇑f\nhfinj : Function.Injective ⇑f\n⊢ StrictConvex 𝕜 (Set.preimage (⇑f) s)","decl":"theorem StrictConvex.linear_preimage {s : Set F} (hs : StrictConvex 𝕜 s) (f : E →ₗ[𝕜] F)\n    (hf : Continuous f) (hfinj : Injective f) : StrictConvex 𝕜 (s.preimage f) := by\n  intro x hx y hy hxy a b ha hb hab\n  refine preimage_interior_subset_interior_preimage hf ?_\n  rw [mem_preimage, f.map_add, f.map_smul, f.map_smul]\n  exact hs hx hy (hfinj.ne hxy) ha hb hab\n\n"}
{"name":"StrictConvex.is_linear_preimage","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\nF : Type u_4\ninst✝⁶ : OrderedSemiring 𝕜\ninst✝⁵ : TopologicalSpace E\ninst✝⁴ : TopologicalSpace F\ninst✝³ : AddCommMonoid E\ninst✝² : AddCommMonoid F\ninst✝¹ : Module 𝕜 E\ninst✝ : Module 𝕜 F\ns : Set F\nhs : StrictConvex 𝕜 s\nf : E → F\nh : IsLinearMap 𝕜 f\nhf : Continuous f\nhfinj : Function.Injective f\n⊢ StrictConvex 𝕜 (Set.preimage f s)","decl":"theorem StrictConvex.is_linear_preimage {s : Set F} (hs : StrictConvex 𝕜 s) {f : E → F}\n    (h : IsLinearMap 𝕜 f) (hf : Continuous f) (hfinj : Injective f) :\n    StrictConvex 𝕜 (s.preimage f) :=\n  hs.linear_preimage (h.mk' f) hf hfinj\n\n"}
{"name":"Set.OrdConnected.strictConvex","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : TopologicalSpace β\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : OrderTopology β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set β\nhs : s.OrdConnected\n⊢ StrictConvex 𝕜 s","decl":"protected theorem Set.OrdConnected.strictConvex {s : Set β} (hs : OrdConnected s) :\n    StrictConvex 𝕜 s := by\n  refine strictConvex_iff_openSegment_subset.2 fun x hx y hy hxy => ?_\n  cases' hxy.lt_or_lt with hlt hlt <;> [skip; rw [openSegment_symm]] <;>\n    exact\n      (openSegment_subset_Ioo hlt).trans\n        (isOpen_Ioo.subset_interior_iff.2 <| Ioo_subset_Icc_self.trans <| hs.out ‹_› ‹_›)\n\n"}
{"name":"strictConvex_Iic","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : TopologicalSpace β\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : OrderTopology β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nr : β\n⊢ StrictConvex 𝕜 (Set.Iic r)","decl":"theorem strictConvex_Iic (r : β) : StrictConvex 𝕜 (Iic r) :=\n  ordConnected_Iic.strictConvex\n\n"}
{"name":"strictConvex_Ici","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : TopologicalSpace β\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : OrderTopology β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nr : β\n⊢ StrictConvex 𝕜 (Set.Ici r)","decl":"theorem strictConvex_Ici (r : β) : StrictConvex 𝕜 (Ici r) :=\n  ordConnected_Ici.strictConvex\n\n"}
{"name":"strictConvex_Iio","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : TopologicalSpace β\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : OrderTopology β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nr : β\n⊢ StrictConvex 𝕜 (Set.Iio r)","decl":"theorem strictConvex_Iio (r : β) : StrictConvex 𝕜 (Iio r) :=\n  ordConnected_Iio.strictConvex\n\n"}
{"name":"strictConvex_Ioi","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : TopologicalSpace β\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : OrderTopology β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nr : β\n⊢ StrictConvex 𝕜 (Set.Ioi r)","decl":"theorem strictConvex_Ioi (r : β) : StrictConvex 𝕜 (Ioi r) :=\n  ordConnected_Ioi.strictConvex\n\n"}
{"name":"strictConvex_Icc","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : TopologicalSpace β\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : OrderTopology β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nr s : β\n⊢ StrictConvex 𝕜 (Set.Icc r s)","decl":"theorem strictConvex_Icc (r s : β) : StrictConvex 𝕜 (Icc r s) :=\n  ordConnected_Icc.strictConvex\n\n"}
{"name":"strictConvex_Ioo","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : TopologicalSpace β\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : OrderTopology β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nr s : β\n⊢ StrictConvex 𝕜 (Set.Ioo r s)","decl":"theorem strictConvex_Ioo (r s : β) : StrictConvex 𝕜 (Ioo r s) :=\n  ordConnected_Ioo.strictConvex\n\n"}
{"name":"strictConvex_Ico","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : TopologicalSpace β\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : OrderTopology β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nr s : β\n⊢ StrictConvex 𝕜 (Set.Ico r s)","decl":"theorem strictConvex_Ico (r s : β) : StrictConvex 𝕜 (Ico r s) :=\n  ordConnected_Ico.strictConvex\n\n"}
{"name":"strictConvex_Ioc","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : TopologicalSpace β\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : OrderTopology β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nr s : β\n⊢ StrictConvex 𝕜 (Set.Ioc r s)","decl":"theorem strictConvex_Ioc (r s : β) : StrictConvex 𝕜 (Ioc r s) :=\n  ordConnected_Ioc.strictConvex\n\n"}
{"name":"strictConvex_uIcc","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : TopologicalSpace β\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : OrderTopology β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nr s : β\n⊢ StrictConvex 𝕜 (Set.uIcc r s)","decl":"theorem strictConvex_uIcc (r s : β) : StrictConvex 𝕜 (uIcc r s) :=\n  strictConvex_Icc _ _\n\n"}
{"name":"strictConvex_uIoc","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : TopologicalSpace β\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : OrderTopology β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nr s : β\n⊢ StrictConvex 𝕜 (Set.uIoc r s)","decl":"theorem strictConvex_uIoc (r s : β) : StrictConvex 𝕜 (uIoc r s) :=\n  strictConvex_Ioc _ _\n\n"}
{"name":"StrictConvex.preimage_add_right","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : TopologicalSpace E\ninst✝² : AddCancelCommMonoid E\ninst✝¹ : ContinuousAdd E\ninst✝ : Module 𝕜 E\ns : Set E\nhs : StrictConvex 𝕜 s\nz : E\n⊢ StrictConvex 𝕜 (Set.preimage (fun x => HAdd.hAdd z x) s)","decl":"/-- The translation of a strictly convex set is also strictly convex. -/\ntheorem StrictConvex.preimage_add_right (hs : StrictConvex 𝕜 s) (z : E) :\n    StrictConvex 𝕜 ((fun x => z + x) ⁻¹' s) := by\n  intro x hx y hy hxy a b ha hb hab\n  refine preimage_interior_subset_interior_preimage (continuous_add_left _) ?_\n  have h := hs hx hy ((add_right_injective _).ne hxy) ha hb hab\n  rwa [smul_add, smul_add, add_add_add_comm, ← _root_.add_smul, hab, one_smul] at h\n\n"}
{"name":"StrictConvex.preimage_add_left","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : TopologicalSpace E\ninst✝² : AddCancelCommMonoid E\ninst✝¹ : ContinuousAdd E\ninst✝ : Module 𝕜 E\ns : Set E\nhs : StrictConvex 𝕜 s\nz : E\n⊢ StrictConvex 𝕜 (Set.preimage (fun x => HAdd.hAdd x z) s)","decl":"/-- The translation of a strictly convex set is also strictly convex. -/\ntheorem StrictConvex.preimage_add_left (hs : StrictConvex 𝕜 s) (z : E) :\n    StrictConvex 𝕜 ((fun x => x + z) ⁻¹' s) := by\n  simpa only [add_comm] using hs.preimage_add_right z\n\n"}
{"name":"StrictConvex.add","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : TopologicalSpace E\ninst✝² : AddCommGroup E\ninst✝¹ : Module 𝕜 E\ninst✝ : ContinuousAdd E\ns t : Set E\nhs : StrictConvex 𝕜 s\nht : StrictConvex 𝕜 t\n⊢ StrictConvex 𝕜 (HAdd.hAdd s t)","decl":"theorem StrictConvex.add (hs : StrictConvex 𝕜 s) (ht : StrictConvex 𝕜 t) :\n    StrictConvex 𝕜 (s + t) := by\n  rintro _ ⟨v, hv, w, hw, rfl⟩ _ ⟨x, hx, y, hy, rfl⟩ h a b ha hb hab\n  rw [smul_add, smul_add, add_add_add_comm]\n  obtain rfl | hvx := eq_or_ne v x\n  · refine interior_mono (add_subset_add (singleton_subset_iff.2 hv) Subset.rfl) ?_\n    rw [Convex.combo_self hab, singleton_add]\n    exact\n      (isOpenMap_add_left _).image_interior_subset _\n        (mem_image_of_mem _ <| ht hw hy (ne_of_apply_ne _ h) ha hb hab)\n  exact\n    subset_interior_add_left\n      (add_mem_add (hs hv hx hvx ha hb hab) <| ht.convex hw hy ha.le hb.le hab)\n\n"}
{"name":"StrictConvex.add_left","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : TopologicalSpace E\ninst✝² : AddCommGroup E\ninst✝¹ : Module 𝕜 E\ninst✝ : ContinuousAdd E\ns : Set E\nhs : StrictConvex 𝕜 s\nz : E\n⊢ StrictConvex 𝕜 (Set.image (fun x => HAdd.hAdd z x) s)","decl":"theorem StrictConvex.add_left (hs : StrictConvex 𝕜 s) (z : E) :\n    StrictConvex 𝕜 ((fun x => z + x) '' s) := by\n  simpa only [singleton_add] using (strictConvex_singleton z).add hs\n\n"}
{"name":"StrictConvex.add_right","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : TopologicalSpace E\ninst✝² : AddCommGroup E\ninst✝¹ : Module 𝕜 E\ninst✝ : ContinuousAdd E\ns : Set E\nhs : StrictConvex 𝕜 s\nz : E\n⊢ StrictConvex 𝕜 (Set.image (fun x => HAdd.hAdd x z) s)","decl":"theorem StrictConvex.add_right (hs : StrictConvex 𝕜 s) (z : E) :\n    StrictConvex 𝕜 ((fun x => x + z) '' s) := by simpa only [add_comm] using hs.add_left z\n\n"}
{"name":"StrictConvex.vadd","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : TopologicalSpace E\ninst✝² : AddCommGroup E\ninst✝¹ : Module 𝕜 E\ninst✝ : ContinuousAdd E\ns : Set E\nhs : StrictConvex 𝕜 s\nx : E\n⊢ StrictConvex 𝕜 (HVAdd.hVAdd x s)","decl":"/-- The translation of a strictly convex set is also strictly convex. -/\ntheorem StrictConvex.vadd (hs : StrictConvex 𝕜 s) (x : E) : StrictConvex 𝕜 (x +ᵥ s) :=\n  hs.add_left x\n\n"}
{"name":"StrictConvex.smul","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\n𝕝 : Type u_2\nE : Type u_3\ninst✝⁷ : OrderedSemiring 𝕜\ninst✝⁶ : TopologicalSpace E\ninst✝⁵ : AddCommGroup E\ninst✝⁴ : Module 𝕜 E\ninst✝³ : LinearOrderedField 𝕝\ninst✝² : Module 𝕝 E\ninst✝¹ : ContinuousConstSMul 𝕝 E\ninst✝ : LinearMap.CompatibleSMul E E 𝕜 𝕝\ns : Set E\nhs : StrictConvex 𝕜 s\nc : 𝕝\n⊢ StrictConvex 𝕜 (HSMul.hSMul c s)","decl":"theorem StrictConvex.smul (hs : StrictConvex 𝕜 s) (c : 𝕝) : StrictConvex 𝕜 (c • s) := by\n  obtain rfl | hc := eq_or_ne c 0\n  · exact (subsingleton_zero_smul_set _).strictConvex\n  · exact hs.linear_image (LinearMap.lsmul _ _ c) (isOpenMap_smul₀ hc)\n\n"}
{"name":"StrictConvex.affinity","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\n𝕝 : Type u_2\nE : Type u_3\ninst✝⁸ : OrderedSemiring 𝕜\ninst✝⁷ : TopologicalSpace E\ninst✝⁶ : AddCommGroup E\ninst✝⁵ : Module 𝕜 E\ninst✝⁴ : LinearOrderedField 𝕝\ninst✝³ : Module 𝕝 E\ninst✝² : ContinuousConstSMul 𝕝 E\ninst✝¹ : LinearMap.CompatibleSMul E E 𝕜 𝕝\ns : Set E\ninst✝ : ContinuousAdd E\nhs : StrictConvex 𝕜 s\nz : E\nc : 𝕝\n⊢ StrictConvex 𝕜 (HVAdd.hVAdd z (HSMul.hSMul c s))","decl":"theorem StrictConvex.affinity [ContinuousAdd E] (hs : StrictConvex 𝕜 s) (z : E) (c : 𝕝) :\n    StrictConvex 𝕜 (z +ᵥ c • s) :=\n  (hs.smul c).vadd z\n\n"}
{"name":"StrictConvex.preimage_smul","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝⁵ : OrderedCommSemiring 𝕜\ninst✝⁴ : TopologicalSpace E\ninst✝³ : AddCommGroup E\ninst✝² : Module 𝕜 E\ninst✝¹ : NoZeroSMulDivisors 𝕜 E\ninst✝ : ContinuousConstSMul 𝕜 E\ns : Set E\nhs : StrictConvex 𝕜 s\nc : 𝕜\n⊢ StrictConvex 𝕜 (Set.preimage (fun z => HSMul.hSMul c z) s)","decl":"theorem StrictConvex.preimage_smul (hs : StrictConvex 𝕜 s) (c : 𝕜) :\n    StrictConvex 𝕜 ((fun z => c • z) ⁻¹' s) := by\n  classical\n    obtain rfl | hc := eq_or_ne c 0\n    · simp_rw [zero_smul, preimage_const]\n      split_ifs\n      · exact strictConvex_univ\n      · exact strictConvex_empty\n    refine hs.linear_preimage (LinearMap.lsmul _ _ c) ?_ (smul_right_injective E hc)\n    unfold LinearMap.lsmul LinearMap.mk₂ LinearMap.mk₂' LinearMap.mk₂'ₛₗ\n    exact continuous_const_smul _\n\n"}
{"name":"StrictConvex.eq_of_openSegment_subset_frontier","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝⁵ : OrderedRing 𝕜\ninst✝⁴ : TopologicalSpace E\ninst✝³ : AddCommGroup E\ninst✝² : Module 𝕜 E\ns : Set E\nx y : E\ninst✝¹ : Nontrivial 𝕜\ninst✝ : DenselyOrdered 𝕜\nhs : StrictConvex 𝕜 s\nhx : Membership.mem s x\nhy : Membership.mem s y\nh : HasSubset.Subset (openSegment 𝕜 x y) (frontier s)\n⊢ Eq x y","decl":"theorem StrictConvex.eq_of_openSegment_subset_frontier [Nontrivial 𝕜] [DenselyOrdered 𝕜]\n    (hs : StrictConvex 𝕜 s) (hx : x ∈ s) (hy : y ∈ s) (h : openSegment 𝕜 x y ⊆ frontier s) :\n    x = y := by\n  obtain ⟨a, ha₀, ha₁⟩ := DenselyOrdered.dense (0 : 𝕜) 1 zero_lt_one\n  classical\n    by_contra hxy\n    exact\n      (h ⟨a, 1 - a, ha₀, sub_pos_of_lt ha₁, add_sub_cancel _ _, rfl⟩).2\n        (hs hx hy hxy ha₀ (sub_pos_of_lt ha₁) <| add_sub_cancel _ _)\n\n"}
{"name":"StrictConvex.add_smul_mem","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝³ : OrderedRing 𝕜\ninst✝² : TopologicalSpace E\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns : Set E\nx y : E\nhs : StrictConvex 𝕜 s\nhx : Membership.mem s x\nhxy : Membership.mem s (HAdd.hAdd x y)\nhy : Ne y 0\nt : 𝕜\nht₀ : LT.lt 0 t\nht₁ : LT.lt t 1\n⊢ Membership.mem (interior s) (HAdd.hAdd x (HSMul.hSMul t y))","decl":"theorem StrictConvex.add_smul_mem (hs : StrictConvex 𝕜 s) (hx : x ∈ s) (hxy : x + y ∈ s)\n    (hy : y ≠ 0) {t : 𝕜} (ht₀ : 0 < t) (ht₁ : t < 1) : x + t • y ∈ interior s := by\n  have h : x + t • y = (1 - t) • x + t • (x + y) := by match_scalars <;> field_simp\n  rw [h]\n  exact hs hx hxy (fun h => hy <| add_left_cancel (a := x) (by rw [← h, add_zero]))\n    (sub_pos_of_lt ht₁) ht₀ (sub_add_cancel 1 t)\n\n"}
{"name":"StrictConvex.smul_mem_of_zero_mem","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝³ : OrderedRing 𝕜\ninst✝² : TopologicalSpace E\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns : Set E\nx : E\nhs : StrictConvex 𝕜 s\nzero_mem : Membership.mem s 0\nhx : Membership.mem s x\nhx₀ : Ne x 0\nt : 𝕜\nht₀ : LT.lt 0 t\nht₁ : LT.lt t 1\n⊢ Membership.mem (interior s) (HSMul.hSMul t x)","decl":"theorem StrictConvex.smul_mem_of_zero_mem (hs : StrictConvex 𝕜 s) (zero_mem : (0 : E) ∈ s)\n    (hx : x ∈ s) (hx₀ : x ≠ 0) {t : 𝕜} (ht₀ : 0 < t) (ht₁ : t < 1) : t • x ∈ interior s := by\n  simpa using hs.add_smul_mem zero_mem (by simpa using hx) hx₀ ht₀ ht₁\n\n"}
{"name":"StrictConvex.add_smul_sub_mem","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝³ : OrderedRing 𝕜\ninst✝² : TopologicalSpace E\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns : Set E\nx y : E\nh : StrictConvex 𝕜 s\nhx : Membership.mem s x\nhy : Membership.mem s y\nhxy : Ne x y\nt : 𝕜\nht₀ : LT.lt 0 t\nht₁ : LT.lt t 1\n⊢ Membership.mem (interior s) (HAdd.hAdd x (HSMul.hSMul t (HSub.hSub y x)))","decl":"theorem StrictConvex.add_smul_sub_mem (h : StrictConvex 𝕜 s) (hx : x ∈ s) (hy : y ∈ s) (hxy : x ≠ y)\n    {t : 𝕜} (ht₀ : 0 < t) (ht₁ : t < 1) : x + t • (y - x) ∈ interior s := by\n  apply h.openSegment_subset hx hy hxy\n  rw [openSegment_eq_image']\n  exact mem_image_of_mem _ ⟨ht₀, ht₁⟩\n\n"}
{"name":"StrictConvex.affine_preimage","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\nF : Type u_4\ninst✝⁶ : OrderedRing 𝕜\ninst✝⁵ : TopologicalSpace E\ninst✝⁴ : TopologicalSpace F\ninst✝³ : AddCommGroup E\ninst✝² : AddCommGroup F\ninst✝¹ : Module 𝕜 E\ninst✝ : Module 𝕜 F\ns : Set F\nhs : StrictConvex 𝕜 s\nf : AffineMap 𝕜 E F\nhf : Continuous ⇑f\nhfinj : Function.Injective ⇑f\n⊢ StrictConvex 𝕜 (Set.preimage (⇑f) s)","decl":"/-- The preimage of a strictly convex set under an affine map is strictly convex. -/\ntheorem StrictConvex.affine_preimage {s : Set F} (hs : StrictConvex 𝕜 s) {f : E →ᵃ[𝕜] F}\n    (hf : Continuous f) (hfinj : Injective f) : StrictConvex 𝕜 (f ⁻¹' s) := by\n  intro x hx y hy hxy a b ha hb hab\n  refine preimage_interior_subset_interior_preimage hf ?_\n  rw [mem_preimage, Convex.combo_affine_apply hab]\n  exact hs hx hy (hfinj.ne hxy) ha hb hab\n\n"}
{"name":"StrictConvex.affine_image","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\nF : Type u_4\ninst✝⁶ : OrderedRing 𝕜\ninst✝⁵ : TopologicalSpace E\ninst✝⁴ : TopologicalSpace F\ninst✝³ : AddCommGroup E\ninst✝² : AddCommGroup F\ninst✝¹ : Module 𝕜 E\ninst✝ : Module 𝕜 F\ns : Set E\nhs : StrictConvex 𝕜 s\nf : AffineMap 𝕜 E F\nhf : IsOpenMap ⇑f\n⊢ StrictConvex 𝕜 (Set.image (⇑f) s)","decl":"/-- The image of a strictly convex set under an affine map is strictly convex. -/\ntheorem StrictConvex.affine_image (hs : StrictConvex 𝕜 s) {f : E →ᵃ[𝕜] F} (hf : IsOpenMap f) :\n    StrictConvex 𝕜 (f '' s) := by\n  rintro _ ⟨x, hx, rfl⟩ _ ⟨y, hy, rfl⟩ hxy a b ha hb hab\n  exact\n    hf.image_interior_subset _\n      ⟨a • x + b • y, ⟨hs hx hy (ne_of_apply_ne _ hxy) ha hb hab, Convex.combo_affine_apply hab⟩⟩\n\n"}
{"name":"StrictConvex.neg","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝⁴ : OrderedRing 𝕜\ninst✝³ : TopologicalSpace E\ninst✝² : AddCommGroup E\ninst✝¹ : Module 𝕜 E\ns : Set E\ninst✝ : TopologicalAddGroup E\nhs : StrictConvex 𝕜 s\n⊢ StrictConvex 𝕜 (Neg.neg s)","decl":"theorem StrictConvex.neg (hs : StrictConvex 𝕜 s) : StrictConvex 𝕜 (-s) :=\n  hs.is_linear_preimage IsLinearMap.isLinearMap_neg continuous_id.neg neg_injective\n\n"}
{"name":"StrictConvex.sub","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝⁴ : OrderedRing 𝕜\ninst✝³ : TopologicalSpace E\ninst✝² : AddCommGroup E\ninst✝¹ : Module 𝕜 E\ns t : Set E\ninst✝ : TopologicalAddGroup E\nhs : StrictConvex 𝕜 s\nht : StrictConvex 𝕜 t\n⊢ StrictConvex 𝕜 (HSub.hSub s t)","decl":"theorem StrictConvex.sub (hs : StrictConvex 𝕜 s) (ht : StrictConvex 𝕜 t) : StrictConvex 𝕜 (s - t) :=\n  (sub_eq_add_neg s t).symm ▸ hs.add ht.neg\n\n"}
{"name":"strictConvex_iff_div","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝³ : LinearOrderedField 𝕜\ninst✝² : TopologicalSpace E\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns : Set E\n⊢ Iff (StrictConvex 𝕜 s) (s.Pairwise fun x y => ∀ ⦃a b : 𝕜⦄, LT.lt 0 a → LT.lt 0 b → Membership.mem (interior s) (HAdd.hAdd (HSMul.hSMul (HDiv.hDiv a (HAdd.hAdd a b)) x) (HSMul.hSMul (HDiv.hDiv b (HAdd.hAdd a b)) y)))","decl":"/-- Alternative definition of set strict convexity, using division. -/\ntheorem strictConvex_iff_div :\n    StrictConvex 𝕜 s ↔\n      s.Pairwise fun x y =>\n        ∀ ⦃a b : 𝕜⦄, 0 < a → 0 < b → (a / (a + b)) • x + (b / (a + b)) • y ∈ interior s :=\n  ⟨fun h x hx y hy hxy a b ha hb ↦ h hx hy hxy (by positivity) (by positivity) (by field_simp),\n    fun h x hx y hy hxy a b ha hb hab ↦ by\n    convert h hx hy hxy ha hb <;> rw [hab, div_one]⟩\n\n"}
{"name":"StrictConvex.mem_smul_of_zero_mem","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\nE : Type u_3\ninst✝³ : LinearOrderedField 𝕜\ninst✝² : TopologicalSpace E\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns : Set E\nx : E\nhs : StrictConvex 𝕜 s\nzero_mem : Membership.mem s 0\nhx : Membership.mem s x\nhx₀ : Ne x 0\nt : 𝕜\nht : LT.lt 1 t\n⊢ Membership.mem (HSMul.hSMul t (interior s)) x","decl":"theorem StrictConvex.mem_smul_of_zero_mem (hs : StrictConvex 𝕜 s) (zero_mem : (0 : E) ∈ s)\n    (hx : x ∈ s) (hx₀ : x ≠ 0) {t : 𝕜} (ht : 1 < t) : x ∈ t • interior s := by\n  rw [mem_smul_set_iff_inv_smul_mem₀ (by positivity)]\n  exact hs.smul_mem_of_zero_mem zero_mem hx hx₀ (by positivity) (inv_lt_one_of_one_lt₀ ht)\n\n"}
{"name":"strictConvex_iff_convex","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\ninst✝² : LinearOrderedField 𝕜\ninst✝¹ : TopologicalSpace 𝕜\ninst✝ : OrderTopology 𝕜\ns : Set 𝕜\n⊢ Iff (StrictConvex 𝕜 s) (Convex 𝕜 s)","decl":"/-- A set in a linear ordered field is strictly convex if and only if it is convex. -/\n@[simp]\ntheorem strictConvex_iff_convex : StrictConvex 𝕜 s ↔ Convex 𝕜 s :=\n  ⟨StrictConvex.convex, fun hs => hs.ordConnected.strictConvex⟩\n\n"}
{"name":"strictConvex_iff_ordConnected","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\ninst✝² : LinearOrderedField 𝕜\ninst✝¹ : TopologicalSpace 𝕜\ninst✝ : OrderTopology 𝕜\ns : Set 𝕜\n⊢ Iff (StrictConvex 𝕜 s) s.OrdConnected","decl":"theorem strictConvex_iff_ordConnected : StrictConvex 𝕜 s ↔ s.OrdConnected :=\n  strictConvex_iff_convex.trans convex_iff_ordConnected\n\n"}
{"name":"StrictConvex.ordConnected","module":"Mathlib.Analysis.Convex.Strict","initialProofState":"𝕜 : Type u_1\ninst✝² : LinearOrderedField 𝕜\ninst✝¹ : TopologicalSpace 𝕜\ninst✝ : OrderTopology 𝕜\ns : Set 𝕜\na✝ : StrictConvex 𝕜 s\n⊢ s.OrdConnected","decl":"alias ⟨StrictConvex.ordConnected, _⟩ := strictConvex_iff_ordConnected\n\n"}
