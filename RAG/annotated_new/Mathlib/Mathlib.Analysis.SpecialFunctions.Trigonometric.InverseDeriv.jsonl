{"name":"Real.deriv_arcsin_aux","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv","initialProofState":"x : Real\nh‚ÇÅ : Ne x (-1)\nh‚ÇÇ : Ne x 1\n‚ä¢ And (HasStrictDerivAt Real.arcsin (HDiv.hDiv 1 (HSub.hSub 1 (HPow.hPow x 2)).sqrt) x) (ContDiffAt Real Top.top Real.arcsin x)","decl":"theorem deriv_arcsin_aux {x : ‚Ñù} (h‚ÇÅ : x ‚â† -1) (h‚ÇÇ : x ‚â† 1) :\n    HasStrictDerivAt arcsin (1 / ‚àö(1 - x ^ 2)) x ‚àß ContDiffAt ‚Ñù œâ arcsin x := by\n  cases' h‚ÇÅ.lt_or_lt with h‚ÇÅ h‚ÇÅ\n  ¬∑ have : 1 - x ^ 2 < 0 := by nlinarith [h‚ÇÅ]\n    rw [sqrt_eq_zero'.2 this.le, div_zero]\n    have : arcsin =·∂†[ùìù x] fun _ => -(œÄ / 2) :=\n      (gt_mem_nhds h‚ÇÅ).mono fun y hy => arcsin_of_le_neg_one hy.le\n    exact ‚ü®(hasStrictDerivAt_const x _).congr_of_eventuallyEq this.symm,\n      contDiffAt_const.congr_of_eventuallyEq this‚ü©\n  cases' h‚ÇÇ.lt_or_lt with h‚ÇÇ h‚ÇÇ\n  ¬∑ have : 0 < ‚àö(1 - x ^ 2) := sqrt_pos.2 (by nlinarith [h‚ÇÅ, h‚ÇÇ])\n    simp only [‚Üê cos_arcsin, one_div] at this ‚ä¢\n    exact ‚ü®sinPartialHomeomorph.hasStrictDerivAt_symm ‚ü®h‚ÇÅ, h‚ÇÇ‚ü© this.ne' (hasStrictDerivAt_sin _),\n      sinPartialHomeomorph.contDiffAt_symm_deriv this.ne' ‚ü®h‚ÇÅ, h‚ÇÇ‚ü© (hasDerivAt_sin _)\n        contDiff_sin.contDiffAt‚ü©\n  ¬∑ have : 1 - x ^ 2 < 0 := by nlinarith [h‚ÇÇ]\n    rw [sqrt_eq_zero'.2 this.le, div_zero]\n    have : arcsin =·∂†[ùìù x] fun _ => œÄ / 2 := (lt_mem_nhds h‚ÇÇ).mono fun y hy => arcsin_of_one_le hy.le\n    exact ‚ü®(hasStrictDerivAt_const x _).congr_of_eventuallyEq this.symm,\n      contDiffAt_const.congr_of_eventuallyEq this‚ü©\n\n"}
{"name":"Real.hasStrictDerivAt_arcsin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv","initialProofState":"x : Real\nh‚ÇÅ : Ne x (-1)\nh‚ÇÇ : Ne x 1\n‚ä¢ HasStrictDerivAt Real.arcsin (HDiv.hDiv 1 (HSub.hSub 1 (HPow.hPow x 2)).sqrt) x","decl":"theorem hasStrictDerivAt_arcsin {x : ‚Ñù} (h‚ÇÅ : x ‚â† -1) (h‚ÇÇ : x ‚â† 1) :\n    HasStrictDerivAt arcsin (1 / ‚àö(1 - x ^ 2)) x :=\n  (deriv_arcsin_aux h‚ÇÅ h‚ÇÇ).1\n\n"}
{"name":"Real.hasDerivAt_arcsin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv","initialProofState":"x : Real\nh‚ÇÅ : Ne x (-1)\nh‚ÇÇ : Ne x 1\n‚ä¢ HasDerivAt Real.arcsin (HDiv.hDiv 1 (HSub.hSub 1 (HPow.hPow x 2)).sqrt) x","decl":"theorem hasDerivAt_arcsin {x : ‚Ñù} (h‚ÇÅ : x ‚â† -1) (h‚ÇÇ : x ‚â† 1) :\n    HasDerivAt arcsin (1 / ‚àö(1 - x ^ 2)) x :=\n  (hasStrictDerivAt_arcsin h‚ÇÅ h‚ÇÇ).hasDerivAt\n\n"}
{"name":"Real.contDiffAt_arcsin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv","initialProofState":"x : Real\nh‚ÇÅ : Ne x (-1)\nh‚ÇÇ : Ne x 1\nn : WithTop ENat\n‚ä¢ ContDiffAt Real n Real.arcsin x","decl":"theorem contDiffAt_arcsin {x : ‚Ñù} (h‚ÇÅ : x ‚â† -1) (h‚ÇÇ : x ‚â† 1) {n : WithTop ‚Ñï‚àû} :\n    ContDiffAt ‚Ñù n arcsin x :=\n  (deriv_arcsin_aux h‚ÇÅ h‚ÇÇ).2.of_le le_top\n\n"}
{"name":"Real.hasDerivWithinAt_arcsin_Ici","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv","initialProofState":"x : Real\nh : Ne x (-1)\n‚ä¢ HasDerivWithinAt Real.arcsin (HDiv.hDiv 1 (HSub.hSub 1 (HPow.hPow x 2)).sqrt) (Set.Ici x) x","decl":"theorem hasDerivWithinAt_arcsin_Ici {x : ‚Ñù} (h : x ‚â† -1) :\n    HasDerivWithinAt arcsin (1 / ‚àö(1 - x ^ 2)) (Ici x) x := by\n  rcases eq_or_ne x 1 with (rfl | h')\n  ¬∑ convert (hasDerivWithinAt_const (1 : ‚Ñù) _ (œÄ / 2)).congr _ _ <;>\n      simp +contextual [arcsin_of_one_le]\n  ¬∑ exact (hasDerivAt_arcsin h h').hasDerivWithinAt\n\n"}
{"name":"Real.hasDerivWithinAt_arcsin_Iic","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv","initialProofState":"x : Real\nh : Ne x 1\n‚ä¢ HasDerivWithinAt Real.arcsin (HDiv.hDiv 1 (HSub.hSub 1 (HPow.hPow x 2)).sqrt) (Set.Iic x) x","decl":"theorem hasDerivWithinAt_arcsin_Iic {x : ‚Ñù} (h : x ‚â† 1) :\n    HasDerivWithinAt arcsin (1 / ‚àö(1 - x ^ 2)) (Iic x) x := by\n  rcases em (x = -1) with (rfl | h')\n  ¬∑ convert (hasDerivWithinAt_const (-1 : ‚Ñù) _ (-(œÄ / 2))).congr _ _ <;>\n      simp +contextual [arcsin_of_le_neg_one]\n  ¬∑ exact (hasDerivAt_arcsin h' h).hasDerivWithinAt\n\n"}
{"name":"Real.differentiableWithinAt_arcsin_Ici","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv","initialProofState":"x : Real\n‚ä¢ Iff (DifferentiableWithinAt Real Real.arcsin (Set.Ici x) x) (Ne x (-1))","decl":"theorem differentiableWithinAt_arcsin_Ici {x : ‚Ñù} :\n    DifferentiableWithinAt ‚Ñù arcsin (Ici x) x ‚Üî x ‚â† -1 := by\n  refine ‚ü®?_, fun h => (hasDerivWithinAt_arcsin_Ici h).differentiableWithinAt‚ü©\n  rintro h rfl\n  have : sin ‚àò arcsin =·∂†[ùìù[‚â•] (-1 : ‚Ñù)] id := by\n    filter_upwards [Icc_mem_nhdsGE (neg_lt_self zero_lt_one)] with x using sin_arcsin'\n  have := h.hasDerivWithinAt.sin.congr_of_eventuallyEq this.symm (by simp)\n  simpa using (uniqueDiffOn_Ici _ _ left_mem_Ici).eq_deriv _ this (hasDerivWithinAt_id _ _)\n\n"}
{"name":"Real.differentiableWithinAt_arcsin_Iic","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv","initialProofState":"x : Real\n‚ä¢ Iff (DifferentiableWithinAt Real Real.arcsin (Set.Iic x) x) (Ne x 1)","decl":"theorem differentiableWithinAt_arcsin_Iic {x : ‚Ñù} :\n    DifferentiableWithinAt ‚Ñù arcsin (Iic x) x ‚Üî x ‚â† 1 := by\n  refine ‚ü®fun h => ?_, fun h => (hasDerivWithinAt_arcsin_Iic h).differentiableWithinAt‚ü©\n  rw [‚Üê neg_neg x, ‚Üê image_neg_Ici] at h\n  have := (h.comp (-x) differentiableWithinAt_id.neg (mapsTo_image _ _)).neg\n  simpa [(¬∑ ‚àò ¬∑), differentiableWithinAt_arcsin_Ici] using this\n\n"}
{"name":"Real.differentiableAt_arcsin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv","initialProofState":"x : Real\n‚ä¢ Iff (DifferentiableAt Real Real.arcsin x) (And (Ne x (-1)) (Ne x 1))","decl":"theorem differentiableAt_arcsin {x : ‚Ñù} : DifferentiableAt ‚Ñù arcsin x ‚Üî x ‚â† -1 ‚àß x ‚â† 1 :=\n  ‚ü®fun h => ‚ü®differentiableWithinAt_arcsin_Ici.1 h.differentiableWithinAt,\n      differentiableWithinAt_arcsin_Iic.1 h.differentiableWithinAt‚ü©,\n    fun h => (hasDerivAt_arcsin h.1 h.2).differentiableAt‚ü©\n\n"}
{"name":"Real.deriv_arcsin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv","initialProofState":"‚ä¢ Eq (deriv Real.arcsin) fun x => HDiv.hDiv 1 (HSub.hSub 1 (HPow.hPow x 2)).sqrt","decl":"@[simp]\ntheorem deriv_arcsin : deriv arcsin = fun x => 1 / ‚àö(1 - x ^ 2) := by\n  funext x\n  by_cases h : x ‚â† -1 ‚àß x ‚â† 1\n  ¬∑ exact (hasDerivAt_arcsin h.1 h.2).deriv\n  ¬∑ rw [deriv_zero_of_not_differentiableAt (mt differentiableAt_arcsin.1 h)]\n    simp only [not_and_or, Ne, Classical.not_not] at h\n    rcases h with (rfl | rfl) <;> simp\n\n"}
{"name":"Real.differentiableOn_arcsin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv","initialProofState":"‚ä¢ DifferentiableOn Real Real.arcsin (HasCompl.compl (Insert.insert (-1) (Singleton.singleton 1)))","decl":"theorem differentiableOn_arcsin : DifferentiableOn ‚Ñù arcsin {-1, 1}·∂ú := fun _x hx =>\n  (differentiableAt_arcsin.2\n      ‚ü®fun h => hx (Or.inl h), fun h => hx (Or.inr h)‚ü©).differentiableWithinAt\n\n"}
{"name":"Real.contDiffOn_arcsin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv","initialProofState":"n : WithTop ENat\n‚ä¢ ContDiffOn Real n Real.arcsin (HasCompl.compl (Insert.insert (-1) (Singleton.singleton 1)))","decl":"theorem contDiffOn_arcsin {n : WithTop ‚Ñï‚àû} : ContDiffOn ‚Ñù n arcsin {-1, 1}·∂ú := fun _x hx =>\n  (contDiffAt_arcsin (mt Or.inl hx) (mt Or.inr hx)).contDiffWithinAt\n\n"}
{"name":"Real.contDiffAt_arcsin_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv","initialProofState":"x : Real\nn : WithTop ENat\n‚ä¢ Iff (ContDiffAt Real n Real.arcsin x) (Or (Eq n 0) (And (Ne x (-1)) (Ne x 1)))","decl":"theorem contDiffAt_arcsin_iff {x : ‚Ñù} {n : WithTop ‚Ñï‚àû} :\n    ContDiffAt ‚Ñù n arcsin x ‚Üî n = 0 ‚à® x ‚â† -1 ‚àß x ‚â† 1 :=\n  ‚ü®fun h => or_iff_not_imp_left.2 fun hn => differentiableAt_arcsin.1 <| h.differentiableAt <|\n      ENat.one_le_iff_ne_zero_withTop.mpr hn,\n    fun h => h.elim (fun hn => hn.symm ‚ñ∏ (contDiff_zero.2 continuous_arcsin).contDiffAt) fun hx =>\n      contDiffAt_arcsin hx.1 hx.2‚ü©\n\n"}
{"name":"Real.hasStrictDerivAt_arccos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv","initialProofState":"x : Real\nh‚ÇÅ : Ne x (-1)\nh‚ÇÇ : Ne x 1\n‚ä¢ HasStrictDerivAt Real.arccos (Neg.neg (HDiv.hDiv 1 (HSub.hSub 1 (HPow.hPow x 2)).sqrt)) x","decl":"theorem hasStrictDerivAt_arccos {x : ‚Ñù} (h‚ÇÅ : x ‚â† -1) (h‚ÇÇ : x ‚â† 1) :\n    HasStrictDerivAt arccos (-(1 / ‚àö(1 - x ^ 2))) x :=\n  (hasStrictDerivAt_arcsin h‚ÇÅ h‚ÇÇ).const_sub (œÄ / 2)\n\n"}
{"name":"Real.hasDerivAt_arccos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv","initialProofState":"x : Real\nh‚ÇÅ : Ne x (-1)\nh‚ÇÇ : Ne x 1\n‚ä¢ HasDerivAt Real.arccos (Neg.neg (HDiv.hDiv 1 (HSub.hSub 1 (HPow.hPow x 2)).sqrt)) x","decl":"theorem hasDerivAt_arccos {x : ‚Ñù} (h‚ÇÅ : x ‚â† -1) (h‚ÇÇ : x ‚â† 1) :\n    HasDerivAt arccos (-(1 / ‚àö(1 - x ^ 2))) x :=\n  (hasDerivAt_arcsin h‚ÇÅ h‚ÇÇ).const_sub (œÄ / 2)\n\n"}
{"name":"Real.contDiffAt_arccos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv","initialProofState":"x : Real\nh‚ÇÅ : Ne x (-1)\nh‚ÇÇ : Ne x 1\nn : WithTop ENat\n‚ä¢ ContDiffAt Real n Real.arccos x","decl":"theorem contDiffAt_arccos {x : ‚Ñù} (h‚ÇÅ : x ‚â† -1) (h‚ÇÇ : x ‚â† 1) {n : WithTop ‚Ñï‚àû} :\n    ContDiffAt ‚Ñù n arccos x :=\n  contDiffAt_const.sub (contDiffAt_arcsin h‚ÇÅ h‚ÇÇ)\n\n"}
{"name":"Real.hasDerivWithinAt_arccos_Ici","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv","initialProofState":"x : Real\nh : Ne x (-1)\n‚ä¢ HasDerivWithinAt Real.arccos (Neg.neg (HDiv.hDiv 1 (HSub.hSub 1 (HPow.hPow x 2)).sqrt)) (Set.Ici x) x","decl":"theorem hasDerivWithinAt_arccos_Ici {x : ‚Ñù} (h : x ‚â† -1) :\n    HasDerivWithinAt arccos (-(1 / ‚àö(1 - x ^ 2))) (Ici x) x :=\n  (hasDerivWithinAt_arcsin_Ici h).const_sub _\n\n"}
{"name":"Real.hasDerivWithinAt_arccos_Iic","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv","initialProofState":"x : Real\nh : Ne x 1\n‚ä¢ HasDerivWithinAt Real.arccos (Neg.neg (HDiv.hDiv 1 (HSub.hSub 1 (HPow.hPow x 2)).sqrt)) (Set.Iic x) x","decl":"theorem hasDerivWithinAt_arccos_Iic {x : ‚Ñù} (h : x ‚â† 1) :\n    HasDerivWithinAt arccos (-(1 / ‚àö(1 - x ^ 2))) (Iic x) x :=\n  (hasDerivWithinAt_arcsin_Iic h).const_sub _\n\n"}
{"name":"Real.differentiableWithinAt_arccos_Ici","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv","initialProofState":"x : Real\n‚ä¢ Iff (DifferentiableWithinAt Real Real.arccos (Set.Ici x) x) (Ne x (-1))","decl":"theorem differentiableWithinAt_arccos_Ici {x : ‚Ñù} :\n    DifferentiableWithinAt ‚Ñù arccos (Ici x) x ‚Üî x ‚â† -1 :=\n  (differentiableWithinAt_const_sub_iff _).trans differentiableWithinAt_arcsin_Ici\n\n"}
{"name":"Real.differentiableWithinAt_arccos_Iic","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv","initialProofState":"x : Real\n‚ä¢ Iff (DifferentiableWithinAt Real Real.arccos (Set.Iic x) x) (Ne x 1)","decl":"theorem differentiableWithinAt_arccos_Iic {x : ‚Ñù} :\n    DifferentiableWithinAt ‚Ñù arccos (Iic x) x ‚Üî x ‚â† 1 :=\n  (differentiableWithinAt_const_sub_iff _).trans differentiableWithinAt_arcsin_Iic\n\n"}
{"name":"Real.differentiableAt_arccos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv","initialProofState":"x : Real\n‚ä¢ Iff (DifferentiableAt Real Real.arccos x) (And (Ne x (-1)) (Ne x 1))","decl":"theorem differentiableAt_arccos {x : ‚Ñù} : DifferentiableAt ‚Ñù arccos x ‚Üî x ‚â† -1 ‚àß x ‚â† 1 :=\n  (differentiableAt_const _).sub_iff_right.trans differentiableAt_arcsin\n\n"}
{"name":"Real.deriv_arccos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv","initialProofState":"‚ä¢ Eq (deriv Real.arccos) fun x => Neg.neg (HDiv.hDiv 1 (HSub.hSub 1 (HPow.hPow x 2)).sqrt)","decl":"@[simp]\ntheorem deriv_arccos : deriv arccos = fun x => -(1 / ‚àö(1 - x ^ 2)) :=\n  funext fun x => (deriv_const_sub _).trans <| by simp only [deriv_arcsin]\n\n"}
{"name":"Real.differentiableOn_arccos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv","initialProofState":"‚ä¢ DifferentiableOn Real Real.arccos (HasCompl.compl (Insert.insert (-1) (Singleton.singleton 1)))","decl":"theorem differentiableOn_arccos : DifferentiableOn ‚Ñù arccos {-1, 1}·∂ú :=\n  differentiableOn_arcsin.const_sub _\n\n"}
{"name":"Real.contDiffOn_arccos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv","initialProofState":"n : WithTop ENat\n‚ä¢ ContDiffOn Real n Real.arccos (HasCompl.compl (Insert.insert (-1) (Singleton.singleton 1)))","decl":"theorem contDiffOn_arccos {n : WithTop ‚Ñï‚àû} : ContDiffOn ‚Ñù n arccos {-1, 1}·∂ú :=\n  contDiffOn_const.sub contDiffOn_arcsin\n\n"}
{"name":"Real.contDiffAt_arccos_iff","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv","initialProofState":"x : Real\nn : WithTop ENat\n‚ä¢ Iff (ContDiffAt Real n Real.arccos x) (Or (Eq n 0) (And (Ne x (-1)) (Ne x 1)))","decl":"theorem contDiffAt_arccos_iff {x : ‚Ñù} {n : WithTop ‚Ñï‚àû} :\n    ContDiffAt ‚Ñù n arccos x ‚Üî n = 0 ‚à® x ‚â† -1 ‚àß x ‚â† 1 := by\n  refine Iff.trans ‚ü®fun h => ?_, fun h => ?_‚ü© contDiffAt_arcsin_iff <;>\n    simpa [arccos] using (contDiffAt_const (c := œÄ / 2)).sub h\n\n"}
