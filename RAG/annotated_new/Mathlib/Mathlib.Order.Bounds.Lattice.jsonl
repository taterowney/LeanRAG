{"name":"gc_upperBounds_lowerBounds","module":"Mathlib.Order.Bounds.Lattice","initialProofState":"α : Type u_1\ninst✝ : Preorder α\n⊢ GaloisConnection (Function.comp (⇑OrderDual.toDual) upperBounds) (Function.comp lowerBounds ⇑OrderDual.ofDual)","decl":"theorem gc_upperBounds_lowerBounds : GaloisConnection\n    (OrderDual.toDual ∘ upperBounds : Set α → (Set α)ᵒᵈ)\n    (lowerBounds ∘ OrderDual.ofDual : (Set α)ᵒᵈ → Set α) := by\n  simpa [GaloisConnection, subset_def, mem_upperBounds, mem_lowerBounds]\n    using fun S T ↦ forall₂_swap\n\n"}
{"name":"upperBounds_iUnion","module":"Mathlib.Order.Bounds.Lattice","initialProofState":"α : Type u_1\ninst✝ : Preorder α\nι : Sort u_2\ns : ι → Set α\n⊢ Eq (upperBounds (Set.iUnion fun i => s i)) (Set.iInter fun i => upperBounds (s i))","decl":"@[simp]\ntheorem upperBounds_iUnion :\n    upperBounds (⋃ i, s i) = ⋂ i, upperBounds (s i) :=\n  gc_upperBounds_lowerBounds.l_iSup\n\n"}
{"name":"lowerBounds_iUnion","module":"Mathlib.Order.Bounds.Lattice","initialProofState":"α : Type u_1\ninst✝ : Preorder α\nι : Sort u_2\ns : ι → Set α\n⊢ Eq (lowerBounds (Set.iUnion fun i => s i)) (Set.iInter fun i => lowerBounds (s i))","decl":"@[simp]\ntheorem lowerBounds_iUnion :\n    lowerBounds (⋃ i, s i) = ⋂ i, lowerBounds (s i) :=\n  gc_upperBounds_lowerBounds.u_iInf\n\n"}
{"name":"isLUB_iUnion_iff_of_isLUB","module":"Mathlib.Order.Bounds.Lattice","initialProofState":"α : Type u_1\ninst✝ : Preorder α\nι : Sort u_2\ns : ι → Set α\nu : ι → α\nhs : ∀ (i : ι), IsLUB (s i) (u i)\nc : α\n⊢ Iff (IsLUB (Set.range u) c) (IsLUB (Set.iUnion fun i => s i) c)","decl":"theorem isLUB_iUnion_iff_of_isLUB {u : ι → α} (hs : ∀ i, IsLUB (s i) (u i)) (c : α) :\n    IsLUB (Set.range u) c ↔ IsLUB (⋃ i, s i) c := by\n  refine isLUB_congr ?_\n  simp_rw [range_eq_iUnion, upperBounds_iUnion, upperBounds_singleton, (hs _).upperBounds_eq]\n\n"}
{"name":"isGLB_iUnion_iff_of_isLUB","module":"Mathlib.Order.Bounds.Lattice","initialProofState":"α : Type u_1\ninst✝ : Preorder α\nι : Sort u_2\ns : ι → Set α\nu : ι → α\nhs : ∀ (i : ι), IsGLB (s i) (u i)\nc : α\n⊢ Iff (IsGLB (Set.range u) c) (IsGLB (Set.iUnion fun i => s i) c)","decl":"theorem isGLB_iUnion_iff_of_isLUB {u : ι → α} (hs : ∀ i, IsGLB (s i) (u i)) (c : α) :\n    IsGLB (Set.range u) c ↔ IsGLB (⋃ i, s i) c := by\n  refine isGLB_congr ?_\n  simp_rw [range_eq_iUnion, lowerBounds_iUnion, lowerBounds_singleton, (hs _).lowerBounds_eq]\n"}
