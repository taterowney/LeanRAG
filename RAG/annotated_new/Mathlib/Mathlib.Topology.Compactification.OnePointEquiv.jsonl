{"name":"OnePoint.equivProjectivization_apply_infinity","module":"Mathlib.Topology.Compactification.OnePointEquiv","initialProofState":"K : Type u_1\ninst✝¹ : DivisionRing K\ninst✝ : DecidableEq K\n⊢ Eq ((OnePoint.equivProjectivization K) OnePoint.infty) (Projectivization.mk K { fst := 1, snd := 0 } ⋯)","decl":"@[simp]\nlemma equivProjectivization_apply_infinity :\n    equivProjectivization K ∞ = mk K ⟨1, 0⟩ (by simp) :=\n  rfl\n\n"}
{"name":"OnePoint.equivProjectivization_apply_coe","module":"Mathlib.Topology.Compactification.OnePointEquiv","initialProofState":"K : Type u_1\ninst✝¹ : DivisionRing K\ninst✝ : DecidableEq K\nt : K\n⊢ Eq ((OnePoint.equivProjectivization K) ↑t) (Projectivization.mk K { fst := t, snd := 1 } ⋯)","decl":"@[simp]\nlemma equivProjectivization_apply_coe (t : K) :\n    equivProjectivization K t = mk K ⟨t, 1⟩ (by simp) :=\n  rfl\n\n"}
{"name":"OnePoint.equivProjectivization_symm_apply_mk","module":"Mathlib.Topology.Compactification.OnePointEquiv","initialProofState":"K : Type u_1\ninst✝¹ : DivisionRing K\ninst✝ : DecidableEq K\nx y : K\nh : Ne { fst := x, snd := y } 0\n⊢ Eq ((OnePoint.equivProjectivization K).symm (Projectivization.mk K { fst := x, snd := y } h)) (ite (Eq y 0) OnePoint.infty ↑(HMul.hMul (Inv.inv y) x))","decl":"@[simp]\nlemma equivProjectivization_symm_apply_mk (x y : K) (h : (x, y) ≠ 0) :\n    (equivProjectivization K).symm (mk K ⟨x, y⟩ h) = if y = 0 then ∞ else y⁻¹ * x := by\n  simp [equivProjectivization]\n\n"}
