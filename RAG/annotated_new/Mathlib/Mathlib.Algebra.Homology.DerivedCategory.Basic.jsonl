{"name":"HomotopyCategory.instClosedUnderIsomorphismsIntUpPSubcategoryAcyclic","module":"Mathlib.Algebra.Homology.DerivedCategory.Basic","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Abelian C\n⊢ CategoryTheory.ClosedUnderIsomorphisms (HomotopyCategory.subcategoryAcyclic C).P","decl":"instance : ClosedUnderIsomorphisms (subcategoryAcyclic C).P := by\n  dsimp [subcategoryAcyclic]\n  infer_instance\n\n"}
{"name":"HomotopyCategory.mem_subcategoryAcyclic_iff","module":"Mathlib.Algebra.Homology.DerivedCategory.Basic","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Abelian C\nX : HomotopyCategory C (ComplexShape.up Int)\n⊢ Iff ((HomotopyCategory.subcategoryAcyclic C).P X) (∀ (n : Int), CategoryTheory.Limits.IsZero ((HomotopyCategory.homologyFunctor C (ComplexShape.up Int) n).obj X))","decl":"lemma mem_subcategoryAcyclic_iff (X : HomotopyCategory C (ComplexShape.up ℤ)) :\n    (subcategoryAcyclic C).P X ↔ ∀ (n : ℤ), IsZero ((homologyFunctor _ _ n).obj X) :=\n  Functor.mem_homologicalKernel_iff _ X\n\n"}
{"name":"HomotopyCategory.quotient_obj_mem_subcategoryAcyclic_iff_exactAt","module":"Mathlib.Algebra.Homology.DerivedCategory.Basic","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Abelian C\nK : CochainComplex C Int\n⊢ Iff ((HomotopyCategory.subcategoryAcyclic C).P ((HomotopyCategory.quotient C (ComplexShape.up Int)).obj K)) (∀ (n : Int), HomologicalComplex.ExactAt K n)","decl":"lemma quotient_obj_mem_subcategoryAcyclic_iff_exactAt (K : CochainComplex C ℤ) :\n    (subcategoryAcyclic C).P ((quotient _ _).obj K) ↔ ∀ (n : ℤ), K.ExactAt n := by\n  rw [mem_subcategoryAcyclic_iff]\n  refine forall_congr' (fun n => ?_)\n  simp only [HomologicalComplex.exactAt_iff_isZero_homology]\n  exact ((homologyFunctorFactors C (ComplexShape.up ℤ) n).app K).isZero_iff\n\n"}
{"name":"HomotopyCategory.quasiIso_eq_subcategoryAcyclic_W","module":"Mathlib.Algebra.Homology.DerivedCategory.Basic","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Abelian C\n⊢ Eq (HomotopyCategory.quasiIso C (ComplexShape.up Int)) (HomotopyCategory.subcategoryAcyclic C).W","decl":"lemma quasiIso_eq_subcategoryAcyclic_W :\n    quasiIso C (ComplexShape.up ℤ) = (subcategoryAcyclic C).W := by\n  ext K L f\n  exact ((homologyFunctor C (ComplexShape.up ℤ) 0).mem_homologicalKernel_W_iff f).symm\n\n"}
{"name":"DerivedCategory.instIsLocalizationCochainComplexIntQQuasiIsoUp","module":"Mathlib.Algebra.Homology.DerivedCategory.Basic","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Abelian C\ninst✝ : HasDerivedCategory C\n⊢ DerivedCategory.Q.IsLocalization (HomologicalComplex.quasiIso C (ComplexShape.up Int))","decl":"instance : (Q (C := C)).IsLocalization\n    (HomologicalComplex.quasiIso C (ComplexShape.up ℤ)) := by\n  dsimp only [Q, DerivedCategory]\n  infer_instance\n\n"}
{"name":"DerivedCategory.instIsIsoMapCochainComplexIntQ","module":"Mathlib.Algebra.Homology.DerivedCategory.Basic","initialProofState":"C : Type u\ninst✝³ : CategoryTheory.Category.{v, u} C\ninst✝² : CategoryTheory.Abelian C\ninst✝¹ : HasDerivedCategory C\nK L : CochainComplex C Int\nf : Quiver.Hom K L\ninst✝ : QuasiIso f\n⊢ CategoryTheory.IsIso (DerivedCategory.Q.map f)","decl":"instance {K L : CochainComplex C ℤ} (f : K ⟶ L) [QuasiIso f] :\n    IsIso (Q.map f) :=\n  Localization.inverts Q (HomologicalComplex.quasiIso C (ComplexShape.up ℤ)) _\n    (inferInstanceAs (QuasiIso f))\n\n"}
{"name":"DerivedCategory.instIsLocalizationHomotopyCategoryIntUpQhQuasiIso","module":"Mathlib.Algebra.Homology.DerivedCategory.Basic","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Abelian C\ninst✝ : HasDerivedCategory C\n⊢ DerivedCategory.Qh.IsLocalization (HomotopyCategory.quasiIso C (ComplexShape.up Int))","decl":"instance : Qh.IsLocalization (HomotopyCategory.quasiIso C (ComplexShape.up ℤ)) := by\n  dsimp [Qh, DerivedCategory]\n  infer_instance\n\n"}
{"name":"DerivedCategory.instIsLocalizationHomotopyCategoryIntUpQhWSubcategoryAcyclic","module":"Mathlib.Algebra.Homology.DerivedCategory.Basic","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Abelian C\ninst✝ : HasDerivedCategory C\n⊢ DerivedCategory.Qh.IsLocalization (HomotopyCategory.subcategoryAcyclic C).W","decl":"instance : Qh.IsLocalization (HomotopyCategory.subcategoryAcyclic C).W := by\n  rw [← HomotopyCategory.quasiIso_eq_subcategoryAcyclic_W]\n  infer_instance\n\n"}
{"name":"DerivedCategory.instAdditiveHomotopyCategoryIntUpQh","module":"Mathlib.Algebra.Homology.DerivedCategory.Basic","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Abelian C\ninst✝ : HasDerivedCategory C\n⊢ DerivedCategory.Qh.Additive","decl":"instance : (Qh (C := C)).Additive :=\n  Localization.functor_additive Qh (HomotopyCategory.subcategoryAcyclic C).W\n\n"}
{"name":"DerivedCategory.instAdditiveCochainComplexIntQ","module":"Mathlib.Algebra.Homology.DerivedCategory.Basic","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Abelian C\ninst✝ : HasDerivedCategory C\n⊢ DerivedCategory.Q.Additive","decl":"instance : (Q (C := C)).Additive :=\n  Functor.additive_of_iso (quotientCompQhIso C)\n\n"}
{"name":"DerivedCategory.instHasZeroObject","module":"Mathlib.Algebra.Homology.DerivedCategory.Basic","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Abelian C\ninst✝ : HasDerivedCategory C\n⊢ CategoryTheory.Limits.HasZeroObject (DerivedCategory C)","decl":"noncomputable instance : HasZeroObject (DerivedCategory C) :=\n  Q.hasZeroObject_of_additive\n\n"}
{"name":"DerivedCategory.instCommShiftHomologicalComplexIntUpHomFunctorQuotientCompQhIso","module":"Mathlib.Algebra.Homology.DerivedCategory.Basic","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Abelian C\ninst✝ : HasDerivedCategory C\n⊢ CategoryTheory.NatTrans.CommShift (DerivedCategory.quotientCompQhIso C).hom Int","decl":"instance : NatTrans.CommShift (quotientCompQhIso C).hom ℤ :=\n  Functor.CommShift.ofIso_compatibility (quotientCompQhIso C) ℤ\n\n"}
{"name":"DerivedCategory.instAdditiveShiftFunctorInt","module":"Mathlib.Algebra.Homology.DerivedCategory.Basic","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Abelian C\ninst✝ : HasDerivedCategory C\nn : Int\n⊢ (CategoryTheory.shiftFunctor (DerivedCategory C) n).Additive","decl":"instance (n : ℤ) : (shiftFunctor (DerivedCategory C) n).Additive := by\n  rw [Localization.functor_additive_iff\n    Qh (HomotopyCategory.subcategoryAcyclic C).W]\n  exact Functor.additive_of_iso (Qh.commShiftIso n)\n\n"}
{"name":"DerivedCategory.instIsTriangulatedHomotopyCategoryIntUpQh","module":"Mathlib.Algebra.Homology.DerivedCategory.Basic","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Abelian C\ninst✝ : HasDerivedCategory C\n⊢ DerivedCategory.Qh.IsTriangulated","decl":"instance : (Qh (C := C)).IsTriangulated :=\n  Triangulated.Localization.isTriangulated_functor\n    Qh (HomotopyCategory.subcategoryAcyclic C).W\n\n"}
{"name":"DerivedCategory.instIsTriangulated","module":"Mathlib.Algebra.Homology.DerivedCategory.Basic","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Abelian C\ninst✝ : HasDerivedCategory C\n⊢ CategoryTheory.IsTriangulated (DerivedCategory C)","decl":"noncomputable instance : IsTriangulated (DerivedCategory C) :=\n  Triangulated.Localization.isTriangulated\n    Qh (HomotopyCategory.subcategoryAcyclic C).W\n\n"}
{"name":"DerivedCategory.instEssSurjArrowHomotopyCategoryIntUpMapArrowQh","module":"Mathlib.Algebra.Homology.DerivedCategory.Basic","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Abelian C\ninst✝ : HasDerivedCategory C\n⊢ DerivedCategory.Qh.mapArrow.EssSurj","decl":"instance : (Qh (C := C)).mapArrow.EssSurj :=\n  Localization.essSurj_mapArrow _ (HomotopyCategory.subcategoryAcyclic C).W\n\n"}
{"name":"DerivedCategory.instFullFunctorHomotopyCategoryIntUpObjWhiskeringLeftQh","module":"Mathlib.Algebra.Homology.DerivedCategory.Basic","initialProofState":"C : Type u\ninst✝³ : CategoryTheory.Category.{v, u} C\ninst✝² : CategoryTheory.Abelian C\ninst✝¹ : HasDerivedCategory C\nD : Type u_1\ninst✝ : CategoryTheory.Category.{u_2, u_1} D\n⊢ ((CategoryTheory.whiskeringLeft (HomotopyCategory C (ComplexShape.up Int)) (DerivedCategory C) D).obj DerivedCategory.Qh).Full","decl":"instance {D : Type*} [Category D] : ((whiskeringLeft _ _ D).obj (Qh (C := C))).Full :=\n  inferInstanceAs\n    (Localization.whiskeringLeftFunctor' _ (HomotopyCategory.quasiIso _ _) D).Full\n\n"}
{"name":"DerivedCategory.instFaithfulFunctorHomotopyCategoryIntUpObjWhiskeringLeftQh","module":"Mathlib.Algebra.Homology.DerivedCategory.Basic","initialProofState":"C : Type u\ninst✝³ : CategoryTheory.Category.{v, u} C\ninst✝² : CategoryTheory.Abelian C\ninst✝¹ : HasDerivedCategory C\nD : Type u_1\ninst✝ : CategoryTheory.Category.{u_2, u_1} D\n⊢ ((CategoryTheory.whiskeringLeft (HomotopyCategory C (ComplexShape.up Int)) (DerivedCategory C) D).obj DerivedCategory.Qh).Faithful","decl":"instance {D : Type*} [Category D] : ((whiskeringLeft _ _ D).obj (Qh (C := C))).Faithful :=\n  inferInstanceAs\n    (Localization.whiskeringLeftFunctor' _ (HomotopyCategory.quasiIso _ _) D).Faithful\n\n"}
{"name":"DerivedCategory.mem_distTriang_iff","module":"Mathlib.Algebra.Homology.DerivedCategory.Basic","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Abelian C\ninst✝ : HasDerivedCategory C\nT : CategoryTheory.Pretriangulated.Triangle (DerivedCategory C)\n⊢ Iff (Membership.mem CategoryTheory.Pretriangulated.distinguishedTriangles T) (Exists fun X => Exists fun Y => Exists fun f => Nonempty (CategoryTheory.Iso T (DerivedCategory.Q.mapTriangle.obj (CochainComplex.mappingCone.triangle f))))","decl":"variable {C} in\nlemma mem_distTriang_iff (T : Triangle (DerivedCategory C)) :\n    (T ∈ distTriang (DerivedCategory C)) ↔ ∃ (X Y : CochainComplex C ℤ) (f : X ⟶ Y),\n      Nonempty (T ≅ Q.mapTriangle.obj (CochainComplex.mappingCone.triangle f)) := by\n  constructor\n  · rintro ⟨T', e, ⟨X, Y, f, ⟨e'⟩⟩⟩\n    refine ⟨_, _, f, ⟨?_⟩⟩\n    exact e ≪≫ Qh.mapTriangle.mapIso e' ≪≫\n      (Functor.mapTriangleCompIso (HomotopyCategory.quotient C _) Qh).symm.app _ ≪≫\n      (Functor.mapTriangleIso (quotientCompQhIso C)).app _\n  · rintro ⟨X, Y, f, ⟨e⟩⟩\n    refine isomorphic_distinguished _ (Qh.map_distinguished _ ?_) _\n      (e ≪≫ (Functor.mapTriangleIso (quotientCompQhIso C)).symm.app _ ≪≫\n      (Functor.mapTriangleCompIso (HomotopyCategory.quotient C _) Qh).app _)\n    exact ⟨_, _, f, ⟨Iso.refl _⟩⟩\n\n"}
{"name":"DerivedCategory.instAdditiveSingleFunctor","module":"Mathlib.Algebra.Homology.DerivedCategory.Basic","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Abelian C\ninst✝ : HasDerivedCategory C\nn : Int\n⊢ (DerivedCategory.singleFunctor C n).Additive","decl":"instance (n : ℤ) : (singleFunctor C n).Additive := by\n  dsimp [singleFunctor, singleFunctors]\n  infer_instance\n\n"}
{"name":"DerivedCategory.singleFunctorsPostcompQIso_hom_hom","module":"Mathlib.Algebra.Homology.DerivedCategory.Basic","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Abelian C\ninst✝ : HasDerivedCategory C\nn : Int\n⊢ Eq ((DerivedCategory.singleFunctorsPostcompQIso C).hom.hom n) (CategoryTheory.CategoryStruct.id ((DerivedCategory.singleFunctors C).functor n))","decl":"lemma singleFunctorsPostcompQIso_hom_hom (n : ℤ) :\n    (singleFunctorsPostcompQIso C).hom.hom n = 𝟙 _ := by\n  ext X\n  dsimp [singleFunctorsPostcompQIso, HomotopyCategory.singleFunctorsPostcompQuotientIso,\n    quotientCompQhIso, HomologicalComplexUpToQuasiIso.quotientCompQhIso]\n  rw [CategoryTheory.Functor.map_id, SingleFunctors.id_hom, NatTrans.id_app]\n  erw [Category.id_comp, Category.id_comp]\n  rfl\n\n"}
{"name":"DerivedCategory.singleFunctorsPostcompQIso_inv_hom","module":"Mathlib.Algebra.Homology.DerivedCategory.Basic","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Abelian C\ninst✝ : HasDerivedCategory C\nn : Int\n⊢ Eq ((DerivedCategory.singleFunctorsPostcompQIso C).inv.hom n) (CategoryTheory.CategoryStruct.id (((CochainComplex.singleFunctors C).postcomp DerivedCategory.Q).functor n))","decl":"lemma singleFunctorsPostcompQIso_inv_hom (n : ℤ) :\n    (singleFunctorsPostcompQIso C).inv.hom n = 𝟙 _ := by\n  ext X\n  dsimp [singleFunctorsPostcompQIso, HomotopyCategory.singleFunctorsPostcompQuotientIso,\n    quotientCompQhIso, HomologicalComplexUpToQuasiIso.quotientCompQhIso]\n  erw [CategoryTheory.Functor.map_id]\n  rw [SingleFunctors.id_hom, NatTrans.id_app]\n  erw [Category.id_comp, Category.id_comp]\n  rfl\n\n"}
