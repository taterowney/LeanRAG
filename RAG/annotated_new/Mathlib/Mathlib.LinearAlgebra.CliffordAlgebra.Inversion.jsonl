{"name":"CliffordAlgebra.invOf_ι","module":"Mathlib.LinearAlgebra.CliffordAlgebra.Inversion","initialProofState":"R : Type u_1\nM : Type u_2\ninst✝⁴ : CommRing R\ninst✝³ : AddCommGroup M\ninst✝² : Module R M\nQ : QuadraticForm R M\nm : M\ninst✝¹ : Invertible (Q m)\ninst✝ : Invertible ((CliffordAlgebra.ι Q) m)\n⊢ Eq (Invertible.invOf ((CliffordAlgebra.ι Q) m)) ((CliffordAlgebra.ι Q) (HSMul.hSMul (Invertible.invOf (Q m)) m))","decl":"/-- For a vector with invertible quadratic form, $v^{-1} = \\frac{v}{Q(v)}$ -/\ntheorem invOf_ι (m : M) [Invertible (Q m)] [Invertible (ι Q m)] :\n    ⅟ (ι Q m) = ι Q (⅟ (Q m) • m) := by\n  letI := invertibleιOfInvertible Q m\n  convert (rfl : ⅟ (ι Q m) = _)\n\n"}
{"name":"CliffordAlgebra.isUnit_ι_of_isUnit","module":"Mathlib.LinearAlgebra.CliffordAlgebra.Inversion","initialProofState":"R : Type u_1\nM : Type u_2\ninst✝² : CommRing R\ninst✝¹ : AddCommGroup M\ninst✝ : Module R M\nQ : QuadraticForm R M\nm : M\nh : IsUnit (Q m)\n⊢ IsUnit ((CliffordAlgebra.ι Q) m)","decl":"theorem isUnit_ι_of_isUnit {m : M} (h : IsUnit (Q m)) : IsUnit (ι Q m) := by\n  cases h.nonempty_invertible\n  letI := invertibleιOfInvertible Q m\n  exact isUnit_of_invertible (ι Q m)\n\n"}
{"name":"CliffordAlgebra.ι_mul_ι_mul_invOf_ι","module":"Mathlib.LinearAlgebra.CliffordAlgebra.Inversion","initialProofState":"R : Type u_1\nM : Type u_2\ninst✝⁴ : CommRing R\ninst✝³ : AddCommGroup M\ninst✝² : Module R M\nQ : QuadraticForm R M\na b : M\ninst✝¹ : Invertible ((CliffordAlgebra.ι Q) a)\ninst✝ : Invertible (Q a)\n⊢ Eq (HMul.hMul (HMul.hMul ((CliffordAlgebra.ι Q) a) ((CliffordAlgebra.ι Q) b)) (Invertible.invOf ((CliffordAlgebra.ι Q) a))) ((CliffordAlgebra.ι Q) (HSub.hSub (HSMul.hSMul (HMul.hMul (Invertible.invOf (Q a)) (QuadraticMap.polar (⇑Q) a b)) a) b))","decl":"/-- $aba^{-1}$ is a vector. -/\ntheorem ι_mul_ι_mul_invOf_ι (a b : M) [Invertible (ι Q a)] [Invertible (Q a)] :\n    ι Q a * ι Q b * ⅟ (ι Q a) = ι Q ((⅟ (Q a) * QuadraticMap.polar Q a b) • a - b) := by\n  rw [invOf_ι, map_smul, mul_smul_comm, ι_mul_ι_mul_ι, ← map_smul, smul_sub, smul_smul, smul_smul,\n    invOf_mul_self, one_smul]\n\n"}
{"name":"CliffordAlgebra.invOf_ι_mul_ι_mul_ι","module":"Mathlib.LinearAlgebra.CliffordAlgebra.Inversion","initialProofState":"R : Type u_1\nM : Type u_2\ninst✝⁴ : CommRing R\ninst✝³ : AddCommGroup M\ninst✝² : Module R M\nQ : QuadraticForm R M\na b : M\ninst✝¹ : Invertible ((CliffordAlgebra.ι Q) a)\ninst✝ : Invertible (Q a)\n⊢ Eq (HMul.hMul (HMul.hMul (Invertible.invOf ((CliffordAlgebra.ι Q) a)) ((CliffordAlgebra.ι Q) b)) ((CliffordAlgebra.ι Q) a)) ((CliffordAlgebra.ι Q) (HSub.hSub (HSMul.hSMul (HMul.hMul (Invertible.invOf (Q a)) (QuadraticMap.polar (⇑Q) a b)) a) b))","decl":"/-- $a^{-1}ba$ is a vector. -/\ntheorem invOf_ι_mul_ι_mul_ι (a b : M) [Invertible (ι Q a)] [Invertible (Q a)] :\n    ⅟ (ι Q a) * ι Q b * ι Q a = ι Q ((⅟ (Q a) * QuadraticMap.polar Q a b) • a - b) := by\n  rw [invOf_ι, map_smul, smul_mul_assoc, smul_mul_assoc, ι_mul_ι_mul_ι, ← map_smul, smul_sub,\n    smul_smul, smul_smul, invOf_mul_self, one_smul]\n\n"}
{"name":"CliffordAlgebra.isUnit_of_isUnit_ι","module":"Mathlib.LinearAlgebra.CliffordAlgebra.Inversion","initialProofState":"R : Type u_1\nM : Type u_2\ninst✝³ : CommRing R\ninst✝² : AddCommGroup M\ninst✝¹ : Module R M\nQ : QuadraticForm R M\ninst✝ : Invertible 2\nm : M\nh : IsUnit ((CliffordAlgebra.ι Q) m)\n⊢ IsUnit (Q m)","decl":"theorem isUnit_of_isUnit_ι {m : M} (h : IsUnit (ι Q m)) : IsUnit (Q m) := by\n  cases h.nonempty_invertible\n  letI := invertibleOfInvertibleι Q m\n  exact isUnit_of_invertible (Q m)\n\n"}
{"name":"CliffordAlgebra.isUnit_ι_iff","module":"Mathlib.LinearAlgebra.CliffordAlgebra.Inversion","initialProofState":"R : Type u_1\nM : Type u_2\ninst✝³ : CommRing R\ninst✝² : AddCommGroup M\ninst✝¹ : Module R M\nQ : QuadraticForm R M\ninst✝ : Invertible 2\nm : M\n⊢ Iff (IsUnit ((CliffordAlgebra.ι Q) m)) (IsUnit (Q m))","decl":"@[simp] theorem isUnit_ι_iff {m : M} : IsUnit (ι Q m) ↔ IsUnit (Q m) :=\n  ⟨isUnit_of_isUnit_ι Q, isUnit_ι_of_isUnit Q⟩\n\n"}
