{"name":"IsLocalRing.toNontrivial","module":"Mathlib.RingTheory.LocalRing.Defs","initialProofState":"R : Type u_1\ninst✝ : Semiring R\nself : IsLocalRing R\n⊢ Nontrivial R","decl":"/-- A semiring is local if it is nontrivial and `a` or `b` is a unit whenever `a + b = 1`.\nNote that `IsLocalRing` is a predicate. -/\nclass IsLocalRing (R : Type*) [Semiring R] extends Nontrivial R : Prop where\n  of_is_unit_or_is_unit_of_add_one ::\n  /-- in a local ring `R`, if `a + b = 1`, then either `a` is a unit or `b` is a unit. In another\n    word, for every `a : R`, either `a` is a unit or `1 - a` is a unit. -/\n  isUnit_or_isUnit_of_add_one {a b : R} (h : a + b = 1) : IsUnit a ∨ IsUnit b\n\n"}
{"name":"IsLocalRing.isUnit_or_isUnit_of_add_one","module":"Mathlib.RingTheory.LocalRing.Defs","initialProofState":"R : Type u_1\ninst✝ : Semiring R\nself : IsLocalRing R\na b : R\nh : Eq (HAdd.hAdd a b) 1\n⊢ Or (IsUnit a) (IsUnit b)","decl":"/-- A semiring is local if it is nontrivial and `a` or `b` is a unit whenever `a + b = 1`.\nNote that `IsLocalRing` is a predicate. -/\nclass IsLocalRing (R : Type*) [Semiring R] extends Nontrivial R : Prop where\n  of_is_unit_or_is_unit_of_add_one ::\n  /-- in a local ring `R`, if `a + b = 1`, then either `a` is a unit or `b` is a unit. In another\n    word, for every `a : R`, either `a` is a unit or `1 - a` is a unit. -/\n  isUnit_or_isUnit_of_add_one {a b : R} (h : a + b = 1) : IsUnit a ∨ IsUnit b\n\n"}
