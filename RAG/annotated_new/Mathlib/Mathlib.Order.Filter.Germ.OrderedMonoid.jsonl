{"name":"Filter.Germ.instCanonicallyOrderedAdd","module":"Mathlib.Order.Filter.Germ.OrderedMonoid","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\ninst✝² : Add β\ninst✝¹ : LE β\ninst✝ : CanonicallyOrderedAdd β\n⊢ CanonicallyOrderedAdd (l.Germ β)","decl":"@[to_additive]\ninstance instCanonicallyOrderedMul [Mul β] [LE β] [CanonicallyOrderedMul β] :\n    CanonicallyOrderedMul (Germ l β) where\n  le_self_mul x y := inductionOn₂ x y fun _ _ ↦ Eventually.of_forall fun _ ↦ le_self_mul\n\n"}
{"name":"Filter.Germ.instCanonicallyOrderedMul","module":"Mathlib.Order.Filter.Germ.OrderedMonoid","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\ninst✝² : Mul β\ninst✝¹ : LE β\ninst✝ : CanonicallyOrderedMul β\n⊢ CanonicallyOrderedMul (l.Germ β)","decl":"@[to_additive]\ninstance instCanonicallyOrderedMul [Mul β] [LE β] [CanonicallyOrderedMul β] :\n    CanonicallyOrderedMul (Germ l β) where\n  le_self_mul x y := inductionOn₂ x y fun _ _ ↦ Eventually.of_forall fun _ ↦ le_self_mul\n\n"}
