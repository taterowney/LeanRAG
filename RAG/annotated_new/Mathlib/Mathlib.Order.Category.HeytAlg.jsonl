{"name":"HeytAlg.coe_of","module":"Mathlib.Order.Category.HeytAlg","initialProofState":"α : Type u_1\ninst✝ : HeytingAlgebra α\n⊢ Eq (↑(HeytAlg.of α)) α","decl":"@[simp]\ntheorem coe_of (α : Type*) [HeytingAlgebra α] : ↥(of α) = α :=\n  rfl\n\n"}
{"name":"HeytAlg.instHeytingHomClassHomαHeytingAlgebra","module":"Mathlib.Order.Category.HeytAlg","initialProofState":"X Y : HeytAlg\n⊢ HeytingHomClass (Quiver.Hom X Y) ↑X ↑Y","decl":"instance {X Y : HeytAlg.{u}} : HeytingHomClass (X ⟶ Y) ↑X ↑Y :=\n  HeytingHom.instHeytingHomClass\n\n"}
{"name":"HeytAlg.hasForgetToLat_forget₂_obj","module":"Mathlib.Order.Category.HeytAlg","initialProofState":"X : HeytAlg\n⊢ Eq (CategoryTheory.HasForget₂.forget₂.obj X) (BddDistLat.of ↑X)","decl":"@[simps]\ninstance hasForgetToLat : HasForget₂ HeytAlg BddDistLat where\n  forget₂ :=\n    { obj := fun X => BddDistLat.of X\n      map := fun {X Y} f => (f : BoundedLatticeHom X Y) }\n\n"}
{"name":"HeytAlg.hasForgetToLat_forget₂_map_toLatticeHom_toSupHom_toFun","module":"Mathlib.Order.Category.HeytAlg","initialProofState":"X Y : HeytAlg\nf : Quiver.Hom X Y\na : ↑X\n⊢ Eq ((CategoryTheory.HasForget₂.forget₂.map f).toSupHom a) (f a)","decl":"@[simps]\ninstance hasForgetToLat : HasForget₂ HeytAlg BddDistLat where\n  forget₂ :=\n    { obj := fun X => BddDistLat.of X\n      map := fun {X Y} f => (f : BoundedLatticeHom X Y) }\n\n"}
{"name":"HeytAlg.Iso.mk_hom_toFun","module":"Mathlib.Order.Category.HeytAlg","initialProofState":"α β : HeytAlg\ne : OrderIso ↑α ↑β\na : ↑α\n⊢ Eq ((HeytAlg.Iso.mk e).hom a) (e a)","decl":"/-- Constructs an isomorphism of Heyting algebras from an order isomorphism between them. -/\n@[simps]\ndef Iso.mk {α β : HeytAlg.{u}} (e : α ≃o β) : α ≅ β where\n  hom := (e : HeytingHom _ _)\n  inv := (e.symm : HeytingHom _ _)\n  hom_inv_id := by ext; exact e.symm_apply_apply _\n  inv_hom_id := by ext; exact e.apply_symm_apply _\n\n"}
{"name":"HeytAlg.Iso.mk_inv_toFun","module":"Mathlib.Order.Category.HeytAlg","initialProofState":"α β : HeytAlg\ne : OrderIso ↑α ↑β\na : ↑β\n⊢ Eq ((HeytAlg.Iso.mk e).inv a) (e.symm a)","decl":"/-- Constructs an isomorphism of Heyting algebras from an order isomorphism between them. -/\n@[simps]\ndef Iso.mk {α β : HeytAlg.{u}} (e : α ≃o β) : α ≅ β where\n  hom := (e : HeytingHom _ _)\n  inv := (e.symm : HeytingHom _ _)\n  hom_inv_id := by ext; exact e.symm_apply_apply _\n  inv_hom_id := by ext; exact e.apply_symm_apply _\n\n"}
