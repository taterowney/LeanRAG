{"name":"AlgebraicGeometry.instRespectsIsoSchemeTopologicallyInjective","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"⊢ (AlgebraicGeometry.topologically fun {α β} [TopologicalSpace α] [TopologicalSpace β] => Function.Injective).RespectsIso","decl":"instance : MorphismProperty.RespectsIso (topologically Function.Injective) :=\n  topologically_respectsIso _ (fun e ↦ e.injective) (fun _ _ hf hg ↦ hg.comp hf)\n\n"}
{"name":"AlgebraicGeometry.injective_isLocalAtTarget","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"⊢ AlgebraicGeometry.IsLocalAtTarget (AlgebraicGeometry.topologically fun {α β} [TopologicalSpace α] [TopologicalSpace β] => Function.Injective)","decl":"instance injective_isLocalAtTarget : IsLocalAtTarget (topologically Function.Injective) := by\n  refine topologically_isLocalAtTarget _ (fun _ s _ _ h ↦ h.restrictPreimage s)\n    fun f ι U H _ hf x₁ x₂ e ↦ ?_\n  obtain ⟨i, hxi⟩ : ∃ i, f x₁ ∈ U i := by simpa using congr(f x₁ ∈ $H)\n  exact congr(($(@hf i ⟨x₁, hxi⟩ ⟨x₂, show f x₂ ∈ U i from e ▸ hxi⟩ (Subtype.ext e))).1)\n\n"}
{"name":"AlgebraicGeometry.Surjective.surj","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"X Y : AlgebraicGeometry.Scheme\nf : Quiver.Hom X Y\nself : AlgebraicGeometry.Surjective f\n⊢ Function.Surjective ⇑f.base","decl":"/-- A morphism of schemes is surjective if the underlying map is. -/\n@[mk_iff]\nclass Surjective : Prop where\n  surj : Function.Surjective f.base\n\n"}
{"name":"AlgebraicGeometry.surjective_iff","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"X Y : AlgebraicGeometry.Scheme\nf : Quiver.Hom X Y\n⊢ Iff (AlgebraicGeometry.Surjective f) (Function.Surjective ⇑f.base)","decl":"/-- A morphism of schemes is surjective if the underlying map is. -/\n@[mk_iff]\nclass Surjective : Prop where\n  surj : Function.Surjective f.base\n\n"}
{"name":"AlgebraicGeometry.surjective_eq_topologically","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"⊢ Eq (@AlgebraicGeometry.Surjective) (AlgebraicGeometry.topologically fun {α β} [TopologicalSpace α] [TopologicalSpace β] => Function.Surjective)","decl":"lemma surjective_eq_topologically :\n    @Surjective = topologically Function.Surjective := by ext; exact surjective_iff _\n\n"}
{"name":"AlgebraicGeometry.Scheme.Hom.surjective","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"X Y : AlgebraicGeometry.Scheme\nf : X.Hom Y\ninst✝ : AlgebraicGeometry.Surjective f\n⊢ Function.Surjective ⇑f.base","decl":"lemma Scheme.Hom.surjective (f : X.Hom Y) [Surjective f] : Function.Surjective f.base :=\n  Surjective.surj\n\n"}
{"name":"AlgebraicGeometry.instSurjectiveOfIsIsoScheme","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"X Y : AlgebraicGeometry.Scheme\nf : Quiver.Hom X Y\ninst✝ : CategoryTheory.IsIso f\n⊢ AlgebraicGeometry.Surjective f","decl":"instance (priority := 100) [IsIso f] : Surjective f := ⟨f.homeomorph.surjective⟩\n\n"}
{"name":"AlgebraicGeometry.instSurjectiveCompScheme","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"X Y Z : AlgebraicGeometry.Scheme\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\ninst✝¹ : AlgebraicGeometry.Surjective f\ninst✝ : AlgebraicGeometry.Surjective g\n⊢ AlgebraicGeometry.Surjective (CategoryTheory.CategoryStruct.comp f g)","decl":"instance [Surjective f] [Surjective g] : Surjective (f ≫ g) := ⟨g.surjective.comp f.surjective⟩\n\n"}
{"name":"AlgebraicGeometry.Surjective.of_comp","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"X Y Z : AlgebraicGeometry.Scheme\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\ninst✝ : AlgebraicGeometry.Surjective (CategoryTheory.CategoryStruct.comp f g)\n⊢ AlgebraicGeometry.Surjective g","decl":"lemma Surjective.of_comp [Surjective (f ≫ g)] : Surjective g where\n  surj := Function.Surjective.of_comp (g := f.base) (f ≫ g).surjective\n\n"}
{"name":"AlgebraicGeometry.Surjective.comp_iff","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"X Y Z : AlgebraicGeometry.Scheme\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\ninst✝ : AlgebraicGeometry.Surjective f\n⊢ Iff (AlgebraicGeometry.Surjective (CategoryTheory.CategoryStruct.comp f g)) (AlgebraicGeometry.Surjective g)","decl":"lemma Surjective.comp_iff [Surjective f] : Surjective (f ≫ g) ↔ Surjective g :=\n  ⟨fun _ ↦ of_comp f g, fun _ ↦ inferInstance⟩\n\n"}
{"name":"AlgebraicGeometry.instRespectsIsoSchemeSurjective","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"⊢ CategoryTheory.MorphismProperty.RespectsIso @AlgebraicGeometry.Surjective","decl":"instance : MorphismProperty.RespectsIso @Surjective :=\n  surjective_eq_topologically ▸ topologically_respectsIso _ (fun e ↦ e.surjective)\n    (fun _ _ hf hg ↦ hg.comp hf)\n\n"}
{"name":"AlgebraicGeometry.surjective_isLocalAtTarget","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"⊢ AlgebraicGeometry.IsLocalAtTarget @AlgebraicGeometry.Surjective","decl":"instance surjective_isLocalAtTarget : IsLocalAtTarget @Surjective := by\n  have : MorphismProperty.RespectsIso @Surjective := inferInstance\n  rw [surjective_eq_topologically] at this ⊢\n  refine topologically_isLocalAtTarget _ (fun _ s _ _ h ↦ h.restrictPreimage s) ?_\n  intro α β _ _ f ι U H _ hf x\n  obtain ⟨i, hxi⟩ : ∃ i, x ∈ U i := by simpa using congr(x ∈ $H)\n  obtain ⟨⟨y, _⟩, hy⟩ := hf i ⟨x, hxi⟩\n  exact ⟨y, congr(($hy).1)⟩\n\n"}
{"name":"AlgebraicGeometry.range_eq_univ","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"X Y : AlgebraicGeometry.Scheme\nf : Quiver.Hom X Y\ninst✝ : AlgebraicGeometry.Surjective f\n⊢ Eq (Set.range ⇑f.base) Set.univ","decl":"@[simp]\nlemma range_eq_univ [Surjective f] : Set.range f.base = Set.univ := by\n  simpa [Set.range_eq_univ] using f.surjective\n\n"}
{"name":"AlgebraicGeometry.range_eq_range_of_surjective","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"X Y S : AlgebraicGeometry.Scheme\nf : Quiver.Hom X S\ng : Quiver.Hom Y S\ne : Quiver.Hom X Y\ninst✝ : AlgebraicGeometry.Surjective e\nhge : Eq (CategoryTheory.CategoryStruct.comp e g) f\n⊢ Eq (Set.range ⇑f.base) (Set.range ⇑g.base)","decl":"lemma range_eq_range_of_surjective {S : Scheme.{u}} (f : X ⟶ S) (g : Y ⟶ S) (e : X ⟶ Y)\n    [Surjective e] (hge : e ≫ g = f) : Set.range f.base = Set.range g.base := by\n  rw [← hge]\n  simp [Set.range_comp]\n\n"}
{"name":"AlgebraicGeometry.mem_range_iff_of_surjective","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"X Y S : AlgebraicGeometry.Scheme\nf : Quiver.Hom X S\ng : Quiver.Hom Y S\ne : Quiver.Hom X Y\ninst✝ : AlgebraicGeometry.Surjective e\nhge : Eq (CategoryTheory.CategoryStruct.comp e g) f\ns : ↑↑S.toPresheafedSpace\n⊢ Iff (Membership.mem (Set.range ⇑f.base) s) (Membership.mem (Set.range ⇑g.base) s)","decl":"lemma mem_range_iff_of_surjective {S : Scheme.{u}} (f : X ⟶ S) (g : Y ⟶ S) (e : X ⟶ Y)\n    [Surjective e] (hge : e ≫ g = f) (s : S) : s ∈ Set.range f.base ↔ s ∈ Set.range g.base := by\n  rw [range_eq_range_of_surjective f g e hge]\n"}
{"name":"AlgebraicGeometry.injective_isStableUnderComposition","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"⊢ (AlgebraicGeometry.topologically fun {α β} [TopologicalSpace α] [TopologicalSpace β] x => Function.Injective x).IsStableUnderComposition","decl":"instance injective_isStableUnderComposition :\n    MorphismProperty.IsStableUnderComposition (topologically (Function.Injective ·)) where\n  comp_mem _ _ hf hg := hg.comp hf\n\n"}
{"name":"AlgebraicGeometry.instRespectsIsoSchemeTopologicallyIsOpenMap","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"⊢ (AlgebraicGeometry.topologically fun {α β} [TopologicalSpace α] [TopologicalSpace β] => IsOpenMap).RespectsIso","decl":"instance : (topologically IsOpenMap).RespectsIso :=\n  topologically_respectsIso _ (fun e ↦ e.isOpenMap) (fun _ _ hf hg ↦ hg.comp hf)\n\n"}
{"name":"AlgebraicGeometry.isOpenMap_isLocalAtTarget","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"⊢ AlgebraicGeometry.IsLocalAtTarget (AlgebraicGeometry.topologically fun {α β} [TopologicalSpace α] [TopologicalSpace β] => IsOpenMap)","decl":"instance isOpenMap_isLocalAtTarget : IsLocalAtTarget (topologically IsOpenMap) :=\n  topologically_isLocalAtTarget' _ fun _ _ _ hU _ ↦ isOpenMap_iff_isOpenMap_of_iSup_eq_top hU\n\n"}
{"name":"AlgebraicGeometry.instRespectsIsoSchemeTopologicallyIsClosedMap","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"⊢ (AlgebraicGeometry.topologically fun {α β} [TopologicalSpace α] [TopologicalSpace β] => IsClosedMap).RespectsIso","decl":"instance : (topologically IsClosedMap).RespectsIso :=\n  topologically_respectsIso _ (fun e ↦ e.isClosedMap) (fun _ _ hf hg ↦ hg.comp hf)\n\n"}
{"name":"AlgebraicGeometry.isClosedMap_isLocalAtTarget","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"⊢ AlgebraicGeometry.IsLocalAtTarget (AlgebraicGeometry.topologically fun {α β} [TopologicalSpace α] [TopologicalSpace β] => IsClosedMap)","decl":"instance isClosedMap_isLocalAtTarget : IsLocalAtTarget (topologically IsClosedMap) :=\n  topologically_isLocalAtTarget' _ fun _ _ _ hU _ ↦ isClosedMap_iff_isClosedMap_of_iSup_eq_top hU\n\n"}
{"name":"AlgebraicGeometry.instRespectsIsoSchemeTopologicallyIsEmbedding","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"⊢ (AlgebraicGeometry.topologically fun {α β} [TopologicalSpace α] [TopologicalSpace β] => Topology.IsEmbedding).RespectsIso","decl":"instance : (topologically IsEmbedding).RespectsIso :=\n  topologically_respectsIso _ (fun e ↦ e.isEmbedding) (fun _ _ hf hg ↦ hg.comp hf)\n\n"}
{"name":"AlgebraicGeometry.isEmbedding_isLocalAtTarget","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"⊢ AlgebraicGeometry.IsLocalAtTarget (AlgebraicGeometry.topologically fun {α β} [TopologicalSpace α] [TopologicalSpace β] => Topology.IsEmbedding)","decl":"instance isEmbedding_isLocalAtTarget : IsLocalAtTarget (topologically IsEmbedding) :=\n  topologically_isLocalAtTarget' _ fun _ _ _ ↦ isEmbedding_iff_of_iSup_eq_top\n\n"}
{"name":"AlgebraicGeometry.instRespectsIsoSchemeTopologicallyIsOpenEmbedding","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"⊢ (AlgebraicGeometry.topologically fun {α β} [TopologicalSpace α] [TopologicalSpace β] => Topology.IsOpenEmbedding).RespectsIso","decl":"instance : (topologically IsOpenEmbedding).RespectsIso :=\n  topologically_respectsIso _ (fun e ↦ e.isOpenEmbedding) (fun _ _ hf hg ↦ hg.comp hf)\n\n"}
{"name":"AlgebraicGeometry.isOpenEmbedding_isLocalAtTarget","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"⊢ AlgebraicGeometry.IsLocalAtTarget (AlgebraicGeometry.topologically fun {α β} [TopologicalSpace α] [TopologicalSpace β] => Topology.IsOpenEmbedding)","decl":"instance isOpenEmbedding_isLocalAtTarget : IsLocalAtTarget (topologically IsOpenEmbedding) :=\n  topologically_isLocalAtTarget' _ fun _ _ _ ↦ isOpenEmbedding_iff_isOpenEmbedding_of_iSup_eq_top\n\n"}
{"name":"AlgebraicGeometry.instRespectsIsoSchemeTopologicallyIsClosedEmbedding","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"⊢ (AlgebraicGeometry.topologically fun {α β} [TopologicalSpace α] [TopologicalSpace β] => Topology.IsClosedEmbedding).RespectsIso","decl":"instance : (topologically IsClosedEmbedding).RespectsIso :=\n  topologically_respectsIso _ (fun e ↦ e.isClosedEmbedding) (fun _ _ hf hg ↦ hg.comp hf)\n\n"}
{"name":"AlgebraicGeometry.isClosedEmbedding_isLocalAtTarget","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"⊢ AlgebraicGeometry.IsLocalAtTarget (AlgebraicGeometry.topologically fun {α β} [TopologicalSpace α] [TopologicalSpace β] => Topology.IsClosedEmbedding)","decl":"instance isClosedEmbedding_isLocalAtTarget : IsLocalAtTarget (topologically IsClosedEmbedding) :=\n  topologically_isLocalAtTarget' _\n    fun _ _ _ ↦ isClosedEmbedding_iff_isClosedEmbedding_of_iSup_eq_top\n\n"}
{"name":"AlgebraicGeometry.IsDominant.denseRange","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"X Y : AlgebraicGeometry.Scheme\nf : Quiver.Hom X Y\nself : AlgebraicGeometry.IsDominant f\n⊢ DenseRange ⇑f.base","decl":"/-- A morphism of schemes is dominant if the underlying map has dense range. -/\n@[mk_iff]\nclass IsDominant : Prop where\n  denseRange : DenseRange f.base\n\n"}
{"name":"AlgebraicGeometry.isDominant_iff","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"X Y : AlgebraicGeometry.Scheme\nf : Quiver.Hom X Y\n⊢ Iff (AlgebraicGeometry.IsDominant f) (DenseRange ⇑f.base)","decl":"/-- A morphism of schemes is dominant if the underlying map has dense range. -/\n@[mk_iff]\nclass IsDominant : Prop where\n  denseRange : DenseRange f.base\n\n"}
{"name":"AlgebraicGeometry.dominant_eq_topologically","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"⊢ Eq (@AlgebraicGeometry.IsDominant) (AlgebraicGeometry.topologically fun {α β} [TopologicalSpace α] [TopologicalSpace β] => DenseRange)","decl":"lemma dominant_eq_topologically :\n    @IsDominant = topologically DenseRange := by ext; exact isDominant_iff _\n\n"}
{"name":"AlgebraicGeometry.Scheme.Hom.denseRange","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"X Y : AlgebraicGeometry.Scheme\nf : X.Hom Y\ninst✝ : AlgebraicGeometry.IsDominant f\n⊢ DenseRange ⇑f.base","decl":"lemma Scheme.Hom.denseRange (f : X.Hom Y) [IsDominant f] : DenseRange f.base :=\n  IsDominant.denseRange\n\n"}
{"name":"AlgebraicGeometry.instIsDominantOfSurjective","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"X Y : AlgebraicGeometry.Scheme\nf : Quiver.Hom X Y\ninst✝ : AlgebraicGeometry.Surjective f\n⊢ AlgebraicGeometry.IsDominant f","decl":"instance (priority := 100) [Surjective f] : IsDominant f := ⟨f.surjective.denseRange⟩\n\n"}
{"name":"AlgebraicGeometry.instIsDominantCompScheme","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"X Y Z : AlgebraicGeometry.Scheme\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\ninst✝¹ : AlgebraicGeometry.IsDominant f\ninst✝ : AlgebraicGeometry.IsDominant g\n⊢ AlgebraicGeometry.IsDominant (CategoryTheory.CategoryStruct.comp f g)","decl":"instance [IsDominant f] [IsDominant g] : IsDominant (f ≫ g) :=\n  ⟨g.denseRange.comp f.denseRange g.base.2⟩\n\n"}
{"name":"AlgebraicGeometry.instIsMultiplicativeSchemeIsDominant","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"⊢ CategoryTheory.MorphismProperty.IsMultiplicative @AlgebraicGeometry.IsDominant","decl":"instance : MorphismProperty.IsMultiplicative @IsDominant where\n  id_mem := fun _ ↦ inferInstance\n  comp_mem := fun _ _ _ _ ↦ inferInstance\n\n"}
{"name":"AlgebraicGeometry.IsDominant.of_comp","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"X Y Z : AlgebraicGeometry.Scheme\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\nH : AlgebraicGeometry.IsDominant (CategoryTheory.CategoryStruct.comp f g)\n⊢ AlgebraicGeometry.IsDominant g","decl":"lemma IsDominant.of_comp [H : IsDominant (f ≫ g)] : IsDominant g := by\n  rw [isDominant_iff, denseRange_iff_closure_range, ← Set.univ_subset_iff] at H ⊢\n  exact H.trans (closure_mono (Set.range_comp_subset_range f.base g.base))\n\n"}
{"name":"AlgebraicGeometry.IsDominant.comp_iff","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"X Y Z : AlgebraicGeometry.Scheme\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\ninst✝ : AlgebraicGeometry.IsDominant f\n⊢ Iff (AlgebraicGeometry.IsDominant (CategoryTheory.CategoryStruct.comp f g)) (AlgebraicGeometry.IsDominant g)","decl":"lemma IsDominant.comp_iff [IsDominant f] : IsDominant (f ≫ g) ↔ IsDominant g :=\n  ⟨fun _ ↦ of_comp f g, fun _ ↦ inferInstance⟩\n\n"}
{"name":"AlgebraicGeometry.IsDominant.respectsIso","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"⊢ CategoryTheory.MorphismProperty.RespectsIso @AlgebraicGeometry.IsDominant","decl":"instance IsDominant.respectsIso : MorphismProperty.RespectsIso @IsDominant :=\n  MorphismProperty.respectsIso_of_isStableUnderComposition fun _ _ f (_ : IsIso f) ↦ inferInstance\n\n"}
{"name":"AlgebraicGeometry.IsDominant.isLocalAtTarget","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"⊢ AlgebraicGeometry.IsLocalAtTarget @AlgebraicGeometry.IsDominant","decl":"instance IsDominant.isLocalAtTarget : IsLocalAtTarget @IsDominant :=\n  have : MorphismProperty.RespectsIso (topologically DenseRange) :=\n    dominant_eq_topologically ▸ IsDominant.respectsIso\n  dominant_eq_topologically ▸ topologically_isLocalAtTarget' DenseRange\n    fun _ _ _ hU _ ↦ denseRange_iff_denseRange_of_iSup_eq_top hU\n\n"}
{"name":"AlgebraicGeometry.surjective_of_isDominant_of_isClosed_range","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"X Y : AlgebraicGeometry.Scheme\nf : Quiver.Hom X Y\ninst✝ : AlgebraicGeometry.IsDominant f\nhf : IsClosed (Set.range ⇑f.base)\n⊢ AlgebraicGeometry.Surjective f","decl":"lemma surjective_of_isDominant_of_isClosed_range (f : X ⟶ Y) [IsDominant f]\n    (hf : IsClosed (Set.range f.base)) :\n    Surjective f :=\n  ⟨by rw [← Set.range_eq_univ, ← hf.closure_eq, f.denseRange.closure_range]⟩\n\n"}
{"name":"AlgebraicGeometry.IsDominant.of_comp_of_isOpenImmersion","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"X Y Z : AlgebraicGeometry.Scheme\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\nH : AlgebraicGeometry.IsDominant (CategoryTheory.CategoryStruct.comp f g)\ninst✝ : AlgebraicGeometry.IsOpenImmersion g\n⊢ AlgebraicGeometry.IsDominant f","decl":"lemma IsDominant.of_comp_of_isOpenImmersion\n    (f : X ⟶ Y) (g : Y ⟶ Z) [H : IsDominant (f ≫ g)] [IsOpenImmersion g] :\n    IsDominant f := by\n  rw [isDominant_iff, DenseRange] at H ⊢\n  simp only [Scheme.comp_coeBase, TopCat.coe_comp, Set.range_comp] at H\n  convert H.preimage g.isOpenEmbedding.isOpenMap using 1\n  rw [Set.preimage_image_eq _ g.isOpenEmbedding.injective]\n\n"}
{"name":"AlgebraicGeometry.specializingMap_respectsIso","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"⊢ (AlgebraicGeometry.topologically @SpecializingMap).RespectsIso","decl":"instance specializingMap_respectsIso : (topologically @SpecializingMap).RespectsIso := by\n  apply topologically_respectsIso\n  · introv\n    exact f.isClosedMap.specializingMap\n  · introv hf hg\n    exact hf.comp hg\n\n"}
{"name":"AlgebraicGeometry.specializingMap_isLocalAtTarget","module":"Mathlib.AlgebraicGeometry.Morphisms.UnderlyingMap","initialProofState":"⊢ AlgebraicGeometry.IsLocalAtTarget (AlgebraicGeometry.topologically @SpecializingMap)","decl":"instance specializingMap_isLocalAtTarget : IsLocalAtTarget (topologically @SpecializingMap) := by\n  apply topologically_isLocalAtTarget\n  · introv _ _ hf\n    rw [specializingMap_iff_closure_singleton_subset] at hf ⊢\n    intro ⟨x, hx⟩ ⟨y, hy⟩ hcl\n    simp only [closure_subtype, Set.restrictPreimage_mk, Set.image_singleton] at hcl\n    obtain ⟨a, ha, hay⟩ := hf x hcl\n    rw [← specializes_iff_mem_closure] at hcl\n    exact ⟨⟨a, by simp [hay, hy]⟩, by simpa [closure_subtype], by simpa⟩\n  · introv hU _ hsp\n    simp_rw [specializingMap_iff_closure_singleton_subset] at hsp ⊢\n    intro x y hy\n    have : ∃ i, y ∈ U i := Opens.mem_iSup.mp (hU ▸ Opens.mem_top _)\n    obtain ⟨i, hi⟩ := this\n    rw [← specializes_iff_mem_closure] at hy\n    have hfx : f x ∈ U i := (U i).2.stableUnderGeneralization hy hi\n    have hy : (⟨y, hi⟩ : U i) ∈ closure {⟨f x, hfx⟩} := by\n      simp only [closure_subtype, Set.image_singleton]\n      rwa [← specializes_iff_mem_closure]\n    obtain ⟨a, ha, hay⟩ := hsp i ⟨x, hfx⟩ hy\n    rw [closure_subtype] at ha\n    simp only [Opens.carrier_eq_coe, Set.image_singleton] at ha\n    apply_fun Subtype.val at hay\n    simp only [Opens.carrier_eq_coe, Set.restrictPreimage_coe] at hay\n    use a.val, ha, hay\n\n"}
