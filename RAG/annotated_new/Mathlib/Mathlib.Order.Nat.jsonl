{"name":"Nat.instNoMaxOrder","module":"Mathlib.Order.Nat","initialProofState":"⊢ NoMaxOrder Nat","decl":"instance instNoMaxOrder : NoMaxOrder ℕ where\n  exists_gt n := ⟨n + 1, n.lt_succ_self⟩\n\n"}
{"name":"Nat.bot_eq_zero","module":"Mathlib.Order.Nat","initialProofState":"⊢ Eq Bot.bot 0","decl":"@[simp, nolint simpNF] protected lemma bot_eq_zero : ⊥ = 0 := rfl\n\n"}
{"name":"Nat.isLeast_find","module":"Mathlib.Order.Nat","initialProofState":"p : Nat → Prop\ninst✝ : DecidablePred p\nhp : Exists fun n => p n\n⊢ IsLeast (setOf fun n => p n) (Nat.find hp)","decl":"/-- `Nat.find` is the minimum natural number satisfying a predicate `p`. -/\nlemma isLeast_find {p : ℕ → Prop} [DecidablePred p] (hp : ∃ n, p n) :\n    IsLeast {n | p n} (Nat.find hp) :=\n  ⟨Nat.find_spec hp, fun _ ↦ Nat.find_min' hp⟩\n\n"}
{"name":"Set.Nonempty.isLeast_natFind","module":"Mathlib.Order.Nat","initialProofState":"s : Set Nat\ninst✝ : DecidablePred fun x => Membership.mem s x\nhs : s.Nonempty\n⊢ IsLeast s (Nat.find hs)","decl":"/-- `Nat.find` is the minimum element of a nonempty set of natural numbers. -/\nlemma Set.Nonempty.isLeast_natFind {s : Set ℕ} [DecidablePred (· ∈ s)] (hs : s.Nonempty) :\n    IsLeast s (Nat.find hs) :=\n  Nat.isLeast_find hs\n"}
