{"name":"Submodule.FG.prod","module":"Mathlib.RingTheory.Finiteness.Prod","initialProofState":"R : Type u_1\nM : Type u_2\ninst✝⁴ : Semiring R\ninst✝³ : AddCommMonoid M\ninst✝² : Module R M\nP : Type u_3\ninst✝¹ : AddCommMonoid P\ninst✝ : Module R P\nsb : Submodule R M\nsc : Submodule R P\nhsb : sb.FG\nhsc : sc.FG\n⊢ (sb.prod sc).FG","decl":"theorem FG.prod {sb : Submodule R M} {sc : Submodule R P} (hsb : sb.FG) (hsc : sc.FG) :\n    (sb.prod sc).FG :=\n  let ⟨tb, htb⟩ := fg_def.1 hsb\n  let ⟨tc, htc⟩ := fg_def.1 hsc\n  fg_def.2\n    ⟨LinearMap.inl R M P '' tb ∪ LinearMap.inr R M P '' tc, (htb.1.image _).union (htc.1.image _),\n      by rw [LinearMap.span_inl_union_inr, htb.2, htc.2]⟩\n\n"}
{"name":"Module.Finite.prod","module":"Mathlib.RingTheory.Finiteness.Prod","initialProofState":"R : Type u_1\nM : Type u_2\nN : Type u_3\ninst✝⁴ : Semiring R\ninst✝³ : AddCommMonoid M\ninst✝² : Module R M\ninst✝¹ : AddCommMonoid N\ninst✝ : Module R N\nhM : Module.Finite R M\nhN : Module.Finite R N\n⊢ Module.Finite R (Prod M N)","decl":"instance prod [hM : Module.Finite R M] [hN : Module.Finite R N] : Module.Finite R (M × N) :=\n  ⟨by\n    rw [← Submodule.prod_top]\n    exact hM.1.prod hN.1⟩\n\n"}
