{"name":"wellFounded_dvdNotUnit","module":"Mathlib.RingTheory.UniqueFactorizationDomain.Defs","initialProofState":"α : Type u_2\ninst✝ : CommMonoidWithZero α\nh : WfDvdMonoid α\n⊢ WellFounded DvdNotUnit","decl":"theorem wellFounded_dvdNotUnit {α : Type*} [CommMonoidWithZero α] [h : WfDvdMonoid α] :\n    WellFounded (DvdNotUnit (α := α)) :=\n  h.wf\n\n"}
{"name":"WfDvdMonoid.exists_irreducible_factor","module":"Mathlib.RingTheory.UniqueFactorizationDomain.Defs","initialProofState":"α : Type u_1\ninst✝¹ : CommMonoidWithZero α\ninst✝ : WfDvdMonoid α\na : α\nha : Not (IsUnit a)\nha0 : Ne a 0\n⊢ Exists fun i => And (Irreducible i) (Dvd.dvd i a)","decl":"theorem exists_irreducible_factor {a : α} (ha : ¬IsUnit a) (ha0 : a ≠ 0) :\n    ∃ i, Irreducible i ∧ i ∣ a :=\n  let ⟨b, hs, hr⟩ := wellFounded_dvdNotUnit.has_min { b | b ∣ a ∧ ¬IsUnit b } ⟨a, dvd_rfl, ha⟩\n  ⟨b,\n    ⟨hs.2, fun c d he =>\n      let h := dvd_trans ⟨d, he⟩ hs.1\n      or_iff_not_imp_left.2 fun hc =>\n        of_not_not fun hd => hr c ⟨h, hc⟩ ⟨ne_zero_of_dvd_ne_zero ha0 h, d, hd, he⟩⟩,\n    hs.1⟩\n\n"}
{"name":"WfDvdMonoid.induction_on_irreducible","module":"Mathlib.RingTheory.UniqueFactorizationDomain.Defs","initialProofState":"α : Type u_1\ninst✝¹ : CommMonoidWithZero α\ninst✝ : WfDvdMonoid α\nP : α → Prop\na : α\nh0 : P 0\nhu : ∀ (u : α), IsUnit u → P u\nhi : ∀ (a i : α), Ne a 0 → Irreducible i → P a → P (HMul.hMul i a)\n⊢ P a","decl":"@[elab_as_elim]\ntheorem induction_on_irreducible {P : α → Prop} (a : α) (h0 : P 0) (hu : ∀ u : α, IsUnit u → P u)\n    (hi : ∀ a i : α, a ≠ 0 → Irreducible i → P a → P (i * a)) : P a :=\n  haveI := Classical.dec\n  wellFounded_dvdNotUnit.fix\n    (fun a ih =>\n      if ha0 : a = 0 then ha0.substr h0\n      else\n        if hau : IsUnit a then hu a hau\n        else\n          let ⟨i, hii, b, hb⟩ := exists_irreducible_factor hau ha0\n          let hb0 : b ≠ 0 := ne_zero_of_dvd_ne_zero ha0 ⟨i, mul_comm i b ▸ hb⟩\n          hb.symm ▸ hi b i hb0 hii <| ih b ⟨hb0, i, hii.1, mul_comm i b ▸ hb⟩)\n    a\n\n"}
{"name":"WfDvdMonoid.exists_factors","module":"Mathlib.RingTheory.UniqueFactorizationDomain.Defs","initialProofState":"α : Type u_1\ninst✝¹ : CommMonoidWithZero α\ninst✝ : WfDvdMonoid α\na : α\na✝ : Ne a 0\n⊢ Exists fun f => And (∀ (b : α), Membership.mem f b → Irreducible b) (Associated f.prod a)","decl":"theorem exists_factors (a : α) :\n    a ≠ 0 → ∃ f : Multiset α, (∀ b ∈ f, Irreducible b) ∧ Associated f.prod a :=\n  induction_on_irreducible a (fun h => (h rfl).elim)\n    (fun _ hu _ => ⟨0, fun _ h => False.elim (Multiset.not_mem_zero _ h), hu.unit, one_mul _⟩)\n    fun a i ha0 hi ih _ =>\n    let ⟨s, hs⟩ := ih ha0\n    ⟨i ::ₘ s, fun b H => (Multiset.mem_cons.1 H).elim (fun h => h.symm ▸ hi) (hs.1 b), by\n      rw [s.prod_cons i]\n      exact hs.2.mul_left i⟩\n\n"}
{"name":"WfDvdMonoid.not_unit_iff_exists_factors_eq","module":"Mathlib.RingTheory.UniqueFactorizationDomain.Defs","initialProofState":"α : Type u_1\ninst✝¹ : CommMonoidWithZero α\ninst✝ : WfDvdMonoid α\na : α\nhn0 : Ne a 0\n⊢ Iff (Not (IsUnit a)) (Exists fun f => And (∀ (b : α), Membership.mem f b → Irreducible b) (And (Eq f.prod a) (Ne f EmptyCollection.emptyCollection)))","decl":"theorem not_unit_iff_exists_factors_eq (a : α) (hn0 : a ≠ 0) :\n    ¬IsUnit a ↔ ∃ f : Multiset α, (∀ b ∈ f, Irreducible b) ∧ f.prod = a ∧ f ≠ ∅ :=\n  ⟨fun hnu => by\n    obtain ⟨f, hi, u, rfl⟩ := exists_factors a hn0\n    obtain ⟨b, h⟩ := Multiset.exists_mem_of_ne_zero fun h : f = 0 => hnu <| by simp [h]\n    classical\n      refine ⟨(f.erase b).cons (b * u), fun a ha => ?_, ?_, Multiset.cons_ne_zero⟩\n      · obtain rfl | ha := Multiset.mem_cons.1 ha\n        exacts [Associated.irreducible ⟨u, rfl⟩ (hi b h), hi a (Multiset.mem_of_mem_erase ha)]\n      · rw [Multiset.prod_cons, mul_comm b, mul_assoc, Multiset.prod_erase h, mul_comm],\n    fun ⟨_, hi, he, hne⟩ =>\n    let ⟨b, h⟩ := Multiset.exists_mem_of_ne_zero hne\n    not_isUnit_of_not_isUnit_dvd (hi b h).not_unit <| he ▸ Multiset.dvd_prod h⟩\n\n"}
{"name":"WfDvdMonoid.isRelPrime_of_no_irreducible_factors","module":"Mathlib.RingTheory.UniqueFactorizationDomain.Defs","initialProofState":"α : Type u_1\ninst✝¹ : CommMonoidWithZero α\ninst✝ : WfDvdMonoid α\nx y : α\nnonzero : Not (And (Eq x 0) (Eq y 0))\nH : ∀ (z : α), Irreducible z → Dvd.dvd z x → Not (Dvd.dvd z y)\n⊢ IsRelPrime x y","decl":"theorem isRelPrime_of_no_irreducible_factors {x y : α} (nonzero : ¬(x = 0 ∧ y = 0))\n    (H : ∀ z : α, Irreducible z → z ∣ x → ¬z ∣ y) : IsRelPrime x y :=\n  isRelPrime_of_no_nonunits_factors nonzero fun _z znu znz zx zy ↦\n    have ⟨i, h1, h2⟩ := exists_irreducible_factor znu znz\n    H i h1 (h2.trans zx) (h2.trans zy)\n\n"}
{"name":"UniqueFactorizationMonoid.irreducible_iff_prime","module":"Mathlib.RingTheory.UniqueFactorizationDomain.Defs","initialProofState":"α : Type u_2\ninst✝ : CancelCommMonoidWithZero α\nself : UniqueFactorizationMonoid α\na : α\n⊢ Iff (Irreducible a) (Prime a)","decl":"/-- unique factorization monoids.\n\nThese are defined as `CancelCommMonoidWithZero`s with well-founded strict divisibility\nrelations, but this is equivalent to more familiar definitions:\n\nEach element (except zero) is uniquely represented as a multiset of irreducible factors.\nUniqueness is only up to associated elements.\n\nEach element (except zero) is non-uniquely represented as a multiset\nof prime factors.\n\nTo define a UFD using the definition in terms of multisets\nof irreducible factors, use the definition `of_existsUnique_irreducible_factors`\n\nTo define a UFD using the definition in terms of multisets\nof prime factors, use the definition `of_exists_prime_factors`\n\n-/\nclass UniqueFactorizationMonoid (α : Type*) [CancelCommMonoidWithZero α] extends\n    IsWellFounded α DvdNotUnit : Prop where\n  protected irreducible_iff_prime : ∀ {a : α}, Irreducible a ↔ Prime a\n\n"}
{"name":"UniqueFactorizationMonoid.toIsWellFounded","module":"Mathlib.RingTheory.UniqueFactorizationDomain.Defs","initialProofState":"α : Type u_2\ninst✝ : CancelCommMonoidWithZero α\nself : UniqueFactorizationMonoid α\n⊢ IsWellFounded α DvdNotUnit","decl":"/-- unique factorization monoids.\n\nThese are defined as `CancelCommMonoidWithZero`s with well-founded strict divisibility\nrelations, but this is equivalent to more familiar definitions:\n\nEach element (except zero) is uniquely represented as a multiset of irreducible factors.\nUniqueness is only up to associated elements.\n\nEach element (except zero) is non-uniquely represented as a multiset\nof prime factors.\n\nTo define a UFD using the definition in terms of multisets\nof irreducible factors, use the definition `of_existsUnique_irreducible_factors`\n\nTo define a UFD using the definition in terms of multisets\nof prime factors, use the definition `of_exists_prime_factors`\n\n-/\nclass UniqueFactorizationMonoid (α : Type*) [CancelCommMonoidWithZero α] extends\n    IsWellFounded α DvdNotUnit : Prop where\n  protected irreducible_iff_prime : ∀ {a : α}, Irreducible a ↔ Prime a\n\n"}
{"name":"ufm_of_decomposition_of_wfDvdMonoid","module":"Mathlib.RingTheory.UniqueFactorizationDomain.Defs","initialProofState":"α : Type u_1\ninst✝² : CancelCommMonoidWithZero α\ninst✝¹ : WfDvdMonoid α\ninst✝ : DecompositionMonoid α\n⊢ UniqueFactorizationMonoid α","decl":"instance (priority := 100) ufm_of_decomposition_of_wfDvdMonoid\n    [CancelCommMonoidWithZero α] [WfDvdMonoid α] [DecompositionMonoid α] :\n    UniqueFactorizationMonoid α :=\n  { ‹WfDvdMonoid α› with irreducible_iff_prime := irreducible_iff_prime }\n\n"}
{"name":"UniqueFactorizationMonoid.exists_prime_factors","module":"Mathlib.RingTheory.UniqueFactorizationDomain.Defs","initialProofState":"α : Type u_1\ninst✝¹ : CancelCommMonoidWithZero α\ninst✝ : UniqueFactorizationMonoid α\na : α\na✝ : Ne a 0\n⊢ Exists fun f => And (∀ (b : α), Membership.mem f b → Prime b) (Associated f.prod a)","decl":"theorem exists_prime_factors (a : α) :\n    a ≠ 0 → ∃ f : Multiset α, (∀ b ∈ f, Prime b) ∧ f.prod ~ᵤ a := by\n  simp_rw [← UniqueFactorizationMonoid.irreducible_iff_prime]\n  apply WfDvdMonoid.exists_factors a\n\n"}
{"name":"UniqueFactorizationMonoid.exists_prime_iff","module":"Mathlib.RingTheory.UniqueFactorizationDomain.Defs","initialProofState":"α : Type u_1\ninst✝¹ : CancelCommMonoidWithZero α\ninst✝ : UniqueFactorizationMonoid α\n⊢ Iff (Exists fun p => Prime p) (Exists fun x => And (Ne x 0) (Not (IsUnit x)))","decl":"lemma exists_prime_iff :\n    (∃ (p : α), Prime p) ↔ ∃ (x : α), x ≠ 0 ∧ ¬ IsUnit x := by\n  refine ⟨fun ⟨p, hp⟩ ↦ ⟨p, hp.ne_zero, hp.not_unit⟩, fun ⟨x, hx₀, hxu⟩ ↦ ?_⟩\n  obtain ⟨f, hf, -⟩ := WfDvdMonoid.exists_irreducible_factor hxu hx₀\n  exact ⟨f, UniqueFactorizationMonoid.irreducible_iff_prime.mp hf⟩\n\n"}
{"name":"UniqueFactorizationMonoid.induction_on_prime","module":"Mathlib.RingTheory.UniqueFactorizationDomain.Defs","initialProofState":"α : Type u_1\ninst✝¹ : CancelCommMonoidWithZero α\ninst✝ : UniqueFactorizationMonoid α\nP : α → Prop\na : α\nh₁ : P 0\nh₂ : ∀ (x : α), IsUnit x → P x\nh₃ : ∀ (a p : α), Ne a 0 → Prime p → P a → P (HMul.hMul p a)\n⊢ P a","decl":"@[elab_as_elim]\ntheorem induction_on_prime {P : α → Prop} (a : α) (h₁ : P 0) (h₂ : ∀ x : α, IsUnit x → P x)\n    (h₃ : ∀ a p : α, a ≠ 0 → Prime p → P a → P (p * a)) : P a := by\n  simp_rw [← UniqueFactorizationMonoid.irreducible_iff_prime] at h₃\n  exact WfDvdMonoid.induction_on_irreducible a h₁ h₂ h₃\n\n"}
{"name":"UniqueFactorizationMonoid.instDecompositionMonoid","module":"Mathlib.RingTheory.UniqueFactorizationDomain.Defs","initialProofState":"α : Type u_1\ninst✝ : CancelCommMonoidWithZero α\n⊢ DecompositionMonoid α","decl":"instance : DecompositionMonoid α where\n  primal a := by\n    obtain rfl | ha := eq_or_ne a 0; · exact isPrimal_zero\n    obtain ⟨f, hf, u, rfl⟩ := exists_prime_factors a ha\n    exact ((Submonoid.isPrimal α).multiset_prod_mem f (hf · ·|>.isPrimal)).mul u.isUnit.isPrimal\n\n"}
{"name":"UniqueFactorizationMonoid.factors_prod","module":"Mathlib.RingTheory.UniqueFactorizationDomain.Defs","initialProofState":"α : Type u_1\ninst✝¹ : CancelCommMonoidWithZero α\ninst✝ : UniqueFactorizationMonoid α\na : α\nane0 : Ne a 0\n⊢ Associated (UniqueFactorizationMonoid.factors a).prod a","decl":"theorem factors_prod {a : α} (ane0 : a ≠ 0) : Associated (factors a).prod a := by\n  rw [factors, dif_neg ane0]\n  exact (Classical.choose_spec (exists_prime_factors a ane0)).2\n\n"}
{"name":"UniqueFactorizationMonoid.factors_zero","module":"Mathlib.RingTheory.UniqueFactorizationDomain.Defs","initialProofState":"α : Type u_1\ninst✝¹ : CancelCommMonoidWithZero α\ninst✝ : UniqueFactorizationMonoid α\n⊢ Eq (UniqueFactorizationMonoid.factors 0) 0","decl":"@[simp]\ntheorem factors_zero : factors (0 : α) = 0 := by simp [factors]\n\n"}
{"name":"UniqueFactorizationMonoid.ne_zero_of_mem_factors","module":"Mathlib.RingTheory.UniqueFactorizationDomain.Defs","initialProofState":"α : Type u_1\ninst✝¹ : CancelCommMonoidWithZero α\ninst✝ : UniqueFactorizationMonoid α\np a : α\nh : Membership.mem (UniqueFactorizationMonoid.factors a) p\n⊢ Ne a 0","decl":"theorem ne_zero_of_mem_factors {p a : α} (h : p ∈ factors a) : a ≠ 0 := by\n  rintro rfl\n  simp at h\n\n"}
{"name":"UniqueFactorizationMonoid.dvd_of_mem_factors","module":"Mathlib.RingTheory.UniqueFactorizationDomain.Defs","initialProofState":"α : Type u_1\ninst✝¹ : CancelCommMonoidWithZero α\ninst✝ : UniqueFactorizationMonoid α\np a : α\nh : Membership.mem (UniqueFactorizationMonoid.factors a) p\n⊢ Dvd.dvd p a","decl":"theorem dvd_of_mem_factors {p a : α} (h : p ∈ factors a) : p ∣ a :=\n  dvd_trans (Multiset.dvd_prod h) (Associated.dvd (factors_prod (ne_zero_of_mem_factors h)))\n\n"}
{"name":"UniqueFactorizationMonoid.prime_of_factor","module":"Mathlib.RingTheory.UniqueFactorizationDomain.Defs","initialProofState":"α : Type u_1\ninst✝¹ : CancelCommMonoidWithZero α\ninst✝ : UniqueFactorizationMonoid α\na x : α\nhx : Membership.mem (UniqueFactorizationMonoid.factors a) x\n⊢ Prime x","decl":"theorem prime_of_factor {a : α} (x : α) (hx : x ∈ factors a) : Prime x := by\n  have ane0 := ne_zero_of_mem_factors hx\n  rw [factors, dif_neg ane0] at hx\n  exact (Classical.choose_spec (UniqueFactorizationMonoid.exists_prime_factors a ane0)).1 x hx\n\n"}
{"name":"UniqueFactorizationMonoid.irreducible_of_factor","module":"Mathlib.RingTheory.UniqueFactorizationDomain.Defs","initialProofState":"α : Type u_1\ninst✝¹ : CancelCommMonoidWithZero α\ninst✝ : UniqueFactorizationMonoid α\na x : α\na✝ : Membership.mem (UniqueFactorizationMonoid.factors a) x\n⊢ Irreducible x","decl":"theorem irreducible_of_factor {a : α} : ∀ x : α, x ∈ factors a → Irreducible x := fun x h =>\n  (prime_of_factor x h).irreducible\n\n"}
