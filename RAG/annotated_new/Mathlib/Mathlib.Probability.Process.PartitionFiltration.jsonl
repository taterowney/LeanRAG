{"name":"ProbabilityTheory.measurableSet_partitionFiltration_of_mem","module":"Mathlib.Probability.Process.PartitionFiltration","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nt : Nat → Set α\nht : ∀ (n : Nat), MeasurableSet (t n)\nn : Nat\ns : Set α\nhs : Membership.mem (memPartition t n) s\n⊢ MeasurableSet s","decl":"lemma measurableSet_partitionFiltration_of_mem (ht : ∀ n, MeasurableSet (t n)) (n : ℕ) {s : Set α}\n    (hs : s ∈ memPartition t n) :\n    MeasurableSet[partitionFiltration ht n] s :=\n  measurableSet_generateFrom hs\n\n"}
{"name":"ProbabilityTheory.measurableSet_partitionFiltration_memPartitionSet","module":"Mathlib.Probability.Process.PartitionFiltration","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nt : Nat → Set α\nht : ∀ (n : Nat), MeasurableSet (t n)\nn : Nat\na : α\n⊢ MeasurableSet (memPartitionSet t n a)","decl":"lemma measurableSet_partitionFiltration_memPartitionSet (ht : ∀ n, MeasurableSet (t n))\n    (n : ℕ) (a : α) :\n    MeasurableSet[partitionFiltration ht n] (memPartitionSet t n a) :=\n  measurableSet_partitionFiltration_of_mem ht n (memPartitionSet_mem t n a)\n\n"}
{"name":"ProbabilityTheory.measurable_memPartitionSet_subtype","module":"Mathlib.Probability.Process.PartitionFiltration","initialProofState":"α : Type u_1\nm✝ : MeasurableSpace α\nt : Nat → Set α\nht : ∀ (n : Nat), MeasurableSet (t n)\nn : Nat\nm : MeasurableSpace ↑(memPartition t n)\n⊢ Measurable fun a => ⟨memPartitionSet t n a, ⋯⟩","decl":"lemma measurable_memPartitionSet_subtype (ht : ∀ n, MeasurableSet (t n)) (n : ℕ)\n    (m : MeasurableSpace (memPartition t n)) :\n    @Measurable α (memPartition t n) (partitionFiltration ht n) m\n      (fun a ↦ ⟨memPartitionSet t n a, memPartitionSet_mem t n a⟩) := by\n  refine @measurable_to_countable' (memPartition t n) α m _\n    (partitionFiltration ht n) _ (fun s ↦ ?_)\n  rcases s with ⟨s, hs⟩\n  suffices MeasurableSet[partitionFiltration ht n] {x | memPartitionSet t n x = s} by\n    convert this\n    ext x\n    simp\n  simp_rw [memPartitionSet_eq_iff _ hs]\n  exact measurableSet_partitionFiltration_of_mem _ _ hs\n\n"}
{"name":"ProbabilityTheory.measurable_partitionFiltration_memPartitionSet","module":"Mathlib.Probability.Process.PartitionFiltration","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nt : Nat → Set α\nht : ∀ (n : Nat), MeasurableSet (t n)\nn : Nat\n⊢ Measurable (memPartitionSet t n)","decl":"lemma measurable_partitionFiltration_memPartitionSet (ht : ∀ n, MeasurableSet (t n)) (n : ℕ) :\n    Measurable[partitionFiltration ht n] (memPartitionSet t n) :=\n  measurable_subtype_coe.comp (measurable_memPartitionSet_subtype ht _ _)\n\n"}
{"name":"ProbabilityTheory.measurable_memPartitionSet","module":"Mathlib.Probability.Process.PartitionFiltration","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nt : Nat → Set α\nht : ∀ (n : Nat), MeasurableSet (t n)\nn : Nat\n⊢ Measurable (memPartitionSet t n)","decl":"lemma measurable_memPartitionSet (ht : ∀ n, MeasurableSet (t n)) (n : ℕ) :\n    Measurable (memPartitionSet t n) :=\n  (measurable_partitionFiltration_memPartitionSet ht n).mono ((partitionFiltration ht).le n) le_rfl\n\n"}
{"name":"ProbabilityTheory.iSup_partitionFiltration_eq_generateFrom_range","module":"Mathlib.Probability.Process.PartitionFiltration","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nt : Nat → Set α\nht : ∀ (n : Nat), MeasurableSet (t n)\n⊢ Eq (iSup fun n => ↑(ProbabilityTheory.partitionFiltration ht) n) (MeasurableSpace.generateFrom (Set.range t))","decl":"lemma iSup_partitionFiltration_eq_generateFrom_range (ht : ∀ n, MeasurableSet (t n)) :\n    ⨆ n, partitionFiltration ht n = generateFrom (Set.range t) := by\n  conv_rhs => rw [← generateFrom_iUnion_memPartition t, ← iSup_generateFrom]\n  rfl\n\n"}
{"name":"ProbabilityTheory.iSup_partitionFiltration","module":"Mathlib.Probability.Process.PartitionFiltration","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nt : Nat → Set α\nht : ∀ (n : Nat), MeasurableSet (t n)\nht_range : Eq (MeasurableSpace.generateFrom (Set.range t)) m\n⊢ Eq (iSup fun n => ↑(ProbabilityTheory.partitionFiltration ht) n) m","decl":"lemma iSup_partitionFiltration (ht : ∀ n, MeasurableSet (t n))\n    (ht_range : generateFrom (Set.range t) = m) :\n    ⨆ n, partitionFiltration ht n = m := by\n  rw [iSup_partitionFiltration_eq_generateFrom_range ht, ht_range]\n\n"}
{"name":"ProbabilityTheory.measurableSet_countableFiltration_of_mem","module":"Mathlib.Probability.Process.PartitionFiltration","initialProofState":"α : Type u_1\ninst✝¹ : MeasurableSpace α\ninst✝ : MeasurableSpace.CountablyGenerated α\nn : Nat\ns : Set α\nhs : Membership.mem (MeasurableSpace.countablePartition α n) s\n⊢ MeasurableSet s","decl":"lemma measurableSet_countableFiltration_of_mem (n : ℕ) {s : Set α}\n    (hs : s ∈ countablePartition α n) :\n    MeasurableSet[countableFiltration α n] s :=\n  measurableSet_generateFrom hs\n\n"}
{"name":"ProbabilityTheory.measurableSet_countableFiltration_countablePartitionSet","module":"Mathlib.Probability.Process.PartitionFiltration","initialProofState":"α : Type u_1\ninst✝¹ : MeasurableSpace α\ninst✝ : MeasurableSpace.CountablyGenerated α\nn : Nat\nt : α\n⊢ MeasurableSet (MeasurableSpace.countablePartitionSet n t)","decl":"lemma measurableSet_countableFiltration_countablePartitionSet (n : ℕ) (t : α) :\n    MeasurableSet[countableFiltration α n] (countablePartitionSet n t) :=\n  measurableSet_countableFiltration_of_mem n (countablePartitionSet_mem n t)\n\n"}
{"name":"ProbabilityTheory.measurable_countablePartitionSet_subtype","module":"Mathlib.Probability.Process.PartitionFiltration","initialProofState":"α : Type u_1\ninst✝¹ : MeasurableSpace α\ninst✝ : MeasurableSpace.CountablyGenerated α\nn : Nat\nm : MeasurableSpace ↑(MeasurableSpace.countablePartition α n)\n⊢ Measurable fun a => ⟨MeasurableSpace.countablePartitionSet n a, ⋯⟩","decl":"lemma measurable_countablePartitionSet_subtype (n : ℕ)\n    (m : MeasurableSpace (countablePartition α n)) :\n    @Measurable α (countablePartition α n) (countableFiltration α n) m\n      (fun a ↦ ⟨countablePartitionSet n a, countablePartitionSet_mem n a⟩) :=\n  measurable_memPartitionSet_subtype\n    (measurableSet_enumerateCountable_countableGeneratingSet (α := α)) n m\n\n"}
{"name":"ProbabilityTheory.measurable_countableFiltration_countablePartitionSet","module":"Mathlib.Probability.Process.PartitionFiltration","initialProofState":"α : Type u_2\ninst✝¹ : MeasurableSpace α\ninst✝ : MeasurableSpace.CountablyGenerated α\nn : Nat\n⊢ Measurable (MeasurableSpace.countablePartitionSet n)","decl":"lemma measurable_countableFiltration_countablePartitionSet (α : Type*)\n    [MeasurableSpace α] [CountablyGenerated α] (n : ℕ) :\n    Measurable[countableFiltration α n] (countablePartitionSet n) :=\n  measurable_subtype_coe.comp (measurable_countablePartitionSet_subtype _ _)\n\n"}
{"name":"ProbabilityTheory.measurable_countablePartitionSet","module":"Mathlib.Probability.Process.PartitionFiltration","initialProofState":"α : Type u_2\ninst✝¹ : MeasurableSpace α\ninst✝ : MeasurableSpace.CountablyGenerated α\nn : Nat\n⊢ Measurable (MeasurableSpace.countablePartitionSet n)","decl":"lemma measurable_countablePartitionSet (α : Type*) [MeasurableSpace α] [CountablyGenerated α]\n    (n : ℕ) :\n    Measurable (countablePartitionSet (α := α) n) :=\n  (measurable_countableFiltration_countablePartitionSet α n).mono ((countableFiltration α).le n)\n    le_rfl\n\n"}
{"name":"ProbabilityTheory.iSup_countableFiltration","module":"Mathlib.Probability.Process.PartitionFiltration","initialProofState":"α : Type u_2\nm : MeasurableSpace α\ninst✝ : MeasurableSpace.CountablyGenerated α\n⊢ Eq (iSup fun n => ↑(ProbabilityTheory.countableFiltration α) n) m","decl":"lemma iSup_countableFiltration (α : Type*) [m : MeasurableSpace α] [CountablyGenerated α] :\n    ⨆ n, countableFiltration α n = m := by\n  conv_rhs => rw [← generateFrom_iUnion_countablePartition α, ← iSup_generateFrom]\n  rfl\n\n"}
