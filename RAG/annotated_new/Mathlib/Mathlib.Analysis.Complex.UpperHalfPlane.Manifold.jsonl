{"name":"UpperHalfPlane.instIsManifoldComplexModelWithCornersSelfTopWithTopENat","module":"Mathlib.Analysis.Complex.UpperHalfPlane.Manifold","initialProofState":"‚ä¢ IsManifold (modelWithCornersSelf Complex Complex) Top.top UpperHalfPlane","decl":"instance : IsManifold ùìò(‚ÑÇ) œâ ‚Ñç :=\n  UpperHalfPlane.isOpenEmbedding_coe.isManifold_singleton\n\n"}
{"name":"UpperHalfPlane.contMDiff_coe","module":"Mathlib.Analysis.Complex.UpperHalfPlane.Manifold","initialProofState":"n : WithTop ENat\n‚ä¢ ContMDiff (modelWithCornersSelf Complex Complex) (modelWithCornersSelf Complex Complex) n UpperHalfPlane.coe","decl":"/-- The inclusion map `‚Ñç ‚Üí ‚ÑÇ` is an analytic map of manifolds. -/\ntheorem contMDiff_coe {n : WithTop ‚Ñï‚àû} : ContMDiff ùìò(‚ÑÇ) ùìò(‚ÑÇ) n ((‚Üë) : ‚Ñç ‚Üí ‚ÑÇ) :=\n  fun _ => contMDiffAt_extChartAt\n\n"}
{"name":"UpperHalfPlane.smooth_coe","module":"Mathlib.Analysis.Complex.UpperHalfPlane.Manifold","initialProofState":"n : WithTop ENat\n‚ä¢ ContMDiff (modelWithCornersSelf Complex Complex) (modelWithCornersSelf Complex Complex) n UpperHalfPlane.coe","decl":"@[deprecated (since := \"2024-11-20\")] alias smooth_coe := contMDiff_coe\n\n"}
{"name":"UpperHalfPlane.mdifferentiable_coe","module":"Mathlib.Analysis.Complex.UpperHalfPlane.Manifold","initialProofState":"‚ä¢ MDifferentiable (modelWithCornersSelf Complex Complex) (modelWithCornersSelf Complex Complex) UpperHalfPlane.coe","decl":"/-- The inclusion map `‚Ñç ‚Üí ‚ÑÇ` is a differentiable map of manifolds. -/\ntheorem mdifferentiable_coe : MDifferentiable ùìò(‚ÑÇ) ùìò(‚ÑÇ) ((‚Üë) : ‚Ñç ‚Üí ‚ÑÇ) :=\n  contMDiff_coe.mdifferentiable le_top\n\n"}
{"name":"UpperHalfPlane.contMDiffAt_ofComplex","module":"Mathlib.Analysis.Complex.UpperHalfPlane.Manifold","initialProofState":"n : WithTop ENat\nz : Complex\nhz : LT.lt 0 z.im\n‚ä¢ ContMDiffAt (modelWithCornersSelf Complex Complex) (modelWithCornersSelf Complex Complex) n (‚ÜëUpperHalfPlane.ofComplex) z","decl":"lemma contMDiffAt_ofComplex {n : WithTop ‚Ñï‚àû} {z : ‚ÑÇ} (hz : 0 < z.im) :\n    ContMDiffAt ùìò(‚ÑÇ) ùìò(‚ÑÇ) n ofComplex z := by\n  rw [contMDiffAt_iff]\n  constructor\n  ¬∑ -- continuity at z\n    rw [ContinuousAt, nhds_induced, tendsto_comap_iff]\n    refine Tendsto.congr' (eventuallyEq_coe_comp_ofComplex hz).symm ?_\n    simpa only [ofComplex_apply_of_im_pos hz, Subtype.coe_mk] using tendsto_id\n  ¬∑ -- smoothness in local chart\n    simp only [extChartAt, PartialHomeomorph.extend, modelWithCornersSelf_partialEquiv,\n      PartialEquiv.trans_refl, PartialHomeomorph.toFun_eq_coe, PartialHomeomorph.refl_partialEquiv,\n      PartialEquiv.refl_source, PartialHomeomorph.singletonChartedSpace_chartAt_eq,\n      PartialEquiv.refl_symm, PartialEquiv.refl_coe, CompTriple.comp_eq, modelWithCornersSelf_coe,\n      Set.range_id, id_eq, contDiffWithinAt_univ]\n    exact contDiffAt_id.congr_of_eventuallyEq (eventuallyEq_coe_comp_ofComplex hz)\n\n"}
{"name":"UpperHalfPlane.smoothAt_ofComplex","module":"Mathlib.Analysis.Complex.UpperHalfPlane.Manifold","initialProofState":"n : WithTop ENat\nz : Complex\nhz : LT.lt 0 z.im\n‚ä¢ ContMDiffAt (modelWithCornersSelf Complex Complex) (modelWithCornersSelf Complex Complex) n (‚ÜëUpperHalfPlane.ofComplex) z","decl":"@[deprecated (since := \"2024-11-20\")] alias smoothAt_ofComplex := contMDiffAt_ofComplex\n\n"}
{"name":"UpperHalfPlane.mdifferentiableAt_ofComplex","module":"Mathlib.Analysis.Complex.UpperHalfPlane.Manifold","initialProofState":"z : Complex\nhz : LT.lt 0 z.im\n‚ä¢ MDifferentiableAt (modelWithCornersSelf Complex Complex) (modelWithCornersSelf Complex Complex) (‚ÜëUpperHalfPlane.ofComplex) z","decl":"lemma mdifferentiableAt_ofComplex {z : ‚ÑÇ} (hz : 0 < z.im) :\n    MDifferentiableAt ùìò(‚ÑÇ) ùìò(‚ÑÇ) ofComplex z :=\n  (contMDiffAt_ofComplex hz).mdifferentiableAt le_top\n\n"}
{"name":"UpperHalfPlane.mdifferentiableAt_iff","module":"Mathlib.Analysis.Complex.UpperHalfPlane.Manifold","initialProofState":"f : UpperHalfPlane ‚Üí Complex\nœÑ : UpperHalfPlane\n‚ä¢ Iff (MDifferentiableAt (modelWithCornersSelf Complex Complex) (modelWithCornersSelf Complex Complex) f œÑ) (DifferentiableAt Complex (Function.comp f ‚ÜëUpperHalfPlane.ofComplex) ‚ÜëœÑ)","decl":"lemma mdifferentiableAt_iff {f : ‚Ñç ‚Üí ‚ÑÇ} {œÑ : ‚Ñç} :\n    MDifferentiableAt ùìò(‚ÑÇ) ùìò(‚ÑÇ) f œÑ ‚Üî DifferentiableAt ‚ÑÇ (f ‚àò ofComplex) ‚ÜëœÑ := by\n  rw [‚Üê mdifferentiableAt_iff_differentiableAt]\n  refine ‚ü®fun hf ‚Ü¶ ?_, fun hf ‚Ü¶ ?_‚ü©\n  ¬∑ exact (ofComplex_apply œÑ ‚ñ∏ hf).comp _ (mdifferentiableAt_ofComplex œÑ.im_pos)\n  ¬∑ simpa only [Function.comp_def, ofComplex_apply] using hf.comp œÑ (mdifferentiable_coe œÑ)\n\n"}
{"name":"UpperHalfPlane.mdifferentiable_iff","module":"Mathlib.Analysis.Complex.UpperHalfPlane.Manifold","initialProofState":"f : UpperHalfPlane ‚Üí Complex\n‚ä¢ Iff (MDifferentiable (modelWithCornersSelf Complex Complex) (modelWithCornersSelf Complex Complex) f) (DifferentiableOn Complex (Function.comp f ‚ÜëUpperHalfPlane.ofComplex) (setOf fun z => LT.lt 0 z.im))","decl":"lemma mdifferentiable_iff {f : ‚Ñç ‚Üí ‚ÑÇ} :\n    MDifferentiable ùìò(‚ÑÇ) ùìò(‚ÑÇ) f ‚Üî DifferentiableOn ‚ÑÇ (f ‚àò ofComplex) {z | 0 < z.im} :=\n  ‚ü®fun h z hz ‚Ü¶ (mdifferentiableAt_iff.mp (h ‚ü®z, hz‚ü©)).differentiableWithinAt,\n    fun h ‚ü®z, hz‚ü© ‚Ü¶ mdifferentiableAt_iff.mpr <| (h z hz).differentiableAt\n      <| (Complex.continuous_im.isOpen_preimage _ isOpen_Ioi).mem_nhds hz‚ü©\n\n"}
