{"name":"AbsoluteValue.map_units_int","module":"Mathlib.Data.Int.AbsoluteValue","initialProofState":"S : Type u_2\ninst✝ : LinearOrderedCommRing S\nabv : AbsoluteValue Int S\nx : Units Int\n⊢ Eq (abv ↑x) 1","decl":"@[simp]\ntheorem AbsoluteValue.map_units_int (abv : AbsoluteValue ℤ S) (x : ℤˣ) : abv x = 1 := by\n  rcases Int.units_eq_one_or x with (rfl | rfl) <;> simp\n\n"}
{"name":"AbsoluteValue.map_units_intCast","module":"Mathlib.Data.Int.AbsoluteValue","initialProofState":"R : Type u_1\nS : Type u_2\ninst✝² : Ring R\ninst✝¹ : LinearOrderedCommRing S\ninst✝ : Nontrivial R\nabv : AbsoluteValue R S\nx : Units Int\n⊢ Eq (abv ↑↑x) 1","decl":"@[simp]\ntheorem AbsoluteValue.map_units_intCast [Nontrivial R] (abv : AbsoluteValue R S) (x : ℤˣ) :\n    abv ((x : ℤ) : R) = 1 := by rcases Int.units_eq_one_or x with (rfl | rfl) <;> simp\n\n"}
{"name":"AbsoluteValue.map_units_int_smul","module":"Mathlib.Data.Int.AbsoluteValue","initialProofState":"R : Type u_1\nS : Type u_2\ninst✝¹ : Ring R\ninst✝ : LinearOrderedCommRing S\nabv : AbsoluteValue R S\nx : Units Int\ny : R\n⊢ Eq (abv (HSMul.hSMul x y)) (abv y)","decl":"@[simp]\ntheorem AbsoluteValue.map_units_int_smul (abv : AbsoluteValue R S) (x : ℤˣ) (y : R) :\n    abv (x • y) = abv y := by rcases Int.units_eq_one_or x with (rfl | rfl) <;> simp\n\n"}
{"name":"Int.natAbsHom_apply","module":"Mathlib.Data.Int.AbsoluteValue","initialProofState":"m : Int\n⊢ Eq (Int.natAbsHom m) m.natAbs","decl":"/-- `Int.natAbs` as a bundled monoid with zero hom. -/\n@[simps]\ndef Int.natAbsHom : ℤ →*₀ ℕ where\n  toFun := Int.natAbs\n  map_mul' := Int.natAbs_mul\n  map_one' := Int.natAbs_one\n  map_zero' := Int.natAbs_zero\n"}
