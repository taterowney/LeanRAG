{"name":"hasFDerivAtFilter_iff_hasDerivAtFilter","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝⁴ : NontriviallyNormedField 𝕜\nF : Type v\ninst✝³ : AddCommGroup F\ninst✝² : Module 𝕜 F\ninst✝¹ : TopologicalSpace F\nf : 𝕜 → F\nx : 𝕜\nL : Filter 𝕜\ninst✝ : ContinuousSMul 𝕜 F\nf' : ContinuousLinearMap (RingHom.id 𝕜) 𝕜 F\n⊢ Iff (HasFDerivAtFilter f f' x L) (HasDerivAtFilter f (f' 1) x L)","decl":"/-- Expressing `HasFDerivAtFilter f f' x L` in terms of `HasDerivAtFilter` -/\ntheorem hasFDerivAtFilter_iff_hasDerivAtFilter {f' : 𝕜 →L[𝕜] F} :\n    HasFDerivAtFilter f f' x L ↔ HasDerivAtFilter f (f' 1) x L := by simp [HasDerivAtFilter]\n\n"}
{"name":"HasFDerivAtFilter.hasDerivAtFilter","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝⁴ : NontriviallyNormedField 𝕜\nF : Type v\ninst✝³ : AddCommGroup F\ninst✝² : Module 𝕜 F\ninst✝¹ : TopologicalSpace F\nf : 𝕜 → F\nx : 𝕜\nL : Filter 𝕜\ninst✝ : ContinuousSMul 𝕜 F\nf' : ContinuousLinearMap (RingHom.id 𝕜) 𝕜 F\na✝ : HasFDerivAtFilter f f' x L\n⊢ HasDerivAtFilter f (f' 1) x L","decl":"theorem HasFDerivAtFilter.hasDerivAtFilter {f' : 𝕜 →L[𝕜] F} :\n    HasFDerivAtFilter f f' x L → HasDerivAtFilter f (f' 1) x L :=\n  hasFDerivAtFilter_iff_hasDerivAtFilter.mp\n\n"}
{"name":"hasFDerivWithinAt_iff_hasDerivWithinAt","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝⁴ : NontriviallyNormedField 𝕜\nF : Type v\ninst✝³ : AddCommGroup F\ninst✝² : Module 𝕜 F\ninst✝¹ : TopologicalSpace F\nf : 𝕜 → F\nx : 𝕜\ns : Set 𝕜\ninst✝ : ContinuousSMul 𝕜 F\nf' : ContinuousLinearMap (RingHom.id 𝕜) 𝕜 F\n⊢ Iff (HasFDerivWithinAt f f' s x) (HasDerivWithinAt f (f' 1) s x)","decl":"/-- Expressing `HasFDerivWithinAt f f' s x` in terms of `HasDerivWithinAt` -/\ntheorem hasFDerivWithinAt_iff_hasDerivWithinAt {f' : 𝕜 →L[𝕜] F} :\n    HasFDerivWithinAt f f' s x ↔ HasDerivWithinAt f (f' 1) s x :=\n  hasFDerivAtFilter_iff_hasDerivAtFilter\n\n"}
{"name":"hasDerivWithinAt_iff_hasFDerivWithinAt","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝⁴ : NontriviallyNormedField 𝕜\nF : Type v\ninst✝³ : AddCommGroup F\ninst✝² : Module 𝕜 F\ninst✝¹ : TopologicalSpace F\nf : 𝕜 → F\nx : 𝕜\ns : Set 𝕜\ninst✝ : ContinuousSMul 𝕜 F\nf' : F\n⊢ Iff (HasDerivWithinAt f f' s x) (HasFDerivWithinAt f (ContinuousLinearMap.smulRight 1 f') s x)","decl":"/-- Expressing `HasDerivWithinAt f f' s x` in terms of `HasFDerivWithinAt` -/\ntheorem hasDerivWithinAt_iff_hasFDerivWithinAt {f' : F} :\n    HasDerivWithinAt f f' s x ↔ HasFDerivWithinAt f (smulRight (1 : 𝕜 →L[𝕜] 𝕜) f') s x :=\n  Iff.rfl\n\n"}
{"name":"HasFDerivWithinAt.hasDerivWithinAt","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝⁴ : NontriviallyNormedField 𝕜\nF : Type v\ninst✝³ : AddCommGroup F\ninst✝² : Module 𝕜 F\ninst✝¹ : TopologicalSpace F\nf : 𝕜 → F\nx : 𝕜\ns : Set 𝕜\ninst✝ : ContinuousSMul 𝕜 F\nf' : ContinuousLinearMap (RingHom.id 𝕜) 𝕜 F\na✝ : HasFDerivWithinAt f f' s x\n⊢ HasDerivWithinAt f (f' 1) s x","decl":"theorem HasFDerivWithinAt.hasDerivWithinAt {f' : 𝕜 →L[𝕜] F} :\n    HasFDerivWithinAt f f' s x → HasDerivWithinAt f (f' 1) s x :=\n  hasFDerivWithinAt_iff_hasDerivWithinAt.mp\n\n"}
{"name":"HasDerivWithinAt.hasFDerivWithinAt","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝⁴ : NontriviallyNormedField 𝕜\nF : Type v\ninst✝³ : AddCommGroup F\ninst✝² : Module 𝕜 F\ninst✝¹ : TopologicalSpace F\nf : 𝕜 → F\nx : 𝕜\ns : Set 𝕜\ninst✝ : ContinuousSMul 𝕜 F\nf' : F\na✝ : HasDerivWithinAt f f' s x\n⊢ HasFDerivWithinAt f (ContinuousLinearMap.smulRight 1 f') s x","decl":"theorem HasDerivWithinAt.hasFDerivWithinAt {f' : F} :\n    HasDerivWithinAt f f' s x → HasFDerivWithinAt f (smulRight (1 : 𝕜 →L[𝕜] 𝕜) f') s x :=\n  hasDerivWithinAt_iff_hasFDerivWithinAt.mp\n\n"}
{"name":"hasFDerivAt_iff_hasDerivAt","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝⁴ : NontriviallyNormedField 𝕜\nF : Type v\ninst✝³ : AddCommGroup F\ninst✝² : Module 𝕜 F\ninst✝¹ : TopologicalSpace F\nf : 𝕜 → F\nx : 𝕜\ninst✝ : ContinuousSMul 𝕜 F\nf' : ContinuousLinearMap (RingHom.id 𝕜) 𝕜 F\n⊢ Iff (HasFDerivAt f f' x) (HasDerivAt f (f' 1) x)","decl":"/-- Expressing `HasFDerivAt f f' x` in terms of `HasDerivAt` -/\ntheorem hasFDerivAt_iff_hasDerivAt {f' : 𝕜 →L[𝕜] F} : HasFDerivAt f f' x ↔ HasDerivAt f (f' 1) x :=\n  hasFDerivAtFilter_iff_hasDerivAtFilter\n\n"}
{"name":"HasFDerivAt.hasDerivAt","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝⁴ : NontriviallyNormedField 𝕜\nF : Type v\ninst✝³ : AddCommGroup F\ninst✝² : Module 𝕜 F\ninst✝¹ : TopologicalSpace F\nf : 𝕜 → F\nx : 𝕜\ninst✝ : ContinuousSMul 𝕜 F\nf' : ContinuousLinearMap (RingHom.id 𝕜) 𝕜 F\na✝ : HasFDerivAt f f' x\n⊢ HasDerivAt f (f' 1) x","decl":"theorem HasFDerivAt.hasDerivAt {f' : 𝕜 →L[𝕜] F} : HasFDerivAt f f' x → HasDerivAt f (f' 1) x :=\n  hasFDerivAt_iff_hasDerivAt.mp\n\n"}
{"name":"hasStrictFDerivAt_iff_hasStrictDerivAt","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝⁴ : NontriviallyNormedField 𝕜\nF : Type v\ninst✝³ : AddCommGroup F\ninst✝² : Module 𝕜 F\ninst✝¹ : TopologicalSpace F\nf : 𝕜 → F\nx : 𝕜\ninst✝ : ContinuousSMul 𝕜 F\nf' : ContinuousLinearMap (RingHom.id 𝕜) 𝕜 F\n⊢ Iff (HasStrictFDerivAt f f' x) (HasStrictDerivAt f (f' 1) x)","decl":"theorem hasStrictFDerivAt_iff_hasStrictDerivAt {f' : 𝕜 →L[𝕜] F} :\n    HasStrictFDerivAt f f' x ↔ HasStrictDerivAt f (f' 1) x := by\n  simp [HasStrictDerivAt, HasStrictFDerivAt]\n\n"}
{"name":"HasStrictFDerivAt.hasStrictDerivAt","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝⁴ : NontriviallyNormedField 𝕜\nF : Type v\ninst✝³ : AddCommGroup F\ninst✝² : Module 𝕜 F\ninst✝¹ : TopologicalSpace F\nf : 𝕜 → F\nx : 𝕜\ninst✝ : ContinuousSMul 𝕜 F\nf' : ContinuousLinearMap (RingHom.id 𝕜) 𝕜 F\na✝ : HasStrictFDerivAt f f' x\n⊢ HasStrictDerivAt f (f' 1) x","decl":"protected theorem HasStrictFDerivAt.hasStrictDerivAt {f' : 𝕜 →L[𝕜] F} :\n    HasStrictFDerivAt f f' x → HasStrictDerivAt f (f' 1) x :=\n  hasStrictFDerivAt_iff_hasStrictDerivAt.mp\n\n"}
{"name":"hasStrictDerivAt_iff_hasStrictFDerivAt","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝⁴ : NontriviallyNormedField 𝕜\nF : Type v\ninst✝³ : AddCommGroup F\ninst✝² : Module 𝕜 F\ninst✝¹ : TopologicalSpace F\nf : 𝕜 → F\nf' : F\nx : 𝕜\ninst✝ : ContinuousSMul 𝕜 F\n⊢ Iff (HasStrictDerivAt f f' x) (HasStrictFDerivAt f (ContinuousLinearMap.smulRight 1 f') x)","decl":"theorem hasStrictDerivAt_iff_hasStrictFDerivAt :\n    HasStrictDerivAt f f' x ↔ HasStrictFDerivAt f (smulRight (1 : 𝕜 →L[𝕜] 𝕜) f') x :=\n  Iff.rfl\n\n"}
{"name":"HasStrictDerivAt.hasStrictFDerivAt","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝⁴ : NontriviallyNormedField 𝕜\nF : Type v\ninst✝³ : AddCommGroup F\ninst✝² : Module 𝕜 F\ninst✝¹ : TopologicalSpace F\nf : 𝕜 → F\nf' : F\nx : 𝕜\ninst✝ : ContinuousSMul 𝕜 F\na✝ : HasStrictDerivAt f f' x\n⊢ HasStrictFDerivAt f (ContinuousLinearMap.smulRight 1 f') x","decl":"alias ⟨HasStrictDerivAt.hasStrictFDerivAt, _⟩ := hasStrictDerivAt_iff_hasStrictFDerivAt\n\n"}
{"name":"hasDerivAt_iff_hasFDerivAt","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝⁴ : NontriviallyNormedField 𝕜\nF : Type v\ninst✝³ : AddCommGroup F\ninst✝² : Module 𝕜 F\ninst✝¹ : TopologicalSpace F\nf : 𝕜 → F\nx : 𝕜\ninst✝ : ContinuousSMul 𝕜 F\nf' : F\n⊢ Iff (HasDerivAt f f' x) (HasFDerivAt f (ContinuousLinearMap.smulRight 1 f') x)","decl":"/-- Expressing `HasDerivAt f f' x` in terms of `HasFDerivAt` -/\ntheorem hasDerivAt_iff_hasFDerivAt {f' : F} :\n    HasDerivAt f f' x ↔ HasFDerivAt f (smulRight (1 : 𝕜 →L[𝕜] 𝕜) f') x :=\n  Iff.rfl\n\n"}
{"name":"HasDerivAt.hasFDerivAt","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝⁴ : NontriviallyNormedField 𝕜\nF : Type v\ninst✝³ : AddCommGroup F\ninst✝² : Module 𝕜 F\ninst✝¹ : TopologicalSpace F\nf : 𝕜 → F\nx : 𝕜\ninst✝ : ContinuousSMul 𝕜 F\nf' : F\na✝ : HasDerivAt f f' x\n⊢ HasFDerivAt f (ContinuousLinearMap.smulRight 1 f') x","decl":"alias ⟨HasDerivAt.hasFDerivAt, _⟩ := hasDerivAt_iff_hasFDerivAt\n\n"}
{"name":"derivWithin_zero_of_not_differentiableWithinAt","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝³ : NontriviallyNormedField 𝕜\nF : Type v\ninst✝² : AddCommGroup F\ninst✝¹ : Module 𝕜 F\ninst✝ : TopologicalSpace F\nf : 𝕜 → F\nx : 𝕜\ns : Set 𝕜\nh : Not (DifferentiableWithinAt 𝕜 f s x)\n⊢ Eq (derivWithin f s x) 0","decl":"theorem derivWithin_zero_of_not_differentiableWithinAt (h : ¬DifferentiableWithinAt 𝕜 f s x) :\n    derivWithin f s x = 0 := by\n  unfold derivWithin\n  rw [fderivWithin_zero_of_not_differentiableWithinAt h]\n  simp\n\n"}
{"name":"differentiableWithinAt_of_derivWithin_ne_zero","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝³ : NontriviallyNormedField 𝕜\nF : Type v\ninst✝² : AddCommGroup F\ninst✝¹ : Module 𝕜 F\ninst✝ : TopologicalSpace F\nf : 𝕜 → F\nx : 𝕜\ns : Set 𝕜\nh : Ne (derivWithin f s x) 0\n⊢ DifferentiableWithinAt 𝕜 f s x","decl":"theorem differentiableWithinAt_of_derivWithin_ne_zero (h : derivWithin f s x ≠ 0) :\n    DifferentiableWithinAt 𝕜 f s x :=\n  not_imp_comm.1 derivWithin_zero_of_not_differentiableWithinAt h\n\n"}
{"name":"derivWithin_zero_of_isolated","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx : 𝕜\ns : Set 𝕜\nh : Eq (nhdsWithin x (SDiff.sdiff s (Singleton.singleton x))) Bot.bot\n⊢ Eq (derivWithin f s x) 0","decl":"theorem derivWithin_zero_of_isolated (h : 𝓝[s \\ {x}] x = ⊥) : derivWithin f s x = 0 := by\n  rw [derivWithin, fderivWithin_zero_of_isolated h, ContinuousLinearMap.zero_apply]\n\n"}
{"name":"derivWithin_zero_of_nmem_closure","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx : 𝕜\ns : Set 𝕜\nh : Not (Membership.mem (closure s) x)\n⊢ Eq (derivWithin f s x) 0","decl":"theorem derivWithin_zero_of_nmem_closure (h : x ∉ closure s) : derivWithin f s x = 0 := by\n  rw [derivWithin, fderivWithin_zero_of_nmem_closure h, ContinuousLinearMap.zero_apply]\n\n"}
{"name":"deriv_zero_of_not_differentiableAt","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx : 𝕜\nh : Not (DifferentiableAt 𝕜 f x)\n⊢ Eq (deriv f x) 0","decl":"theorem deriv_zero_of_not_differentiableAt (h : ¬DifferentiableAt 𝕜 f x) : deriv f x = 0 := by\n  unfold deriv\n  rw [fderiv_zero_of_not_differentiableAt h]\n  simp\n\n"}
{"name":"differentiableAt_of_deriv_ne_zero","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx : 𝕜\nh : Ne (deriv f x) 0\n⊢ DifferentiableAt 𝕜 f x","decl":"theorem differentiableAt_of_deriv_ne_zero (h : deriv f x ≠ 0) : DifferentiableAt 𝕜 f x :=\n  not_imp_comm.1 deriv_zero_of_not_differentiableAt h\n\n"}
{"name":"UniqueDiffWithinAt.eq_deriv","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' f₁' : F\nx : 𝕜\ns : Set 𝕜\nH : UniqueDiffWithinAt 𝕜 s x\nh : HasDerivWithinAt f f' s x\nh₁ : HasDerivWithinAt f f₁' s x\n⊢ Eq f' f₁'","decl":"theorem UniqueDiffWithinAt.eq_deriv (s : Set 𝕜) (H : UniqueDiffWithinAt 𝕜 s x)\n    (h : HasDerivWithinAt f f' s x) (h₁ : HasDerivWithinAt f f₁' s x) : f' = f₁' :=\n  smulRight_one_eq_iff.mp <| UniqueDiffWithinAt.eq H h h₁\n\n"}
{"name":"hasDerivAtFilter_iff_isLittleO","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\nL : Filter 𝕜\n⊢ Iff (HasDerivAtFilter f f' x L) (Asymptotics.IsLittleO L (fun x' => HSub.hSub (HSub.hSub (f x') (f x)) (HSMul.hSMul (HSub.hSub x' x) f')) fun x' => HSub.hSub x' x)","decl":"theorem hasDerivAtFilter_iff_isLittleO :\n    HasDerivAtFilter f f' x L ↔ (fun x' : 𝕜 => f x' - f x - (x' - x) • f') =o[L] fun x' => x' - x :=\n  hasFDerivAtFilter_iff_isLittleO ..\n\n"}
{"name":"hasDerivAtFilter_iff_tendsto","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\nL : Filter 𝕜\n⊢ Iff (HasDerivAtFilter f f' x L) (Filter.Tendsto (fun x' => HMul.hMul (Inv.inv (Norm.norm (HSub.hSub x' x))) (Norm.norm (HSub.hSub (HSub.hSub (f x') (f x)) (HSMul.hSMul (HSub.hSub x' x) f')))) L (nhds 0))","decl":"theorem hasDerivAtFilter_iff_tendsto :\n    HasDerivAtFilter f f' x L ↔\n      Tendsto (fun x' : 𝕜 => ‖x' - x‖⁻¹ * ‖f x' - f x - (x' - x) • f'‖) L (𝓝 0) :=\n  hasFDerivAtFilter_iff_tendsto\n\n"}
{"name":"hasDerivWithinAt_iff_isLittleO","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\ns : Set 𝕜\n⊢ Iff (HasDerivWithinAt f f' s x) (Asymptotics.IsLittleO (nhdsWithin x s) (fun x' => HSub.hSub (HSub.hSub (f x') (f x)) (HSMul.hSMul (HSub.hSub x' x) f')) fun x' => HSub.hSub x' x)","decl":"theorem hasDerivWithinAt_iff_isLittleO :\n    HasDerivWithinAt f f' s x ↔\n      (fun x' : 𝕜 => f x' - f x - (x' - x) • f') =o[𝓝[s] x] fun x' => x' - x :=\n  hasFDerivAtFilter_iff_isLittleO ..\n\n"}
{"name":"hasDerivWithinAt_iff_tendsto","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\ns : Set 𝕜\n⊢ Iff (HasDerivWithinAt f f' s x) (Filter.Tendsto (fun x' => HMul.hMul (Inv.inv (Norm.norm (HSub.hSub x' x))) (Norm.norm (HSub.hSub (HSub.hSub (f x') (f x)) (HSMul.hSMul (HSub.hSub x' x) f')))) (nhdsWithin x s) (nhds 0))","decl":"theorem hasDerivWithinAt_iff_tendsto :\n    HasDerivWithinAt f f' s x ↔\n      Tendsto (fun x' => ‖x' - x‖⁻¹ * ‖f x' - f x - (x' - x) • f'‖) (𝓝[s] x) (𝓝 0) :=\n  hasFDerivAtFilter_iff_tendsto\n\n"}
{"name":"hasDerivAt_iff_isLittleO","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\n⊢ Iff (HasDerivAt f f' x) (Asymptotics.IsLittleO (nhds x) (fun x' => HSub.hSub (HSub.hSub (f x') (f x)) (HSMul.hSMul (HSub.hSub x' x) f')) fun x' => HSub.hSub x' x)","decl":"theorem hasDerivAt_iff_isLittleO :\n    HasDerivAt f f' x ↔ (fun x' : 𝕜 => f x' - f x - (x' - x) • f') =o[𝓝 x] fun x' => x' - x :=\n  hasFDerivAtFilter_iff_isLittleO ..\n\n"}
{"name":"hasDerivAt_iff_tendsto","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\n⊢ Iff (HasDerivAt f f' x) (Filter.Tendsto (fun x' => HMul.hMul (Inv.inv (Norm.norm (HSub.hSub x' x))) (Norm.norm (HSub.hSub (HSub.hSub (f x') (f x)) (HSMul.hSMul (HSub.hSub x' x) f')))) (nhds x) (nhds 0))","decl":"theorem hasDerivAt_iff_tendsto :\n    HasDerivAt f f' x ↔ Tendsto (fun x' => ‖x' - x‖⁻¹ * ‖f x' - f x - (x' - x) • f'‖) (𝓝 x) (𝓝 0) :=\n  hasFDerivAtFilter_iff_tendsto\n\n"}
{"name":"HasDerivAtFilter.isBigO_sub","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\nL : Filter 𝕜\nh : HasDerivAtFilter f f' x L\n⊢ Asymptotics.IsBigO L (fun x' => HSub.hSub (f x') (f x)) fun x' => HSub.hSub x' x","decl":"theorem HasDerivAtFilter.isBigO_sub (h : HasDerivAtFilter f f' x L) :\n    (fun x' => f x' - f x) =O[L] fun x' => x' - x :=\n  HasFDerivAtFilter.isBigO_sub h\n\n"}
{"name":"HasDerivAtFilter.isBigO_sub_rev","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\nL : Filter 𝕜\nhf : HasDerivAtFilter f f' x L\nhf' : Ne f' 0\n⊢ Asymptotics.IsBigO L (fun x' => HSub.hSub x' x) fun x' => HSub.hSub (f x') (f x)","decl":"nonrec theorem HasDerivAtFilter.isBigO_sub_rev (hf : HasDerivAtFilter f f' x L) (hf' : f' ≠ 0) :\n    (fun x' => x' - x) =O[L] fun x' => f x' - f x :=\n  suffices AntilipschitzWith ‖f'‖₊⁻¹ (smulRight (1 : 𝕜 →L[𝕜] 𝕜) f') from hf.isBigO_sub_rev this\n  AddMonoidHomClass.antilipschitz_of_bound (smulRight (1 : 𝕜 →L[𝕜] 𝕜) f') fun x => by\n    simp [norm_smul, ← div_eq_inv_mul, mul_div_cancel_right₀ _ (mt norm_eq_zero.1 hf')]\n\n"}
{"name":"HasStrictDerivAt.hasDerivAt","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\nh : HasStrictDerivAt f f' x\n⊢ HasDerivAt f f' x","decl":"theorem HasStrictDerivAt.hasDerivAt (h : HasStrictDerivAt f f' x) : HasDerivAt f f' x :=\n  h.hasFDerivAt\n\n"}
{"name":"hasDerivWithinAt_congr_set'","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\ns t : Set 𝕜\ny : 𝕜\nh : (nhdsWithin x (HasCompl.compl (Singleton.singleton y))).EventuallyEq s t\n⊢ Iff (HasDerivWithinAt f f' s x) (HasDerivWithinAt f f' t x)","decl":"theorem hasDerivWithinAt_congr_set' {s t : Set 𝕜} (y : 𝕜) (h : s =ᶠ[𝓝[{y}ᶜ] x] t) :\n    HasDerivWithinAt f f' s x ↔ HasDerivWithinAt f f' t x :=\n  hasFDerivWithinAt_congr_set' y h\n\n"}
{"name":"hasDerivWithinAt_congr_set","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\ns t : Set 𝕜\nh : (nhds x).EventuallyEq s t\n⊢ Iff (HasDerivWithinAt f f' s x) (HasDerivWithinAt f f' t x)","decl":"theorem hasDerivWithinAt_congr_set {s t : Set 𝕜} (h : s =ᶠ[𝓝 x] t) :\n    HasDerivWithinAt f f' s x ↔ HasDerivWithinAt f f' t x :=\n  hasFDerivWithinAt_congr_set h\n\n"}
{"name":"HasDerivWithinAt.congr_set","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\ns t : Set 𝕜\nh : (nhds x).EventuallyEq s t\na✝ : HasDerivWithinAt f f' s x\n⊢ HasDerivWithinAt f f' t x","decl":"alias ⟨HasDerivWithinAt.congr_set, _⟩ := hasDerivWithinAt_congr_set\n\n"}
{"name":"hasDerivWithinAt_diff_singleton","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\ns : Set 𝕜\n⊢ Iff (HasDerivWithinAt f f' (SDiff.sdiff s (Singleton.singleton x)) x) (HasDerivWithinAt f f' s x)","decl":"@[simp]\ntheorem hasDerivWithinAt_diff_singleton :\n    HasDerivWithinAt f f' (s \\ {x}) x ↔ HasDerivWithinAt f f' s x :=\n  hasFDerivWithinAt_diff_singleton _\n\n"}
{"name":"hasDerivWithinAt_Ioi_iff_Ici","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝³ : NontriviallyNormedField 𝕜\nF : Type v\ninst✝² : NormedAddCommGroup F\ninst✝¹ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\ninst✝ : PartialOrder 𝕜\n⊢ Iff (HasDerivWithinAt f f' (Set.Ioi x) x) (HasDerivWithinAt f f' (Set.Ici x) x)","decl":"@[simp]\ntheorem hasDerivWithinAt_Ioi_iff_Ici [PartialOrder 𝕜] :\n    HasDerivWithinAt f f' (Ioi x) x ↔ HasDerivWithinAt f f' (Ici x) x := by\n  rw [← Ici_diff_left, hasDerivWithinAt_diff_singleton]\n\n"}
{"name":"HasDerivWithinAt.Ici_of_Ioi","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝³ : NontriviallyNormedField 𝕜\nF : Type v\ninst✝² : NormedAddCommGroup F\ninst✝¹ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\ninst✝ : PartialOrder 𝕜\na✝ : HasDerivWithinAt f f' (Set.Ioi x) x\n⊢ HasDerivWithinAt f f' (Set.Ici x) x","decl":"alias ⟨HasDerivWithinAt.Ici_of_Ioi, HasDerivWithinAt.Ioi_of_Ici⟩ := hasDerivWithinAt_Ioi_iff_Ici\n\n"}
{"name":"HasDerivWithinAt.Ioi_of_Ici","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝³ : NontriviallyNormedField 𝕜\nF : Type v\ninst✝² : NormedAddCommGroup F\ninst✝¹ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\ninst✝ : PartialOrder 𝕜\na✝ : HasDerivWithinAt f f' (Set.Ici x) x\n⊢ HasDerivWithinAt f f' (Set.Ioi x) x","decl":"alias ⟨HasDerivWithinAt.Ici_of_Ioi, HasDerivWithinAt.Ioi_of_Ici⟩ := hasDerivWithinAt_Ioi_iff_Ici\n\n"}
{"name":"hasDerivWithinAt_Iio_iff_Iic","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝³ : NontriviallyNormedField 𝕜\nF : Type v\ninst✝² : NormedAddCommGroup F\ninst✝¹ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\ninst✝ : PartialOrder 𝕜\n⊢ Iff (HasDerivWithinAt f f' (Set.Iio x) x) (HasDerivWithinAt f f' (Set.Iic x) x)","decl":"@[simp]\ntheorem hasDerivWithinAt_Iio_iff_Iic [PartialOrder 𝕜] :\n    HasDerivWithinAt f f' (Iio x) x ↔ HasDerivWithinAt f f' (Iic x) x := by\n  rw [← Iic_diff_right, hasDerivWithinAt_diff_singleton]\n\n"}
{"name":"HasDerivWithinAt.Iio_of_Iic","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝³ : NontriviallyNormedField 𝕜\nF : Type v\ninst✝² : NormedAddCommGroup F\ninst✝¹ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\ninst✝ : PartialOrder 𝕜\na✝ : HasDerivWithinAt f f' (Set.Iic x) x\n⊢ HasDerivWithinAt f f' (Set.Iio x) x","decl":"alias ⟨HasDerivWithinAt.Iic_of_Iio, HasDerivWithinAt.Iio_of_Iic⟩ := hasDerivWithinAt_Iio_iff_Iic\n\n"}
{"name":"HasDerivWithinAt.Iic_of_Iio","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝³ : NontriviallyNormedField 𝕜\nF : Type v\ninst✝² : NormedAddCommGroup F\ninst✝¹ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\ninst✝ : PartialOrder 𝕜\na✝ : HasDerivWithinAt f f' (Set.Iio x) x\n⊢ HasDerivWithinAt f f' (Set.Iic x) x","decl":"alias ⟨HasDerivWithinAt.Iic_of_Iio, HasDerivWithinAt.Iio_of_Iic⟩ := hasDerivWithinAt_Iio_iff_Iic\n\n"}
{"name":"HasDerivWithinAt.Ioi_iff_Ioo","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝⁴ : NontriviallyNormedField 𝕜\nF : Type v\ninst✝³ : NormedAddCommGroup F\ninst✝² : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\ninst✝¹ : LinearOrder 𝕜\ninst✝ : OrderClosedTopology 𝕜\nx y : 𝕜\nh : LT.lt x y\n⊢ Iff (HasDerivWithinAt f f' (Set.Ioo x y) x) (HasDerivWithinAt f f' (Set.Ioi x) x)","decl":"theorem HasDerivWithinAt.Ioi_iff_Ioo [LinearOrder 𝕜] [OrderClosedTopology 𝕜] {x y : 𝕜} (h : x < y) :\n    HasDerivWithinAt f f' (Ioo x y) x ↔ HasDerivWithinAt f f' (Ioi x) x :=\n  hasFDerivWithinAt_inter <| Iio_mem_nhds h\n\n"}
{"name":"HasDerivWithinAt.Ioo_of_Ioi","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝⁴ : NontriviallyNormedField 𝕜\nF : Type v\ninst✝³ : NormedAddCommGroup F\ninst✝² : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\ninst✝¹ : LinearOrder 𝕜\ninst✝ : OrderClosedTopology 𝕜\nx y : 𝕜\nh : LT.lt x y\na✝ : HasDerivWithinAt f f' (Set.Ioi x) x\n⊢ HasDerivWithinAt f f' (Set.Ioo x y) x","decl":"alias ⟨HasDerivWithinAt.Ioi_of_Ioo, HasDerivWithinAt.Ioo_of_Ioi⟩ := HasDerivWithinAt.Ioi_iff_Ioo\n\n"}
{"name":"HasDerivWithinAt.Ioi_of_Ioo","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝⁴ : NontriviallyNormedField 𝕜\nF : Type v\ninst✝³ : NormedAddCommGroup F\ninst✝² : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\ninst✝¹ : LinearOrder 𝕜\ninst✝ : OrderClosedTopology 𝕜\nx y : 𝕜\nh : LT.lt x y\na✝ : HasDerivWithinAt f f' (Set.Ioo x y) x\n⊢ HasDerivWithinAt f f' (Set.Ioi x) x","decl":"alias ⟨HasDerivWithinAt.Ioi_of_Ioo, HasDerivWithinAt.Ioo_of_Ioi⟩ := HasDerivWithinAt.Ioi_iff_Ioo\n\n"}
{"name":"hasDerivAt_iff_isLittleO_nhds_zero","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\n⊢ Iff (HasDerivAt f f' x) (Asymptotics.IsLittleO (nhds 0) (fun h => HSub.hSub (HSub.hSub (f (HAdd.hAdd x h)) (f x)) (HSMul.hSMul h f')) fun h => h)","decl":"theorem hasDerivAt_iff_isLittleO_nhds_zero :\n    HasDerivAt f f' x ↔ (fun h => f (x + h) - f x - h • f') =o[𝓝 0] fun h => h :=\n  hasFDerivAt_iff_isLittleO_nhds_zero\n\n"}
{"name":"HasDerivAtFilter.mono","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\nL₁ L₂ : Filter 𝕜\nh : HasDerivAtFilter f f' x L₂\nhst : LE.le L₁ L₂\n⊢ HasDerivAtFilter f f' x L₁","decl":"theorem HasDerivAtFilter.mono (h : HasDerivAtFilter f f' x L₂) (hst : L₁ ≤ L₂) :\n    HasDerivAtFilter f f' x L₁ :=\n  HasFDerivAtFilter.mono h hst\n\n"}
{"name":"HasDerivWithinAt.mono","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\ns t : Set 𝕜\nh : HasDerivWithinAt f f' t x\nhst : HasSubset.Subset s t\n⊢ HasDerivWithinAt f f' s x","decl":"theorem HasDerivWithinAt.mono (h : HasDerivWithinAt f f' t x) (hst : s ⊆ t) :\n    HasDerivWithinAt f f' s x :=\n  HasFDerivWithinAt.mono h hst\n\n"}
{"name":"HasDerivWithinAt.mono_of_mem_nhdsWithin","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\ns t : Set 𝕜\nh : HasDerivWithinAt f f' t x\nhst : Membership.mem (nhdsWithin x s) t\n⊢ HasDerivWithinAt f f' s x","decl":"theorem HasDerivWithinAt.mono_of_mem_nhdsWithin (h : HasDerivWithinAt f f' t x) (hst : t ∈ 𝓝[s] x) :\n    HasDerivWithinAt f f' s x :=\n  HasFDerivWithinAt.mono_of_mem_nhdsWithin h hst\n\n"}
{"name":"HasDerivWithinAt.mono_of_mem","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\ns t : Set 𝕜\nh : HasDerivWithinAt f f' t x\nhst : Membership.mem (nhdsWithin x s) t\n⊢ HasDerivWithinAt f f' s x","decl":"@[deprecated (since := \"2024-10-31\")]\nalias HasDerivWithinAt.mono_of_mem := HasDerivWithinAt.mono_of_mem_nhdsWithin\n\n"}
{"name":"HasDerivAt.hasDerivAtFilter","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\nL : Filter 𝕜\nh : HasDerivAt f f' x\nhL : LE.le L (nhds x)\n⊢ HasDerivAtFilter f f' x L","decl":"theorem HasDerivAt.hasDerivAtFilter (h : HasDerivAt f f' x) (hL : L ≤ 𝓝 x) :\n    HasDerivAtFilter f f' x L :=\n  HasFDerivAt.hasFDerivAtFilter h hL\n\n"}
{"name":"HasDerivAt.hasDerivWithinAt","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\ns : Set 𝕜\nh : HasDerivAt f f' x\n⊢ HasDerivWithinAt f f' s x","decl":"theorem HasDerivAt.hasDerivWithinAt (h : HasDerivAt f f' x) : HasDerivWithinAt f f' s x :=\n  HasFDerivAt.hasFDerivWithinAt h\n\n"}
{"name":"HasDerivWithinAt.differentiableWithinAt","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\ns : Set 𝕜\nh : HasDerivWithinAt f f' s x\n⊢ DifferentiableWithinAt 𝕜 f s x","decl":"theorem HasDerivWithinAt.differentiableWithinAt (h : HasDerivWithinAt f f' s x) :\n    DifferentiableWithinAt 𝕜 f s x :=\n  HasFDerivWithinAt.differentiableWithinAt h\n\n"}
{"name":"HasDerivAt.differentiableAt","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\nh : HasDerivAt f f' x\n⊢ DifferentiableAt 𝕜 f x","decl":"theorem HasDerivAt.differentiableAt (h : HasDerivAt f f' x) : DifferentiableAt 𝕜 f x :=\n  HasFDerivAt.differentiableAt h\n\n"}
{"name":"hasDerivWithinAt_univ","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\n⊢ Iff (HasDerivWithinAt f f' Set.univ x) (HasDerivAt f f' x)","decl":"@[simp]\ntheorem hasDerivWithinAt_univ : HasDerivWithinAt f f' univ x ↔ HasDerivAt f f' x :=\n  hasFDerivWithinAt_univ\n\n"}
{"name":"HasDerivAt.unique","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf₀' f₁' : F\nx : 𝕜\nh₀ : HasDerivAt f f₀' x\nh₁ : HasDerivAt f f₁' x\n⊢ Eq f₀' f₁'","decl":"theorem HasDerivAt.unique (h₀ : HasDerivAt f f₀' x) (h₁ : HasDerivAt f f₁' x) : f₀' = f₁' :=\n  smulRight_one_eq_iff.mp <| h₀.hasFDerivAt.unique h₁\n\n"}
{"name":"hasDerivWithinAt_inter'","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\ns t : Set 𝕜\nh : Membership.mem (nhdsWithin x s) t\n⊢ Iff (HasDerivWithinAt f f' (Inter.inter s t) x) (HasDerivWithinAt f f' s x)","decl":"theorem hasDerivWithinAt_inter' (h : t ∈ 𝓝[s] x) :\n    HasDerivWithinAt f f' (s ∩ t) x ↔ HasDerivWithinAt f f' s x :=\n  hasFDerivWithinAt_inter' h\n\n"}
{"name":"hasDerivWithinAt_inter","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\ns t : Set 𝕜\nh : Membership.mem (nhds x) t\n⊢ Iff (HasDerivWithinAt f f' (Inter.inter s t) x) (HasDerivWithinAt f f' s x)","decl":"theorem hasDerivWithinAt_inter (h : t ∈ 𝓝 x) :\n    HasDerivWithinAt f f' (s ∩ t) x ↔ HasDerivWithinAt f f' s x :=\n  hasFDerivWithinAt_inter h\n\n"}
{"name":"HasDerivWithinAt.union","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\ns t : Set 𝕜\nhs : HasDerivWithinAt f f' s x\nht : HasDerivWithinAt f f' t x\n⊢ HasDerivWithinAt f f' (Union.union s t) x","decl":"theorem HasDerivWithinAt.union (hs : HasDerivWithinAt f f' s x) (ht : HasDerivWithinAt f f' t x) :\n    HasDerivWithinAt f f' (s ∪ t) x :=\n  hs.hasFDerivWithinAt.union ht.hasFDerivWithinAt\n\n"}
{"name":"HasDerivWithinAt.hasDerivAt","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\ns : Set 𝕜\nh : HasDerivWithinAt f f' s x\nhs : Membership.mem (nhds x) s\n⊢ HasDerivAt f f' x","decl":"theorem HasDerivWithinAt.hasDerivAt (h : HasDerivWithinAt f f' s x) (hs : s ∈ 𝓝 x) :\n    HasDerivAt f f' x :=\n  HasFDerivWithinAt.hasFDerivAt h hs\n\n"}
{"name":"DifferentiableWithinAt.hasDerivWithinAt","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx : 𝕜\ns : Set 𝕜\nh : DifferentiableWithinAt 𝕜 f s x\n⊢ HasDerivWithinAt f (derivWithin f s x) s x","decl":"theorem DifferentiableWithinAt.hasDerivWithinAt (h : DifferentiableWithinAt 𝕜 f s x) :\n    HasDerivWithinAt f (derivWithin f s x) s x :=\n  h.hasFDerivWithinAt.hasDerivWithinAt\n\n"}
{"name":"DifferentiableAt.hasDerivAt","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx : 𝕜\nh : DifferentiableAt 𝕜 f x\n⊢ HasDerivAt f (deriv f x) x","decl":"theorem DifferentiableAt.hasDerivAt (h : DifferentiableAt 𝕜 f x) : HasDerivAt f (deriv f x) x :=\n  h.hasFDerivAt.hasDerivAt\n\n"}
{"name":"hasDerivAt_deriv_iff","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx : 𝕜\n⊢ Iff (HasDerivAt f (deriv f x) x) (DifferentiableAt 𝕜 f x)","decl":"@[simp]\ntheorem hasDerivAt_deriv_iff : HasDerivAt f (deriv f x) x ↔ DifferentiableAt 𝕜 f x :=\n  ⟨fun h => h.differentiableAt, fun h => h.hasDerivAt⟩\n\n"}
{"name":"hasDerivWithinAt_derivWithin_iff","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx : 𝕜\ns : Set 𝕜\n⊢ Iff (HasDerivWithinAt f (derivWithin f s x) s x) (DifferentiableWithinAt 𝕜 f s x)","decl":"@[simp]\ntheorem hasDerivWithinAt_derivWithin_iff :\n    HasDerivWithinAt f (derivWithin f s x) s x ↔ DifferentiableWithinAt 𝕜 f s x :=\n  ⟨fun h => h.differentiableWithinAt, fun h => h.hasDerivWithinAt⟩\n\n"}
{"name":"DifferentiableOn.hasDerivAt","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx : 𝕜\ns : Set 𝕜\nh : DifferentiableOn 𝕜 f s\nhs : Membership.mem (nhds x) s\n⊢ HasDerivAt f (deriv f x) x","decl":"theorem DifferentiableOn.hasDerivAt (h : DifferentiableOn 𝕜 f s) (hs : s ∈ 𝓝 x) :\n    HasDerivAt f (deriv f x) x :=\n  (h.hasFDerivAt hs).hasDerivAt\n\n"}
{"name":"HasDerivAt.deriv","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\nh : HasDerivAt f f' x\n⊢ Eq (deriv f x) f'","decl":"theorem HasDerivAt.deriv (h : HasDerivAt f f' x) : deriv f x = f' :=\n  h.differentiableAt.hasDerivAt.unique h\n\n"}
{"name":"deriv_eq","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf f' : 𝕜 → F\nh : ∀ (x : 𝕜), HasDerivAt f (f' x) x\n⊢ Eq (deriv f) f'","decl":"theorem deriv_eq {f' : 𝕜 → F} (h : ∀ x, HasDerivAt f (f' x) x) : deriv f = f' :=\n  funext fun x => (h x).deriv\n\n"}
{"name":"HasDerivWithinAt.derivWithin","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\ns : Set 𝕜\nh : HasDerivWithinAt f f' s x\nhxs : UniqueDiffWithinAt 𝕜 s x\n⊢ Eq (derivWithin f s x) f'","decl":"theorem HasDerivWithinAt.derivWithin (h : HasDerivWithinAt f f' s x)\n    (hxs : UniqueDiffWithinAt 𝕜 s x) : derivWithin f s x = f' :=\n  hxs.eq_deriv _ h.differentiableWithinAt.hasDerivWithinAt h\n\n"}
{"name":"fderivWithin_derivWithin","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx : 𝕜\ns : Set 𝕜\n⊢ Eq ((fderivWithin 𝕜 f s x) 1) (derivWithin f s x)","decl":"theorem fderivWithin_derivWithin : (fderivWithin 𝕜 f s x : 𝕜 → F) 1 = derivWithin f s x :=\n  rfl\n\n"}
{"name":"derivWithin_fderivWithin","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx : 𝕜\ns : Set 𝕜\n⊢ Eq (ContinuousLinearMap.smulRight 1 (derivWithin f s x)) (fderivWithin 𝕜 f s x)","decl":"theorem derivWithin_fderivWithin :\n    smulRight (1 : 𝕜 →L[𝕜] 𝕜) (derivWithin f s x) = fderivWithin 𝕜 f s x := by simp [derivWithin]\n\n"}
{"name":"norm_derivWithin_eq_norm_fderivWithin","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx : 𝕜\ns : Set 𝕜\n⊢ Eq (Norm.norm (derivWithin f s x)) (Norm.norm (fderivWithin 𝕜 f s x))","decl":"theorem norm_derivWithin_eq_norm_fderivWithin : ‖derivWithin f s x‖ = ‖fderivWithin 𝕜 f s x‖ := by\n  simp [← derivWithin_fderivWithin]\n\n"}
{"name":"fderiv_deriv","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx : 𝕜\n⊢ Eq ((fderiv 𝕜 f x) 1) (deriv f x)","decl":"theorem fderiv_deriv : (fderiv 𝕜 f x : 𝕜 → F) 1 = deriv f x :=\n  rfl\n\n"}
{"name":"fderiv_eq_smul_deriv","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx y : 𝕜\n⊢ Eq ((fderiv 𝕜 f x) y) (HSMul.hSMul y (deriv f x))","decl":"@[simp]\ntheorem fderiv_eq_smul_deriv (y : 𝕜) : (fderiv 𝕜 f x : 𝕜 → F) y = y • deriv f x := by\n  rw [← fderiv_deriv, ← ContinuousLinearMap.map_smul]\n  simp only [smul_eq_mul, mul_one]\n\n"}
{"name":"deriv_fderiv","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx : 𝕜\n⊢ Eq (ContinuousLinearMap.smulRight 1 (deriv f x)) (fderiv 𝕜 f x)","decl":"theorem deriv_fderiv : smulRight (1 : 𝕜 →L[𝕜] 𝕜) (deriv f x) = fderiv 𝕜 f x := by\n  simp only [deriv, ContinuousLinearMap.smulRight_one_one]\n\n"}
{"name":"fderiv_eq_deriv_mul","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝ : NontriviallyNormedField 𝕜\nf : 𝕜 → 𝕜\nx y : 𝕜\n⊢ Eq ((fderiv 𝕜 f x) y) (HMul.hMul (deriv f x) y)","decl":"lemma fderiv_eq_deriv_mul {f : 𝕜 → 𝕜} {x y : 𝕜} : (fderiv 𝕜 f x : 𝕜 → 𝕜) y = (deriv f x) * y := by\n  simp [mul_comm]\n\n"}
{"name":"norm_deriv_eq_norm_fderiv","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx : 𝕜\n⊢ Eq (Norm.norm (deriv f x)) (Norm.norm (fderiv 𝕜 f x))","decl":"theorem norm_deriv_eq_norm_fderiv : ‖deriv f x‖ = ‖fderiv 𝕜 f x‖ := by\n  simp [← deriv_fderiv]\n\n"}
{"name":"DifferentiableAt.derivWithin","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx : 𝕜\ns : Set 𝕜\nh : DifferentiableAt 𝕜 f x\nhxs : UniqueDiffWithinAt 𝕜 s x\n⊢ Eq (derivWithin f s x) (deriv f x)","decl":"theorem DifferentiableAt.derivWithin (h : DifferentiableAt 𝕜 f x) (hxs : UniqueDiffWithinAt 𝕜 s x) :\n    derivWithin f s x = deriv f x := by\n  unfold _root_.derivWithin deriv\n  rw [h.fderivWithin hxs]\n\n"}
{"name":"HasDerivWithinAt.deriv_eq_zero","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx : 𝕜\ns : Set 𝕜\nhd : HasDerivWithinAt f 0 s x\nH : UniqueDiffWithinAt 𝕜 s x\n⊢ Eq (deriv f x) 0","decl":"theorem HasDerivWithinAt.deriv_eq_zero (hd : HasDerivWithinAt f 0 s x)\n    (H : UniqueDiffWithinAt 𝕜 s x) : deriv f x = 0 :=\n  (em' (DifferentiableAt 𝕜 f x)).elim deriv_zero_of_not_differentiableAt fun h =>\n    H.eq_deriv _ h.hasDerivAt.hasDerivWithinAt hd\n\n"}
{"name":"derivWithin_of_mem_nhdsWithin","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx : 𝕜\ns t : Set 𝕜\nst : Membership.mem (nhdsWithin x s) t\nht : UniqueDiffWithinAt 𝕜 s x\nh : DifferentiableWithinAt 𝕜 f t x\n⊢ Eq (derivWithin f s x) (derivWithin f t x)","decl":"theorem derivWithin_of_mem_nhdsWithin (st : t ∈ 𝓝[s] x) (ht : UniqueDiffWithinAt 𝕜 s x)\n    (h : DifferentiableWithinAt 𝕜 f t x) : derivWithin f s x = derivWithin f t x :=\n  ((DifferentiableWithinAt.hasDerivWithinAt h).mono_of_mem_nhdsWithin st).derivWithin ht\n\n"}
{"name":"derivWithin_of_mem","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx : 𝕜\ns t : Set 𝕜\nst : Membership.mem (nhdsWithin x s) t\nht : UniqueDiffWithinAt 𝕜 s x\nh : DifferentiableWithinAt 𝕜 f t x\n⊢ Eq (derivWithin f s x) (derivWithin f t x)","decl":"@[deprecated (since := \"2024-10-31\")] alias derivWithin_of_mem := derivWithin_of_mem_nhdsWithin\n\n"}
{"name":"derivWithin_subset","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx : 𝕜\ns t : Set 𝕜\nst : HasSubset.Subset s t\nht : UniqueDiffWithinAt 𝕜 s x\nh : DifferentiableWithinAt 𝕜 f t x\n⊢ Eq (derivWithin f s x) (derivWithin f t x)","decl":"theorem derivWithin_subset (st : s ⊆ t) (ht : UniqueDiffWithinAt 𝕜 s x)\n    (h : DifferentiableWithinAt 𝕜 f t x) : derivWithin f s x = derivWithin f t x :=\n  ((DifferentiableWithinAt.hasDerivWithinAt h).mono st).derivWithin ht\n\n"}
{"name":"derivWithin_congr_set'","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx : 𝕜\ns t : Set 𝕜\ny : 𝕜\nh : (nhdsWithin x (HasCompl.compl (Singleton.singleton y))).EventuallyEq s t\n⊢ Eq (derivWithin f s x) (derivWithin f t x)","decl":"theorem derivWithin_congr_set' (y : 𝕜) (h : s =ᶠ[𝓝[{y}ᶜ] x] t) :\n    derivWithin f s x = derivWithin f t x := by simp only [derivWithin, fderivWithin_congr_set' y h]\n\n"}
{"name":"derivWithin_congr_set","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx : 𝕜\ns t : Set 𝕜\nh : (nhds x).EventuallyEq s t\n⊢ Eq (derivWithin f s x) (derivWithin f t x)","decl":"theorem derivWithin_congr_set (h : s =ᶠ[𝓝 x] t) : derivWithin f s x = derivWithin f t x := by\n  simp only [derivWithin, fderivWithin_congr_set h]\n\n"}
{"name":"derivWithin_univ","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\n⊢ Eq (derivWithin f Set.univ) (deriv f)","decl":"@[simp]\ntheorem derivWithin_univ : derivWithin f univ = deriv f := by\n  ext\n  unfold derivWithin deriv\n  rw [fderivWithin_univ]\n\n"}
{"name":"derivWithin_inter","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx : 𝕜\ns t : Set 𝕜\nht : Membership.mem (nhds x) t\n⊢ Eq (derivWithin f (Inter.inter s t) x) (derivWithin f s x)","decl":"theorem derivWithin_inter (ht : t ∈ 𝓝 x) : derivWithin f (s ∩ t) x = derivWithin f s x := by\n  unfold derivWithin\n  rw [fderivWithin_inter ht]\n\n"}
{"name":"derivWithin_of_mem_nhds","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx : 𝕜\ns : Set 𝕜\nh : Membership.mem (nhds x) s\n⊢ Eq (derivWithin f s x) (deriv f x)","decl":"theorem derivWithin_of_mem_nhds (h : s ∈ 𝓝 x) : derivWithin f s x = deriv f x := by\n  simp only [derivWithin, deriv, fderivWithin_of_mem_nhds h]\n\n"}
{"name":"derivWithin_of_isOpen","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx : 𝕜\ns : Set 𝕜\nhs : IsOpen s\nhx : Membership.mem s x\n⊢ Eq (derivWithin f s x) (deriv f x)","decl":"theorem derivWithin_of_isOpen (hs : IsOpen s) (hx : x ∈ s) : derivWithin f s x = deriv f x :=\n  derivWithin_of_mem_nhds (hs.mem_nhds hx)\n\n"}
{"name":"deriv_eqOn","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\ns : Set 𝕜\nf' : 𝕜 → F\nhs : IsOpen s\nhf' : ∀ (x : 𝕜), Membership.mem s x → HasDerivWithinAt f (f' x) s x\n⊢ Set.EqOn (deriv f) f' s","decl":"lemma deriv_eqOn {f' : 𝕜 → F} (hs : IsOpen s) (hf' : ∀ x ∈ s, HasDerivWithinAt f (f' x) s x) :\n    s.EqOn (deriv f) f' := fun x hx ↦ by\n  rw [← derivWithin_of_isOpen hs hx, (hf' _ hx).derivWithin <| hs.uniqueDiffWithinAt hx]\n\n"}
{"name":"deriv_mem_iff","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\ns : Set F\nx : 𝕜\n⊢ Iff (Membership.mem s (deriv f x)) (Or (And (DifferentiableAt 𝕜 f x) (Membership.mem s (deriv f x))) (And (Not (DifferentiableAt 𝕜 f x)) (Membership.mem s 0)))","decl":"theorem deriv_mem_iff {f : 𝕜 → F} {s : Set F} {x : 𝕜} :\n    deriv f x ∈ s ↔\n      DifferentiableAt 𝕜 f x ∧ deriv f x ∈ s ∨ ¬DifferentiableAt 𝕜 f x ∧ (0 : F) ∈ s := by\n  by_cases hx : DifferentiableAt 𝕜 f x <;> simp [deriv_zero_of_not_differentiableAt, *]\n\n"}
{"name":"derivWithin_mem_iff","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nt : Set 𝕜\ns : Set F\nx : 𝕜\n⊢ Iff (Membership.mem s (derivWithin f t x)) (Or (And (DifferentiableWithinAt 𝕜 f t x) (Membership.mem s (derivWithin f t x))) (And (Not (DifferentiableWithinAt 𝕜 f t x)) (Membership.mem s 0)))","decl":"theorem derivWithin_mem_iff {f : 𝕜 → F} {t : Set 𝕜} {s : Set F} {x : 𝕜} :\n    derivWithin f t x ∈ s ↔\n      DifferentiableWithinAt 𝕜 f t x ∧ derivWithin f t x ∈ s ∨\n        ¬DifferentiableWithinAt 𝕜 f t x ∧ (0 : F) ∈ s := by\n  by_cases hx : DifferentiableWithinAt 𝕜 f t x <;>\n    simp [derivWithin_zero_of_not_differentiableWithinAt, *]\n\n"}
{"name":"differentiableWithinAt_Ioi_iff_Ici","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝³ : NontriviallyNormedField 𝕜\nF : Type v\ninst✝² : NormedAddCommGroup F\ninst✝¹ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx : 𝕜\ninst✝ : PartialOrder 𝕜\n⊢ Iff (DifferentiableWithinAt 𝕜 f (Set.Ioi x) x) (DifferentiableWithinAt 𝕜 f (Set.Ici x) x)","decl":"theorem differentiableWithinAt_Ioi_iff_Ici [PartialOrder 𝕜] :\n    DifferentiableWithinAt 𝕜 f (Ioi x) x ↔ DifferentiableWithinAt 𝕜 f (Ici x) x :=\n  ⟨fun h => h.hasDerivWithinAt.Ici_of_Ioi.differentiableWithinAt, fun h =>\n    h.hasDerivWithinAt.Ioi_of_Ici.differentiableWithinAt⟩\n\n-- Golfed while splitting the file\n"}
{"name":"derivWithin_Ioi_eq_Ici","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : Real → E\nx : Real\n⊢ Eq (derivWithin f (Set.Ioi x) x) (derivWithin f (Set.Ici x) x)","decl":"theorem derivWithin_Ioi_eq_Ici {E : Type*} [NormedAddCommGroup E] [NormedSpace ℝ E] (f : ℝ → E)\n    (x : ℝ) : derivWithin f (Ioi x) x = derivWithin f (Ici x) x := by\n  by_cases H : DifferentiableWithinAt ℝ f (Ioi x) x\n  · have A := H.hasDerivWithinAt.Ici_of_Ioi\n    have B := (differentiableWithinAt_Ioi_iff_Ici.1 H).hasDerivWithinAt\n    simpa using (uniqueDiffOn_Ici x).eq left_mem_Ici A B\n  · rw [derivWithin_zero_of_not_differentiableWithinAt H,\n      derivWithin_zero_of_not_differentiableWithinAt]\n    rwa [differentiableWithinAt_Ioi_iff_Ici] at H\n\n"}
{"name":"Filter.EventuallyEq.hasDerivAtFilter_iff","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf₀ f₁ : 𝕜 → F\nf₀' f₁' : F\nx : 𝕜\nL : Filter 𝕜\nh₀ : L.EventuallyEq f₀ f₁\nhx : Eq (f₀ x) (f₁ x)\nh₁ : Eq f₀' f₁'\n⊢ Iff (HasDerivAtFilter f₀ f₀' x L) (HasDerivAtFilter f₁ f₁' x L)","decl":"theorem Filter.EventuallyEq.hasDerivAtFilter_iff (h₀ : f₀ =ᶠ[L] f₁) (hx : f₀ x = f₁ x)\n    (h₁ : f₀' = f₁') : HasDerivAtFilter f₀ f₀' x L ↔ HasDerivAtFilter f₁ f₁' x L :=\n  h₀.hasFDerivAtFilter_iff hx (by simp [h₁])\n\n"}
{"name":"HasDerivAtFilter.congr_of_eventuallyEq","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf f₁ : 𝕜 → F\nf' : F\nx : 𝕜\nL : Filter 𝕜\nh : HasDerivAtFilter f f' x L\nhL : L.EventuallyEq f₁ f\nhx : Eq (f₁ x) (f x)\n⊢ HasDerivAtFilter f₁ f' x L","decl":"theorem HasDerivAtFilter.congr_of_eventuallyEq (h : HasDerivAtFilter f f' x L) (hL : f₁ =ᶠ[L] f)\n    (hx : f₁ x = f x) : HasDerivAtFilter f₁ f' x L := by rwa [hL.hasDerivAtFilter_iff hx rfl]\n\n"}
{"name":"HasDerivWithinAt.congr_mono","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf f₁ : 𝕜 → F\nf' : F\nx : 𝕜\ns t : Set 𝕜\nh : HasDerivWithinAt f f' s x\nht : ∀ (x : 𝕜), Membership.mem t x → Eq (f₁ x) (f x)\nhx : Eq (f₁ x) (f x)\nh₁ : HasSubset.Subset t s\n⊢ HasDerivWithinAt f₁ f' t x","decl":"theorem HasDerivWithinAt.congr_mono (h : HasDerivWithinAt f f' s x) (ht : ∀ x ∈ t, f₁ x = f x)\n    (hx : f₁ x = f x) (h₁ : t ⊆ s) : HasDerivWithinAt f₁ f' t x :=\n  HasFDerivWithinAt.congr_mono h ht hx h₁\n\n"}
{"name":"HasDerivWithinAt.congr","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf f₁ : 𝕜 → F\nf' : F\nx : 𝕜\ns : Set 𝕜\nh : HasDerivWithinAt f f' s x\nhs : ∀ (x : 𝕜), Membership.mem s x → Eq (f₁ x) (f x)\nhx : Eq (f₁ x) (f x)\n⊢ HasDerivWithinAt f₁ f' s x","decl":"theorem HasDerivWithinAt.congr (h : HasDerivWithinAt f f' s x) (hs : ∀ x ∈ s, f₁ x = f x)\n    (hx : f₁ x = f x) : HasDerivWithinAt f₁ f' s x :=\n  h.congr_mono hs hx (Subset.refl _)\n\n"}
{"name":"HasDerivWithinAt.congr_of_mem","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf f₁ : 𝕜 → F\nf' : F\nx : 𝕜\ns : Set 𝕜\nh : HasDerivWithinAt f f' s x\nhs : ∀ (x : 𝕜), Membership.mem s x → Eq (f₁ x) (f x)\nhx : Membership.mem s x\n⊢ HasDerivWithinAt f₁ f' s x","decl":"theorem HasDerivWithinAt.congr_of_mem (h : HasDerivWithinAt f f' s x) (hs : ∀ x ∈ s, f₁ x = f x)\n    (hx : x ∈ s) : HasDerivWithinAt f₁ f' s x :=\n  h.congr hs (hs _ hx)\n\n"}
{"name":"HasDerivWithinAt.congr_of_eventuallyEq","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf f₁ : 𝕜 → F\nf' : F\nx : 𝕜\ns : Set 𝕜\nh : HasDerivWithinAt f f' s x\nh₁ : (nhdsWithin x s).EventuallyEq f₁ f\nhx : Eq (f₁ x) (f x)\n⊢ HasDerivWithinAt f₁ f' s x","decl":"theorem HasDerivWithinAt.congr_of_eventuallyEq (h : HasDerivWithinAt f f' s x)\n    (h₁ : f₁ =ᶠ[𝓝[s] x] f) (hx : f₁ x = f x) : HasDerivWithinAt f₁ f' s x :=\n  HasDerivAtFilter.congr_of_eventuallyEq h h₁ hx\n\n"}
{"name":"Filter.EventuallyEq.hasDerivWithinAt_iff","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf f₁ : 𝕜 → F\nf' : F\nx : 𝕜\ns : Set 𝕜\nh₁ : (nhdsWithin x s).EventuallyEq f₁ f\nhx : Eq (f₁ x) (f x)\n⊢ Iff (HasDerivWithinAt f₁ f' s x) (HasDerivWithinAt f f' s x)","decl":"theorem Filter.EventuallyEq.hasDerivWithinAt_iff (h₁ : f₁ =ᶠ[𝓝[s] x] f) (hx : f₁ x = f x) :\n    HasDerivWithinAt f₁ f' s x ↔ HasDerivWithinAt f f' s x :=\n  ⟨fun h' ↦ h'.congr_of_eventuallyEq h₁.symm hx.symm, fun h' ↦ h'.congr_of_eventuallyEq h₁ hx⟩\n\n"}
{"name":"HasDerivWithinAt.congr_of_eventuallyEq_of_mem","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf f₁ : 𝕜 → F\nf' : F\nx : 𝕜\ns : Set 𝕜\nh : HasDerivWithinAt f f' s x\nh₁ : (nhdsWithin x s).EventuallyEq f₁ f\nhx : Membership.mem s x\n⊢ HasDerivWithinAt f₁ f' s x","decl":"theorem HasDerivWithinAt.congr_of_eventuallyEq_of_mem (h : HasDerivWithinAt f f' s x)\n    (h₁ : f₁ =ᶠ[𝓝[s] x] f) (hx : x ∈ s) : HasDerivWithinAt f₁ f' s x :=\n  h.congr_of_eventuallyEq h₁ (h₁.eq_of_nhdsWithin hx)\n\n"}
{"name":"Filter.EventuallyEq.hasDerivWithinAt_iff_of_mem","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf f₁ : 𝕜 → F\nf' : F\nx : 𝕜\ns : Set 𝕜\nh₁ : (nhdsWithin x s).EventuallyEq f₁ f\nhx : Membership.mem s x\n⊢ Iff (HasDerivWithinAt f₁ f' s x) (HasDerivWithinAt f f' s x)","decl":"theorem Filter.EventuallyEq.hasDerivWithinAt_iff_of_mem (h₁ : f₁ =ᶠ[𝓝[s] x] f) (hx : x ∈ s) :\n    HasDerivWithinAt f₁ f' s x ↔ HasDerivWithinAt f f' s x :=\n  ⟨fun h' ↦ h'.congr_of_eventuallyEq_of_mem h₁.symm hx,\n  fun h' ↦ h'.congr_of_eventuallyEq_of_mem h₁ hx⟩\n\n"}
{"name":"HasStrictDerivAt.congr_deriv","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' g' : F\nx : 𝕜\nh : HasStrictDerivAt f f' x\nh' : Eq f' g'\n⊢ HasStrictDerivAt f g' x","decl":"theorem HasStrictDerivAt.congr_deriv (h : HasStrictDerivAt f f' x) (h' : f' = g') :\n    HasStrictDerivAt f g' x :=\n  h.congr_fderiv <| congr_arg _ h'\n\n"}
{"name":"HasDerivAt.congr_deriv","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' g' : F\nx : 𝕜\nh : HasDerivAt f f' x\nh' : Eq f' g'\n⊢ HasDerivAt f g' x","decl":"theorem HasDerivAt.congr_deriv (h : HasDerivAt f f' x) (h' : f' = g') : HasDerivAt f g' x :=\n  HasFDerivAt.congr_fderiv h <| congr_arg _ h'\n\n"}
{"name":"HasDerivWithinAt.congr_deriv","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' g' : F\nx : 𝕜\ns : Set 𝕜\nh : HasDerivWithinAt f f' s x\nh' : Eq f' g'\n⊢ HasDerivWithinAt f g' s x","decl":"theorem HasDerivWithinAt.congr_deriv (h : HasDerivWithinAt f f' s x) (h' : f' = g') :\n    HasDerivWithinAt f g' s x :=\n  HasFDerivWithinAt.congr_fderiv h <| congr_arg _ h'\n\n"}
{"name":"HasDerivAt.congr_of_eventuallyEq","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf f₁ : 𝕜 → F\nf' : F\nx : 𝕜\nh : HasDerivAt f f' x\nh₁ : (nhds x).EventuallyEq f₁ f\n⊢ HasDerivAt f₁ f' x","decl":"theorem HasDerivAt.congr_of_eventuallyEq (h : HasDerivAt f f' x) (h₁ : f₁ =ᶠ[𝓝 x] f) :\n    HasDerivAt f₁ f' x :=\n  HasDerivAtFilter.congr_of_eventuallyEq h h₁ (mem_of_mem_nhds h₁ :)\n\n"}
{"name":"Filter.EventuallyEq.hasDerivAt_iff","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf₀ f₁ : 𝕜 → F\nf' : F\nx : 𝕜\nh : (nhds x).EventuallyEq f₀ f₁\n⊢ Iff (HasDerivAt f₀ f' x) (HasDerivAt f₁ f' x)","decl":"theorem Filter.EventuallyEq.hasDerivAt_iff (h : f₀ =ᶠ[𝓝 x] f₁) :\n    HasDerivAt f₀ f' x ↔ HasDerivAt f₁ f' x :=\n  ⟨fun h' ↦ h'.congr_of_eventuallyEq h.symm, fun h' ↦ h'.congr_of_eventuallyEq h⟩\n\n"}
{"name":"Filter.EventuallyEq.derivWithin_eq","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf f₁ : 𝕜 → F\nx : 𝕜\ns : Set 𝕜\nhs : (nhdsWithin x s).EventuallyEq f₁ f\nhx : Eq (f₁ x) (f x)\n⊢ Eq (derivWithin f₁ s x) (derivWithin f s x)","decl":"theorem Filter.EventuallyEq.derivWithin_eq (hs : f₁ =ᶠ[𝓝[s] x] f) (hx : f₁ x = f x) :\n    derivWithin f₁ s x = derivWithin f s x := by\n  unfold derivWithin\n  rw [hs.fderivWithin_eq hx]\n\n"}
{"name":"derivWithin_congr","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf f₁ : 𝕜 → F\nx : 𝕜\ns : Set 𝕜\nhs : Set.EqOn f₁ f s\nhx : Eq (f₁ x) (f x)\n⊢ Eq (derivWithin f₁ s x) (derivWithin f s x)","decl":"theorem derivWithin_congr (hs : EqOn f₁ f s) (hx : f₁ x = f x) :\n    derivWithin f₁ s x = derivWithin f s x := by\n  unfold derivWithin\n  rw [fderivWithin_congr hs hx]\n\n"}
{"name":"Filter.EventuallyEq.deriv_eq","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf f₁ : 𝕜 → F\nx : 𝕜\nhL : (nhds x).EventuallyEq f₁ f\n⊢ Eq (deriv f₁ x) (deriv f x)","decl":"theorem Filter.EventuallyEq.deriv_eq (hL : f₁ =ᶠ[𝓝 x] f) : deriv f₁ x = deriv f x := by\n  unfold deriv\n  rwa [Filter.EventuallyEq.fderiv_eq]\n\n"}
{"name":"Filter.EventuallyEq.deriv","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf f₁ : 𝕜 → F\nx : 𝕜\nh : (nhds x).EventuallyEq f₁ f\n⊢ (nhds x).EventuallyEq (deriv f₁) (deriv f)","decl":"protected theorem Filter.EventuallyEq.deriv (h : f₁ =ᶠ[𝓝 x] f) : deriv f₁ =ᶠ[𝓝 x] deriv f :=\n  h.eventuallyEq_nhds.mono fun _ h => h.deriv_eq\n\n"}
{"name":"hasDerivAtFilter_id","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝ : NontriviallyNormedField 𝕜\nx : 𝕜\nL : Filter 𝕜\n⊢ HasDerivAtFilter id 1 x L","decl":"theorem hasDerivAtFilter_id : HasDerivAtFilter id 1 x L :=\n  (hasFDerivAtFilter_id x L).hasDerivAtFilter\n\n"}
{"name":"hasDerivWithinAt_id","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝ : NontriviallyNormedField 𝕜\nx : 𝕜\ns : Set 𝕜\n⊢ HasDerivWithinAt id 1 s x","decl":"theorem hasDerivWithinAt_id : HasDerivWithinAt id 1 s x :=\n  hasDerivAtFilter_id _ _\n\n"}
{"name":"hasDerivAt_id","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝ : NontriviallyNormedField 𝕜\nx : 𝕜\n⊢ HasDerivAt id 1 x","decl":"theorem hasDerivAt_id : HasDerivAt id 1 x :=\n  hasDerivAtFilter_id _ _\n\n"}
{"name":"hasDerivAt_id'","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝ : NontriviallyNormedField 𝕜\nx : 𝕜\n⊢ HasDerivAt (fun x => x) 1 x","decl":"theorem hasDerivAt_id' : HasDerivAt (fun x : 𝕜 => x) 1 x :=\n  hasDerivAtFilter_id _ _\n\n"}
{"name":"hasStrictDerivAt_id","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝ : NontriviallyNormedField 𝕜\nx : 𝕜\n⊢ HasStrictDerivAt id 1 x","decl":"theorem hasStrictDerivAt_id : HasStrictDerivAt id 1 x :=\n  (hasStrictFDerivAt_id x).hasStrictDerivAt\n\n"}
{"name":"deriv_id","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝ : NontriviallyNormedField 𝕜\nx : 𝕜\n⊢ Eq (deriv id x) 1","decl":"theorem deriv_id : deriv id x = 1 :=\n  HasDerivAt.deriv (hasDerivAt_id x)\n\n"}
{"name":"deriv_id'","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝ : NontriviallyNormedField 𝕜\n⊢ Eq (deriv id) fun x => 1","decl":"@[simp]\ntheorem deriv_id' : deriv (@id 𝕜) = fun _ => 1 :=\n  funext deriv_id\n\n"}
{"name":"deriv_id''","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝ : NontriviallyNormedField 𝕜\n⊢ Eq (deriv fun x => x) fun x => 1","decl":"/-- Variant with `fun x => x` rather than `id` -/\n@[simp]\ntheorem deriv_id'' : (deriv fun x : 𝕜 => x) = fun _ => 1 :=\n  deriv_id'\n\n"}
{"name":"derivWithin_id","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝ : NontriviallyNormedField 𝕜\nx : 𝕜\ns : Set 𝕜\nhxs : UniqueDiffWithinAt 𝕜 s x\n⊢ Eq (derivWithin id s x) 1","decl":"theorem derivWithin_id (hxs : UniqueDiffWithinAt 𝕜 s x) : derivWithin id s x = 1 :=\n  (hasDerivWithinAt_id x s).derivWithin hxs\n\n"}
{"name":"derivWithin_id'","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝ : NontriviallyNormedField 𝕜\nx : 𝕜\ns : Set 𝕜\nhxs : UniqueDiffWithinAt 𝕜 s x\n⊢ Eq (derivWithin (fun x => x) s x) 1","decl":"/-- Variant with `fun x => x` rather than `id` -/\ntheorem derivWithin_id' (hxs : UniqueDiffWithinAt 𝕜 s x) : derivWithin (fun x => x) s x = 1 :=\n  derivWithin_id x s hxs\n\n"}
{"name":"hasDerivAtFilter_const","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nx : 𝕜\nL : Filter 𝕜\nc : F\n⊢ HasDerivAtFilter (fun x => c) 0 x L","decl":"theorem hasDerivAtFilter_const : HasDerivAtFilter (fun _ => c) 0 x L :=\n  (hasFDerivAtFilter_const c x L).hasDerivAtFilter\n\n"}
{"name":"hasStrictDerivAt_const","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nx : 𝕜\nc : F\n⊢ HasStrictDerivAt (fun x => c) 0 x","decl":"theorem hasStrictDerivAt_const : HasStrictDerivAt (fun _ => c) 0 x :=\n  (hasStrictFDerivAt_const c x).hasStrictDerivAt\n\n"}
{"name":"hasDerivWithinAt_const","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nx : 𝕜\ns : Set 𝕜\nc : F\n⊢ HasDerivWithinAt (fun x => c) 0 s x","decl":"theorem hasDerivWithinAt_const : HasDerivWithinAt (fun _ => c) 0 s x :=\n  hasDerivAtFilter_const _ _ _\n\n"}
{"name":"hasDerivAt_const","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nx : 𝕜\nc : F\n⊢ HasDerivAt (fun x => c) 0 x","decl":"theorem hasDerivAt_const : HasDerivAt (fun _ => c) 0 x :=\n  hasDerivAtFilter_const _ _ _\n\n"}
{"name":"deriv_const","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nx : 𝕜\nc : F\n⊢ Eq (deriv (fun x => c) x) 0","decl":"theorem deriv_const : deriv (fun _ => c) x = 0 :=\n  HasDerivAt.deriv (hasDerivAt_const x c)\n\n"}
{"name":"deriv_const'","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nc : F\n⊢ Eq (deriv fun x => c) fun x => 0","decl":"@[simp]\ntheorem deriv_const' : (deriv fun _ : 𝕜 => c) = fun _ => 0 :=\n  funext fun x => deriv_const x c\n\n"}
{"name":"derivWithin_const","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\ns : Set 𝕜\nc : F\n⊢ Eq (derivWithin (fun x => c) s) 0","decl":"@[simp]\ntheorem derivWithin_const : derivWithin (fun _ => c) s = 0 := by\n  ext; simp [derivWithin]\n\n"}
{"name":"derivWithin_zero","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\ns : Set 𝕜\n⊢ Eq (derivWithin 0 s) 0","decl":"@[simp]\ntheorem derivWithin_zero : derivWithin (0 : 𝕜 → F) s = 0 := derivWithin_const _ _\n\n"}
{"name":"HasDerivAtFilter.tendsto_nhds","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\nL : Filter 𝕜\nhL : LE.le L (nhds x)\nh : HasDerivAtFilter f f' x L\n⊢ Filter.Tendsto f L (nhds (f x))","decl":"nonrec theorem HasDerivAtFilter.tendsto_nhds (hL : L ≤ 𝓝 x) (h : HasDerivAtFilter f f' x L) :\n    Tendsto f L (𝓝 (f x)) :=\n  h.tendsto_nhds hL\n\n"}
{"name":"HasDerivWithinAt.continuousWithinAt","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\ns : Set 𝕜\nh : HasDerivWithinAt f f' s x\n⊢ ContinuousWithinAt f s x","decl":"theorem HasDerivWithinAt.continuousWithinAt (h : HasDerivWithinAt f f' s x) :\n    ContinuousWithinAt f s x :=\n  HasDerivAtFilter.tendsto_nhds inf_le_left h\n\n"}
{"name":"HasDerivAt.continuousAt","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx : 𝕜\nh : HasDerivAt f f' x\n⊢ ContinuousAt f x","decl":"theorem HasDerivAt.continuousAt (h : HasDerivAt f f' x) : ContinuousAt f x :=\n  HasDerivAtFilter.tendsto_nhds le_rfl h\n\n"}
{"name":"HasDerivAt.continuousOn","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\ns : Set 𝕜\nf f' : 𝕜 → F\nhderiv : ∀ (x : 𝕜), Membership.mem s x → HasDerivAt f (f' x) x\n⊢ ContinuousOn f s","decl":"protected theorem HasDerivAt.continuousOn {f f' : 𝕜 → F} (hderiv : ∀ x ∈ s, HasDerivAt f (f' x) x) :\n    ContinuousOn f s := fun x hx => (hderiv x hx).continuousAt.continuousWithinAt\n\n"}
{"name":"HasDerivAt.le_of_lip'","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx₀ : 𝕜\nhf : HasDerivAt f f' x₀\nC : Real\nhC₀ : LE.le 0 C\nhlip : Filter.Eventually (fun x => LE.le (Norm.norm (HSub.hSub (f x) (f x₀))) (HMul.hMul C (Norm.norm (HSub.hSub x x₀)))) (nhds x₀)\n⊢ LE.le (Norm.norm f') C","decl":"/-- Converse to the mean value inequality: if `f` is differentiable at `x₀` and `C`-lipschitz\non a neighborhood of `x₀` then its derivative at `x₀` has norm bounded by `C`. This version\nonly assumes that `‖f x - f x₀‖ ≤ C * ‖x - x₀‖` in a neighborhood of `x`. -/\ntheorem HasDerivAt.le_of_lip' {f : 𝕜 → F} {f' : F} {x₀ : 𝕜} (hf : HasDerivAt f f' x₀)\n    {C : ℝ} (hC₀ : 0 ≤ C) (hlip : ∀ᶠ x in 𝓝 x₀, ‖f x - f x₀‖ ≤ C * ‖x - x₀‖) :\n    ‖f'‖ ≤ C := by\n  simpa using HasFDerivAt.le_of_lip' hf.hasFDerivAt hC₀ hlip\n\n"}
{"name":"HasDerivAt.le_of_lipschitzOn","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx₀ : 𝕜\nhf : HasDerivAt f f' x₀\ns : Set 𝕜\nhs : Membership.mem (nhds x₀) s\nC : NNReal\nhlip : LipschitzOnWith C f s\n⊢ LE.le (Norm.norm f') ↑C","decl":"/-- Converse to the mean value inequality: if `f` is differentiable at `x₀` and `C`-lipschitz\non a neighborhood of `x₀` then its derivative at `x₀` has norm bounded by `C`. -/\ntheorem HasDerivAt.le_of_lipschitzOn {f : 𝕜 → F} {f' : F} {x₀ : 𝕜} (hf : HasDerivAt f f' x₀)\n    {s : Set 𝕜} (hs : s ∈ 𝓝 x₀) {C : ℝ≥0} (hlip : LipschitzOnWith C f s) : ‖f'‖ ≤ C := by\n  simpa using HasFDerivAt.le_of_lipschitzOn hf.hasFDerivAt hs hlip\n\n"}
{"name":"HasDerivAt.le_of_lipschitz","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nf' : F\nx₀ : 𝕜\nhf : HasDerivAt f f' x₀\nC : NNReal\nhlip : LipschitzWith C f\n⊢ LE.le (Norm.norm f') ↑C","decl":"/-- Converse to the mean value inequality: if `f` is differentiable at `x₀` and `C`-lipschitz\nthen its derivative at `x₀` has norm bounded by `C`. -/\ntheorem HasDerivAt.le_of_lipschitz {f : 𝕜 → F} {f' : F} {x₀ : 𝕜} (hf : HasDerivAt f f' x₀)\n    {C : ℝ≥0} (hlip : LipschitzWith C f) : ‖f'‖ ≤ C := by\n  simpa using HasFDerivAt.le_of_lipschitz hf.hasFDerivAt hlip\n\n"}
{"name":"norm_deriv_le_of_lip'","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx₀ : 𝕜\nC : Real\nhC₀ : LE.le 0 C\nhlip : Filter.Eventually (fun x => LE.le (Norm.norm (HSub.hSub (f x) (f x₀))) (HMul.hMul C (Norm.norm (HSub.hSub x x₀)))) (nhds x₀)\n⊢ LE.le (Norm.norm (deriv f x₀)) C","decl":"/-- Converse to the mean value inequality: if `f` is `C`-lipschitz\non a neighborhood of `x₀` then its derivative at `x₀` has norm bounded by `C`. This version\nonly assumes that `‖f x - f x₀‖ ≤ C * ‖x - x₀‖` in a neighborhood of `x`. -/\ntheorem norm_deriv_le_of_lip' {f : 𝕜 → F} {x₀ : 𝕜}\n    {C : ℝ} (hC₀ : 0 ≤ C) (hlip : ∀ᶠ x in 𝓝 x₀, ‖f x - f x₀‖ ≤ C * ‖x - x₀‖) :\n    ‖deriv f x₀‖ ≤ C := by\n  simpa [norm_deriv_eq_norm_fderiv] using norm_fderiv_le_of_lip' 𝕜 hC₀ hlip\n\n"}
{"name":"norm_deriv_le_of_lipschitzOn","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx₀ : 𝕜\ns : Set 𝕜\nhs : Membership.mem (nhds x₀) s\nC : NNReal\nhlip : LipschitzOnWith C f s\n⊢ LE.le (Norm.norm (deriv f x₀)) ↑C","decl":"/-- Converse to the mean value inequality: if `f` is `C`-lipschitz\non a neighborhood of `x₀` then its derivative at `x₀` has norm bounded by `C`.\nVersion using `deriv`. -/\ntheorem norm_deriv_le_of_lipschitzOn {f : 𝕜 → F} {x₀ : 𝕜} {s : Set 𝕜} (hs : s ∈ 𝓝 x₀)\n    {C : ℝ≥0} (hlip : LipschitzOnWith C f s) : ‖deriv f x₀‖ ≤ C := by\n  simpa [norm_deriv_eq_norm_fderiv] using norm_fderiv_le_of_lipschitzOn 𝕜 hs hlip\n\n"}
{"name":"norm_deriv_le_of_lipschitz","module":"Mathlib.Analysis.Calculus.Deriv.Basic","initialProofState":"𝕜 : Type u\ninst✝² : NontriviallyNormedField 𝕜\nF : Type v\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace 𝕜 F\nf : 𝕜 → F\nx₀ : 𝕜\nC : NNReal\nhlip : LipschitzWith C f\n⊢ LE.le (Norm.norm (deriv f x₀)) ↑C","decl":"/-- Converse to the mean value inequality: if `f` is `C`-lipschitz then\nits derivative at `x₀` has norm bounded by `C`.\nVersion using `deriv`. -/\ntheorem norm_deriv_le_of_lipschitz {f : 𝕜 → F} {x₀ : 𝕜}\n    {C : ℝ≥0} (hlip : LipschitzWith C f) : ‖deriv f x₀‖ ≤ C := by\n  simpa [norm_deriv_eq_norm_fderiv] using norm_fderiv_le_of_lipschitz 𝕜 hlip\n\n"}
