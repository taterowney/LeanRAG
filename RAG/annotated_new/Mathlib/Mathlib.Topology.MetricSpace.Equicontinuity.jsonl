{"name":"Metric.equicontinuousAt_iff_right","module":"Mathlib.Topology.MetricSpace.Equicontinuity","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : PseudoMetricSpace α\nι : Type u_4\ninst✝ : TopologicalSpace β\nF : ι → β → α\nx₀ : β\n⊢ Iff (EquicontinuousAt F x₀) (∀ (ε : Real), GT.gt ε 0 → Filter.Eventually (fun x => ∀ (i : ι), LT.lt (Dist.dist (F i x₀) (F i x)) ε) (nhds x₀))","decl":"/-- Characterization of equicontinuity for families of functions taking values in a (pseudo) metric\nspace. -/\ntheorem equicontinuousAt_iff_right {ι : Type*} [TopologicalSpace β] {F : ι → β → α} {x₀ : β} :\n    EquicontinuousAt F x₀ ↔ ∀ ε > 0, ∀ᶠ x in 𝓝 x₀, ∀ i, dist (F i x₀) (F i x) < ε :=\n  uniformity_basis_dist.equicontinuousAt_iff_right\n\n"}
{"name":"Metric.equicontinuousAt_iff","module":"Mathlib.Topology.MetricSpace.Equicontinuity","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : PseudoMetricSpace α\nι : Type u_4\ninst✝ : PseudoMetricSpace β\nF : ι → β → α\nx₀ : β\n⊢ Iff (EquicontinuousAt F x₀) (∀ (ε : Real), GT.gt ε 0 → Exists fun δ => And (GT.gt δ 0) (∀ (x : β), LT.lt (Dist.dist x x₀) δ → ∀ (i : ι), LT.lt (Dist.dist (F i x₀) (F i x)) ε))","decl":"/-- Characterization of equicontinuity for families of functions between (pseudo) metric spaces. -/\ntheorem equicontinuousAt_iff {ι : Type*} [PseudoMetricSpace β] {F : ι → β → α} {x₀ : β} :\n    EquicontinuousAt F x₀ ↔ ∀ ε > 0, ∃ δ > 0, ∀ x, dist x x₀ < δ → ∀ i, dist (F i x₀) (F i x) < ε :=\n  nhds_basis_ball.equicontinuousAt_iff uniformity_basis_dist\n\n"}
{"name":"Metric.equicontinuousAt_iff_pair","module":"Mathlib.Topology.MetricSpace.Equicontinuity","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : PseudoMetricSpace α\nι : Type u_4\ninst✝ : TopologicalSpace β\nF : ι → β → α\nx₀ : β\n⊢ Iff (EquicontinuousAt F x₀) (∀ (ε : Real), GT.gt ε 0 → Exists fun U => And (Membership.mem (nhds x₀) U) (∀ (x : β), Membership.mem U x → ∀ (x' : β), Membership.mem U x' → ∀ (i : ι), LT.lt (Dist.dist (F i x) (F i x')) ε))","decl":"/-- Reformulation of `equicontinuousAt_iff_pair` for families of functions taking values in a\n(pseudo) metric space. -/\nprotected theorem equicontinuousAt_iff_pair {ι : Type*} [TopologicalSpace β] {F : ι → β → α}\n    {x₀ : β} :\n    EquicontinuousAt F x₀ ↔\n      ∀ ε > 0, ∃ U ∈ 𝓝 x₀, ∀ x ∈ U, ∀ x' ∈ U, ∀ i, dist (F i x) (F i x') < ε := by\n  rw [equicontinuousAt_iff_pair]\n  constructor <;> intro H\n  · intro ε hε\n    exact H _ (dist_mem_uniformity hε)\n  · intro U hU\n    rcases mem_uniformity_dist.mp hU with ⟨ε, hε, hεU⟩\n    refine Exists.imp (fun V => And.imp_right fun h => ?_) (H _ hε)\n    exact fun x hx x' hx' i => hεU (h _ hx _ hx' i)\n\n"}
{"name":"Metric.uniformEquicontinuous_iff_right","module":"Mathlib.Topology.MetricSpace.Equicontinuity","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : PseudoMetricSpace α\nι : Type u_4\ninst✝ : UniformSpace β\nF : ι → β → α\n⊢ Iff (UniformEquicontinuous F) (∀ (ε : Real), GT.gt ε 0 → Filter.Eventually (fun xy => ∀ (i : ι), LT.lt (Dist.dist (F i xy.1) (F i xy.2)) ε) (uniformity β))","decl":"/-- Characterization of uniform equicontinuity for families of functions taking values in a\n(pseudo) metric space. -/\ntheorem uniformEquicontinuous_iff_right {ι : Type*} [UniformSpace β] {F : ι → β → α} :\n    UniformEquicontinuous F ↔ ∀ ε > 0, ∀ᶠ xy : β × β in 𝓤 β, ∀ i, dist (F i xy.1) (F i xy.2) < ε :=\n  uniformity_basis_dist.uniformEquicontinuous_iff_right\n\n"}
{"name":"Metric.uniformEquicontinuous_iff","module":"Mathlib.Topology.MetricSpace.Equicontinuity","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : PseudoMetricSpace α\nι : Type u_4\ninst✝ : PseudoMetricSpace β\nF : ι → β → α\n⊢ Iff (UniformEquicontinuous F) (∀ (ε : Real), GT.gt ε 0 → Exists fun δ => And (GT.gt δ 0) (∀ (x y : β), LT.lt (Dist.dist x y) δ → ∀ (i : ι), LT.lt (Dist.dist (F i x) (F i y)) ε))","decl":"/-- Characterization of uniform equicontinuity for families of functions between\n(pseudo) metric spaces. -/\ntheorem uniformEquicontinuous_iff {ι : Type*} [PseudoMetricSpace β] {F : ι → β → α} :\n    UniformEquicontinuous F ↔\n      ∀ ε > 0, ∃ δ > 0, ∀ x y, dist x y < δ → ∀ i, dist (F i x) (F i y) < ε :=\n  uniformity_basis_dist.uniformEquicontinuous_iff uniformity_basis_dist\n\n"}
{"name":"Metric.equicontinuousAt_of_continuity_modulus","module":"Mathlib.Topology.MetricSpace.Equicontinuity","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : PseudoMetricSpace α\nι : Type u_4\ninst✝ : TopologicalSpace β\nx₀ : β\nb : β → Real\nb_lim : Filter.Tendsto b (nhds x₀) (nhds 0)\nF : ι → β → α\nH : Filter.Eventually (fun x => ∀ (i : ι), LE.le (Dist.dist (F i x₀) (F i x)) (b x)) (nhds x₀)\n⊢ EquicontinuousAt F x₀","decl":"/-- For a family of functions to a (pseudo) metric spaces, a convenient way to prove\nequicontinuity at a point is to show that all of the functions share a common *local* continuity\nmodulus. -/\ntheorem equicontinuousAt_of_continuity_modulus {ι : Type*} [TopologicalSpace β] {x₀ : β}\n    (b : β → ℝ) (b_lim : Tendsto b (𝓝 x₀) (𝓝 0)) (F : ι → β → α)\n    (H : ∀ᶠ x in 𝓝 x₀, ∀ i, dist (F i x₀) (F i x) ≤ b x) : EquicontinuousAt F x₀ := by\n  rw [Metric.equicontinuousAt_iff_right]\n  intro ε ε0\n  -- Porting note: Lean 3 didn't need `Filter.mem_map.mp` here\n  filter_upwards [Filter.mem_map.mp <| b_lim (Iio_mem_nhds ε0), H] using\n    fun x hx₁ hx₂ i => (hx₂ i).trans_lt hx₁\n\n"}
{"name":"Metric.uniformEquicontinuous_of_continuity_modulus","module":"Mathlib.Topology.MetricSpace.Equicontinuity","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : PseudoMetricSpace α\nι : Type u_4\ninst✝ : PseudoMetricSpace β\nb : Real → Real\nb_lim : Filter.Tendsto b (nhds 0) (nhds 0)\nF : ι → β → α\nH : ∀ (x y : β) (i : ι), LE.le (Dist.dist (F i x) (F i y)) (b (Dist.dist x y))\n⊢ UniformEquicontinuous F","decl":"/-- For a family of functions between (pseudo) metric spaces, a convenient way to prove\nuniform equicontinuity is to show that all of the functions share a common *global* continuity\nmodulus. -/\ntheorem uniformEquicontinuous_of_continuity_modulus {ι : Type*} [PseudoMetricSpace β] (b : ℝ → ℝ)\n    (b_lim : Tendsto b (𝓝 0) (𝓝 0)) (F : ι → β → α)\n    (H : ∀ (x y : β) (i), dist (F i x) (F i y) ≤ b (dist x y)) : UniformEquicontinuous F := by\n  rw [Metric.uniformEquicontinuous_iff]\n  intro ε ε0\n  rcases tendsto_nhds_nhds.1 b_lim ε ε0 with ⟨δ, δ0, hδ⟩\n  refine ⟨δ, δ0, fun x y hxy i => ?_⟩\n  calc\n    dist (F i x) (F i y) ≤ b (dist x y) := H x y i\n    _ ≤ |b (dist x y)| := le_abs_self _\n    _ = dist (b (dist x y)) 0 := by simp [Real.dist_eq]\n    _ < ε := hδ (by simpa only [Real.dist_eq, tsub_zero, abs_dist] using hxy)\n\n"}
{"name":"Metric.equicontinuous_of_continuity_modulus","module":"Mathlib.Topology.MetricSpace.Equicontinuity","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : PseudoMetricSpace α\nι : Type u_4\ninst✝ : PseudoMetricSpace β\nb : Real → Real\nb_lim : Filter.Tendsto b (nhds 0) (nhds 0)\nF : ι → β → α\nH : ∀ (x y : β) (i : ι), LE.le (Dist.dist (F i x) (F i y)) (b (Dist.dist x y))\n⊢ Equicontinuous F","decl":"/-- For a family of functions between (pseudo) metric spaces, a convenient way to prove\nequicontinuity is to show that all of the functions share a common *global* continuity modulus. -/\ntheorem equicontinuous_of_continuity_modulus {ι : Type*} [PseudoMetricSpace β] (b : ℝ → ℝ)\n    (b_lim : Tendsto b (𝓝 0) (𝓝 0)) (F : ι → β → α)\n    (H : ∀ (x y : β) (i), dist (F i x) (F i y) ≤ b (dist x y)) : Equicontinuous F :=\n  (uniformEquicontinuous_of_continuity_modulus b b_lim F H).equicontinuous\n\n"}
