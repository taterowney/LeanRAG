{"name":"TopCommRingCat.mk.injEq","module":"Mathlib.Topology.Category.TopCommRingCat","initialProofState":"α✝ : Type u\nisCommRing✝ : CommRing α✝\nisTopologicalSpace✝ : TopologicalSpace α✝\nisTopologicalRing✝ : TopologicalRing α✝\nα : Type u\nisCommRing : CommRing α\nisTopologicalSpace : TopologicalSpace α\nisTopologicalRing : TopologicalRing α\n⊢ Eq (Eq (TopCommRingCat.mk α✝) (TopCommRingCat.mk α)) (And (Eq α✝ α) (And (HEq isCommRing✝ isCommRing) (HEq isTopologicalSpace✝ isTopologicalSpace)))","decl":"/-- A bundled topological commutative ring. -/\nstructure TopCommRingCat where\n  /-- carrier of a topological commutative ring. -/\n  α : Type u\n  [isCommRing : CommRing α]\n  [isTopologicalSpace : TopologicalSpace α]\n  [isTopologicalRing : TopologicalRing α]\n\n"}
{"name":"TopCommRingCat.isTopologicalRing","module":"Mathlib.Topology.Category.TopCommRingCat","initialProofState":"self : TopCommRingCat\n⊢ TopologicalRing self.α","decl":"/-- A bundled topological commutative ring. -/\nstructure TopCommRingCat where\n  /-- carrier of a topological commutative ring. -/\n  α : Type u\n  [isCommRing : CommRing α]\n  [isTopologicalSpace : TopologicalSpace α]\n  [isTopologicalRing : TopologicalRing α]\n\n"}
{"name":"TopCommRingCat.mk.sizeOf_spec","module":"Mathlib.Topology.Category.TopCommRingCat","initialProofState":"α : Type u\nisCommRing : CommRing α\nisTopologicalSpace : TopologicalSpace α\nisTopologicalRing : TopologicalRing α\n⊢ Eq (SizeOf.sizeOf (TopCommRingCat.mk α)) (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd 1 (SizeOf.sizeOf α)) (SizeOf.sizeOf isCommRing)) (SizeOf.sizeOf isTopologicalSpace)) (SizeOf.sizeOf isTopologicalRing))","decl":"/-- A bundled topological commutative ring. -/\nstructure TopCommRingCat where\n  /-- carrier of a topological commutative ring. -/\n  α : Type u\n  [isCommRing : CommRing α]\n  [isTopologicalSpace : TopologicalSpace α]\n  [isTopologicalRing : TopologicalRing α]\n\n"}
{"name":"TopCommRingCat.mk.inj","module":"Mathlib.Topology.Category.TopCommRingCat","initialProofState":"α✝ : Type u\nisCommRing✝ : CommRing α✝\nisTopologicalSpace✝ : TopologicalSpace α✝\nisTopologicalRing✝ : TopologicalRing α✝\nα : Type u\nisCommRing : CommRing α\nisTopologicalSpace : TopologicalSpace α\nisTopologicalRing : TopologicalRing α\nx✝ : Eq (TopCommRingCat.mk α✝) (TopCommRingCat.mk α)\n⊢ And (Eq α✝ α) (And (HEq isCommRing✝ isCommRing) (HEq isTopologicalSpace✝ isTopologicalSpace))","decl":"/-- A bundled topological commutative ring. -/\nstructure TopCommRingCat where\n  /-- carrier of a topological commutative ring. -/\n  α : Type u\n  [isCommRing : CommRing α]\n  [isTopologicalSpace : TopologicalSpace α]\n  [isTopologicalRing : TopologicalRing α]\n\n"}
{"name":"TopCommRingCat.coe_of","module":"Mathlib.Topology.Category.TopCommRingCat","initialProofState":"X : Type u\ninst✝² : CommRing X\ninst✝¹ : TopologicalSpace X\ninst✝ : TopologicalRing X\n⊢ Eq (TopCommRingCat.of X).α X","decl":"@[simp]\ntheorem coe_of (X : Type u) [CommRing X] [TopologicalSpace X] [TopologicalRing X] :\n    (of X : Type u) = X := rfl\n\n"}
{"name":"TopCommRingCat.forgetTopologicalRing","module":"Mathlib.Topology.Category.TopCommRingCat","initialProofState":"R : TopCommRingCat\n⊢ TopologicalRing ((CategoryTheory.forget TopCommRingCat).obj R)","decl":"instance forgetTopologicalRing (R : TopCommRingCat) :\n    TopologicalRing ((forget TopCommRingCat).obj R) :=\n  R.isTopologicalRing\n\n"}
{"name":"TopCommRingCat.forgetToTopCatTopologicalRing","module":"Mathlib.Topology.Category.TopCommRingCat","initialProofState":"R : TopCommRingCat\n⊢ TopologicalRing ↑((CategoryTheory.forget₂ TopCommRingCat TopCat).obj R)","decl":"instance forgetToTopCatTopologicalRing (R : TopCommRingCat) :\n    TopologicalRing ((forget₂ TopCommRingCat TopCat).obj R) :=\n  R.isTopologicalRing\n\n"}
{"name":"TopCommRingCat.instReflectsIsomorphismsTopCatForget₂","module":"Mathlib.Topology.Category.TopCommRingCat","initialProofState":"⊢ (CategoryTheory.forget₂ TopCommRingCat TopCat).ReflectsIsomorphisms","decl":"/-- The forgetful functors to `Type` do not reflect isomorphisms,\nbut the forgetful functor from `TopCommRingCat` to `TopCat` does.\n-/\ninstance : (forget₂ TopCommRingCat.{u} TopCat.{u}).ReflectsIsomorphisms where\n  reflects {X Y} f _ := by\n    -- We have an isomorphism in `TopCat`,\n    let i_Top := asIso ((forget₂ TopCommRingCat TopCat).map f)\n    -- and a `RingEquiv`.\n    let e_Ring : X ≃+* Y := { f.1, ((forget TopCat).mapIso i_Top).toEquiv with }\n    -- Putting these together we obtain the isomorphism we're after:\n    exact\n      ⟨⟨⟨e_Ring.symm, i_Top.inv.2⟩,\n          ⟨by\n            ext x\n            exact e_Ring.left_inv x, by\n            ext x\n            exact e_Ring.right_inv x⟩⟩⟩\n\n"}
