{"name":"Module.Finite.left","module":"Mathlib.FieldTheory.Tower","initialProofState":"F : Type u\nK : Type v\nA : Type w\ninst✝⁹ : Ring F\ninst✝⁸ : Ring K\ninst✝⁷ : Module F K\ninst✝⁶ : AddCommGroup A\ninst✝⁵ : Module K A\ninst✝⁴ : NoZeroSMulDivisors K A\ninst✝³ : Module F A\ninst✝² : IsNoetherian F A\ninst✝¹ : IsScalarTower F K A\ninst✝ : Nontrivial A\n⊢ Module.Finite F K","decl":"variable [Ring F] [Ring K] [Module F K]\n  [AddCommGroup A] [Module K A] [NoZeroSMulDivisors K A]\n  [Module F A] [IsNoetherian F A] [IsScalarTower F K A] in\n/-- In a tower of field extensions `A / K / F`, if `A / F` is finite, so is `K / F`.\n\n(In fact, it suffices that `A` is a nontrivial ring.)\n\nNote this cannot be an instance as Lean cannot infer `A`.\n-/\ntheorem left [Nontrivial A] : Module.Finite F K :=\n  let ⟨x, hx⟩ := exists_ne (0 : A)\n  Module.Finite.of_injective\n    (LinearMap.ringLmapEquivSelf K ℕ A |>.symm x |>.restrictScalars F) (smul_left_injective K hx)\n\n"}
{"name":"Module.Finite.right","module":"Mathlib.FieldTheory.Tower","initialProofState":"F : Type u\nK : Type v\nA : Type w\ninst✝⁶ : Semiring F\ninst✝⁵ : Semiring K\ninst✝⁴ : Module F K\ninst✝³ : AddCommMonoid A\ninst✝² : Module K A\ninst✝¹ : Module F A\ninst✝ : IsScalarTower F K A\nhf : Module.Finite F A\n⊢ Module.Finite K A","decl":"variable [Semiring F] [Semiring K] [Module F K]\n  [AddCommMonoid A] [Module K A] [Module F A] [IsScalarTower F K A] in\n@[stacks 09G5]\ntheorem right [hf : Module.Finite F A] : Module.Finite K A :=\n  let ⟨⟨b, hb⟩⟩ := hf\n  ⟨⟨b, Submodule.restrictScalars_injective F _ _ <| by\n    rw [Submodule.restrictScalars_top, eq_top_iff, ← hb, Submodule.span_le]\n    exact Submodule.subset_span⟩⟩\n\n"}
{"name":"FiniteDimensional.left","module":"Mathlib.FieldTheory.Tower","initialProofState":"F : Type u\nK : Type v\nA : Type w\ninst✝⁹ : Ring F\ninst✝⁸ : Ring K\ninst✝⁷ : Module F K\ninst✝⁶ : AddCommGroup A\ninst✝⁵ : Module K A\ninst✝⁴ : NoZeroSMulDivisors K A\ninst✝³ : Module F A\ninst✝² : IsNoetherian F A\ninst✝¹ : IsScalarTower F K A\ninst✝ : Nontrivial A\n⊢ Module.Finite F K","decl":"alias FiniteDimensional.left := Module.Finite.left\n"}
{"name":"FiniteDimensional.right","module":"Mathlib.FieldTheory.Tower","initialProofState":"F : Type u\nK : Type v\nA : Type w\ninst✝⁶ : Semiring F\ninst✝⁵ : Semiring K\ninst✝⁴ : Module F K\ninst✝³ : AddCommMonoid A\ninst✝² : Module K A\ninst✝¹ : Module F A\ninst✝ : IsScalarTower F K A\nhf : Module.Finite F A\n⊢ Module.Finite K A","decl":"alias FiniteDimensional.right := Module.Finite.right\n"}
