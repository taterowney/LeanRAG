{"name":"RootPairingCat.mk.injEq","module":"Mathlib.LinearAlgebra.RootSystem.RootPairingCat","initialProofState":"R : Type u\ninst✝ : CommRing R\nweight✝ : Type v\nweightIsAddCommGroup✝ : AddCommGroup weight✝\nweightIsModule✝ : Module R weight✝\ncoweight✝ : Type v\ncoweightIsAddCommGroup✝ : AddCommGroup coweight✝\ncoweightIsModule✝ : Module R coweight✝\nindex✝ : Type v\npairing✝ : RootPairing index✝ R weight✝ coweight✝\nweight : Type v\nweightIsAddCommGroup : AddCommGroup weight\nweightIsModule : Module R weight\ncoweight : Type v\ncoweightIsAddCommGroup : AddCommGroup coweight\ncoweightIsModule : Module R coweight\nindex : Type v\npairing : RootPairing index R weight coweight\n⊢ Eq (Eq (RootPairingCat.mk weight✝ coweight✝ index✝ pairing✝) (RootPairingCat.mk weight coweight index pairing)) (And (Eq weight✝ weight) (And (HEq weightIsAddCommGroup✝ weightIsAddCommGroup) (And (HEq weightIsModule✝ weightIsModule) (And (Eq coweight✝ coweight) (And (HEq coweightIsAddCommGroup✝ coweightIsAddCommGroup) (And (HEq coweightIsModule✝ coweightIsModule) (And (Eq index✝ index) (HEq pairing✝ pairing))))))))","decl":"/-- Objects in the category of root pairings. -/\nstructure RootPairingCat (R : Type u) [CommRing R] where\n  /-- The weight space of a root pairing. -/\n  weight : Type v\n  [weightIsAddCommGroup : AddCommGroup weight]\n  [weightIsModule : Module R weight]\n  /-- The coweight space of a root pairing. -/\n  coweight : Type v\n  [coweightIsAddCommGroup : AddCommGroup coweight]\n  [coweightIsModule : Module R coweight]\n  /-- The set that indexes roots and coroots. -/\n  index : Type v\n  /-- The root pairing structure. -/\n  pairing : RootPairing index R weight coweight\n\n"}
{"name":"RootPairingCat.mk.sizeOf_spec","module":"Mathlib.LinearAlgebra.RootSystem.RootPairingCat","initialProofState":"R : Type u\ninst✝¹ : CommRing R\ninst✝ : SizeOf R\nweight : Type v\nweightIsAddCommGroup : AddCommGroup weight\nweightIsModule : Module R weight\ncoweight : Type v\ncoweightIsAddCommGroup : AddCommGroup coweight\ncoweightIsModule : Module R coweight\nindex : Type v\npairing : RootPairing index R weight coweight\n⊢ Eq (SizeOf.sizeOf (RootPairingCat.mk weight coweight index pairing)) (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd 1 (SizeOf.sizeOf weight)) (SizeOf.sizeOf weightIsAddCommGroup)) (SizeOf.sizeOf weightIsModule)) (SizeOf.sizeOf coweight)) (SizeOf.sizeOf coweightIsAddCommGroup)) (SizeOf.sizeOf coweightIsModule)) (SizeOf.sizeOf index)) (SizeOf.sizeOf pairing))","decl":"/-- Objects in the category of root pairings. -/\nstructure RootPairingCat (R : Type u) [CommRing R] where\n  /-- The weight space of a root pairing. -/\n  weight : Type v\n  [weightIsAddCommGroup : AddCommGroup weight]\n  [weightIsModule : Module R weight]\n  /-- The coweight space of a root pairing. -/\n  coweight : Type v\n  [coweightIsAddCommGroup : AddCommGroup coweight]\n  [coweightIsModule : Module R coweight]\n  /-- The set that indexes roots and coroots. -/\n  index : Type v\n  /-- The root pairing structure. -/\n  pairing : RootPairing index R weight coweight\n\n"}
{"name":"RootPairingCat.mk.inj","module":"Mathlib.LinearAlgebra.RootSystem.RootPairingCat","initialProofState":"R : Type u\ninst✝ : CommRing R\nweight✝ : Type v\nweightIsAddCommGroup✝ : AddCommGroup weight✝\nweightIsModule✝ : Module R weight✝\ncoweight✝ : Type v\ncoweightIsAddCommGroup✝ : AddCommGroup coweight✝\ncoweightIsModule✝ : Module R coweight✝\nindex✝ : Type v\npairing✝ : RootPairing index✝ R weight✝ coweight✝\nweight : Type v\nweightIsAddCommGroup : AddCommGroup weight\nweightIsModule : Module R weight\ncoweight : Type v\ncoweightIsAddCommGroup : AddCommGroup coweight\ncoweightIsModule : Module R coweight\nindex : Type v\npairing : RootPairing index R weight coweight\nx✝ : Eq (RootPairingCat.mk weight✝ coweight✝ index✝ pairing✝) (RootPairingCat.mk weight coweight index pairing)\n⊢ And (Eq weight✝ weight) (And (HEq weightIsAddCommGroup✝ weightIsAddCommGroup) (And (HEq weightIsModule✝ weightIsModule) (And (Eq coweight✝ coweight) (And (HEq coweightIsAddCommGroup✝ coweightIsAddCommGroup) (And (HEq coweightIsModule✝ coweightIsModule) (And (Eq index✝ index) (HEq pairing✝ pairing)))))))","decl":"/-- Objects in the category of root pairings. -/\nstructure RootPairingCat (R : Type u) [CommRing R] where\n  /-- The weight space of a root pairing. -/\n  weight : Type v\n  [weightIsAddCommGroup : AddCommGroup weight]\n  [weightIsModule : Module R weight]\n  /-- The coweight space of a root pairing. -/\n  coweight : Type v\n  [coweightIsAddCommGroup : AddCommGroup coweight]\n  [coweightIsModule : Module R coweight]\n  /-- The set that indexes roots and coroots. -/\n  index : Type v\n  /-- The root pairing structure. -/\n  pairing : RootPairing index R weight coweight\n\n"}
