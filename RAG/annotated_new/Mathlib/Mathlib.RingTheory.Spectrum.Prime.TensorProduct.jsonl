{"name":"PrimeSpectrum.continuous_tensorProductTo","module":"Mathlib.RingTheory.Spectrum.Prime.TensorProduct","initialProofState":"R : Type u_1\nS : Type u_2\nT : Type u_3\ninst✝⁴ : CommRing R\ninst✝³ : CommRing S\ninst✝² : Algebra R S\ninst✝¹ : CommRing T\ninst✝ : Algebra R T\n⊢ Continuous (PrimeSpectrum.tensorProductTo R S T)","decl":"lemma PrimeSpectrum.continuous_tensorProductTo : Continuous (tensorProductTo R S T) :=\n  (comap _).2.prod_mk (comap _).2\n\n"}
{"name":"PrimeSpectrum.isEmbedding_tensorProductTo_of_surjectiveOnStalks_aux","module":"Mathlib.RingTheory.Spectrum.Prime.TensorProduct","initialProofState":"R : Type u_1\nS : Type u_2\nT : Type u_3\ninst✝⁴ : CommRing R\ninst✝³ : CommRing S\ninst✝² : Algebra R S\ninst✝¹ : CommRing T\ninst✝ : Algebra R T\nhRT : (algebraMap R T).SurjectiveOnStalks\np₁ p₂ : PrimeSpectrum (TensorProduct R S T)\nh : Eq (PrimeSpectrum.tensorProductTo R S T p₁) (PrimeSpectrum.tensorProductTo R S T p₂)\n⊢ LE.le p₁ p₂","decl":"lemma PrimeSpectrum.isEmbedding_tensorProductTo_of_surjectiveOnStalks_aux\n    (p₁ p₂ : PrimeSpectrum (S ⊗[R] T))\n    (h : tensorProductTo R S T p₁ = tensorProductTo R S T p₂) :\n    p₁ ≤ p₂ := by\n  let g : T →+* S ⊗[R] T := Algebra.TensorProduct.includeRight.toRingHom\n  intros x hxp₁\n  by_contra hxp₂\n  obtain ⟨t, r, a, ht, e⟩ := hRT.exists_mul_eq_tmul x\n    (p₂.asIdeal.comap g) inferInstance\n  have h₁ : a ⊗ₜ[R] t ∈ p₁.asIdeal := e ▸ p₁.asIdeal.mul_mem_left (1 ⊗ₜ[R] (r • t)) hxp₁\n  have h₂ : a ⊗ₜ[R] t ∉ p₂.asIdeal := e ▸ p₂.asIdeal.primeCompl.mul_mem ht hxp₂\n  rw [← mul_one a, ← one_mul t, ← Algebra.TensorProduct.tmul_mul_tmul] at h₁ h₂\n  have h₃ : t ∉ p₂.asIdeal.comap g := fun h ↦ h₂ (Ideal.mul_mem_left _ _ h)\n  have h₄ : a ∉ p₂.asIdeal.comap (algebraMap S (S ⊗[R] T)) :=\n    fun h ↦ h₂ (Ideal.mul_mem_right _ _ h)\n  replace h₃ : t ∉ p₁.asIdeal.comap g := by\n    rwa [show p₁.asIdeal.comap g = p₂.asIdeal.comap g from congr($h.2.1)]\n  replace h₄ : a ∉ p₁.asIdeal.comap (algebraMap S (S ⊗[R] T)) := by\n    rwa [show p₁.asIdeal.comap (algebraMap S (S ⊗[R] T)) = p₂.asIdeal.comap _ from congr($h.1.1)]\n  exact p₁.asIdeal.primeCompl.mul_mem h₄ h₃ h₁\n\n"}
{"name":"PrimeSpectrum.isEmbedding_tensorProductTo_of_surjectiveOnStalks","module":"Mathlib.RingTheory.Spectrum.Prime.TensorProduct","initialProofState":"R : Type u_1\nS : Type u_2\nT : Type u_3\ninst✝⁴ : CommRing R\ninst✝³ : CommRing S\ninst✝² : Algebra R S\ninst✝¹ : CommRing T\ninst✝ : Algebra R T\nhRT : (algebraMap R T).SurjectiveOnStalks\n⊢ Topology.IsEmbedding (PrimeSpectrum.tensorProductTo R S T)","decl":"lemma PrimeSpectrum.isEmbedding_tensorProductTo_of_surjectiveOnStalks :\n    IsEmbedding (tensorProductTo R S T) := by\n  refine ⟨?_, fun p₁ p₂ e ↦\n    (isEmbedding_tensorProductTo_of_surjectiveOnStalks_aux R S T hRT p₁ p₂ e).antisymm\n      (isEmbedding_tensorProductTo_of_surjectiveOnStalks_aux R S T hRT p₂ p₁ e.symm)⟩\n  let g : T →+* S ⊗[R] T := Algebra.TensorProduct.includeRight.toRingHom\n  refine ⟨(continuous_tensorProductTo ..).le_induced.antisymm (isBasis_basic_opens.le_iff.mpr ?_)⟩\n  rintro _ ⟨f, rfl⟩\n  rw [@isOpen_iff_forall_mem_open]\n  rintro J (hJ : f ∉ J.asIdeal)\n  obtain ⟨t, r, a, ht, e⟩ := hRT.exists_mul_eq_tmul f\n    (J.asIdeal.comap g) inferInstance\n  refine ⟨_, ?_, ⟨_, (basicOpen a).2.prod (basicOpen t).2, rfl⟩, ?_⟩\n  · rintro x ⟨hx₁ : a ⊗ₜ[R] (1 : T) ∉ x.asIdeal, hx₂ : (1 : S) ⊗ₜ[R] t ∉ x.asIdeal⟩\n      (hx₃ : f ∈ x.asIdeal)\n    apply x.asIdeal.primeCompl.mul_mem hx₁ hx₂\n    rw [Algebra.TensorProduct.tmul_mul_tmul, mul_one, one_mul, ← e]\n    exact x.asIdeal.mul_mem_left _ hx₃\n  · have : a ⊗ₜ[R] (1 : T) * (1 : S) ⊗ₜ[R] t ∉ J.asIdeal := by\n      rw [Algebra.TensorProduct.tmul_mul_tmul, mul_one, one_mul, ← e]\n      exact J.asIdeal.primeCompl.mul_mem ht hJ\n    rwa [J.isPrime.mul_mem_iff_mem_or_mem.not, not_or] at this\n\n"}
{"name":"PrimeSpectrum.embedding_tensorProductTo_of_surjectiveOnStalks","module":"Mathlib.RingTheory.Spectrum.Prime.TensorProduct","initialProofState":"R : Type u_1\nS : Type u_2\nT : Type u_3\ninst✝⁴ : CommRing R\ninst✝³ : CommRing S\ninst✝² : Algebra R S\ninst✝¹ : CommRing T\ninst✝ : Algebra R T\nhRT : (algebraMap R T).SurjectiveOnStalks\n⊢ Topology.IsEmbedding (PrimeSpectrum.tensorProductTo R S T)","decl":"@[deprecated (since := \"2024-10-26\")]\nalias PrimeSpectrum.embedding_tensorProductTo_of_surjectiveOnStalks :=\n  PrimeSpectrum.isEmbedding_tensorProductTo_of_surjectiveOnStalks\n"}
