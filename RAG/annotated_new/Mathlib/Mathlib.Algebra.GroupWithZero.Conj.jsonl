{"name":"GroupWithZero.isConj_iff₀","module":"Mathlib.Algebra.GroupWithZero.Conj","initialProofState":"α : Type u_1\ninst✝ : GroupWithZero α\na b : α\n⊢ Iff (IsConj a b) (Exists fun c => And (Ne c 0) (Eq (HMul.hMul (HMul.hMul c a) (Inv.inv c)) b))","decl":"@[simp] lemma isConj_iff₀ : IsConj a b ↔ ∃ c : α, c ≠ 0 ∧ c * a * c⁻¹ = b := by\n  rw [IsConj, Units.exists_iff_ne_zero (p := (SemiconjBy · a b))]\n  congr! 2 with c\n  exact and_congr_right (mul_inv_eq_iff_eq_mul₀ · |>.symm)\n\n"}
{"name":"GroupWithZero.conj_pow₀","module":"Mathlib.Algebra.GroupWithZero.Conj","initialProofState":"α : Type u_1\ninst✝ : GroupWithZero α\ns : Nat\na d : α\nha : Ne a 0\n⊢ Eq (HPow.hPow (HMul.hMul (HMul.hMul (Inv.inv a) d) a) s) (HMul.hMul (HMul.hMul (Inv.inv a) (HPow.hPow d s)) a)","decl":"lemma conj_pow₀ {s : ℕ} {a d : α} (ha : a ≠ 0) : (a⁻¹ * d * a) ^ s = a⁻¹ * d ^ s * a :=\n  let u : αˣ := ⟨a, a⁻¹, mul_inv_cancel₀ ha, inv_mul_cancel₀ ha⟩\n  Units.conj_pow' u d s\n\n"}
