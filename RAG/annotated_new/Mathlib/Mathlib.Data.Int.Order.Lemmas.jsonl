{"name":"Int.natAbs_eq_iff_mul_self_eq","module":"Mathlib.Data.Int.Order.Lemmas","initialProofState":"a b : Int\n⊢ Iff (Eq a.natAbs b.natAbs) (Eq (HMul.hMul a a) (HMul.hMul b b))","decl":"theorem natAbs_eq_iff_mul_self_eq {a b : ℤ} : a.natAbs = b.natAbs ↔ a * a = b * b := by\n  rw [← abs_eq_iff_mul_self_eq, abs_eq_natAbs, abs_eq_natAbs]\n  exact Int.natCast_inj.symm\n\n"}
{"name":"Int.natAbs_lt_iff_mul_self_lt","module":"Mathlib.Data.Int.Order.Lemmas","initialProofState":"a b : Int\n⊢ Iff (LT.lt a.natAbs b.natAbs) (LT.lt (HMul.hMul a a) (HMul.hMul b b))","decl":"theorem natAbs_lt_iff_mul_self_lt {a b : ℤ} : a.natAbs < b.natAbs ↔ a * a < b * b := by\n  rw [← abs_lt_iff_mul_self_lt, abs_eq_natAbs, abs_eq_natAbs]\n  exact Int.ofNat_lt.symm\n\n"}
{"name":"Int.natAbs_le_iff_mul_self_le","module":"Mathlib.Data.Int.Order.Lemmas","initialProofState":"a b : Int\n⊢ Iff (LE.le a.natAbs b.natAbs) (LE.le (HMul.hMul a a) (HMul.hMul b b))","decl":"theorem natAbs_le_iff_mul_self_le {a b : ℤ} : a.natAbs ≤ b.natAbs ↔ a * a ≤ b * b := by\n  rw [← abs_le_iff_mul_self_le, abs_eq_natAbs, abs_eq_natAbs]\n  exact Int.ofNat_le.symm\n\n"}
