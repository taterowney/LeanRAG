{"name":"MvPolynomial.comap_apply","module":"Mathlib.Algebra.MvPolynomial.Comap","initialProofState":"σ : Type u_1\nτ : Type u_2\nR : Type u_4\ninst✝ : CommSemiring R\nf : AlgHom R (MvPolynomial σ R) (MvPolynomial τ R)\nx : τ → R\ni : σ\n⊢ Eq (MvPolynomial.comap f x i) ((MvPolynomial.aeval x) (f (MvPolynomial.X i)))","decl":"@[simp]\ntheorem comap_apply (f : MvPolynomial σ R →ₐ[R] MvPolynomial τ R) (x : τ → R) (i : σ) :\n    comap f x i = aeval x (f (X i)) :=\n  rfl\n\n"}
{"name":"MvPolynomial.comap_id_apply","module":"Mathlib.Algebra.MvPolynomial.Comap","initialProofState":"σ : Type u_1\nR : Type u_4\ninst✝ : CommSemiring R\nx : σ → R\n⊢ Eq (MvPolynomial.comap (AlgHom.id R (MvPolynomial σ R)) x) x","decl":"@[simp]\ntheorem comap_id_apply (x : σ → R) : comap (AlgHom.id R (MvPolynomial σ R)) x = x := by\n  funext i\n  simp only [comap, AlgHom.id_apply, id, aeval_X]\n\n"}
{"name":"MvPolynomial.comap_id","module":"Mathlib.Algebra.MvPolynomial.Comap","initialProofState":"σ : Type u_1\nR : Type u_4\ninst✝ : CommSemiring R\n⊢ Eq (MvPolynomial.comap (AlgHom.id R (MvPolynomial σ R))) id","decl":"theorem comap_id : comap (AlgHom.id R (MvPolynomial σ R)) = id := by\n  funext x\n  exact comap_id_apply x\n\n"}
{"name":"MvPolynomial.comap_comp_apply","module":"Mathlib.Algebra.MvPolynomial.Comap","initialProofState":"σ : Type u_1\nτ : Type u_2\nυ : Type u_3\nR : Type u_4\ninst✝ : CommSemiring R\nf : AlgHom R (MvPolynomial σ R) (MvPolynomial τ R)\ng : AlgHom R (MvPolynomial τ R) (MvPolynomial υ R)\nx : υ → R\n⊢ Eq (MvPolynomial.comap (g.comp f) x) (MvPolynomial.comap f (MvPolynomial.comap g x))","decl":"theorem comap_comp_apply (f : MvPolynomial σ R →ₐ[R] MvPolynomial τ R)\n    (g : MvPolynomial τ R →ₐ[R] MvPolynomial υ R) (x : υ → R) :\n    comap (g.comp f) x = comap f (comap g x) := by\n  funext i\n  trans aeval x (aeval (fun i => g (X i)) (f (X i)))\n  · apply eval₂Hom_congr rfl rfl\n    rw [AlgHom.comp_apply]\n    suffices g = aeval fun i => g (X i) by rw [← this]\n    exact aeval_unique g\n  · simp only [comap, aeval_eq_eval₂Hom, map_eval₂Hom, AlgHom.comp_apply]\n    refine eval₂Hom_congr ?_ rfl rfl\n    ext r\n    apply aeval_C\n\n"}
{"name":"MvPolynomial.comap_comp","module":"Mathlib.Algebra.MvPolynomial.Comap","initialProofState":"σ : Type u_1\nτ : Type u_2\nυ : Type u_3\nR : Type u_4\ninst✝ : CommSemiring R\nf : AlgHom R (MvPolynomial σ R) (MvPolynomial τ R)\ng : AlgHom R (MvPolynomial τ R) (MvPolynomial υ R)\n⊢ Eq (MvPolynomial.comap (g.comp f)) (Function.comp (MvPolynomial.comap f) (MvPolynomial.comap g))","decl":"theorem comap_comp (f : MvPolynomial σ R →ₐ[R] MvPolynomial τ R)\n    (g : MvPolynomial τ R →ₐ[R] MvPolynomial υ R) : comap (g.comp f) = comap f ∘ comap g := by\n  funext x\n  exact comap_comp_apply _ _ _\n\n"}
{"name":"MvPolynomial.comap_eq_id_of_eq_id","module":"Mathlib.Algebra.MvPolynomial.Comap","initialProofState":"σ : Type u_1\nR : Type u_4\ninst✝ : CommSemiring R\nf : AlgHom R (MvPolynomial σ R) (MvPolynomial σ R)\nhf : ∀ (φ : MvPolynomial σ R), Eq (f φ) φ\nx : σ → R\n⊢ Eq (MvPolynomial.comap f x) x","decl":"theorem comap_eq_id_of_eq_id (f : MvPolynomial σ R →ₐ[R] MvPolynomial σ R) (hf : ∀ φ, f φ = φ)\n    (x : σ → R) : comap f x = x := by\n  convert comap_id_apply x\n  ext1 φ\n  simp [hf, AlgHom.id_apply]\n\n"}
{"name":"MvPolynomial.comap_rename","module":"Mathlib.Algebra.MvPolynomial.Comap","initialProofState":"σ : Type u_1\nτ : Type u_2\nR : Type u_4\ninst✝ : CommSemiring R\nf : σ → τ\nx : τ → R\n⊢ Eq (MvPolynomial.comap (MvPolynomial.rename f) x) (Function.comp x f)","decl":"theorem comap_rename (f : σ → τ) (x : τ → R) : comap (rename f) x = x ∘ f := by\n  funext\n  simp [rename_X, comap_apply, aeval_X]\n\n"}
{"name":"MvPolynomial.comapEquiv_coe","module":"Mathlib.Algebra.MvPolynomial.Comap","initialProofState":"σ : Type u_1\nτ : Type u_2\nR : Type u_4\ninst✝ : CommSemiring R\nf : AlgEquiv R (MvPolynomial σ R) (MvPolynomial τ R)\n⊢ Eq (⇑(MvPolynomial.comapEquiv f)) (MvPolynomial.comap ↑f)","decl":"@[simp]\ntheorem comapEquiv_coe (f : MvPolynomial σ R ≃ₐ[R] MvPolynomial τ R) :\n    (comapEquiv f : (τ → R) → σ → R) = comap f :=\n  rfl\n\n"}
{"name":"MvPolynomial.comapEquiv_symm_coe","module":"Mathlib.Algebra.MvPolynomial.Comap","initialProofState":"σ : Type u_1\nτ : Type u_2\nR : Type u_4\ninst✝ : CommSemiring R\nf : AlgEquiv R (MvPolynomial σ R) (MvPolynomial τ R)\n⊢ Eq (⇑(MvPolynomial.comapEquiv f).symm) (MvPolynomial.comap ↑f.symm)","decl":"@[simp]\ntheorem comapEquiv_symm_coe (f : MvPolynomial σ R ≃ₐ[R] MvPolynomial τ R) :\n    ((comapEquiv f).symm : (σ → R) → τ → R) = comap f.symm :=\n  rfl\n\n"}
