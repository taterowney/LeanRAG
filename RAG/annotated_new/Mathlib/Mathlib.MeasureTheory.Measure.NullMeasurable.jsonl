{"name":"MeasureTheory.NullMeasurableSpace.instSubsingleton","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\nh : Subsingleton α\n⊢ Subsingleton (MeasureTheory.NullMeasurableSpace α μ)","decl":"instance NullMeasurableSpace.instSubsingleton [h : Subsingleton α] :\n    Subsingleton (NullMeasurableSpace α μ) :=\n  h\n\n"}
{"name":"MeasurableSet.nullMeasurableSet","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set α\nh : MeasurableSet s\n⊢ MeasureTheory.NullMeasurableSet s μ","decl":"@[simp, aesop unsafe (rule_sets := [Measurable])]\ntheorem _root_.MeasurableSet.nullMeasurableSet (h : MeasurableSet s) : NullMeasurableSet s μ :=\n  h.eventuallyMeasurableSet\n\n"}
{"name":"MeasureTheory.nullMeasurableSet_empty","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\n⊢ MeasureTheory.NullMeasurableSet EmptyCollection.emptyCollection μ","decl":"theorem nullMeasurableSet_empty : NullMeasurableSet ∅ μ :=\n  MeasurableSet.empty\n\n"}
{"name":"MeasureTheory.nullMeasurableSet_univ","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\n⊢ MeasureTheory.NullMeasurableSet Set.univ μ","decl":"theorem nullMeasurableSet_univ : NullMeasurableSet univ μ :=\n  MeasurableSet.univ\n\n"}
{"name":"MeasureTheory.NullMeasurableSet.of_null","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set α\nh : Eq (μ s) 0\n⊢ MeasureTheory.NullMeasurableSet s μ","decl":"theorem of_null (h : μ s = 0) : NullMeasurableSet s μ :=\n  ⟨∅, MeasurableSet.empty, ae_eq_empty.2 h⟩\n\n"}
{"name":"MeasureTheory.NullMeasurableSet.compl","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set α\nh : MeasureTheory.NullMeasurableSet s μ\n⊢ MeasureTheory.NullMeasurableSet (HasCompl.compl s) μ","decl":"theorem compl (h : NullMeasurableSet s μ) : NullMeasurableSet sᶜ μ :=\n  MeasurableSet.compl h\n\n"}
{"name":"MeasureTheory.NullMeasurableSet.of_compl","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set α\nh : MeasureTheory.NullMeasurableSet (HasCompl.compl s) μ\n⊢ MeasureTheory.NullMeasurableSet s μ","decl":"theorem of_compl (h : NullMeasurableSet sᶜ μ) : NullMeasurableSet s μ :=\n  MeasurableSet.of_compl h\n\n"}
{"name":"MeasureTheory.NullMeasurableSet.compl_iff","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set α\n⊢ Iff (MeasureTheory.NullMeasurableSet (HasCompl.compl s) μ) (MeasureTheory.NullMeasurableSet s μ)","decl":"@[simp]\ntheorem compl_iff : NullMeasurableSet sᶜ μ ↔ NullMeasurableSet s μ :=\n  MeasurableSet.compl_iff\n\n"}
{"name":"MeasureTheory.NullMeasurableSet.of_subsingleton","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set α\ninst✝ : Subsingleton α\n⊢ MeasureTheory.NullMeasurableSet s μ","decl":"@[nontriviality]\ntheorem of_subsingleton [Subsingleton α] : NullMeasurableSet s μ :=\n  Subsingleton.measurableSet\n\n"}
{"name":"MeasureTheory.NullMeasurableSet.congr","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns t : Set α\nhs : MeasureTheory.NullMeasurableSet s μ\nh : (MeasureTheory.ae μ).EventuallyEq s t\n⊢ MeasureTheory.NullMeasurableSet t μ","decl":"protected theorem congr (hs : NullMeasurableSet s μ) (h : s =ᵐ[μ] t) : NullMeasurableSet t μ :=\n  EventuallyMeasurableSet.congr hs h.symm\n\n"}
{"name":"MeasureTheory.NullMeasurableSet.iUnion","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\nι : Sort u_5\ninst✝ : Countable ι\ns : ι → Set α\nh : ∀ (i : ι), MeasureTheory.NullMeasurableSet (s i) μ\n⊢ MeasureTheory.NullMeasurableSet (Set.iUnion fun i => s i) μ","decl":"@[measurability]\nprotected theorem iUnion {ι : Sort*} [Countable ι] {s : ι → Set α}\n    (h : ∀ i, NullMeasurableSet (s i) μ) : NullMeasurableSet (⋃ i, s i) μ :=\n  MeasurableSet.iUnion h\n\n"}
{"name":"MeasureTheory.NullMeasurableSet.biUnion","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"ι : Type u_1\nα : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf : ι → Set α\ns : Set ι\nhs : s.Countable\nh : ∀ (b : ι), Membership.mem s b → MeasureTheory.NullMeasurableSet (f b) μ\n⊢ MeasureTheory.NullMeasurableSet (Set.iUnion fun b => Set.iUnion fun h => f b) μ","decl":"protected theorem biUnion {f : ι → Set α} {s : Set ι} (hs : s.Countable)\n    (h : ∀ b ∈ s, NullMeasurableSet (f b) μ) : NullMeasurableSet (⋃ b ∈ s, f b) μ :=\n  MeasurableSet.biUnion hs h\n\n"}
{"name":"MeasureTheory.NullMeasurableSet.sUnion","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set (Set α)\nhs : s.Countable\nh : ∀ (t : Set α), Membership.mem s t → MeasureTheory.NullMeasurableSet t μ\n⊢ MeasureTheory.NullMeasurableSet s.sUnion μ","decl":"protected theorem sUnion {s : Set (Set α)} (hs : s.Countable) (h : ∀ t ∈ s, NullMeasurableSet t μ) :\n    NullMeasurableSet (⋃₀ s) μ := by\n  rw [sUnion_eq_biUnion]\n  exact MeasurableSet.biUnion hs h\n\n"}
{"name":"MeasureTheory.NullMeasurableSet.iInter","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\nι : Sort u_5\ninst✝ : Countable ι\nf : ι → Set α\nh : ∀ (i : ι), MeasureTheory.NullMeasurableSet (f i) μ\n⊢ MeasureTheory.NullMeasurableSet (Set.iInter fun i => f i) μ","decl":"@[measurability]\nprotected theorem iInter {ι : Sort*} [Countable ι] {f : ι → Set α}\n    (h : ∀ i, NullMeasurableSet (f i) μ) : NullMeasurableSet (⋂ i, f i) μ :=\n  MeasurableSet.iInter h\n\n"}
{"name":"MeasureTheory.NullMeasurableSet.biInter","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nβ : Type u_3\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf : β → Set α\ns : Set β\nhs : s.Countable\nh : ∀ (b : β), Membership.mem s b → MeasureTheory.NullMeasurableSet (f b) μ\n⊢ MeasureTheory.NullMeasurableSet (Set.iInter fun b => Set.iInter fun h => f b) μ","decl":"protected theorem biInter {f : β → Set α} {s : Set β} (hs : s.Countable)\n    (h : ∀ b ∈ s, NullMeasurableSet (f b) μ) : NullMeasurableSet (⋂ b ∈ s, f b) μ :=\n  MeasurableSet.biInter hs h\n\n"}
{"name":"MeasureTheory.NullMeasurableSet.sInter","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set (Set α)\nhs : s.Countable\nh : ∀ (t : Set α), Membership.mem s t → MeasureTheory.NullMeasurableSet t μ\n⊢ MeasureTheory.NullMeasurableSet s.sInter μ","decl":"protected theorem sInter {s : Set (Set α)} (hs : s.Countable) (h : ∀ t ∈ s, NullMeasurableSet t μ) :\n    NullMeasurableSet (⋂₀ s) μ :=\n  MeasurableSet.sInter hs h\n\n"}
{"name":"MeasureTheory.NullMeasurableSet.union","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns t : Set α\nhs : MeasureTheory.NullMeasurableSet s μ\nht : MeasureTheory.NullMeasurableSet t μ\n⊢ MeasureTheory.NullMeasurableSet (Union.union s t) μ","decl":"@[simp]\nprotected theorem union (hs : NullMeasurableSet s μ) (ht : NullMeasurableSet t μ) :\n    NullMeasurableSet (s ∪ t) μ :=\n  MeasurableSet.union hs ht\n\n"}
{"name":"MeasureTheory.NullMeasurableSet.union_null","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns t : Set α\nhs : MeasureTheory.NullMeasurableSet s μ\nht : Eq (μ t) 0\n⊢ MeasureTheory.NullMeasurableSet (Union.union s t) μ","decl":"protected theorem union_null (hs : NullMeasurableSet s μ) (ht : μ t = 0) :\n    NullMeasurableSet (s ∪ t) μ :=\n  hs.union (of_null ht)\n\n"}
{"name":"MeasureTheory.NullMeasurableSet.inter","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns t : Set α\nhs : MeasureTheory.NullMeasurableSet s μ\nht : MeasureTheory.NullMeasurableSet t μ\n⊢ MeasureTheory.NullMeasurableSet (Inter.inter s t) μ","decl":"@[simp]\nprotected theorem inter (hs : NullMeasurableSet s μ) (ht : NullMeasurableSet t μ) :\n    NullMeasurableSet (s ∩ t) μ :=\n  MeasurableSet.inter hs ht\n\n"}
{"name":"MeasureTheory.NullMeasurableSet.diff","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns t : Set α\nhs : MeasureTheory.NullMeasurableSet s μ\nht : MeasureTheory.NullMeasurableSet t μ\n⊢ MeasureTheory.NullMeasurableSet (SDiff.sdiff s t) μ","decl":"@[simp]\nprotected theorem diff (hs : NullMeasurableSet s μ) (ht : NullMeasurableSet t μ) :\n    NullMeasurableSet (s \\ t) μ :=\n  MeasurableSet.diff hs ht\n\n"}
{"name":"MeasureTheory.NullMeasurableSet.disjointed","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf : Nat → Set α\nh : ∀ (i : Nat), MeasureTheory.NullMeasurableSet (f i) μ\nn : Nat\n⊢ MeasureTheory.NullMeasurableSet (disjointed f n) μ","decl":"@[simp]\nprotected theorem disjointed {f : ℕ → Set α} (h : ∀ i, NullMeasurableSet (f i) μ) (n) :\n    NullMeasurableSet (disjointed f n) μ :=\n  MeasurableSet.disjointed h n\n\n"}
{"name":"MeasureTheory.NullMeasurableSet.const","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\np : Prop\n⊢ MeasureTheory.NullMeasurableSet (setOf fun _a => p) μ","decl":"protected theorem const (p : Prop) : NullMeasurableSet { _a : α | p } μ :=\n  MeasurableSet.const p\n\n"}
{"name":"MeasureTheory.NullMeasurableSet.instMeasurableSingletonClass","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ninst✝ : MeasurableSingletonClass α\n⊢ MeasurableSingletonClass (MeasureTheory.NullMeasurableSpace α μ)","decl":"instance instMeasurableSingletonClass [MeasurableSingletonClass α] :\n    MeasurableSingletonClass (NullMeasurableSpace α μ) :=\n  EventuallyMeasurableSpace.measurableSingleton (m := m0)\n\n"}
{"name":"MeasureTheory.NullMeasurableSet.insert","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set α\ninst✝ : MeasurableSingletonClass (MeasureTheory.NullMeasurableSpace α μ)\nhs : MeasureTheory.NullMeasurableSet s μ\na : α\n⊢ MeasureTheory.NullMeasurableSet (Insert.insert a s) μ","decl":"protected theorem insert [MeasurableSingletonClass (NullMeasurableSpace α μ)]\n    (hs : NullMeasurableSet s μ) (a : α) : NullMeasurableSet (insert a s) μ :=\n  MeasurableSet.insert hs a\n\n"}
{"name":"MeasureTheory.NullMeasurableSet.exists_measurable_superset_ae_eq","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set α\nh : MeasureTheory.NullMeasurableSet s μ\n⊢ Exists fun t => And (Superset t s) (And (MeasurableSet t) ((MeasureTheory.ae μ).EventuallyEq t s))","decl":"theorem exists_measurable_superset_ae_eq (h : NullMeasurableSet s μ) :\n    ∃ t ⊇ s, MeasurableSet t ∧ t =ᵐ[μ] s := by\n  rcases h with ⟨t, htm, hst⟩\n  refine ⟨t ∪ toMeasurable μ (s \\ t), ?_, htm.union (measurableSet_toMeasurable _ _), ?_⟩\n  · exact diff_subset_iff.1 (subset_toMeasurable _ _)\n  · have : toMeasurable μ (s \\ t) =ᵐ[μ] (∅ : Set α) := by simp [ae_le_set.1 hst.le]\n    simpa only [union_empty] using hst.symm.union this\n\n"}
{"name":"MeasureTheory.NullMeasurableSet.toMeasurable_ae_eq","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set α\nh : MeasureTheory.NullMeasurableSet s μ\n⊢ (MeasureTheory.ae μ).EventuallyEq (MeasureTheory.toMeasurable μ s) s","decl":"theorem toMeasurable_ae_eq (h : NullMeasurableSet s μ) : toMeasurable μ s =ᵐ[μ] s := by\n  rw [toMeasurable_def, dif_pos]\n  exact (exists_measurable_superset_ae_eq h).choose_spec.2.2\n\n"}
{"name":"MeasureTheory.NullMeasurableSet.compl_toMeasurable_compl_ae_eq","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set α\nh : MeasureTheory.NullMeasurableSet s μ\n⊢ (MeasureTheory.ae μ).EventuallyEq (HasCompl.compl (MeasureTheory.toMeasurable μ (HasCompl.compl s))) s","decl":"theorem compl_toMeasurable_compl_ae_eq (h : NullMeasurableSet s μ) : (toMeasurable μ sᶜ)ᶜ =ᵐ[μ] s :=\n  Iff.mpr ae_eq_set_compl <| toMeasurable_ae_eq h.compl\n\n"}
{"name":"MeasureTheory.NullMeasurableSet.exists_measurable_subset_ae_eq","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set α\nh : MeasureTheory.NullMeasurableSet s μ\n⊢ Exists fun t => And (HasSubset.Subset t s) (And (MeasurableSet t) ((MeasureTheory.ae μ).EventuallyEq t s))","decl":"theorem exists_measurable_subset_ae_eq (h : NullMeasurableSet s μ) :\n    ∃ t ⊆ s, MeasurableSet t ∧ t =ᵐ[μ] s :=\n  ⟨(toMeasurable μ sᶜ)ᶜ, compl_subset_comm.2 <| subset_toMeasurable _ _,\n    (measurableSet_toMeasurable _ _).compl, compl_toMeasurable_compl_ae_eq h⟩\n\n"}
{"name":"MeasureTheory.exists_subordinate_pairwise_disjoint","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"ι : Type u_1\nα : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ninst✝ : Countable ι\ns : ι → Set α\nh : ∀ (i : ι), MeasureTheory.NullMeasurableSet (s i) μ\nhd : Pairwise (Function.onFun (MeasureTheory.AEDisjoint μ) s)\n⊢ Exists fun t => And (∀ (i : ι), HasSubset.Subset (t i) (s i)) (And (∀ (i : ι), (MeasureTheory.ae μ).EventuallyEq (s i) (t i)) (And (∀ (i : ι), MeasurableSet (t i)) (Pairwise (Function.onFun Disjoint t))))","decl":"/-- If `sᵢ` is a countable family of (null) measurable pairwise `μ`-a.e. disjoint sets, then there\nexists a subordinate family `tᵢ ⊆ sᵢ` of measurable pairwise disjoint sets such that\n`tᵢ =ᵐ[μ] sᵢ`. -/\ntheorem exists_subordinate_pairwise_disjoint [Countable ι] {s : ι → Set α}\n    (h : ∀ i, NullMeasurableSet (s i) μ) (hd : Pairwise (AEDisjoint μ on s)) :\n    ∃ t : ι → Set α,\n      (∀ i, t i ⊆ s i) ∧\n        (∀ i, s i =ᵐ[μ] t i) ∧ (∀ i, MeasurableSet (t i)) ∧ Pairwise (Disjoint on t) := by\n  choose t ht_sub htm ht_eq using fun i => exists_measurable_subset_ae_eq (h i)\n  rcases exists_null_pairwise_disjoint_diff hd with ⟨u, hum, hu₀, hud⟩\n  exact\n    ⟨fun i => t i \\ u i, fun i => diff_subset.trans (ht_sub _), fun i =>\n      (ht_eq _).symm.trans (diff_null_ae_eq_self (hu₀ i)).symm, fun i => (htm i).diff (hum i),\n      hud.mono fun i j h =>\n        h.mono (diff_subset_diff_left (ht_sub i)) (diff_subset_diff_left (ht_sub j))⟩\n\n"}
{"name":"MeasureTheory.measure_iUnion","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"ι : Type u_1\nα : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ninst✝ : Countable ι\nf : ι → Set α\nhn : Pairwise (Function.onFun Disjoint f)\nh : ∀ (i : ι), MeasurableSet (f i)\n⊢ Eq (μ (Set.iUnion fun i => f i)) (tsum fun i => μ (f i))","decl":"theorem measure_iUnion {m0 : MeasurableSpace α} {μ : Measure α} [Countable ι] {f : ι → Set α}\n    (hn : Pairwise (Disjoint on f)) (h : ∀ i, MeasurableSet (f i)) :\n    μ (⋃ i, f i) = ∑' i, μ (f i) := by\n  rw [measure_eq_extend (MeasurableSet.iUnion h),\n    extend_iUnion MeasurableSet.empty _ MeasurableSet.iUnion _ hn h]\n  · simp [measure_eq_extend, h]\n  · exact μ.empty\n  · exact μ.m_iUnion\n\n"}
{"name":"MeasureTheory.measure_iUnion₀","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"ι : Type u_1\nα : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ninst✝ : Countable ι\nf : ι → Set α\nhd : Pairwise (Function.onFun (MeasureTheory.AEDisjoint μ) f)\nh : ∀ (i : ι), MeasureTheory.NullMeasurableSet (f i) μ\n⊢ Eq (μ (Set.iUnion fun i => f i)) (tsum fun i => μ (f i))","decl":"theorem measure_iUnion₀ [Countable ι] {f : ι → Set α} (hd : Pairwise (AEDisjoint μ on f))\n    (h : ∀ i, NullMeasurableSet (f i) μ) : μ (⋃ i, f i) = ∑' i, μ (f i) := by\n  rcases exists_subordinate_pairwise_disjoint h hd with ⟨t, _ht_sub, ht_eq, htm, htd⟩\n  calc\n    μ (⋃ i, f i) = μ (⋃ i, t i) := measure_congr (EventuallyEq.countable_iUnion ht_eq)\n    _ = ∑' i, μ (t i) := measure_iUnion htd htm\n    _ = ∑' i, μ (f i) := tsum_congr fun i => measure_congr (ht_eq _).symm\n\n"}
{"name":"MeasureTheory.measure_union₀_aux","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns t : Set α\nhs : MeasureTheory.NullMeasurableSet s μ\nht : MeasureTheory.NullMeasurableSet t μ\nhd : MeasureTheory.AEDisjoint μ s t\n⊢ Eq (μ (Union.union s t)) (HAdd.hAdd (μ s) (μ t))","decl":"theorem measure_union₀_aux (hs : NullMeasurableSet s μ) (ht : NullMeasurableSet t μ)\n    (hd : AEDisjoint μ s t) : μ (s ∪ t) = μ s + μ t := by\n  rw [union_eq_iUnion, measure_iUnion₀, tsum_fintype, Fintype.sum_bool, cond, cond]\n  exacts [(pairwise_on_bool AEDisjoint.symmetric).2 hd, fun b => Bool.casesOn b ht hs]\n\n"}
{"name":"MeasureTheory.measure_inter_add_diff₀","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\nt s : Set α\nht : MeasureTheory.NullMeasurableSet t μ\n⊢ Eq (HAdd.hAdd (μ (Inter.inter s t)) (μ (SDiff.sdiff s t))) (μ s)","decl":"/-- A null measurable set `t` is Carathéodory measurable: for any `s`, we have\n`μ (s ∩ t) + μ (s \\ t) = μ s`. -/\ntheorem measure_inter_add_diff₀ (s : Set α) (ht : NullMeasurableSet t μ) :\n    μ (s ∩ t) + μ (s \\ t) = μ s := by\n  refine le_antisymm ?_ (measure_le_inter_add_diff _ _ _)\n  rcases exists_measurable_superset μ s with ⟨s', hsub, hs'm, hs'⟩\n  replace hs'm : NullMeasurableSet s' μ := hs'm.nullMeasurableSet\n  calc\n    μ (s ∩ t) + μ (s \\ t) ≤ μ (s' ∩ t) + μ (s' \\ t) := by gcongr\n    _ = μ (s' ∩ t ∪ s' \\ t) :=\n      (measure_union₀_aux (hs'm.inter ht) (hs'm.diff ht) <|\n          (@disjoint_inf_sdiff _ s' t _).aedisjoint).symm\n    _ = μ s' := congr_arg μ (inter_union_diff _ _)\n    _ = μ s := hs'\n\n"}
{"name":"MeasureTheory.measure_diff_symm","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns t : Set α\nhs : MeasureTheory.NullMeasurableSet s μ\nht : MeasureTheory.NullMeasurableSet t μ\nh : Eq (μ s) (μ t)\nhfin : Ne (μ (Inter.inter s t)) Top.top\n⊢ Eq (μ (SDiff.sdiff s t)) (μ (SDiff.sdiff t s))","decl":"/-- If `s` and `t` are null measurable sets of equal measure\nand their intersection has finite measure,\nthen `s \\ t` and `t \\ s` have equal measures too. -/\ntheorem measure_diff_symm (hs : NullMeasurableSet s μ) (ht : NullMeasurableSet t μ)\n    (h : μ s = μ t) (hfin : μ (s ∩ t) ≠ ∞) : μ (s \\ t) = μ (t \\ s) := by\n  rw [← ENNReal.add_right_inj hfin, measure_inter_add_diff₀ _ ht, inter_comm,\n    measure_inter_add_diff₀ _ hs, h]\n\n"}
{"name":"MeasureTheory.measure_union_add_inter₀","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\nt s : Set α\nht : MeasureTheory.NullMeasurableSet t μ\n⊢ Eq (HAdd.hAdd (μ (Union.union s t)) (μ (Inter.inter s t))) (HAdd.hAdd (μ s) (μ t))","decl":"theorem measure_union_add_inter₀ (s : Set α) (ht : NullMeasurableSet t μ) :\n    μ (s ∪ t) + μ (s ∩ t) = μ s + μ t := by\n  rw [← measure_inter_add_diff₀ (s ∪ t) ht, union_inter_cancel_right, union_diff_right, ←\n    measure_inter_add_diff₀ s ht, add_comm, ← add_assoc, add_right_comm]\n\n"}
{"name":"MeasureTheory.measure_union_add_inter₀'","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set α\nhs : MeasureTheory.NullMeasurableSet s μ\nt : Set α\n⊢ Eq (HAdd.hAdd (μ (Union.union s t)) (μ (Inter.inter s t))) (HAdd.hAdd (μ s) (μ t))","decl":"theorem measure_union_add_inter₀' (hs : NullMeasurableSet s μ) (t : Set α) :\n    μ (s ∪ t) + μ (s ∩ t) = μ s + μ t := by\n  rw [union_comm, inter_comm, measure_union_add_inter₀ t hs, add_comm]\n\n"}
{"name":"MeasureTheory.measure_union₀","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns t : Set α\nht : MeasureTheory.NullMeasurableSet t μ\nhd : MeasureTheory.AEDisjoint μ s t\n⊢ Eq (μ (Union.union s t)) (HAdd.hAdd (μ s) (μ t))","decl":"theorem measure_union₀ (ht : NullMeasurableSet t μ) (hd : AEDisjoint μ s t) :\n    μ (s ∪ t) = μ s + μ t := by rw [← measure_union_add_inter₀ s ht, hd, add_zero]\n\n"}
{"name":"MeasureTheory.measure_union₀'","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns t : Set α\nhs : MeasureTheory.NullMeasurableSet s μ\nhd : MeasureTheory.AEDisjoint μ s t\n⊢ Eq (μ (Union.union s t)) (HAdd.hAdd (μ s) (μ t))","decl":"theorem measure_union₀' (hs : NullMeasurableSet s μ) (hd : AEDisjoint μ s t) :\n    μ (s ∪ t) = μ s + μ t := by rw [union_comm, measure_union₀ hs (AEDisjoint.symm hd), add_comm]\n\n"}
{"name":"MeasureTheory.measure_add_measure_compl₀","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set α\nhs : MeasureTheory.NullMeasurableSet s μ\n⊢ Eq (HAdd.hAdd (μ s) (μ (HasCompl.compl s))) (μ Set.univ)","decl":"theorem measure_add_measure_compl₀ {s : Set α} (hs : NullMeasurableSet s μ) :\n    μ s + μ sᶜ = μ univ := by rw [← measure_union₀' hs aedisjoint_compl_right, union_compl_self]\n\n"}
{"name":"MeasureTheory.measure_of_measure_compl_eq_zero","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set α\nhs : Eq (μ (HasCompl.compl s)) 0\n⊢ Eq (μ s) (μ Set.univ)","decl":"lemma measure_of_measure_compl_eq_zero (hs : μ sᶜ = 0) : μ s = μ Set.univ := by\n  simpa [hs] using measure_add_measure_compl₀ <| .of_compl <| .of_null hs\n\n"}
{"name":"MeasureTheory.nullMeasurableSet_singleton","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ninst✝ : MeasurableSingletonClass (MeasureTheory.NullMeasurableSpace α μ)\nx : α\n⊢ MeasureTheory.NullMeasurableSet (Singleton.singleton x) μ","decl":"theorem nullMeasurableSet_singleton (x : α) : NullMeasurableSet {x} μ :=\n  @measurableSet_singleton _ _ _ _\n\n"}
{"name":"MeasureTheory.nullMeasurableSet_insert","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ninst✝ : MeasurableSingletonClass (MeasureTheory.NullMeasurableSpace α μ)\na : α\ns : Set α\n⊢ Iff (MeasureTheory.NullMeasurableSet (Insert.insert a s) μ) (MeasureTheory.NullMeasurableSet s μ)","decl":"@[simp]\ntheorem nullMeasurableSet_insert {a : α} {s : Set α} :\n    NullMeasurableSet (insert a s) μ ↔ NullMeasurableSet s μ :=\n  measurableSet_insert\n\n"}
{"name":"MeasureTheory.nullMeasurableSet_eq","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ninst✝ : MeasurableSingletonClass (MeasureTheory.NullMeasurableSpace α μ)\na : α\n⊢ MeasureTheory.NullMeasurableSet (setOf fun x => Eq x a) μ","decl":"theorem nullMeasurableSet_eq {a : α} : NullMeasurableSet { x | x = a } μ :=\n  nullMeasurableSet_singleton a\n\n"}
{"name":"Set.Finite.nullMeasurableSet","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set α\ninst✝ : MeasurableSingletonClass (MeasureTheory.NullMeasurableSpace α μ)\nhs : s.Finite\n⊢ MeasureTheory.NullMeasurableSet s μ","decl":"protected theorem _root_.Set.Finite.nullMeasurableSet (hs : s.Finite) : NullMeasurableSet s μ :=\n  Finite.measurableSet hs\n\n"}
{"name":"Finset.nullMeasurableSet","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ninst✝ : MeasurableSingletonClass (MeasureTheory.NullMeasurableSpace α μ)\ns : Finset α\n⊢ MeasureTheory.NullMeasurableSet (↑s) μ","decl":"protected theorem _root_.Finset.nullMeasurableSet (s : Finset α) : NullMeasurableSet (↑s) μ := by\n  apply Finset.measurableSet\n\n"}
{"name":"Set.Finite.nullMeasurableSet_biUnion","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"ι : Type u_1\nα : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf : ι → Set α\ns : Set ι\nhs : s.Finite\nh : ∀ (b : ι), Membership.mem s b → MeasureTheory.NullMeasurableSet (f b) μ\n⊢ MeasureTheory.NullMeasurableSet (Set.iUnion fun b => Set.iUnion fun h => f b) μ","decl":"theorem _root_.Set.Finite.nullMeasurableSet_biUnion {f : ι → Set α} {s : Set ι} (hs : s.Finite)\n    (h : ∀ b ∈ s, NullMeasurableSet (f b) μ) : NullMeasurableSet (⋃ b ∈ s, f b) μ :=\n  Finite.measurableSet_biUnion hs h\n\n"}
{"name":"Finset.nullMeasurableSet_biUnion","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"ι : Type u_1\nα : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf : ι → Set α\ns : Finset ι\nh : ∀ (b : ι), Membership.mem s b → MeasureTheory.NullMeasurableSet (f b) μ\n⊢ MeasureTheory.NullMeasurableSet (Set.iUnion fun b => Set.iUnion fun h => f b) μ","decl":"theorem _root_.Finset.nullMeasurableSet_biUnion {f : ι → Set α} (s : Finset ι)\n    (h : ∀ b ∈ s, NullMeasurableSet (f b) μ) : NullMeasurableSet (⋃ b ∈ s, f b) μ :=\n  Finset.measurableSet_biUnion s h\n\n"}
{"name":"Set.Finite.nullMeasurableSet_sUnion","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set (Set α)\nhs : s.Finite\nh : ∀ (t : Set α), Membership.mem s t → MeasureTheory.NullMeasurableSet t μ\n⊢ MeasureTheory.NullMeasurableSet s.sUnion μ","decl":"theorem _root_.Set.Finite.nullMeasurableSet_sUnion {s : Set (Set α)} (hs : s.Finite)\n    (h : ∀ t ∈ s, NullMeasurableSet t μ) : NullMeasurableSet (⋃₀ s) μ :=\n  Finite.measurableSet_sUnion hs h\n\n"}
{"name":"Set.Finite.nullMeasurableSet_biInter","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"ι : Type u_1\nα : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf : ι → Set α\ns : Set ι\nhs : s.Finite\nh : ∀ (b : ι), Membership.mem s b → MeasureTheory.NullMeasurableSet (f b) μ\n⊢ MeasureTheory.NullMeasurableSet (Set.iInter fun b => Set.iInter fun h => f b) μ","decl":"theorem _root_.Set.Finite.nullMeasurableSet_biInter {f : ι → Set α} {s : Set ι} (hs : s.Finite)\n    (h : ∀ b ∈ s, NullMeasurableSet (f b) μ) : NullMeasurableSet (⋂ b ∈ s, f b) μ :=\n  Finite.measurableSet_biInter hs h\n\n"}
{"name":"Finset.nullMeasurableSet_biInter","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"ι : Type u_1\nα : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf : ι → Set α\ns : Finset ι\nh : ∀ (b : ι), Membership.mem s b → MeasureTheory.NullMeasurableSet (f b) μ\n⊢ MeasureTheory.NullMeasurableSet (Set.iInter fun b => Set.iInter fun h => f b) μ","decl":"theorem _root_.Finset.nullMeasurableSet_biInter {f : ι → Set α} (s : Finset ι)\n    (h : ∀ b ∈ s, NullMeasurableSet (f b) μ) : NullMeasurableSet (⋂ b ∈ s, f b) μ :=\n  s.finite_toSet.nullMeasurableSet_biInter h\n\n"}
{"name":"Set.Finite.nullMeasurableSet_sInter","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set (Set α)\nhs : s.Finite\nh : ∀ (t : Set α), Membership.mem s t → MeasureTheory.NullMeasurableSet t μ\n⊢ MeasureTheory.NullMeasurableSet s.sInter μ","decl":"theorem _root_.Set.Finite.nullMeasurableSet_sInter {s : Set (Set α)} (hs : s.Finite)\n    (h : ∀ t ∈ s, NullMeasurableSet t μ) : NullMeasurableSet (⋂₀ s) μ :=\n  NullMeasurableSet.sInter (Finite.countable hs) h\n\n"}
{"name":"MeasureTheory.nullMeasurableSet_toMeasurable","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set α\n⊢ MeasureTheory.NullMeasurableSet (MeasureTheory.toMeasurable μ s) μ","decl":"theorem nullMeasurableSet_toMeasurable : NullMeasurableSet (toMeasurable μ s) μ :=\n  (measurableSet_toMeasurable _ _).nullMeasurableSet\n\n"}
{"name":"MeasureTheory.measure_preimage_fst_singleton_eq_tsum","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nβ : Type u_3\nm0 : MeasurableSpace α\ninst✝² : MeasurableSingletonClass α\nmβ : MeasurableSpace β\ninst✝¹ : MeasurableSingletonClass β\ninst✝ : Countable β\nμ : MeasureTheory.Measure (Prod α β)\nx : α\n⊢ Eq (μ (Set.preimage Prod.fst (Singleton.singleton x))) (tsum fun y => μ (Singleton.singleton { fst := x, snd := y }))","decl":"lemma measure_preimage_fst_singleton_eq_tsum [Countable β] (μ : Measure (α × β)) (x : α) :\n    μ (Prod.fst ⁻¹' {x}) = ∑' y, μ {(x, y)} := by\n  rw [← measure_iUnion (by simp [Pairwise]) fun _ ↦ .singleton _, iUnion_singleton_eq_range,\n    preimage_fst_singleton_eq_range]\n\n"}
{"name":"MeasureTheory.measure_preimage_snd_singleton_eq_tsum","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nβ : Type u_3\nm0 : MeasurableSpace α\ninst✝² : MeasurableSingletonClass α\nmβ : MeasurableSpace β\ninst✝¹ : MeasurableSingletonClass β\ninst✝ : Countable α\nμ : MeasureTheory.Measure (Prod α β)\ny : β\n⊢ Eq (μ (Set.preimage Prod.snd (Singleton.singleton y))) (tsum fun x => μ (Singleton.singleton { fst := x, snd := y }))","decl":"lemma measure_preimage_snd_singleton_eq_tsum [Countable α] (μ : Measure (α × β)) (y : β) :\n    μ (Prod.snd ⁻¹' {y}) = ∑' x, μ {(x, y)} := by\n  have : Prod.snd ⁻¹' {y} = ⋃ x : α, {(x, y)} := by ext y; simp [Prod.ext_iff, eq_comm]\n  rw [this, measure_iUnion] <;> simp [Pairwise]\n\n"}
{"name":"MeasureTheory.measure_preimage_fst_singleton_eq_sum","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nβ : Type u_3\nm0 : MeasurableSpace α\ninst✝² : MeasurableSingletonClass α\nmβ : MeasurableSpace β\ninst✝¹ : MeasurableSingletonClass β\ninst✝ : Fintype β\nμ : MeasureTheory.Measure (Prod α β)\nx : α\n⊢ Eq (μ (Set.preimage Prod.fst (Singleton.singleton x))) (Finset.univ.sum fun y => μ (Singleton.singleton { fst := x, snd := y }))","decl":"lemma measure_preimage_fst_singleton_eq_sum [Fintype β] (μ : Measure (α × β)) (x : α) :\n    μ (Prod.fst ⁻¹' {x}) = ∑ y, μ {(x, y)} := by\n  rw [measure_preimage_fst_singleton_eq_tsum μ x, tsum_fintype]\n\n"}
{"name":"MeasureTheory.measure_preimage_snd_singleton_eq_sum","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nβ : Type u_3\nm0 : MeasurableSpace α\ninst✝² : MeasurableSingletonClass α\nmβ : MeasurableSpace β\ninst✝¹ : MeasurableSingletonClass β\ninst✝ : Fintype α\nμ : MeasureTheory.Measure (Prod α β)\ny : β\n⊢ Eq (μ (Set.preimage Prod.snd (Singleton.singleton y))) (Finset.univ.sum fun x => μ (Singleton.singleton { fst := x, snd := y }))","decl":"lemma measure_preimage_snd_singleton_eq_sum [Fintype α] (μ : Measure (α × β)) (y : β) :\n    μ (Prod.snd ⁻¹' {y}) = ∑ x, μ {(x, y)} := by\n  rw [measure_preimage_snd_singleton_eq_tsum μ y, tsum_fintype]\n\n"}
{"name":"Measurable.nullMeasurable","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nβ : Type u_3\ninst✝¹ : MeasurableSpace α\ninst✝ : MeasurableSpace β\nf : α → β\nμ : MeasureTheory.Measure α\nh : Measurable f\n⊢ MeasureTheory.NullMeasurable f μ","decl":"protected theorem _root_.Measurable.nullMeasurable (h : Measurable f) : NullMeasurable f μ :=\n  h.eventuallyMeasurable\n\n"}
{"name":"MeasureTheory.NullMeasurable.measurable'","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nβ : Type u_3\ninst✝¹ : MeasurableSpace α\ninst✝ : MeasurableSpace β\nf : α → β\nμ : MeasureTheory.Measure α\nh : MeasureTheory.NullMeasurable f μ\n⊢ Measurable f","decl":"protected theorem NullMeasurable.measurable' (h : NullMeasurable f μ) :\n    @Measurable (NullMeasurableSpace α μ) β _ _ f :=\n  h\n\n"}
{"name":"MeasureTheory.Measurable.comp_nullMeasurable","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nβ : Type u_3\nγ : Type u_4\ninst✝² : MeasurableSpace α\ninst✝¹ : MeasurableSpace β\ninst✝ : MeasurableSpace γ\nf : α → β\nμ : MeasureTheory.Measure α\ng : β → γ\nhg : Measurable g\nhf : MeasureTheory.NullMeasurable f μ\n⊢ MeasureTheory.NullMeasurable (Function.comp g f) μ","decl":"theorem Measurable.comp_nullMeasurable {g : β → γ} (hg : Measurable g) (hf : NullMeasurable f μ) :\n    NullMeasurable (g ∘ f) μ :=\n  hg.comp_eventuallyMeasurable hf\n\n"}
{"name":"MeasureTheory.NullMeasurable.congr","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nβ : Type u_3\ninst✝¹ : MeasurableSpace α\ninst✝ : MeasurableSpace β\nf : α → β\nμ : MeasureTheory.Measure α\ng : α → β\nhf : MeasureTheory.NullMeasurable f μ\nhg : (MeasureTheory.ae μ).EventuallyEq f g\n⊢ MeasureTheory.NullMeasurable g μ","decl":"theorem NullMeasurable.congr {g : α → β} (hf : NullMeasurable f μ) (hg : f =ᵐ[μ] g) :\n    NullMeasurable g μ :=\n  EventuallyMeasurable.congr hf hg.symm\n\n"}
{"name":"MeasureTheory.Measure.IsComplete.out'","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nx✝ : MeasurableSpace α\nμ : MeasureTheory.Measure α\nself : μ.IsComplete\ns : Set α\na✝ : Eq (μ s) 0\n⊢ MeasurableSet s","decl":"/-- A measure is complete if every null set is also measurable.\n  A null set is a subset of a measurable set with measure `0`.\n  Since every measure is defined as a special case of an outer measure, we can more simply state\n  that a set `s` is null if `μ s = 0`. -/\nclass Measure.IsComplete {_ : MeasurableSpace α} (μ : Measure α) : Prop where\n  out' : ∀ s, μ s = 0 → MeasurableSet s\n\n"}
{"name":"MeasureTheory.Measure.isComplete_iff","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\n⊢ Iff μ.IsComplete (∀ (s : Set α), Eq (μ s) 0 → MeasurableSet s)","decl":"theorem Measure.isComplete_iff : μ.IsComplete ↔ ∀ s, μ s = 0 → MeasurableSet s :=\n  ⟨fun h => h.1, fun h => ⟨h⟩⟩\n\n"}
{"name":"MeasureTheory.Measure.IsComplete.out","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\nh : μ.IsComplete\ns : Set α\na✝ : Eq (μ s) 0\n⊢ MeasurableSet s","decl":"theorem Measure.IsComplete.out (h : μ.IsComplete) : ∀ s, μ s = 0 → MeasurableSet s :=\n  h.1\n\n"}
{"name":"MeasureTheory.measurableSet_of_null","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set α\ninst✝ : μ.IsComplete\nhs : Eq (μ s) 0\n⊢ MeasurableSet s","decl":"theorem measurableSet_of_null [μ.IsComplete] (hs : μ s = 0) : MeasurableSet s :=\n  MeasureTheory.Measure.IsComplete.out' s hs\n\n"}
{"name":"MeasureTheory.NullMeasurableSet.measurable_of_complete","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set α\nhs : MeasureTheory.NullMeasurableSet s μ\ninst✝ : μ.IsComplete\n⊢ MeasurableSet s","decl":"theorem NullMeasurableSet.measurable_of_complete (hs : NullMeasurableSet s μ) [μ.IsComplete] :\n    MeasurableSet s :=\n  diff_diff_cancel_left (subset_toMeasurable μ s) ▸\n    (measurableSet_toMeasurable _ _).diff\n      (measurableSet_of_null (ae_le_set.1 <|\n        EventuallyEq.le (NullMeasurableSet.toMeasurable_ae_eq hs)))\n\n"}
{"name":"MeasureTheory.NullMeasurable.measurable_of_complete","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nβ : Type u_3\nm0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ninst✝ : μ.IsComplete\n_m1 : MeasurableSpace β\nf : α → β\nhf : MeasureTheory.NullMeasurable f μ\n⊢ Measurable f","decl":"theorem NullMeasurable.measurable_of_complete [μ.IsComplete] {_m1 : MeasurableSpace β} {f : α → β}\n    (hf : NullMeasurable f μ) : Measurable f := fun _s hs => (hf hs).measurable_of_complete\n\n"}
{"name":"Measurable.congr_ae","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_5\nβ : Type u_6\ninst✝¹ : MeasurableSpace α\ninst✝ : MeasurableSpace β\nμ : MeasureTheory.Measure α\n_hμ : μ.IsComplete\nf g : α → β\nhf : Measurable f\nhfg : (MeasureTheory.ae μ).EventuallyEq f g\n⊢ Measurable g","decl":"theorem _root_.Measurable.congr_ae {α β} [MeasurableSpace α] [MeasurableSpace β] {μ : Measure α}\n    [_hμ : μ.IsComplete] {f g : α → β} (hf : Measurable f) (hfg : f =ᵐ[μ] g) : Measurable g :=\n  NullMeasurable.measurable_of_complete (NullMeasurable.congr hf.nullMeasurable hfg)\n\n"}
{"name":"MeasureTheory.Measure.completion.isComplete","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\n_m : MeasurableSpace α\nμ : MeasureTheory.Measure α\n⊢ μ.completion.IsComplete","decl":"instance completion.isComplete {_m : MeasurableSpace α} (μ : Measure α) : μ.completion.IsComplete :=\n  ⟨fun _z hz => NullMeasurableSet.of_null hz⟩\n\n"}
{"name":"MeasureTheory.Measure.coe_completion","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nx✝ : MeasurableSpace α\nμ : MeasureTheory.Measure α\n⊢ Eq ⇑μ.completion ⇑μ","decl":"@[simp]\ntheorem coe_completion {_ : MeasurableSpace α} (μ : Measure α) : ⇑μ.completion = μ :=\n  rfl\n\n"}
{"name":"MeasureTheory.Measure.completion_apply","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nx✝ : MeasurableSpace α\nμ : MeasureTheory.Measure α\ns : Set α\n⊢ Eq (μ.completion s) (μ s)","decl":"theorem completion_apply {_ : MeasurableSpace α} (μ : Measure α) (s : Set α) :\n    μ.completion s = μ s :=\n  rfl\n\n"}
{"name":"MeasureTheory.Measure.ae_completion","module":"Mathlib.MeasureTheory.Measure.NullMeasurable","initialProofState":"α : Type u_2\nx✝ : MeasurableSpace α\nμ : MeasureTheory.Measure α\n⊢ Eq (MeasureTheory.ae μ.completion) (MeasureTheory.ae μ)","decl":"@[simp]\ntheorem ae_completion {_ : MeasurableSpace α} (μ : Measure α) : ae μ.completion = ae μ := rfl\n\n"}
