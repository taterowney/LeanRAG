{"name":"AffineMap.hasStrictDerivAt","module":"Mathlib.Analysis.Calculus.Deriv.AffineMap","initialProofState":"𝕜 : Type u_1\ninst✝² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\nf : AffineMap 𝕜 𝕜 E\nx : 𝕜\n⊢ HasStrictDerivAt (⇑f) (f.linear 1) x","decl":"theorem hasStrictDerivAt : HasStrictDerivAt f (f.linear 1) x := by\n  rw [f.decomp]\n  exact f.linear.hasStrictDerivAt.add_const (f 0)\n\n"}
{"name":"AffineMap.hasDerivAtFilter","module":"Mathlib.Analysis.Calculus.Deriv.AffineMap","initialProofState":"𝕜 : Type u_1\ninst✝² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\nf : AffineMap 𝕜 𝕜 E\nL : Filter 𝕜\nx : 𝕜\n⊢ HasDerivAtFilter (⇑f) (f.linear 1) x L","decl":"theorem hasDerivAtFilter : HasDerivAtFilter f (f.linear 1) x L := by\n  rw [f.decomp]\n  exact f.linear.hasDerivAtFilter.add_const (f 0)\n\n"}
{"name":"AffineMap.hasDerivWithinAt","module":"Mathlib.Analysis.Calculus.Deriv.AffineMap","initialProofState":"𝕜 : Type u_1\ninst✝² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\nf : AffineMap 𝕜 𝕜 E\ns : Set 𝕜\nx : 𝕜\n⊢ HasDerivWithinAt (⇑f) (f.linear 1) s x","decl":"theorem hasDerivWithinAt : HasDerivWithinAt f (f.linear 1) s x := f.hasDerivAtFilter\n"}
{"name":"AffineMap.hasDerivAt","module":"Mathlib.Analysis.Calculus.Deriv.AffineMap","initialProofState":"𝕜 : Type u_1\ninst✝² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\nf : AffineMap 𝕜 𝕜 E\nx : 𝕜\n⊢ HasDerivAt (⇑f) (f.linear 1) x","decl":"theorem hasDerivAt : HasDerivAt f (f.linear 1) x := f.hasDerivAtFilter\n\n"}
{"name":"AffineMap.derivWithin","module":"Mathlib.Analysis.Calculus.Deriv.AffineMap","initialProofState":"𝕜 : Type u_1\ninst✝² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\nf : AffineMap 𝕜 𝕜 E\ns : Set 𝕜\nx : 𝕜\nhs : UniqueDiffWithinAt 𝕜 s x\n⊢ Eq (derivWithin (⇑f) s x) (f.linear 1)","decl":"protected theorem derivWithin (hs : UniqueDiffWithinAt 𝕜 s x) :\n    derivWithin f s x = f.linear 1 :=\n  f.hasDerivWithinAt.derivWithin hs\n\n"}
{"name":"AffineMap.deriv","module":"Mathlib.Analysis.Calculus.Deriv.AffineMap","initialProofState":"𝕜 : Type u_1\ninst✝² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\nf : AffineMap 𝕜 𝕜 E\nx : 𝕜\n⊢ Eq (deriv (⇑f) x) (f.linear 1)","decl":"@[simp] protected theorem deriv : deriv f x = f.linear 1 := f.hasDerivAt.deriv\n\n"}
{"name":"AffineMap.differentiableAt","module":"Mathlib.Analysis.Calculus.Deriv.AffineMap","initialProofState":"𝕜 : Type u_1\ninst✝² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\nf : AffineMap 𝕜 𝕜 E\nx : 𝕜\n⊢ DifferentiableAt 𝕜 (⇑f) x","decl":"protected theorem differentiableAt : DifferentiableAt 𝕜 f x := f.hasDerivAt.differentiableAt\n"}
{"name":"AffineMap.differentiable","module":"Mathlib.Analysis.Calculus.Deriv.AffineMap","initialProofState":"𝕜 : Type u_1\ninst✝² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\nf : AffineMap 𝕜 𝕜 E\n⊢ Differentiable 𝕜 ⇑f","decl":"protected theorem differentiable : Differentiable 𝕜 f := fun _ ↦ f.differentiableAt\n\n"}
{"name":"AffineMap.differentiableWithinAt","module":"Mathlib.Analysis.Calculus.Deriv.AffineMap","initialProofState":"𝕜 : Type u_1\ninst✝² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\nf : AffineMap 𝕜 𝕜 E\ns : Set 𝕜\nx : 𝕜\n⊢ DifferentiableWithinAt 𝕜 (⇑f) s x","decl":"protected theorem differentiableWithinAt : DifferentiableWithinAt 𝕜 f s x :=\n  f.differentiableAt.differentiableWithinAt\n\n"}
{"name":"AffineMap.differentiableOn","module":"Mathlib.Analysis.Calculus.Deriv.AffineMap","initialProofState":"𝕜 : Type u_1\ninst✝² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\nf : AffineMap 𝕜 𝕜 E\ns : Set 𝕜\n⊢ DifferentiableOn 𝕜 (⇑f) s","decl":"protected theorem differentiableOn : DifferentiableOn 𝕜 f s := fun _ _ ↦ f.differentiableWithinAt\n\n"}
{"name":"AffineMap.hasStrictDerivAt_lineMap","module":"Mathlib.Analysis.Calculus.Deriv.AffineMap","initialProofState":"𝕜 : Type u_1\ninst✝² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\na b : E\nx : 𝕜\n⊢ HasStrictDerivAt (⇑(AffineMap.lineMap a b)) (HSub.hSub b a) x","decl":"theorem hasStrictDerivAt_lineMap : HasStrictDerivAt (lineMap a b) (b - a) x := by\n  simpa using (lineMap a b : 𝕜 →ᵃ[𝕜] E).hasStrictDerivAt\n\n"}
{"name":"AffineMap.hasDerivAt_lineMap","module":"Mathlib.Analysis.Calculus.Deriv.AffineMap","initialProofState":"𝕜 : Type u_1\ninst✝² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\na b : E\nx : 𝕜\n⊢ HasDerivAt (⇑(AffineMap.lineMap a b)) (HSub.hSub b a) x","decl":"theorem hasDerivAt_lineMap :  HasDerivAt (lineMap a b) (b - a) x :=\n  hasStrictDerivAt_lineMap.hasDerivAt\n\n"}
{"name":"AffineMap.hasDerivWithinAt_lineMap","module":"Mathlib.Analysis.Calculus.Deriv.AffineMap","initialProofState":"𝕜 : Type u_1\ninst✝² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace 𝕜 E\na b : E\ns : Set 𝕜\nx : 𝕜\n⊢ HasDerivWithinAt (⇑(AffineMap.lineMap a b)) (HSub.hSub b a) s x","decl":"theorem hasDerivWithinAt_lineMap : HasDerivWithinAt (lineMap a b) (b - a) s x :=\n  hasDerivAt_lineMap.hasDerivWithinAt\n\n"}
