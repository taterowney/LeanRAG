{"name":"uniqueMDiffWithinAt_iff_uniqueDiffWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù¬≤ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬π : NormedAddCommGroup E\ninst‚úù : NormedSpace ùïú E\ns : Set E\nx : E\n‚ä¢ Iff (UniqueMDiffWithinAt (modelWithCornersSelf ùïú E) s x) (UniqueDiffWithinAt ùïú s x)","decl":"theorem uniqueMDiffWithinAt_iff_uniqueDiffWithinAt :\n    UniqueMDiffWithinAt ùìò(ùïú, E) s x ‚Üî UniqueDiffWithinAt ùïú s x := by\n  simp only [UniqueMDiffWithinAt, mfld_simps]\n\n"}
{"name":"UniqueMDiffWithinAt.uniqueDiffWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù¬≤ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬π : NormedAddCommGroup E\ninst‚úù : NormedSpace ùïú E\ns : Set E\nx : E\na‚úù : UniqueMDiffWithinAt (modelWithCornersSelf ùïú E) s x\n‚ä¢ UniqueDiffWithinAt ùïú s x","decl":"alias ‚ü®UniqueMDiffWithinAt.uniqueDiffWithinAt, UniqueDiffWithinAt.uniqueMDiffWithinAt‚ü© :=\n  uniqueMDiffWithinAt_iff_uniqueDiffWithinAt\n\n"}
{"name":"UniqueDiffWithinAt.uniqueMDiffWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù¬≤ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬π : NormedAddCommGroup E\ninst‚úù : NormedSpace ùïú E\ns : Set E\nx : E\na‚úù : UniqueDiffWithinAt ùïú s x\n‚ä¢ UniqueMDiffWithinAt (modelWithCornersSelf ùïú E) s x","decl":"alias ‚ü®UniqueMDiffWithinAt.uniqueDiffWithinAt, UniqueDiffWithinAt.uniqueMDiffWithinAt‚ü© :=\n  uniqueMDiffWithinAt_iff_uniqueDiffWithinAt\n\n"}
{"name":"uniqueMDiffOn_iff_uniqueDiffOn","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù¬≤ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬π : NormedAddCommGroup E\ninst‚úù : NormedSpace ùïú E\ns : Set E\n‚ä¢ Iff (UniqueMDiffOn (modelWithCornersSelf ùïú E) s) (UniqueDiffOn ùïú s)","decl":"theorem uniqueMDiffOn_iff_uniqueDiffOn : UniqueMDiffOn ùìò(ùïú, E) s ‚Üî UniqueDiffOn ùïú s := by\n  simp [UniqueMDiffOn, UniqueDiffOn, uniqueMDiffWithinAt_iff_uniqueDiffWithinAt]\n\n"}
{"name":"UniqueDiffOn.uniqueMDiffOn","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù¬≤ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬π : NormedAddCommGroup E\ninst‚úù : NormedSpace ùïú E\ns : Set E\na‚úù : UniqueDiffOn ùïú s\n‚ä¢ UniqueMDiffOn (modelWithCornersSelf ùïú E) s","decl":"alias ‚ü®UniqueMDiffOn.uniqueDiffOn, UniqueDiffOn.uniqueMDiffOn‚ü© := uniqueMDiffOn_iff_uniqueDiffOn\n\n"}
{"name":"UniqueMDiffOn.uniqueDiffOn","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù¬≤ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬π : NormedAddCommGroup E\ninst‚úù : NormedSpace ùïú E\ns : Set E\na‚úù : UniqueMDiffOn (modelWithCornersSelf ùïú E) s\n‚ä¢ UniqueDiffOn ùïú s","decl":"alias ‚ü®UniqueMDiffOn.uniqueDiffOn, UniqueDiffOn.uniqueMDiffOn‚ü© := uniqueMDiffOn_iff_uniqueDiffOn\n\n"}
{"name":"ModelWithCorners.uniqueMDiffOn","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù¬≥ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬≤ : NormedAddCommGroup E\ninst‚úù¬π : NormedSpace ùïú E\nH : Type u_4\ninst‚úù : TopologicalSpace H\nI : ModelWithCorners ùïú E H\n‚ä¢ UniqueMDiffOn (modelWithCornersSelf ùïú E) (Set.range ‚ÜëI)","decl":"theorem ModelWithCorners.uniqueMDiffOn {H : Type*} [TopologicalSpace H]\n    (I : ModelWithCorners ùïú E H) : UniqueMDiffOn ùìò(ùïú, E) (Set.range I) :=\n  I.uniqueDiffOn.uniqueMDiffOn\n\n"}
{"name":"writtenInExtChartAt_model_space","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù‚Å¥ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : NormedSpace ùïú E\nE' : Type u_3\ninst‚úù¬π : NormedAddCommGroup E'\ninst‚úù : NormedSpace ùïú E'\nf : E ‚Üí E'\nx : E\n‚ä¢ Eq (writtenInExtChartAt (modelWithCornersSelf ùïú E) (modelWithCornersSelf ùïú E') x f) f","decl":"@[simp, mfld_simps]\ntheorem writtenInExtChartAt_model_space : writtenInExtChartAt ùìò(ùïú, E) ùìò(ùïú, E') x f = f :=\n  rfl\n\n"}
{"name":"hasMFDerivWithinAt_iff_hasFDerivWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù‚Å¥ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : NormedSpace ùïú E\nE' : Type u_3\ninst‚úù¬π : NormedAddCommGroup E'\ninst‚úù : NormedSpace ùïú E'\nf : E ‚Üí E'\ns : Set E\nx : E\nf' : ContinuousLinearMap (RingHom.id ùïú) (TangentSpace (modelWithCornersSelf ùïú E) x) (TangentSpace (modelWithCornersSelf ùïú E') (f x))\n‚ä¢ Iff (HasMFDerivWithinAt (modelWithCornersSelf ùïú E) (modelWithCornersSelf ùïú E') f s x f') (HasFDerivWithinAt f f' s x)","decl":"theorem hasMFDerivWithinAt_iff_hasFDerivWithinAt {f'} :\n    HasMFDerivWithinAt ùìò(ùïú, E) ùìò(ùïú, E') f s x f' ‚Üî HasFDerivWithinAt f f' s x := by\n  simpa only [HasMFDerivWithinAt, and_iff_right_iff_imp, mfld_simps] using\n    HasFDerivWithinAt.continuousWithinAt\n\n"}
{"name":"HasMFDerivWithinAt.hasFDerivWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù‚Å¥ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : NormedSpace ùïú E\nE' : Type u_3\ninst‚úù¬π : NormedAddCommGroup E'\ninst‚úù : NormedSpace ùïú E'\nf : E ‚Üí E'\ns : Set E\nx : E\nf' : ContinuousLinearMap (RingHom.id ùïú) (TangentSpace (modelWithCornersSelf ùïú E) x) (TangentSpace (modelWithCornersSelf ùïú E') (f x))\na‚úù : HasMFDerivWithinAt (modelWithCornersSelf ùïú E) (modelWithCornersSelf ùïú E') f s x f'\n‚ä¢ HasFDerivWithinAt f f' s x","decl":"alias ‚ü®HasMFDerivWithinAt.hasFDerivWithinAt, HasFDerivWithinAt.hasMFDerivWithinAt‚ü© :=\n  hasMFDerivWithinAt_iff_hasFDerivWithinAt\n\n"}
{"name":"HasFDerivWithinAt.hasMFDerivWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù‚Å¥ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : NormedSpace ùïú E\nE' : Type u_3\ninst‚úù¬π : NormedAddCommGroup E'\ninst‚úù : NormedSpace ùïú E'\nf : E ‚Üí E'\ns : Set E\nx : E\nf' : ContinuousLinearMap (RingHom.id ùïú) (TangentSpace (modelWithCornersSelf ùïú E) x) (TangentSpace (modelWithCornersSelf ùïú E') (f x))\na‚úù : HasFDerivWithinAt f f' s x\n‚ä¢ HasMFDerivWithinAt (modelWithCornersSelf ùïú E) (modelWithCornersSelf ùïú E') f s x f'","decl":"alias ‚ü®HasMFDerivWithinAt.hasFDerivWithinAt, HasFDerivWithinAt.hasMFDerivWithinAt‚ü© :=\n  hasMFDerivWithinAt_iff_hasFDerivWithinAt\n\n"}
{"name":"hasMFDerivAt_iff_hasFDerivAt","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù‚Å¥ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : NormedSpace ùïú E\nE' : Type u_3\ninst‚úù¬π : NormedAddCommGroup E'\ninst‚úù : NormedSpace ùïú E'\nf : E ‚Üí E'\nx : E\nf' : ContinuousLinearMap (RingHom.id ùïú) (TangentSpace (modelWithCornersSelf ùïú E) x) (TangentSpace (modelWithCornersSelf ùïú E') (f x))\n‚ä¢ Iff (HasMFDerivAt (modelWithCornersSelf ùïú E) (modelWithCornersSelf ùïú E') f x f') (HasFDerivAt f f' x)","decl":"theorem hasMFDerivAt_iff_hasFDerivAt {f'} :\n    HasMFDerivAt ùìò(ùïú, E) ùìò(ùïú, E') f x f' ‚Üî HasFDerivAt f f' x := by\n  rw [‚Üê hasMFDerivWithinAt_univ, hasMFDerivWithinAt_iff_hasFDerivWithinAt, hasFDerivWithinAt_univ]\n\n"}
{"name":"HasFDerivAt.hasMFDerivAt","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù‚Å¥ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : NormedSpace ùïú E\nE' : Type u_3\ninst‚úù¬π : NormedAddCommGroup E'\ninst‚úù : NormedSpace ùïú E'\nf : E ‚Üí E'\nx : E\nf' : ContinuousLinearMap (RingHom.id ùïú) (TangentSpace (modelWithCornersSelf ùïú E) x) (TangentSpace (modelWithCornersSelf ùïú E') (f x))\na‚úù : HasFDerivAt f f' x\n‚ä¢ HasMFDerivAt (modelWithCornersSelf ùïú E) (modelWithCornersSelf ùïú E') f x f'","decl":"alias ‚ü®HasMFDerivAt.hasFDerivAt, HasFDerivAt.hasMFDerivAt‚ü© := hasMFDerivAt_iff_hasFDerivAt\n\n"}
{"name":"HasMFDerivAt.hasFDerivAt","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù‚Å¥ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : NormedSpace ùïú E\nE' : Type u_3\ninst‚úù¬π : NormedAddCommGroup E'\ninst‚úù : NormedSpace ùïú E'\nf : E ‚Üí E'\nx : E\nf' : ContinuousLinearMap (RingHom.id ùïú) (TangentSpace (modelWithCornersSelf ùïú E) x) (TangentSpace (modelWithCornersSelf ùïú E') (f x))\na‚úù : HasMFDerivAt (modelWithCornersSelf ùïú E) (modelWithCornersSelf ùïú E') f x f'\n‚ä¢ HasFDerivAt f f' x","decl":"alias ‚ü®HasMFDerivAt.hasFDerivAt, HasFDerivAt.hasMFDerivAt‚ü© := hasMFDerivAt_iff_hasFDerivAt\n\n"}
{"name":"mdifferentiableWithinAt_iff_differentiableWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù‚Å¥ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : NormedSpace ùïú E\nE' : Type u_3\ninst‚úù¬π : NormedAddCommGroup E'\ninst‚úù : NormedSpace ùïú E'\nf : E ‚Üí E'\ns : Set E\nx : E\n‚ä¢ Iff (MDifferentiableWithinAt (modelWithCornersSelf ùïú E) (modelWithCornersSelf ùïú E') f s x) (DifferentiableWithinAt ùïú f s x)","decl":"/-- For maps between vector spaces, `MDifferentiableWithinAt` and `DifferentiableWithinAt`\ncoincide -/\ntheorem mdifferentiableWithinAt_iff_differentiableWithinAt :\n    MDifferentiableWithinAt ùìò(ùïú, E) ùìò(ùïú, E') f s x ‚Üî DifferentiableWithinAt ùïú f s x := by\n  simp only [mdifferentiableWithinAt_iff', mfld_simps]\n  exact ‚ü®fun H => H.2, fun H => ‚ü®H.continuousWithinAt, H‚ü©‚ü©\n\n"}
{"name":"DifferentiableWithinAt.mdifferentiableWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù‚Å¥ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : NormedSpace ùïú E\nE' : Type u_3\ninst‚úù¬π : NormedAddCommGroup E'\ninst‚úù : NormedSpace ùïú E'\nf : E ‚Üí E'\ns : Set E\nx : E\na‚úù : DifferentiableWithinAt ùïú f s x\n‚ä¢ MDifferentiableWithinAt (modelWithCornersSelf ùïú E) (modelWithCornersSelf ùïú E') f s x","decl":"alias ‚ü®MDifferentiableWithinAt.differentiableWithinAt,\n    DifferentiableWithinAt.mdifferentiableWithinAt‚ü© :=\n  mdifferentiableWithinAt_iff_differentiableWithinAt\n\n"}
{"name":"MDifferentiableWithinAt.differentiableWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù‚Å¥ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : NormedSpace ùïú E\nE' : Type u_3\ninst‚úù¬π : NormedAddCommGroup E'\ninst‚úù : NormedSpace ùïú E'\nf : E ‚Üí E'\ns : Set E\nx : E\na‚úù : MDifferentiableWithinAt (modelWithCornersSelf ùïú E) (modelWithCornersSelf ùïú E') f s x\n‚ä¢ DifferentiableWithinAt ùïú f s x","decl":"alias ‚ü®MDifferentiableWithinAt.differentiableWithinAt,\n    DifferentiableWithinAt.mdifferentiableWithinAt‚ü© :=\n  mdifferentiableWithinAt_iff_differentiableWithinAt\n\n"}
{"name":"mdifferentiableAt_iff_differentiableAt","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù‚Å¥ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : NormedSpace ùïú E\nE' : Type u_3\ninst‚úù¬π : NormedAddCommGroup E'\ninst‚úù : NormedSpace ùïú E'\nf : E ‚Üí E'\nx : E\n‚ä¢ Iff (MDifferentiableAt (modelWithCornersSelf ùïú E) (modelWithCornersSelf ùïú E') f x) (DifferentiableAt ùïú f x)","decl":"/-- For maps between vector spaces, `MDifferentiableAt` and `DifferentiableAt` coincide -/\ntheorem mdifferentiableAt_iff_differentiableAt :\n    MDifferentiableAt ùìò(ùïú, E) ùìò(ùïú, E') f x ‚Üî DifferentiableAt ùïú f x := by\n  simp only [mdifferentiableAt_iff, differentiableWithinAt_univ, mfld_simps]\n  exact ‚ü®fun H => H.2, fun H => ‚ü®H.continuousAt, H‚ü©‚ü©\n\n"}
{"name":"DifferentiableAt.mdifferentiableAt","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù‚Å¥ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : NormedSpace ùïú E\nE' : Type u_3\ninst‚úù¬π : NormedAddCommGroup E'\ninst‚úù : NormedSpace ùïú E'\nf : E ‚Üí E'\nx : E\na‚úù : DifferentiableAt ùïú f x\n‚ä¢ MDifferentiableAt (modelWithCornersSelf ùïú E) (modelWithCornersSelf ùïú E') f x","decl":"alias ‚ü®MDifferentiableAt.differentiableAt, DifferentiableAt.mdifferentiableAt‚ü© :=\n  mdifferentiableAt_iff_differentiableAt\n\n"}
{"name":"MDifferentiableAt.differentiableAt","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù‚Å¥ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : NormedSpace ùïú E\nE' : Type u_3\ninst‚úù¬π : NormedAddCommGroup E'\ninst‚úù : NormedSpace ùïú E'\nf : E ‚Üí E'\nx : E\na‚úù : MDifferentiableAt (modelWithCornersSelf ùïú E) (modelWithCornersSelf ùïú E') f x\n‚ä¢ DifferentiableAt ùïú f x","decl":"alias ‚ü®MDifferentiableAt.differentiableAt, DifferentiableAt.mdifferentiableAt‚ü© :=\n  mdifferentiableAt_iff_differentiableAt\n\n"}
{"name":"mdifferentiableOn_iff_differentiableOn","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù‚Å¥ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : NormedSpace ùïú E\nE' : Type u_3\ninst‚úù¬π : NormedAddCommGroup E'\ninst‚úù : NormedSpace ùïú E'\nf : E ‚Üí E'\ns : Set E\n‚ä¢ Iff (MDifferentiableOn (modelWithCornersSelf ùïú E) (modelWithCornersSelf ùïú E') f s) (DifferentiableOn ùïú f s)","decl":"/-- For maps between vector spaces, `MDifferentiableOn` and `DifferentiableOn` coincide -/\ntheorem mdifferentiableOn_iff_differentiableOn :\n    MDifferentiableOn ùìò(ùïú, E) ùìò(ùïú, E') f s ‚Üî DifferentiableOn ùïú f s := by\n  simp only [MDifferentiableOn, DifferentiableOn,\n    mdifferentiableWithinAt_iff_differentiableWithinAt]\n\n"}
{"name":"MDifferentiableOn.differentiableOn","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù‚Å¥ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : NormedSpace ùïú E\nE' : Type u_3\ninst‚úù¬π : NormedAddCommGroup E'\ninst‚úù : NormedSpace ùïú E'\nf : E ‚Üí E'\ns : Set E\na‚úù : MDifferentiableOn (modelWithCornersSelf ùïú E) (modelWithCornersSelf ùïú E') f s\n‚ä¢ DifferentiableOn ùïú f s","decl":"alias ‚ü®MDifferentiableOn.differentiableOn, DifferentiableOn.mdifferentiableOn‚ü© :=\n  mdifferentiableOn_iff_differentiableOn\n\n"}
{"name":"DifferentiableOn.mdifferentiableOn","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù‚Å¥ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : NormedSpace ùïú E\nE' : Type u_3\ninst‚úù¬π : NormedAddCommGroup E'\ninst‚úù : NormedSpace ùïú E'\nf : E ‚Üí E'\ns : Set E\na‚úù : DifferentiableOn ùïú f s\n‚ä¢ MDifferentiableOn (modelWithCornersSelf ùïú E) (modelWithCornersSelf ùïú E') f s","decl":"alias ‚ü®MDifferentiableOn.differentiableOn, DifferentiableOn.mdifferentiableOn‚ü© :=\n  mdifferentiableOn_iff_differentiableOn\n\n"}
{"name":"mdifferentiable_iff_differentiable","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù‚Å¥ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : NormedSpace ùïú E\nE' : Type u_3\ninst‚úù¬π : NormedAddCommGroup E'\ninst‚úù : NormedSpace ùïú E'\nf : E ‚Üí E'\n‚ä¢ Iff (MDifferentiable (modelWithCornersSelf ùïú E) (modelWithCornersSelf ùïú E') f) (Differentiable ùïú f)","decl":"/-- For maps between vector spaces, `MDifferentiable` and `Differentiable` coincide -/\ntheorem mdifferentiable_iff_differentiable :\n    MDifferentiable ùìò(ùïú, E) ùìò(ùïú, E') f ‚Üî Differentiable ùïú f := by\n  simp only [MDifferentiable, Differentiable, mdifferentiableAt_iff_differentiableAt]\n\n"}
{"name":"MDifferentiable.differentiable","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù‚Å¥ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : NormedSpace ùïú E\nE' : Type u_3\ninst‚úù¬π : NormedAddCommGroup E'\ninst‚úù : NormedSpace ùïú E'\nf : E ‚Üí E'\na‚úù : MDifferentiable (modelWithCornersSelf ùïú E) (modelWithCornersSelf ùïú E') f\n‚ä¢ Differentiable ùïú f","decl":"alias ‚ü®MDifferentiable.differentiable, Differentiable.mdifferentiable‚ü© :=\n  mdifferentiable_iff_differentiable\n\n"}
{"name":"Differentiable.mdifferentiable","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù‚Å¥ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : NormedSpace ùïú E\nE' : Type u_3\ninst‚úù¬π : NormedAddCommGroup E'\ninst‚úù : NormedSpace ùïú E'\nf : E ‚Üí E'\na‚úù : Differentiable ùïú f\n‚ä¢ MDifferentiable (modelWithCornersSelf ùïú E) (modelWithCornersSelf ùïú E') f","decl":"alias ‚ü®MDifferentiable.differentiable, Differentiable.mdifferentiable‚ü© :=\n  mdifferentiable_iff_differentiable\n\n"}
{"name":"mfderivWithin_eq_fderivWithin","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù‚Å¥ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : NormedSpace ùïú E\nE' : Type u_3\ninst‚úù¬π : NormedAddCommGroup E'\ninst‚úù : NormedSpace ùïú E'\nf : E ‚Üí E'\ns : Set E\nx : E\n‚ä¢ Eq (mfderivWithin (modelWithCornersSelf ùïú E) (modelWithCornersSelf ùïú E') f s x) (fderivWithin ùïú f s x)","decl":"/-- For maps between vector spaces, `mfderivWithin` and `fderivWithin` coincide -/\n@[simp]\ntheorem mfderivWithin_eq_fderivWithin :\n    mfderivWithin ùìò(ùïú, E) ùìò(ùïú, E') f s x = fderivWithin ùïú f s x := by\n  by_cases h : MDifferentiableWithinAt ùìò(ùïú, E) ùìò(ùïú, E') f s x\n  ¬∑ simp only [mfderivWithin, h, if_pos, mfld_simps]\n  ¬∑ simp only [mfderivWithin, h, if_neg, not_false_iff]\n    rw [mdifferentiableWithinAt_iff_differentiableWithinAt] at h\n    exact (fderivWithin_zero_of_not_differentiableWithinAt h).symm\n\n"}
{"name":"mfderiv_eq_fderiv","module":"Mathlib.Geometry.Manifold.MFDeriv.FDeriv","initialProofState":"ùïú : Type u_1\ninst‚úù‚Å¥ : NontriviallyNormedField ùïú\nE : Type u_2\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : NormedSpace ùïú E\nE' : Type u_3\ninst‚úù¬π : NormedAddCommGroup E'\ninst‚úù : NormedSpace ùïú E'\nf : E ‚Üí E'\nx : E\n‚ä¢ Eq (mfderiv (modelWithCornersSelf ùïú E) (modelWithCornersSelf ùïú E') f x) (fderiv ùïú f x)","decl":"/-- For maps between vector spaces, `mfderiv` and `fderiv` coincide -/\n@[simp]\ntheorem mfderiv_eq_fderiv : mfderiv ùìò(ùïú, E) ùìò(ùïú, E') f x = fderiv ùïú f x := by\n  rw [‚Üê mfderivWithin_univ, ‚Üê fderivWithin_univ]\n  exact mfderivWithin_eq_fderivWithin\n\n"}
