{"name":"Matrix.reindexLinearEquiv_apply","module":"Mathlib.LinearAlgebra.Matrix.Reindex","initialProofState":"m : Type u_2\nn : Type u_3\nm' : Type u_6\nn' : Type u_7\nR : Type u_11\nA : Type u_12\ninst✝² : Semiring R\ninst✝¹ : AddCommMonoid A\ninst✝ : Module R A\neₘ : Equiv m m'\neₙ : Equiv n n'\nM : Matrix m n A\n⊢ Eq ((Matrix.reindexLinearEquiv R A eₘ eₙ) M) ((Matrix.reindex eₘ eₙ) M)","decl":"@[simp]\ntheorem reindexLinearEquiv_apply (eₘ : m ≃ m') (eₙ : n ≃ n') (M : Matrix m n A) :\n    reindexLinearEquiv R A eₘ eₙ M = reindex eₘ eₙ M :=\n  rfl\n\n"}
{"name":"Matrix.reindexLinearEquiv_symm","module":"Mathlib.LinearAlgebra.Matrix.Reindex","initialProofState":"m : Type u_2\nn : Type u_3\nm' : Type u_6\nn' : Type u_7\nR : Type u_11\nA : Type u_12\ninst✝² : Semiring R\ninst✝¹ : AddCommMonoid A\ninst✝ : Module R A\neₘ : Equiv m m'\neₙ : Equiv n n'\n⊢ Eq (Matrix.reindexLinearEquiv R A eₘ eₙ).symm (Matrix.reindexLinearEquiv R A eₘ.symm eₙ.symm)","decl":"@[simp]\ntheorem reindexLinearEquiv_symm (eₘ : m ≃ m') (eₙ : n ≃ n') :\n    (reindexLinearEquiv R A eₘ eₙ).symm = reindexLinearEquiv R A eₘ.symm eₙ.symm :=\n  rfl\n\n"}
{"name":"Matrix.reindexLinearEquiv_refl_refl","module":"Mathlib.LinearAlgebra.Matrix.Reindex","initialProofState":"m : Type u_2\nn : Type u_3\nR : Type u_11\nA : Type u_12\ninst✝² : Semiring R\ninst✝¹ : AddCommMonoid A\ninst✝ : Module R A\n⊢ Eq (Matrix.reindexLinearEquiv R A (Equiv.refl m) (Equiv.refl n)) (LinearEquiv.refl R (Matrix m n A))","decl":"@[simp]\ntheorem reindexLinearEquiv_refl_refl :\n    reindexLinearEquiv R A (Equiv.refl m) (Equiv.refl n) = LinearEquiv.refl R _ :=\n  LinearEquiv.ext fun _ => rfl\n\n"}
{"name":"Matrix.reindexLinearEquiv_trans","module":"Mathlib.LinearAlgebra.Matrix.Reindex","initialProofState":"m : Type u_2\nn : Type u_3\nm' : Type u_6\nn' : Type u_7\nm'' : Type u_9\nn'' : Type u_10\nR : Type u_11\nA : Type u_12\ninst✝² : Semiring R\ninst✝¹ : AddCommMonoid A\ninst✝ : Module R A\ne₁ : Equiv m m'\ne₂ : Equiv n n'\ne₁' : Equiv m' m''\ne₂' : Equiv n' n''\n⊢ Eq ((Matrix.reindexLinearEquiv R A e₁ e₂).trans (Matrix.reindexLinearEquiv R A e₁' e₂')) (Matrix.reindexLinearEquiv R A (e₁.trans e₁') (e₂.trans e₂'))","decl":"theorem reindexLinearEquiv_trans (e₁ : m ≃ m') (e₂ : n ≃ n') (e₁' : m' ≃ m'') (e₂' : n' ≃ n'') :\n    (reindexLinearEquiv R A e₁ e₂).trans (reindexLinearEquiv R A e₁' e₂') =\n      (reindexLinearEquiv R A (e₁.trans e₁') (e₂.trans e₂') : _ ≃ₗ[R] _) := by\n  ext\n  rfl\n\n"}
{"name":"Matrix.reindexLinearEquiv_comp","module":"Mathlib.LinearAlgebra.Matrix.Reindex","initialProofState":"m : Type u_2\nn : Type u_3\nm' : Type u_6\nn' : Type u_7\nm'' : Type u_9\nn'' : Type u_10\nR : Type u_11\nA : Type u_12\ninst✝² : Semiring R\ninst✝¹ : AddCommMonoid A\ninst✝ : Module R A\ne₁ : Equiv m m'\ne₂ : Equiv n n'\ne₁' : Equiv m' m''\ne₂' : Equiv n' n''\n⊢ Eq (Function.comp ⇑(Matrix.reindexLinearEquiv R A e₁' e₂') ⇑(Matrix.reindexLinearEquiv R A e₁ e₂)) ⇑(Matrix.reindexLinearEquiv R A (e₁.trans e₁') (e₂.trans e₂'))","decl":"theorem reindexLinearEquiv_comp (e₁ : m ≃ m') (e₂ : n ≃ n') (e₁' : m' ≃ m'') (e₂' : n' ≃ n'') :\n    reindexLinearEquiv R A e₁' e₂' ∘ reindexLinearEquiv R A e₁ e₂ =\n      reindexLinearEquiv R A (e₁.trans e₁') (e₂.trans e₂') := by\n  rw [← reindexLinearEquiv_trans]\n  rfl\n\n"}
{"name":"Matrix.reindexLinearEquiv_comp_apply","module":"Mathlib.LinearAlgebra.Matrix.Reindex","initialProofState":"m : Type u_2\nn : Type u_3\nm' : Type u_6\nn' : Type u_7\nm'' : Type u_9\nn'' : Type u_10\nR : Type u_11\nA : Type u_12\ninst✝² : Semiring R\ninst✝¹ : AddCommMonoid A\ninst✝ : Module R A\ne₁ : Equiv m m'\ne₂ : Equiv n n'\ne₁' : Equiv m' m''\ne₂' : Equiv n' n''\nM : Matrix m n A\n⊢ Eq ((Matrix.reindexLinearEquiv R A e₁' e₂') ((Matrix.reindexLinearEquiv R A e₁ e₂) M)) ((Matrix.reindexLinearEquiv R A (e₁.trans e₁') (e₂.trans e₂')) M)","decl":"theorem reindexLinearEquiv_comp_apply (e₁ : m ≃ m') (e₂ : n ≃ n') (e₁' : m' ≃ m'') (e₂' : n' ≃ n'')\n    (M : Matrix m n A) :\n    (reindexLinearEquiv R A e₁' e₂') (reindexLinearEquiv R A e₁ e₂ M) =\n      reindexLinearEquiv R A (e₁.trans e₁') (e₂.trans e₂') M :=\n  submatrix_submatrix _ _ _ _ _\n\n"}
{"name":"Matrix.reindexLinearEquiv_one","module":"Mathlib.LinearAlgebra.Matrix.Reindex","initialProofState":"m : Type u_2\nm' : Type u_6\nR : Type u_11\nA : Type u_12\ninst✝⁵ : Semiring R\ninst✝⁴ : AddCommMonoid A\ninst✝³ : Module R A\ninst✝² : DecidableEq m\ninst✝¹ : DecidableEq m'\ninst✝ : One A\ne : Equiv m m'\n⊢ Eq ((Matrix.reindexLinearEquiv R A e e) 1) 1","decl":"theorem reindexLinearEquiv_one [DecidableEq m] [DecidableEq m'] [One A] (e : m ≃ m') :\n    reindexLinearEquiv R A e e (1 : Matrix m m A) = 1 :=\n  submatrix_one_equiv e.symm\n\n"}
{"name":"Matrix.reindexLinearEquiv_mul","module":"Mathlib.LinearAlgebra.Matrix.Reindex","initialProofState":"m : Type u_2\nn : Type u_3\no : Type u_4\nm' : Type u_6\nn' : Type u_7\no' : Type u_8\nR : Type u_11\nA : Type u_12\ninst✝⁴ : Semiring R\ninst✝³ : Semiring A\ninst✝² : Module R A\ninst✝¹ : Fintype n\ninst✝ : Fintype n'\neₘ : Equiv m m'\neₙ : Equiv n n'\neₒ : Equiv o o'\nM : Matrix m n A\nN : Matrix n o A\n⊢ Eq (HMul.hMul ((Matrix.reindexLinearEquiv R A eₘ eₙ) M) ((Matrix.reindexLinearEquiv R A eₙ eₒ) N)) ((Matrix.reindexLinearEquiv R A eₘ eₒ) (HMul.hMul M N))","decl":"theorem reindexLinearEquiv_mul [Fintype n] [Fintype n'] (eₘ : m ≃ m') (eₙ : n ≃ n') (eₒ : o ≃ o')\n    (M : Matrix m n A) (N : Matrix n o A) :\n    reindexLinearEquiv R A eₘ eₙ M * reindexLinearEquiv R A eₙ eₒ N =\n      reindexLinearEquiv R A eₘ eₒ (M * N) :=\n  submatrix_mul_equiv M N _ _ _\n\n"}
{"name":"Matrix.mul_reindexLinearEquiv_one","module":"Mathlib.LinearAlgebra.Matrix.Reindex","initialProofState":"m : Type u_2\nn : Type u_3\no : Type u_4\nn' : Type u_7\nR : Type u_11\nA : Type u_12\ninst✝⁴ : Semiring R\ninst✝³ : Semiring A\ninst✝² : Module R A\ninst✝¹ : Fintype n\ninst✝ : DecidableEq o\ne₁ : Equiv o n\ne₂ : Equiv o n'\nM : Matrix m n A\n⊢ Eq (HMul.hMul M ((Matrix.reindexLinearEquiv R A e₁ e₂) 1)) ((Matrix.reindexLinearEquiv R A (Equiv.refl m) (e₁.symm.trans e₂)) M)","decl":"theorem mul_reindexLinearEquiv_one [Fintype n] [DecidableEq o] (e₁ : o ≃ n) (e₂ : o ≃ n')\n    (M : Matrix m n A) :\n    M * (reindexLinearEquiv R A e₁ e₂ 1) =\n      reindexLinearEquiv R A (Equiv.refl m) (e₁.symm.trans e₂) M :=\n  haveI := Fintype.ofEquiv _ e₁.symm\n  mul_submatrix_one _ _ _\n\n"}
{"name":"Matrix.reindexAlgEquiv_apply","module":"Mathlib.LinearAlgebra.Matrix.Reindex","initialProofState":"m : Type u_2\nn : Type u_3\nR : Type u_11\nA : Type u_12\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Fintype n\ninst✝⁴ : Fintype m\ninst✝³ : DecidableEq m\ninst✝² : DecidableEq n\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\ne : Equiv m n\nM : Matrix m m A\n⊢ Eq ((Matrix.reindexAlgEquiv R A e) M) ((Matrix.reindex e e) M)","decl":"@[simp]\ntheorem reindexAlgEquiv_apply (e : m ≃ n) (M : Matrix m m A) :\n    reindexAlgEquiv R A e M = reindex e e M :=\n  rfl\n\n"}
{"name":"Matrix.reindexAlgEquiv_symm","module":"Mathlib.LinearAlgebra.Matrix.Reindex","initialProofState":"m : Type u_2\nn : Type u_3\nR : Type u_11\nA : Type u_12\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Fintype n\ninst✝⁴ : Fintype m\ninst✝³ : DecidableEq m\ninst✝² : DecidableEq n\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\ne : Equiv m n\n⊢ Eq (Matrix.reindexAlgEquiv R A e).symm (Matrix.reindexAlgEquiv R A e.symm)","decl":"@[simp]\ntheorem reindexAlgEquiv_symm (e : m ≃ n) : (reindexAlgEquiv R A e).symm =\n    reindexAlgEquiv R A e.symm :=\n  rfl\n\n"}
{"name":"Matrix.reindexAlgEquiv_refl","module":"Mathlib.LinearAlgebra.Matrix.Reindex","initialProofState":"m : Type u_2\nR : Type u_11\nA : Type u_12\ninst✝⁴ : CommSemiring R\ninst✝³ : Fintype m\ninst✝² : DecidableEq m\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\n⊢ Eq (Matrix.reindexAlgEquiv R A (Equiv.refl m)) AlgEquiv.refl","decl":"@[simp]\ntheorem reindexAlgEquiv_refl : reindexAlgEquiv R A (Equiv.refl m) = AlgEquiv.refl :=\n  AlgEquiv.ext fun _ => rfl\n\n"}
{"name":"Matrix.reindexAlgEquiv_mul","module":"Mathlib.LinearAlgebra.Matrix.Reindex","initialProofState":"m : Type u_2\nn : Type u_3\nR : Type u_11\nA : Type u_12\ninst✝⁶ : CommSemiring R\ninst✝⁵ : Fintype n\ninst✝⁴ : Fintype m\ninst✝³ : DecidableEq m\ninst✝² : DecidableEq n\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\ne : Equiv m n\nM N : Matrix m m A\n⊢ Eq ((Matrix.reindexAlgEquiv R A e) (HMul.hMul M N)) (HMul.hMul ((Matrix.reindexAlgEquiv R A e) M) ((Matrix.reindexAlgEquiv R A e) N))","decl":"theorem reindexAlgEquiv_mul (e : m ≃ n) (M : Matrix m m A) (N : Matrix m m A) :\n    reindexAlgEquiv R A e (M * N) = reindexAlgEquiv R A e M * reindexAlgEquiv R A e N :=\n  _root_.map_mul ..\n\n"}
{"name":"Matrix.det_reindexLinearEquiv_self","module":"Mathlib.LinearAlgebra.Matrix.Reindex","initialProofState":"m : Type u_2\nn : Type u_3\nR : Type u_11\ninst✝⁴ : CommRing R\ninst✝³ : Fintype m\ninst✝² : DecidableEq m\ninst✝¹ : Fintype n\ninst✝ : DecidableEq n\ne : Equiv m n\nM : Matrix m m R\n⊢ Eq ((Matrix.reindexLinearEquiv R R e e) M).det M.det","decl":"/-- Reindexing both indices along the same equivalence preserves the determinant.\n\nFor the `simp` version of this lemma, see `det_submatrix_equiv_self`.\n-/\ntheorem det_reindexLinearEquiv_self [CommRing R] [Fintype m] [DecidableEq m] [Fintype n]\n    [DecidableEq n] (e : m ≃ n) (M : Matrix m m R) : det (reindexLinearEquiv R R e e M) = det M :=\n  det_reindex_self e M\n\n"}
{"name":"Matrix.det_reindexAlgEquiv","module":"Mathlib.LinearAlgebra.Matrix.Reindex","initialProofState":"m : Type u_2\nn : Type u_3\nR : Type u_11\nB : Type u_13\ninst✝⁶ : CommRing R\ninst✝⁵ : CommRing B\ninst✝⁴ : Algebra R B\ninst✝³ : Fintype m\ninst✝² : DecidableEq m\ninst✝¹ : Fintype n\ninst✝ : DecidableEq n\ne : Equiv m n\nA : Matrix m m B\n⊢ Eq ((Matrix.reindexAlgEquiv R B e) A).det A.det","decl":"/-- Reindexing both indices along the same equivalence preserves the determinant.\n\nFor the `simp` version of this lemma, see `det_submatrix_equiv_self`.\n-/\ntheorem det_reindexAlgEquiv (B : Type*) [CommRing R] [CommRing B] [Algebra R B] [Fintype m]\n    [DecidableEq m] [Fintype n] [DecidableEq n] (e : m ≃ n) (A : Matrix m m B) :\n    det (reindexAlgEquiv R B e A) = det A :=\n  det_reindex_self e A\n\n"}
