{"name":"AddGrp.isZero_of_subsingleton","module":"Mathlib.Algebra.Category.Grp.Zero","initialProofState":"G : AddGrp\ninst✝ : Subsingleton ↑G\n⊢ CategoryTheory.Limits.IsZero G","decl":"@[to_additive]\ntheorem isZero_of_subsingleton (G : Grp) [Subsingleton G] : IsZero G := by\n  refine ⟨fun X => ⟨⟨⟨1⟩, fun f => ?_⟩⟩, fun X => ⟨⟨⟨1⟩, fun f => ?_⟩⟩⟩\n  · ext x\n    have : x = 1 := Subsingleton.elim _ _\n    rw [this, map_one, map_one]\n  · ext\n    subsingleton\n\n"}
{"name":"Grp.isZero_of_subsingleton","module":"Mathlib.Algebra.Category.Grp.Zero","initialProofState":"G : Grp\ninst✝ : Subsingleton ↑G\n⊢ CategoryTheory.Limits.IsZero G","decl":"@[to_additive]\ntheorem isZero_of_subsingleton (G : Grp) [Subsingleton G] : IsZero G := by\n  refine ⟨fun X => ⟨⟨⟨1⟩, fun f => ?_⟩⟩, fun X => ⟨⟨⟨1⟩, fun f => ?_⟩⟩⟩\n  · ext x\n    have : x = 1 := Subsingleton.elim _ _\n    rw [this, map_one, map_one]\n  · ext\n    subsingleton\n\n"}
{"name":"AddGrp.hasZeroObject","module":"Mathlib.Algebra.Category.Grp.Zero","initialProofState":"⊢ CategoryTheory.Limits.HasZeroObject AddGrp","decl":"@[to_additive AddGrp.hasZeroObject]\ninstance : HasZeroObject Grp :=\n  ⟨⟨of PUnit, isZero_of_subsingleton _⟩⟩\n\n"}
{"name":"Grp.instHasZeroObject","module":"Mathlib.Algebra.Category.Grp.Zero","initialProofState":"⊢ CategoryTheory.Limits.HasZeroObject Grp","decl":"@[to_additive AddGrp.hasZeroObject]\ninstance : HasZeroObject Grp :=\n  ⟨⟨of PUnit, isZero_of_subsingleton _⟩⟩\n\n"}
{"name":"AddCommGrp.isZero_of_subsingleton","module":"Mathlib.Algebra.Category.Grp.Zero","initialProofState":"G : AddCommGrp\ninst✝ : Subsingleton ↑G\n⊢ CategoryTheory.Limits.IsZero G","decl":"@[to_additive]\ntheorem isZero_of_subsingleton (G : CommGrp) [Subsingleton G] : IsZero G := by\n  refine ⟨fun X => ⟨⟨⟨1⟩, fun f => ?_⟩⟩, fun X => ⟨⟨⟨1⟩, fun f => ?_⟩⟩⟩\n  · ext x\n    have : x = 1 := Subsingleton.elim _ _\n    rw [this, map_one, map_one]\n  · ext\n    subsingleton\n\n"}
{"name":"CommGrp.isZero_of_subsingleton","module":"Mathlib.Algebra.Category.Grp.Zero","initialProofState":"G : CommGrp\ninst✝ : Subsingleton ↑G\n⊢ CategoryTheory.Limits.IsZero G","decl":"@[to_additive]\ntheorem isZero_of_subsingleton (G : CommGrp) [Subsingleton G] : IsZero G := by\n  refine ⟨fun X => ⟨⟨⟨1⟩, fun f => ?_⟩⟩, fun X => ⟨⟨⟨1⟩, fun f => ?_⟩⟩⟩\n  · ext x\n    have : x = 1 := Subsingleton.elim _ _\n    rw [this, map_one, map_one]\n  · ext\n    subsingleton\n\n"}
{"name":"CommGrp.instHasZeroObject","module":"Mathlib.Algebra.Category.Grp.Zero","initialProofState":"⊢ CategoryTheory.Limits.HasZeroObject CommGrp","decl":"@[to_additive AddCommGrp.hasZeroObject]\ninstance : HasZeroObject CommGrp :=\n  ⟨⟨of PUnit, isZero_of_subsingleton _⟩⟩\n\n"}
{"name":"AddCommGrp.hasZeroObject","module":"Mathlib.Algebra.Category.Grp.Zero","initialProofState":"⊢ CategoryTheory.Limits.HasZeroObject AddCommGrp","decl":"@[to_additive AddCommGrp.hasZeroObject]\ninstance : HasZeroObject CommGrp :=\n  ⟨⟨of PUnit, isZero_of_subsingleton _⟩⟩\n\n"}
