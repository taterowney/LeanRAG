{"name":"IsCyclotomicExtension.Rat.nrRealPlaces_eq_zero","module":"Mathlib.NumberTheory.Cyclotomic.Embeddings","initialProofState":"n : PNat\nK : Type u\ninst✝² : Field K\ninst✝¹ : CharZero K\ninst✝ : IsCyclotomicExtension (Singleton.singleton n) Rat K\nhn : LT.lt 2 n\n⊢ Eq (NumberField.InfinitePlace.nrRealPlaces K) 0","decl":"/-- If `K` is a `n`-th cyclotomic extension of `ℚ`, where `2 < n`, then there are no real places\nof `K`. -/\ntheorem nrRealPlaces_eq_zero [IsCyclotomicExtension {n} ℚ K]\n    (hn : 2 < n) :\n    haveI := IsCyclotomicExtension.numberField {n} ℚ K\n    nrRealPlaces K = 0 := by\n  have := IsCyclotomicExtension.numberField {n} ℚ K\n  apply (IsCyclotomicExtension.zeta_spec n ℚ K).nrRealPlaces_eq_zero_of_two_lt hn\n\n"}
{"name":"IsCyclotomicExtension.Rat.nrComplexPlaces_eq_totient_div_two","module":"Mathlib.NumberTheory.Cyclotomic.Embeddings","initialProofState":"n : PNat\nK : Type u\ninst✝¹ : Field K\ninst✝ : CharZero K\nh : IsCyclotomicExtension (Singleton.singleton n) Rat K\n⊢ Eq (NumberField.InfinitePlace.nrComplexPlaces K) (HDiv.hDiv (↑n).totient 2)","decl":"/-- If `K` is a `n`-th cyclotomic extension of `ℚ`, then there are `φ n / n` complex places\nof `K`. Note that this uses `1 / 2 = 0` in the cases `n = 1, 2`. -/\ntheorem nrComplexPlaces_eq_totient_div_two [h : IsCyclotomicExtension {n} ℚ K] :\n    haveI := IsCyclotomicExtension.numberField {n} ℚ K\n    nrComplexPlaces K = φ n / 2 := by\n  have := IsCyclotomicExtension.numberField {n} ℚ K\n  by_cases hn : 2 < n\n  · obtain ⟨k, hk : φ n = k + k⟩ := totient_even hn\n    have key := card_add_two_mul_card_eq_rank K\n    rw [nrRealPlaces_eq_zero K hn, zero_add, IsCyclotomicExtension.finrank (n := n) K\n      (cyclotomic.irreducible_rat n.pos), hk, ← two_mul, Nat.mul_right_inj (by norm_num)] at key\n    simp [hk, key, ← two_mul]\n  · have : φ n = 1 := by\n      by_cases h1 : 1 < n.1\n      · convert totient_two\n        exact (eq_of_le_of_not_lt (succ_le_of_lt h1) hn).symm\n      · convert totient_one\n        rw [← PNat.one_coe, PNat.coe_inj]\n        exact eq_of_le_of_not_lt (not_lt.mp h1) (PNat.not_lt_one _)\n    rw [this]\n    apply nrComplexPlaces_eq_zero_of_finrank_eq_one\n    rw [IsCyclotomicExtension.finrank K (cyclotomic.irreducible_rat n.pos), this]\n\n\n"}
