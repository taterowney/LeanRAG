{"name":"CategoryTheory.Abelian.DoldKan.comparisonN_inv_app_f","module":"Mathlib.AlgebraicTopology.DoldKan.Equivalence","initialProofState":"A : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} A\ninst‚úù : CategoryTheory.Abelian A\nX : CategoryTheory.SimplicialObject A\ni : Nat\n‚ä¢ Eq ((CategoryTheory.Abelian.DoldKan.comparisonN.inv.app X).f i) (CategoryTheory.CategoryStruct.comp (((CategoryTheory.Idempotents.toKaroubiEquivalence (ChainComplex A Nat)).inverse.map ((AlgebraicTopology.DoldKan.N‚ÇÅ_iso_normalizedMooreComplex_comp_toKaroubi A).hom.app X)).f i) (((CategoryTheory.Idempotents.toKaroubiEquivalence (ChainComplex A Nat)).unitIso.inv.app (CategoryTheory.Abelian.DoldKan.N.obj X)).f i))","decl":"/-- The comparison isomorphism between `normalizedMooreComplex A` and\nthe functor `Idempotents.DoldKan.N` from the pseudoabelian case -/\n@[simps!]\ndef comparisonN : (N : SimplicialObject A ‚•§ _) ‚âÖ Idempotents.DoldKan.N :=\n  calc\n    N ‚âÖ N ‚ãô ùü≠ _ := Functor.leftUnitor N\n    _ ‚âÖ N ‚ãô (toKaroubiEquivalence _).functor ‚ãô (toKaroubiEquivalence _).inverse :=\n          isoWhiskerLeft _ (toKaroubiEquivalence _).unitIso\n    _ ‚âÖ (N ‚ãô (toKaroubiEquivalence _).functor) ‚ãô (toKaroubiEquivalence _).inverse :=\n          Iso.refl _\n    _ ‚âÖ N‚ÇÅ ‚ãô (toKaroubiEquivalence _).inverse :=\n          isoWhiskerRight (N‚ÇÅ_iso_normalizedMooreComplex_comp_toKaroubi A).symm _\n    _ ‚âÖ Idempotents.DoldKan.N := Iso.refl _\n\n"}
{"name":"CategoryTheory.Abelian.DoldKan.comparisonN_hom_app_f","module":"Mathlib.AlgebraicTopology.DoldKan.Equivalence","initialProofState":"A : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} A\ninst‚úù : CategoryTheory.Abelian A\nX : CategoryTheory.SimplicialObject A\ni : Nat\n‚ä¢ Eq ((CategoryTheory.Abelian.DoldKan.comparisonN.hom.app X).f i) (CategoryTheory.CategoryStruct.comp (((CategoryTheory.Idempotents.toKaroubiEquivalence (ChainComplex A Nat)).unitIso.hom.app (CategoryTheory.Abelian.DoldKan.N.obj X)).f i) (((CategoryTheory.Idempotents.toKaroubiEquivalence (ChainComplex A Nat)).inverse.map ((AlgebraicTopology.DoldKan.N‚ÇÅ_iso_normalizedMooreComplex_comp_toKaroubi A).inv.app X)).f i))","decl":"/-- The comparison isomorphism between `normalizedMooreComplex A` and\nthe functor `Idempotents.DoldKan.N` from the pseudoabelian case -/\n@[simps!]\ndef comparisonN : (N : SimplicialObject A ‚•§ _) ‚âÖ Idempotents.DoldKan.N :=\n  calc\n    N ‚âÖ N ‚ãô ùü≠ _ := Functor.leftUnitor N\n    _ ‚âÖ N ‚ãô (toKaroubiEquivalence _).functor ‚ãô (toKaroubiEquivalence _).inverse :=\n          isoWhiskerLeft _ (toKaroubiEquivalence _).unitIso\n    _ ‚âÖ (N ‚ãô (toKaroubiEquivalence _).functor) ‚ãô (toKaroubiEquivalence _).inverse :=\n          Iso.refl _\n    _ ‚âÖ N‚ÇÅ ‚ãô (toKaroubiEquivalence _).inverse :=\n          isoWhiskerRight (N‚ÇÅ_iso_normalizedMooreComplex_comp_toKaroubi A).symm _\n    _ ‚âÖ Idempotents.DoldKan.N := Iso.refl _\n\n"}
{"name":"CategoryTheory.Abelian.DoldKan.equivalence_functor","module":"Mathlib.AlgebraicTopology.DoldKan.Equivalence","initialProofState":"A : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} A\ninst‚úù : CategoryTheory.Abelian A\n‚ä¢ Eq CategoryTheory.Abelian.DoldKan.equivalence.functor CategoryTheory.Abelian.DoldKan.N","decl":"/-- The Dold-Kan equivalence for abelian categories -/\n@[simps! functor]\ndef equivalence : SimplicialObject A ‚âå ChainComplex A ‚Ñï :=\n  (Idempotents.DoldKan.equivalence (C := A)).changeFunctor comparisonN.symm\n\n"}
{"name":"CategoryTheory.Abelian.DoldKan.equivalence_inverse","module":"Mathlib.AlgebraicTopology.DoldKan.Equivalence","initialProofState":"A : Type u_1\ninst‚úù¬π : CategoryTheory.Category.{u_2, u_1} A\ninst‚úù : CategoryTheory.Abelian A\n‚ä¢ Eq CategoryTheory.Abelian.DoldKan.equivalence.inverse CategoryTheory.Abelian.DoldKan.Œì","decl":"theorem equivalence_inverse : (equivalence : SimplicialObject A ‚âå _).inverse = Œì :=\n  rfl\n\n"}
