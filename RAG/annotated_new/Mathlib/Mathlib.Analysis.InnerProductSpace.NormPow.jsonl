{"name":"hasFDerivAt_norm_rpow","module":"Mathlib.Analysis.InnerProductSpace.NormPow","initialProofState":"E : Type u_1\ninst‚úù¬π : NormedAddCommGroup E\ninst‚úù : InnerProductSpace Real E\nx : E\np : Real\nhp : LT.lt 1 p\n‚ä¢ HasFDerivAt (fun x => HPow.hPow (Norm.norm x) p) (HSMul.hSMul (HMul.hMul p (HPow.hPow (Norm.norm x) (HSub.hSub p 2))) ((innerSL Real) x)) x","decl":"theorem hasFDerivAt_norm_rpow (x : E) {p : ‚Ñù} (hp : 1 < p) :\n    HasFDerivAt (fun x : E ‚Ü¶ ‚Äñx‚Äñ ^ p) ((p * ‚Äñx‚Äñ ^ (p - 2)) ‚Ä¢ innerSL ‚Ñù x) x := by\n  by_cases hx : x = 0\n  ¬∑ simp only [hx, norm_zero, map_zero, smul_zero]\n    have h2p : 0 < p - 1 := sub_pos.mpr hp\n    rw [HasFDerivAt, hasFDerivAtFilter_iff_isLittleO]\n    calc (fun x : E ‚Ü¶ ‚Äñx‚Äñ ^ p - ‚Äñ(0 : E)‚Äñ ^ p - 0)\n        = (fun x : E ‚Ü¶ ‚Äñx‚Äñ ^ p) := by simp [zero_lt_one.trans hp |>.ne']\n      _ = (fun x : E ‚Ü¶ ‚Äñx‚Äñ * ‚Äñx‚Äñ ^ (p - 1)) := by\n          ext x\n          rw [‚Üê rpow_one_add' (norm_nonneg x) (by positivity)]\n          ring_nf\n      _ =o[ùìù 0] (fun x : E ‚Ü¶ ‚Äñx‚Äñ * 1) := by\n        refine (isBigO_refl _ _).mul_isLittleO <| (isLittleO_const_iff <| by norm_num).mpr ?_\n        convert continuousAt_id.norm.rpow_const (.inr h2p.le) |>.tendsto\n        simp [h2p.ne']\n      _ =O[ùìù 0] (fun (x : E) ‚Ü¶ x - 0) := by\n        simp_rw [mul_one, isBigO_norm_left (f' := fun x ‚Ü¶ x), sub_zero, isBigO_refl]\n  ¬∑ apply HasStrictFDerivAt.hasFDerivAt\n    convert (hasStrictFDerivAt_norm_sq x).rpow_const (p := p / 2) (by simp [hx]) using 0\n    simp_rw [‚Üê Real.rpow_natCast_mul (norm_nonneg _), ‚Üê Nat.cast_smul_eq_nsmul ‚Ñù, smul_smul]\n    ring_nf -- doesn't close the goal?\n    congr! 2\n    ring\n\n"}
{"name":"differentiable_norm_rpow","module":"Mathlib.Analysis.InnerProductSpace.NormPow","initialProofState":"E : Type u_1\ninst‚úù¬π : NormedAddCommGroup E\ninst‚úù : InnerProductSpace Real E\np : Real\nhp : LT.lt 1 p\n‚ä¢ Differentiable Real fun x => HPow.hPow (Norm.norm x) p","decl":"theorem differentiable_norm_rpow {p : ‚Ñù} (hp : 1 < p) :\n    Differentiable ‚Ñù (fun x : E ‚Ü¶ ‚Äñx‚Äñ ^ p) :=\n  fun x ‚Ü¶ hasFDerivAt_norm_rpow x hp |>.differentiableAt\n\n"}
{"name":"hasDerivAt_norm_rpow","module":"Mathlib.Analysis.InnerProductSpace.NormPow","initialProofState":"x p : Real\nhp : LT.lt 1 p\n‚ä¢ HasDerivAt (fun x => HPow.hPow (Norm.norm x) p) (HMul.hMul (HMul.hMul p (HPow.hPow (Norm.norm x) (HSub.hSub p 2))) x) x","decl":"theorem hasDerivAt_norm_rpow (x : ‚Ñù) {p : ‚Ñù} (hp : 1 < p) :\n    HasDerivAt (fun x : ‚Ñù ‚Ü¶ ‚Äñx‚Äñ ^ p) (p * ‚Äñx‚Äñ ^ (p - 2) * x) x := by\n  convert hasFDerivAt_norm_rpow x hp |>.hasDerivAt using 1; simp\n\n"}
{"name":"hasDerivAt_abs_rpow","module":"Mathlib.Analysis.InnerProductSpace.NormPow","initialProofState":"x p : Real\nhp : LT.lt 1 p\n‚ä¢ HasDerivAt (fun x => HPow.hPow (abs x) p) (HMul.hMul (HMul.hMul p (HPow.hPow (abs x) (HSub.hSub p 2))) x) x","decl":"theorem hasDerivAt_abs_rpow (x : ‚Ñù) {p : ‚Ñù} (hp : 1 < p) :\n    HasDerivAt (fun x : ‚Ñù ‚Ü¶ |x| ^ p) (p * |x| ^ (p - 2) * x) x := by\n  simpa using hasDerivAt_norm_rpow x hp\n\n"}
{"name":"fderiv_norm_rpow","module":"Mathlib.Analysis.InnerProductSpace.NormPow","initialProofState":"E : Type u_1\ninst‚úù¬π : NormedAddCommGroup E\ninst‚úù : InnerProductSpace Real E\nx : E\np : Real\nhp : LT.lt 1 p\n‚ä¢ Eq (fderiv Real (fun x => HPow.hPow (Norm.norm x) p) x) (HSMul.hSMul (HMul.hMul p (HPow.hPow (Norm.norm x) (HSub.hSub p 2))) ((innerSL Real) x))","decl":"theorem fderiv_norm_rpow (x : E) {p : ‚Ñù} (hp : 1 < p) :\n    fderiv ‚Ñù (fun x ‚Ü¶ ‚Äñx‚Äñ ^ p) x = (p * ‚Äñx‚Äñ ^ (p - 2)) ‚Ä¢ innerSL ‚Ñù x :=\n  hasFDerivAt_norm_rpow x hp |>.fderiv\n\n"}
{"name":"Differentiable.fderiv_norm_rpow","module":"Mathlib.Analysis.InnerProductSpace.NormPow","initialProofState":"E : Type u_1\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : InnerProductSpace Real E\nF : Type u_2\ninst‚úù¬π : NormedAddCommGroup F\ninst‚úù : NormedSpace Real F\nf : F ‚Üí E\nhf : Differentiable Real f\nx : F\np : Real\nhp : LT.lt 1 p\n‚ä¢ Eq (fderiv Real (fun x => HPow.hPow (Norm.norm (f x)) p) x) (HSMul.hSMul (HMul.hMul p (HPow.hPow (Norm.norm (f x)) (HSub.hSub p 2))) (((innerSL Real) (f x)).comp (fderiv Real f x)))","decl":"theorem Differentiable.fderiv_norm_rpow {f : F ‚Üí E} (hf : Differentiable ‚Ñù f)\n    {x : F} {p : ‚Ñù} (hp : 1 < p) :\n    fderiv ‚Ñù (fun x ‚Ü¶ ‚Äñf x‚Äñ ^ p) x =\n    (p * ‚Äñf x‚Äñ ^ (p - 2)) ‚Ä¢ (innerSL ‚Ñù (f x)).comp (fderiv ‚Ñù f x) :=\n  hasFDerivAt_norm_rpow (f x) hp |>.comp x (hf x).hasFDerivAt |>.fderiv\n\n"}
{"name":"norm_fderiv_norm_rpow_le","module":"Mathlib.Analysis.InnerProductSpace.NormPow","initialProofState":"E : Type u_1\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : InnerProductSpace Real E\nF : Type u_2\ninst‚úù¬π : NormedAddCommGroup F\ninst‚úù : NormedSpace Real F\nf : F ‚Üí E\nhf : Differentiable Real f\nx : F\np : Real\nhp : LT.lt 1 p\n‚ä¢ LE.le (Norm.norm (fderiv Real (fun x => HPow.hPow (Norm.norm (f x)) p) x)) (HMul.hMul (HMul.hMul p (HPow.hPow (Norm.norm (f x)) (HSub.hSub p 1))) (Norm.norm (fderiv Real f x)))","decl":"theorem norm_fderiv_norm_rpow_le {f : F ‚Üí E} (hf : Differentiable ‚Ñù f) {x : F}\n    {p : ‚Ñù} (hp : 1 < p) :\n    ‚Äñfderiv ‚Ñù (fun x ‚Ü¶ ‚Äñf x‚Äñ ^ p) x‚Äñ ‚â§ p * ‚Äñf x‚Äñ ^ (p - 1) * ‚Äñfderiv ‚Ñù f x‚Äñ := by\n  rw [hf.fderiv_norm_rpow hp, norm_smul, norm_mul]\n  simp_rw [norm_rpow_of_nonneg (norm_nonneg _), norm_norm, norm_eq_abs,\n    abs_eq_self.mpr <| zero_le_one.trans hp.le, mul_assoc]\n  gcongr _ * ?_\n  refine mul_le_mul_of_nonneg_left (ContinuousLinearMap.opNorm_comp_le ..) (by positivity)\n    |>.trans_eq ?_\n  rw [innerSL_apply_norm, ‚Üê mul_assoc, ‚Üê Real.rpow_add_one' (by positivity) (by linarith)]\n  ring_nf\n\n"}
{"name":"norm_fderiv_norm_id_rpow","module":"Mathlib.Analysis.InnerProductSpace.NormPow","initialProofState":"E : Type u_1\ninst‚úù¬π : NormedAddCommGroup E\ninst‚úù : InnerProductSpace Real E\nx : E\np : Real\nhp : LT.lt 1 p\n‚ä¢ Eq (Norm.norm (fderiv Real (fun x => HPow.hPow (Norm.norm x) p) x)) (HMul.hMul p (HPow.hPow (Norm.norm x) (HSub.hSub p 1)))","decl":"theorem norm_fderiv_norm_id_rpow (x : E) {p : ‚Ñù} (hp : 1 < p) :\n    ‚Äñfderiv ‚Ñù (fun x ‚Ü¶ ‚Äñx‚Äñ ^ p) x‚Äñ = p * ‚Äñx‚Äñ ^ (p - 1) := by\n  rw [fderiv_norm_rpow x hp, norm_smul, norm_mul]\n  simp_rw [norm_rpow_of_nonneg (norm_nonneg _), norm_norm, norm_eq_abs,\n    abs_eq_self.mpr <| zero_le_one.trans hp.le, mul_assoc, innerSL_apply_norm]\n  rw [‚Üê Real.rpow_add_one' (by positivity) (by linarith)]\n  ring_nf\n\n"}
{"name":"nnnorm_fderiv_norm_rpow_le","module":"Mathlib.Analysis.InnerProductSpace.NormPow","initialProofState":"E : Type u_1\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : InnerProductSpace Real E\nF : Type u_2\ninst‚úù¬π : NormedAddCommGroup F\ninst‚úù : NormedSpace Real F\nf : F ‚Üí E\nhf : Differentiable Real f\nx : F\np : NNReal\nhp : LT.lt 1 p\n‚ä¢ LE.le (NNNorm.nnnorm (fderiv Real (fun x => HPow.hPow (Norm.norm (f x)) ‚Üëp) x)) (HMul.hMul (HMul.hMul p (HPow.hPow (NNNorm.nnnorm (f x)) (HSub.hSub (‚Üëp) 1))) (NNNorm.nnnorm (fderiv Real f x)))","decl":"theorem nnnorm_fderiv_norm_rpow_le {f : F ‚Üí E} (hf : Differentiable ‚Ñù f)\n    {x : F} {p : ‚Ñù‚â•0} (hp : 1 < p) :\n    ‚Äñfderiv ‚Ñù (fun x ‚Ü¶ ‚Äñf x‚Äñ ^ (p : ‚Ñù)) x‚Äñ‚Çä ‚â§ p * ‚Äñf x‚Äñ‚Çä ^ ((p : ‚Ñù) - 1) * ‚Äñfderiv ‚Ñù f x‚Äñ‚Çä :=\n  norm_fderiv_norm_rpow_le hf hp\n\n"}
{"name":"enorm_fderiv_norm_rpow_le","module":"Mathlib.Analysis.InnerProductSpace.NormPow","initialProofState":"E : Type u_1\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : InnerProductSpace Real E\nF : Type u_2\ninst‚úù¬π : NormedAddCommGroup F\ninst‚úù : NormedSpace Real F\nf : F ‚Üí E\nhf : Differentiable Real f\nx : F\np : NNReal\nhp : LT.lt 1 p\n‚ä¢ LE.le (ENorm.enorm (fderiv Real (fun x => HPow.hPow (Norm.norm (f x)) ‚Üëp) x)) (HMul.hMul (HMul.hMul (‚Üëp) (HPow.hPow (ENorm.enorm (f x)) (HSub.hSub (‚Üëp) 1))) (ENorm.enorm (fderiv Real f x)))","decl":"lemma enorm_fderiv_norm_rpow_le {f : F ‚Üí E} (hf : Differentiable ‚Ñù f)\n    {x : F} {p : ‚Ñù‚â•0} (hp : 1 < p) :\n    ‚Äñfderiv ‚Ñù (fun x ‚Ü¶ ‚Äñf x‚Äñ ^ (p : ‚Ñù)) x‚Äñ‚Çë ‚â§ p * ‚Äñf x‚Äñ‚Çë ^ ((p : ‚Ñù) - 1) * ‚Äñfderiv ‚Ñù f x‚Äñ‚Çë := by\n  simpa [enorm, ‚Üê ENNReal.coe_rpow_of_nonneg _ (sub_nonneg.2 <| NNReal.one_le_coe.2 hp.le),\n    ‚Üê ENNReal.coe_mul] using nnnorm_fderiv_norm_rpow_le hf hp\n\n"}
{"name":"contDiff_norm_rpow","module":"Mathlib.Analysis.InnerProductSpace.NormPow","initialProofState":"E : Type u_1\ninst‚úù¬π : NormedAddCommGroup E\ninst‚úù : InnerProductSpace Real E\np : Real\nhp : LT.lt 1 p\n‚ä¢ ContDiff Real 1 fun x => HPow.hPow (Norm.norm x) p","decl":"theorem contDiff_norm_rpow {p : ‚Ñù} (hp : 1 < p) : ContDiff ‚Ñù 1 (fun x : E ‚Ü¶ ‚Äñx‚Äñ ^ p) := by\n  rw [contDiff_one_iff_fderiv]\n  refine ‚ü®fun x ‚Ü¶ hasFDerivAt_norm_rpow x hp |>.differentiableAt, ?_‚ü©\n  simp_rw [continuous_iff_continuousAt]\n  intro x\n  by_cases hx : x = 0\n  ¬∑ simp_rw [hx, ContinuousAt, fderiv_norm_rpow (0 : E) hp, norm_zero, map_zero, smul_zero]\n    rw [tendsto_zero_iff_norm_tendsto_zero]\n    refine tendsto_of_tendsto_of_tendsto_of_le_of_le (tendsto_const_nhds) ?_\n      (fun _ ‚Ü¶ norm_nonneg _) (fun _ ‚Ü¶ norm_fderiv_norm_id_rpow _ hp |>.le)\n    suffices ContinuousAt (fun x : E ‚Ü¶ p * ‚Äñx‚Äñ ^ (p - 1)) 0  by\n      simpa [ContinuousAt, sub_ne_zero_of_ne hp.ne'] using this\n    fun_prop (discharger := simp [hp.le])\n  ¬∑ simp_rw [funext fun x ‚Ü¶ fderiv_norm_rpow (E := E) (x := x) hp]\n    fun_prop (discharger := simp [hx])\n\n"}
{"name":"ContDiff.norm_rpow","module":"Mathlib.Analysis.InnerProductSpace.NormPow","initialProofState":"E : Type u_1\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : InnerProductSpace Real E\nF : Type u_2\ninst‚úù¬π : NormedAddCommGroup F\ninst‚úù : NormedSpace Real F\nf : F ‚Üí E\nhf : ContDiff Real 1 f\np : Real\nhp : LT.lt 1 p\n‚ä¢ ContDiff Real 1 fun x => HPow.hPow (Norm.norm (f x)) p","decl":"theorem ContDiff.norm_rpow {f : F ‚Üí E} (hf : ContDiff ‚Ñù 1 f) {p : ‚Ñù} (hp : 1 < p) :\n    ContDiff ‚Ñù 1 (fun x ‚Ü¶ ‚Äñf x‚Äñ ^ p) :=\n  contDiff_norm_rpow hp |>.comp hf\n\n"}
{"name":"Differentiable.norm_rpow","module":"Mathlib.Analysis.InnerProductSpace.NormPow","initialProofState":"E : Type u_1\ninst‚úù¬≥ : NormedAddCommGroup E\ninst‚úù¬≤ : InnerProductSpace Real E\nF : Type u_2\ninst‚úù¬π : NormedAddCommGroup F\ninst‚úù : NormedSpace Real F\nf : F ‚Üí E\nhf : Differentiable Real f\np : Real\nhp : LT.lt 1 p\n‚ä¢ Differentiable Real fun x => HPow.hPow (Norm.norm (f x)) p","decl":"theorem Differentiable.norm_rpow {f : F ‚Üí E} (hf : Differentiable ‚Ñù f) {p : ‚Ñù} (hp : 1 < p) :\n    Differentiable ‚Ñù (fun x ‚Ü¶ ‚Äñf x‚Äñ ^ p) :=\n  contDiff_norm_rpow hp |>.differentiable le_rfl |>.comp hf\n\n"}
