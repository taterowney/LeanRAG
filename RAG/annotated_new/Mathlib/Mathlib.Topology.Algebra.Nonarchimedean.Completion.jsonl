{"name":"instNonarchimedeanAddGroupCompletion","module":"Mathlib.Topology.Algebra.Nonarchimedean.Completion","initialProofState":"G : Type u_1\ninst‚úù¬≥ : AddGroup G\ninst‚úù¬≤ : UniformSpace G\ninst‚úù¬π : UniformAddGroup G\ninst‚úù : NonarchimedeanAddGroup G\n‚ä¢ NonarchimedeanAddGroup (UniformSpace.Completion G)","decl":"/-- The completion of a nonarchimedean additive group is a nonarchimedean additive group. -/\ninstance {G : Type*} [AddGroup G] [UniformSpace G] [UniformAddGroup G] [NonarchimedeanAddGroup G] :\n    NonarchimedeanAddGroup (Completion G) where\n  is_nonarchimedean := by\n    /- Let `U` be a neighborhood of `0` in `Completion G`. We wish to show that `U` contains an open\n    additive subgroup of `Completion G`. -/\n    intro U hU\n    /- Since `Completion G` is regular, there is a closed neighborhood `C` of `0` which is\n    contained in `U`. -/\n    obtain ‚ü®C, ‚ü®hC, C_closed‚ü©, C_subset_U‚ü© := (closed_nhds_basis 0).mem_iff.mp hU\n    /- By continuity, the preimage of `C` in `G`, written `toCompl ‚Åª¬π' U'`,\n    is a neighborhood of `0`. -/\n    have : toCompl ‚Åª¬π' C ‚àà ùìù 0 :=\n      continuous_toCompl.continuousAt.preimage_mem_nhds (by rwa [map_zero])\n    /- Therefore, since `G` is nonarchimedean, there exists an open subgroup `W` of `G` that is\n    contained within `toCompl ‚Åª¬π' C`. -/\n    obtain ‚ü®W, hCW‚ü© := NonarchimedeanAddGroup.is_nonarchimedean (toCompl ‚Åª¬π' C) this\n    /- Now, let `V = (W.map toCompl).topologicalClosure` be the result of mapping `W` back to\n    `Completion G` and taking the topological closure. -/\n    let V : Set (Completion G) := (W.map toCompl).topologicalClosure\n    /- We claim that this set `V` satisfies the\n    desired properties. There are three conditions to check:\n\n    1. `V` is a subgroup of `Completion G`.\n    2. `V` is open.\n    3. `V ‚äÜ U`.\n\n    The first condition follows directly from the fact that the topological closure of a subgroup\n    is a subgroup. Now, let us check that `V` is open. -/\n    have : IsOpen V := by\n      /- Since `V` is a subgroup of `Completion G`, it suffices to show that it is a neighborhood of\n      `0` in `Completion G`. This follows from the fact that `toCompl : G ‚Üí Completion G` is dense\n      inducing and `W` is a neighborhood of `0` in `G`. -/\n      apply isOpen_of_mem_nhds (g := 0)\n      apply (isDenseInducing_toCompl _).closure_image_mem_nhds\n      exact mem_nhds_zero W\n    use ‚ü®_, this‚ü©\n    /- Finally, it remains to show that `V ‚äÜ U`. It suffices to show that `V ‚äÜ C`, which\n    follows from the fact that `W ‚äÜ toCompl ‚Åª¬π' C` and `C` is closed. -/\n    suffices V ‚äÜ C from this.trans C_subset_U\n    exact closure_minimal (Set.image_subset_iff.mpr hCW) C_closed\n\n"}
{"name":"instNonarchimedeanRingCompletion","module":"Mathlib.Topology.Algebra.Nonarchimedean.Completion","initialProofState":"R : Type u_1\ninst‚úù‚Å¥ : Ring R\ninst‚úù¬≥ : UniformSpace R\ninst‚úù¬≤ : TopologicalRing R\ninst‚úù¬π : UniformAddGroup R\ninst‚úù : NonarchimedeanRing R\n‚ä¢ NonarchimedeanRing (UniformSpace.Completion R)","decl":"/-- The completion of a nonarchimedean ring is a nonarchimedean ring. -/\ninstance {R : Type*} [Ring R] [UniformSpace R] [TopologicalRing R] [UniformAddGroup R]\n    [NonarchimedeanRing R] :\n    NonarchimedeanRing (Completion R) where\n  is_nonarchimedean := NonarchimedeanAddGroup.is_nonarchimedean\n"}
