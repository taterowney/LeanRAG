{"name":"uniqueMDiffWithinAt_univ","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹ : TopologicalSpace M\ninst✝ : ChartedSpace H M\nx : M\n⊢ UniqueMDiffWithinAt I Set.univ x","decl":"theorem uniqueMDiffWithinAt_univ : UniqueMDiffWithinAt I univ x := by\n  unfold UniqueMDiffWithinAt\n  simp only [preimage_univ, univ_inter]\n  exact I.uniqueDiffOn _ (mem_range_self _)\n\n"}
{"name":"uniqueMDiffWithinAt_iff_inter_range","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹ : TopologicalSpace M\ninst✝ : ChartedSpace H M\ns : Set M\nx : M\n⊢ Iff (UniqueMDiffWithinAt I s x) (UniqueDiffWithinAt 𝕜 (Inter.inter (Set.preimage (↑(extChartAt I x).symm) s) (Set.range ↑I)) (↑(extChartAt I x) x))","decl":"theorem uniqueMDiffWithinAt_iff_inter_range {s : Set M} {x : M} :\n    UniqueMDiffWithinAt I s x ↔\n      UniqueDiffWithinAt 𝕜 ((extChartAt I x).symm ⁻¹' s ∩ range I)\n        ((extChartAt I x) x) := Iff.rfl\n\n"}
{"name":"uniqueMDiffWithinAt_iff","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹ : TopologicalSpace M\ninst✝ : ChartedSpace H M\ns : Set M\nx : M\n⊢ Iff (UniqueMDiffWithinAt I s x) (UniqueDiffWithinAt 𝕜 (Inter.inter (Set.preimage (↑(extChartAt I x).symm) s) (extChartAt I x).target) (↑(extChartAt I x) x))","decl":"theorem uniqueMDiffWithinAt_iff {s : Set M} {x : M} :\n    UniqueMDiffWithinAt I s x ↔\n      UniqueDiffWithinAt 𝕜 ((extChartAt I x).symm ⁻¹' s ∩ (extChartAt I x).target)\n        ((extChartAt I x) x) := by\n  apply uniqueDiffWithinAt_congr\n  rw [nhdsWithin_inter, nhdsWithin_inter, nhdsWithin_extChartAt_target_eq]\n\n"}
{"name":"UniqueMDiffWithinAt.mono_nhds","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹ : TopologicalSpace M\ninst✝ : ChartedSpace H M\ns t : Set M\nx : M\nhs : UniqueMDiffWithinAt I s x\nht : LE.le (nhdsWithin x s) (nhdsWithin x t)\n⊢ UniqueMDiffWithinAt I t x","decl":"nonrec theorem UniqueMDiffWithinAt.mono_nhds {s t : Set M} {x : M} (hs : UniqueMDiffWithinAt I s x)\n    (ht : 𝓝[s] x ≤ 𝓝[t] x) : UniqueMDiffWithinAt I t x :=\n  hs.mono_nhds <| by simpa only [← map_extChartAt_nhdsWithin] using Filter.map_mono ht\n\n"}
{"name":"UniqueMDiffWithinAt.mono_of_mem_nhdsWithin","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹ : TopologicalSpace M\ninst✝ : ChartedSpace H M\ns t : Set M\nx : M\nhs : UniqueMDiffWithinAt I s x\nht : Membership.mem (nhdsWithin x s) t\n⊢ UniqueMDiffWithinAt I t x","decl":"theorem UniqueMDiffWithinAt.mono_of_mem_nhdsWithin {s t : Set M} {x : M}\n    (hs : UniqueMDiffWithinAt I s x) (ht : t ∈ 𝓝[s] x) : UniqueMDiffWithinAt I t x :=\n  hs.mono_nhds (nhdsWithin_le_iff.2 ht)\n\n"}
{"name":"UniqueMDiffWithinAt.mono_of_mem","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹ : TopologicalSpace M\ninst✝ : ChartedSpace H M\ns t : Set M\nx : M\nhs : UniqueMDiffWithinAt I s x\nht : Membership.mem (nhdsWithin x s) t\n⊢ UniqueMDiffWithinAt I t x","decl":"@[deprecated (since := \"2024-10-31\")]\nalias UniqueMDiffWithinAt.mono_of_mem := UniqueMDiffWithinAt.mono_of_mem_nhdsWithin\n\n"}
{"name":"UniqueMDiffWithinAt.mono","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹ : TopologicalSpace M\ninst✝ : ChartedSpace H M\nx : M\ns t : Set M\nh : UniqueMDiffWithinAt I s x\nst : HasSubset.Subset s t\n⊢ UniqueMDiffWithinAt I t x","decl":"theorem UniqueMDiffWithinAt.mono (h : UniqueMDiffWithinAt I s x) (st : s ⊆ t) :\n    UniqueMDiffWithinAt I t x :=\n  UniqueDiffWithinAt.mono h <| inter_subset_inter (preimage_mono st) (Subset.refl _)\n\n"}
{"name":"UniqueMDiffWithinAt.inter'","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹ : TopologicalSpace M\ninst✝ : ChartedSpace H M\nx : M\ns t : Set M\nhs : UniqueMDiffWithinAt I s x\nht : Membership.mem (nhdsWithin x s) t\n⊢ UniqueMDiffWithinAt I (Inter.inter s t) x","decl":"theorem UniqueMDiffWithinAt.inter' (hs : UniqueMDiffWithinAt I s x) (ht : t ∈ 𝓝[s] x) :\n    UniqueMDiffWithinAt I (s ∩ t) x :=\n  hs.mono_of_mem_nhdsWithin (Filter.inter_mem self_mem_nhdsWithin ht)\n\n"}
{"name":"UniqueMDiffWithinAt.inter","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹ : TopologicalSpace M\ninst✝ : ChartedSpace H M\nx : M\ns t : Set M\nhs : UniqueMDiffWithinAt I s x\nht : Membership.mem (nhds x) t\n⊢ UniqueMDiffWithinAt I (Inter.inter s t) x","decl":"theorem UniqueMDiffWithinAt.inter (hs : UniqueMDiffWithinAt I s x) (ht : t ∈ 𝓝 x) :\n    UniqueMDiffWithinAt I (s ∩ t) x :=\n  hs.inter' (nhdsWithin_le_nhds ht)\n\n"}
{"name":"IsOpen.uniqueMDiffWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹ : TopologicalSpace M\ninst✝ : ChartedSpace H M\nx : M\ns : Set M\nhs : IsOpen s\nxs : Membership.mem s x\n⊢ UniqueMDiffWithinAt I s x","decl":"theorem IsOpen.uniqueMDiffWithinAt (hs : IsOpen s) (xs : x ∈ s) : UniqueMDiffWithinAt I s x :=\n  (uniqueMDiffWithinAt_univ I).mono_of_mem_nhdsWithin <| nhdsWithin_le_nhds <| hs.mem_nhds xs\n\n"}
{"name":"UniqueMDiffOn.inter","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹ : TopologicalSpace M\ninst✝ : ChartedSpace H M\ns t : Set M\nhs : UniqueMDiffOn I s\nht : IsOpen t\n⊢ UniqueMDiffOn I (Inter.inter s t)","decl":"theorem UniqueMDiffOn.inter (hs : UniqueMDiffOn I s) (ht : IsOpen t) : UniqueMDiffOn I (s ∩ t) :=\n  fun _x hx => UniqueMDiffWithinAt.inter (hs _ hx.1) (ht.mem_nhds hx.2)\n\n"}
{"name":"IsOpen.uniqueMDiffOn","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹ : TopologicalSpace M\ninst✝ : ChartedSpace H M\ns : Set M\nhs : IsOpen s\n⊢ UniqueMDiffOn I s","decl":"theorem IsOpen.uniqueMDiffOn (hs : IsOpen s) : UniqueMDiffOn I s :=\n  fun _x hx => hs.uniqueMDiffWithinAt hx\n\n"}
{"name":"uniqueMDiffOn_univ","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹ : TopologicalSpace M\ninst✝ : ChartedSpace H M\n⊢ UniqueMDiffOn I Set.univ","decl":"theorem uniqueMDiffOn_univ : UniqueMDiffOn I (univ : Set M) :=\n  isOpen_univ.uniqueMDiffOn\n\n"}
{"name":"UniqueMDiffWithinAt.prod","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nx : M\ny : M'\ns : Set M\nt : Set M'\nhs : UniqueMDiffWithinAt I s x\nht : UniqueMDiffWithinAt I' t y\n⊢ UniqueMDiffWithinAt (I.prod I') (SProd.sprod s t) { fst := x, snd := y }","decl":"nonrec theorem UniqueMDiffWithinAt.prod {x : M} {y : M'} {s t} (hs : UniqueMDiffWithinAt I s x)\n    (ht : UniqueMDiffWithinAt I' t y) : UniqueMDiffWithinAt (I.prod I') (s ×ˢ t) (x, y) := by\n  refine (hs.prod ht).mono ?_\n  rw [ModelWithCorners.range_prod, ← prod_inter_prod]\n  rfl\n\n"}
{"name":"UniqueMDiffOn.prod","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\ns : Set M\nt : Set M'\nhs : UniqueMDiffOn I s\nht : UniqueMDiffOn I' t\n⊢ UniqueMDiffOn (I.prod I') (SProd.sprod s t)","decl":"theorem UniqueMDiffOn.prod {s : Set M} {t : Set M'} (hs : UniqueMDiffOn I s)\n    (ht : UniqueMDiffOn I' t) : UniqueMDiffOn (I.prod I') (s ×ˢ t) := fun x h ↦\n  (hs x.1 h.1).prod (ht x.2 h.2)\n\n"}
{"name":"MDifferentiableWithinAt.mono","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns t : Set M\nhst : HasSubset.Subset s t\nh : MDifferentiableWithinAt I I' f t x\n⊢ MDifferentiableWithinAt I I' f s x","decl":"theorem MDifferentiableWithinAt.mono (hst : s ⊆ t) (h : MDifferentiableWithinAt I I' f t x) :\n    MDifferentiableWithinAt I I' f s x :=\n  ⟨ContinuousWithinAt.mono h.1 hst, DifferentiableWithinAt.mono\n    h.differentiableWithinAt_writtenInExtChartAt\n    (inter_subset_inter_left _ (preimage_mono hst))⟩\n\n"}
{"name":"mdifferentiableWithinAt_univ","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\n⊢ Iff (MDifferentiableWithinAt I I' f Set.univ x) (MDifferentiableAt I I' f x)","decl":"theorem mdifferentiableWithinAt_univ :\n    MDifferentiableWithinAt I I' f univ x ↔ MDifferentiableAt I I' f x := by\n  simp_rw [MDifferentiableWithinAt, MDifferentiableAt, ChartedSpace.LiftPropAt]\n\n"}
{"name":"mdifferentiableWithinAt_inter","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns t : Set M\nht : Membership.mem (nhds x) t\n⊢ Iff (MDifferentiableWithinAt I I' f (Inter.inter s t) x) (MDifferentiableWithinAt I I' f s x)","decl":"theorem mdifferentiableWithinAt_inter (ht : t ∈ 𝓝 x) :\n    MDifferentiableWithinAt I I' f (s ∩ t) x ↔ MDifferentiableWithinAt I I' f s x := by\n  rw [MDifferentiableWithinAt, MDifferentiableWithinAt,\n    differentiableWithinAt_localInvariantProp.liftPropWithinAt_inter ht]\n\n"}
{"name":"mdifferentiableWithinAt_inter'","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns t : Set M\nht : Membership.mem (nhdsWithin x s) t\n⊢ Iff (MDifferentiableWithinAt I I' f (Inter.inter s t) x) (MDifferentiableWithinAt I I' f s x)","decl":"theorem mdifferentiableWithinAt_inter' (ht : t ∈ 𝓝[s] x) :\n    MDifferentiableWithinAt I I' f (s ∩ t) x ↔ MDifferentiableWithinAt I I' f s x := by\n  rw [MDifferentiableWithinAt, MDifferentiableWithinAt,\n    differentiableWithinAt_localInvariantProp.liftPropWithinAt_inter' ht]\n\n"}
{"name":"MDifferentiableAt.mdifferentiableWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nh : MDifferentiableAt I I' f x\n⊢ MDifferentiableWithinAt I I' f s x","decl":"theorem MDifferentiableAt.mdifferentiableWithinAt (h : MDifferentiableAt I I' f x) :\n    MDifferentiableWithinAt I I' f s x :=\n  MDifferentiableWithinAt.mono (subset_univ _) (mdifferentiableWithinAt_univ.2 h)\n\n"}
{"name":"MDifferentiableWithinAt.mdifferentiableAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nh : MDifferentiableWithinAt I I' f s x\nhs : Membership.mem (nhds x) s\n⊢ MDifferentiableAt I I' f x","decl":"theorem MDifferentiableWithinAt.mdifferentiableAt (h : MDifferentiableWithinAt I I' f s x)\n    (hs : s ∈ 𝓝 x) : MDifferentiableAt I I' f x := by\n  have : s = univ ∩ s := by rw [univ_inter]\n  rwa [this, mdifferentiableWithinAt_inter hs, mdifferentiableWithinAt_univ] at h\n\n"}
{"name":"MDifferentiableOn.mono","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\ns t : Set M\nh : MDifferentiableOn I I' f t\nst : HasSubset.Subset s t\n⊢ MDifferentiableOn I I' f s","decl":"theorem MDifferentiableOn.mono (h : MDifferentiableOn I I' f t) (st : s ⊆ t) :\n    MDifferentiableOn I I' f s := fun x hx => (h x (st hx)).mono st\n\n"}
{"name":"mdifferentiableOn_univ","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\n⊢ Iff (MDifferentiableOn I I' f Set.univ) (MDifferentiable I I' f)","decl":"theorem mdifferentiableOn_univ : MDifferentiableOn I I' f univ ↔ MDifferentiable I I' f := by\n  simp only [MDifferentiableOn, mdifferentiableWithinAt_univ, mfld_simps]; rfl\n\n"}
{"name":"MDifferentiableOn.mdifferentiableAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nh : MDifferentiableOn I I' f s\nhx : Membership.mem (nhds x) s\n⊢ MDifferentiableAt I I' f x","decl":"theorem MDifferentiableOn.mdifferentiableAt (h : MDifferentiableOn I I' f s) (hx : s ∈ 𝓝 x) :\n    MDifferentiableAt I I' f x :=\n  (h x (mem_of_mem_nhds hx)).mdifferentiableAt hx\n\n"}
{"name":"MDifferentiable.mdifferentiableOn","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\ns : Set M\nh : MDifferentiable I I' f\n⊢ MDifferentiableOn I I' f s","decl":"theorem MDifferentiable.mdifferentiableOn (h : MDifferentiable I I' f) :\n    MDifferentiableOn I I' f s :=\n  (mdifferentiableOn_univ.2 h).mono (subset_univ _)\n\n"}
{"name":"mdifferentiableOn_of_locally_mdifferentiableOn","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\ns : Set M\nh : ∀ (x : M), Membership.mem s x → Exists fun u => And (IsOpen u) (And (Membership.mem u x) (MDifferentiableOn I I' f (Inter.inter s u)))\n⊢ MDifferentiableOn I I' f s","decl":"theorem mdifferentiableOn_of_locally_mdifferentiableOn\n    (h : ∀ x ∈ s, ∃ u, IsOpen u ∧ x ∈ u ∧ MDifferentiableOn I I' f (s ∩ u)) :\n    MDifferentiableOn I I' f s := by\n  intro x xs\n  rcases h x xs with ⟨t, t_open, xt, ht⟩\n  exact (mdifferentiableWithinAt_inter (t_open.mem_nhds xt)).1 (ht x ⟨xs, xt⟩)\n\n"}
{"name":"MDifferentiable.mdifferentiableAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\nhf : MDifferentiable I I' f\n⊢ MDifferentiableAt I I' f x","decl":"theorem MDifferentiable.mdifferentiableAt (hf : MDifferentiable I I' f) :\n    MDifferentiableAt I I' f x :=\n  hf x\n\n"}
{"name":"mdifferentiableWithinAt_iff_target_inter","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\ns : Set M\nx : M\n⊢ Iff (MDifferentiableWithinAt I I' f s x) (And (ContinuousWithinAt f s x) (DifferentiableWithinAt 𝕜 (writtenInExtChartAt I I' x f) (Inter.inter (extChartAt I x).target (Set.preimage (↑(extChartAt I x).symm) s)) (↑(extChartAt I x) x)))","decl":"theorem mdifferentiableWithinAt_iff_target_inter {f : M → M'} {s : Set M} {x : M} :\n    MDifferentiableWithinAt I I' f s x ↔\n      ContinuousWithinAt f s x ∧\n        DifferentiableWithinAt 𝕜 (writtenInExtChartAt I I' x f)\n          ((extChartAt I x).target ∩ (extChartAt I x).symm ⁻¹' s) ((extChartAt I x) x) := by\n  rw [mdifferentiableWithinAt_iff']\n  refine and_congr Iff.rfl (exists_congr fun f' => ?_)\n  rw [inter_comm]\n  simp only [HasFDerivWithinAt, nhdsWithin_inter, nhdsWithin_extChartAt_target_eq]\n\n"}
{"name":"mdifferentiableWithinAt_iff","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\n⊢ Iff (MDifferentiableWithinAt I I' f s x) (And (ContinuousWithinAt f s x) (DifferentiableWithinAt 𝕜 (Function.comp (↑(extChartAt I' (f x))) (Function.comp f ↑(extChartAt I x).symm)) (Inter.inter (Set.preimage (↑(extChartAt I x).symm) s) (Set.range ↑I)) (↑(extChartAt I x) x)))","decl":"/-- One can reformulate smoothness within a set at a point as continuity within this set at this\npoint, and smoothness in the corresponding extended chart. -/\ntheorem mdifferentiableWithinAt_iff :\n    MDifferentiableWithinAt I I' f s x ↔\n      ContinuousWithinAt f s x ∧\n        DifferentiableWithinAt 𝕜 (extChartAt I' (f x) ∘ f ∘ (extChartAt I x).symm)\n          ((extChartAt I x).symm ⁻¹' s ∩ range I) (extChartAt I x x) := by\n  simp_rw [MDifferentiableWithinAt, ChartedSpace.liftPropWithinAt_iff']; rfl\n\n"}
{"name":"mdifferentiableWithinAt_iff_target_inter'","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\n⊢ Iff (MDifferentiableWithinAt I I' f s x) (And (ContinuousWithinAt f s x) (DifferentiableWithinAt 𝕜 (Function.comp (↑(extChartAt I' (f x))) (Function.comp f ↑(extChartAt I x).symm)) (Inter.inter (extChartAt I x).target (Set.preimage (↑(extChartAt I x).symm) (Inter.inter s (Set.preimage f (extChartAt I' (f x)).source)))) (↑(extChartAt I x) x)))","decl":"/-- One can reformulate smoothness within a set at a point as continuity within this set at this\npoint, and smoothness in the corresponding extended chart. This form states smoothness of `f`\nwritten in such a way that the set is restricted to lie within the domain/codomain of the\ncorresponding charts.\nEven though this expression is more complicated than the one in `mdifferentiableWithinAt_iff`, it is\na smaller set, but their germs at `extChartAt I x x` are equal. It is sometimes useful to rewrite\nusing this in the goal.\n-/\ntheorem mdifferentiableWithinAt_iff_target_inter' :\n    MDifferentiableWithinAt I I' f s x ↔\n      ContinuousWithinAt f s x ∧\n        DifferentiableWithinAt 𝕜 (extChartAt I' (f x) ∘ f ∘ (extChartAt I x).symm)\n          ((extChartAt I x).target ∩\n            (extChartAt I x).symm ⁻¹' (s ∩ f ⁻¹' (extChartAt I' (f x)).source))\n          (extChartAt I x x) := by\n  simp only [MDifferentiableWithinAt, liftPropWithinAt_iff']\n  exact and_congr_right fun hc => differentiableWithinAt_congr_nhds <|\n    hc.nhdsWithin_extChartAt_symm_preimage_inter_range\n\n"}
{"name":"mdifferentiableWithinAt_iff_target","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\n⊢ Iff (MDifferentiableWithinAt I I' f s x) (And (ContinuousWithinAt f s x) (MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 E') (Function.comp (↑(extChartAt I' (f x))) f) s x))","decl":"/-- One can reformulate smoothness within a set at a point as continuity within this set at this\npoint, and smoothness in the corresponding extended chart in the target. -/\ntheorem mdifferentiableWithinAt_iff_target :\n    MDifferentiableWithinAt I I' f s x ↔\n      ContinuousWithinAt f s x ∧\n      MDifferentiableWithinAt I 𝓘(𝕜, E') (extChartAt I' (f x) ∘ f) s x := by\n  simp_rw [MDifferentiableWithinAt, liftPropWithinAt_iff', ← and_assoc]\n  have cont :\n    ContinuousWithinAt f s x ∧ ContinuousWithinAt (extChartAt I' (f x) ∘ f) s x ↔\n        ContinuousWithinAt f s x :=\n      and_iff_left_of_imp <| (continuousAt_extChartAt _).comp_continuousWithinAt\n  simp_rw [cont, DifferentiableWithinAtProp, extChartAt, PartialHomeomorph.extend,\n    PartialEquiv.coe_trans,\n    ModelWithCorners.toPartialEquiv_coe, PartialHomeomorph.coe_coe, modelWithCornersSelf_coe,\n    chartAt_self_eq, PartialHomeomorph.refl_apply]\n  rfl\n\n"}
{"name":"mdifferentiableAt_iff_target","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\n⊢ Iff (MDifferentiableAt I I' f x) (And (ContinuousAt f x) (MDifferentiableAt I (modelWithCornersSelf 𝕜 E') (Function.comp (↑(extChartAt I' (f x))) f) x))","decl":"theorem mdifferentiableAt_iff_target {x : M} :\n    MDifferentiableAt I I' f x ↔\n      ContinuousAt f x ∧ MDifferentiableAt I 𝓘(𝕜, E') (extChartAt I' (f x) ∘ f) x := by\n  rw [← mdifferentiableWithinAt_univ, ← mdifferentiableWithinAt_univ,\n    mdifferentiableWithinAt_iff_target, continuousWithinAt_univ]\n\n"}
{"name":"mdifferentiableWithinAt_iff_source_of_mem_maximalAtlas","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹¹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁰ : NormedAddCommGroup E\ninst✝⁹ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁸ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁷ : TopologicalSpace M\ninst✝⁶ : ChartedSpace H M\nE' : Type u_5\ninst✝⁵ : NormedAddCommGroup E'\ninst✝⁴ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝³ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝² : TopologicalSpace M'\ninst✝¹ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\ne : PartialHomeomorph M H\ninst✝ : IsManifold I 1 M\nhe : Membership.mem (IsManifold.maximalAtlas I 1 M) e\nhx : Membership.mem e.source x\n⊢ Iff (MDifferentiableWithinAt I I' f s x) (MDifferentiableWithinAt (modelWithCornersSelf 𝕜 E) I' (Function.comp f ↑(e.extend I).symm) (Inter.inter (Set.preimage (↑(e.extend I).symm) s) (Set.range ↑I)) (↑(e.extend I) x))","decl":"theorem mdifferentiableWithinAt_iff_source_of_mem_maximalAtlas\n    [IsManifold I 1 M] (he : e ∈ maximalAtlas I 1 M) (hx : x ∈ e.source) :\n    MDifferentiableWithinAt I I' f s x ↔\n      MDifferentiableWithinAt 𝓘(𝕜, E) I' (f ∘ (e.extend I).symm) ((e.extend I).symm ⁻¹' s ∩ range I)\n        (e.extend I x) := by\n  have h2x := hx; rw [← e.extend_source (I := I)] at h2x\n  simp_rw [MDifferentiableWithinAt,\n    differentiableWithinAt_localInvariantProp.liftPropWithinAt_indep_chart_source he hx,\n    StructureGroupoid.liftPropWithinAt_self_source,\n    e.extend_symm_continuousWithinAt_comp_right_iff, differentiableWithinAtProp_self_source,\n    DifferentiableWithinAtProp, Function.comp, e.left_inv hx, (e.extend I).left_inv h2x]\n  rfl\n\n"}
{"name":"mdifferentiableWithinAt_iff_source_of_mem_source","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹¹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁰ : NormedAddCommGroup E\ninst✝⁹ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁸ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁷ : TopologicalSpace M\ninst✝⁶ : ChartedSpace H M\nE' : Type u_5\ninst✝⁵ : NormedAddCommGroup E'\ninst✝⁴ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝³ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝² : TopologicalSpace M'\ninst✝¹ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\ninst✝ : IsManifold I 1 M\nx' : M\nhx' : Membership.mem (chartAt H x).source x'\n⊢ Iff (MDifferentiableWithinAt I I' f s x') (MDifferentiableWithinAt (modelWithCornersSelf 𝕜 E) I' (Function.comp f ↑(extChartAt I x).symm) (Inter.inter (Set.preimage (↑(extChartAt I x).symm) s) (Set.range ↑I)) (↑(extChartAt I x) x'))","decl":"theorem mdifferentiableWithinAt_iff_source_of_mem_source\n    [IsManifold I 1 M] {x' : M} (hx' : x' ∈ (chartAt H x).source) :\n    MDifferentiableWithinAt I I' f s x' ↔\n      MDifferentiableWithinAt 𝓘(𝕜, E) I' (f ∘ (extChartAt I x).symm)\n        ((extChartAt I x).symm ⁻¹' s ∩ range I) (extChartAt I x x') :=\n  mdifferentiableWithinAt_iff_source_of_mem_maximalAtlas (chart_mem_maximalAtlas x) hx'\n\n"}
{"name":"mdifferentiableAt_iff_source_of_mem_source","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹¹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁰ : NormedAddCommGroup E\ninst✝⁹ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁸ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁷ : TopologicalSpace M\ninst✝⁶ : ChartedSpace H M\nE' : Type u_5\ninst✝⁵ : NormedAddCommGroup E'\ninst✝⁴ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝³ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝² : TopologicalSpace M'\ninst✝¹ : ChartedSpace H' M'\nf : M → M'\nx : M\ninst✝ : IsManifold I 1 M\nx' : M\nhx' : Membership.mem (chartAt H x).source x'\n⊢ Iff (MDifferentiableAt I I' f x') (MDifferentiableWithinAt (modelWithCornersSelf 𝕜 E) I' (Function.comp f ↑(extChartAt I x).symm) (Set.range ↑I) (↑(extChartAt I x) x'))","decl":"theorem mdifferentiableAt_iff_source_of_mem_source\n    [IsManifold I 1 M] {x' : M} (hx' : x' ∈ (chartAt H x).source) :\n    MDifferentiableAt I I' f x' ↔\n      MDifferentiableWithinAt 𝓘(𝕜, E) I' (f ∘ (extChartAt I x).symm) (range I)\n        (extChartAt I x x') := by\n  simp_rw [← mdifferentiableWithinAt_univ, mdifferentiableWithinAt_iff_source_of_mem_source hx',\n    preimage_univ, univ_inter]\n\n"}
{"name":"mdifferentiableWithinAt_iff_target_of_mem_source","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹¹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁰ : NormedAddCommGroup E\ninst✝⁹ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁸ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁷ : TopologicalSpace M\ninst✝⁶ : ChartedSpace H M\nE' : Type u_5\ninst✝⁵ : NormedAddCommGroup E'\ninst✝⁴ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝³ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝² : TopologicalSpace M'\ninst✝¹ : ChartedSpace H' M'\nf : M → M'\ns : Set M\ninst✝ : IsManifold I' 1 M'\nx : M\ny : M'\nhy : Membership.mem (chartAt H' y).source (f x)\n⊢ Iff (MDifferentiableWithinAt I I' f s x) (And (ContinuousWithinAt f s x) (MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 E') (Function.comp (↑(extChartAt I' y)) f) s x))","decl":"theorem mdifferentiableWithinAt_iff_target_of_mem_source\n    [IsManifold I' 1 M'] {x : M} {y : M'} (hy : f x ∈ (chartAt H' y).source) :\n    MDifferentiableWithinAt I I' f s x ↔\n      ContinuousWithinAt f s x ∧ MDifferentiableWithinAt I 𝓘(𝕜, E') (extChartAt I' y ∘ f) s x := by\n  simp_rw [MDifferentiableWithinAt]\n  rw [differentiableWithinAt_localInvariantProp.liftPropWithinAt_indep_chart_target\n      (chart_mem_maximalAtlas y) hy,\n    and_congr_right]\n  intro hf\n  simp_rw [StructureGroupoid.liftPropWithinAt_self_target]\n  simp_rw [((chartAt H' y).continuousAt hy).comp_continuousWithinAt hf]\n  rw [← extChartAt_source I'] at hy\n  simp_rw [(continuousAt_extChartAt' hy).comp_continuousWithinAt hf]\n  rfl\n\n"}
{"name":"mdifferentiableAt_iff_target_of_mem_source","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹¹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁰ : NormedAddCommGroup E\ninst✝⁹ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁸ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁷ : TopologicalSpace M\ninst✝⁶ : ChartedSpace H M\nE' : Type u_5\ninst✝⁵ : NormedAddCommGroup E'\ninst✝⁴ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝³ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝² : TopologicalSpace M'\ninst✝¹ : ChartedSpace H' M'\nf : M → M'\ninst✝ : IsManifold I' 1 M'\nx : M\ny : M'\nhy : Membership.mem (chartAt H' y).source (f x)\n⊢ Iff (MDifferentiableAt I I' f x) (And (ContinuousAt f x) (MDifferentiableAt I (modelWithCornersSelf 𝕜 E') (Function.comp (↑(extChartAt I' y)) f) x))","decl":"theorem mdifferentiableAt_iff_target_of_mem_source\n    [IsManifold I' 1 M'] {x : M} {y : M'} (hy : f x ∈ (chartAt H' y).source) :\n    MDifferentiableAt I I' f x ↔\n      ContinuousAt f x ∧ MDifferentiableAt I 𝓘(𝕜, E') (extChartAt I' y ∘ f) x := by\n  rw [← mdifferentiableWithinAt_univ, mdifferentiableWithinAt_iff_target_of_mem_source hy,\n    continuousWithinAt_univ, ← mdifferentiableWithinAt_univ]\n\n"}
{"name":"mdifferentiableWithinAt_iff_of_mem_maximalAtlas","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹¹ : NormedAddCommGroup E\ninst✝¹⁰ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁹ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁸ : TopologicalSpace M\ninst✝⁷ : ChartedSpace H M\nE' : Type u_5\ninst✝⁶ : NormedAddCommGroup E'\ninst✝⁵ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁴ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝³ : TopologicalSpace M'\ninst✝² : ChartedSpace H' M'\nf : M → M'\ns : Set M\ne : PartialHomeomorph M H\ne' : PartialHomeomorph M' H'\ninst✝¹ : IsManifold I 1 M\ninst✝ : IsManifold I' 1 M'\nx : M\nhe : Membership.mem (IsManifold.maximalAtlas I 1 M) e\nhe' : Membership.mem (IsManifold.maximalAtlas I' 1 M') e'\nhx : Membership.mem e.source x\nhy : Membership.mem e'.source (f x)\n⊢ Iff (MDifferentiableWithinAt I I' f s x) (And (ContinuousWithinAt f s x) (DifferentiableWithinAt 𝕜 (Function.comp (↑(e'.extend I')) (Function.comp f ↑(e.extend I).symm)) (Inter.inter (Set.preimage (↑(e.extend I).symm) s) (Set.range ↑I)) (↑(e.extend I) x)))","decl":"theorem mdifferentiableWithinAt_iff_of_mem_maximalAtlas {x : M} (he : e ∈ maximalAtlas I 1 M)\n    (he' : e' ∈ maximalAtlas I' 1 M') (hx : x ∈ e.source) (hy : f x ∈ e'.source) :\n    MDifferentiableWithinAt I I' f s x ↔\n      ContinuousWithinAt f s x ∧\n        DifferentiableWithinAt 𝕜 (e'.extend I' ∘ f ∘ (e.extend I).symm)\n          ((e.extend I).symm ⁻¹' s ∩ range I) (e.extend I x) :=\n  differentiableWithinAt_localInvariantProp.liftPropWithinAt_indep_chart he hx he' hy\n\n"}
{"name":"mdifferentiableWithinAt_iff_image","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹¹ : NormedAddCommGroup E\ninst✝¹⁰ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁹ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁸ : TopologicalSpace M\ninst✝⁷ : ChartedSpace H M\nE' : Type u_5\ninst✝⁶ : NormedAddCommGroup E'\ninst✝⁵ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁴ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝³ : TopologicalSpace M'\ninst✝² : ChartedSpace H' M'\nf : M → M'\ns : Set M\ne : PartialHomeomorph M H\ne' : PartialHomeomorph M' H'\ninst✝¹ : IsManifold I 1 M\ninst✝ : IsManifold I' 1 M'\nx : M\nhe : Membership.mem (IsManifold.maximalAtlas I 1 M) e\nhe' : Membership.mem (IsManifold.maximalAtlas I' 1 M') e'\nhs : HasSubset.Subset s e.source\nhx : Membership.mem e.source x\nhy : Membership.mem e'.source (f x)\n⊢ Iff (MDifferentiableWithinAt I I' f s x) (And (ContinuousWithinAt f s x) (DifferentiableWithinAt 𝕜 (Function.comp (↑(e'.extend I')) (Function.comp f ↑(e.extend I).symm)) (Set.image (↑(e.extend I)) s) (↑(e.extend I) x)))","decl":"/-- An alternative formulation of `mdifferentiableWithinAt_iff_of_mem_maximalAtlas`\n  if the set if `s` lies in `e.source`. -/\ntheorem mdifferentiableWithinAt_iff_image {x : M} (he : e ∈ maximalAtlas I 1 M)\n    (he' : e' ∈ maximalAtlas I' 1 M') (hs : s ⊆ e.source) (hx : x ∈ e.source)\n    (hy : f x ∈ e'.source) :\n    MDifferentiableWithinAt I I' f s x ↔\n      ContinuousWithinAt f s x ∧\n        DifferentiableWithinAt 𝕜 (e'.extend I' ∘ f ∘ (e.extend I).symm) (e.extend I '' s)\n          (e.extend I x) := by\n  rw [mdifferentiableWithinAt_iff_of_mem_maximalAtlas he he' hx hy, and_congr_right_iff]\n  refine fun _ => differentiableWithinAt_congr_nhds ?_\n  simp_rw [nhdsWithin_eq_iff_eventuallyEq, e.extend_symm_preimage_inter_range_eventuallyEq hs hx]\n\n"}
{"name":"mdifferentiableWithinAt_iff_of_mem_source","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹¹ : NormedAddCommGroup E\ninst✝¹⁰ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁹ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁸ : TopologicalSpace M\ninst✝⁷ : ChartedSpace H M\nE' : Type u_5\ninst✝⁶ : NormedAddCommGroup E'\ninst✝⁵ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁴ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝³ : TopologicalSpace M'\ninst✝² : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\ninst✝¹ : IsManifold I 1 M\ninst✝ : IsManifold I' 1 M'\nx' : M\ny : M'\nhx : Membership.mem (chartAt H x).source x'\nhy : Membership.mem (chartAt H' y).source (f x')\n⊢ Iff (MDifferentiableWithinAt I I' f s x') (And (ContinuousWithinAt f s x') (DifferentiableWithinAt 𝕜 (Function.comp (↑(extChartAt I' y)) (Function.comp f ↑(extChartAt I x).symm)) (Inter.inter (Set.preimage (↑(extChartAt I x).symm) s) (Set.range ↑I)) (↑(extChartAt I x) x')))","decl":"/-- One can reformulate smoothness within a set at a point as continuity within this set at this\npoint, and smoothness in any chart containing that point. -/\ntheorem mdifferentiableWithinAt_iff_of_mem_source {x' : M} {y : M'} (hx : x' ∈ (chartAt H x).source)\n    (hy : f x' ∈ (chartAt H' y).source) :\n    MDifferentiableWithinAt I I' f s x' ↔\n      ContinuousWithinAt f s x' ∧\n        DifferentiableWithinAt 𝕜 (extChartAt I' y ∘ f ∘ (extChartAt I x).symm)\n          ((extChartAt I x).symm ⁻¹' s ∩ range I) (extChartAt I x x') :=\n  mdifferentiableWithinAt_iff_of_mem_maximalAtlas (chart_mem_maximalAtlas x)\n    (chart_mem_maximalAtlas y) hx hy\n\n"}
{"name":"mdifferentiableWithinAt_iff_of_mem_source'","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹¹ : NormedAddCommGroup E\ninst✝¹⁰ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁹ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁸ : TopologicalSpace M\ninst✝⁷ : ChartedSpace H M\nE' : Type u_5\ninst✝⁶ : NormedAddCommGroup E'\ninst✝⁵ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁴ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝³ : TopologicalSpace M'\ninst✝² : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\ninst✝¹ : IsManifold I 1 M\ninst✝ : IsManifold I' 1 M'\nx' : M\ny : M'\nhx : Membership.mem (chartAt H x).source x'\nhy : Membership.mem (chartAt H' y).source (f x')\n⊢ Iff (MDifferentiableWithinAt I I' f s x') (And (ContinuousWithinAt f s x') (DifferentiableWithinAt 𝕜 (Function.comp (↑(extChartAt I' y)) (Function.comp f ↑(extChartAt I x).symm)) (Inter.inter (extChartAt I x).target (Set.preimage (↑(extChartAt I x).symm) (Inter.inter s (Set.preimage f (extChartAt I' y).source)))) (↑(extChartAt I x) x')))","decl":"/-- One can reformulate smoothness within a set at a point as continuity within this set at this\npoint, and smoothness in any chart containing that point. Version requiring differentiability\nin the target instead of `range I`. -/\ntheorem mdifferentiableWithinAt_iff_of_mem_source' {x' : M} {y : M'}\n    (hx : x' ∈ (chartAt H x).source) (hy : f x' ∈ (chartAt H' y).source) :\n    MDifferentiableWithinAt I I' f s x' ↔\n      ContinuousWithinAt f s x' ∧\n        DifferentiableWithinAt 𝕜 (extChartAt I' y ∘ f ∘ (extChartAt I x).symm)\n          ((extChartAt I x).target ∩ (extChartAt I x).symm ⁻¹' (s ∩ f ⁻¹' (extChartAt I' y).source))\n          (extChartAt I x x') := by\n  refine (mdifferentiableWithinAt_iff_of_mem_source hx hy).trans ?_\n  rw [← extChartAt_source I] at hx\n  rw [← extChartAt_source I'] at hy\n  rw [and_congr_right_iff]\n  set e := extChartAt I x; set e' := extChartAt I' (f x)\n  refine fun hc => differentiableWithinAt_congr_nhds ?_\n  rw [← e.image_source_inter_eq', ← map_extChartAt_nhdsWithin_eq_image' hx,\n    ← map_extChartAt_nhdsWithin' hx, inter_comm, nhdsWithin_inter_of_mem]\n  exact hc (extChartAt_source_mem_nhds' hy)\n\n"}
{"name":"mdifferentiableAt_iff_of_mem_source","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹¹ : NormedAddCommGroup E\ninst✝¹⁰ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁹ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁸ : TopologicalSpace M\ninst✝⁷ : ChartedSpace H M\nE' : Type u_5\ninst✝⁶ : NormedAddCommGroup E'\ninst✝⁵ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁴ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝³ : TopologicalSpace M'\ninst✝² : ChartedSpace H' M'\nf : M → M'\nx : M\ninst✝¹ : IsManifold I 1 M\ninst✝ : IsManifold I' 1 M'\nx' : M\ny : M'\nhx : Membership.mem (chartAt H x).source x'\nhy : Membership.mem (chartAt H' y).source (f x')\n⊢ Iff (MDifferentiableAt I I' f x') (And (ContinuousAt f x') (DifferentiableWithinAt 𝕜 (Function.comp (↑(extChartAt I' y)) (Function.comp f ↑(extChartAt I x).symm)) (Set.range ↑I) (↑(extChartAt I x) x')))","decl":"theorem mdifferentiableAt_iff_of_mem_source {x' : M} {y : M'} (hx : x' ∈ (chartAt H x).source)\n    (hy : f x' ∈ (chartAt H' y).source) :\n    MDifferentiableAt I I' f x' ↔\n      ContinuousAt f x' ∧\n        DifferentiableWithinAt 𝕜 (extChartAt I' y ∘ f ∘ (extChartAt I x).symm) (range I)\n          (extChartAt I x x') :=\n  (mdifferentiableWithinAt_iff_of_mem_source hx hy).trans <| by\n    rw [continuousWithinAt_univ, preimage_univ, univ_inter]\n\n"}
{"name":"mdifferentiableOn_iff_of_mem_maximalAtlas","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹¹ : NormedAddCommGroup E\ninst✝¹⁰ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁹ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁸ : TopologicalSpace M\ninst✝⁷ : ChartedSpace H M\nE' : Type u_5\ninst✝⁶ : NormedAddCommGroup E'\ninst✝⁵ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁴ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝³ : TopologicalSpace M'\ninst✝² : ChartedSpace H' M'\nf : M → M'\ns : Set M\ne : PartialHomeomorph M H\ne' : PartialHomeomorph M' H'\ninst✝¹ : IsManifold I 1 M\ninst✝ : IsManifold I' 1 M'\nhe : Membership.mem (IsManifold.maximalAtlas I 1 M) e\nhe' : Membership.mem (IsManifold.maximalAtlas I' 1 M') e'\nhs : HasSubset.Subset s e.source\nh2s : Set.MapsTo f s e'.source\n⊢ Iff (MDifferentiableOn I I' f s) (And (ContinuousOn f s) (DifferentiableOn 𝕜 (Function.comp (↑(e'.extend I')) (Function.comp f ↑(e.extend I).symm)) (Set.image (↑(e.extend I)) s)))","decl":"theorem mdifferentiableOn_iff_of_mem_maximalAtlas (he : e ∈ maximalAtlas I 1 M)\n    (he' : e' ∈ maximalAtlas I' 1 M') (hs : s ⊆ e.source) (h2s : MapsTo f s e'.source) :\n    MDifferentiableOn I I' f s ↔\n      ContinuousOn f s ∧\n        DifferentiableOn 𝕜 (e'.extend I' ∘ f ∘ (e.extend I).symm) (e.extend I '' s) := by\n  simp_rw [ContinuousOn, DifferentiableOn, Set.forall_mem_image, ← forall_and, MDifferentiableOn]\n  exact forall₂_congr fun x hx => mdifferentiableWithinAt_iff_image he he' hs (hs hx) (h2s hx)\n\n"}
{"name":"mdifferentiableOn_iff_of_mem_maximalAtlas'","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹¹ : NormedAddCommGroup E\ninst✝¹⁰ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁹ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁸ : TopologicalSpace M\ninst✝⁷ : ChartedSpace H M\nE' : Type u_5\ninst✝⁶ : NormedAddCommGroup E'\ninst✝⁵ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁴ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝³ : TopologicalSpace M'\ninst✝² : ChartedSpace H' M'\nf : M → M'\ns : Set M\ne : PartialHomeomorph M H\ne' : PartialHomeomorph M' H'\ninst✝¹ : IsManifold I 1 M\ninst✝ : IsManifold I' 1 M'\nhe : Membership.mem (IsManifold.maximalAtlas I 1 M) e\nhe' : Membership.mem (IsManifold.maximalAtlas I' 1 M') e'\nhs : HasSubset.Subset s e.source\nh2s : Set.MapsTo f s e'.source\n⊢ Iff (MDifferentiableOn I I' f s) (DifferentiableOn 𝕜 (Function.comp (↑(e'.extend I')) (Function.comp f ↑(e.extend I).symm)) (Set.image (↑(e.extend I)) s))","decl":"/-- Differentiability on a set is equivalent to differentiability in the extended charts. -/\ntheorem mdifferentiableOn_iff_of_mem_maximalAtlas' (he : e ∈ maximalAtlas I 1 M)\n    (he' : e' ∈ maximalAtlas I' 1 M') (hs : s ⊆ e.source) (h2s : MapsTo f s e'.source) :\n    MDifferentiableOn I I' f s ↔\n      DifferentiableOn 𝕜 (e'.extend I' ∘ f ∘ (e.extend I).symm) (e.extend I '' s) :=\n  (mdifferentiableOn_iff_of_mem_maximalAtlas he he' hs h2s).trans <| and_iff_right_of_imp fun h ↦\n    (e.continuousOn_writtenInExtend_iff hs h2s).1 h.continuousOn\n\n"}
{"name":"mdifferentiableOn_iff_of_subset_source","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹¹ : NormedAddCommGroup E\ninst✝¹⁰ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁹ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁸ : TopologicalSpace M\ninst✝⁷ : ChartedSpace H M\nE' : Type u_5\ninst✝⁶ : NormedAddCommGroup E'\ninst✝⁵ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁴ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝³ : TopologicalSpace M'\ninst✝² : ChartedSpace H' M'\nf : M → M'\ns : Set M\ninst✝¹ : IsManifold I 1 M\ninst✝ : IsManifold I' 1 M'\nx : M\ny : M'\nhs : HasSubset.Subset s (chartAt H x).source\nh2s : Set.MapsTo f s (chartAt H' y).source\n⊢ Iff (MDifferentiableOn I I' f s) (And (ContinuousOn f s) (DifferentiableOn 𝕜 (Function.comp (↑(extChartAt I' y)) (Function.comp f ↑(extChartAt I x).symm)) (Set.image (↑(extChartAt I x)) s)))","decl":"/-- If the set where you want `f` to be smooth lies entirely in a single chart, and `f` maps it\n  into a single chart, the smoothness of `f` on that set can be expressed by purely looking in\n  these charts.\n  Note: this lemma uses `extChartAt I x '' s` instead of `(extChartAt I x).symm ⁻¹' s` to ensure\n  that this set lies in `(extChartAt I x).target`. -/\ntheorem mdifferentiableOn_iff_of_subset_source {x : M} {y : M'} (hs : s ⊆ (chartAt H x).source)\n    (h2s : MapsTo f s (chartAt H' y).source) :\n    MDifferentiableOn I I' f s ↔\n      ContinuousOn f s ∧\n        DifferentiableOn 𝕜 (extChartAt I' y ∘ f ∘ (extChartAt I x).symm) (extChartAt I x '' s) :=\n  mdifferentiableOn_iff_of_mem_maximalAtlas (chart_mem_maximalAtlas x)\n    (chart_mem_maximalAtlas y) hs h2s\n\n"}
{"name":"mdifferentiableOn_iff_of_subset_source'","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹¹ : NormedAddCommGroup E\ninst✝¹⁰ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁹ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁸ : TopologicalSpace M\ninst✝⁷ : ChartedSpace H M\nE' : Type u_5\ninst✝⁶ : NormedAddCommGroup E'\ninst✝⁵ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁴ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝³ : TopologicalSpace M'\ninst✝² : ChartedSpace H' M'\nf : M → M'\ns : Set M\ninst✝¹ : IsManifold I 1 M\ninst✝ : IsManifold I' 1 M'\nx : M\ny : M'\nhs : HasSubset.Subset s (extChartAt I x).source\nh2s : Set.MapsTo f s (extChartAt I' y).source\n⊢ Iff (MDifferentiableOn I I' f s) (DifferentiableOn 𝕜 (Function.comp (↑(extChartAt I' y)) (Function.comp f ↑(extChartAt I x).symm)) (Set.image (↑(extChartAt I x)) s))","decl":"/-- If the set where you want `f` to be smooth lies entirely in a single chart, and `f` maps it\n  into a single chart, the smoothness of `f` on that set can be expressed by purely looking in\n  these charts.\n  Note: this lemma uses `extChartAt I x '' s` instead of `(extChartAt I x).symm ⁻¹' s` to ensure\n  that this set lies in `(extChartAt I x).target`. -/\ntheorem mdifferentiableOn_iff_of_subset_source' {x : M} {y : M'} (hs : s ⊆ (extChartAt I x).source)\n    (h2s : MapsTo f s (extChartAt I' y).source) :\n    MDifferentiableOn I I' f s ↔\n        DifferentiableOn 𝕜 (extChartAt I' y ∘ f ∘ (extChartAt I x).symm) (extChartAt I x '' s) := by\n  rw [extChartAt_source] at hs h2s\n  exact mdifferentiableOn_iff_of_mem_maximalAtlas' (chart_mem_maximalAtlas x)\n    (chart_mem_maximalAtlas y) hs h2s\n\n"}
{"name":"mdifferentiableOn_iff","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹¹ : NormedAddCommGroup E\ninst✝¹⁰ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁹ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁸ : TopologicalSpace M\ninst✝⁷ : ChartedSpace H M\nE' : Type u_5\ninst✝⁶ : NormedAddCommGroup E'\ninst✝⁵ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁴ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝³ : TopologicalSpace M'\ninst✝² : ChartedSpace H' M'\nf : M → M'\ns : Set M\ninst✝¹ : IsManifold I 1 M\ninst✝ : IsManifold I' 1 M'\n⊢ Iff (MDifferentiableOn I I' f s) (And (ContinuousOn f s) (∀ (x : M) (y : M'), DifferentiableOn 𝕜 (Function.comp (↑(extChartAt I' y)) (Function.comp f ↑(extChartAt I x).symm)) (Inter.inter (extChartAt I x).target (Set.preimage (↑(extChartAt I x).symm) (Inter.inter s (Set.preimage f (extChartAt I' y).source))))))","decl":"/-- One can reformulate smoothness on a set as continuity on this set, and smoothness in any\nextended chart. -/\ntheorem mdifferentiableOn_iff :\n    MDifferentiableOn I I' f s ↔\n      ContinuousOn f s ∧\n        ∀ (x : M) (y : M'),\n          DifferentiableOn 𝕜 (extChartAt I' y ∘ f ∘ (extChartAt I x).symm)\n            ((extChartAt I x).target ∩\n              (extChartAt I x).symm ⁻¹' (s ∩ f ⁻¹' (extChartAt I' y).source)) := by\n  constructor\n  · intro h\n    refine ⟨fun x hx => (h x hx).1, fun x y z hz => ?_⟩\n    simp only [mfld_simps] at hz\n    let w := (extChartAt I x).symm z\n    have : w ∈ s := by simp only [w, hz, mfld_simps]\n    specialize h w this\n    have w1 : w ∈ (chartAt H x).source := by simp only [w, hz, mfld_simps]\n    have w2 : f w ∈ (chartAt H' y).source := by simp only [w, hz, mfld_simps]\n    convert ((mdifferentiableWithinAt_iff_of_mem_source w1 w2).mp h).2.mono _\n    · simp only [w, hz, mfld_simps]\n    · mfld_set_tac\n  · rintro ⟨hcont, hdiff⟩ x hx\n    refine differentiableWithinAt_localInvariantProp.liftPropWithinAt_iff.mpr ?_\n    refine ⟨hcont x hx, ?_⟩\n    dsimp [DifferentiableWithinAtProp]\n    convert hdiff x (f x) (extChartAt I x x) (by simp only [hx, mfld_simps]) using 1\n    mfld_set_tac\n\n"}
{"name":"mdifferentiableOn_iff_target","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹¹ : NormedAddCommGroup E\ninst✝¹⁰ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁹ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁸ : TopologicalSpace M\ninst✝⁷ : ChartedSpace H M\nE' : Type u_5\ninst✝⁶ : NormedAddCommGroup E'\ninst✝⁵ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁴ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝³ : TopologicalSpace M'\ninst✝² : ChartedSpace H' M'\nf : M → M'\ns : Set M\ninst✝¹ : IsManifold I 1 M\ninst✝ : IsManifold I' 1 M'\n⊢ Iff (MDifferentiableOn I I' f s) (And (ContinuousOn f s) (∀ (y : M'), MDifferentiableOn I (modelWithCornersSelf 𝕜 E') (Function.comp (↑(extChartAt I' y)) f) (Inter.inter s (Set.preimage f (extChartAt I' y).source))))","decl":"/-- One can reformulate smoothness on a set as continuity on this set, and smoothness in any\nextended chart in the target. -/\ntheorem mdifferentiableOn_iff_target :\n    MDifferentiableOn I I' f s ↔\n      ContinuousOn f s ∧\n        ∀ y : M', MDifferentiableOn I 𝓘(𝕜, E') (extChartAt I' y ∘ f)\n          (s ∩ f ⁻¹' (extChartAt I' y).source) := by\n  simp only [mdifferentiableOn_iff, ModelWithCorners.source_eq, chartAt_self_eq,\n    PartialHomeomorph.refl_partialEquiv, PartialEquiv.refl_trans, extChartAt,\n    PartialHomeomorph.extend, Set.preimage_univ, Set.inter_univ, and_congr_right_iff]\n  intro h\n  constructor\n  · refine fun h' y => ⟨?_, fun x _ => h' x y⟩\n    have h'' : ContinuousOn _ univ := (ModelWithCorners.continuous I').continuousOn\n    convert (h''.comp_inter (chartAt H' y).continuousOn_toFun).comp_inter h\n    simp\n  · exact fun h' x y => (h' y).2 x 0\n\n"}
{"name":"mdifferentiable_iff","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹¹ : NormedAddCommGroup E\ninst✝¹⁰ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁹ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁸ : TopologicalSpace M\ninst✝⁷ : ChartedSpace H M\nE' : Type u_5\ninst✝⁶ : NormedAddCommGroup E'\ninst✝⁵ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁴ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝³ : TopologicalSpace M'\ninst✝² : ChartedSpace H' M'\nf : M → M'\ninst✝¹ : IsManifold I 1 M\ninst✝ : IsManifold I' 1 M'\n⊢ Iff (MDifferentiable I I' f) (And (Continuous f) (∀ (x : M) (y : M'), DifferentiableOn 𝕜 (Function.comp (↑(extChartAt I' y)) (Function.comp f ↑(extChartAt I x).symm)) (Inter.inter (extChartAt I x).target (Set.preimage (↑(extChartAt I x).symm) (Set.preimage f (extChartAt I' y).source)))))","decl":"/-- One can reformulate smoothness as continuity and smoothness in any extended chart. -/\ntheorem mdifferentiable_iff :\n    MDifferentiable I I' f ↔\n      Continuous f ∧\n        ∀ (x : M) (y : M'),\n          DifferentiableOn 𝕜 (extChartAt I' y ∘ f ∘ (extChartAt I x).symm)\n            ((extChartAt I x).target ∩\n              (extChartAt I x).symm ⁻¹' (f ⁻¹' (extChartAt I' y).source)) := by\n  simp [← mdifferentiableOn_univ, mdifferentiableOn_iff, continuous_iff_continuousOn_univ]\n\n"}
{"name":"mdifferentiable_iff_target","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹² : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹¹ : NormedAddCommGroup E\ninst✝¹⁰ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁹ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁸ : TopologicalSpace M\ninst✝⁷ : ChartedSpace H M\nE' : Type u_5\ninst✝⁶ : NormedAddCommGroup E'\ninst✝⁵ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁴ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝³ : TopologicalSpace M'\ninst✝² : ChartedSpace H' M'\nf : M → M'\ninst✝¹ : IsManifold I 1 M\ninst✝ : IsManifold I' 1 M'\n⊢ Iff (MDifferentiable I I' f) (And (Continuous f) (∀ (y : M'), MDifferentiableOn I (modelWithCornersSelf 𝕜 E') (Function.comp (↑(extChartAt I' y)) f) (Set.preimage f (extChartAt I' y).source)))","decl":"/-- One can reformulate smoothness as continuity and smoothness in any extended chart in the\ntarget. -/\ntheorem mdifferentiable_iff_target :\n    MDifferentiable I I' f ↔\n      Continuous f ∧ ∀ y : M',\n        MDifferentiableOn I 𝓘(𝕜, E') (extChartAt I' y ∘ f) (f ⁻¹' (extChartAt I' y).source) := by\n  rw [← mdifferentiableOn_univ, mdifferentiableOn_iff_target]\n  simp [continuous_iff_continuousOn_univ]\n\n"}
{"name":"ContMDiffWithinAt.mdifferentiableWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nn : WithTop ENat\nhf : ContMDiffWithinAt I I' n f s x\nhn : LE.le 1 n\n⊢ MDifferentiableWithinAt I I' f s x","decl":"theorem ContMDiffWithinAt.mdifferentiableWithinAt (hf : ContMDiffWithinAt I I' n f s x)\n    (hn : 1 ≤ n) : MDifferentiableWithinAt I I' f s x := by\n  suffices h : MDifferentiableWithinAt I I' f (s ∩ f ⁻¹' (extChartAt I' (f x)).source) x by\n    rwa [mdifferentiableWithinAt_inter'] at h\n    apply hf.1.preimage_mem_nhdsWithin\n    exact extChartAt_source_mem_nhds (f x)\n  rw [mdifferentiableWithinAt_iff]\n  exact ⟨hf.1.mono inter_subset_left, (hf.2.differentiableWithinAt (mod_cast hn)).mono\n    (by mfld_set_tac)⟩\n\n"}
{"name":"ContMDiffAt.mdifferentiableAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\nn : WithTop ENat\nhf : ContMDiffAt I I' n f x\nhn : LE.le 1 n\n⊢ MDifferentiableAt I I' f x","decl":"theorem ContMDiffAt.mdifferentiableAt (hf : ContMDiffAt I I' n f x) (hn : 1 ≤ n) :\n    MDifferentiableAt I I' f x :=\n  mdifferentiableWithinAt_univ.1 <| ContMDiffWithinAt.mdifferentiableWithinAt hf hn\n\n"}
{"name":"ContMDiff.mdifferentiableAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\nn : WithTop ENat\nhf : ContMDiff I I' n f\nhn : LE.le 1 n\n⊢ MDifferentiableAt I I' f x","decl":"theorem ContMDiff.mdifferentiableAt (hf : ContMDiff I I' n f) (hn : 1 ≤ n) :\n    MDifferentiableAt I I' f x :=\n  hf.contMDiffAt.mdifferentiableAt hn\n\n"}
{"name":"ContMDiff.mdifferentiableWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nn : WithTop ENat\nhf : ContMDiff I I' n f\nhn : LE.le 1 n\n⊢ MDifferentiableWithinAt I I' f s x","decl":"theorem ContMDiff.mdifferentiableWithinAt (hf : ContMDiff I I' n f) (hn : 1 ≤ n) :\n    MDifferentiableWithinAt I I' f s x :=\n  (hf.contMDiffAt.mdifferentiableAt hn).mdifferentiableWithinAt\n\n"}
{"name":"ContMDiffOn.mdifferentiableOn","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\ns : Set M\nn : WithTop ENat\nhf : ContMDiffOn I I' n f s\nhn : LE.le 1 n\n⊢ MDifferentiableOn I I' f s","decl":"theorem ContMDiffOn.mdifferentiableOn (hf : ContMDiffOn I I' n f s) (hn : 1 ≤ n) :\n    MDifferentiableOn I I' f s := fun x hx => (hf x hx).mdifferentiableWithinAt hn\n\n"}
{"name":"SmoothWithinAt.mdifferentiableWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nn : WithTop ENat\nhf : ContMDiffWithinAt I I' n f s x\nhn : LE.le 1 n\n⊢ MDifferentiableWithinAt I I' f s x","decl":"@[deprecated (since := \"2024-11-20\")]\nalias SmoothWithinAt.mdifferentiableWithinAt := ContMDiffWithinAt.mdifferentiableWithinAt\n\n"}
{"name":"ContMDiff.mdifferentiable","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nn : WithTop ENat\nhf : ContMDiff I I' n f\nhn : LE.le 1 n\n⊢ MDifferentiable I I' f","decl":"theorem ContMDiff.mdifferentiable (hf : ContMDiff I I' n f) (hn : 1 ≤ n) : MDifferentiable I I' f :=\n  fun x => (hf x).mdifferentiableAt hn\n\n"}
{"name":"SmoothAt.mdifferentiableAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\nn : WithTop ENat\nhf : ContMDiffAt I I' n f x\nhn : LE.le 1 n\n⊢ MDifferentiableAt I I' f x","decl":"@[deprecated (since := \"2024-11-20\")]\nalias SmoothAt.mdifferentiableAt := ContMDiffAt.mdifferentiableAt\n\n"}
{"name":"SmoothOn.mdifferentiableOn","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\ns : Set M\nn : WithTop ENat\nhf : ContMDiffOn I I' n f s\nhn : LE.le 1 n\n⊢ MDifferentiableOn I I' f s","decl":"@[deprecated (since := \"2024-11-20\")]\nalias SmoothOn.mdifferentiableOn := ContMDiffOn.mdifferentiableOn\n\n"}
{"name":"Smooth.mdifferentiable","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nn : WithTop ENat\nhf : ContMDiff I I' n f\nhn : LE.le 1 n\n⊢ MDifferentiable I I' f","decl":"@[deprecated (since := \"2024-11-20\")]\nalias Smooth.mdifferentiable := ContMDiff.mdifferentiable\n\n"}
{"name":"Smooth.mdifferentiableAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\nn : WithTop ENat\nhf : ContMDiff I I' n f\nhn : LE.le 1 n\n⊢ MDifferentiableAt I I' f x","decl":"@[deprecated (since := \"2024-11-20\")]\nalias Smooth.mdifferentiableAt := ContMDiff.mdifferentiableAt\n\n"}
{"name":"MDifferentiableOn.continuousOn","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\ns : Set M\nh : MDifferentiableOn I I' f s\n⊢ ContinuousOn f s","decl":"theorem MDifferentiableOn.continuousOn (h : MDifferentiableOn I I' f s) : ContinuousOn f s :=\n  fun x hx => (h x hx).continuousWithinAt\n\n"}
{"name":"MDifferentiable.continuous","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nh : MDifferentiable I I' f\n⊢ Continuous f","decl":"theorem MDifferentiable.continuous (h : MDifferentiable I I' f) : Continuous f :=\n  continuous_iff_continuousAt.2 fun x => (h x).continuousAt\n\n"}
{"name":"Smooth.mdifferentiableWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nn : WithTop ENat\nhf : ContMDiff I I' n f\nhn : LE.le 1 n\n⊢ MDifferentiableWithinAt I I' f s x","decl":"@[deprecated (since := \"2024-11-20\")]\nalias Smooth.mdifferentiableWithinAt := ContMDiff.mdifferentiableWithinAt\n\n"}
{"name":"MDifferentiableWithinAt.prod_mk","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nx : M\ns : Set M\nf : M → M'\ng : M → M''\nhf : MDifferentiableWithinAt I I' f s x\nhg : MDifferentiableWithinAt I I'' g s x\n⊢ MDifferentiableWithinAt I (I'.prod I'') (fun x => { fst := f x, snd := g x }) s x","decl":"theorem MDifferentiableWithinAt.prod_mk {f : M → M'} {g : M → M''}\n    (hf : MDifferentiableWithinAt I I' f s x) (hg : MDifferentiableWithinAt I I'' g s x) :\n    MDifferentiableWithinAt I (I'.prod I'') (fun x => (f x, g x)) s x :=\n  ⟨hf.1.prod hg.1, hf.2.prod hg.2⟩\n\n"}
{"name":"MDifferentiableAt.prod_mk","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nx : M\nf : M → M'\ng : M → M''\nhf : MDifferentiableAt I I' f x\nhg : MDifferentiableAt I I'' g x\n⊢ MDifferentiableAt I (I'.prod I'') (fun x => { fst := f x, snd := g x }) x","decl":"theorem MDifferentiableAt.prod_mk {f : M → M'} {g : M → M''} (hf : MDifferentiableAt I I' f x)\n    (hg : MDifferentiableAt I I'' g x) :\n    MDifferentiableAt I (I'.prod I'') (fun x => (f x, g x)) x :=\n  ⟨hf.1.prod hg.1, hf.2.prod hg.2⟩\n\n"}
{"name":"MDifferentiableWithinAt.prod_mk_space","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝⁹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁸ : NormedAddCommGroup E\ninst✝⁷ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁶ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁵ : TopologicalSpace M\ninst✝⁴ : ChartedSpace H M\nE' : Type u_5\ninst✝³ : NormedAddCommGroup E'\ninst✝² : NormedSpace 𝕜 E'\nE'' : Type u_8\ninst✝¹ : NormedAddCommGroup E''\ninst✝ : NormedSpace 𝕜 E''\nx : M\ns : Set M\nf : M → E'\ng : M → E''\nhf : MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 E') f s x\nhg : MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 E'') g s x\n⊢ MDifferentiableWithinAt I (modelWithCornersSelf 𝕜 (Prod E' E'')) (fun x => { fst := f x, snd := g x }) s x","decl":"theorem MDifferentiableWithinAt.prod_mk_space {f : M → E'} {g : M → E''}\n    (hf : MDifferentiableWithinAt I 𝓘(𝕜, E') f s x)\n    (hg : MDifferentiableWithinAt I 𝓘(𝕜, E'') g s x) :\n    MDifferentiableWithinAt I 𝓘(𝕜, E' × E'') (fun x => (f x, g x)) s x :=\n  ⟨hf.1.prod hg.1, hf.2.prod hg.2⟩\n\n"}
{"name":"MDifferentiableAt.prod_mk_space","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝⁹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁸ : NormedAddCommGroup E\ninst✝⁷ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁶ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁵ : TopologicalSpace M\ninst✝⁴ : ChartedSpace H M\nE' : Type u_5\ninst✝³ : NormedAddCommGroup E'\ninst✝² : NormedSpace 𝕜 E'\nE'' : Type u_8\ninst✝¹ : NormedAddCommGroup E''\ninst✝ : NormedSpace 𝕜 E''\nx : M\nf : M → E'\ng : M → E''\nhf : MDifferentiableAt I (modelWithCornersSelf 𝕜 E') f x\nhg : MDifferentiableAt I (modelWithCornersSelf 𝕜 E'') g x\n⊢ MDifferentiableAt I (modelWithCornersSelf 𝕜 (Prod E' E'')) (fun x => { fst := f x, snd := g x }) x","decl":"theorem MDifferentiableAt.prod_mk_space {f : M → E'} {g : M → E''}\n    (hf : MDifferentiableAt I 𝓘(𝕜, E') f x) (hg : MDifferentiableAt I 𝓘(𝕜, E'') g x) :\n    MDifferentiableAt I 𝓘(𝕜, E' × E'') (fun x => (f x, g x)) x :=\n  ⟨hf.1.prod hg.1, hf.2.prod hg.2⟩\n\n"}
{"name":"MDifferentiableOn.prod_mk","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\ns : Set M\nf : M → M'\ng : M → M''\nhf : MDifferentiableOn I I' f s\nhg : MDifferentiableOn I I'' g s\n⊢ MDifferentiableOn I (I'.prod I'') (fun x => { fst := f x, snd := g x }) s","decl":"theorem MDifferentiableOn.prod_mk {f : M → M'} {g : M → M''} (hf : MDifferentiableOn I I' f s)\n    (hg : MDifferentiableOn I I'' g s) :\n    MDifferentiableOn I (I'.prod I'') (fun x => (f x, g x)) s := fun x hx =>\n  (hf x hx).prod_mk (hg x hx)\n\n"}
{"name":"MDifferentiable.prod_mk","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\ng : M → M''\nhf : MDifferentiable I I' f\nhg : MDifferentiable I I'' g\n⊢ MDifferentiable I (I'.prod I'') fun x => { fst := f x, snd := g x }","decl":"theorem MDifferentiable.prod_mk {f : M → M'} {g : M → M''} (hf : MDifferentiable I I' f)\n    (hg : MDifferentiable I I'' g) : MDifferentiable I (I'.prod I'') fun x => (f x, g x) := fun x =>\n  (hf x).prod_mk (hg x)\n\n"}
{"name":"MDifferentiableOn.prod_mk_space","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝⁹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁸ : NormedAddCommGroup E\ninst✝⁷ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁶ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁵ : TopologicalSpace M\ninst✝⁴ : ChartedSpace H M\nE' : Type u_5\ninst✝³ : NormedAddCommGroup E'\ninst✝² : NormedSpace 𝕜 E'\nE'' : Type u_8\ninst✝¹ : NormedAddCommGroup E''\ninst✝ : NormedSpace 𝕜 E''\ns : Set M\nf : M → E'\ng : M → E''\nhf : MDifferentiableOn I (modelWithCornersSelf 𝕜 E') f s\nhg : MDifferentiableOn I (modelWithCornersSelf 𝕜 E'') g s\n⊢ MDifferentiableOn I (modelWithCornersSelf 𝕜 (Prod E' E'')) (fun x => { fst := f x, snd := g x }) s","decl":"theorem MDifferentiableOn.prod_mk_space {f : M → E'} {g : M → E''}\n    (hf : MDifferentiableOn I 𝓘(𝕜, E') f s) (hg : MDifferentiableOn I 𝓘(𝕜, E'') g s) :\n    MDifferentiableOn I 𝓘(𝕜, E' × E'') (fun x => (f x, g x)) s := fun x hx =>\n  (hf x hx).prod_mk_space (hg x hx)\n\n"}
{"name":"MDifferentiable.prod_mk_space","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝⁹ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁸ : NormedAddCommGroup E\ninst✝⁷ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁶ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁵ : TopologicalSpace M\ninst✝⁴ : ChartedSpace H M\nE' : Type u_5\ninst✝³ : NormedAddCommGroup E'\ninst✝² : NormedSpace 𝕜 E'\nE'' : Type u_8\ninst✝¹ : NormedAddCommGroup E''\ninst✝ : NormedSpace 𝕜 E''\nf : M → E'\ng : M → E''\nhf : MDifferentiable I (modelWithCornersSelf 𝕜 E') f\nhg : MDifferentiable I (modelWithCornersSelf 𝕜 E'') g\n⊢ MDifferentiable I (modelWithCornersSelf 𝕜 (Prod E' E'')) fun x => { fst := f x, snd := g x }","decl":"theorem MDifferentiable.prod_mk_space {f : M → E'} {g : M → E''} (hf : MDifferentiable I 𝓘(𝕜, E') f)\n    (hg : MDifferentiable I 𝓘(𝕜, E'') g) : MDifferentiable I 𝓘(𝕜, E' × E'') fun x => (f x, g x) :=\n  fun x => (hf x).prod_mk_space (hg x)\n\n"}
{"name":"writtenInExtChartAt_comp","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\nx : M\ns : Set M\ng : M' → M''\nh : ContinuousWithinAt f s x\n⊢ Membership.mem (nhdsWithin (↑(extChartAt I x) x) (Inter.inter (Set.preimage (↑(extChartAt I x).symm) s) (Set.range ↑I))) (setOf fun y => Eq (writtenInExtChartAt I I'' x (Function.comp g f) y) (Function.comp (writtenInExtChartAt I' I'' (f x) g) (writtenInExtChartAt I I' x f) y))","decl":"theorem writtenInExtChartAt_comp (h : ContinuousWithinAt f s x) :\n    {y | writtenInExtChartAt I I'' x (g ∘ f) y =\n          (writtenInExtChartAt I' I'' (f x) g ∘ writtenInExtChartAt I I' x f) y} ∈\n      𝓝[(extChartAt I x).symm ⁻¹' s ∩ range I] (extChartAt I x) x := by\n  apply\n    @Filter.mem_of_superset _ _ (f ∘ (extChartAt I x).symm ⁻¹' (extChartAt I' (f x)).source) _\n      (extChartAt_preimage_mem_nhdsWithin\n        (h.preimage_mem_nhdsWithin (extChartAt_source_mem_nhds _)))\n  mfld_set_tac\n\n"}
{"name":"UniqueMDiffWithinAt.eq","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nf' f₁' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\nU : UniqueMDiffWithinAt I s x\nh : HasMFDerivWithinAt I I' f s x f'\nh₁ : HasMFDerivWithinAt I I' f s x f₁'\n⊢ Eq f' f₁'","decl":"/-- `UniqueMDiffWithinAt` achieves its goal: it implies the uniqueness of the derivative. -/\nprotected nonrec theorem UniqueMDiffWithinAt.eq (U : UniqueMDiffWithinAt I s x)\n    (h : HasMFDerivWithinAt I I' f s x f') (h₁ : HasMFDerivWithinAt I I' f s x f₁') : f' = f₁' := by\n  -- Porting note: didn't need `convert` because of finding instances by unification\n  convert U.eq h.2 h₁.2\n\n"}
{"name":"UniqueMDiffOn.eq","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nf' f₁' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\nU : UniqueMDiffOn I s\nhx : Membership.mem s x\nh : HasMFDerivWithinAt I I' f s x f'\nh₁ : HasMFDerivWithinAt I I' f s x f₁'\n⊢ Eq f' f₁'","decl":"protected theorem UniqueMDiffOn.eq (U : UniqueMDiffOn I s) (hx : x ∈ s)\n    (h : HasMFDerivWithinAt I I' f s x f') (h₁ : HasMFDerivWithinAt I I' f s x f₁') : f' = f₁' :=\n  UniqueMDiffWithinAt.eq (U _ hx) h h₁\n\n"}
{"name":"mfderivWithin_zero_of_not_mdifferentiableWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nh : Not (MDifferentiableWithinAt I I' f s x)\n⊢ Eq (mfderivWithin I I' f s x) 0","decl":"theorem mfderivWithin_zero_of_not_mdifferentiableWithinAt\n    (h : ¬MDifferentiableWithinAt I I' f s x) : mfderivWithin I I' f s x = 0 := by\n  simp only [mfderivWithin, h, if_neg, not_false_iff]\n\n"}
{"name":"mfderiv_zero_of_not_mdifferentiableAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\nh : Not (MDifferentiableAt I I' f x)\n⊢ Eq (mfderiv I I' f x) 0","decl":"theorem mfderiv_zero_of_not_mdifferentiableAt (h : ¬MDifferentiableAt I I' f x) :\n    mfderiv I I' f x = 0 := by simp only [mfderiv, h, if_neg, not_false_iff]\n\n"}
{"name":"HasMFDerivWithinAt.mono","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns t : Set M\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\nh : HasMFDerivWithinAt I I' f t x f'\nhst : HasSubset.Subset s t\n⊢ HasMFDerivWithinAt I I' f s x f'","decl":"theorem HasMFDerivWithinAt.mono (h : HasMFDerivWithinAt I I' f t x f') (hst : s ⊆ t) :\n    HasMFDerivWithinAt I I' f s x f' :=\n  ⟨ContinuousWithinAt.mono h.1 hst,\n    HasFDerivWithinAt.mono h.2 (inter_subset_inter (preimage_mono hst) (Subset.refl _))⟩\n\n"}
{"name":"HasMFDerivAt.hasMFDerivWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\nh : HasMFDerivAt I I' f x f'\n⊢ HasMFDerivWithinAt I I' f s x f'","decl":"theorem HasMFDerivAt.hasMFDerivWithinAt (h : HasMFDerivAt I I' f x f') :\n    HasMFDerivWithinAt I I' f s x f' :=\n  ⟨ContinuousAt.continuousWithinAt h.1, HasFDerivWithinAt.mono h.2 inter_subset_right⟩\n\n"}
{"name":"HasMFDerivWithinAt.mdifferentiableWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\nh : HasMFDerivWithinAt I I' f s x f'\n⊢ MDifferentiableWithinAt I I' f s x","decl":"theorem HasMFDerivWithinAt.mdifferentiableWithinAt (h : HasMFDerivWithinAt I I' f s x f') :\n    MDifferentiableWithinAt I I' f s x :=\n  ⟨h.1, ⟨f', h.2⟩⟩\n\n"}
{"name":"HasMFDerivAt.mdifferentiableAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\nh : HasMFDerivAt I I' f x f'\n⊢ MDifferentiableAt I I' f x","decl":"theorem HasMFDerivAt.mdifferentiableAt (h : HasMFDerivAt I I' f x f') :\n    MDifferentiableAt I I' f x := by\n  rw [mdifferentiableAt_iff]\n  exact ⟨h.1, ⟨f', h.2⟩⟩\n\n"}
{"name":"hasMFDerivWithinAt_univ","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\n⊢ Iff (HasMFDerivWithinAt I I' f Set.univ x f') (HasMFDerivAt I I' f x f')","decl":"@[simp, mfld_simps]\ntheorem hasMFDerivWithinAt_univ :\n    HasMFDerivWithinAt I I' f univ x f' ↔ HasMFDerivAt I I' f x f' := by\n  simp only [HasMFDerivWithinAt, HasMFDerivAt, continuousWithinAt_univ, mfld_simps]\n\n"}
{"name":"hasMFDerivAt_unique","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\nf₀' f₁' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\nh₀ : HasMFDerivAt I I' f x f₀'\nh₁ : HasMFDerivAt I I' f x f₁'\n⊢ Eq f₀' f₁'","decl":"theorem hasMFDerivAt_unique (h₀ : HasMFDerivAt I I' f x f₀') (h₁ : HasMFDerivAt I I' f x f₁') :\n    f₀' = f₁' := by\n  rw [← hasMFDerivWithinAt_univ] at h₀ h₁\n  exact (uniqueMDiffWithinAt_univ I).eq h₀ h₁\n\n"}
{"name":"hasMFDerivWithinAt_inter'","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns t : Set M\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\nh : Membership.mem (nhdsWithin x s) t\n⊢ Iff (HasMFDerivWithinAt I I' f (Inter.inter s t) x f') (HasMFDerivWithinAt I I' f s x f')","decl":"theorem hasMFDerivWithinAt_inter' (h : t ∈ 𝓝[s] x) :\n    HasMFDerivWithinAt I I' f (s ∩ t) x f' ↔ HasMFDerivWithinAt I I' f s x f' := by\n  rw [HasMFDerivWithinAt, HasMFDerivWithinAt, extChartAt_preimage_inter_eq,\n    hasFDerivWithinAt_inter', continuousWithinAt_inter' h]\n  exact extChartAt_preimage_mem_nhdsWithin h\n\n"}
{"name":"hasMFDerivWithinAt_inter","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns t : Set M\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\nh : Membership.mem (nhds x) t\n⊢ Iff (HasMFDerivWithinAt I I' f (Inter.inter s t) x f') (HasMFDerivWithinAt I I' f s x f')","decl":"theorem hasMFDerivWithinAt_inter (h : t ∈ 𝓝 x) :\n    HasMFDerivWithinAt I I' f (s ∩ t) x f' ↔ HasMFDerivWithinAt I I' f s x f' := by\n  rw [HasMFDerivWithinAt, HasMFDerivWithinAt, extChartAt_preimage_inter_eq, hasFDerivWithinAt_inter,\n    continuousWithinAt_inter h]\n  exact extChartAt_preimage_mem_nhds h\n\n"}
{"name":"HasMFDerivWithinAt.union","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns t : Set M\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\nhs : HasMFDerivWithinAt I I' f s x f'\nht : HasMFDerivWithinAt I I' f t x f'\n⊢ HasMFDerivWithinAt I I' f (Union.union s t) x f'","decl":"theorem HasMFDerivWithinAt.union (hs : HasMFDerivWithinAt I I' f s x f')\n    (ht : HasMFDerivWithinAt I I' f t x f') : HasMFDerivWithinAt I I' f (s ∪ t) x f' := by\n  constructor\n  · exact ContinuousWithinAt.union hs.1 ht.1\n  · convert HasFDerivWithinAt.union hs.2 ht.2 using 1\n    simp only [union_inter_distrib_right, preimage_union]\n\n"}
{"name":"HasMFDerivWithinAt.mono_of_mem_nhdsWithin","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns t : Set M\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\nh : HasMFDerivWithinAt I I' f s x f'\nht : Membership.mem (nhdsWithin x t) s\n⊢ HasMFDerivWithinAt I I' f t x f'","decl":"theorem HasMFDerivWithinAt.mono_of_mem_nhdsWithin\n    (h : HasMFDerivWithinAt I I' f s x f') (ht : s ∈ 𝓝[t] x) :\n    HasMFDerivWithinAt I I' f t x f' :=\n  (hasMFDerivWithinAt_inter' ht).1 (h.mono inter_subset_right)\n\n"}
{"name":"HasMFDerivWithinAt.mono_of_mem","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns t : Set M\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\nh : HasMFDerivWithinAt I I' f s x f'\nht : Membership.mem (nhdsWithin x t) s\n⊢ HasMFDerivWithinAt I I' f t x f'","decl":"@[deprecated (since := \"2024-10-31\")]\nalias HasMFDerivWithinAt.mono_of_mem := HasMFDerivWithinAt.mono_of_mem_nhdsWithin\n\n"}
{"name":"HasMFDerivWithinAt.hasMFDerivAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\nh : HasMFDerivWithinAt I I' f s x f'\nhs : Membership.mem (nhds x) s\n⊢ HasMFDerivAt I I' f x f'","decl":"theorem HasMFDerivWithinAt.hasMFDerivAt (h : HasMFDerivWithinAt I I' f s x f') (hs : s ∈ 𝓝 x) :\n    HasMFDerivAt I I' f x f' := by\n  rwa [← univ_inter s, hasMFDerivWithinAt_inter hs, hasMFDerivWithinAt_univ] at h\n\n"}
{"name":"MDifferentiableWithinAt.hasMFDerivWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nh : MDifferentiableWithinAt I I' f s x\n⊢ HasMFDerivWithinAt I I' f s x (mfderivWithin I I' f s x)","decl":"theorem MDifferentiableWithinAt.hasMFDerivWithinAt (h : MDifferentiableWithinAt I I' f s x) :\n    HasMFDerivWithinAt I I' f s x (mfderivWithin I I' f s x) := by\n  refine ⟨h.1, ?_⟩\n  simp only [mfderivWithin, h, if_pos, mfld_simps]\n  exact DifferentiableWithinAt.hasFDerivWithinAt h.2\n\n"}
{"name":"mdifferentiableWithinAt_iff_exists_hasMFDerivWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\n⊢ Iff (MDifferentiableWithinAt I I' f s x) (Exists fun f' => HasMFDerivWithinAt I I' f s x f')","decl":"theorem mdifferentiableWithinAt_iff_exists_hasMFDerivWithinAt :\n    MDifferentiableWithinAt I I' f s x ↔ ∃ f', HasMFDerivWithinAt I I' f s x f' := by\n  refine ⟨fun h ↦ ⟨mfderivWithin I I' f s x, h.hasMFDerivWithinAt⟩, ?_⟩\n  rintro ⟨f', hf'⟩\n  exact hf'.mdifferentiableWithinAt\n\n"}
{"name":"MDifferentiableWithinAt.mono_of_mem_nhdsWithin","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nh : MDifferentiableWithinAt I I' f s x\nt : Set M\nhst : Membership.mem (nhdsWithin x t) s\n⊢ MDifferentiableWithinAt I I' f t x","decl":"theorem MDifferentiableWithinAt.mono_of_mem_nhdsWithin\n    (h : MDifferentiableWithinAt I I' f s x) {t : Set M}\n    (hst : s ∈ 𝓝[t] x) : MDifferentiableWithinAt I I' f t x :=\n  (h.hasMFDerivWithinAt.mono_of_mem_nhdsWithin hst).mdifferentiableWithinAt\n\n"}
{"name":"MDifferentiableWithinAt.congr_nhds","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nh : MDifferentiableWithinAt I I' f s x\nt : Set M\nhst : Eq (nhdsWithin x s) (nhdsWithin x t)\n⊢ MDifferentiableWithinAt I I' f t x","decl":"theorem MDifferentiableWithinAt.congr_nhds (h : MDifferentiableWithinAt I I' f s x) {t : Set M}\n    (hst : 𝓝[s] x = 𝓝[t] x) : MDifferentiableWithinAt I I' f t x :=\n  h.mono_of_mem_nhdsWithin <| hst ▸ self_mem_nhdsWithin\n\n"}
{"name":"mdifferentiableWithinAt_congr_nhds","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns t : Set M\nhst : Eq (nhdsWithin x s) (nhdsWithin x t)\n⊢ Iff (MDifferentiableWithinAt I I' f s x) (MDifferentiableWithinAt I I' f t x)","decl":"theorem mdifferentiableWithinAt_congr_nhds {t : Set M} (hst : 𝓝[s] x = 𝓝[t] x) :\n    MDifferentiableWithinAt I I' f s x ↔ MDifferentiableWithinAt I I' f t x :=\n  ⟨fun h => h.congr_nhds hst, fun h => h.congr_nhds hst.symm⟩\n\n"}
{"name":"MDifferentiableWithinAt.mfderivWithin","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nh : MDifferentiableWithinAt I I' f s x\n⊢ Eq (mfderivWithin I I' f s x) (fderivWithin 𝕜 (writtenInExtChartAt I I' x f) (Inter.inter (Set.preimage (↑(extChartAt I x).symm) s) (Set.range ↑I)) (↑(extChartAt I x) x))","decl":"protected theorem MDifferentiableWithinAt.mfderivWithin (h : MDifferentiableWithinAt I I' f s x) :\n    mfderivWithin I I' f s x =\n      fderivWithin 𝕜 (writtenInExtChartAt I I' x f :) ((extChartAt I x).symm ⁻¹' s ∩ range I)\n        ((extChartAt I x) x) := by\n  simp only [mfderivWithin, h, if_pos]\n\n"}
{"name":"MDifferentiableAt.hasMFDerivAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\nh : MDifferentiableAt I I' f x\n⊢ HasMFDerivAt I I' f x (mfderiv I I' f x)","decl":"theorem MDifferentiableAt.hasMFDerivAt (h : MDifferentiableAt I I' f x) :\n    HasMFDerivAt I I' f x (mfderiv I I' f x) := by\n  refine ⟨h.continuousAt, ?_⟩\n  simp only [mfderiv, h, if_pos, mfld_simps]\n  exact DifferentiableWithinAt.hasFDerivWithinAt h.differentiableWithinAt_writtenInExtChartAt\n\n"}
{"name":"MDifferentiableAt.mfderiv","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\nh : MDifferentiableAt I I' f x\n⊢ Eq (mfderiv I I' f x) (fderivWithin 𝕜 (writtenInExtChartAt I I' x f) (Set.range ↑I) (↑(extChartAt I x) x))","decl":"protected theorem MDifferentiableAt.mfderiv (h : MDifferentiableAt I I' f x) :\n    mfderiv I I' f x =\n      fderivWithin 𝕜 (writtenInExtChartAt I I' x f :) (range I) ((extChartAt I x) x) := by\n  simp only [mfderiv, h, if_pos]\n\n"}
{"name":"HasMFDerivAt.mfderiv","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\nh : HasMFDerivAt I I' f x f'\n⊢ Eq (mfderiv I I' f x) f'","decl":"protected theorem HasMFDerivAt.mfderiv (h : HasMFDerivAt I I' f x f') : mfderiv I I' f x = f' :=\n  (hasMFDerivAt_unique h h.mdifferentiableAt.hasMFDerivAt).symm\n\n"}
{"name":"HasMFDerivWithinAt.mfderivWithin","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\nh : HasMFDerivWithinAt I I' f s x f'\nhxs : UniqueMDiffWithinAt I s x\n⊢ Eq (mfderivWithin I I' f s x) f'","decl":"protected theorem HasMFDerivWithinAt.mfderivWithin (h : HasMFDerivWithinAt I I' f s x f')\n    (hxs : UniqueMDiffWithinAt I s x) : mfderivWithin I I' f s x = f' := by\n  ext\n  rw [hxs.eq h h.mdifferentiableWithinAt.hasMFDerivWithinAt]\n\n"}
{"name":"HasMFDerivWithinAt.mfderivWithin_eq_zero","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nh : HasMFDerivWithinAt I I' f s x 0\n⊢ Eq (mfderivWithin I I' f s x) 0","decl":"theorem HasMFDerivWithinAt.mfderivWithin_eq_zero (h : HasMFDerivWithinAt I I' f s x 0) :\n    mfderivWithin I I' f s x = 0 := by\n  simp only [mfld_simps, mfderivWithin, h.mdifferentiableWithinAt, ↓reduceIte]\n  simp only [HasMFDerivWithinAt, mfld_simps] at h\n  rw [fderivWithin, if_pos]\n  exact h.2\n\n"}
{"name":"MDifferentiable.mfderivWithin","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nh : MDifferentiableAt I I' f x\nhxs : UniqueMDiffWithinAt I s x\n⊢ Eq (mfderivWithin I I' f s x) (mfderiv I I' f x)","decl":"theorem MDifferentiable.mfderivWithin (h : MDifferentiableAt I I' f x)\n    (hxs : UniqueMDiffWithinAt I s x) : mfderivWithin I I' f s x = mfderiv I I' f x := by\n  apply HasMFDerivWithinAt.mfderivWithin _ hxs\n  exact h.hasMFDerivAt.hasMFDerivWithinAt\n\n"}
{"name":"mfderivWithin_subset","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns t : Set M\nst : HasSubset.Subset s t\nhs : UniqueMDiffWithinAt I s x\nh : MDifferentiableWithinAt I I' f t x\n⊢ Eq (mfderivWithin I I' f s x) (mfderivWithin I I' f t x)","decl":"theorem mfderivWithin_subset (st : s ⊆ t) (hs : UniqueMDiffWithinAt I s x)\n    (h : MDifferentiableWithinAt I I' f t x) :\n    mfderivWithin I I' f s x = mfderivWithin I I' f t x :=\n  ((MDifferentiableWithinAt.hasMFDerivWithinAt h).mono st).mfderivWithin hs\n\n"}
{"name":"mfderivWithin_univ","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\n⊢ Eq (mfderivWithin I I' f Set.univ) (mfderiv I I' f)","decl":"@[simp, mfld_simps]\ntheorem mfderivWithin_univ : mfderivWithin I I' f univ = mfderiv I I' f := by\n  ext x : 1\n  simp only [mfderivWithin, mfderiv, mfld_simps]\n  rw [mdifferentiableWithinAt_univ]\n\n"}
{"name":"mfderivWithin_inter","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns t : Set M\nht : Membership.mem (nhds x) t\n⊢ Eq (mfderivWithin I I' f (Inter.inter s t) x) (mfderivWithin I I' f s x)","decl":"theorem mfderivWithin_inter (ht : t ∈ 𝓝 x) :\n    mfderivWithin I I' f (s ∩ t) x = mfderivWithin I I' f s x := by\n  rw [mfderivWithin, mfderivWithin, extChartAt_preimage_inter_eq, mdifferentiableWithinAt_inter ht,\n    fderivWithin_inter (extChartAt_preimage_mem_nhds ht)]\n\n"}
{"name":"mfderivWithin_of_mem_nhds","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nh : Membership.mem (nhds x) s\n⊢ Eq (mfderivWithin I I' f s x) (mfderiv I I' f x)","decl":"theorem mfderivWithin_of_mem_nhds (h : s ∈ 𝓝 x) : mfderivWithin I I' f s x = mfderiv I I' f x := by\n  rw [← mfderivWithin_univ, ← univ_inter s, mfderivWithin_inter h]\n\n"}
{"name":"mfderivWithin_of_isOpen","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nhs : IsOpen s\nhx : Membership.mem s x\n⊢ Eq (mfderivWithin I I' f s x) (mfderiv I I' f x)","decl":"lemma mfderivWithin_of_isOpen (hs : IsOpen s) (hx : x ∈ s) :\n    mfderivWithin I I' f s x = mfderiv I I' f x :=\n  mfderivWithin_of_mem_nhds (hs.mem_nhds hx)\n\n"}
{"name":"hasMFDerivWithinAt_insert","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\ny : M\n⊢ Iff (HasMFDerivWithinAt I I' f (Insert.insert y s) x f') (HasMFDerivWithinAt I I' f s x f')","decl":"theorem hasMFDerivWithinAt_insert {y : M} :\n    HasMFDerivWithinAt I I' f (insert y s) x f' ↔ HasMFDerivWithinAt I I' f s x f' := by\n  have : T1Space M := I.t1Space M\n  refine ⟨fun h => h.mono <| subset_insert y s, fun hf ↦ ?_⟩\n  rcases eq_or_ne x y with rfl | h\n  · rw [HasMFDerivWithinAt] at hf ⊢\n    refine ⟨hf.1.insert, ?_⟩\n    have : (extChartAt I x).target ∈\n        𝓝[(extChartAt I x).symm ⁻¹' insert x s ∩ range I] (extChartAt I x) x :=\n      nhdsWithin_mono _ inter_subset_right (extChartAt_target_mem_nhdsWithin x)\n    rw [← hasFDerivWithinAt_inter' this]\n    apply hf.2.insert.mono\n    rintro z ⟨⟨hz, h2z⟩, h'z⟩\n    simp only [mem_inter_iff, mem_preimage, mem_insert_iff, mem_range] at hz h2z ⊢\n    rcases hz with xz | h'z\n    · left\n      have : x ∈ (extChartAt I x).source := mem_extChartAt_source x\n      exact (((extChartAt I x).eq_symm_apply this h'z).1 xz.symm).symm\n    · exact Or.inr ⟨h'z, h2z⟩\n  · apply hf.mono_of_mem_nhdsWithin ?_\n    simp_rw [nhdsWithin_insert_of_ne h, self_mem_nhdsWithin]\n\n"}
{"name":"HasMFDerivWithinAt.of_insert","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\ny : M\na✝ : HasMFDerivWithinAt I I' f (Insert.insert y s) x f'\n⊢ HasMFDerivWithinAt I I' f s x f'","decl":"alias ⟨HasMFDerivWithinAt.of_insert, HasMFDerivWithinAt.insert'⟩ := hasMFDerivWithinAt_insert\n\n"}
{"name":"HasMFDerivWithinAt.insert'","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\ny : M\na✝ : HasMFDerivWithinAt I I' f s x f'\n⊢ HasMFDerivWithinAt I I' f (Insert.insert y s) x f'","decl":"alias ⟨HasMFDerivWithinAt.of_insert, HasMFDerivWithinAt.insert'⟩ := hasMFDerivWithinAt_insert\n\n"}
{"name":"HasMFDerivWithinAt.insert","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\nh : HasMFDerivWithinAt I I' f s x f'\n⊢ HasMFDerivWithinAt I I' f (Insert.insert x s) x f'","decl":"protected theorem HasMFDerivWithinAt.insert (h : HasMFDerivWithinAt I I' f s x f') :\n    HasMFDerivWithinAt I I' f (insert x s) x f' :=\n  h.insert'\n\n"}
{"name":"hasMFDerivWithinAt_diff_singleton","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\ny : M\n⊢ Iff (HasMFDerivWithinAt I I' f (SDiff.sdiff s (Singleton.singleton y)) x f') (HasMFDerivWithinAt I I' f s x f')","decl":"theorem hasMFDerivWithinAt_diff_singleton (y : M) :\n    HasMFDerivWithinAt I I' f (s \\ {y}) x f' ↔ HasMFDerivWithinAt I I' f s x f' := by\n  rw [← hasMFDerivWithinAt_insert, insert_diff_singleton, hasMFDerivWithinAt_insert]\n\n"}
{"name":"mfderivWithin_eq_mfderiv","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nhs : UniqueMDiffWithinAt I s x\nh : MDifferentiableAt I I' f x\n⊢ Eq (mfderivWithin I I' f s x) (mfderiv I I' f x)","decl":"theorem mfderivWithin_eq_mfderiv (hs : UniqueMDiffWithinAt I s x) (h : MDifferentiableAt I I' f x) :\n    mfderivWithin I I' f s x = mfderiv I I' f x := by\n  rw [← mfderivWithin_univ]\n  exact mfderivWithin_subset (subset_univ _) hs h.mdifferentiableWithinAt\n\n"}
{"name":"mdifferentiableWithinAt_insert_self","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\n⊢ Iff (MDifferentiableWithinAt I I' f (Insert.insert x s) x) (MDifferentiableWithinAt I I' f s x)","decl":"theorem mdifferentiableWithinAt_insert_self :\n    MDifferentiableWithinAt I I' f (insert x s) x ↔ MDifferentiableWithinAt I I' f s x :=\n  ⟨fun h ↦ h.mono (subset_insert x s), fun h ↦ h.hasMFDerivWithinAt.insert.mdifferentiableWithinAt⟩\n\n"}
{"name":"mdifferentiableWithinAt_insert","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\ny : M\n⊢ Iff (MDifferentiableWithinAt I I' f (Insert.insert y s) x) (MDifferentiableWithinAt I I' f s x)","decl":"theorem mdifferentiableWithinAt_insert {y : M} :\n    MDifferentiableWithinAt I I' f (insert y s) x ↔ MDifferentiableWithinAt I I' f s x := by\n  rcases eq_or_ne x y with (rfl | h)\n  · exact mdifferentiableWithinAt_insert_self\n  have : T1Space M := I.t1Space M\n  apply mdifferentiableWithinAt_congr_nhds\n  exact nhdsWithin_insert_of_ne h\n\n"}
{"name":"MDifferentiableWithinAt.of_insert","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\ny : M\na✝ : MDifferentiableWithinAt I I' f (Insert.insert y s) x\n⊢ MDifferentiableWithinAt I I' f s x","decl":"alias ⟨MDifferentiableWithinAt.of_insert, MDifferentiableWithinAt.insert'⟩ :=\nmdifferentiableWithinAt_insert\n\n"}
{"name":"MDifferentiableWithinAt.insert'","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\ny : M\na✝ : MDifferentiableWithinAt I I' f s x\n⊢ MDifferentiableWithinAt I I' f (Insert.insert y s) x","decl":"alias ⟨MDifferentiableWithinAt.of_insert, MDifferentiableWithinAt.insert'⟩ :=\nmdifferentiableWithinAt_insert\n\n"}
{"name":"MDifferentiableWithinAt.insert","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nh : MDifferentiableWithinAt I I' f s x\n⊢ MDifferentiableWithinAt I I' f (Insert.insert x s) x","decl":"protected theorem MDifferentiableWithinAt.insert (h : MDifferentiableWithinAt I I' f s x) :\n    MDifferentiableWithinAt I I' f (insert x s) x :=\n  h.insert'\n\n"}
{"name":"HasMFDerivWithinAt.continuousWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\nh : HasMFDerivWithinAt I I' f s x f'\n⊢ ContinuousWithinAt f s x","decl":"theorem HasMFDerivWithinAt.continuousWithinAt (h : HasMFDerivWithinAt I I' f s x f') :\n    ContinuousWithinAt f s x :=\n  h.1\n\n"}
{"name":"HasMFDerivAt.continuousAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\nh : HasMFDerivAt I I' f x f'\n⊢ ContinuousAt f x","decl":"theorem HasMFDerivAt.continuousAt (h : HasMFDerivAt I I' f x f') : ContinuousAt f x :=\n  h.1\n\n"}
{"name":"tangentMapWithin_subset","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\ns t : Set M\np : TangentBundle I M\nst : HasSubset.Subset s t\nhs : UniqueMDiffWithinAt I s p.proj\nh : MDifferentiableWithinAt I I' f t p.proj\n⊢ Eq (tangentMapWithin I I' f s p) (tangentMapWithin I I' f t p)","decl":"theorem tangentMapWithin_subset {p : TangentBundle I M} (st : s ⊆ t)\n    (hs : UniqueMDiffWithinAt I s p.1) (h : MDifferentiableWithinAt I I' f t p.1) :\n    tangentMapWithin I I' f s p = tangentMapWithin I I' f t p := by\n  simp only [tangentMapWithin, mfld_simps]\n  rw [mfderivWithin_subset st hs h]\n\n"}
{"name":"tangentMapWithin_univ","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\n⊢ Eq (tangentMapWithin I I' f Set.univ) (tangentMap I I' f)","decl":"theorem tangentMapWithin_univ : tangentMapWithin I I' f univ = tangentMap I I' f := by\n  ext p : 1\n  simp only [tangentMapWithin, tangentMap, mfld_simps]\n\n"}
{"name":"tangentMapWithin_eq_tangentMap","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\ns : Set M\np : TangentBundle I M\nhs : UniqueMDiffWithinAt I s p.proj\nh : MDifferentiableAt I I' f p.proj\n⊢ Eq (tangentMapWithin I I' f s p) (tangentMap I I' f p)","decl":"theorem tangentMapWithin_eq_tangentMap {p : TangentBundle I M} (hs : UniqueMDiffWithinAt I s p.1)\n    (h : MDifferentiableAt I I' f p.1) : tangentMapWithin I I' f s p = tangentMap I I' f p := by\n  rw [← mdifferentiableWithinAt_univ] at h\n  rw [← tangentMapWithin_univ]\n  exact tangentMapWithin_subset (subset_univ _) hs h\n\n"}
{"name":"tangentMapWithin_proj","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\ns : Set M\np : TangentBundle I M\n⊢ Eq (tangentMapWithin I I' f s p).proj (f p.proj)","decl":"@[simp, mfld_simps]\ntheorem tangentMapWithin_proj {p : TangentBundle I M} :\n    (tangentMapWithin I I' f s p).proj = f p.proj :=\n  rfl\n\n"}
{"name":"tangentMap_proj","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\np : TangentBundle I M\n⊢ Eq (tangentMap I I' f p).proj (f p.proj)","decl":"@[simp, mfld_simps]\ntheorem tangentMap_proj {p : TangentBundle I M} : (tangentMap I I' f p).proj = f p.proj :=\n  rfl\n\n"}
{"name":"preimage_extChartAt_eventuallyEq_compl_singleton","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹ : TopologicalSpace M\ninst✝ : ChartedSpace H M\nx : M\ns t : Set M\ny : M\nh : (nhdsWithin x (HasCompl.compl (Singleton.singleton y))).EventuallyEq s t\n⊢ (nhdsWithin (↑(extChartAt I x) x) (HasCompl.compl (Singleton.singleton (↑(extChartAt I x) x)))).EventuallyEq (Inter.inter (Set.preimage (↑(extChartAt I x).symm) s) (Set.range ↑I)) (Inter.inter (Set.preimage (↑(extChartAt I x).symm) t) (Set.range ↑I))","decl":"/-- If two sets coincide locally around `x`, except maybe at a point `y`, then their\npreimage under `extChartAt x` coincide locally, except maybe at `extChartAt I x x`. -/\ntheorem preimage_extChartAt_eventuallyEq_compl_singleton (y : M) (h : s =ᶠ[𝓝[{y}ᶜ] x] t) :\n    ((extChartAt I x).symm ⁻¹' s ∩ range I : Set E) =ᶠ[𝓝[{extChartAt I x x}ᶜ] (extChartAt I x x)]\n    ((extChartAt I x).symm ⁻¹' t ∩ range I : Set E) := by\n  have : T1Space M := I.t1Space M\n  obtain ⟨u, u_mem, hu⟩ : ∃ u ∈ 𝓝 x, u ∩ {x}ᶜ ⊆ {y | (y ∈ s) = (y ∈ t)} :=\n    mem_nhdsWithin_iff_exists_mem_nhds_inter.1 (nhdsWithin_compl_singleton_le x y h)\n  rw [← extChartAt_to_inv (I:= I) x] at u_mem\n  have B : (extChartAt I x).target ∪ (range I)ᶜ ∈ 𝓝 (extChartAt I x x) := by\n    rw [← nhdsWithin_univ, ← union_compl_self (range I), nhdsWithin_union]\n    apply Filter.union_mem_sup (extChartAt_target_mem_nhdsWithin x) self_mem_nhdsWithin\n  apply mem_nhdsWithin_iff_exists_mem_nhds_inter.2\n    ⟨_, Filter.inter_mem ((continuousAt_extChartAt_symm x).preimage_mem_nhds u_mem) B, ?_⟩\n  rintro z ⟨hz, h'z⟩\n  simp only [eq_iff_iff, mem_setOf_eq]\n  change z ∈ (extChartAt I x).symm ⁻¹' s ∩ range I ↔ z ∈ (extChartAt I x).symm ⁻¹' t ∩ range I\n  by_cases hIz : z ∈ range I\n  · simp [-extChartAt, hIz] at hz ⊢\n    rw [← eq_iff_iff]\n    apply hu ⟨hz.1, ?_⟩\n    simp only [mem_compl_iff, mem_singleton_iff, ne_comm, ne_eq] at h'z ⊢\n    rw [(extChartAt I x).eq_symm_apply (by simp) hz.2]\n    exact Ne.symm h'z\n  · simp [hIz]\n\n"}
{"name":"hasMFDerivWithinAt_congr_set'","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns t : Set M\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\ny : M\nh : (nhdsWithin x (HasCompl.compl (Singleton.singleton y))).EventuallyEq s t\n⊢ Iff (HasMFDerivWithinAt I I' f s x f') (HasMFDerivWithinAt I I' f t x f')","decl":"/-- If two sets coincide locally, except maybe at a point, then it is equivalent to have a manifold\nderivative within one or the other. -/\ntheorem hasMFDerivWithinAt_congr_set' (y : M) (h : s =ᶠ[𝓝[{y}ᶜ] x] t) :\n    HasMFDerivWithinAt I I' f s x f' ↔ HasMFDerivWithinAt I I' f t x f' := by\n  have : T1Space M := I.t1Space M\n  simp only [HasMFDerivWithinAt]\n  refine and_congr ?_ ?_\n  · exact continuousWithinAt_congr_set' _ h\n  · apply hasFDerivWithinAt_congr_set' (extChartAt I x x)\n    exact preimage_extChartAt_eventuallyEq_compl_singleton y h\n\n"}
{"name":"hasMFDerivWithinAt_congr_set","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns t : Set M\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\nh : (nhds x).EventuallyEq s t\n⊢ Iff (HasMFDerivWithinAt I I' f s x f') (HasMFDerivWithinAt I I' f t x f')","decl":"theorem hasMFDerivWithinAt_congr_set (h : s =ᶠ[𝓝 x] t) :\n    HasMFDerivWithinAt I I' f s x f' ↔ HasMFDerivWithinAt I I' f t x f' :=\n  hasMFDerivWithinAt_congr_set' x <| h.filter_mono inf_le_left\n\n"}
{"name":"mdifferentiableWithinAt_congr_set'","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns t : Set M\ny : M\nh : (nhdsWithin x (HasCompl.compl (Singleton.singleton y))).EventuallyEq s t\n⊢ Iff (MDifferentiableWithinAt I I' f s x) (MDifferentiableWithinAt I I' f t x)","decl":"/-- If two sets coincide around a point (except possibly at a single point `y`), then it is\nequivalent to be differentiable within one or the other set. -/\ntheorem mdifferentiableWithinAt_congr_set' (y : M) (h : s =ᶠ[𝓝[{y}ᶜ] x] t) :\n    MDifferentiableWithinAt I I' f s x ↔ MDifferentiableWithinAt I I' f t x := by\n  simp only [mdifferentiableWithinAt_iff_exists_hasMFDerivWithinAt]\n  exact exists_congr fun _ => hasMFDerivWithinAt_congr_set' _ h\n\n"}
{"name":"mdifferentiableWithinAt_congr_set","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns t : Set M\nh : (nhds x).EventuallyEq s t\n⊢ Iff (MDifferentiableWithinAt I I' f s x) (MDifferentiableWithinAt I I' f t x)","decl":"theorem mdifferentiableWithinAt_congr_set (h : s =ᶠ[𝓝 x] t) :\n    MDifferentiableWithinAt I I' f s x ↔ MDifferentiableWithinAt I I' f t x := by\n  simp only [mdifferentiableWithinAt_iff_exists_hasMFDerivWithinAt]\n  exact exists_congr fun _ => hasMFDerivWithinAt_congr_set h\n\n"}
{"name":"mfderivWithin_congr_set'","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns t : Set M\ny : M\nh : (nhdsWithin x (HasCompl.compl (Singleton.singleton y))).EventuallyEq s t\n⊢ Eq (mfderivWithin I I' f s x) (mfderivWithin I I' f t x)","decl":"/-- If two sets coincide locally, except maybe at a point, then derivatives within these sets\nare the same. -/\ntheorem mfderivWithin_congr_set' (y : M) (h : s =ᶠ[𝓝[{y}ᶜ] x] t) :\n    mfderivWithin I I' f s x = mfderivWithin I I' f t x := by\n  by_cases hx : MDifferentiableWithinAt I I' f s x\n  · simp only [mfderivWithin, hx, (mdifferentiableWithinAt_congr_set' y h).1 hx, ↓reduceIte]\n    apply fderivWithin_congr_set' (extChartAt I x x)\n    exact preimage_extChartAt_eventuallyEq_compl_singleton y h\n  · simp [mfderivWithin, hx, ← mdifferentiableWithinAt_congr_set' y h]\n\n"}
{"name":"mfderivWithin_congr_set","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns t : Set M\nh : (nhds x).EventuallyEq s t\n⊢ Eq (mfderivWithin I I' f s x) (mfderivWithin I I' f t x)","decl":"/-- If two sets coincide locally, then derivatives within these sets\nare the same. -/\ntheorem mfderivWithin_congr_set (h : s =ᶠ[𝓝 x] t) :\n    mfderivWithin I I' f s x = mfderivWithin I I' f t x :=\n  mfderivWithin_congr_set' x <| h.filter_mono inf_le_left\n\n"}
{"name":"mfderivWithin_eventually_congr_set'","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns t : Set M\ny : M\nh : (nhdsWithin x (HasCompl.compl (Singleton.singleton y))).EventuallyEq s t\n⊢ Filter.Eventually (fun y => Eq (mfderivWithin I I' f s y) (mfderivWithin I I' f t y)) (nhds x)","decl":"/-- If two sets coincide locally, except maybe at a point, then derivatives within these sets\ncoincide locally. -/\ntheorem mfderivWithin_eventually_congr_set' (y : M) (h : s =ᶠ[𝓝[{y}ᶜ] x] t) :\n    ∀ᶠ y in 𝓝 x, mfderivWithin I I' f s y = mfderivWithin I I' f t y :=\n  (eventually_nhds_nhdsWithin.2 h).mono fun _ => mfderivWithin_congr_set' y\n\n"}
{"name":"mfderivWithin_eventually_congr_set","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns t : Set M\nh : (nhds x).EventuallyEq s t\n⊢ Filter.Eventually (fun y => Eq (mfderivWithin I I' f s y) (mfderivWithin I I' f t y)) (nhds x)","decl":"/-- If two sets coincide locally, then derivatives within these sets coincide locally. -/\ntheorem mfderivWithin_eventually_congr_set (h : s =ᶠ[𝓝 x] t) :\n    ∀ᶠ y in 𝓝 x, mfderivWithin I I' f s y = mfderivWithin I I' f t y :=\n  mfderivWithin_eventually_congr_set' x <| h.filter_mono inf_le_left\n\n"}
{"name":"HasMFDerivAt.congr_mfderiv","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\nf' f₁' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\nh : HasMFDerivAt I I' f x f'\nh' : Eq f' f₁'\n⊢ HasMFDerivAt I I' f x f₁'","decl":"theorem HasMFDerivAt.congr_mfderiv (h : HasMFDerivAt I I' f x f') (h' : f' = f₁') :\n    HasMFDerivAt I I' f x f₁' :=\n  h' ▸ h\n\n"}
{"name":"HasMFDerivWithinAt.congr_mfderiv","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns : Set M\nf' f₁' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\nh : HasMFDerivWithinAt I I' f s x f'\nh' : Eq f' f₁'\n⊢ HasMFDerivWithinAt I I' f s x f₁'","decl":"theorem HasMFDerivWithinAt.congr_mfderiv (h : HasMFDerivWithinAt I I' f s x f') (h' : f' = f₁') :\n    HasMFDerivWithinAt I I' f s x f₁' :=\n  h' ▸ h\n\n"}
{"name":"HasMFDerivWithinAt.congr_of_eventuallyEq","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf f₁ : M → M'\nx : M\ns : Set M\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\nh : HasMFDerivWithinAt I I' f s x f'\nh₁ : (nhdsWithin x s).EventuallyEq f₁ f\nhx : Eq (f₁ x) (f x)\n⊢ HasMFDerivWithinAt I I' f₁ s x f'","decl":"theorem HasMFDerivWithinAt.congr_of_eventuallyEq (h : HasMFDerivWithinAt I I' f s x f')\n    (h₁ : f₁ =ᶠ[𝓝[s] x] f) (hx : f₁ x = f x) : HasMFDerivWithinAt I I' f₁ s x f' := by\n  refine ⟨ContinuousWithinAt.congr_of_eventuallyEq h.1 h₁ hx, ?_⟩\n  apply HasFDerivWithinAt.congr_of_eventuallyEq h.2\n  · have :\n      (extChartAt I x).symm ⁻¹' {y | f₁ y = f y} ∈\n        𝓝[(extChartAt I x).symm ⁻¹' s ∩ range I] (extChartAt I x) x :=\n      extChartAt_preimage_mem_nhdsWithin h₁\n    apply Filter.mem_of_superset this fun y => _\n    simp +contextual only [hx, mfld_simps]\n  · simp only [hx, mfld_simps]\n\n"}
{"name":"HasMFDerivWithinAt.congr_mono","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf f₁ : M → M'\nx : M\ns t : Set M\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\nh : HasMFDerivWithinAt I I' f s x f'\nht : ∀ (x : M), Membership.mem t x → Eq (f₁ x) (f x)\nhx : Eq (f₁ x) (f x)\nh₁ : HasSubset.Subset t s\n⊢ HasMFDerivWithinAt I I' f₁ t x f'","decl":"theorem HasMFDerivWithinAt.congr_mono (h : HasMFDerivWithinAt I I' f s x f')\n    (ht : ∀ x ∈ t, f₁ x = f x) (hx : f₁ x = f x) (h₁ : t ⊆ s) : HasMFDerivWithinAt I I' f₁ t x f' :=\n  (h.mono h₁).congr_of_eventuallyEq (Filter.mem_inf_of_right ht) hx\n\n"}
{"name":"HasMFDerivAt.congr_of_eventuallyEq","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf f₁ : M → M'\nx : M\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\nh : HasMFDerivAt I I' f x f'\nh₁ : (nhds x).EventuallyEq f₁ f\n⊢ HasMFDerivAt I I' f₁ x f'","decl":"theorem HasMFDerivAt.congr_of_eventuallyEq (h : HasMFDerivAt I I' f x f') (h₁ : f₁ =ᶠ[𝓝 x] f) :\n    HasMFDerivAt I I' f₁ x f' := by\n  rw [← hasMFDerivWithinAt_univ] at h ⊢\n  apply h.congr_of_eventuallyEq _ (mem_of_mem_nhds h₁ :)\n  rwa [nhdsWithin_univ]\n\n"}
{"name":"MDifferentiableWithinAt.congr_of_eventuallyEq","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf f₁ : M → M'\nx : M\ns : Set M\nh : MDifferentiableWithinAt I I' f s x\nh₁ : (nhdsWithin x s).EventuallyEq f₁ f\nhx : Eq (f₁ x) (f x)\n⊢ MDifferentiableWithinAt I I' f₁ s x","decl":"theorem MDifferentiableWithinAt.congr_of_eventuallyEq (h : MDifferentiableWithinAt I I' f s x)\n    (h₁ : f₁ =ᶠ[𝓝[s] x] f) (hx : f₁ x = f x) : MDifferentiableWithinAt I I' f₁ s x :=\n  (h.hasMFDerivWithinAt.congr_of_eventuallyEq h₁ hx).mdifferentiableWithinAt\n\n"}
{"name":"MDifferentiableWithinAt.congr_of_eventuallyEq_of_mem","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf f₁ : M → M'\nx : M\ns : Set M\nh : MDifferentiableWithinAt I I' f s x\nh₁ : (nhdsWithin x s).EventuallyEq f₁ f\nhx : Membership.mem s x\n⊢ MDifferentiableWithinAt I I' f₁ s x","decl":"theorem MDifferentiableWithinAt.congr_of_eventuallyEq_of_mem\n    (h : MDifferentiableWithinAt I I' f s x) (h₁ : f₁ =ᶠ[𝓝[s] x] f) (hx : x ∈ s) :\n    MDifferentiableWithinAt I I' f₁ s x :=\n  h.congr_of_eventuallyEq h₁ (mem_of_mem_nhdsWithin hx h₁ :)\n\n"}
{"name":"MDifferentiableWithinAt.congr_of_eventuallyEq_insert","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf f₁ : M → M'\nx : M\ns : Set M\nh : MDifferentiableWithinAt I I' f s x\nh₁ : (nhdsWithin x (Insert.insert x s)).EventuallyEq f₁ f\n⊢ MDifferentiableWithinAt I I' f₁ s x","decl":"theorem MDifferentiableWithinAt.congr_of_eventuallyEq_insert\n    (h : MDifferentiableWithinAt I I' f s x) (h₁ : f₁ =ᶠ[𝓝[insert x s] x] f) :\n    MDifferentiableWithinAt I I' f₁ s x :=\n  (h.insert.congr_of_eventuallyEq_of_mem h₁ (mem_insert x s)).of_insert\n\n"}
{"name":"Filter.EventuallyEq.mdifferentiableWithinAt_iff","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf f₁ : M → M'\nx : M\ns : Set M\nh₁ : (nhdsWithin x s).EventuallyEq f₁ f\nhx : Eq (f₁ x) (f x)\n⊢ Iff (MDifferentiableWithinAt I I' f s x) (MDifferentiableWithinAt I I' f₁ s x)","decl":"theorem Filter.EventuallyEq.mdifferentiableWithinAt_iff (h₁ : f₁ =ᶠ[𝓝[s] x] f) (hx : f₁ x = f x) :\n    MDifferentiableWithinAt I I' f s x ↔ MDifferentiableWithinAt I I' f₁ s x := by\n  constructor\n  · intro h\n    apply h.congr_of_eventuallyEq h₁ hx\n  · intro h\n    apply h.congr_of_eventuallyEq _ hx.symm\n    apply h₁.mono\n    intro y\n    apply Eq.symm\n\n"}
{"name":"MDifferentiableWithinAt.congr_mono","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf f₁ : M → M'\nx : M\ns t : Set M\nh : MDifferentiableWithinAt I I' f s x\nht : ∀ (x : M), Membership.mem t x → Eq (f₁ x) (f x)\nhx : Eq (f₁ x) (f x)\nh₁ : HasSubset.Subset t s\n⊢ MDifferentiableWithinAt I I' f₁ t x","decl":"theorem MDifferentiableWithinAt.congr_mono (h : MDifferentiableWithinAt I I' f s x)\n    (ht : ∀ x ∈ t, f₁ x = f x) (hx : f₁ x = f x) (h₁ : t ⊆ s) :\n    MDifferentiableWithinAt I I' f₁ t x :=\n  (HasMFDerivWithinAt.congr_mono h.hasMFDerivWithinAt ht hx h₁).mdifferentiableWithinAt\n\n"}
{"name":"MDifferentiableWithinAt.congr","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf f₁ : M → M'\nx : M\ns : Set M\nh : MDifferentiableWithinAt I I' f s x\nht : ∀ (x : M), Membership.mem s x → Eq (f₁ x) (f x)\nhx : Eq (f₁ x) (f x)\n⊢ MDifferentiableWithinAt I I' f₁ s x","decl":"theorem MDifferentiableWithinAt.congr (h : MDifferentiableWithinAt I I' f s x)\n    (ht : ∀ x ∈ s, f₁ x = f x) (hx : f₁ x = f x) : MDifferentiableWithinAt I I' f₁ s x :=\n  (HasMFDerivWithinAt.congr_mono h.hasMFDerivWithinAt ht hx (Subset.refl _)).mdifferentiableWithinAt\n\n"}
{"name":"MDifferentiableOn.congr_mono","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf f₁ : M → M'\ns t : Set M\nh : MDifferentiableOn I I' f s\nh' : ∀ (x : M), Membership.mem t x → Eq (f₁ x) (f x)\nh₁ : HasSubset.Subset t s\n⊢ MDifferentiableOn I I' f₁ t","decl":"theorem MDifferentiableOn.congr_mono (h : MDifferentiableOn I I' f s) (h' : ∀ x ∈ t, f₁ x = f x)\n    (h₁ : t ⊆ s) : MDifferentiableOn I I' f₁ t := fun x hx =>\n  (h x (h₁ hx)).congr_mono h' (h' x hx) h₁\n\n"}
{"name":"MDifferentiableAt.congr_of_eventuallyEq","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf f₁ : M → M'\nx : M\nh : MDifferentiableAt I I' f x\nhL : (nhds x).EventuallyEq f₁ f\n⊢ MDifferentiableAt I I' f₁ x","decl":"theorem MDifferentiableAt.congr_of_eventuallyEq (h : MDifferentiableAt I I' f x)\n    (hL : f₁ =ᶠ[𝓝 x] f) : MDifferentiableAt I I' f₁ x :=\n  (h.hasMFDerivAt.congr_of_eventuallyEq hL).mdifferentiableAt\n\n"}
{"name":"MDifferentiableWithinAt.mfderivWithin_congr_mono","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf f₁ : M → M'\nx : M\ns t : Set M\nh : MDifferentiableWithinAt I I' f s x\nhs : ∀ (x : M), Membership.mem t x → Eq (f₁ x) (f x)\nhx : Eq (f₁ x) (f x)\nhxt : UniqueMDiffWithinAt I t x\nh₁ : HasSubset.Subset t s\n⊢ Eq (mfderivWithin I I' f₁ t x) (mfderivWithin I I' f s x)","decl":"theorem MDifferentiableWithinAt.mfderivWithin_congr_mono (h : MDifferentiableWithinAt I I' f s x)\n    (hs : ∀ x ∈ t, f₁ x = f x) (hx : f₁ x = f x) (hxt : UniqueMDiffWithinAt I t x) (h₁ : t ⊆ s) :\n    mfderivWithin I I' f₁ t x = mfderivWithin I I' f s x :=\n  (HasMFDerivWithinAt.congr_mono h.hasMFDerivWithinAt hs hx h₁).mfderivWithin hxt\n\n"}
{"name":"MDifferentiableWithinAt.mfderivWithin_mono","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns t : Set M\nh : MDifferentiableWithinAt I I' f s x\nhxt : UniqueMDiffWithinAt I t x\nh₁ : HasSubset.Subset t s\n⊢ Eq (mfderivWithin I I' f t x) (mfderivWithin I I' f s x)","decl":"theorem MDifferentiableWithinAt.mfderivWithin_mono (h : MDifferentiableWithinAt I I' f s x)\n    (hxt : UniqueMDiffWithinAt I t x) (h₁ : t ⊆ s) :\n    mfderivWithin I I' f t x = mfderivWithin I I' f s x :=\n  h.mfderivWithin_congr_mono (fun _ _ ↦ rfl) rfl hxt h₁\n\n"}
{"name":"MDifferentiableWithinAt.mfderivWithin_mono_of_mem_nhdsWithin","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\ns t : Set M\nh : MDifferentiableWithinAt I I' f s x\nhxt : UniqueMDiffWithinAt I t x\nh₁ : Membership.mem (nhdsWithin x t) s\n⊢ Eq (mfderivWithin I I' f t x) (mfderivWithin I I' f s x)","decl":"theorem MDifferentiableWithinAt.mfderivWithin_mono_of_mem_nhdsWithin\n    (h : MDifferentiableWithinAt I I' f s x) (hxt : UniqueMDiffWithinAt I t x) (h₁ : s ∈ 𝓝[t] x) :\n    mfderivWithin I I' f t x = mfderivWithin I I' f s x :=\n  (HasMFDerivWithinAt.mono_of_mem_nhdsWithin h.hasMFDerivWithinAt h₁).mfderivWithin hxt\n\n"}
{"name":"Filter.EventuallyEq.mfderivWithin_eq","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf f₁ : M → M'\nx : M\ns : Set M\nhs : UniqueMDiffWithinAt I s x\nhL : (nhdsWithin x s).EventuallyEq f₁ f\nhx : Eq (f₁ x) (f x)\n⊢ Eq (mfderivWithin I I' f₁ s x) (mfderivWithin I I' f s x)","decl":"theorem Filter.EventuallyEq.mfderivWithin_eq (hs : UniqueMDiffWithinAt I s x) (hL : f₁ =ᶠ[𝓝[s] x] f)\n    (hx : f₁ x = f x) : mfderivWithin I I' f₁ s x = mfderivWithin I I' f s x := by\n  by_cases h : MDifferentiableWithinAt I I' f s x\n  · exact (h.hasMFDerivWithinAt.congr_of_eventuallyEq hL hx).mfderivWithin hs\n  · unfold mfderivWithin\n    rw [if_neg h, if_neg]\n    rwa [← hL.mdifferentiableWithinAt_iff hx]\n\n"}
{"name":"mfderivWithin_congr","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf f₁ : M → M'\nx : M\ns : Set M\nhs : UniqueMDiffWithinAt I s x\nhL : ∀ (x : M), Membership.mem s x → Eq (f₁ x) (f x)\nhx : Eq (f₁ x) (f x)\n⊢ Eq (mfderivWithin I I' f₁ s x) (mfderivWithin I I' f s x)","decl":"theorem mfderivWithin_congr (hs : UniqueMDiffWithinAt I s x) (hL : ∀ x ∈ s, f₁ x = f x)\n    (hx : f₁ x = f x) : mfderivWithin I I' f₁ s x = mfderivWithin I I' f s x :=\n  Filter.EventuallyEq.mfderivWithin_eq hs (Filter.eventuallyEq_of_mem self_mem_nhdsWithin hL) hx\n\n"}
{"name":"tangentMapWithin_congr","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf f₁ : M → M'\ns : Set M\nh : ∀ (x : M), Membership.mem s x → Eq (f x) (f₁ x)\np : TangentBundle I M\nhp : Membership.mem s p.proj\nhs : UniqueMDiffWithinAt I s p.proj\n⊢ Eq (tangentMapWithin I I' f s p) (tangentMapWithin I I' f₁ s p)","decl":"theorem tangentMapWithin_congr (h : ∀ x ∈ s, f x = f₁ x) (p : TangentBundle I M) (hp : p.1 ∈ s)\n    (hs : UniqueMDiffWithinAt I s p.1) :\n    tangentMapWithin I I' f s p = tangentMapWithin I I' f₁ s p := by\n  refine TotalSpace.ext (h p.1 hp) ?_\n  -- This used to be `simp only`, but we need `erw` after https://github.com/leanprover/lean4/pull/2644\n  rw [tangentMapWithin, h p.1 hp, tangentMapWithin, mfderivWithin_congr hs h (h _ hp)]\n\n"}
{"name":"Filter.EventuallyEq.mfderiv_eq","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf f₁ : M → M'\nx : M\nhL : (nhds x).EventuallyEq f₁ f\n⊢ Eq (mfderiv I I' f₁ x) (mfderiv I I' f x)","decl":"theorem Filter.EventuallyEq.mfderiv_eq (hL : f₁ =ᶠ[𝓝 x] f) :\n    mfderiv I I' f₁ x = mfderiv I I' f x := by\n  have A : f₁ x = f x := (mem_of_mem_nhds hL :)\n  rw [← mfderivWithin_univ, ← mfderivWithin_univ]\n  rw [← nhdsWithin_univ] at hL\n  exact hL.mfderivWithin_eq (uniqueMDiffWithinAt_univ I) A\n\n"}
{"name":"mfderiv_congr_point","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx x' : M\nh : Eq x x'\n⊢ Eq (mfderiv I I' f x) (mfderiv I I' f x')","decl":"/-- A congruence lemma for `mfderiv`, (ab)using the fact that `TangentSpace I' (f x)` is\ndefinitionally equal to `E'`. -/\ntheorem mfderiv_congr_point {x' : M} (h : x = x') :\n    @Eq (E →L[𝕜] E') (mfderiv I I' f x) (mfderiv I I' f x') := by subst h; rfl\n\n"}
{"name":"mfderiv_congr","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝⁷ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝⁶ : TopologicalSpace M\ninst✝⁵ : ChartedSpace H M\nE' : Type u_5\ninst✝⁴ : NormedAddCommGroup E'\ninst✝³ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝² : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nf : M → M'\nx : M\nf' : M → M'\nh : Eq f f'\n⊢ Eq (mfderiv I I' f x) (mfderiv I I' f' x)","decl":"/-- A congruence lemma for `mfderiv`, (ab)using the fact that `TangentSpace I' (f x)` is\ndefinitionally equal to `E'`. -/\ntheorem mfderiv_congr {f' : M → M'} (h : f = f') :\n    @Eq (E →L[𝕜] E') (mfderiv I I' f x) (mfderiv I I' f' x) := by subst h; rfl\n\n"}
{"name":"HasMFDerivWithinAt.comp","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\nx : M\ns : Set M\ng : M' → M''\nu : Set M'\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\ng' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I' (f x)) (TangentSpace I'' (g (f x)))\nhg : HasMFDerivWithinAt I' I'' g u (f x) g'\nhf : HasMFDerivWithinAt I I' f s x f'\nhst : HasSubset.Subset s (Set.preimage f u)\n⊢ HasMFDerivWithinAt I I'' (Function.comp g f) s x (g'.comp f')","decl":"theorem HasMFDerivWithinAt.comp (hg : HasMFDerivWithinAt I' I'' g u (f x) g')\n    (hf : HasMFDerivWithinAt I I' f s x f') (hst : s ⊆ f ⁻¹' u) :\n    HasMFDerivWithinAt I I'' (g ∘ f) s x (g'.comp f') := by\n  refine ⟨ContinuousWithinAt.comp hg.1 hf.1 hst, ?_⟩\n  have A :\n    HasFDerivWithinAt (writtenInExtChartAt I' I'' (f x) g ∘ writtenInExtChartAt I I' x f)\n      (ContinuousLinearMap.comp g' f' : E →L[𝕜] E'') ((extChartAt I x).symm ⁻¹' s ∩ range I)\n      ((extChartAt I x) x) := by\n    have :\n      (extChartAt I x).symm ⁻¹' (f ⁻¹' (extChartAt I' (f x)).source) ∈\n        𝓝[(extChartAt I x).symm ⁻¹' s ∩ range I] (extChartAt I x) x :=\n      extChartAt_preimage_mem_nhdsWithin\n        (hf.1.preimage_mem_nhdsWithin (extChartAt_source_mem_nhds _))\n    unfold HasMFDerivWithinAt at *\n    rw [← hasFDerivWithinAt_inter' this, ← extChartAt_preimage_inter_eq] at hf ⊢\n    have : writtenInExtChartAt I I' x f ((extChartAt I x) x) = (extChartAt I' (f x)) (f x) := by\n      simp only [mfld_simps]\n    rw [← this] at hg\n    apply HasFDerivWithinAt.comp ((extChartAt I x) x) hg.2 hf.2 _\n    intro y hy\n    simp only [mfld_simps] at hy\n    have : f (((chartAt H x).symm : H → M) (I.symm y)) ∈ u := hst hy.1.1\n    simp only [hy, this, mfld_simps]\n  apply A.congr_of_eventuallyEq (writtenInExtChartAt_comp hf.1)\n  simp only [mfld_simps]\n\n"}
{"name":"HasMFDerivAt.comp","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\nx : M\ng : M' → M''\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\ng' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I' (f x)) (TangentSpace I'' (g (f x)))\nhg : HasMFDerivAt I' I'' g (f x) g'\nhf : HasMFDerivAt I I' f x f'\n⊢ HasMFDerivAt I I'' (Function.comp g f) x (g'.comp f')","decl":"/-- The **chain rule for manifolds**. -/\ntheorem HasMFDerivAt.comp (hg : HasMFDerivAt I' I'' g (f x) g') (hf : HasMFDerivAt I I' f x f') :\n    HasMFDerivAt I I'' (g ∘ f) x (g'.comp f') := by\n  rw [← hasMFDerivWithinAt_univ] at *\n  exact HasMFDerivWithinAt.comp x (hg.mono (subset_univ _)) hf subset_preimage_univ\n\n"}
{"name":"HasMFDerivAt.comp_hasMFDerivWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\nx : M\ns : Set M\ng : M' → M''\nf' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I x) (TangentSpace I' (f x))\ng' : ContinuousLinearMap (RingHom.id 𝕜) (TangentSpace I' (f x)) (TangentSpace I'' (g (f x)))\nhg : HasMFDerivAt I' I'' g (f x) g'\nhf : HasMFDerivWithinAt I I' f s x f'\n⊢ HasMFDerivWithinAt I I'' (Function.comp g f) s x (g'.comp f')","decl":"theorem HasMFDerivAt.comp_hasMFDerivWithinAt (hg : HasMFDerivAt I' I'' g (f x) g')\n    (hf : HasMFDerivWithinAt I I' f s x f') :\n    HasMFDerivWithinAt I I'' (g ∘ f) s x (g'.comp f') := by\n  rw [← hasMFDerivWithinAt_univ] at *\n  exact HasMFDerivWithinAt.comp x (hg.mono (subset_univ _)) hf subset_preimage_univ\n\n"}
{"name":"MDifferentiableWithinAt.comp","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\nx : M\ns : Set M\ng : M' → M''\nu : Set M'\nhg : MDifferentiableWithinAt I' I'' g u (f x)\nhf : MDifferentiableWithinAt I I' f s x\nh : HasSubset.Subset s (Set.preimage f u)\n⊢ MDifferentiableWithinAt I I'' (Function.comp g f) s x","decl":"theorem MDifferentiableWithinAt.comp (hg : MDifferentiableWithinAt I' I'' g u (f x))\n    (hf : MDifferentiableWithinAt I I' f s x) (h : s ⊆ f ⁻¹' u) :\n    MDifferentiableWithinAt I I'' (g ∘ f) s x := by\n  rcases hf.2 with ⟨f', hf'⟩\n  have F : HasMFDerivWithinAt I I' f s x f' := ⟨hf.1, hf'⟩\n  rcases hg.2 with ⟨g', hg'⟩\n  have G : HasMFDerivWithinAt I' I'' g u (f x) g' := ⟨hg.1, hg'⟩\n  exact (HasMFDerivWithinAt.comp x G F h).mdifferentiableWithinAt\n\n"}
{"name":"MDifferentiableWithinAt.comp_of_eq","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\nx : M\ns : Set M\ng : M' → M''\nu : Set M'\ny : M'\nhg : MDifferentiableWithinAt I' I'' g u y\nhf : MDifferentiableWithinAt I I' f s x\nh : HasSubset.Subset s (Set.preimage f u)\nhy : Eq (f x) y\n⊢ MDifferentiableWithinAt I I'' (Function.comp g f) s x","decl":"theorem MDifferentiableWithinAt.comp_of_eq {y : M'} (hg : MDifferentiableWithinAt I' I'' g u y)\n    (hf : MDifferentiableWithinAt I I' f s x) (h : s ⊆ f ⁻¹' u) (hy : f x = y) :\n    MDifferentiableWithinAt I I'' (g ∘ f) s x := by\n  subst hy; exact hg.comp _ hf h\n\n"}
{"name":"MDifferentiableWithinAt.comp_of_preimage_mem_nhdsWithin","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\nx : M\ns : Set M\ng : M' → M''\nu : Set M'\nhg : MDifferentiableWithinAt I' I'' g u (f x)\nhf : MDifferentiableWithinAt I I' f s x\nh : Membership.mem (nhdsWithin x s) (Set.preimage f u)\n⊢ MDifferentiableWithinAt I I'' (Function.comp g f) s x","decl":"theorem MDifferentiableWithinAt.comp_of_preimage_mem_nhdsWithin\n    (hg : MDifferentiableWithinAt I' I'' g u (f x))\n    (hf : MDifferentiableWithinAt I I' f s x) (h : f ⁻¹' u ∈ 𝓝[s] x) :\n    MDifferentiableWithinAt I I'' (g ∘ f) s x :=\n  (hg.comp _ (hf.mono inter_subset_right) inter_subset_left).mono_of_mem_nhdsWithin\n    (Filter.inter_mem h self_mem_nhdsWithin)\n\n"}
{"name":"MDifferentiableWithinAt.comp_of_preimage_mem_nhdsWithin_of_eq","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\nx : M\ns : Set M\ng : M' → M''\nu : Set M'\ny : M'\nhg : MDifferentiableWithinAt I' I'' g u y\nhf : MDifferentiableWithinAt I I' f s x\nh : Membership.mem (nhdsWithin x s) (Set.preimage f u)\nhy : Eq (f x) y\n⊢ MDifferentiableWithinAt I I'' (Function.comp g f) s x","decl":"theorem MDifferentiableWithinAt.comp_of_preimage_mem_nhdsWithin_of_eq {y : M'}\n    (hg : MDifferentiableWithinAt I' I'' g u y)\n    (hf : MDifferentiableWithinAt I I' f s x) (h : f ⁻¹' u ∈ 𝓝[s] x) (hy : f x = y) :\n    MDifferentiableWithinAt I I'' (g ∘ f) s x := by\n  subst hy; exact MDifferentiableWithinAt.comp_of_preimage_mem_nhdsWithin _ hg hf h\n\n"}
{"name":"MDifferentiableAt.comp","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\nx : M\ng : M' → M''\nhg : MDifferentiableAt I' I'' g (f x)\nhf : MDifferentiableAt I I' f x\n⊢ MDifferentiableAt I I'' (Function.comp g f) x","decl":"theorem MDifferentiableAt.comp (hg : MDifferentiableAt I' I'' g (f x))\n    (hf : MDifferentiableAt I I' f x) : MDifferentiableAt I I'' (g ∘ f) x :=\n  (hg.hasMFDerivAt.comp x hf.hasMFDerivAt).mdifferentiableAt\n\n"}
{"name":"MDifferentiableAt.comp_of_eq","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\nx : M\ng : M' → M''\ny : M'\nhg : MDifferentiableAt I' I'' g y\nhf : MDifferentiableAt I I' f x\nhy : Eq (f x) y\n⊢ MDifferentiableAt I I'' (Function.comp g f) x","decl":"theorem MDifferentiableAt.comp_of_eq {y : M'} (hg : MDifferentiableAt I' I'' g y)\n    (hf : MDifferentiableAt I I' f x) (hy : f x = y) : MDifferentiableAt I I'' (g ∘ f) x := by\n  subst hy; exact hg.comp _ hf\n\n"}
{"name":"MDifferentiableAt.comp_mdifferentiableWithinAt","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\nx : M\ns : Set M\ng : M' → M''\nhg : MDifferentiableAt I' I'' g (f x)\nhf : MDifferentiableWithinAt I I' f s x\n⊢ MDifferentiableWithinAt I I'' (Function.comp g f) s x","decl":"theorem MDifferentiableAt.comp_mdifferentiableWithinAt\n    (hg : MDifferentiableAt I' I'' g (f x)) (hf : MDifferentiableWithinAt I I' f s x) :\n    MDifferentiableWithinAt I I'' (g ∘ f) s x := by\n  rw [← mdifferentiableWithinAt_univ] at hg\n  exact hg.comp _ hf (by simp)\n\n"}
{"name":"MDifferentiableAt.comp_mdifferentiableWithinAt_of_eq","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\nx : M\ns : Set M\ng : M' → M''\ny : M'\nhg : MDifferentiableAt I' I'' g y\nhf : MDifferentiableWithinAt I I' f s x\nhy : Eq (f x) y\n⊢ MDifferentiableWithinAt I I'' (Function.comp g f) s x","decl":"theorem MDifferentiableAt.comp_mdifferentiableWithinAt_of_eq {y : M'}\n    (hg : MDifferentiableAt I' I'' g y) (hf : MDifferentiableWithinAt I I' f s x) (hy : f x = y) :\n    MDifferentiableWithinAt I I'' (g ∘ f) s x := by\n  subst hy; exact hg.comp_mdifferentiableWithinAt _ hf\n\n"}
{"name":"mfderivWithin_comp","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\nx : M\ns : Set M\ng : M' → M''\nu : Set M'\nhg : MDifferentiableWithinAt I' I'' g u (f x)\nhf : MDifferentiableWithinAt I I' f s x\nh : HasSubset.Subset s (Set.preimage f u)\nhxs : UniqueMDiffWithinAt I s x\n⊢ Eq (mfderivWithin I I'' (Function.comp g f) s x) ((mfderivWithin I' I'' g u (f x)).comp (mfderivWithin I I' f s x))","decl":"theorem mfderivWithin_comp (hg : MDifferentiableWithinAt I' I'' g u (f x))\n    (hf : MDifferentiableWithinAt I I' f s x) (h : s ⊆ f ⁻¹' u) (hxs : UniqueMDiffWithinAt I s x) :\n    mfderivWithin I I'' (g ∘ f) s x =\n      (mfderivWithin I' I'' g u (f x)).comp (mfderivWithin I I' f s x) := by\n  apply HasMFDerivWithinAt.mfderivWithin _ hxs\n  exact HasMFDerivWithinAt.comp x hg.hasMFDerivWithinAt hf.hasMFDerivWithinAt h\n\n"}
{"name":"mfderivWithin_comp_of_eq","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\ns : Set M\ng : M' → M''\nu : Set M'\nx : M\ny : M'\nhg : MDifferentiableWithinAt I' I'' g u y\nhf : MDifferentiableWithinAt I I' f s x\nh : HasSubset.Subset s (Set.preimage f u)\nhxs : UniqueMDiffWithinAt I s x\nhy : Eq (f x) y\n⊢ Eq (mfderivWithin I I'' (Function.comp g f) s x) ((mfderivWithin I' I'' g u y).comp (mfderivWithin I I' f s x))","decl":"theorem mfderivWithin_comp_of_eq {x : M} {y : M'} (hg : MDifferentiableWithinAt I' I'' g u y)\n    (hf : MDifferentiableWithinAt I I' f s x) (h : s ⊆ f ⁻¹' u) (hxs : UniqueMDiffWithinAt I s x)\n    (hy : f x = y) :\n    mfderivWithin I I'' (g ∘ f) s x =\n      (mfderivWithin I' I'' g u y).comp (mfderivWithin I I' f s x) := by\n  subst hy; exact mfderivWithin_comp x hg hf h hxs\n\n"}
{"name":"mfderivWithin_comp_of_preimage_mem_nhdsWithin","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\nx : M\ns : Set M\ng : M' → M''\nu : Set M'\nhg : MDifferentiableWithinAt I' I'' g u (f x)\nhf : MDifferentiableWithinAt I I' f s x\nh : Membership.mem (nhdsWithin x s) (Set.preimage f u)\nhxs : UniqueMDiffWithinAt I s x\n⊢ Eq (mfderivWithin I I'' (Function.comp g f) s x) ((mfderivWithin I' I'' g u (f x)).comp (mfderivWithin I I' f s x))","decl":"theorem mfderivWithin_comp_of_preimage_mem_nhdsWithin\n    (hg : MDifferentiableWithinAt I' I'' g u (f x))\n    (hf : MDifferentiableWithinAt I I' f s x) (h : f ⁻¹' u ∈ 𝓝[s] x)\n    (hxs : UniqueMDiffWithinAt I s x) :\n    mfderivWithin I I'' (g ∘ f) s x =\n      (mfderivWithin I' I'' g u (f x)).comp (mfderivWithin I I' f s x) := by\n  have A : s ∩ f ⁻¹' u ∈ 𝓝[s] x := Filter.inter_mem self_mem_nhdsWithin h\n  have B : mfderivWithin I I'' (g ∘ f) s x = mfderivWithin I I'' (g ∘ f) (s ∩ f ⁻¹' u) x := by\n    apply MDifferentiableWithinAt.mfderivWithin_mono_of_mem_nhdsWithin _ hxs A\n    exact hg.comp _ (hf.mono inter_subset_left) inter_subset_right\n  have C : mfderivWithin I I' f s x = mfderivWithin I I' f (s ∩ f ⁻¹' u) x :=\n    MDifferentiableWithinAt.mfderivWithin_mono_of_mem_nhdsWithin (hf.mono inter_subset_left) hxs A\n  rw [B, C]\n  exact mfderivWithin_comp _ hg (hf.mono inter_subset_left) inter_subset_right (hxs.inter' h)\n\n"}
{"name":"mfderivWithin_comp_of_preimage_mem_nhdsWithin_of_eq","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\nx : M\ns : Set M\ng : M' → M''\nu : Set M'\ny : M'\nhg : MDifferentiableWithinAt I' I'' g u y\nhf : MDifferentiableWithinAt I I' f s x\nh : Membership.mem (nhdsWithin x s) (Set.preimage f u)\nhxs : UniqueMDiffWithinAt I s x\nhy : Eq (f x) y\n⊢ Eq (mfderivWithin I I'' (Function.comp g f) s x) ((mfderivWithin I' I'' g u y).comp (mfderivWithin I I' f s x))","decl":"theorem mfderivWithin_comp_of_preimage_mem_nhdsWithin_of_eq {y : M'}\n    (hg : MDifferentiableWithinAt I' I'' g u y)\n    (hf : MDifferentiableWithinAt I I' f s x) (h : f ⁻¹' u ∈ 𝓝[s] x)\n    (hxs : UniqueMDiffWithinAt I s x) (hy : f x = y) :\n    mfderivWithin I I'' (g ∘ f) s x =\n      (mfderivWithin I' I'' g u y).comp (mfderivWithin I I' f s x) := by\n  subst hy; exact mfderivWithin_comp_of_preimage_mem_nhdsWithin _ hg hf h hxs\n\n"}
{"name":"mfderiv_comp_mfderivWithin","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\nx : M\ns : Set M\ng : M' → M''\nhg : MDifferentiableAt I' I'' g (f x)\nhf : MDifferentiableWithinAt I I' f s x\nhxs : UniqueMDiffWithinAt I s x\n⊢ Eq (mfderivWithin I I'' (Function.comp g f) s x) ((mfderiv I' I'' g (f x)).comp (mfderivWithin I I' f s x))","decl":"theorem mfderiv_comp_mfderivWithin (hg : MDifferentiableAt I' I'' g (f x))\n    (hf : MDifferentiableWithinAt I I' f s x) (hxs : UniqueMDiffWithinAt I s x) :\n    mfderivWithin I I'' (g ∘ f) s x =\n      (mfderiv I' I'' g (f x)).comp (mfderivWithin I I' f s x) := by\n  rw [← mfderivWithin_univ]\n  exact mfderivWithin_comp _ hg.mdifferentiableWithinAt hf (by simp) hxs\n\n"}
{"name":"mfderiv_comp_mfderivWithin_of_eq","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\ns : Set M\ng : M' → M''\nx : M\ny : M'\nhg : MDifferentiableAt I' I'' g y\nhf : MDifferentiableWithinAt I I' f s x\nhxs : UniqueMDiffWithinAt I s x\nhy : Eq (f x) y\n⊢ Eq (mfderivWithin I I'' (Function.comp g f) s x) ((mfderiv I' I'' g y).comp (mfderivWithin I I' f s x))","decl":"theorem mfderiv_comp_mfderivWithin_of_eq {x : M} {y : M'} (hg : MDifferentiableAt I' I'' g y)\n    (hf : MDifferentiableWithinAt I I' f s x) (hxs : UniqueMDiffWithinAt I s x) (hy : f x = y) :\n    mfderivWithin I I'' (g ∘ f) s x =\n      (mfderiv I' I'' g y).comp (mfderivWithin I I' f s x) := by\n  subst hy; exact mfderiv_comp_mfderivWithin x hg hf hxs\n\n"}
{"name":"mfderiv_comp","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\nx : M\ng : M' → M''\nhg : MDifferentiableAt I' I'' g (f x)\nhf : MDifferentiableAt I I' f x\n⊢ Eq (mfderiv I I'' (Function.comp g f) x) ((mfderiv I' I'' g (f x)).comp (mfderiv I I' f x))","decl":"theorem mfderiv_comp (hg : MDifferentiableAt I' I'' g (f x)) (hf : MDifferentiableAt I I' f x) :\n    mfderiv I I'' (g ∘ f) x = (mfderiv I' I'' g (f x)).comp (mfderiv I I' f x) := by\n  apply HasMFDerivAt.mfderiv\n  exact HasMFDerivAt.comp x hg.hasMFDerivAt hf.hasMFDerivAt\n\n"}
{"name":"mfderiv_comp_of_eq","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\ng : M' → M''\nx : M\ny : M'\nhg : MDifferentiableAt I' I'' g y\nhf : MDifferentiableAt I I' f x\nhy : Eq (f x) y\n⊢ Eq (mfderiv I I'' (Function.comp g f) x) ((mfderiv I' I'' g (f x)).comp (mfderiv I I' f x))","decl":"theorem mfderiv_comp_of_eq {x : M} {y : M'} (hg : MDifferentiableAt I' I'' g y)\n    (hf : MDifferentiableAt I I' f x) (hy : f x = y) :\n    mfderiv I I'' (g ∘ f) x = (mfderiv I' I'' g (f x)).comp (mfderiv I I' f x) := by\n  subst hy; exact mfderiv_comp x hg hf\n\n"}
{"name":"mfderiv_comp_apply","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\nx : M\ng : M' → M''\nhg : MDifferentiableAt I' I'' g (f x)\nhf : MDifferentiableAt I I' f x\nv : TangentSpace I x\n⊢ Eq ((mfderiv I I'' (Function.comp g f) x) v) ((mfderiv I' I'' g (f x)) ((mfderiv I I' f x) v))","decl":"theorem mfderiv_comp_apply (hg : MDifferentiableAt I' I'' g (f x))\n    (hf : MDifferentiableAt I I' f x) (v : TangentSpace I x) :\n    mfderiv I I'' (g ∘ f) x v = (mfderiv I' I'' g (f x)) ((mfderiv I I' f x) v) := by\n  rw [mfderiv_comp _ hg hf]\n  rfl\n\n"}
{"name":"mfderiv_comp_apply_of_eq","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\nx : M\ng : M' → M''\ny : M'\nhg : MDifferentiableAt I' I'' g y\nhf : MDifferentiableAt I I' f x\nhy : Eq (f x) y\nv : TangentSpace I x\n⊢ Eq ((mfderiv I I'' (Function.comp g f) x) v) ((mfderiv I' I'' g y) ((mfderiv I I' f x) v))","decl":"theorem mfderiv_comp_apply_of_eq {y : M'} (hg : MDifferentiableAt I' I'' g y)\n    (hf : MDifferentiableAt I I' f x)  (hy : f x = y) (v : TangentSpace I x) :\n    mfderiv I I'' (g ∘ f) x v = (mfderiv I' I'' g y) ((mfderiv I I' f x) v) := by\n  subst hy; exact mfderiv_comp_apply _ hg hf v\n\n"}
{"name":"MDifferentiableOn.comp","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\ns : Set M\ng : M' → M''\nu : Set M'\nhg : MDifferentiableOn I' I'' g u\nhf : MDifferentiableOn I I' f s\nst : HasSubset.Subset s (Set.preimage f u)\n⊢ MDifferentiableOn I I'' (Function.comp g f) s","decl":"theorem MDifferentiableOn.comp (hg : MDifferentiableOn I' I'' g u) (hf : MDifferentiableOn I I' f s)\n    (st : s ⊆ f ⁻¹' u) : MDifferentiableOn I I'' (g ∘ f) s := fun x hx =>\n  MDifferentiableWithinAt.comp x (hg (f x) (st hx)) (hf x hx) st\n\n"}
{"name":"MDifferentiable.comp_mdifferentiableOn","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\ns : Set M\ng : M' → M''\nhg : MDifferentiable I' I'' g\nhf : MDifferentiableOn I I' f s\n⊢ MDifferentiableOn I I'' (Function.comp g f) s","decl":"theorem MDifferentiable.comp_mdifferentiableOn (hg : MDifferentiable I' I'' g)\n    (hf : MDifferentiableOn I I' f s) : MDifferentiableOn I I'' (g ∘ f) s := by\n  rw [← mdifferentiableOn_univ] at hg\n  exact hg.comp hf (by simp)\n\n"}
{"name":"MDifferentiable.comp","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\ng : M' → M''\nhg : MDifferentiable I' I'' g\nhf : MDifferentiable I I' f\n⊢ MDifferentiable I I'' (Function.comp g f)","decl":"theorem MDifferentiable.comp (hg : MDifferentiable I' I'' g) (hf : MDifferentiable I I' f) :\n    MDifferentiable I I'' (g ∘ f) := fun x => MDifferentiableAt.comp x (hg (f x)) (hf x)\n\n"}
{"name":"tangentMapWithin_comp_at","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\ns : Set M\ng : M' → M''\nu : Set M'\np : TangentBundle I M\nhg : MDifferentiableWithinAt I' I'' g u (f p.proj)\nhf : MDifferentiableWithinAt I I' f s p.proj\nh : HasSubset.Subset s (Set.preimage f u)\nhps : UniqueMDiffWithinAt I s p.proj\n⊢ Eq (tangentMapWithin I I'' (Function.comp g f) s p) (tangentMapWithin I' I'' g u (tangentMapWithin I I' f s p))","decl":"theorem tangentMapWithin_comp_at (p : TangentBundle I M)\n    (hg : MDifferentiableWithinAt I' I'' g u (f p.1)) (hf : MDifferentiableWithinAt I I' f s p.1)\n    (h : s ⊆ f ⁻¹' u) (hps : UniqueMDiffWithinAt I s p.1) :\n    tangentMapWithin I I'' (g ∘ f) s p =\n      tangentMapWithin I' I'' g u (tangentMapWithin I I' f s p) := by\n  simp only [tangentMapWithin, mfld_simps]\n  rw [mfderivWithin_comp p.1 hg hf h hps]\n  rfl\n\n"}
{"name":"tangentMap_comp_at","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\ng : M' → M''\np : TangentBundle I M\nhg : MDifferentiableAt I' I'' g (f p.proj)\nhf : MDifferentiableAt I I' f p.proj\n⊢ Eq (tangentMap I I'' (Function.comp g f) p) (tangentMap I' I'' g (tangentMap I I' f p))","decl":"theorem tangentMap_comp_at (p : TangentBundle I M) (hg : MDifferentiableAt I' I'' g (f p.1))\n    (hf : MDifferentiableAt I I' f p.1) :\n    tangentMap I I'' (g ∘ f) p = tangentMap I' I'' g (tangentMap I I' f p) := by\n  simp only [tangentMap, mfld_simps]\n  rw [mfderiv_comp p.1 hg hf]\n  rfl\n\n"}
{"name":"tangentMap_comp","module":"Mathlib.Geometry.Manifold.MFDeriv.Basic","initialProofState":"𝕜 : Type u_1\ninst✝¹⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝¹⁴ : NormedAddCommGroup E\ninst✝¹³ : NormedSpace 𝕜 E\nH : Type u_3\ninst✝¹² : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_4\ninst✝¹¹ : TopologicalSpace M\ninst✝¹⁰ : ChartedSpace H M\nE' : Type u_5\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nH' : Type u_6\ninst✝⁷ : TopologicalSpace H'\nI' : ModelWithCorners 𝕜 E' H'\nM' : Type u_7\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nE'' : Type u_8\ninst✝⁴ : NormedAddCommGroup E''\ninst✝³ : NormedSpace 𝕜 E''\nH'' : Type u_9\ninst✝² : TopologicalSpace H''\nI'' : ModelWithCorners 𝕜 E'' H''\nM'' : Type u_10\ninst✝¹ : TopologicalSpace M''\ninst✝ : ChartedSpace H'' M''\nf : M → M'\ng : M' → M''\nhg : MDifferentiable I' I'' g\nhf : MDifferentiable I I' f\n⊢ Eq (tangentMap I I'' (Function.comp g f)) (Function.comp (tangentMap I' I'' g) (tangentMap I I' f))","decl":"theorem tangentMap_comp (hg : MDifferentiable I' I'' g) (hf : MDifferentiable I I' f) :\n    tangentMap I I'' (g ∘ f) = tangentMap I' I'' g ∘ tangentMap I I' f := by\n  ext p : 1; exact tangentMap_comp_at _ (hg _) (hf _)\n\n"}
