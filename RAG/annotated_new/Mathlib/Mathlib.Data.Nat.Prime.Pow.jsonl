{"name":"Nat.pow_minFac","module":"Mathlib.Data.Nat.Prime.Pow","initialProofState":"n k : Nat\nhk : Ne k 0\n⊢ Eq (HPow.hPow n k).minFac n.minFac","decl":"theorem pow_minFac {n k : ℕ} (hk : k ≠ 0) : (n ^ k).minFac = n.minFac := by\n  rcases eq_or_ne n 1 with (rfl | hn)\n  · simp\n  have hnk : n ^ k ≠ 1 := fun hk' => hn ((pow_eq_one_iff hk).1 hk')\n  apply (minFac_le_of_dvd (minFac_prime hn).two_le ((minFac_dvd n).pow hk)).antisymm\n  apply\n    minFac_le_of_dvd (minFac_prime hnk).two_le\n      ((minFac_prime hnk).dvd_of_dvd_pow (minFac_dvd _))\n\n"}
{"name":"Nat.Prime.pow_minFac","module":"Mathlib.Data.Nat.Prime.Pow","initialProofState":"p k : Nat\nhp : Nat.Prime p\nhk : Ne k 0\n⊢ Eq (HPow.hPow p k).minFac p","decl":"theorem Prime.pow_minFac {p k : ℕ} (hp : p.Prime) (hk : k ≠ 0) : (p ^ k).minFac = p := by\n  rw [Nat.pow_minFac hk, hp.minFac_eq]\n\n"}
