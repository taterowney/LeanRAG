{"name":"Real.convs_eq_convergent","module":"Mathlib.NumberTheory.DiophantineApproximation.ContinuedFractions","initialProofState":"ξ : Real\nn : Nat\n⊢ Eq ((GenContFract.of ξ).convs n) ↑(ξ.convergent n)","decl":"/-- The `n`th convergent of the `GenContFract.of ξ` agrees with `ξ.convergent n`. -/\ntheorem convs_eq_convergent (ξ : ℝ) (n : ℕ) :\n    (GenContFract.of ξ).convs n = ξ.convergent n := by\n  induction' n with n ih generalizing ξ\n  · simp only [zeroth_conv_eq_h, of_h_eq_floor, convergent_zero, Rat.cast_intCast]\n  · rw [convs_succ, ih (fract ξ)⁻¹, convergent_succ, one_div]\n    norm_cast\n\n"}
{"name":"Real.exists_convs_eq_rat","module":"Mathlib.NumberTheory.DiophantineApproximation.ContinuedFractions","initialProofState":"ξ : Real\nq : Rat\nh : LT.lt (abs (HSub.hSub ξ ↑q)) (HDiv.hDiv 1 (HMul.hMul 2 (HPow.hPow (↑q.den) 2)))\n⊢ Exists fun n => Eq ((GenContFract.of ξ).convs n) ↑q","decl":"/-- The main result, *Legendre's Theorem* on rational approximation:\nif `ξ` is a real number and `q` is a rational number such that `|ξ - q| < 1/(2*q.den^2)`,\nthen `q` is a convergent of the continued fraction expansion of `ξ`.\nThis is the version using `GenContFract.convs`. -/\ntheorem exists_convs_eq_rat {q : ℚ}\n    (h : |ξ - q| < 1 / (2 * (q.den : ℝ) ^ 2)) : ∃ n, (GenContFract.of ξ).convs n = q := by\n  obtain ⟨n, hn⟩ := exists_rat_eq_convergent h\n  exact ⟨n, hn.symm ▸ convs_eq_convergent ξ n⟩\n\n"}
