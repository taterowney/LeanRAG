{"name":"ModuleCat.MonoidalCategory.braiding_naturality","module":"Mathlib.Algebra.Category.ModuleCat.Monoidal.Symmetric","initialProofState":"R : Type u\ninst✝ : CommRing R\nX₁ X₂ Y₁ Y₂ : ModuleCat R\nf : Quiver.Hom X₁ Y₁\ng : Quiver.Hom X₂ Y₂\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.MonoidalCategoryStruct.tensorHom f g) (Y₁.braiding Y₂).hom) (CategoryTheory.CategoryStruct.comp (X₁.braiding X₂).hom (CategoryTheory.MonoidalCategoryStruct.tensorHom g f))","decl":"@[simp]\ntheorem braiding_naturality {X₁ X₂ Y₁ Y₂ : ModuleCat.{u} R} (f : X₁ ⟶ Y₁) (g : X₂ ⟶ Y₂) :\n    (f ⊗ g) ≫ (Y₁.braiding Y₂).hom = (X₁.braiding X₂).hom ≫ (g ⊗ f) := by\n  ext : 1\n  apply TensorProduct.ext'\n  intro x y\n  rfl\n\n"}
{"name":"ModuleCat.MonoidalCategory.braiding_naturality_left","module":"Mathlib.Algebra.Category.ModuleCat.Monoidal.Symmetric","initialProofState":"R : Type u\ninst✝ : CommRing R\nX Y : ModuleCat R\nf : Quiver.Hom X Y\nZ : ModuleCat R\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.MonoidalCategoryStruct.whiskerRight f Z) (Y.braiding Z).hom) (CategoryTheory.CategoryStruct.comp (X.braiding Z).hom (CategoryTheory.MonoidalCategoryStruct.whiskerLeft Z f))","decl":"@[simp]\ntheorem braiding_naturality_left {X Y : ModuleCat R} (f : X ⟶ Y) (Z : ModuleCat R) :\n    f ▷ Z ≫ (braiding Y Z).hom = (braiding X Z).hom ≫ Z ◁ f := by\n  simp_rw [← id_tensorHom]\n  apply braiding_naturality\n\n"}
{"name":"ModuleCat.MonoidalCategory.braiding_naturality_right","module":"Mathlib.Algebra.Category.ModuleCat.Monoidal.Symmetric","initialProofState":"R : Type u\ninst✝ : CommRing R\nX Y Z : ModuleCat R\nf : Quiver.Hom Y Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.MonoidalCategoryStruct.whiskerLeft X f) (X.braiding Z).hom) (CategoryTheory.CategoryStruct.comp (X.braiding Y).hom (CategoryTheory.MonoidalCategoryStruct.whiskerRight f X))","decl":"@[simp]\ntheorem braiding_naturality_right (X : ModuleCat R) {Y Z : ModuleCat R} (f : Y ⟶ Z) :\n    X ◁ f ≫ (braiding X Z).hom = (braiding X Y).hom ≫ f ▷ X := by\n  simp_rw [← id_tensorHom]\n  apply braiding_naturality\n\n"}
{"name":"ModuleCat.MonoidalCategory.hexagon_forward","module":"Mathlib.Algebra.Category.ModuleCat.Monoidal.Symmetric","initialProofState":"R : Type u\ninst✝ : CommRing R\nX Y Z : ModuleCat R\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.MonoidalCategoryStruct.associator X Y Z).hom (CategoryTheory.CategoryStruct.comp (X.braiding (CategoryTheory.MonoidalCategoryStruct.tensorObj Y Z)).hom (CategoryTheory.MonoidalCategoryStruct.associator Y Z X).hom)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.MonoidalCategoryStruct.whiskerRight (X.braiding Y).hom Z) (CategoryTheory.CategoryStruct.comp (CategoryTheory.MonoidalCategoryStruct.associator Y X Z).hom (CategoryTheory.MonoidalCategoryStruct.whiskerLeft Y (X.braiding Z).hom)))","decl":"@[simp]\ntheorem hexagon_forward (X Y Z : ModuleCat.{u} R) :\n    (α_ X Y Z).hom ≫ (braiding X _).hom ≫ (α_ Y Z X).hom =\n      (braiding X Y).hom ▷ Z ≫ (α_ Y X Z).hom ≫ Y ◁ (braiding X Z).hom := by\n  ext : 1\n  apply TensorProduct.ext_threefold\n  intro x y z\n  rfl\n\n"}
{"name":"ModuleCat.MonoidalCategory.hexagon_reverse","module":"Mathlib.Algebra.Category.ModuleCat.Monoidal.Symmetric","initialProofState":"R : Type u\ninst✝ : CommRing R\nX Y Z : ModuleCat R\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.MonoidalCategoryStruct.associator X Y Z).inv (CategoryTheory.CategoryStruct.comp ((CategoryTheory.MonoidalCategoryStruct.tensorObj X Y).braiding Z).hom (CategoryTheory.MonoidalCategoryStruct.associator Z X Y).inv)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.MonoidalCategoryStruct.whiskerLeft X (Y.braiding Z).hom) (CategoryTheory.CategoryStruct.comp (CategoryTheory.MonoidalCategoryStruct.associator X Z Y).inv (CategoryTheory.MonoidalCategoryStruct.whiskerRight (X.braiding Z).hom Y)))","decl":"@[simp]\ntheorem hexagon_reverse (X Y Z : ModuleCat.{u} R) :\n    (α_ X Y Z).inv ≫ (braiding _ Z).hom ≫ (α_ Z X Y).inv =\n      X ◁ (Y.braiding Z).hom ≫ (α_ X Z Y).inv ≫ (X.braiding Z).hom ▷ Y := by\n  apply (cancel_epi (α_ X Y Z).hom).1\n  ext : 1\n  apply TensorProduct.ext_threefold\n  intro x y z\n  rfl\n\n"}
{"name":"ModuleCat.MonoidalCategory.braiding_hom_apply","module":"Mathlib.Algebra.Category.ModuleCat.Monoidal.Symmetric","initialProofState":"R : Type u\ninst✝ : CommRing R\nM N : ModuleCat R\nm : ↑M\nn : ↑N\n⊢ Eq ((CategoryTheory.ConcreteCategory.hom (CategoryTheory.BraidedCategory.braiding M N).hom) (TensorProduct.tmul R m n)) (TensorProduct.tmul R n m)","decl":"@[simp]\ntheorem braiding_hom_apply {M N : ModuleCat.{u} R} (m : M) (n : N) :\n    ((β_ M N).hom : M ⊗ N ⟶ N ⊗ M) (m ⊗ₜ n) = n ⊗ₜ m :=\n  rfl\n\n"}
{"name":"ModuleCat.MonoidalCategory.braiding_inv_apply","module":"Mathlib.Algebra.Category.ModuleCat.Monoidal.Symmetric","initialProofState":"R : Type u\ninst✝ : CommRing R\nM N : ModuleCat R\nm : ↑M\nn : ↑N\n⊢ Eq ((CategoryTheory.ConcreteCategory.hom (CategoryTheory.BraidedCategory.braiding M N).inv) (TensorProduct.tmul R n m)) (TensorProduct.tmul R m n)","decl":"@[simp]\ntheorem braiding_inv_apply {M N : ModuleCat.{u} R} (m : M) (n : N) :\n    ((β_ M N).inv : N ⊗ M ⟶ M ⊗ N) (n ⊗ₜ m) = m ⊗ₜ n :=\n  rfl\n\n"}
{"name":"ModuleCat.MonoidalCategory.tensorμ_eq_tensorTensorTensorComm","module":"Mathlib.Algebra.Category.ModuleCat.Monoidal.Symmetric","initialProofState":"R : Type u\ninst✝ : CommRing R\nA B C D : ModuleCat R\n⊢ Eq (CategoryTheory.MonoidalCategory.tensorμ A B C D) (ModuleCat.ofHom ↑(TensorProduct.tensorTensorTensorComm R ↑A ↑B ↑C ↑D))","decl":"theorem tensorμ_eq_tensorTensorTensorComm {A B C D : ModuleCat R} :\n    tensorμ A B C D = ofHom (TensorProduct.tensorTensorTensorComm R A B C D).toLinearMap :=\n  ModuleCat.hom_ext <| TensorProduct.ext <| TensorProduct.ext <| LinearMap.ext₂ fun _ _ =>\n    TensorProduct.ext <| LinearMap.ext₂ fun _ _ => rfl\n\n"}
{"name":"ModuleCat.MonoidalCategory.tensorμ_apply","module":"Mathlib.Algebra.Category.ModuleCat.Monoidal.Symmetric","initialProofState":"R : Type u\ninst✝ : CommRing R\nA B C D : ModuleCat R\nx : ↑A\ny : ↑B\nz : ↑C\nw : ↑D\n⊢ Eq ((CategoryTheory.ConcreteCategory.hom (CategoryTheory.MonoidalCategory.tensorμ A B C D)) (TensorProduct.tmul R (TensorProduct.tmul R x y) (TensorProduct.tmul R z w))) (TensorProduct.tmul R (TensorProduct.tmul R x z) (TensorProduct.tmul R y w))","decl":"@[simp]\ntheorem tensorμ_apply\n    {A B C D : ModuleCat R} (x : A) (y : B) (z : C) (w : D) :\n    tensorμ A B C D ((x ⊗ₜ y) ⊗ₜ (z ⊗ₜ w)) = (x ⊗ₜ z) ⊗ₜ (y ⊗ₜ w) := rfl\n\n"}
