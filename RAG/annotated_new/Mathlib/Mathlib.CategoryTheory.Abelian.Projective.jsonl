{"name":"CategoryTheory.preservesHomology_preadditiveCoyonedaObj_of_projective","module":"Mathlib.CategoryTheory.Abelian.Projective","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Abelian C\nP : C\nhP : CategoryTheory.Projective P\n⊢ (CategoryTheory.preadditiveCoyonedaObj { unop := P }).PreservesHomology","decl":"/-- The preadditive Co-Yoneda functor on `P` preserves homology if `P` is projective. -/\nnoncomputable instance preservesHomology_preadditiveCoyonedaObj_of_projective\n    (P : C) [hP : Projective P] :\n    (preadditiveCoyonedaObj (op P)).PreservesHomology := by\n  haveI := (projective_iff_preservesEpimorphisms_preadditiveCoyoneda_obj' P).mp hP\n  haveI := @Functor.preservesEpimorphisms_of_preserves_of_reflects _ _ _ _ _ _ _ _ this _\n  apply Functor.preservesHomology_of_preservesEpis_and_kernels\n\n"}
{"name":"CategoryTheory.preservesFiniteColimits_preadditiveCoyonedaObj_of_projective","module":"Mathlib.CategoryTheory.Abelian.Projective","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Abelian C\nP : C\nhP : CategoryTheory.Projective P\n⊢ CategoryTheory.Limits.PreservesFiniteColimits (CategoryTheory.preadditiveCoyonedaObj { unop := P })","decl":"/-- The preadditive Co-Yoneda functor on `P` preserves finite colimits if `P` is projective. -/\nnoncomputable instance preservesFiniteColimits_preadditiveCoyonedaObj_of_projective\n    (P : C) [hP : Projective P] :\n    PreservesFiniteColimits (preadditiveCoyonedaObj (op P)) := by\n  apply Functor.preservesFiniteColimits_of_preservesHomology\n\n"}
{"name":"CategoryTheory.projective_of_preservesFiniteColimits_preadditiveCoyonedaObj","module":"Mathlib.CategoryTheory.Abelian.Projective","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Abelian C\nP : C\nhP : CategoryTheory.Limits.PreservesFiniteColimits (CategoryTheory.preadditiveCoyonedaObj { unop := P })\n⊢ CategoryTheory.Projective P","decl":"/-- An object is projective if its preadditive Co-Yoneda functor preserves finite colimits. -/\ntheorem projective_of_preservesFiniteColimits_preadditiveCoyonedaObj (P : C)\n    [hP : PreservesFiniteColimits (preadditiveCoyonedaObj (op P))] : Projective P := by\n  rw [projective_iff_preservesEpimorphisms_preadditiveCoyoneda_obj']\n  dsimp\n  have := Functor.preservesHomologyOfExact (preadditiveCoyonedaObj (op P))\n  infer_instance\n\n"}
