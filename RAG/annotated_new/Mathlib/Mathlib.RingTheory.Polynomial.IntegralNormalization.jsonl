{"name":"Polynomial.integralNormalization_zero","module":"Mathlib.RingTheory.Polynomial.IntegralNormalization","initialProofState":"R : Type u\ninst✝ : Semiring R\n⊢ Eq (Polynomial.integralNormalization 0) 0","decl":"@[simp]\ntheorem integralNormalization_zero : integralNormalization (0 : R[X]) = 0 := by\n  simp [integralNormalization]\n\n"}
{"name":"Polynomial.integralNormalization_C","module":"Mathlib.RingTheory.Polynomial.IntegralNormalization","initialProofState":"R : Type u\ninst✝ : Semiring R\nx : R\nhx : Ne x 0\n⊢ Eq (Polynomial.C x).integralNormalization 1","decl":"@[simp]\ntheorem integralNormalization_C {x : R} (hx : x ≠ 0) : integralNormalization (C x) = 1 := by\n  simp [integralNormalization, sum_def, support_C hx, degree_C hx]\n\n"}
{"name":"Polynomial.integralNormalization_coeff","module":"Mathlib.RingTheory.Polynomial.IntegralNormalization","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\ni : Nat\n⊢ Eq (p.integralNormalization.coeff i) (ite (Eq p.degree ↑i) 1 (HMul.hMul (p.coeff i) (HPow.hPow p.leadingCoeff (HSub.hSub (HSub.hSub p.natDegree 1) i))))","decl":"theorem integralNormalization_coeff {i : ℕ} :\n    (integralNormalization p).coeff i =\n      if p.degree = i then 1 else coeff p i * p.leadingCoeff ^ (p.natDegree - 1 - i) := by\n  have : p.coeff i = 0 → p.degree ≠ i := fun hc hd => coeff_ne_zero_of_eq_degree hd hc\n  simp +contextual [sum_def, integralNormalization, coeff_monomial, this,\n    mem_support_iff]\n\n"}
{"name":"Polynomial.support_integralNormalization_subset","module":"Mathlib.RingTheory.Polynomial.IntegralNormalization","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\n⊢ HasSubset.Subset p.integralNormalization.support p.support","decl":"theorem support_integralNormalization_subset :\n    (integralNormalization p).support ⊆ p.support := by\n  intro\n  simp +contextual [sum_def, integralNormalization, coeff_monomial, mem_support_iff]\n\n"}
{"name":"Polynomial.integralNormalization_support","module":"Mathlib.RingTheory.Polynomial.IntegralNormalization","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\n⊢ HasSubset.Subset p.integralNormalization.support p.support","decl":"@[deprecated (since := \"2024-11-30\")]\nalias integralNormalization_support := support_integralNormalization_subset\n\n"}
{"name":"Polynomial.integralNormalization_coeff_degree","module":"Mathlib.RingTheory.Polynomial.IntegralNormalization","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\ni : Nat\nhi : Eq p.degree ↑i\n⊢ Eq (p.integralNormalization.coeff i) 1","decl":"theorem integralNormalization_coeff_degree {i : ℕ} (hi : p.degree = i) :\n    (integralNormalization p).coeff i = 1 := by rw [integralNormalization_coeff, if_pos hi]\n\n"}
{"name":"Polynomial.integralNormalization_coeff_natDegree","module":"Mathlib.RingTheory.Polynomial.IntegralNormalization","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\nhp : Ne p 0\n⊢ Eq (p.integralNormalization.coeff p.natDegree) 1","decl":"theorem integralNormalization_coeff_natDegree (hp : p ≠ 0) :\n    (integralNormalization p).coeff (natDegree p) = 1 :=\n  integralNormalization_coeff_degree (degree_eq_natDegree hp)\n\n"}
{"name":"Polynomial.integralNormalization_coeff_degree_ne","module":"Mathlib.RingTheory.Polynomial.IntegralNormalization","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\ni : Nat\nhi : Ne p.degree ↑i\n⊢ Eq (p.integralNormalization.coeff i) (HMul.hMul (p.coeff i) (HPow.hPow p.leadingCoeff (HSub.hSub (HSub.hSub p.natDegree 1) i)))","decl":"theorem integralNormalization_coeff_degree_ne {i : ℕ} (hi : p.degree ≠ i) :\n    coeff (integralNormalization p) i = coeff p i * p.leadingCoeff ^ (p.natDegree - 1 - i) := by\n  rw [integralNormalization_coeff, if_neg hi]\n\n"}
{"name":"Polynomial.integralNormalization_coeff_ne_natDegree","module":"Mathlib.RingTheory.Polynomial.IntegralNormalization","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\ni : Nat\nhi : Ne i p.natDegree\n⊢ Eq (p.integralNormalization.coeff i) (HMul.hMul (p.coeff i) (HPow.hPow p.leadingCoeff (HSub.hSub (HSub.hSub p.natDegree 1) i)))","decl":"theorem integralNormalization_coeff_ne_natDegree {i : ℕ} (hi : i ≠ natDegree p) :\n    coeff (integralNormalization p) i = coeff p i * p.leadingCoeff ^ (p.natDegree - 1 - i) :=\n  integralNormalization_coeff_degree_ne (degree_ne_of_natDegree_ne hi.symm)\n\n"}
{"name":"Polynomial.monic_integralNormalization","module":"Mathlib.RingTheory.Polynomial.IntegralNormalization","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\nhp : Ne p 0\n⊢ p.integralNormalization.Monic","decl":"theorem monic_integralNormalization (hp : p ≠ 0) : Monic (integralNormalization p) :=\n  monic_of_degree_le p.natDegree\n    (Finset.sup_le fun i h =>\n      WithBot.coe_le_coe.2 <| le_natDegree_of_mem_supp i <| support_integralNormalization_subset h)\n    (integralNormalization_coeff_natDegree hp)\n\n"}
{"name":"Polynomial.integralNormalization_coeff_mul_leadingCoeff_pow","module":"Mathlib.RingTheory.Polynomial.IntegralNormalization","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\ni : Nat\nhp : LE.le 1 p.natDegree\n⊢ Eq (HMul.hMul (p.integralNormalization.coeff i) (HPow.hPow p.leadingCoeff i)) (HMul.hMul (p.coeff i) (HPow.hPow p.leadingCoeff (HSub.hSub p.natDegree 1)))","decl":"theorem integralNormalization_coeff_mul_leadingCoeff_pow (i : ℕ) (hp : 1 ≤ natDegree p) :\n    (integralNormalization p).coeff i * p.leadingCoeff ^ i =\n      p.coeff i * p.leadingCoeff ^ (p.natDegree - 1) := by\n  rw [integralNormalization_coeff]\n  split_ifs with h\n  · simp [natDegree_eq_of_degree_eq_some h, leadingCoeff,\n      ← pow_succ', tsub_add_cancel_of_le (natDegree_eq_of_degree_eq_some h ▸ hp)]\n  · simp only [mul_assoc, ← pow_add]\n    by_cases h' : i < p.degree\n    · rw [tsub_add_cancel_of_le]\n      rw [le_tsub_iff_right hp, Nat.succ_le_iff]\n      exact coe_lt_degree.mp h'\n    · simp [coeff_eq_zero_of_degree_lt (lt_of_le_of_ne (le_of_not_gt h') h)]\n\n"}
{"name":"Polynomial.integralNormalization_mul_C_leadingCoeff","module":"Mathlib.RingTheory.Polynomial.IntegralNormalization","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\n⊢ Eq (HMul.hMul p.integralNormalization (Polynomial.C p.leadingCoeff)) (p.scaleRoots p.leadingCoeff)","decl":"theorem integralNormalization_mul_C_leadingCoeff (p : R[X]) :\n    integralNormalization p * C p.leadingCoeff = scaleRoots p p.leadingCoeff := by\n  ext i\n  rw [coeff_mul_C, integralNormalization_coeff]\n  split_ifs with h\n  · simp [natDegree_eq_of_degree_eq_some h, leadingCoeff]\n  · simp only [ge_iff_le, tsub_le_iff_right, smul_eq_mul, coeff_scaleRoots]\n    by_cases h' : i < p.degree\n    · rw [mul_assoc, ← pow_succ, tsub_right_comm, tsub_add_cancel_of_le]\n      rw [le_tsub_iff_left (coe_lt_degree.mp h').le, Nat.succ_le_iff]\n      exact coe_lt_degree.mp h'\n    · simp [coeff_eq_zero_of_degree_lt (lt_of_le_of_ne (le_of_not_gt h') h)]\n\n"}
{"name":"Polynomial.integralNormalization_degree","module":"Mathlib.RingTheory.Polynomial.IntegralNormalization","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\n⊢ Eq p.integralNormalization.degree p.degree","decl":"theorem integralNormalization_degree : (integralNormalization p).degree = p.degree := by\n  apply le_antisymm\n  · exact Finset.sup_mono p.support_integralNormalization_subset\n  · rw [← degree_scaleRoots, ← integralNormalization_mul_C_leadingCoeff]\n    exact (degree_mul_le _ _).trans (add_le_of_nonpos_right degree_C_le)\n\n"}
{"name":"Polynomial.leadingCoeff_smul_integralNormalization","module":"Mathlib.RingTheory.Polynomial.IntegralNormalization","initialProofState":"S : Type v\ninst✝ : CommSemiring S\np : Polynomial S\n⊢ Eq (HSMul.hSMul p.leadingCoeff p.integralNormalization) (p.scaleRoots p.leadingCoeff)","decl":"theorem leadingCoeff_smul_integralNormalization (p : S[X]) :\n    p.leadingCoeff • integralNormalization p = scaleRoots p p.leadingCoeff := by\n  rw [Algebra.smul_def, algebraMap_eq, mul_comm, integralNormalization_mul_C_leadingCoeff]\n\n"}
{"name":"Polynomial.integralNormalization_eval₂_leadingCoeff_mul_of_commute","module":"Mathlib.RingTheory.Polynomial.IntegralNormalization","initialProofState":"R : Type u\ninst✝¹ : Semiring R\np : Polynomial R\nA : Type u_1\ninst✝ : Semiring A\nh : LE.le 1 p.natDegree\nf : RingHom R A\nx : A\nh₁ : Commute (f p.leadingCoeff) x\nh₂ : ∀ {r r' : R}, Commute (f r) (f r')\n⊢ Eq (Polynomial.eval₂ f (HMul.hMul (f p.leadingCoeff) x) p.integralNormalization) (HMul.hMul (HPow.hPow (f p.leadingCoeff) (HSub.hSub p.natDegree 1)) (Polynomial.eval₂ f x p))","decl":"theorem integralNormalization_eval₂_leadingCoeff_mul_of_commute (h : 1 ≤ p.natDegree) (f : R →+* A)\n    (x : A) (h₁ : Commute (f p.leadingCoeff) x) (h₂ : ∀ {r r'}, Commute (f r) (f r')) :\n    (integralNormalization p).eval₂ f (f p.leadingCoeff * x) =\n      f p.leadingCoeff ^ (p.natDegree - 1) * p.eval₂ f x := by\n  rw [eval₂_eq_sum_range, eval₂_eq_sum_range, Finset.mul_sum]\n  apply Finset.sum_congr\n  · rw [natDegree_eq_of_degree_eq p.integralNormalization_degree]\n  intro n _hn\n  rw [h₁.mul_pow, ← mul_assoc, ← f.map_pow, ← f.map_mul,\n    integralNormalization_coeff_mul_leadingCoeff_pow _ h, f.map_mul, h₂.eq, f.map_pow, mul_assoc]\n\n"}
{"name":"Polynomial.integralNormalization_eval₂_leadingCoeff_mul","module":"Mathlib.RingTheory.Polynomial.IntegralNormalization","initialProofState":"R : Type u\nS : Type v\ninst✝¹ : Semiring R\np : Polynomial R\ninst✝ : CommSemiring S\nh : LE.le 1 p.natDegree\nf : RingHom R S\nx : S\n⊢ Eq (Polynomial.eval₂ f (HMul.hMul (f p.leadingCoeff) x) p.integralNormalization) (HMul.hMul (HPow.hPow (f p.leadingCoeff) (HSub.hSub p.natDegree 1)) (Polynomial.eval₂ f x p))","decl":"theorem integralNormalization_eval₂_leadingCoeff_mul (h : 1 ≤ p.natDegree) (f : R →+* S) (x : S) :\n    (integralNormalization p).eval₂ f (f p.leadingCoeff * x) =\n      f p.leadingCoeff ^ (p.natDegree - 1) * p.eval₂ f x :=\n  integralNormalization_eval₂_leadingCoeff_mul_of_commute h _ _ (.all _ _) (.all _ _)\n\n"}
{"name":"Polynomial.integralNormalization_eval₂_eq_zero_of_commute","module":"Mathlib.RingTheory.Polynomial.IntegralNormalization","initialProofState":"R : Type u\ninst✝¹ : Semiring R\nA : Type u_1\ninst✝ : Semiring A\np : Polynomial R\nf : RingHom R A\nz : A\nhz : Eq (Polynomial.eval₂ f z p) 0\nh₁ : Commute (f p.leadingCoeff) z\nh₂ : ∀ {r r' : R}, Commute (f r) (f r')\ninj : ∀ (x : R), Eq (f x) 0 → Eq x 0\n⊢ Eq (Polynomial.eval₂ f (HMul.hMul (f p.leadingCoeff) z) p.integralNormalization) 0","decl":"theorem integralNormalization_eval₂_eq_zero_of_commute {p : R[X]} (f : R →+* A) {z : A}\n    (hz : eval₂ f z p = 0) (h₁ : Commute (f p.leadingCoeff) z) (h₂ : ∀ {r r'}, Commute (f r) (f r'))\n    (inj : ∀ x : R, f x = 0 → x = 0) :\n    eval₂ f (f p.leadingCoeff * z) (integralNormalization p) = 0 := by\n  obtain (h | h) := p.natDegree.eq_zero_or_pos\n  · by_cases h0 : coeff p 0 = 0\n    · rw [eq_C_of_natDegree_eq_zero h]\n      simp [h0]\n    · rw [eq_C_of_natDegree_eq_zero h, eval₂_C] at hz\n      exact absurd (inj _ hz) h0\n  · rw [integralNormalization_eval₂_leadingCoeff_mul_of_commute h _ _ h₁ h₂, hz, mul_zero]\n\n"}
{"name":"Polynomial.integralNormalization_eval₂_eq_zero","module":"Mathlib.RingTheory.Polynomial.IntegralNormalization","initialProofState":"R : Type u\nS : Type v\ninst✝¹ : Semiring R\ninst✝ : CommSemiring S\np : Polynomial R\nf : RingHom R S\nz : S\nhz : Eq (Polynomial.eval₂ f z p) 0\ninj : ∀ (x : R), Eq (f x) 0 → Eq x 0\n⊢ Eq (Polynomial.eval₂ f (HMul.hMul (f p.leadingCoeff) z) p.integralNormalization) 0","decl":"theorem integralNormalization_eval₂_eq_zero {p : R[X]} (f : R →+* S) {z : S} (hz : eval₂ f z p = 0)\n    (inj : ∀ x : R, f x = 0 → x = 0) :\n    eval₂ f (f p.leadingCoeff * z) (integralNormalization p) = 0 :=\n  integralNormalization_eval₂_eq_zero_of_commute _ hz (.all _ _) (.all _ _) inj\n\n"}
{"name":"Polynomial.integralNormalization_aeval_eq_zero","module":"Mathlib.RingTheory.Polynomial.IntegralNormalization","initialProofState":"S : Type v\nA : Type u_1\ninst✝² : CommSemiring S\ninst✝¹ : Semiring A\ninst✝ : Algebra S A\nf : Polynomial S\nz : A\nhz : Eq ((Polynomial.aeval z) f) 0\ninj : ∀ (x : S), Eq ((algebraMap S A) x) 0 → Eq x 0\n⊢ Eq ((Polynomial.aeval (HMul.hMul ((algebraMap S A) f.leadingCoeff) z)) f.integralNormalization) 0","decl":"theorem integralNormalization_aeval_eq_zero [Algebra S A] {f : S[X]} {z : A} (hz : aeval z f = 0)\n    (inj : ∀ x : S, algebraMap S A x = 0 → x = 0) :\n    aeval (algebraMap S A f.leadingCoeff * z) (integralNormalization f) = 0 :=\n  integralNormalization_eval₂_eq_zero_of_commute (algebraMap S A) hz\n    (Algebra.commute_algebraMap_left _ _) (.map (.all _ _) _) inj\n\n"}
{"name":"Polynomial.support_integralNormalization","module":"Mathlib.RingTheory.Polynomial.IntegralNormalization","initialProofState":"R : Type u\ninst✝¹ : Semiring R\ninst✝ : IsCancelMulZero R\nf : Polynomial R\n⊢ Eq f.integralNormalization.support f.support","decl":"@[simp]\ntheorem support_integralNormalization {f : R[X]} :\n    (integralNormalization f).support = f.support := by\n  nontriviality R using Subsingleton.eq_zero\n  have : IsDomain R := {}\n  by_cases hf : f = 0; · simp [hf]\n  ext i\n  refine ⟨fun h => support_integralNormalization_subset h, ?_⟩\n  simp only [integralNormalization_coeff, mem_support_iff]\n  intro hfi\n  split_ifs with hi <;> simp [hf, hfi, hi]\n\n"}
