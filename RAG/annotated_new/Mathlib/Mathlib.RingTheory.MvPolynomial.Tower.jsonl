{"name":"MvPolynomial.aeval_map_algebraMap","module":"Mathlib.RingTheory.MvPolynomial.Tower","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\nσ : Type u_4\ninst✝⁶ : CommSemiring R\ninst✝⁵ : CommSemiring A\ninst✝⁴ : CommSemiring B\ninst✝³ : Algebra R A\ninst✝² : Algebra A B\ninst✝¹ : Algebra R B\ninst✝ : IsScalarTower R A B\nx : σ → B\np : MvPolynomial σ R\n⊢ Eq ((MvPolynomial.aeval x) ((MvPolynomial.map (algebraMap R A)) p)) ((MvPolynomial.aeval x) p)","decl":"theorem aeval_map_algebraMap (x : σ → B) (p : MvPolynomial σ R) :\n    aeval x (map (algebraMap R A) p) = aeval x p := by\n  rw [aeval_def, aeval_def, eval₂_map, IsScalarTower.algebraMap_eq R A B]\n\n"}
{"name":"MvPolynomial.aeval_algebraMap_apply","module":"Mathlib.RingTheory.MvPolynomial.Tower","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\nσ : Type u_4\ninst✝⁶ : CommSemiring R\ninst✝⁵ : CommSemiring A\ninst✝⁴ : CommSemiring B\ninst✝³ : Algebra R A\ninst✝² : Algebra A B\ninst✝¹ : Algebra R B\ninst✝ : IsScalarTower R A B\nx : σ → A\np : MvPolynomial σ R\n⊢ Eq ((MvPolynomial.aeval (Function.comp (⇑(algebraMap A B)) x)) p) ((algebraMap A B) ((MvPolynomial.aeval x) p))","decl":"theorem aeval_algebraMap_apply (x : σ → A) (p : MvPolynomial σ R) :\n    aeval (algebraMap A B ∘ x) p = algebraMap A B (MvPolynomial.aeval x p) := by\n  rw [aeval_def, aeval_def, ← coe_eval₂Hom, ← coe_eval₂Hom, map_eval₂Hom, ←\n    IsScalarTower.algebraMap_eq]\n  -- Porting note: added\n  simp only [Function.comp_def]\n\n"}
{"name":"MvPolynomial.aeval_algebraMap_eq_zero_iff","module":"Mathlib.RingTheory.MvPolynomial.Tower","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\nσ : Type u_4\ninst✝⁸ : CommSemiring R\ninst✝⁷ : CommSemiring A\ninst✝⁶ : CommSemiring B\ninst✝⁵ : Algebra R A\ninst✝⁴ : Algebra A B\ninst✝³ : Algebra R B\ninst✝² : IsScalarTower R A B\ninst✝¹ : NoZeroSMulDivisors A B\ninst✝ : Nontrivial B\nx : σ → A\np : MvPolynomial σ R\n⊢ Iff (Eq ((MvPolynomial.aeval (Function.comp (⇑(algebraMap A B)) x)) p) 0) (Eq ((MvPolynomial.aeval x) p) 0)","decl":"theorem aeval_algebraMap_eq_zero_iff [NoZeroSMulDivisors A B] [Nontrivial B] (x : σ → A)\n    (p : MvPolynomial σ R) : aeval (algebraMap A B ∘ x) p = 0 ↔ aeval x p = 0 := by\n  rw [aeval_algebraMap_apply, Algebra.algebraMap_eq_smul_one, smul_eq_zero,\n    iff_false_intro (one_ne_zero' B), or_false]\n\n"}
{"name":"MvPolynomial.aeval_algebraMap_eq_zero_iff_of_injective","module":"Mathlib.RingTheory.MvPolynomial.Tower","initialProofState":"R : Type u_1\nA : Type u_2\nB : Type u_3\nσ : Type u_4\ninst✝⁶ : CommSemiring R\ninst✝⁵ : CommSemiring A\ninst✝⁴ : CommSemiring B\ninst✝³ : Algebra R A\ninst✝² : Algebra A B\ninst✝¹ : Algebra R B\ninst✝ : IsScalarTower R A B\nx : σ → A\np : MvPolynomial σ R\nh : Function.Injective ⇑(algebraMap A B)\n⊢ Iff (Eq ((MvPolynomial.aeval (Function.comp (⇑(algebraMap A B)) x)) p) 0) (Eq ((MvPolynomial.aeval x) p) 0)","decl":"theorem aeval_algebraMap_eq_zero_iff_of_injective {x : σ → A} {p : MvPolynomial σ R}\n    (h : Function.Injective (algebraMap A B)) :\n    aeval (algebraMap A B ∘ x) p = 0 ↔ aeval x p = 0 := by\n  rw [aeval_algebraMap_apply, ← (algebraMap A B).map_zero, h.eq_iff]\n\n"}
{"name":"Subalgebra.mvPolynomial_aeval_coe","module":"Mathlib.RingTheory.MvPolynomial.Tower","initialProofState":"R : Type u_1\nA : Type u_2\nσ : Type u_4\ninst✝² : CommSemiring R\ninst✝¹ : CommSemiring A\ninst✝ : Algebra R A\nS : Subalgebra R A\nx : σ → Subtype fun x => Membership.mem S x\np : MvPolynomial σ R\n⊢ Eq ((MvPolynomial.aeval fun i => ↑(x i)) p) ↑((MvPolynomial.aeval x) p)","decl":"@[simp]\ntheorem mvPolynomial_aeval_coe (S : Subalgebra R A) (x : σ → S) (p : MvPolynomial σ R) :\n    aeval (fun i => (x i : A)) p = aeval x p := by convert aeval_algebraMap_apply A x p\n\n"}
