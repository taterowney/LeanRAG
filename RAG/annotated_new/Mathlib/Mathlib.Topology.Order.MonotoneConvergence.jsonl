{"name":"SupConvergenceClass.tendsto_coe_atTop_isLUB","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_3\ninst✝¹ : Preorder α\ninst✝ : TopologicalSpace α\nself : SupConvergenceClass α\na : α\ns : Set α\na✝ : IsLUB s a\n⊢ Filter.Tendsto CoeTC.coe Filter.atTop (nhds a)","decl":"/-- We say that `α` is a `SupConvergenceClass` if the following holds. Let `f : ι → α` be a\nmonotone function, let `a : α` be a least upper bound of `Set.range f`. Then `f x` tends to `𝓝 a`\n as `x → ∞` (formally, at the filter `Filter.atTop`). We require this for `ι = (s : Set α)`,\n`f = CoeTC.coe` in the definition, then prove it for any `f` in `tendsto_atTop_isLUB`.\n\nThis property holds for linear orders with order topology as well as their products. -/\nclass SupConvergenceClass (α : Type*) [Preorder α] [TopologicalSpace α] : Prop where\n  /-- proof that a monotone function tends to `𝓝 a` as `x → ∞` -/\n  tendsto_coe_atTop_isLUB :\n    ∀ (a : α) (s : Set α), IsLUB s a → Tendsto (CoeTC.coe : s → α) atTop (𝓝 a)\n\n"}
{"name":"InfConvergenceClass.tendsto_coe_atBot_isGLB","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_3\ninst✝¹ : Preorder α\ninst✝ : TopologicalSpace α\nself : InfConvergenceClass α\na : α\ns : Set α\na✝ : IsGLB s a\n⊢ Filter.Tendsto CoeTC.coe Filter.atBot (nhds a)","decl":"/-- We say that `α` is an `InfConvergenceClass` if the following holds. Let `f : ι → α` be a\nmonotone function, let `a : α` be a greatest lower bound of `Set.range f`. Then `f x` tends to `𝓝 a`\nas `x → -∞` (formally, at the filter `Filter.atBot`). We require this for `ι = (s : Set α)`,\n`f = CoeTC.coe` in the definition, then prove it for any `f` in `tendsto_atBot_isGLB`.\n\nThis property holds for linear orders with order topology as well as their products. -/\nclass InfConvergenceClass (α : Type*) [Preorder α] [TopologicalSpace α] : Prop where\n  /-- proof that a monotone function tends to `𝓝 a` as `x → -∞`-/\n  tendsto_coe_atBot_isGLB :\n    ∀ (a : α) (s : Set α), IsGLB s a → Tendsto (CoeTC.coe : s → α) atBot (𝓝 a)\n\n"}
{"name":"OrderDual.supConvergenceClass","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\ninst✝² : Preorder α\ninst✝¹ : TopologicalSpace α\ninst✝ : InfConvergenceClass α\n⊢ SupConvergenceClass (OrderDual α)","decl":"instance OrderDual.supConvergenceClass [Preorder α] [TopologicalSpace α] [InfConvergenceClass α] :\n    SupConvergenceClass αᵒᵈ :=\n  ⟨‹InfConvergenceClass α›.1⟩\n\n"}
{"name":"OrderDual.infConvergenceClass","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\ninst✝² : Preorder α\ninst✝¹ : TopologicalSpace α\ninst✝ : SupConvergenceClass α\n⊢ InfConvergenceClass (OrderDual α)","decl":"instance OrderDual.infConvergenceClass [Preorder α] [TopologicalSpace α] [SupConvergenceClass α] :\n    InfConvergenceClass αᵒᵈ :=\n  ⟨‹SupConvergenceClass α›.1⟩\n\n-- see Note [lower instance priority]\n"}
{"name":"LinearOrder.supConvergenceClass","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\ninst✝¹ : LinearOrder α\ninst✝ : OrderTopology α\n⊢ SupConvergenceClass α","decl":"instance (priority := 100) LinearOrder.supConvergenceClass [TopologicalSpace α] [LinearOrder α]\n    [OrderTopology α] : SupConvergenceClass α := by\n  refine ⟨fun a s ha => tendsto_order.2 ⟨fun b hb => ?_, fun b hb => ?_⟩⟩\n  · rcases ha.exists_between hb with ⟨c, hcs, bc, bca⟩\n    lift c to s using hcs\n    exact (eventually_ge_atTop c).mono fun x hx => bc.trans_le hx\n  · exact Eventually.of_forall fun x => (ha.1 x.2).trans_lt hb\n\n-- see Note [lower instance priority]\n"}
{"name":"LinearOrder.infConvergenceClass","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\ninst✝¹ : LinearOrder α\ninst✝ : OrderTopology α\n⊢ InfConvergenceClass α","decl":"instance (priority := 100) LinearOrder.infConvergenceClass [TopologicalSpace α] [LinearOrder α]\n    [OrderTopology α] : InfConvergenceClass α :=\n  show InfConvergenceClass αᵒᵈᵒᵈ from OrderDual.infConvergenceClass\n\n"}
{"name":"tendsto_atTop_isLUB","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\nι : Type u_3\ninst✝³ : Preorder ι\ninst✝² : TopologicalSpace α\ninst✝¹ : Preorder α\ninst✝ : SupConvergenceClass α\nf : ι → α\na : α\nh_mono : Monotone f\nha : IsLUB (Set.range f) a\n⊢ Filter.Tendsto f Filter.atTop (nhds a)","decl":"theorem tendsto_atTop_isLUB (h_mono : Monotone f) (ha : IsLUB (Set.range f) a) :\n    Tendsto f atTop (𝓝 a) := by\n  suffices Tendsto (rangeFactorization f) atTop atTop from\n    (SupConvergenceClass.tendsto_coe_atTop_isLUB _ _ ha).comp this\n  exact h_mono.rangeFactorization.tendsto_atTop_atTop fun b => b.2.imp fun a ha => ha.ge\n\n"}
{"name":"tendsto_atBot_isLUB","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\nι : Type u_3\ninst✝³ : Preorder ι\ninst✝² : TopologicalSpace α\ninst✝¹ : Preorder α\ninst✝ : SupConvergenceClass α\nf : ι → α\na : α\nh_anti : Antitone f\nha : IsLUB (Set.range f) a\n⊢ Filter.Tendsto f Filter.atBot (nhds a)","decl":"theorem tendsto_atBot_isLUB (h_anti : Antitone f) (ha : IsLUB (Set.range f) a) :\n    Tendsto f atBot (𝓝 a) := by convert tendsto_atTop_isLUB h_anti.dual_left ha using 1\n\n"}
{"name":"tendsto_atBot_isGLB","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\nι : Type u_3\ninst✝³ : Preorder ι\ninst✝² : TopologicalSpace α\ninst✝¹ : Preorder α\ninst✝ : InfConvergenceClass α\nf : ι → α\na : α\nh_mono : Monotone f\nha : IsGLB (Set.range f) a\n⊢ Filter.Tendsto f Filter.atBot (nhds a)","decl":"theorem tendsto_atBot_isGLB (h_mono : Monotone f) (ha : IsGLB (Set.range f) a) :\n    Tendsto f atBot (𝓝 a) := by convert tendsto_atTop_isLUB h_mono.dual ha.dual using 1\n\n"}
{"name":"tendsto_atTop_isGLB","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\nι : Type u_3\ninst✝³ : Preorder ι\ninst✝² : TopologicalSpace α\ninst✝¹ : Preorder α\ninst✝ : InfConvergenceClass α\nf : ι → α\na : α\nh_anti : Antitone f\nha : IsGLB (Set.range f) a\n⊢ Filter.Tendsto f Filter.atTop (nhds a)","decl":"theorem tendsto_atTop_isGLB (h_anti : Antitone f) (ha : IsGLB (Set.range f) a) :\n    Tendsto f atTop (𝓝 a) := by convert tendsto_atBot_isLUB h_anti.dual ha.dual using 1\n\n"}
{"name":"tendsto_atTop_ciSup","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\nι : Type u_3\ninst✝³ : Preorder ι\ninst✝² : TopologicalSpace α\ninst✝¹ : ConditionallyCompleteLattice α\ninst✝ : SupConvergenceClass α\nf : ι → α\nh_mono : Monotone f\nhbdd : BddAbove (Set.range f)\n⊢ Filter.Tendsto f Filter.atTop (nhds (iSup fun i => f i))","decl":"theorem tendsto_atTop_ciSup (h_mono : Monotone f) (hbdd : BddAbove <| range f) :\n    Tendsto f atTop (𝓝 (⨆ i, f i)) := by\n  cases isEmpty_or_nonempty ι\n  exacts [tendsto_of_isEmpty, tendsto_atTop_isLUB h_mono (isLUB_ciSup hbdd)]\n\n"}
{"name":"tendsto_atBot_ciSup","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\nι : Type u_3\ninst✝³ : Preorder ι\ninst✝² : TopologicalSpace α\ninst✝¹ : ConditionallyCompleteLattice α\ninst✝ : SupConvergenceClass α\nf : ι → α\nh_anti : Antitone f\nhbdd : BddAbove (Set.range f)\n⊢ Filter.Tendsto f Filter.atBot (nhds (iSup fun i => f i))","decl":"theorem tendsto_atBot_ciSup (h_anti : Antitone f) (hbdd : BddAbove <| range f) :\n    Tendsto f atBot (𝓝 (⨆ i, f i)) := by convert tendsto_atTop_ciSup h_anti.dual hbdd.dual using 1\n\n"}
{"name":"tendsto_atBot_ciInf","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\nι : Type u_3\ninst✝³ : Preorder ι\ninst✝² : TopologicalSpace α\ninst✝¹ : ConditionallyCompleteLattice α\ninst✝ : InfConvergenceClass α\nf : ι → α\nh_mono : Monotone f\nhbdd : BddBelow (Set.range f)\n⊢ Filter.Tendsto f Filter.atBot (nhds (iInf fun i => f i))","decl":"theorem tendsto_atBot_ciInf (h_mono : Monotone f) (hbdd : BddBelow <| range f) :\n    Tendsto f atBot (𝓝 (⨅ i, f i)) := by convert tendsto_atTop_ciSup h_mono.dual hbdd.dual using 1\n\n"}
{"name":"tendsto_atTop_ciInf","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\nι : Type u_3\ninst✝³ : Preorder ι\ninst✝² : TopologicalSpace α\ninst✝¹ : ConditionallyCompleteLattice α\ninst✝ : InfConvergenceClass α\nf : ι → α\nh_anti : Antitone f\nhbdd : BddBelow (Set.range f)\n⊢ Filter.Tendsto f Filter.atTop (nhds (iInf fun i => f i))","decl":"theorem tendsto_atTop_ciInf (h_anti : Antitone f) (hbdd : BddBelow <| range f) :\n    Tendsto f atTop (𝓝 (⨅ i, f i)) := by convert tendsto_atBot_ciSup h_anti.dual hbdd.dual using 1\n\n"}
{"name":"tendsto_atTop_iSup","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\nι : Type u_3\ninst✝³ : Preorder ι\ninst✝² : TopologicalSpace α\ninst✝¹ : CompleteLattice α\ninst✝ : SupConvergenceClass α\nf : ι → α\nh_mono : Monotone f\n⊢ Filter.Tendsto f Filter.atTop (nhds (iSup fun i => f i))","decl":"theorem tendsto_atTop_iSup (h_mono : Monotone f) : Tendsto f atTop (𝓝 (⨆ i, f i)) :=\n  tendsto_atTop_ciSup h_mono (OrderTop.bddAbove _)\n\n"}
{"name":"tendsto_atBot_iSup","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\nι : Type u_3\ninst✝³ : Preorder ι\ninst✝² : TopologicalSpace α\ninst✝¹ : CompleteLattice α\ninst✝ : SupConvergenceClass α\nf : ι → α\nh_anti : Antitone f\n⊢ Filter.Tendsto f Filter.atBot (nhds (iSup fun i => f i))","decl":"theorem tendsto_atBot_iSup (h_anti : Antitone f) : Tendsto f atBot (𝓝 (⨆ i, f i)) :=\n  tendsto_atBot_ciSup h_anti (OrderTop.bddAbove _)\n\n"}
{"name":"tendsto_atBot_iInf","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\nι : Type u_3\ninst✝³ : Preorder ι\ninst✝² : TopologicalSpace α\ninst✝¹ : CompleteLattice α\ninst✝ : InfConvergenceClass α\nf : ι → α\nh_mono : Monotone f\n⊢ Filter.Tendsto f Filter.atBot (nhds (iInf fun i => f i))","decl":"theorem tendsto_atBot_iInf (h_mono : Monotone f) : Tendsto f atBot (𝓝 (⨅ i, f i)) :=\n  tendsto_atBot_ciInf h_mono (OrderBot.bddBelow _)\n\n"}
{"name":"tendsto_atTop_iInf","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\nι : Type u_3\ninst✝³ : Preorder ι\ninst✝² : TopologicalSpace α\ninst✝¹ : CompleteLattice α\ninst✝ : InfConvergenceClass α\nf : ι → α\nh_anti : Antitone f\n⊢ Filter.Tendsto f Filter.atTop (nhds (iInf fun i => f i))","decl":"theorem tendsto_atTop_iInf (h_anti : Antitone f) : Tendsto f atTop (𝓝 (⨅ i, f i)) :=\n  tendsto_atTop_ciInf h_anti (OrderBot.bddBelow _)\n\n"}
{"name":"Prod.supConvergenceClass","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : Preorder α\ninst✝⁴ : Preorder β\ninst✝³ : TopologicalSpace α\ninst✝² : TopologicalSpace β\ninst✝¹ : SupConvergenceClass α\ninst✝ : SupConvergenceClass β\n⊢ SupConvergenceClass (Prod α β)","decl":"instance Prod.supConvergenceClass\n    [Preorder α] [Preorder β] [TopologicalSpace α] [TopologicalSpace β]\n    [SupConvergenceClass α] [SupConvergenceClass β] : SupConvergenceClass (α × β) := by\n  constructor\n  rintro ⟨a, b⟩ s h\n  rw [isLUB_prod, ← range_restrict, ← range_restrict] at h\n  have A : Tendsto (fun x : s => (x : α × β).1) atTop (𝓝 a) :=\n    tendsto_atTop_isLUB (monotone_fst.restrict s) h.1\n  have B : Tendsto (fun x : s => (x : α × β).2) atTop (𝓝 b) :=\n    tendsto_atTop_isLUB (monotone_snd.restrict s) h.2\n  convert A.prod_mk_nhds B\n  -- Porting note: previously required below to close\n  -- ext1 ⟨⟨x, y⟩, h⟩\n  -- rfl\n\n"}
{"name":"instInfConvergenceClassProd","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : Preorder α\ninst✝⁴ : Preorder β\ninst✝³ : TopologicalSpace α\ninst✝² : TopologicalSpace β\ninst✝¹ : InfConvergenceClass α\ninst✝ : InfConvergenceClass β\n⊢ InfConvergenceClass (Prod α β)","decl":"instance [Preorder α] [Preorder β] [TopologicalSpace α] [TopologicalSpace β] [InfConvergenceClass α]\n    [InfConvergenceClass β] : InfConvergenceClass (α × β) :=\n  show InfConvergenceClass (αᵒᵈ × βᵒᵈ)ᵒᵈ from OrderDual.infConvergenceClass\n\n"}
{"name":"Pi.supConvergenceClass","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"ι : Type u_3\nα : ι → Type u_4\ninst✝² : (i : ι) → Preorder (α i)\ninst✝¹ : (i : ι) → TopologicalSpace (α i)\ninst✝ : ∀ (i : ι), SupConvergenceClass (α i)\n⊢ SupConvergenceClass ((i : ι) → α i)","decl":"instance Pi.supConvergenceClass\n    {ι : Type*} {α : ι → Type*} [∀ i, Preorder (α i)] [∀ i, TopologicalSpace (α i)]\n    [∀ i, SupConvergenceClass (α i)] : SupConvergenceClass (∀ i, α i) := by\n  refine ⟨fun f s h => ?_⟩\n  simp only [isLUB_pi, ← range_restrict] at h\n  exact tendsto_pi_nhds.2 fun i => tendsto_atTop_isLUB ((monotone_eval _).restrict _) (h i)\n\n"}
{"name":"Pi.infConvergenceClass","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"ι : Type u_3\nα : ι → Type u_4\ninst✝² : (i : ι) → Preorder (α i)\ninst✝¹ : (i : ι) → TopologicalSpace (α i)\ninst✝ : ∀ (i : ι), InfConvergenceClass (α i)\n⊢ InfConvergenceClass ((i : ι) → α i)","decl":"instance Pi.infConvergenceClass\n    {ι : Type*} {α : ι → Type*} [∀ i, Preorder (α i)] [∀ i, TopologicalSpace (α i)]\n    [∀ i, InfConvergenceClass (α i)] : InfConvergenceClass (∀ i, α i) :=\n  show InfConvergenceClass (∀ i, (α i)ᵒᵈ)ᵒᵈ from OrderDual.infConvergenceClass\n\n"}
{"name":"Pi.supConvergenceClass'","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\nι : Type u_3\ninst✝² : Preorder α\ninst✝¹ : TopologicalSpace α\ninst✝ : SupConvergenceClass α\n⊢ SupConvergenceClass (ι → α)","decl":"instance Pi.supConvergenceClass' {ι : Type*} [Preorder α] [TopologicalSpace α]\n    [SupConvergenceClass α] : SupConvergenceClass (ι → α) :=\n  supConvergenceClass\n\n"}
{"name":"Pi.infConvergenceClass'","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\nι : Type u_3\ninst✝² : Preorder α\ninst✝¹ : TopologicalSpace α\ninst✝ : InfConvergenceClass α\n⊢ InfConvergenceClass (ι → α)","decl":"instance Pi.infConvergenceClass' {ι : Type*} [Preorder α] [TopologicalSpace α]\n    [InfConvergenceClass α] : InfConvergenceClass (ι → α) :=\n  Pi.infConvergenceClass\n\n"}
{"name":"tendsto_of_monotone","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"ι : Type u_3\nα : Type u_4\ninst✝³ : Preorder ι\ninst✝² : TopologicalSpace α\ninst✝¹ : ConditionallyCompleteLinearOrder α\ninst✝ : OrderTopology α\nf : ι → α\nh_mono : Monotone f\n⊢ Or (Filter.Tendsto f Filter.atTop Filter.atTop) (Exists fun l => Filter.Tendsto f Filter.atTop (nhds l))","decl":"theorem tendsto_of_monotone {ι α : Type*} [Preorder ι] [TopologicalSpace α]\n    [ConditionallyCompleteLinearOrder α] [OrderTopology α] {f : ι → α} (h_mono : Monotone f) :\n    Tendsto f atTop atTop ∨ ∃ l, Tendsto f atTop (𝓝 l) := by\n  classical\n  exact if H : BddAbove (range f) then Or.inr ⟨_, tendsto_atTop_ciSup h_mono H⟩\n  else Or.inl <| tendsto_atTop_atTop_of_monotone' h_mono H\n\n"}
{"name":"tendsto_of_antitone","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"ι : Type u_3\nα : Type u_4\ninst✝³ : Preorder ι\ninst✝² : TopologicalSpace α\ninst✝¹ : ConditionallyCompleteLinearOrder α\ninst✝ : OrderTopology α\nf : ι → α\nh_mono : Antitone f\n⊢ Or (Filter.Tendsto f Filter.atTop Filter.atBot) (Exists fun l => Filter.Tendsto f Filter.atTop (nhds l))","decl":"theorem tendsto_of_antitone {ι α : Type*} [Preorder ι] [TopologicalSpace α]\n    [ConditionallyCompleteLinearOrder α] [OrderTopology α] {f : ι → α} (h_mono : Antitone f) :\n    Tendsto f atTop atBot ∨ ∃ l, Tendsto f atTop (𝓝 l) :=\n  @tendsto_of_monotone ι αᵒᵈ _ _ _ _ _ h_mono\n\n"}
{"name":"tendsto_iff_tendsto_subseq_of_monotone","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"ι₁ : Type u_3\nι₂ : Type u_4\nα : Type u_5\ninst✝⁶ : SemilatticeSup ι₁\ninst✝⁵ : Preorder ι₂\ninst✝⁴ : Nonempty ι₁\ninst✝³ : TopologicalSpace α\ninst✝² : ConditionallyCompleteLinearOrder α\ninst✝¹ : OrderTopology α\ninst✝ : NoMaxOrder α\nf : ι₂ → α\nφ : ι₁ → ι₂\nl : α\nhf : Monotone f\nhg : Filter.Tendsto φ Filter.atTop Filter.atTop\n⊢ Iff (Filter.Tendsto f Filter.atTop (nhds l)) (Filter.Tendsto (Function.comp f φ) Filter.atTop (nhds l))","decl":"theorem tendsto_iff_tendsto_subseq_of_monotone {ι₁ ι₂ α : Type*} [SemilatticeSup ι₁] [Preorder ι₂]\n    [Nonempty ι₁] [TopologicalSpace α] [ConditionallyCompleteLinearOrder α] [OrderTopology α]\n    [NoMaxOrder α] {f : ι₂ → α} {φ : ι₁ → ι₂} {l : α} (hf : Monotone f)\n    (hg : Tendsto φ atTop atTop) : Tendsto f atTop (𝓝 l) ↔ Tendsto (f ∘ φ) atTop (𝓝 l) := by\n  constructor <;> intro h\n  · exact h.comp hg\n  · rcases tendsto_of_monotone hf with (h' | ⟨l', hl'⟩)\n    · exact (not_tendsto_atTop_of_tendsto_nhds h (h'.comp hg)).elim\n    · rwa [tendsto_nhds_unique h (hl'.comp hg)]\n\n"}
{"name":"tendsto_iff_tendsto_subseq_of_antitone","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"ι₁ : Type u_3\nι₂ : Type u_4\nα : Type u_5\ninst✝⁶ : SemilatticeSup ι₁\ninst✝⁵ : Preorder ι₂\ninst✝⁴ : Nonempty ι₁\ninst✝³ : TopologicalSpace α\ninst✝² : ConditionallyCompleteLinearOrder α\ninst✝¹ : OrderTopology α\ninst✝ : NoMinOrder α\nf : ι₂ → α\nφ : ι₁ → ι₂\nl : α\nhf : Antitone f\nhg : Filter.Tendsto φ Filter.atTop Filter.atTop\n⊢ Iff (Filter.Tendsto f Filter.atTop (nhds l)) (Filter.Tendsto (Function.comp f φ) Filter.atTop (nhds l))","decl":"theorem tendsto_iff_tendsto_subseq_of_antitone {ι₁ ι₂ α : Type*} [SemilatticeSup ι₁] [Preorder ι₂]\n    [Nonempty ι₁] [TopologicalSpace α] [ConditionallyCompleteLinearOrder α] [OrderTopology α]\n    [NoMinOrder α] {f : ι₂ → α} {φ : ι₁ → ι₂} {l : α} (hf : Antitone f)\n    (hg : Tendsto φ atTop atTop) : Tendsto f atTop (𝓝 l) ↔ Tendsto (f ∘ φ) atTop (𝓝 l) :=\n  tendsto_iff_tendsto_subseq_of_monotone (α := αᵒᵈ) hf hg\n\n"}
{"name":"Monotone.ge_of_tendsto","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝³ : TopologicalSpace α\ninst✝² : Preorder α\ninst✝¹ : OrderClosedTopology α\ninst✝ : SemilatticeSup β\nf : β → α\na : α\nhf : Monotone f\nha : Filter.Tendsto f Filter.atTop (nhds a)\nb : β\n⊢ LE.le (f b) a","decl":"theorem Monotone.ge_of_tendsto [TopologicalSpace α] [Preorder α] [OrderClosedTopology α]\n    [SemilatticeSup β] {f : β → α} {a : α} (hf : Monotone f) (ha : Tendsto f atTop (𝓝 a)) (b : β) :\n    f b ≤ a :=\n  haveI : Nonempty β := Nonempty.intro b\n  _root_.ge_of_tendsto ha ((eventually_ge_atTop b).mono fun _ hxy => hf hxy)\n\n"}
{"name":"Monotone.le_of_tendsto","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝³ : TopologicalSpace α\ninst✝² : Preorder α\ninst✝¹ : OrderClosedTopology α\ninst✝ : SemilatticeInf β\nf : β → α\na : α\nhf : Monotone f\nha : Filter.Tendsto f Filter.atBot (nhds a)\nb : β\n⊢ LE.le a (f b)","decl":"theorem Monotone.le_of_tendsto [TopologicalSpace α] [Preorder α] [OrderClosedTopology α]\n    [SemilatticeInf β] {f : β → α} {a : α} (hf : Monotone f) (ha : Tendsto f atBot (𝓝 a)) (b : β) :\n    a ≤ f b :=\n  hf.dual.ge_of_tendsto ha b\n\n"}
{"name":"Antitone.le_of_tendsto","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝³ : TopologicalSpace α\ninst✝² : Preorder α\ninst✝¹ : OrderClosedTopology α\ninst✝ : SemilatticeSup β\nf : β → α\na : α\nhf : Antitone f\nha : Filter.Tendsto f Filter.atTop (nhds a)\nb : β\n⊢ LE.le a (f b)","decl":"theorem Antitone.le_of_tendsto [TopologicalSpace α] [Preorder α] [OrderClosedTopology α]\n    [SemilatticeSup β] {f : β → α} {a : α} (hf : Antitone f) (ha : Tendsto f atTop (𝓝 a)) (b : β) :\n    a ≤ f b :=\n  hf.dual_right.ge_of_tendsto ha b\n\n"}
{"name":"Antitone.ge_of_tendsto","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝³ : TopologicalSpace α\ninst✝² : Preorder α\ninst✝¹ : OrderClosedTopology α\ninst✝ : SemilatticeInf β\nf : β → α\na : α\nhf : Antitone f\nha : Filter.Tendsto f Filter.atBot (nhds a)\nb : β\n⊢ LE.le (f b) a","decl":"theorem Antitone.ge_of_tendsto [TopologicalSpace α] [Preorder α] [OrderClosedTopology α]\n    [SemilatticeInf β] {f : β → α} {a : α} (hf : Antitone f) (ha : Tendsto f atBot (𝓝 a)) (b : β) :\n    f b ≤ a :=\n  hf.dual_right.le_of_tendsto ha b\n\n"}
{"name":"isLUB_of_tendsto_atTop","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁴ : TopologicalSpace α\ninst✝³ : Preorder α\ninst✝² : OrderClosedTopology α\ninst✝¹ : Nonempty β\ninst✝ : SemilatticeSup β\nf : β → α\na : α\nhf : Monotone f\nha : Filter.Tendsto f Filter.atTop (nhds a)\n⊢ IsLUB (Set.range f) a","decl":"theorem isLUB_of_tendsto_atTop [TopologicalSpace α] [Preorder α] [OrderClosedTopology α]\n    [Nonempty β] [SemilatticeSup β] {f : β → α} {a : α} (hf : Monotone f)\n    (ha : Tendsto f atTop (𝓝 a)) : IsLUB (Set.range f) a := by\n  constructor\n  · rintro _ ⟨b, rfl⟩\n    exact hf.ge_of_tendsto ha b\n  · exact fun _ hb => le_of_tendsto' ha fun x => hb (Set.mem_range_self x)\n\n"}
{"name":"isGLB_of_tendsto_atBot","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁴ : TopologicalSpace α\ninst✝³ : Preorder α\ninst✝² : OrderClosedTopology α\ninst✝¹ : Nonempty β\ninst✝ : SemilatticeInf β\nf : β → α\na : α\nhf : Monotone f\nha : Filter.Tendsto f Filter.atBot (nhds a)\n⊢ IsGLB (Set.range f) a","decl":"theorem isGLB_of_tendsto_atBot [TopologicalSpace α] [Preorder α] [OrderClosedTopology α]\n    [Nonempty β] [SemilatticeInf β] {f : β → α} {a : α} (hf : Monotone f)\n    (ha : Tendsto f atBot (𝓝 a)) : IsGLB (Set.range f) a :=\n  @isLUB_of_tendsto_atTop αᵒᵈ βᵒᵈ _ _ _ _ _ _ _ hf.dual ha\n\n"}
{"name":"isLUB_of_tendsto_atBot","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁴ : TopologicalSpace α\ninst✝³ : Preorder α\ninst✝² : OrderClosedTopology α\ninst✝¹ : Nonempty β\ninst✝ : SemilatticeInf β\nf : β → α\na : α\nhf : Antitone f\nha : Filter.Tendsto f Filter.atBot (nhds a)\n⊢ IsLUB (Set.range f) a","decl":"theorem isLUB_of_tendsto_atBot [TopologicalSpace α] [Preorder α] [OrderClosedTopology α]\n    [Nonempty β] [SemilatticeInf β] {f : β → α} {a : α} (hf : Antitone f)\n    (ha : Tendsto f atBot (𝓝 a)) : IsLUB (Set.range f) a :=\n  @isLUB_of_tendsto_atTop α βᵒᵈ _ _ _ _ _ _ _ hf.dual_left ha\n\n"}
{"name":"isGLB_of_tendsto_atTop","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁴ : TopologicalSpace α\ninst✝³ : Preorder α\ninst✝² : OrderClosedTopology α\ninst✝¹ : Nonempty β\ninst✝ : SemilatticeSup β\nf : β → α\na : α\nhf : Antitone f\nha : Filter.Tendsto f Filter.atTop (nhds a)\n⊢ IsGLB (Set.range f) a","decl":"theorem isGLB_of_tendsto_atTop [TopologicalSpace α] [Preorder α] [OrderClosedTopology α]\n    [Nonempty β] [SemilatticeSup β] {f : β → α} {a : α} (hf : Antitone f)\n    (ha : Tendsto f atTop (𝓝 a)) : IsGLB (Set.range f) a :=\n  @isGLB_of_tendsto_atBot α βᵒᵈ _ _ _ _ _ _ _ hf.dual_left ha\n\n"}
{"name":"iSup_eq_of_tendsto","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"α : Type u_3\nβ : Type u_4\ninst✝⁴ : TopologicalSpace α\ninst✝³ : CompleteLinearOrder α\ninst✝² : OrderTopology α\ninst✝¹ : Nonempty β\ninst✝ : SemilatticeSup β\nf : β → α\na : α\nhf : Monotone f\na✝ : Filter.Tendsto f Filter.atTop (nhds a)\n⊢ Eq (iSup f) a","decl":"theorem iSup_eq_of_tendsto {α β} [TopologicalSpace α] [CompleteLinearOrder α] [OrderTopology α]\n    [Nonempty β] [SemilatticeSup β] {f : β → α} {a : α} (hf : Monotone f) :\n    Tendsto f atTop (𝓝 a) → iSup f = a :=\n  tendsto_nhds_unique (tendsto_atTop_iSup hf)\n\n"}
{"name":"iInf_eq_of_tendsto","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"β : Type u_2\nα : Type u_3\ninst✝⁴ : TopologicalSpace α\ninst✝³ : CompleteLinearOrder α\ninst✝² : OrderTopology α\ninst✝¹ : Nonempty β\ninst✝ : SemilatticeSup β\nf : β → α\na : α\nhf : Antitone f\na✝ : Filter.Tendsto f Filter.atTop (nhds a)\n⊢ Eq (iInf f) a","decl":"theorem iInf_eq_of_tendsto {α} [TopologicalSpace α] [CompleteLinearOrder α] [OrderTopology α]\n    [Nonempty β] [SemilatticeSup β] {f : β → α} {a : α} (hf : Antitone f) :\n    Tendsto f atTop (𝓝 a) → iInf f = a :=\n  tendsto_nhds_unique (tendsto_atTop_iInf hf)\n\n"}
{"name":"iSup_eq_iSup_subseq_of_monotone","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"ι₁ : Type u_3\nι₂ : Type u_4\nα : Type u_5\ninst✝² : Preorder ι₂\ninst✝¹ : CompleteLattice α\nl : Filter ι₁\ninst✝ : l.NeBot\nf : ι₂ → α\nφ : ι₁ → ι₂\nhf : Monotone f\nhφ : Filter.Tendsto φ l Filter.atTop\n⊢ Eq (iSup fun i => f i) (iSup fun i => f (φ i))","decl":"theorem iSup_eq_iSup_subseq_of_monotone {ι₁ ι₂ α : Type*} [Preorder ι₂] [CompleteLattice α]\n    {l : Filter ι₁} [l.NeBot] {f : ι₂ → α} {φ : ι₁ → ι₂} (hf : Monotone f)\n    (hφ : Tendsto φ l atTop) : ⨆ i, f i = ⨆ i, f (φ i) :=\n  le_antisymm\n    (iSup_mono' fun i =>\n      Exists.imp (fun j (hj : i ≤ φ j) => hf hj) (hφ.eventually <| eventually_ge_atTop i).exists)\n    (iSup_mono' fun i => ⟨φ i, le_rfl⟩)\n\n"}
{"name":"iSup_eq_iSup_subseq_of_antitone","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"ι₁ : Type u_3\nι₂ : Type u_4\nα : Type u_5\ninst✝² : Preorder ι₂\ninst✝¹ : CompleteLattice α\nl : Filter ι₁\ninst✝ : l.NeBot\nf : ι₂ → α\nφ : ι₁ → ι₂\nhf : Antitone f\nhφ : Filter.Tendsto φ l Filter.atBot\n⊢ Eq (iSup fun i => f i) (iSup fun i => f (φ i))","decl":"theorem iSup_eq_iSup_subseq_of_antitone {ι₁ ι₂ α : Type*} [Preorder ι₂] [CompleteLattice α]\n    {l : Filter ι₁} [l.NeBot] {f : ι₂ → α} {φ : ι₁ → ι₂} (hf : Antitone f)\n    (hφ : Tendsto φ l atBot) : ⨆ i, f i = ⨆ i, f (φ i) :=\n  le_antisymm\n    (iSup_mono' fun i =>\n      Exists.imp (fun j (hj : φ j ≤ i) => hf hj) (hφ.eventually <| eventually_le_atBot i).exists)\n    (iSup_mono' fun i => ⟨φ i, le_rfl⟩)\n\n"}
{"name":"iInf_eq_iInf_subseq_of_monotone","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"ι₁ : Type u_3\nι₂ : Type u_4\nα : Type u_5\ninst✝² : Preorder ι₂\ninst✝¹ : CompleteLattice α\nl : Filter ι₁\ninst✝ : l.NeBot\nf : ι₂ → α\nφ : ι₁ → ι₂\nhf : Monotone f\nhφ : Filter.Tendsto φ l Filter.atBot\n⊢ Eq (iInf fun i => f i) (iInf fun i => f (φ i))","decl":"theorem iInf_eq_iInf_subseq_of_monotone {ι₁ ι₂ α : Type*} [Preorder ι₂] [CompleteLattice α]\n    {l : Filter ι₁} [l.NeBot] {f : ι₂ → α} {φ : ι₁ → ι₂} (hf : Monotone f)\n    (hφ : Tendsto φ l atBot) : ⨅ i, f i = ⨅ i, f (φ i) :=\n  iSup_eq_iSup_subseq_of_monotone hf.dual hφ\n\n"}
{"name":"iInf_eq_iInf_subseq_of_antitone","module":"Mathlib.Topology.Order.MonotoneConvergence","initialProofState":"ι₁ : Type u_3\nι₂ : Type u_4\nα : Type u_5\ninst✝² : Preorder ι₂\ninst✝¹ : CompleteLattice α\nl : Filter ι₁\ninst✝ : l.NeBot\nf : ι₂ → α\nφ : ι₁ → ι₂\nhf : Antitone f\nhφ : Filter.Tendsto φ l Filter.atTop\n⊢ Eq (iInf fun i => f i) (iInf fun i => f (φ i))","decl":"theorem iInf_eq_iInf_subseq_of_antitone {ι₁ ι₂ α : Type*} [Preorder ι₂] [CompleteLattice α]\n    {l : Filter ι₁} [l.NeBot] {f : ι₂ → α} {φ : ι₁ → ι₂} (hf : Antitone f)\n    (hφ : Tendsto φ l atTop) : ⨅ i, f i = ⨅ i, f (φ i) :=\n  iSup_eq_iSup_subseq_of_antitone hf.dual hφ\n"}
