{"name":"CategoryTheory.GrothendieckTopology.yonedaEquiv_apply","module":"Mathlib.CategoryTheory.Sites.Subcanonical","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\ninst‚úù : J.Subcanonical\nX : C\nF : CategoryTheory.Sheaf J (Type v)\nf : Quiver.Hom (J.yoneda.obj X) F\n‚ä¢ Eq (J.yonedaEquiv f) (f.val.app { unop := X } (CategoryTheory.CategoryStruct.id X))","decl":"theorem yonedaEquiv_apply {X : C} {F : Sheaf J (Type v)} (f : J.yoneda.obj X ‚ü∂ F) :\n    yonedaEquiv J f = f.val.app (op X) (ùüô X) :=\n  rfl\n\n"}
{"name":"CategoryTheory.GrothendieckTopology.yonedaEquiv_symm_app_apply","module":"Mathlib.CategoryTheory.Sites.Subcanonical","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\ninst‚úù : J.Subcanonical\nX : C\nF : CategoryTheory.Sheaf J (Type v)\nx : F.val.obj { unop := X }\nY : Opposite C\nf : Quiver.Hom (Opposite.unop Y) X\n‚ä¢ Eq ((J.yonedaEquiv.symm x).val.app Y f) (F.val.map f.op x)","decl":"@[simp]\ntheorem yonedaEquiv_symm_app_apply {X : C} {F : Sheaf J (Type v)} (x : F.val.obj (op X)) (Y : C·µí·µñ)\n    (f : Y.unop ‚ü∂ X) : (J.yonedaEquiv.symm x).val.app Y f = F.val.map f.op x :=\n  rfl\n\n"}
{"name":"CategoryTheory.GrothendieckTopology.yonedaEquiv_naturality","module":"Mathlib.CategoryTheory.Sites.Subcanonical","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\ninst‚úù : J.Subcanonical\nX Y : C\nF : CategoryTheory.Sheaf J (Type v)\nf : Quiver.Hom (J.yoneda.obj X) F\ng : Quiver.Hom Y X\n‚ä¢ Eq (F.val.map g.op (J.yonedaEquiv f)) (J.yonedaEquiv (CategoryTheory.CategoryStruct.comp (J.yoneda.map g) f))","decl":"/-- See also `yonedaEquiv_naturality'` for a more general version. -/\nlemma yonedaEquiv_naturality {X Y : C} {F : Sheaf J (Type v)} (f : J.yoneda.obj X ‚ü∂ F)\n    (g : Y ‚ü∂ X) : F.val.map g.op (J.yonedaEquiv f) = J.yonedaEquiv (J.yoneda.map g ‚â´ f) := by\n  simp [yonedaEquiv, CategoryTheory.yonedaEquiv_naturality]\n  rfl\n\n"}
{"name":"CategoryTheory.GrothendieckTopology.yonedaEquiv_naturality'","module":"Mathlib.CategoryTheory.Sites.Subcanonical","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\ninst‚úù : J.Subcanonical\nX Y : Opposite C\nF : CategoryTheory.Sheaf J (Type v)\nf : Quiver.Hom (J.yoneda.obj (Opposite.unop X)) F\ng : Quiver.Hom X Y\n‚ä¢ Eq (F.val.map g (J.yonedaEquiv f)) (J.yonedaEquiv (CategoryTheory.CategoryStruct.comp (J.yoneda.map g.unop) f))","decl":"/--\nVariant of `yonedaEquiv_naturality` with general `g`. This is technically strictly more general\nthan `yonedaEquiv_naturality`, but `yonedaEquiv_naturality` is sometimes preferable because it\ncan avoid the \"motive is not type correct\" error.\n-/\nlemma yonedaEquiv_naturality' {X Y : C·µí·µñ} {F : Sheaf J (Type v)} (f : J.yoneda.obj (unop X) ‚ü∂ F)\n    (g : X ‚ü∂ Y) : F.val.map g (J.yonedaEquiv f) = J.yonedaEquiv (J.yoneda.map g.unop ‚â´ f) :=\n  J.yonedaEquiv_naturality _ _\n\n"}
{"name":"CategoryTheory.GrothendieckTopology.yonedaEquiv_comp","module":"Mathlib.CategoryTheory.Sites.Subcanonical","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\ninst‚úù : J.Subcanonical\nX : C\nF G : CategoryTheory.Sheaf J (Type v)\nŒ± : Quiver.Hom (J.yoneda.obj X) F\nŒ≤ : Quiver.Hom F G\n‚ä¢ Eq (J.yonedaEquiv (CategoryTheory.CategoryStruct.comp Œ± Œ≤)) (Œ≤.val.app { unop := X } (J.yonedaEquiv Œ±))","decl":"lemma yonedaEquiv_comp {X : C} {F G : Sheaf J (Type v)} (Œ± : J.yoneda.obj X ‚ü∂ F) (Œ≤ : F ‚ü∂ G) :\n    J.yonedaEquiv (Œ± ‚â´ Œ≤) = Œ≤.val.app _ (J.yonedaEquiv Œ±) :=\n  rfl\n\n"}
{"name":"CategoryTheory.GrothendieckTopology.yonedaEquiv_yoneda_map","module":"Mathlib.CategoryTheory.Sites.Subcanonical","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\ninst‚úù : J.Subcanonical\nX Y : C\nf : Quiver.Hom X Y\n‚ä¢ Eq (J.yonedaEquiv (J.yoneda.map f)) f","decl":"lemma yonedaEquiv_yoneda_map {X Y : C} (f : X ‚ü∂ Y) : J.yonedaEquiv (J.yoneda.map f) = f := by\n  rw [yonedaEquiv_apply]\n  simp\n\n"}
{"name":"CategoryTheory.GrothendieckTopology.yonedaEquiv_symm_naturality_left","module":"Mathlib.CategoryTheory.Sites.Subcanonical","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\ninst‚úù : J.Subcanonical\nX X' : C\nf : Quiver.Hom X' X\nF : CategoryTheory.Sheaf J (Type v)\nx : F.val.obj { unop := X }\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (J.yoneda.map f) (J.yonedaEquiv.symm x)) (J.yonedaEquiv.symm (F.val.map f.op x))","decl":"lemma yonedaEquiv_symm_naturality_left {X X' : C} (f : X' ‚ü∂ X) (F : Sheaf J (Type v))\n    (x : F.val.obj ‚ü®X‚ü©) : J.yoneda.map f ‚â´ J.yonedaEquiv.symm x = J.yonedaEquiv.symm\n      ((F.val.map f.op) x) := by\n  apply J.yonedaEquiv.injective\n  simp only [yonedaEquiv_comp, yoneda_obj_obj, yonedaEquiv_symm_app_apply, Equiv.apply_symm_apply]\n  rw [yonedaEquiv_yoneda_map]\n\n"}
{"name":"CategoryTheory.GrothendieckTopology.yonedaEquiv_symm_naturality_right","module":"Mathlib.CategoryTheory.Sites.Subcanonical","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\ninst‚úù : J.Subcanonical\nX : C\nF F' : CategoryTheory.Sheaf J (Type v)\nf : Quiver.Hom F F'\nx : F.val.obj { unop := X }\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (J.yonedaEquiv.symm x) f) (J.yonedaEquiv.symm (f.val.app { unop := X } x))","decl":"lemma yonedaEquiv_symm_naturality_right (X : C) {F F' : Sheaf J (Type v)} (f : F ‚ü∂ F')\n    (x : F.val.obj ‚ü®X‚ü©) : J.yonedaEquiv.symm x ‚â´ f = J.yonedaEquiv.symm (f.val.app ‚ü®X‚ü© x) := by\n  apply J.yonedaEquiv.injective\n  simp [yonedaEquiv_comp]\n\n"}
{"name":"CategoryTheory.GrothendieckTopology.map_yonedaEquiv","module":"Mathlib.CategoryTheory.Sites.Subcanonical","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\ninst‚úù : J.Subcanonical\nX Y : C\nF : CategoryTheory.Sheaf J (Type v)\nf : Quiver.Hom (J.yoneda.obj X) F\ng : Quiver.Hom Y X\n‚ä¢ Eq (F.val.map g.op (J.yonedaEquiv f)) (f.val.app { unop := Y } g)","decl":"/-- See also `map_yonedaEquiv'` for a more general version. -/\nlemma map_yonedaEquiv {X Y : C} {F : Sheaf J (Type v)} (f : J.yoneda.obj X ‚ü∂ F)\n    (g : Y ‚ü∂ X) : F.val.map g.op (J.yonedaEquiv f) = f.val.app (op Y) g := by\n  rw [yonedaEquiv_naturality, yonedaEquiv_comp, yonedaEquiv_yoneda_map]\n\n"}
{"name":"CategoryTheory.GrothendieckTopology.map_yonedaEquiv'","module":"Mathlib.CategoryTheory.Sites.Subcanonical","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\ninst‚úù : J.Subcanonical\nX Y : Opposite C\nF : CategoryTheory.Sheaf J (Type v)\nf : Quiver.Hom (J.yoneda.obj (Opposite.unop X)) F\ng : Quiver.Hom X Y\n‚ä¢ Eq (F.val.map g (J.yonedaEquiv f)) (f.val.app Y g.unop)","decl":"/--\nVariant of `map_yonedaEquiv` with general `g`. This is technically strictly more general\nthan `map_yonedaEquiv`, but `map_yonedaEquiv` is sometimes preferable because it\ncan avoid the \"motive is not type correct\" error.\n-/\nlemma map_yonedaEquiv' {X Y : C·µí·µñ} {F : Sheaf J (Type v)} (f : J.yoneda.obj (unop X) ‚ü∂ F)\n    (g : X ‚ü∂ Y) : F.val.map g (J.yonedaEquiv f) = f.val.app Y g.unop := by\n  rw [yonedaEquiv_naturality', yonedaEquiv_comp, yonedaEquiv_yoneda_map]\n\n"}
{"name":"CategoryTheory.GrothendieckTopology.yonedaEquiv_symm_map","module":"Mathlib.CategoryTheory.Sites.Subcanonical","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\ninst‚úù : J.Subcanonical\nX Y : Opposite C\nf : Quiver.Hom X Y\nF : CategoryTheory.Sheaf J (Type v)\nt : F.val.obj X\n‚ä¢ Eq (J.yonedaEquiv.symm (F.val.map f t)) (CategoryTheory.CategoryStruct.comp (J.yoneda.map f.unop) (J.yonedaEquiv.symm t))","decl":"lemma yonedaEquiv_symm_map {X Y : C·µí·µñ} (f : X ‚ü∂ Y) {F : Sheaf J (Type v)} (t : F.val.obj X) :\n    J.yonedaEquiv.symm (F.val.map f t) = J.yoneda.map f.unop ‚â´ J.yonedaEquiv.symm t := by\n  obtain ‚ü®u, rfl‚ü© := J.yonedaEquiv.surjective t\n  rw [yonedaEquiv_naturality', Equiv.symm_apply_apply, Equiv.symm_apply_apply]\n\n"}
{"name":"CategoryTheory.GrothendieckTopology.hom_ext_yoneda","module":"Mathlib.CategoryTheory.Sites.Subcanonical","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\ninst‚úù : J.Subcanonical\nP Q : CategoryTheory.Sheaf J (Type v)\nf g : Quiver.Hom P Q\nh : ‚àÄ (X : C) (p : Quiver.Hom (J.yoneda.obj X) P), Eq (CategoryTheory.CategoryStruct.comp p f) (CategoryTheory.CategoryStruct.comp p g)\n‚ä¢ Eq f g","decl":"/--\nTwo morphisms of sheaves of types `P ‚ü∂ Q` coincide if the precompositions with morphisms\n`yoneda.obj X ‚ü∂ P` agree.\n-/\nlemma hom_ext_yoneda {P Q : Sheaf J (Type v)} {f g : P ‚ü∂ Q}\n    (h : ‚àÄ (X : C) (p : J.yoneda.obj X ‚ü∂ P), p ‚â´ f = p ‚â´ g) :\n    f = g := by\n  ext X x\n  simpa only [yonedaEquiv_comp, Equiv.apply_symm_apply]\n    using congr_arg (J.yonedaEquiv) (h _ (J.yonedaEquiv.symm x))\n\n"}
{"name":"CategoryTheory.GrothendieckTopology.yonedaULiftEquiv_apply","module":"Mathlib.CategoryTheory.Sites.Subcanonical","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\ninst‚úù : J.Subcanonical\nX : C\nF : CategoryTheory.Sheaf J (Type (max v v'))\nf : Quiver.Hom ((CategoryTheory.GrothendieckTopology.yonedaULift.{v', v, u} J).obj X) F\n‚ä¢ Eq (J.yonedaULiftEquiv f) (f.val.app { unop := X } { down := CategoryTheory.CategoryStruct.id X })","decl":"theorem yonedaULiftEquiv_apply {X : C} {F : Sheaf J (Type (max v v'))}\n    (f : J.yonedaULift.obj X ‚ü∂ F) : yonedaULiftEquiv.{v'} J f = f.val.app (op X) ‚ü®ùüô X‚ü© :=\n  rfl\n\n"}
{"name":"CategoryTheory.GrothendieckTopology.yonedaULiftEquiv_symm_app_apply","module":"Mathlib.CategoryTheory.Sites.Subcanonical","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\ninst‚úù : J.Subcanonical\nX : C\nF : CategoryTheory.Sheaf J (Type (max v v'))\nx : F.val.obj { unop := X }\nY : Opposite C\nf : Quiver.Hom (Opposite.unop Y) X\n‚ä¢ Eq ((J.yonedaULiftEquiv.symm x).val.app Y { down := f }) (F.val.map f.op x)","decl":"@[simp]\ntheorem yonedaULiftEquiv_symm_app_apply {X : C} {F : Sheaf J (Type (max v v'))}\n    (x : F.val.obj (op X)) (Y : C·µí·µñ) (f : Y.unop ‚ü∂ X) :\n      (J.yonedaULiftEquiv.symm x).val.app Y ‚ü®f‚ü© = F.val.map f.op x :=\n  rfl\n\n"}
{"name":"CategoryTheory.GrothendieckTopology.yonedaULiftEquiv_naturality","module":"Mathlib.CategoryTheory.Sites.Subcanonical","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\ninst‚úù : J.Subcanonical\nX Y : C\nF : CategoryTheory.Sheaf J (Type (max v v'))\nf : Quiver.Hom ((CategoryTheory.GrothendieckTopology.yonedaULift.{v', v, u} J).obj X) F\ng : Quiver.Hom Y X\n‚ä¢ Eq (F.val.map g.op (J.yonedaULiftEquiv f)) (J.yonedaULiftEquiv (CategoryTheory.CategoryStruct.comp ((CategoryTheory.GrothendieckTopology.yonedaULift.{v', v, u} J).map g) f))","decl":"/-- See also `yonedaEquiv_naturality'` for a more general version. -/\nlemma yonedaULiftEquiv_naturality {X Y : C} {F : Sheaf J (Type (max v v'))}\n    (f : J.yonedaULift.obj X ‚ü∂ F) (g : Y ‚ü∂ X) :\n      F.val.map g.op (J.yonedaULiftEquiv f) = J.yonedaULiftEquiv (J.yonedaULift.map g ‚â´ f) := by\n  change (f.val.app (op X) ‚â´ F.val.map g.op) ‚ü®ùüô X‚ü© = f.val.app (op Y) ‚ü®ùüô Y ‚â´ g‚ü©\n  rw [‚Üê f.val.naturality]\n  simp [yonedaULift]\n\n"}
{"name":"CategoryTheory.GrothendieckTopology.yonedaULiftEquiv_naturality'","module":"Mathlib.CategoryTheory.Sites.Subcanonical","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\ninst‚úù : J.Subcanonical\nX Y : Opposite C\nF : CategoryTheory.Sheaf J (Type (max v v'))\nf : Quiver.Hom ((CategoryTheory.GrothendieckTopology.yonedaULift.{v', v, u} J).obj (Opposite.unop X)) F\ng : Quiver.Hom X Y\n‚ä¢ Eq (F.val.map g (J.yonedaULiftEquiv f)) (J.yonedaULiftEquiv (CategoryTheory.CategoryStruct.comp ((CategoryTheory.GrothendieckTopology.yonedaULift.{v', v, u} J).map g.unop) f))","decl":"/-- Variant of `yonedaEquiv_naturality` with general `g`. This is technically strictly more general\n    than `yonedaEquiv_naturality`, but `yonedaEquiv_naturality` is sometimes preferable because it\n    can avoid the \"motive is not type correct\" error. -/\nlemma yonedaULiftEquiv_naturality' {X Y : C·µí·µñ} {F : Sheaf J (Type (max v v'))}\n    (f : J.yonedaULift.obj (unop X) ‚ü∂ F) (g : X ‚ü∂ Y) :\n      F.val.map g (J.yonedaULiftEquiv f) = J.yonedaULiftEquiv (J.yonedaULift.map g.unop ‚â´ f) :=\n  J.yonedaULiftEquiv_naturality _ _\n\n"}
{"name":"CategoryTheory.GrothendieckTopology.yonedaULiftEquiv_comp","module":"Mathlib.CategoryTheory.Sites.Subcanonical","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\ninst‚úù : J.Subcanonical\nX : C\nF G : CategoryTheory.Sheaf J (Type (max v v'))\nŒ± : Quiver.Hom ((CategoryTheory.GrothendieckTopology.yonedaULift.{v', v, u} J).obj X) F\nŒ≤ : Quiver.Hom F G\n‚ä¢ Eq (J.yonedaULiftEquiv (CategoryTheory.CategoryStruct.comp Œ± Œ≤)) (Œ≤.val.app { unop := X } (J.yonedaULiftEquiv Œ±))","decl":"lemma yonedaULiftEquiv_comp {X : C} {F G : Sheaf J (Type (max v v'))} (Œ± : J.yonedaULift.obj X ‚ü∂ F)\n    (Œ≤ : F ‚ü∂ G) : J.yonedaULiftEquiv (Œ± ‚â´ Œ≤) = Œ≤.val.app _ (J.yonedaULiftEquiv Œ±) :=\n  rfl\n\n"}
{"name":"CategoryTheory.GrothendieckTopology.yonedaULiftEquiv_yonedaULift_map","module":"Mathlib.CategoryTheory.Sites.Subcanonical","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\ninst‚úù : J.Subcanonical\nX Y : C\nf : Quiver.Hom X Y\n‚ä¢ Eq (J.yonedaULiftEquiv ((CategoryTheory.GrothendieckTopology.yonedaULift.{v', v, u} J).map f)) { down := f }","decl":"lemma yonedaULiftEquiv_yonedaULift_map {X Y : C} (f : X ‚ü∂ Y) :\n    (yonedaULiftEquiv.{v'} J) (J.yonedaULift.map f) = ‚ü®f‚ü© := by\n  rw [yonedaULiftEquiv_apply]\n  simp [yonedaULift]\n\n"}
{"name":"CategoryTheory.GrothendieckTopology.yonedaULiftEquiv_symm_naturality_left","module":"Mathlib.CategoryTheory.Sites.Subcanonical","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\ninst‚úù : J.Subcanonical\nX X' : C\nf : Quiver.Hom X' X\nF : CategoryTheory.Sheaf J (Type (max v v'))\nx : F.val.obj { unop := X }\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp ((CategoryTheory.GrothendieckTopology.yonedaULift.{v', v, u} J).map f) (J.yonedaULiftEquiv.symm x)) (J.yonedaULiftEquiv.symm (F.val.map f.op x))","decl":"lemma yonedaULiftEquiv_symm_naturality_left {X X' : C} (f : X' ‚ü∂ X) (F : Sheaf J (Type (max v v')))\n    (x : F.val.obj ‚ü®X‚ü©) : J.yonedaULift.map f ‚â´ J.yonedaULiftEquiv.symm x = J.yonedaULiftEquiv.symm\n      ((F.val.map f.op) x) := by\n  apply J.yonedaULiftEquiv.injective\n  simp only [yonedaULiftEquiv_comp, Equiv.apply_symm_apply]\n  rw [yonedaULiftEquiv_yonedaULift_map]\n  rfl\n\n"}
{"name":"CategoryTheory.GrothendieckTopology.yonedaULiftEquiv_symm_naturality_right","module":"Mathlib.CategoryTheory.Sites.Subcanonical","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\ninst‚úù : J.Subcanonical\nX : C\nF F' : CategoryTheory.Sheaf J (Type (max v v'))\nf : Quiver.Hom F F'\nx : F.val.obj { unop := X }\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (J.yonedaULiftEquiv.symm x) f) (J.yonedaULiftEquiv.symm (f.val.app { unop := X } x))","decl":"lemma yonedaULiftEquiv_symm_naturality_right (X : C) {F F' : Sheaf J (Type (max v v'))}\n    (f : F ‚ü∂ F') (x : F.val.obj ‚ü®X‚ü©) :\n      J.yonedaULiftEquiv.symm x ‚â´ f = J.yonedaULiftEquiv.symm (f.val.app ‚ü®X‚ü© x) := by\n  apply J.yonedaULiftEquiv.injective\n  simp [yonedaULiftEquiv_comp]\n\n"}
{"name":"CategoryTheory.GrothendieckTopology.map_yonedaULiftEquiv","module":"Mathlib.CategoryTheory.Sites.Subcanonical","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\ninst‚úù : J.Subcanonical\nX Y : C\nF : CategoryTheory.Sheaf J (Type (max v v'))\nf : Quiver.Hom ((CategoryTheory.GrothendieckTopology.yonedaULift.{v', v, u} J).obj X) F\ng : Quiver.Hom Y X\n‚ä¢ Eq (F.val.map g.op (J.yonedaULiftEquiv f)) (f.val.app { unop := Y } { down := g })","decl":"/-- See also `map_yonedaEquiv'` for a more general version. -/\nlemma map_yonedaULiftEquiv {X Y : C} {F : Sheaf J (Type (max v v'))}\n    (f : J.yonedaULift.obj X ‚ü∂ F) (g : Y ‚ü∂ X) :\n      F.val.map g.op (J.yonedaULiftEquiv f) = f.val.app (op Y) ‚ü®g‚ü© := by\n  rw [yonedaULiftEquiv_naturality, yonedaULiftEquiv_comp, yonedaULiftEquiv_yonedaULift_map]\n\n"}
{"name":"CategoryTheory.GrothendieckTopology.map_yonedaULiftEquiv'","module":"Mathlib.CategoryTheory.Sites.Subcanonical","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\ninst‚úù : J.Subcanonical\nX Y : Opposite C\nF : CategoryTheory.Sheaf J (Type (max v v'))\nf : Quiver.Hom ((CategoryTheory.GrothendieckTopology.yonedaULift.{v', v, u} J).obj (Opposite.unop X)) F\ng : Quiver.Hom X Y\n‚ä¢ Eq (F.val.map g (J.yonedaULiftEquiv f)) (f.val.app Y { down := g.unop })","decl":"/-- Variant of `map_yonedaEquiv` with general `g`. This is technically strictly more general\n    than `map_yonedaEquiv`, but `map_yonedaEquiv` is sometimes preferable because it\n    can avoid the \"motive is not type correct\" error. -/\nlemma map_yonedaULiftEquiv' {X Y : C·µí·µñ} {F : Sheaf J (Type (max v v'))}\n    (f : J.yonedaULift.obj (unop X) ‚ü∂ F)\n    (g : X ‚ü∂ Y) : F.val.map g (J.yonedaULiftEquiv f) = f.val.app Y ‚ü®g.unop‚ü© := by\n  rw [yonedaULiftEquiv_naturality', yonedaULiftEquiv_comp, yonedaULiftEquiv_yonedaULift_map]\n\n"}
{"name":"CategoryTheory.GrothendieckTopology.yonedaULeftEquiv_symm_map","module":"Mathlib.CategoryTheory.Sites.Subcanonical","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\ninst‚úù : J.Subcanonical\nX Y : Opposite C\nf : Quiver.Hom X Y\nF : CategoryTheory.Sheaf J (Type (max v v'))\nt : F.val.obj X\n‚ä¢ Eq (J.yonedaULiftEquiv.symm (F.val.map f t)) (CategoryTheory.CategoryStruct.comp ((CategoryTheory.GrothendieckTopology.yonedaULift.{v', v, u} J).map f.unop) (J.yonedaULiftEquiv.symm t))","decl":"lemma yonedaULeftEquiv_symm_map {X Y : C·µí·µñ} (f : X ‚ü∂ Y) {F : Sheaf J (Type (max v v'))}\n    (t : F.val.obj X) : J.yonedaULiftEquiv.symm (F.val.map f t) =\n      J.yonedaULift.map f.unop ‚â´ J.yonedaULiftEquiv.symm t := by\n  obtain ‚ü®u, rfl‚ü© := J.yonedaULiftEquiv.surjective t\n  rw [yonedaULiftEquiv_naturality', Equiv.symm_apply_apply, Equiv.symm_apply_apply]\n\n"}
{"name":"CategoryTheory.GrothendieckTopology.hom_ext_yonedaULift","module":"Mathlib.CategoryTheory.Sites.Subcanonical","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\nJ : CategoryTheory.GrothendieckTopology C\ninst‚úù : J.Subcanonical\nP Q : CategoryTheory.Sheaf J (Type (max v v'))\nf g : Quiver.Hom P Q\nh : ‚àÄ (X : C) (p : Quiver.Hom ((CategoryTheory.GrothendieckTopology.yonedaULift.{v', v, u} J).obj X) P), Eq (CategoryTheory.CategoryStruct.comp p f) (CategoryTheory.CategoryStruct.comp p g)\n‚ä¢ Eq f g","decl":"/-- Two morphisms of sheaves of types `P ‚ü∂ Q` coincide if the precompositions\nwith morphisms `yoneda.obj X ‚ü∂ P` agree. -/\nlemma hom_ext_yonedaULift {P Q : Sheaf J (Type (max v v'))} {f g : P ‚ü∂ Q}\n    (h : ‚àÄ (X : C) (p : J.yonedaULift.obj X ‚ü∂ P), p ‚â´ f = p ‚â´ g) :\n    f = g := by\n  ext X x\n  simpa only [yonedaULiftEquiv_comp, Equiv.apply_symm_apply]\n    using congr_arg (J.yonedaULiftEquiv) (h _ (J.yonedaULiftEquiv.symm x))\n\n"}
