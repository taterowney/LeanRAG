{"name":"toDual_natCast","module":"Mathlib.Data.Nat.Cast.Synonym","initialProofState":"α : Type u_1\ninst✝ : NatCast α\nn : Nat\n⊢ Eq (OrderDual.toDual ↑n) ↑n","decl":"@[simp]\ntheorem toDual_natCast [NatCast α] (n : ℕ) : toDual (n : α) = n :=\n  rfl\n\n"}
{"name":"toDual_ofNat","module":"Mathlib.Data.Nat.Cast.Synonym","initialProofState":"α : Type u_1\ninst✝¹ : NatCast α\nn : Nat\ninst✝ : n.AtLeastTwo\n⊢ Eq (OrderDual.toDual (OfNat.ofNat n)) (OfNat.ofNat n)","decl":"@[simp]\ntheorem toDual_ofNat [NatCast α] (n : ℕ) [n.AtLeastTwo] :\n    (toDual (ofNat(n) : α)) = ofNat(n) :=\n  rfl\n\n"}
{"name":"ofDual_natCast","module":"Mathlib.Data.Nat.Cast.Synonym","initialProofState":"α : Type u_1\ninst✝ : NatCast α\nn : Nat\n⊢ Eq (OrderDual.ofDual ↑n) ↑n","decl":"@[simp]\ntheorem ofDual_natCast [NatCast α] (n : ℕ) : (ofDual n : α) = n :=\n  rfl\n\n"}
{"name":"ofDual_ofNat","module":"Mathlib.Data.Nat.Cast.Synonym","initialProofState":"α : Type u_1\ninst✝¹ : NatCast α\nn : Nat\ninst✝ : n.AtLeastTwo\n⊢ Eq (OrderDual.ofDual (OfNat.ofNat n)) (OfNat.ofNat n)","decl":"@[simp]\ntheorem ofDual_ofNat [NatCast α] (n : ℕ) [n.AtLeastTwo] :\n    (ofDual (ofNat(n) : αᵒᵈ)) = ofNat(n) :=\n  rfl\n\n"}
{"name":"toLex_natCast","module":"Mathlib.Data.Nat.Cast.Synonym","initialProofState":"α : Type u_1\ninst✝ : NatCast α\nn : Nat\n⊢ Eq (toLex ↑n) ↑n","decl":"@[simp]\ntheorem toLex_natCast [NatCast α] (n : ℕ) : toLex (n : α) = n :=\n  rfl\n\n"}
{"name":"toLex_ofNat","module":"Mathlib.Data.Nat.Cast.Synonym","initialProofState":"α : Type u_1\ninst✝¹ : NatCast α\nn : Nat\ninst✝ : n.AtLeastTwo\n⊢ Eq (toLex (OfNat.ofNat n)) (OfNat.ofNat n)","decl":"@[simp]\ntheorem toLex_ofNat [NatCast α] (n : ℕ) [n.AtLeastTwo] :\n    toLex (ofNat(n) : α) = OfNat.ofNat n :=\n  rfl\n\n"}
{"name":"ofLex_natCast","module":"Mathlib.Data.Nat.Cast.Synonym","initialProofState":"α : Type u_1\ninst✝ : NatCast α\nn : Nat\n⊢ Eq (ofLex ↑n) ↑n","decl":"@[simp]\ntheorem ofLex_natCast [NatCast α] (n : ℕ) : (ofLex n : α) = n :=\n  rfl\n\n"}
{"name":"ofLex_ofNat","module":"Mathlib.Data.Nat.Cast.Synonym","initialProofState":"α : Type u_1\ninst✝¹ : NatCast α\nn : Nat\ninst✝ : n.AtLeastTwo\n⊢ Eq (ofLex (OfNat.ofNat n)) (OfNat.ofNat n)","decl":"@[simp]\ntheorem ofLex_ofNat [NatCast α] (n : ℕ) [n.AtLeastTwo] :\n    ofLex (ofNat(n) : Lex α) = OfNat.ofNat n :=\n  rfl\n"}
