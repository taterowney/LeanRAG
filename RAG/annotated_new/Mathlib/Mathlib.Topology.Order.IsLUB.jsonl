{"name":"IsLUB.frequently_mem","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\ninst✝¹ : LinearOrder α\ninst✝ : OrderTopology α\na : α\ns : Set α\nha : IsLUB s a\nhs : s.Nonempty\n⊢ Filter.Frequently (fun x => Membership.mem s x) (nhdsWithin a (Set.Iic a))","decl":"theorem IsLUB.frequently_mem {a : α} {s : Set α} (ha : IsLUB s a) (hs : s.Nonempty) :\n    ∃ᶠ x in 𝓝[≤] a, x ∈ s := by\n  rcases hs with ⟨a', ha'⟩\n  intro h\n  rcases (ha.1 ha').eq_or_lt with (rfl | ha'a)\n  · exact h.self_of_nhdsWithin le_rfl ha'\n  · rcases (mem_nhdsLE_iff_exists_Ioc_subset' ha'a).1 h with ⟨b, hba, hb⟩\n    rcases ha.exists_between hba with ⟨b', hb's, hb'⟩\n    exact hb hb' hb's\n\n"}
{"name":"IsLUB.frequently_nhds_mem","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\ninst✝¹ : LinearOrder α\ninst✝ : OrderTopology α\na : α\ns : Set α\nha : IsLUB s a\nhs : s.Nonempty\n⊢ Filter.Frequently (fun x => Membership.mem s x) (nhds a)","decl":"theorem IsLUB.frequently_nhds_mem {a : α} {s : Set α} (ha : IsLUB s a) (hs : s.Nonempty) :\n    ∃ᶠ x in 𝓝 a, x ∈ s :=\n  (ha.frequently_mem hs).filter_mono inf_le_left\n\n"}
{"name":"IsGLB.frequently_mem","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\ninst✝¹ : LinearOrder α\ninst✝ : OrderTopology α\na : α\ns : Set α\nha : IsGLB s a\nhs : s.Nonempty\n⊢ Filter.Frequently (fun x => Membership.mem s x) (nhdsWithin a (Set.Ici a))","decl":"theorem IsGLB.frequently_mem {a : α} {s : Set α} (ha : IsGLB s a) (hs : s.Nonempty) :\n    ∃ᶠ x in 𝓝[≥] a, x ∈ s :=\n  IsLUB.frequently_mem (α := αᵒᵈ) ha hs\n\n"}
{"name":"IsGLB.frequently_nhds_mem","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\ninst✝¹ : LinearOrder α\ninst✝ : OrderTopology α\na : α\ns : Set α\nha : IsGLB s a\nhs : s.Nonempty\n⊢ Filter.Frequently (fun x => Membership.mem s x) (nhds a)","decl":"theorem IsGLB.frequently_nhds_mem {a : α} {s : Set α} (ha : IsGLB s a) (hs : s.Nonempty) :\n    ∃ᶠ x in 𝓝 a, x ∈ s :=\n  (ha.frequently_mem hs).filter_mono inf_le_left\n\n"}
{"name":"IsLUB.mem_closure","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\ninst✝¹ : LinearOrder α\ninst✝ : OrderTopology α\na : α\ns : Set α\nha : IsLUB s a\nhs : s.Nonempty\n⊢ Membership.mem (closure s) a","decl":"theorem IsLUB.mem_closure {a : α} {s : Set α} (ha : IsLUB s a) (hs : s.Nonempty) : a ∈ closure s :=\n  (ha.frequently_nhds_mem hs).mem_closure\n\n"}
{"name":"IsGLB.mem_closure","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\ninst✝¹ : LinearOrder α\ninst✝ : OrderTopology α\na : α\ns : Set α\nha : IsGLB s a\nhs : s.Nonempty\n⊢ Membership.mem (closure s) a","decl":"theorem IsGLB.mem_closure {a : α} {s : Set α} (ha : IsGLB s a) (hs : s.Nonempty) : a ∈ closure s :=\n  (ha.frequently_nhds_mem hs).mem_closure\n\n"}
{"name":"IsLUB.nhdsWithin_neBot","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\ninst✝¹ : LinearOrder α\ninst✝ : OrderTopology α\na : α\ns : Set α\nha : IsLUB s a\nhs : s.Nonempty\n⊢ (nhdsWithin a s).NeBot","decl":"theorem IsLUB.nhdsWithin_neBot {a : α} {s : Set α} (ha : IsLUB s a) (hs : s.Nonempty) :\n    NeBot (𝓝[s] a) :=\n  mem_closure_iff_nhdsWithin_neBot.1 (ha.mem_closure hs)\n\n"}
{"name":"IsGLB.nhdsWithin_neBot","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\ninst✝¹ : LinearOrder α\ninst✝ : OrderTopology α\na : α\ns : Set α\nha : IsGLB s a\nhs : s.Nonempty\n⊢ (nhdsWithin a s).NeBot","decl":"theorem IsGLB.nhdsWithin_neBot {a : α} {s : Set α} (ha : IsGLB s a) (hs : s.Nonempty) :\n    NeBot (𝓝[s] a) :=\n  IsLUB.nhdsWithin_neBot (α := αᵒᵈ) ha hs\n\n"}
{"name":"isLUB_of_mem_nhds","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\ninst✝² : LinearOrder α\ninst✝¹ : OrderTopology α\ns : Set α\na : α\nf : Filter α\nhsa : Membership.mem (upperBounds s) a\nhsf : Membership.mem f s\ninst✝ : (Min.min f (nhds a)).NeBot\n⊢ IsLUB s a","decl":"theorem isLUB_of_mem_nhds {s : Set α} {a : α} {f : Filter α} (hsa : a ∈ upperBounds s) (hsf : s ∈ f)\n    [NeBot (f ⊓ 𝓝 a)] : IsLUB s a :=\n  ⟨hsa, fun b hb =>\n    not_lt.1 fun hba =>\n      have : s ∩ { a | b < a } ∈ f ⊓ 𝓝 a := inter_mem_inf hsf (IsOpen.mem_nhds (isOpen_lt' _) hba)\n      let ⟨_x, ⟨hxs, hxb⟩⟩ := Filter.nonempty_of_mem this\n      have : b < b := lt_of_lt_of_le hxb <| hb hxs\n      lt_irrefl b this⟩\n\n"}
{"name":"isLUB_of_mem_closure","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\ninst✝¹ : LinearOrder α\ninst✝ : OrderTopology α\ns : Set α\na : α\nhsa : Membership.mem (upperBounds s) a\nhsf : Membership.mem (closure s) a\n⊢ IsLUB s a","decl":"theorem isLUB_of_mem_closure {s : Set α} {a : α} (hsa : a ∈ upperBounds s) (hsf : a ∈ closure s) :\n    IsLUB s a := by\n  rw [mem_closure_iff_clusterPt, ClusterPt, inf_comm] at hsf\n  exact isLUB_of_mem_nhds hsa (mem_principal_self s)\n\n"}
{"name":"isGLB_of_mem_nhds","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\ninst✝² : LinearOrder α\ninst✝¹ : OrderTopology α\ns : Set α\na : α\nf : Filter α\nhsa : Membership.mem (lowerBounds s) a\nhsf : Membership.mem f s\ninst✝ : (Min.min f (nhds a)).NeBot\n⊢ IsGLB s a","decl":"theorem isGLB_of_mem_nhds {s : Set α} {a : α} {f : Filter α} (hsa : a ∈ lowerBounds s) (hsf : s ∈ f)\n    [NeBot (f ⊓ 𝓝 a)] :\n    IsGLB s a :=\n  isLUB_of_mem_nhds (α := αᵒᵈ) hsa hsf\n\n"}
{"name":"isGLB_of_mem_closure","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\ninst✝¹ : LinearOrder α\ninst✝ : OrderTopology α\ns : Set α\na : α\nhsa : Membership.mem (lowerBounds s) a\nhsf : Membership.mem (closure s) a\n⊢ IsGLB s a","decl":"theorem isGLB_of_mem_closure {s : Set α} {a : α} (hsa : a ∈ lowerBounds s) (hsf : a ∈ closure s) :\n    IsGLB s a :=\n  isLUB_of_mem_closure (α := αᵒᵈ) hsa hsf\n\n"}
{"name":"IsLUB.mem_upperBounds_of_tendsto","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\nγ : Type u_2\ninst✝⁵ : TopologicalSpace α\ninst✝⁴ : LinearOrder α\ninst✝³ : OrderTopology α\ninst✝² : Preorder γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderClosedTopology γ\nf : α → γ\ns : Set α\na : α\nb : γ\nhf : MonotoneOn f s\nha : IsLUB s a\nhb : Filter.Tendsto f (nhdsWithin a s) (nhds b)\n⊢ Membership.mem (upperBounds (Set.image f s)) b","decl":"theorem IsLUB.mem_upperBounds_of_tendsto [Preorder γ] [TopologicalSpace γ] [OrderClosedTopology γ]\n    {f : α → γ} {s : Set α} {a : α} {b : γ} (hf : MonotoneOn f s) (ha : IsLUB s a)\n    (hb : Tendsto f (𝓝[s] a) (𝓝 b)) : b ∈ upperBounds (f '' s) := by\n  rintro _ ⟨x, hx, rfl⟩\n  replace ha := ha.inter_Ici_of_mem hx\n  haveI := ha.nhdsWithin_neBot ⟨x, hx, le_rfl⟩\n  refine ge_of_tendsto (hb.mono_left (nhdsWithin_mono a (inter_subset_left (t := Ici x)))) ?_\n  exact mem_of_superset self_mem_nhdsWithin fun y hy => hf hx hy.1 hy.2\n\n-- For a version of this theorem in which the convergence considered on the domain `α` is as `x : α`\n-- tends to infinity, rather than tending to a point `x` in `α`, see `isLUB_of_tendsto_atTop`\n"}
{"name":"IsLUB.isLUB_of_tendsto","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\nγ : Type u_2\ninst✝⁵ : TopologicalSpace α\ninst✝⁴ : LinearOrder α\ninst✝³ : OrderTopology α\ninst✝² : Preorder γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderClosedTopology γ\nf : α → γ\ns : Set α\na : α\nb : γ\nhf : MonotoneOn f s\nha : IsLUB s a\nhs : s.Nonempty\nhb : Filter.Tendsto f (nhdsWithin a s) (nhds b)\n⊢ IsLUB (Set.image f s) b","decl":"theorem IsLUB.isLUB_of_tendsto [Preorder γ] [TopologicalSpace γ] [OrderClosedTopology γ] {f : α → γ}\n    {s : Set α} {a : α} {b : γ} (hf : MonotoneOn f s) (ha : IsLUB s a) (hs : s.Nonempty)\n    (hb : Tendsto f (𝓝[s] a) (𝓝 b)) : IsLUB (f '' s) b :=\n  haveI := ha.nhdsWithin_neBot hs\n  ⟨ha.mem_upperBounds_of_tendsto hf hb, fun _b' hb' =>\n    le_of_tendsto hb (mem_of_superset self_mem_nhdsWithin fun _ hx => hb' <| mem_image_of_mem _ hx)⟩\n\n"}
{"name":"IsGLB.mem_lowerBounds_of_tendsto","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\nγ : Type u_2\ninst✝⁵ : TopologicalSpace α\ninst✝⁴ : LinearOrder α\ninst✝³ : OrderTopology α\ninst✝² : Preorder γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderClosedTopology γ\nf : α → γ\ns : Set α\na : α\nb : γ\nhf : MonotoneOn f s\nha : IsGLB s a\nhb : Filter.Tendsto f (nhdsWithin a s) (nhds b)\n⊢ Membership.mem (lowerBounds (Set.image f s)) b","decl":"theorem IsGLB.mem_lowerBounds_of_tendsto [Preorder γ] [TopologicalSpace γ] [OrderClosedTopology γ]\n    {f : α → γ} {s : Set α} {a : α} {b : γ} (hf : MonotoneOn f s) (ha : IsGLB s a)\n    (hb : Tendsto f (𝓝[s] a) (𝓝 b)) : b ∈ lowerBounds (f '' s) :=\n  IsLUB.mem_upperBounds_of_tendsto (α := αᵒᵈ) (γ := γᵒᵈ) hf.dual ha hb\n\n-- For a version of this theorem in which the convergence considered on the domain `α` is as\n-- `x : α` tends to negative infinity, rather than tending to a point `x` in `α`, see\n-- `isGLB_of_tendsto_atBot`\n"}
{"name":"IsGLB.isGLB_of_tendsto","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\nγ : Type u_2\ninst✝⁵ : TopologicalSpace α\ninst✝⁴ : LinearOrder α\ninst✝³ : OrderTopology α\ninst✝² : Preorder γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderClosedTopology γ\nf : α → γ\ns : Set α\na : α\nb : γ\nhf : MonotoneOn f s\na✝² : IsGLB s a\na✝¹ : s.Nonempty\na✝ : Filter.Tendsto f (nhdsWithin a s) (nhds b)\n⊢ IsGLB (Set.image f s) b","decl":"theorem IsGLB.isGLB_of_tendsto [Preorder γ] [TopologicalSpace γ] [OrderClosedTopology γ] {f : α → γ}\n    {s : Set α} {a : α} {b : γ} (hf : MonotoneOn f s) :\n    IsGLB s a → s.Nonempty → Tendsto f (𝓝[s] a) (𝓝 b) → IsGLB (f '' s) b :=\n  IsLUB.isLUB_of_tendsto (α := αᵒᵈ) (γ := γᵒᵈ) hf.dual\n\n"}
{"name":"IsLUB.mem_lowerBounds_of_tendsto","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\nγ : Type u_2\ninst✝⁵ : TopologicalSpace α\ninst✝⁴ : LinearOrder α\ninst✝³ : OrderTopology α\ninst✝² : Preorder γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderClosedTopology γ\nf : α → γ\ns : Set α\na : α\nb : γ\nhf : AntitoneOn f s\nha : IsLUB s a\nhb : Filter.Tendsto f (nhdsWithin a s) (nhds b)\n⊢ Membership.mem (lowerBounds (Set.image f s)) b","decl":"theorem IsLUB.mem_lowerBounds_of_tendsto [Preorder γ] [TopologicalSpace γ] [OrderClosedTopology γ]\n    {f : α → γ} {s : Set α} {a : α} {b : γ} (hf : AntitoneOn f s) (ha : IsLUB s a)\n    (hb : Tendsto f (𝓝[s] a) (𝓝 b)) : b ∈ lowerBounds (f '' s) :=\n  IsLUB.mem_upperBounds_of_tendsto (γ := γᵒᵈ) hf ha hb\n\n"}
{"name":"IsLUB.isGLB_of_tendsto","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\nγ : Type u_2\ninst✝⁵ : TopologicalSpace α\ninst✝⁴ : LinearOrder α\ninst✝³ : OrderTopology α\ninst✝² : Preorder γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderClosedTopology γ\nf : α → γ\ns : Set α\na : α\nb : γ\nhf : AntitoneOn f s\nha : IsLUB s a\nhs : s.Nonempty\nhb : Filter.Tendsto f (nhdsWithin a s) (nhds b)\n⊢ IsGLB (Set.image f s) b","decl":"theorem IsLUB.isGLB_of_tendsto [Preorder γ] [TopologicalSpace γ] [OrderClosedTopology γ] {f : α → γ}\n    {s : Set α} {a : α} {b : γ} (hf : AntitoneOn f s) (ha : IsLUB s a) (hs : s.Nonempty)\n    (hb : Tendsto f (𝓝[s] a) (𝓝 b)) : IsGLB (f '' s) b :=\n  IsLUB.isLUB_of_tendsto (γ := γᵒᵈ) hf ha hs hb\n\n"}
{"name":"IsGLB.mem_upperBounds_of_tendsto","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\nγ : Type u_2\ninst✝⁵ : TopologicalSpace α\ninst✝⁴ : LinearOrder α\ninst✝³ : OrderTopology α\ninst✝² : Preorder γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderClosedTopology γ\nf : α → γ\ns : Set α\na : α\nb : γ\nhf : AntitoneOn f s\nha : IsGLB s a\nhb : Filter.Tendsto f (nhdsWithin a s) (nhds b)\n⊢ Membership.mem (upperBounds (Set.image f s)) b","decl":"theorem IsGLB.mem_upperBounds_of_tendsto [Preorder γ] [TopologicalSpace γ] [OrderClosedTopology γ]\n    {f : α → γ} {s : Set α} {a : α} {b : γ} (hf : AntitoneOn f s) (ha : IsGLB s a)\n    (hb : Tendsto f (𝓝[s] a) (𝓝 b)) : b ∈ upperBounds (f '' s) :=\n  IsGLB.mem_lowerBounds_of_tendsto (γ := γᵒᵈ) hf ha hb\n\n"}
{"name":"IsGLB.isLUB_of_tendsto","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\nγ : Type u_2\ninst✝⁵ : TopologicalSpace α\ninst✝⁴ : LinearOrder α\ninst✝³ : OrderTopology α\ninst✝² : Preorder γ\ninst✝¹ : TopologicalSpace γ\ninst✝ : OrderClosedTopology γ\nf : α → γ\ns : Set α\na : α\nb : γ\nhf : AntitoneOn f s\nha : IsGLB s a\nhs : s.Nonempty\nhb : Filter.Tendsto f (nhdsWithin a s) (nhds b)\n⊢ IsLUB (Set.image f s) b","decl":"theorem IsGLB.isLUB_of_tendsto [Preorder γ] [TopologicalSpace γ] [OrderClosedTopology γ] {f : α → γ}\n    {s : Set α} {a : α} {b : γ} (hf : AntitoneOn f s) (ha : IsGLB s a) (hs : s.Nonempty)\n    (hb : Tendsto f (𝓝[s] a) (𝓝 b)) : IsLUB (f '' s) b :=\n  IsGLB.isGLB_of_tendsto (γ := γᵒᵈ) hf ha hs hb\n\n"}
{"name":"IsLUB.mem_of_isClosed","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\ninst✝¹ : LinearOrder α\ninst✝ : OrderTopology α\na : α\ns : Set α\nha : IsLUB s a\nhs : s.Nonempty\nsc : IsClosed s\n⊢ Membership.mem s a","decl":"theorem IsLUB.mem_of_isClosed {a : α} {s : Set α} (ha : IsLUB s a) (hs : s.Nonempty)\n    (sc : IsClosed s) : a ∈ s :=\n  sc.closure_subset <| ha.mem_closure hs\n\n"}
{"name":"IsClosed.isLUB_mem","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\ninst✝¹ : LinearOrder α\ninst✝ : OrderTopology α\na : α\ns : Set α\nha : IsLUB s a\nhs : s.Nonempty\nsc : IsClosed s\n⊢ Membership.mem s a","decl":"alias IsClosed.isLUB_mem := IsLUB.mem_of_isClosed\n\n"}
{"name":"IsGLB.mem_of_isClosed","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\ninst✝¹ : LinearOrder α\ninst✝ : OrderTopology α\na : α\ns : Set α\nha : IsGLB s a\nhs : s.Nonempty\nsc : IsClosed s\n⊢ Membership.mem s a","decl":"theorem IsGLB.mem_of_isClosed {a : α} {s : Set α} (ha : IsGLB s a) (hs : s.Nonempty)\n    (sc : IsClosed s) : a ∈ s :=\n  sc.closure_subset <| ha.mem_closure hs\n\n"}
{"name":"IsClosed.isGLB_mem","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\ninst✝² : TopologicalSpace α\ninst✝¹ : LinearOrder α\ninst✝ : OrderTopology α\na : α\ns : Set α\nha : IsGLB s a\nhs : s.Nonempty\nsc : IsClosed s\n⊢ Membership.mem s a","decl":"alias IsClosed.isGLB_mem := IsGLB.mem_of_isClosed\n\n"}
{"name":"IsLUB.exists_seq_strictMono_tendsto_of_not_mem","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\ninst✝² : LinearOrder α\ninst✝¹ : OrderTopology α\nt : Set α\nx : α\ninst✝ : (nhds x).IsCountablyGenerated\nhtx : IsLUB t x\nnot_mem : Not (Membership.mem t x)\nht : t.Nonempty\n⊢ Exists fun u => And (StrictMono u) (And (∀ (n : Nat), LT.lt (u n) x) (And (Filter.Tendsto u Filter.atTop (nhds x)) (∀ (n : Nat), Membership.mem t (u n))))","decl":"theorem IsLUB.exists_seq_strictMono_tendsto_of_not_mem {t : Set α} {x : α}\n    [IsCountablyGenerated (𝓝 x)] (htx : IsLUB t x) (not_mem : x ∉ t) (ht : t.Nonempty) :\n    ∃ u : ℕ → α, StrictMono u ∧ (∀ n, u n < x) ∧ Tendsto u atTop (𝓝 x) ∧ ∀ n, u n ∈ t := by\n  obtain ⟨v, hvx, hvt⟩ := exists_seq_forall_of_frequently (htx.frequently_mem ht)\n  replace hvx := hvx.mono_right nhdsWithin_le_nhds\n  have hvx' : ∀ {n}, v n < x := (htx.1 (hvt _)).lt_of_ne (ne_of_mem_of_not_mem (hvt _) not_mem)\n  have : ∀ k, ∀ᶠ l in atTop, v k < v l := fun k => hvx.eventually (lt_mem_nhds hvx')\n  choose N hN hvN using fun k => ((eventually_gt_atTop k).and (this k)).exists\n  refine ⟨fun k => v (N^[k] 0), strictMono_nat_of_lt_succ fun _ => ?_, fun _ => hvx',\n    hvx.comp (strictMono_nat_of_lt_succ fun _ => ?_).tendsto_atTop, fun _ => hvt _⟩\n  · rw [iterate_succ_apply']; exact hvN _\n  · rw [iterate_succ_apply']; exact hN _\n\n"}
{"name":"IsLUB.exists_seq_monotone_tendsto","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\ninst✝² : LinearOrder α\ninst✝¹ : OrderTopology α\nt : Set α\nx : α\ninst✝ : (nhds x).IsCountablyGenerated\nhtx : IsLUB t x\nht : t.Nonempty\n⊢ Exists fun u => And (Monotone u) (And (∀ (n : Nat), LE.le (u n) x) (And (Filter.Tendsto u Filter.atTop (nhds x)) (∀ (n : Nat), Membership.mem t (u n))))","decl":"theorem IsLUB.exists_seq_monotone_tendsto {t : Set α} {x : α} [IsCountablyGenerated (𝓝 x)]\n    (htx : IsLUB t x) (ht : t.Nonempty) :\n    ∃ u : ℕ → α, Monotone u ∧ (∀ n, u n ≤ x) ∧ Tendsto u atTop (𝓝 x) ∧ ∀ n, u n ∈ t := by\n  by_cases h : x ∈ t\n  · exact ⟨fun _ => x, monotone_const, fun n => le_rfl, tendsto_const_nhds, fun _ => h⟩\n  · rcases htx.exists_seq_strictMono_tendsto_of_not_mem h ht with ⟨u, hu⟩\n    exact ⟨u, hu.1.monotone, fun n => (hu.2.1 n).le, hu.2.2⟩\n\n"}
{"name":"exists_seq_strictMono_tendsto'","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_3\ninst✝⁴ : LinearOrder α\ninst✝³ : TopologicalSpace α\ninst✝² : DenselyOrdered α\ninst✝¹ : OrderTopology α\ninst✝ : FirstCountableTopology α\nx y : α\nhy : LT.lt y x\n⊢ Exists fun u => And (StrictMono u) (And (∀ (n : Nat), Membership.mem (Set.Ioo y x) (u n)) (Filter.Tendsto u Filter.atTop (nhds x)))","decl":"theorem exists_seq_strictMono_tendsto' {α : Type*} [LinearOrder α] [TopologicalSpace α]\n    [DenselyOrdered α] [OrderTopology α] [FirstCountableTopology α] {x y : α} (hy : y < x) :\n    ∃ u : ℕ → α, StrictMono u ∧ (∀ n, u n ∈ Ioo y x) ∧ Tendsto u atTop (𝓝 x) := by\n  have hx : x ∉ Ioo y x := fun h => (lt_irrefl x h.2).elim\n  have ht : Set.Nonempty (Ioo y x) := nonempty_Ioo.2 hy\n  rcases (isLUB_Ioo hy).exists_seq_strictMono_tendsto_of_not_mem hx ht with ⟨u, hu⟩\n  exact ⟨u, hu.1, hu.2.2.symm⟩\n\n"}
{"name":"exists_seq_strictMono_tendsto","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\ninst✝⁵ : TopologicalSpace α\ninst✝⁴ : LinearOrder α\ninst✝³ : OrderTopology α\ninst✝² : DenselyOrdered α\ninst✝¹ : NoMinOrder α\ninst✝ : FirstCountableTopology α\nx : α\n⊢ Exists fun u => And (StrictMono u) (And (∀ (n : Nat), LT.lt (u n) x) (Filter.Tendsto u Filter.atTop (nhds x)))","decl":"theorem exists_seq_strictMono_tendsto [DenselyOrdered α] [NoMinOrder α] [FirstCountableTopology α]\n    (x : α) : ∃ u : ℕ → α, StrictMono u ∧ (∀ n, u n < x) ∧ Tendsto u atTop (𝓝 x) := by\n  obtain ⟨y, hy⟩ : ∃ y, y < x := exists_lt x\n  rcases exists_seq_strictMono_tendsto' hy with ⟨u, hu_mono, hu_mem, hux⟩\n  exact ⟨u, hu_mono, fun n => (hu_mem n).2, hux⟩\n\n"}
{"name":"exists_seq_strictMono_tendsto_nhdsWithin","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\ninst✝⁵ : TopologicalSpace α\ninst✝⁴ : LinearOrder α\ninst✝³ : OrderTopology α\ninst✝² : DenselyOrdered α\ninst✝¹ : NoMinOrder α\ninst✝ : FirstCountableTopology α\nx : α\n⊢ Exists fun u => And (StrictMono u) (And (∀ (n : Nat), LT.lt (u n) x) (Filter.Tendsto u Filter.atTop (nhdsWithin x (Set.Iio x))))","decl":"theorem exists_seq_strictMono_tendsto_nhdsWithin [DenselyOrdered α] [NoMinOrder α]\n    [FirstCountableTopology α] (x : α) :\n    ∃ u : ℕ → α, StrictMono u ∧ (∀ n, u n < x) ∧ Tendsto u atTop (𝓝[<] x) :=\n  let ⟨u, hu, hx, h⟩ := exists_seq_strictMono_tendsto x\n  ⟨u, hu, hx, tendsto_nhdsWithin_mono_right (range_subset_iff.2 hx) <| tendsto_nhdsWithin_range.2 h⟩\n\n"}
{"name":"exists_seq_tendsto_sSup","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_3\ninst✝³ : ConditionallyCompleteLinearOrder α\ninst✝² : TopologicalSpace α\ninst✝¹ : OrderTopology α\ninst✝ : FirstCountableTopology α\nS : Set α\nhS : S.Nonempty\nhS' : BddAbove S\n⊢ Exists fun u => And (Monotone u) (And (Filter.Tendsto u Filter.atTop (nhds (SupSet.sSup S))) (∀ (n : Nat), Membership.mem S (u n)))","decl":"theorem exists_seq_tendsto_sSup {α : Type*} [ConditionallyCompleteLinearOrder α]\n    [TopologicalSpace α] [OrderTopology α] [FirstCountableTopology α] {S : Set α} (hS : S.Nonempty)\n    (hS' : BddAbove S) : ∃ u : ℕ → α, Monotone u ∧ Tendsto u atTop (𝓝 (sSup S)) ∧ ∀ n, u n ∈ S := by\n  rcases (isLUB_csSup hS hS').exists_seq_monotone_tendsto hS with ⟨u, hu⟩\n  exact ⟨u, hu.1, hu.2.2⟩\n\n"}
{"name":"IsGLB.exists_seq_strictAnti_tendsto_of_not_mem","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\ninst✝² : LinearOrder α\ninst✝¹ : OrderTopology α\nt : Set α\nx : α\ninst✝ : (nhds x).IsCountablyGenerated\nhtx : IsGLB t x\nnot_mem : Not (Membership.mem t x)\nht : t.Nonempty\n⊢ Exists fun u => And (StrictAnti u) (And (∀ (n : Nat), LT.lt x (u n)) (And (Filter.Tendsto u Filter.atTop (nhds x)) (∀ (n : Nat), Membership.mem t (u n))))","decl":"theorem IsGLB.exists_seq_strictAnti_tendsto_of_not_mem {t : Set α} {x : α}\n    [IsCountablyGenerated (𝓝 x)] (htx : IsGLB t x) (not_mem : x ∉ t) (ht : t.Nonempty) :\n    ∃ u : ℕ → α, StrictAnti u ∧ (∀ n, x < u n) ∧ Tendsto u atTop (𝓝 x) ∧ ∀ n, u n ∈ t :=\n  IsLUB.exists_seq_strictMono_tendsto_of_not_mem (α := αᵒᵈ) htx not_mem ht\n\n"}
{"name":"IsGLB.exists_seq_antitone_tendsto","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\ninst✝³ : TopologicalSpace α\ninst✝² : LinearOrder α\ninst✝¹ : OrderTopology α\nt : Set α\nx : α\ninst✝ : (nhds x).IsCountablyGenerated\nhtx : IsGLB t x\nht : t.Nonempty\n⊢ Exists fun u => And (Antitone u) (And (∀ (n : Nat), LE.le x (u n)) (And (Filter.Tendsto u Filter.atTop (nhds x)) (∀ (n : Nat), Membership.mem t (u n))))","decl":"theorem IsGLB.exists_seq_antitone_tendsto {t : Set α} {x : α} [IsCountablyGenerated (𝓝 x)]\n    (htx : IsGLB t x) (ht : t.Nonempty) :\n    ∃ u : ℕ → α, Antitone u ∧ (∀ n, x ≤ u n) ∧ Tendsto u atTop (𝓝 x) ∧ ∀ n, u n ∈ t :=\n  IsLUB.exists_seq_monotone_tendsto (α := αᵒᵈ) htx ht\n\n"}
{"name":"exists_seq_strictAnti_tendsto'","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\ninst✝⁴ : TopologicalSpace α\ninst✝³ : LinearOrder α\ninst✝² : OrderTopology α\ninst✝¹ : DenselyOrdered α\ninst✝ : FirstCountableTopology α\nx y : α\nhy : LT.lt x y\n⊢ Exists fun u => And (StrictAnti u) (And (∀ (n : Nat), Membership.mem (Set.Ioo x y) (u n)) (Filter.Tendsto u Filter.atTop (nhds x)))","decl":"theorem exists_seq_strictAnti_tendsto' [DenselyOrdered α] [FirstCountableTopology α] {x y : α}\n    (hy : x < y) : ∃ u : ℕ → α, StrictAnti u ∧ (∀ n, u n ∈ Ioo x y) ∧ Tendsto u atTop (𝓝 x) := by\n  simpa only [dual_Ioo]\n    using exists_seq_strictMono_tendsto' (α := αᵒᵈ) (OrderDual.toDual_lt_toDual.2 hy)\n\n"}
{"name":"exists_seq_strictAnti_tendsto","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\ninst✝⁵ : TopologicalSpace α\ninst✝⁴ : LinearOrder α\ninst✝³ : OrderTopology α\ninst✝² : DenselyOrdered α\ninst✝¹ : NoMaxOrder α\ninst✝ : FirstCountableTopology α\nx : α\n⊢ Exists fun u => And (StrictAnti u) (And (∀ (n : Nat), LT.lt x (u n)) (Filter.Tendsto u Filter.atTop (nhds x)))","decl":"theorem exists_seq_strictAnti_tendsto [DenselyOrdered α] [NoMaxOrder α] [FirstCountableTopology α]\n    (x : α) : ∃ u : ℕ → α, StrictAnti u ∧ (∀ n, x < u n) ∧ Tendsto u atTop (𝓝 x) :=\n  exists_seq_strictMono_tendsto (α := αᵒᵈ) x\n\n"}
{"name":"exists_seq_strictAnti_tendsto_nhdsWithin","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\ninst✝⁵ : TopologicalSpace α\ninst✝⁴ : LinearOrder α\ninst✝³ : OrderTopology α\ninst✝² : DenselyOrdered α\ninst✝¹ : NoMaxOrder α\ninst✝ : FirstCountableTopology α\nx : α\n⊢ Exists fun u => And (StrictAnti u) (And (∀ (n : Nat), LT.lt x (u n)) (Filter.Tendsto u Filter.atTop (nhdsWithin x (Set.Ioi x))))","decl":"theorem exists_seq_strictAnti_tendsto_nhdsWithin [DenselyOrdered α] [NoMaxOrder α]\n    [FirstCountableTopology α] (x : α) :\n    ∃ u : ℕ → α, StrictAnti u ∧ (∀ n, x < u n) ∧ Tendsto u atTop (𝓝[>] x) :=\n  exists_seq_strictMono_tendsto_nhdsWithin (α := αᵒᵈ) _\n\n"}
{"name":"exists_seq_strictAnti_strictMono_tendsto","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_1\ninst✝⁴ : TopologicalSpace α\ninst✝³ : LinearOrder α\ninst✝² : OrderTopology α\ninst✝¹ : DenselyOrdered α\ninst✝ : FirstCountableTopology α\nx y : α\nh : LT.lt x y\n⊢ Exists fun u => Exists fun v => And (StrictAnti u) (And (StrictMono v) (And (∀ (k : Nat), Membership.mem (Set.Ioo x y) (u k)) (And (∀ (l : Nat), Membership.mem (Set.Ioo x y) (v l)) (And (∀ (k l : Nat), LT.lt (u k) (v l)) (And (Filter.Tendsto u Filter.atTop (nhds x)) (Filter.Tendsto v Filter.atTop (nhds y)))))))","decl":"theorem exists_seq_strictAnti_strictMono_tendsto [DenselyOrdered α] [FirstCountableTopology α]\n    {x y : α} (h : x < y) :\n    ∃ u v : ℕ → α, StrictAnti u ∧ StrictMono v ∧ (∀ k, u k ∈ Ioo x y) ∧ (∀ l, v l ∈ Ioo x y) ∧\n      (∀ k l, u k < v l) ∧ Tendsto u atTop (𝓝 x) ∧ Tendsto v atTop (𝓝 y) := by\n  rcases exists_seq_strictAnti_tendsto' h with ⟨u, hu_anti, hu_mem, hux⟩\n  rcases exists_seq_strictMono_tendsto' (hu_mem 0).2 with ⟨v, hv_mono, hv_mem, hvy⟩\n  exact\n    ⟨u, v, hu_anti, hv_mono, hu_mem, fun l => ⟨(hu_mem 0).1.trans (hv_mem l).1, (hv_mem l).2⟩,\n      fun k l => (hu_anti.antitone (zero_le k)).trans_lt (hv_mem l).1, hux, hvy⟩\n\n"}
{"name":"exists_seq_tendsto_sInf","module":"Mathlib.Topology.Order.IsLUB","initialProofState":"α : Type u_3\ninst✝³ : ConditionallyCompleteLinearOrder α\ninst✝² : TopologicalSpace α\ninst✝¹ : OrderTopology α\ninst✝ : FirstCountableTopology α\nS : Set α\nhS : S.Nonempty\nhS' : BddBelow S\n⊢ Exists fun u => And (Antitone u) (And (Filter.Tendsto u Filter.atTop (nhds (InfSet.sInf S))) (∀ (n : Nat), Membership.mem S (u n)))","decl":"theorem exists_seq_tendsto_sInf {α : Type*} [ConditionallyCompleteLinearOrder α]\n    [TopologicalSpace α] [OrderTopology α] [FirstCountableTopology α] {S : Set α} (hS : S.Nonempty)\n    (hS' : BddBelow S) : ∃ u : ℕ → α, Antitone u ∧ Tendsto u atTop (𝓝 (sInf S)) ∧ ∀ n, u n ∈ S :=\n  exists_seq_tendsto_sSup (α := αᵒᵈ) hS hS'\n\n"}
