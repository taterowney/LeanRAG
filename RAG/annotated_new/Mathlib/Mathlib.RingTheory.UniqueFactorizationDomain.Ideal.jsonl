{"name":"Ideal.IsPrime.exists_mem_prime_of_ne_bot","module":"Mathlib.RingTheory.UniqueFactorizationDomain.Ideal","initialProofState":"R : Type u_2\ninst✝² : CommSemiring R\ninst✝¹ : IsDomain R\ninst✝ : UniqueFactorizationMonoid R\nI : Ideal R\nhI₂ : I.IsPrime\nhI : Ne I Bot.bot\n⊢ Exists fun x => And (Membership.mem I x) (Prime x)","decl":"open UniqueFactorizationMonoid in\n/-- Every non-zero prime ideal in a unique factorization domain contains a prime element. -/\ntheorem Ideal.IsPrime.exists_mem_prime_of_ne_bot {R : Type*} [CommSemiring R] [IsDomain R]\n    [UniqueFactorizationMonoid R] {I : Ideal R} (hI₂ : I.IsPrime) (hI : I ≠ ⊥) :\n    ∃ x ∈ I, Prime x := by\n  classical\n  obtain ⟨a : R, ha₁ : a ∈ I, ha₂ : a ≠ 0⟩ := Submodule.exists_mem_ne_zero_of_ne_bot hI\n  replace ha₁ : (factors a).prod ∈ I := by\n    obtain ⟨u : Rˣ, hu : (factors a).prod * u = a⟩ := factors_prod ha₂\n    rwa [← hu, mul_unit_mem_iff_mem _ u.isUnit] at ha₁\n  obtain ⟨p : R, hp₁ : p ∈ factors a, hp₂ : p ∈ I⟩ :=\n    (hI₂.multiset_prod_mem_iff_exists_mem <| factors a).1 ha₁\n  exact ⟨p, hp₂, prime_of_factor p hp₁⟩\n\n"}
{"name":"Ideal.setOf_isPrincipal_wellFoundedOn_gt","module":"Mathlib.RingTheory.UniqueFactorizationDomain.Ideal","initialProofState":"α : Type u_1\ninst✝² : CommSemiring α\ninst✝¹ : WfDvdMonoid α\ninst✝ : IsDomain α\n⊢ (setOf fun I => Submodule.IsPrincipal I).WellFoundedOn fun x1 x2 => GT.gt x1 x2","decl":"/-- The ascending chain condition on principal ideals holds in a `WfDvdMonoid` domain. -/\nlemma Ideal.setOf_isPrincipal_wellFoundedOn_gt [CommSemiring α] [WfDvdMonoid α] [IsDomain α] :\n    {I : Ideal α | I.IsPrincipal}.WellFoundedOn (· > ·) := by\n  have : {I : Ideal α | I.IsPrincipal} = ((fun a ↦ Ideal.span {a}) '' Set.univ) := by\n    ext\n    simp [Submodule.isPrincipal_iff, eq_comm]\n  rw [this, Set.wellFoundedOn_image, Set.wellFoundedOn_univ]\n  convert wellFounded_dvdNotUnit (α := α)\n  ext\n  exact Ideal.span_singleton_lt_span_singleton\n\n"}
{"name":"WfDvdMonoid.of_setOf_isPrincipal_wellFoundedOn_gt","module":"Mathlib.RingTheory.UniqueFactorizationDomain.Ideal","initialProofState":"α : Type u_1\ninst✝¹ : CommSemiring α\ninst✝ : IsDomain α\nh : (setOf fun I => Submodule.IsPrincipal I).WellFoundedOn fun x1 x2 => GT.gt x1 x2\n⊢ WfDvdMonoid α","decl":"/-- The ascending chain condition on principal ideals in a domain is sufficient to prove that\nthe domain is `WfDvdMonoid`. -/\nlemma WfDvdMonoid.of_setOf_isPrincipal_wellFoundedOn_gt [CommSemiring α] [IsDomain α]\n    (h : {I : Ideal α | I.IsPrincipal}.WellFoundedOn (· > ·)) :\n    WfDvdMonoid α := by\n  have : WellFounded (α := {I : Ideal α // I.IsPrincipal}) (· > ·) := h\n  constructor\n  convert InvImage.wf (fun a => ⟨Ideal.span ({a} : Set α), _, rfl⟩) this\n  ext\n  exact Ideal.span_singleton_lt_span_singleton.symm\n\n"}
