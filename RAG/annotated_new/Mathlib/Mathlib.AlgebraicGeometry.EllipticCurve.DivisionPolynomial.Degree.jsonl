{"name":"WeierstrassCurve.natDegree_Ψ₂Sq_le","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\n⊢ LE.le W.Ψ₂Sq.natDegree 3","decl":"lemma natDegree_Ψ₂Sq_le : W.Ψ₂Sq.natDegree ≤ 3 := by\n  rw [Ψ₂Sq]\n  compute_degree\n\n"}
{"name":"WeierstrassCurve.coeff_Ψ₂Sq","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\n⊢ Eq (W.Ψ₂Sq.coeff 3) 4","decl":"@[simp]\nlemma coeff_Ψ₂Sq : W.Ψ₂Sq.coeff 3 = 4 := by\n  rw [Ψ₂Sq]\n  compute_degree!\n\n"}
{"name":"WeierstrassCurve.coeff_Ψ₂Sq_ne_zero","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nh : Ne 4 0\n⊢ Ne (W.Ψ₂Sq.coeff 3) 0","decl":"lemma coeff_Ψ₂Sq_ne_zero (h : (4 : R) ≠ 0) : W.Ψ₂Sq.coeff 3 ≠ 0 := by\n  rwa [coeff_Ψ₂Sq]\n\n"}
{"name":"WeierstrassCurve.natDegree_Ψ₂Sq","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nh : Ne 4 0\n⊢ Eq W.Ψ₂Sq.natDegree 3","decl":"@[simp]\nlemma natDegree_Ψ₂Sq (h : (4 : R) ≠ 0) : W.Ψ₂Sq.natDegree = 3 :=\n  natDegree_eq_of_le_of_coeff_ne_zero W.natDegree_Ψ₂Sq_le <| W.coeff_Ψ₂Sq_ne_zero h\n\n"}
{"name":"WeierstrassCurve.natDegree_Ψ₂Sq_pos","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nh : Ne 4 0\n⊢ LT.lt 0 W.Ψ₂Sq.natDegree","decl":"lemma natDegree_Ψ₂Sq_pos (h : (4 : R) ≠ 0) : 0 < W.Ψ₂Sq.natDegree :=\n  W.natDegree_Ψ₂Sq h ▸ three_pos\n\n"}
{"name":"WeierstrassCurve.leadingCoeff_Ψ₂Sq","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nh : Ne 4 0\n⊢ Eq W.Ψ₂Sq.leadingCoeff 4","decl":"@[simp]\nlemma leadingCoeff_Ψ₂Sq (h : (4 : R) ≠ 0) : W.Ψ₂Sq.leadingCoeff = 4 := by\n  rw [leadingCoeff, W.natDegree_Ψ₂Sq h, coeff_Ψ₂Sq]\n\n"}
{"name":"WeierstrassCurve.Ψ₂Sq_ne_zero","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nh : Ne 4 0\n⊢ Ne W.Ψ₂Sq 0","decl":"lemma Ψ₂Sq_ne_zero (h : (4 : R) ≠ 0) : W.Ψ₂Sq ≠ 0 :=\n  ne_zero_of_natDegree_gt <| W.natDegree_Ψ₂Sq_pos h\n\n"}
{"name":"WeierstrassCurve.natDegree_Ψ₃_le","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\n⊢ LE.le W.Ψ₃.natDegree 4","decl":"lemma natDegree_Ψ₃_le : W.Ψ₃.natDegree ≤ 4 := by\n  rw [Ψ₃]\n  compute_degree\n\n"}
{"name":"WeierstrassCurve.coeff_Ψ₃","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\n⊢ Eq (W.Ψ₃.coeff 4) 3","decl":"@[simp]\nlemma coeff_Ψ₃ : W.Ψ₃.coeff 4 = 3 := by\n  rw [Ψ₃]\n  compute_degree!\n\n"}
{"name":"WeierstrassCurve.coeff_Ψ₃_ne_zero","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nh : Ne 3 0\n⊢ Ne (W.Ψ₃.coeff 4) 0","decl":"lemma coeff_Ψ₃_ne_zero (h : (3 : R) ≠ 0) : W.Ψ₃.coeff 4 ≠ 0 := by\n  rwa [coeff_Ψ₃]\n\n"}
{"name":"WeierstrassCurve.natDegree_Ψ₃","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nh : Ne 3 0\n⊢ Eq W.Ψ₃.natDegree 4","decl":"@[simp]\nlemma natDegree_Ψ₃ (h : (3 : R) ≠ 0) : W.Ψ₃.natDegree = 4 :=\n  natDegree_eq_of_le_of_coeff_ne_zero W.natDegree_Ψ₃_le <| W.coeff_Ψ₃_ne_zero h\n\n"}
{"name":"WeierstrassCurve.natDegree_Ψ₃_pos","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nh : Ne 3 0\n⊢ LT.lt 0 W.Ψ₃.natDegree","decl":"lemma natDegree_Ψ₃_pos (h : (3 : R) ≠ 0) : 0 < W.Ψ₃.natDegree :=\n  W.natDegree_Ψ₃ h ▸ four_pos\n\n"}
{"name":"WeierstrassCurve.leadingCoeff_Ψ₃","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nh : Ne 3 0\n⊢ Eq W.Ψ₃.leadingCoeff 3","decl":"@[simp]\nlemma leadingCoeff_Ψ₃ (h : (3 : R) ≠ 0) : W.Ψ₃.leadingCoeff = 3 := by\n  rw [leadingCoeff, W.natDegree_Ψ₃ h, coeff_Ψ₃]\n\n"}
{"name":"WeierstrassCurve.Ψ₃_ne_zero","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nh : Ne 3 0\n⊢ Ne W.Ψ₃ 0","decl":"lemma Ψ₃_ne_zero (h : (3 : R) ≠ 0) : W.Ψ₃ ≠ 0 :=\n  ne_zero_of_natDegree_gt <| W.natDegree_Ψ₃_pos h\n\n"}
{"name":"WeierstrassCurve.natDegree_preΨ₄_le","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\n⊢ LE.le W.preΨ₄.natDegree 6","decl":"lemma natDegree_preΨ₄_le : W.preΨ₄.natDegree ≤ 6 := by\n  rw [preΨ₄]\n  compute_degree\n\n"}
{"name":"WeierstrassCurve.coeff_preΨ₄","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\n⊢ Eq (W.preΨ₄.coeff 6) 2","decl":"@[simp]\nlemma coeff_preΨ₄ : W.preΨ₄.coeff 6 = 2 := by\n  rw [preΨ₄]\n  compute_degree!\n\n"}
{"name":"WeierstrassCurve.coeff_preΨ₄_ne_zero","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nh : Ne 2 0\n⊢ Ne (W.preΨ₄.coeff 6) 0","decl":"lemma coeff_preΨ₄_ne_zero (h : (2 : R) ≠ 0) : W.preΨ₄.coeff 6 ≠ 0 := by\n  rwa [coeff_preΨ₄]\n\n"}
{"name":"WeierstrassCurve.natDegree_preΨ₄","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nh : Ne 2 0\n⊢ Eq W.preΨ₄.natDegree 6","decl":"@[simp]\nlemma natDegree_preΨ₄ (h : (2 : R) ≠ 0) : W.preΨ₄.natDegree = 6 :=\n  natDegree_eq_of_le_of_coeff_ne_zero W.natDegree_preΨ₄_le <| W.coeff_preΨ₄_ne_zero h\n\n"}
{"name":"WeierstrassCurve.natDegree_preΨ₄_pos","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nh : Ne 2 0\n⊢ LT.lt 0 W.preΨ₄.natDegree","decl":"lemma natDegree_preΨ₄_pos (h : (2 : R) ≠ 0) : 0 < W.preΨ₄.natDegree := by\n  linarith only [W.natDegree_preΨ₄ h]\n\n"}
{"name":"WeierstrassCurve.leadingCoeff_preΨ₄","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nh : Ne 2 0\n⊢ Eq W.preΨ₄.leadingCoeff 2","decl":"@[simp]\nlemma leadingCoeff_preΨ₄ (h : (2 : R) ≠ 0) : W.preΨ₄.leadingCoeff = 2 := by\n  rw [leadingCoeff, W.natDegree_preΨ₄ h, coeff_preΨ₄]\n\n"}
{"name":"WeierstrassCurve.preΨ₄_ne_zero","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nh : Ne 2 0\n⊢ Ne W.preΨ₄ 0","decl":"lemma preΨ₄_ne_zero (h : (2 : R) ≠ 0) : W.preΨ₄ ≠ 0 :=\n  ne_zero_of_natDegree_gt <| W.natDegree_preΨ₄_pos h\n\n"}
{"name":"WeierstrassCurve.natDegree_preΨ'_le","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nn : Nat\n⊢ LE.le (W.preΨ' n).natDegree (HDiv.hDiv (HSub.hSub (HPow.hPow n 2) (ite (Even n) 4 1)) 2)","decl":"lemma natDegree_preΨ'_le (n : ℕ) : (W.preΨ' n).natDegree ≤ (n ^ 2 - if Even n then 4 else 1) / 2 :=\n  (W.natDegree_coeff_preΨ' n).left\n\n"}
{"name":"WeierstrassCurve.coeff_preΨ'","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nn : Nat\n⊢ Eq ((W.preΨ' n).coeff (HDiv.hDiv (HSub.hSub (HPow.hPow n 2) (ite (Even n) 4 1)) 2)) ↑(ite (Even n) (HDiv.hDiv n 2) n)","decl":"@[simp]\nlemma coeff_preΨ' (n : ℕ) : (W.preΨ' n).coeff ((n ^ 2 - if Even n then 4 else 1) / 2) =\n    if Even n then n / 2 else n := by\n  convert (W.natDegree_coeff_preΨ' n).right using 1\n  rcases n.even_or_odd' with ⟨n, rfl | rfl⟩ <;> simp [expCoeff, n.not_even_two_mul_add_one]\n\n"}
{"name":"WeierstrassCurve.coeff_preΨ'_ne_zero","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nn : Nat\nh : Ne (↑n) 0\n⊢ Ne ((W.preΨ' n).coeff (HDiv.hDiv (HSub.hSub (HPow.hPow n 2) (ite (Even n) 4 1)) 2)) 0","decl":"lemma coeff_preΨ'_ne_zero {n : ℕ} (h : (n : R) ≠ 0) :\n    (W.preΨ' n).coeff ((n ^ 2 - if Even n then 4 else 1) / 2) ≠ 0 := by\n  rcases n.even_or_odd' with ⟨n, rfl | rfl⟩\n  · rw [coeff_preΨ', if_pos <| even_two_mul n, n.mul_div_cancel_left two_pos]\n    exact right_ne_zero_of_mul <| by rwa [← Nat.cast_mul]\n  · rwa [coeff_preΨ', if_neg n.not_even_two_mul_add_one]\n\n"}
{"name":"WeierstrassCurve.natDegree_preΨ'","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nn : Nat\nh : Ne (↑n) 0\n⊢ Eq (W.preΨ' n).natDegree (HDiv.hDiv (HSub.hSub (HPow.hPow n 2) (ite (Even n) 4 1)) 2)","decl":"@[simp]\nlemma natDegree_preΨ' {n : ℕ} (h : (n : R) ≠ 0) :\n    (W.preΨ' n).natDegree = (n ^ 2 - if Even n then 4 else 1) / 2 :=\n  natDegree_eq_of_le_of_coeff_ne_zero (W.natDegree_preΨ'_le n) <| W.coeff_preΨ'_ne_zero h\n\n"}
{"name":"WeierstrassCurve.natDegree_preΨ'_pos","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nn : Nat\nhn : LT.lt 2 n\nh : Ne (↑n) 0\n⊢ LT.lt 0 (W.preΨ' n).natDegree","decl":"lemma natDegree_preΨ'_pos {n : ℕ} (hn : 2 < n) (h : (n : R) ≠ 0) : 0 < (W.preΨ' n).natDegree := by\n  simp only [W.natDegree_preΨ' h, Nat.div_pos_iff, zero_lt_two, true_and]\n  split_ifs <;>\n    exact Nat.AtLeastTwo.prop.trans <| Nat.sub_le_sub_right (Nat.pow_le_pow_of_le_left hn 2) _\n\n"}
{"name":"WeierstrassCurve.leadingCoeff_preΨ'","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nn : Nat\nh : Ne (↑n) 0\n⊢ Eq (W.preΨ' n).leadingCoeff ↑(ite (Even n) (HDiv.hDiv n 2) n)","decl":"@[simp]\nlemma leadingCoeff_preΨ' {n : ℕ} (h : (n : R) ≠ 0) :\n    (W.preΨ' n).leadingCoeff = if Even n then n / 2 else n := by\n  rw [leadingCoeff, W.natDegree_preΨ' h, coeff_preΨ']\n\n"}
{"name":"WeierstrassCurve.preΨ'_ne_zero","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : Nontrivial R\nn : Nat\nh : Ne (↑n) 0\n⊢ Ne (W.preΨ' n) 0","decl":"lemma preΨ'_ne_zero [Nontrivial R] {n : ℕ} (h : (n : R) ≠ 0) : W.preΨ' n ≠ 0 := by\n  by_cases hn : 2 < n\n  · exact ne_zero_of_natDegree_gt <| W.natDegree_preΨ'_pos hn h\n  · rcases n with _ | _ | _ <;> aesop\n\n"}
{"name":"WeierstrassCurve.natDegree_preΨ_le","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nn : Int\n⊢ LE.le (W.preΨ n).natDegree (HDiv.hDiv (HSub.hSub (HPow.hPow n.natAbs 2) (ite (Even n) 4 1)) 2)","decl":"lemma natDegree_preΨ_le (n : ℤ) : (W.preΨ n).natDegree ≤\n    (n.natAbs ^ 2 - if Even n then 4 else 1) / 2 := by\n  induction n using Int.negInduction with\n  | nat n => exact_mod_cast W.preΨ_ofNat n ▸ W.natDegree_preΨ'_le n\n  | neg ih => simp only [preΨ_neg, natDegree_neg, Int.natAbs_neg, even_neg, ih]\n\n"}
{"name":"WeierstrassCurve.coeff_preΨ","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nn : Int\n⊢ Eq ((W.preΨ n).coeff (HDiv.hDiv (HSub.hSub (HPow.hPow n.natAbs 2) (ite (Even n) 4 1)) 2)) ↑(ite (Even n) (HDiv.hDiv n 2) n)","decl":"@[simp]\nlemma coeff_preΨ (n : ℤ) : (W.preΨ n).coeff ((n.natAbs ^ 2 - if Even n then 4 else 1) / 2) =\n    if Even n then n / 2 else n := by\n  induction n using Int.negInduction with\n  | nat n => exact_mod_cast W.preΨ_ofNat n ▸ W.coeff_preΨ' n\n  | neg ih n =>\n    simp only [preΨ_neg, coeff_neg, Int.natAbs_neg, even_neg]\n    rcases ih n, n.even_or_odd' with ⟨ih, ⟨n, rfl | rfl⟩⟩ <;>\n      push_cast [even_two_mul, Int.not_even_two_mul_add_one, Int.neg_ediv_of_dvd ⟨n, rfl⟩] at * <;>\n      rw [ih]\n\n"}
{"name":"WeierstrassCurve.coeff_preΨ_ne_zero","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nn : Int\nh : Ne (↑n) 0\n⊢ Ne ((W.preΨ n).coeff (HDiv.hDiv (HSub.hSub (HPow.hPow n.natAbs 2) (ite (Even n) 4 1)) 2)) 0","decl":"lemma coeff_preΨ_ne_zero {n : ℤ} (h : (n : R) ≠ 0) :\n    (W.preΨ n).coeff ((n.natAbs ^ 2 - if Even n then 4 else 1) / 2) ≠ 0 := by\n  induction n using Int.negInduction with\n  | nat n => simpa only [preΨ_ofNat, Int.even_coe_nat]\n      using W.coeff_preΨ'_ne_zero <| by exact_mod_cast h\n  | neg ih n => simpa only [preΨ_neg, coeff_neg, neg_ne_zero, Int.natAbs_neg, even_neg]\n        using ih n <| neg_ne_zero.mp <| by exact_mod_cast h\n\n"}
{"name":"WeierstrassCurve.natDegree_preΨ","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nn : Int\nh : Ne (↑n) 0\n⊢ Eq (W.preΨ n).natDegree (HDiv.hDiv (HSub.hSub (HPow.hPow n.natAbs 2) (ite (Even n) 4 1)) 2)","decl":"@[simp]\nlemma natDegree_preΨ {n : ℤ} (h : (n : R) ≠ 0) :\n    (W.preΨ n).natDegree = (n.natAbs ^ 2 - if Even n then 4 else 1) / 2 :=\n  natDegree_eq_of_le_of_coeff_ne_zero (W.natDegree_preΨ_le n) <| W.coeff_preΨ_ne_zero h\n\n"}
{"name":"WeierstrassCurve.natDegree_preΨ_pos","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nn : Int\nhn : LT.lt 2 n.natAbs\nh : Ne (↑n) 0\n⊢ LT.lt 0 (W.preΨ n).natDegree","decl":"lemma natDegree_preΨ_pos {n : ℤ} (hn : 2 < n.natAbs) (h : (n : R) ≠ 0) :\n    0 < (W.preΨ n).natDegree := by\n  induction n using Int.negInduction with\n  | nat n => simpa only [preΨ_ofNat] using W.natDegree_preΨ'_pos hn <| by exact_mod_cast h\n  | neg ih n => simpa only [preΨ_neg, natDegree_neg]\n        using ih n (by rwa [← Int.natAbs_neg]) <| neg_ne_zero.mp <| by exact_mod_cast h\n\n"}
{"name":"WeierstrassCurve.leadingCoeff_preΨ","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nn : Int\nh : Ne (↑n) 0\n⊢ Eq (W.preΨ n).leadingCoeff ↑(ite (Even n) (HDiv.hDiv n 2) n)","decl":"@[simp]\nlemma leadingCoeff_preΨ {n : ℤ} (h : (n : R) ≠ 0) :\n    (W.preΨ n).leadingCoeff = if Even n then n / 2 else n := by\n  rw [leadingCoeff, W.natDegree_preΨ h, coeff_preΨ]\n\n"}
{"name":"WeierstrassCurve.preΨ_ne_zero","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : Nontrivial R\nn : Int\nh : Ne (↑n) 0\n⊢ Ne (W.preΨ n) 0","decl":"lemma preΨ_ne_zero [Nontrivial R] {n : ℤ} (h : (n : R) ≠ 0) : W.preΨ n ≠ 0 := by\n  induction n using Int.negInduction with\n  | nat n => simpa only [preΨ_ofNat] using W.preΨ'_ne_zero <| by exact_mod_cast h\n  | neg ih n => simpa only [preΨ_neg, neg_ne_zero]\n        using ih n <| neg_ne_zero.mp <| by exact_mod_cast h\n\n"}
{"name":"WeierstrassCurve.natDegree_ΨSq_le","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nn : Int\n⊢ LE.le (W.ΨSq n).natDegree (HSub.hSub (HPow.hPow n.natAbs 2) 1)","decl":"lemma natDegree_ΨSq_le (n : ℤ) : (W.ΨSq n).natDegree ≤ n.natAbs ^ 2 - 1 := by\n  induction n using Int.negInduction with\n  | nat n => exact (W.natDegree_coeff_ΨSq_ofNat n).left\n  | neg ih => simp only [ΨSq_neg, Int.natAbs_neg, ih]\n\n"}
{"name":"WeierstrassCurve.coeff_ΨSq","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nn : Int\n⊢ Eq ((W.ΨSq n).coeff (HSub.hSub (HPow.hPow n.natAbs 2) 1)) (HPow.hPow (↑n) 2)","decl":"@[simp]\nlemma coeff_ΨSq (n : ℤ) : (W.ΨSq n).coeff (n.natAbs ^ 2 - 1) = n ^ 2 := by\n  induction n using Int.negInduction with\n  | nat n => exact_mod_cast (W.natDegree_coeff_ΨSq_ofNat n).right\n  | neg ih => simp_rw [ΨSq_neg, Int.natAbs_neg, ← Int.cast_pow, neg_sq, Int.cast_pow, ih]\n\n"}
{"name":"WeierstrassCurve.coeff_ΨSq_ne_zero","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : NoZeroDivisors R\nn : Int\nh : Ne (↑n) 0\n⊢ Ne ((W.ΨSq n).coeff (HSub.hSub (HPow.hPow n.natAbs 2) 1)) 0","decl":"lemma coeff_ΨSq_ne_zero [NoZeroDivisors R] {n : ℤ} (h : (n : R) ≠ 0) :\n    (W.ΨSq n).coeff (n.natAbs ^ 2 - 1) ≠ 0 := by\n  rwa [coeff_ΨSq, pow_ne_zero_iff two_ne_zero]\n\n"}
{"name":"WeierstrassCurve.natDegree_ΨSq","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : NoZeroDivisors R\nn : Int\nh : Ne (↑n) 0\n⊢ Eq (W.ΨSq n).natDegree (HSub.hSub (HPow.hPow n.natAbs 2) 1)","decl":"@[simp]\nlemma natDegree_ΨSq [NoZeroDivisors R] {n : ℤ} (h : (n : R) ≠ 0) :\n    (W.ΨSq n).natDegree = n.natAbs ^ 2 - 1 :=\n  natDegree_eq_of_le_of_coeff_ne_zero (W.natDegree_ΨSq_le n) <| W.coeff_ΨSq_ne_zero h\n\n"}
{"name":"WeierstrassCurve.natDegree_ΨSq_pos","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : NoZeroDivisors R\nn : Int\nhn : LT.lt 1 n.natAbs\nh : Ne (↑n) 0\n⊢ LT.lt 0 (W.ΨSq n).natDegree","decl":"lemma natDegree_ΨSq_pos [NoZeroDivisors R] {n : ℤ} (hn : 1 < n.natAbs) (h : (n : R) ≠ 0) :\n    0 < (W.ΨSq n).natDegree := by\n  rwa [W.natDegree_ΨSq h, Nat.sub_pos_iff_lt, Nat.one_lt_pow_iff two_ne_zero]\n\n"}
{"name":"WeierstrassCurve.leadingCoeff_ΨSq","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : NoZeroDivisors R\nn : Int\nh : Ne (↑n) 0\n⊢ Eq (W.ΨSq n).leadingCoeff (HPow.hPow (↑n) 2)","decl":"@[simp]\nlemma leadingCoeff_ΨSq [NoZeroDivisors R] {n : ℤ} (h : (n : R) ≠ 0) :\n    (W.ΨSq n).leadingCoeff = n ^ 2 := by\n  rw [leadingCoeff, W.natDegree_ΨSq h, coeff_ΨSq]\n\n"}
{"name":"WeierstrassCurve.ΨSq_ne_zero","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : NoZeroDivisors R\nn : Int\nh : Ne (↑n) 0\n⊢ Ne (W.ΨSq n) 0","decl":"lemma ΨSq_ne_zero [NoZeroDivisors R] {n : ℤ} (h : (n : R) ≠ 0) : W.ΨSq n ≠ 0 := by\n  by_cases hn : 1 < n.natAbs\n  · exact ne_zero_of_natDegree_gt <| W.natDegree_ΨSq_pos hn h\n  · rcases hm : n.natAbs with _ | m\n    · push_cast [Int.natAbs_eq_zero.mp hm, ne_self_iff_false] at h\n    · rcases Int.natAbs_eq_iff.mp hm with rfl | rfl <;>\n        rw [hm, Nat.lt_add_left_iff_pos, Nat.not_lt_eq, Nat.le_zero] at hn <;>\n        push_cast [hn, ΨSq_neg, ΨSq_one] <;>\n        exact fun h' => h <| C_injective <| by push_cast [hn, C_neg, C_1, h', neg_zero, C_0]; rfl\n\n"}
{"name":"WeierstrassCurve.natDegree_Φ_le","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nn : Int\n⊢ LE.le (W.Φ n).natDegree (HPow.hPow n.natAbs 2)","decl":"lemma natDegree_Φ_le (n : ℤ) : (W.Φ n).natDegree ≤ n.natAbs ^ 2 := by\n  induction n using Int.negInduction with\n  | nat n => exact (W.natDegree_coeff_Φ_ofNat n).left\n  | neg ih => simp only [Φ_neg, Int.natAbs_neg, ih]\n\n"}
{"name":"WeierstrassCurve.coeff_Φ","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nn : Int\n⊢ Eq ((W.Φ n).coeff (HPow.hPow n.natAbs 2)) 1","decl":"@[simp]\nlemma coeff_Φ (n : ℤ) : (W.Φ n).coeff (n.natAbs ^ 2) = 1 := by\n  induction n using Int.negInduction with\n  | nat n => exact (W.natDegree_coeff_Φ_ofNat n).right\n  | neg ih => simp only [Φ_neg, Int.natAbs_neg, ih]\n\n"}
{"name":"WeierstrassCurve.coeff_Φ_ne_zero","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : Nontrivial R\nn : Int\n⊢ Ne ((W.Φ n).coeff (HPow.hPow n.natAbs 2)) 0","decl":"lemma coeff_Φ_ne_zero [Nontrivial R] (n : ℤ) : (W.Φ n).coeff (n.natAbs ^ 2) ≠ 0 :=\n  W.coeff_Φ n ▸ one_ne_zero\n\n"}
{"name":"WeierstrassCurve.natDegree_Φ","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : Nontrivial R\nn : Int\n⊢ Eq (W.Φ n).natDegree (HPow.hPow n.natAbs 2)","decl":"@[simp]\nlemma natDegree_Φ [Nontrivial R] (n : ℤ) : (W.Φ n).natDegree = n.natAbs ^ 2 :=\n  natDegree_eq_of_le_of_coeff_ne_zero (W.natDegree_Φ_le n) <| W.coeff_Φ_ne_zero n\n\n"}
{"name":"WeierstrassCurve.natDegree_Φ_pos","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : Nontrivial R\nn : Int\nhn : Ne n 0\n⊢ LT.lt 0 (W.Φ n).natDegree","decl":"lemma natDegree_Φ_pos [Nontrivial R] {n : ℤ} (hn : n ≠ 0) : 0 < (W.Φ n).natDegree := by\n  rwa [natDegree_Φ, pow_pos_iff two_ne_zero, Int.natAbs_pos]\n\n"}
{"name":"WeierstrassCurve.leadingCoeff_Φ","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : Nontrivial R\nn : Int\n⊢ Eq (W.Φ n).leadingCoeff 1","decl":"@[simp]\nlemma leadingCoeff_Φ [Nontrivial R] (n : ℤ) : (W.Φ n).leadingCoeff = 1 := by\n  rw [leadingCoeff, natDegree_Φ, coeff_Φ]\n\n"}
{"name":"WeierstrassCurve.Φ_ne_zero","module":"Mathlib.AlgebraicGeometry.EllipticCurve.DivisionPolynomial.Degree","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : Nontrivial R\nn : Int\n⊢ Ne (W.Φ n) 0","decl":"lemma Φ_ne_zero [Nontrivial R] (n : ℤ) : W.Φ n ≠ 0 := by\n  by_cases hn : n = 0\n  · simpa only [hn, Φ_zero] using one_ne_zero\n  · exact ne_zero_of_natDegree_gt <| W.natDegree_Φ_pos hn\n\n"}
