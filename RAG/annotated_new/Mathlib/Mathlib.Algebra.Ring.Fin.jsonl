{"name":"RingEquiv.piFinTwo_symm_apply","module":"Mathlib.Algebra.Ring.Fin","initialProofState":"R : Fin 2 → Type u_1\ninst✝ : (i : Fin 2) → Semiring (R i)\na✝ : Prod (R 0) (R 1)\ni : Fin 2\n⊢ Eq ((RingEquiv.piFinTwo R).symm a✝ i) ((piFinTwoEquiv R).invFun a✝ i)","decl":"/-- The product over `Fin 2` of some rings is just the cartesian product of these rings. -/\n@[simps]\ndef RingEquiv.piFinTwo (R : Fin 2 → Type*) [∀ i, Semiring (R i)] :\n    (∀ i : Fin 2, R i) ≃+* R 0 × R 1 :=\n  { piFinTwoEquiv R with\n    toFun := piFinTwoEquiv R\n    map_add' := fun _ _ => rfl\n    map_mul' := fun _ _ => rfl }\n"}
{"name":"RingEquiv.piFinTwo_apply","module":"Mathlib.Algebra.Ring.Fin","initialProofState":"R : Fin 2 → Type u_1\ninst✝ : (i : Fin 2) → Semiring (R i)\na : (i : Fin 2) → R i\n⊢ Eq ((RingEquiv.piFinTwo R) a) ((piFinTwoEquiv R) a)","decl":"/-- The product over `Fin 2` of some rings is just the cartesian product of these rings. -/\n@[simps]\ndef RingEquiv.piFinTwo (R : Fin 2 → Type*) [∀ i, Semiring (R i)] :\n    (∀ i : Fin 2, R i) ≃+* R 0 × R 1 :=\n  { piFinTwoEquiv R with\n    toFun := piFinTwoEquiv R\n    map_add' := fun _ _ => rfl\n    map_mul' := fun _ _ => rfl }\n"}
