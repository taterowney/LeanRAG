{"name":"MeasureTheory.Measure.toSphere_apply_aux","module":"Mathlib.MeasureTheory.Constructions.HaarToSphere","initialProofState":"E : Type u_1\ninst✝² : NormedAddCommGroup E\ninst✝¹ : NormedSpace Real E\ninst✝ : MeasurableSpace E\nμ : MeasureTheory.Measure E\ns : Set ↑(Metric.sphere 0 1)\nr : ↑(Set.Ioi 0)\n⊢ Eq (μ (Set.image Subtype.val (Set.preimage (⇑(homeomorphUnitSphereProd E)) (SProd.sprod s (Set.Iio r))))) (μ (HSMul.hSMul (Set.Ioo 0 ↑r) (Set.image Subtype.val s)))","decl":"theorem toSphere_apply_aux (s : Set (sphere (0 : E) 1)) (r : Ioi (0 : ℝ)) :\n    μ ((↑) '' (homeomorphUnitSphereProd E ⁻¹' s ×ˢ Iio r)) = μ (Ioo (0 : ℝ) r • ((↑) '' s)) := by\n  rw [← image2_smul, image2_image_right, ← Homeomorph.image_symm, image_image,\n    ← image_subtype_val_Ioi_Iio, image2_image_left, image2_swap, ← image_prod]\n  rfl\n\n"}
{"name":"MeasureTheory.Measure.toSphere_apply'","module":"Mathlib.MeasureTheory.Constructions.HaarToSphere","initialProofState":"E : Type u_1\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace Real E\ninst✝¹ : MeasurableSpace E\nμ : MeasureTheory.Measure E\ninst✝ : BorelSpace E\ns : Set ↑(Metric.sphere 0 1)\nhs : MeasurableSet s\n⊢ Eq (μ.toSphere s) (HMul.hMul (↑(Module.finrank Real E)) (μ (HSMul.hSMul (Set.Ioo 0 1) (Set.image Subtype.val s))))","decl":"theorem toSphere_apply' {s : Set (sphere (0 : E) 1)} (hs : MeasurableSet s) :\n    μ.toSphere s = dim E * μ (Ioo (0 : ℝ) 1 • ((↑) '' s)) := by\n  rw [toSphere, smul_apply, fst_apply hs, restrict_apply (measurable_fst hs),\n    ((MeasurableEmbedding.subtype_coe (measurableSet_singleton _).compl).comp\n      (Homeomorph.measurableEmbedding _)).comap_apply,\n    image_comp, Homeomorph.image_symm, univ_prod, ← Set.prod_eq, nsmul_eq_mul, toSphere_apply_aux]\n\n"}
{"name":"MeasureTheory.Measure.toSphere_apply_univ'","module":"Mathlib.MeasureTheory.Constructions.HaarToSphere","initialProofState":"E : Type u_1\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace Real E\ninst✝¹ : MeasurableSpace E\nμ : MeasureTheory.Measure E\ninst✝ : BorelSpace E\n⊢ Eq (μ.toSphere Set.univ) (HMul.hMul (↑(Module.finrank Real E)) (μ (SDiff.sdiff (Metric.ball 0 1) (Singleton.singleton 0))))","decl":"theorem toSphere_apply_univ' : μ.toSphere univ = dim E * μ (ball 0 1 \\ {0}) := by\n  rw [μ.toSphere_apply' .univ, image_univ, Subtype.range_coe, Ioo_smul_sphere_zero] <;> simp\n\n"}
{"name":"MeasureTheory.Measure.toSphere_apply_univ","module":"Mathlib.MeasureTheory.Constructions.HaarToSphere","initialProofState":"E : Type u_1\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : NormedSpace Real E\ninst✝³ : MeasurableSpace E\nμ : MeasureTheory.Measure E\ninst✝² : BorelSpace E\ninst✝¹ : FiniteDimensional Real E\ninst✝ : μ.IsAddHaarMeasure\n⊢ Eq (μ.toSphere Set.univ) (HMul.hMul (↑(Module.finrank Real E)) (μ (Metric.ball 0 1)))","decl":"@[simp]\ntheorem toSphere_apply_univ : μ.toSphere univ = dim E * μ (ball 0 1) := by\n  nontriviality E\n  rw [toSphere_apply_univ', measure_diff_null (measure_singleton _)]\n\n"}
{"name":"MeasureTheory.Measure.instIsFiniteMeasureElemSphereOfNatRealToSphere","module":"Mathlib.MeasureTheory.Constructions.HaarToSphere","initialProofState":"E : Type u_1\ninst✝² : NormedAddCommGroup E\ninst✝¹ : NormedSpace Real E\ninst✝ : MeasurableSpace E\nμ : MeasureTheory.Measure E\n⊢ MeasureTheory.IsFiniteMeasure μ.toSphere","decl":"instance : IsFiniteMeasure μ.toSphere where\n  measure_univ_lt_top := by\n    rw [toSphere_apply_univ']\n    exact ENNReal.mul_lt_top (ENNReal.natCast_lt_top _) <|\n      measure_ball_lt_top.trans_le' <| measure_mono diff_subset\n\n"}
{"name":"MeasureTheory.Measure.volumeIoiPow_apply_Iio","module":"Mathlib.MeasureTheory.Constructions.HaarToSphere","initialProofState":"n : Nat\nx : ↑(Set.Ioi 0)\n⊢ Eq ((MeasureTheory.Measure.volumeIoiPow n) (Set.Iio x)) (ENNReal.ofReal (HDiv.hDiv (HPow.hPow (↑x) (HAdd.hAdd n 1)) (HAdd.hAdd (↑n) 1)))","decl":"lemma volumeIoiPow_apply_Iio (n : ℕ) (x : Ioi (0 : ℝ)) :\n    volumeIoiPow n (Iio x) = ENNReal.ofReal (x.1 ^ (n + 1) / (n + 1)) := by\n  have hr₀ : 0 ≤ x.1 := le_of_lt x.2\n  rw [volumeIoiPow, withDensity_apply _ measurableSet_Iio,\n    setLIntegral_subtype measurableSet_Ioi _ fun a : ℝ ↦ .ofReal (a ^ n),\n    image_subtype_val_Ioi_Iio, restrict_congr_set Ioo_ae_eq_Ioc,\n    ← ofReal_integral_eq_lintegral_ofReal (intervalIntegrable_pow _).1, ← integral_of_le hr₀]\n  · simp\n  · filter_upwards [ae_restrict_mem measurableSet_Ioc] with y hy\n    exact pow_nonneg hy.1.le _\n\n"}
{"name":"MeasureTheory.Measure.instSigmaFiniteElemRealIoiOfNatVolumeIoiPow","module":"Mathlib.MeasureTheory.Constructions.HaarToSphere","initialProofState":"n : Nat\n⊢ MeasureTheory.SigmaFinite (MeasureTheory.Measure.volumeIoiPow n)","decl":"instance (n : ℕ) : SigmaFinite (volumeIoiPow n) :=\n  (finiteSpanningSetsIn_volumeIoiPow_range_Iio n).sigmaFinite\n\n"}
{"name":"MeasureTheory.Measure.measurePreserving_homeomorphUnitSphereProd","module":"Mathlib.MeasureTheory.Constructions.HaarToSphere","initialProofState":"E : Type u_1\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : NormedSpace Real E\ninst✝³ : MeasurableSpace E\nμ : MeasureTheory.Measure E\ninst✝² : BorelSpace E\ninst✝¹ : FiniteDimensional Real E\ninst✝ : μ.IsAddHaarMeasure\n⊢ MeasureTheory.MeasurePreserving (⇑(homeomorphUnitSphereProd E)) (MeasureTheory.Measure.comap Subtype.val μ) (μ.toSphere.prod (MeasureTheory.Measure.volumeIoiPow (HSub.hSub (Module.finrank Real E) 1)))","decl":"/-- The homeomorphism `homeomorphUnitSphereProd E` sends an additive Haar measure `μ`\nto the product of `μ.toSphere` and `MeasureTheory.Measure.volumeIoiPow (dim E - 1)`,\nwhere `dim E = Module.finrank ℝ E` is the dimension of `E`. -/\ntheorem measurePreserving_homeomorphUnitSphereProd :\n    MeasurePreserving (homeomorphUnitSphereProd E) (μ.comap (↑))\n      (μ.toSphere.prod (volumeIoiPow (dim E - 1))) := by\n  nontriviality E\n  refine ⟨(homeomorphUnitSphereProd E).measurable, .symm ?_⟩\n  refine prod_eq_generateFrom generateFrom_measurableSet\n    ((borel_eq_generateFrom_Iio _).symm.trans BorelSpace.measurable_eq.symm)\n    isPiSystem_measurableSet isPiSystem_Iio\n    μ.toSphere.toFiniteSpanningSetsIn (finiteSpanningSetsIn_volumeIoiPow_range_Iio _)\n    fun s hs ↦ forall_mem_range.2 fun r ↦ ?_\n  have : Ioo (0 : ℝ) r = r.1 • Ioo (0 : ℝ) 1 := by\n    rw [LinearOrderedField.smul_Ioo r.2.out, smul_zero, smul_eq_mul, mul_one]\n  have hpos : 0 < dim E := Module.finrank_pos\n  rw [(Homeomorph.measurableEmbedding _).map_apply, toSphere_apply' _ hs, volumeIoiPow_apply_Iio,\n    comap_subtype_coe_apply (measurableSet_singleton _).compl, toSphere_apply_aux, this,\n    smul_assoc, μ.addHaar_smul_of_nonneg r.2.out.le, Nat.sub_add_cancel hpos, Nat.cast_pred hpos,\n    sub_add_cancel, mul_right_comm, ← ENNReal.ofReal_natCast, ← ENNReal.ofReal_mul, mul_div_cancel₀]\n  exacts [(Nat.cast_pos.2 hpos).ne', Nat.cast_nonneg _]\n\n"}
{"name":"MeasureTheory.integral_fun_norm_addHaar","module":"Mathlib.MeasureTheory.Constructions.HaarToSphere","initialProofState":"E : Type u_1\ninst✝⁸ : NormedAddCommGroup E\ninst✝⁷ : NormedSpace Real E\ninst✝⁶ : MeasurableSpace E\nF : Type u_2\ninst✝⁵ : NormedAddCommGroup F\ninst✝⁴ : NormedSpace Real F\ninst✝³ : Nontrivial E\nμ : MeasureTheory.Measure E\ninst✝² : FiniteDimensional Real E\ninst✝¹ : BorelSpace E\ninst✝ : μ.IsAddHaarMeasure\nf : Real → F\n⊢ Eq (MeasureTheory.integral μ fun x => f (Norm.norm x)) (HSMul.hSMul (Module.finrank Real E) (HSMul.hSMul (μ (Metric.ball 0 1)).toReal (MeasureTheory.integral (MeasureTheory.MeasureSpace.volume.restrict (Set.Ioi 0)) fun y => HSMul.hSMul (HPow.hPow y (HSub.hSub (Module.finrank Real E) 1)) (f y))))","decl":"lemma integral_fun_norm_addHaar (f : ℝ → F) :\n    ∫ x, f (‖x‖) ∂μ = dim E • (μ (ball 0 1)).toReal • ∫ y in Ioi (0 : ℝ), y ^ (dim E - 1) • f y :=\n  calc\n    ∫ x, f (‖x‖) ∂μ = ∫ x : ({(0)}ᶜ : Set E), f (‖x.1‖) ∂(μ.comap (↑)) := by\n      rw [integral_subtype_comap (measurableSet_singleton _).compl fun x ↦ f (‖x‖),\n        restrict_compl_singleton]\n    _ = ∫ x : sphere (0 : E) 1 × Ioi (0 : ℝ), f x.2 ∂μ.toSphere.prod (.volumeIoiPow (dim E - 1)) :=\n      μ.measurePreserving_homeomorphUnitSphereProd.integral_comp (Homeomorph.measurableEmbedding _)\n        (f ∘ Subtype.val ∘ Prod.snd)\n    _ = (μ.toSphere univ).toReal • ∫ x : Ioi (0 : ℝ), f x ∂.volumeIoiPow (dim E - 1) :=\n      integral_fun_snd (f ∘ Subtype.val)\n    _ = _ := by\n      simp only [Measure.volumeIoiPow, ENNReal.ofReal]\n      rw [integral_withDensity_eq_integral_smul, μ.toSphere_apply_univ,\n        ENNReal.toReal_mul, ENNReal.toReal_nat, ← nsmul_eq_mul, smul_assoc,\n        integral_subtype_comap measurableSet_Ioi fun a ↦ Real.toNNReal (a ^ (dim E - 1)) • f a,\n        setIntegral_congr_fun measurableSet_Ioi fun x hx ↦ ?_]\n      · rw [NNReal.smul_def, Real.coe_toNNReal _ (pow_nonneg hx.out.le _)]\n      · exact (measurable_subtype_coe.pow_const _).real_toNNReal\n\n"}
