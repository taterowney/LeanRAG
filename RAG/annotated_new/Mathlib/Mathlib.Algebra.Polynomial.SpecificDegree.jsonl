{"name":"Polynomial.Monic.irreducible_iff_roots_eq_zero_of_degree_le_three","module":"Mathlib.Algebra.Polynomial.SpecificDegree","initialProofState":"R : Type u_1\ninst✝¹ : CommRing R\ninst✝ : IsDomain R\np : Polynomial R\nhp : p.Monic\nhp2 : LE.le 2 p.natDegree\nhp3 : LE.le p.natDegree 3\n⊢ Iff (Irreducible p) (Eq p.roots 0)","decl":"/-- A polynomial of degree 2 or 3 is irreducible iff it doesn't have roots. -/\ntheorem Monic.irreducible_iff_roots_eq_zero_of_degree_le_three {p : R[X]} (hp : p.Monic)\n    (hp2 : 2 ≤ p.natDegree) (hp3 : p.natDegree ≤ 3) : Irreducible p ↔ p.roots = 0 := by\n  have hp0 : p ≠ 0 := hp.ne_zero\n  have hp1 : p ≠ 1 := by rintro rfl; rw [natDegree_one] at hp2; cases hp2\n  rw [hp.irreducible_iff_lt_natDegree_lt hp1]\n  simp_rw [show p.natDegree / 2 = 1 from\n      (Nat.div_le_div_right hp3).antisymm\n        (by apply Nat.div_le_div_right (c := 2) hp2),\n    show Finset.Ioc 0 1 = {1} from rfl,\n    Finset.mem_singleton, Multiset.eq_zero_iff_forall_not_mem, mem_roots hp0, ← dvd_iff_isRoot]\n  refine ⟨fun h r ↦ h _ (monic_X_sub_C r) (natDegree_X_sub_C r), fun h q hq hq1 ↦ ?_⟩\n  rw [hq.eq_X_add_C hq1, ← sub_neg_eq_add, ← C_neg]\n  apply h\n\n"}
{"name":"Polynomial.irreducible_iff_roots_eq_zero_of_degree_le_three","module":"Mathlib.Algebra.Polynomial.SpecificDegree","initialProofState":"K : Type u_1\ninst✝ : Field K\np : Polynomial K\nhp2 : LE.le 2 p.natDegree\nhp3 : LE.le p.natDegree 3\n⊢ Iff (Irreducible p) (Eq p.roots 0)","decl":"/-- A polynomial of degree 2 or 3 is irreducible iff it doesn't have roots. -/\ntheorem irreducible_iff_roots_eq_zero_of_degree_le_three\n    {p : K[X]} (hp2 : 2 ≤ p.natDegree) (hp3 : p.natDegree ≤ 3) : Irreducible p ↔ p.roots = 0 := by\n  have hp0 : p ≠ 0 := by rintro rfl; rw [natDegree_zero] at hp2; cases hp2\n  rw [← irreducible_mul_leadingCoeff_inv,\n      (monic_mul_leadingCoeff_inv hp0).irreducible_iff_roots_eq_zero_of_degree_le_three,\n      mul_comm, roots_C_mul]\n  · exact inv_ne_zero (leadingCoeff_ne_zero.mpr hp0)\n  · rwa [natDegree_mul_leadingCoeff_inv _ hp0]\n  · rwa [natDegree_mul_leadingCoeff_inv _ hp0]\n\n"}
