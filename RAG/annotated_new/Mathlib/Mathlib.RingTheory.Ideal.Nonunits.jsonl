{"name":"mem_nonunits_iff","module":"Mathlib.RingTheory.Ideal.Nonunits","initialProofState":"α : Type u_2\na : α\ninst✝ : Monoid α\n⊢ Iff (Membership.mem (nonunits α) a) (Not (IsUnit a))","decl":"@[simp]\ntheorem mem_nonunits_iff [Monoid α] : a ∈ nonunits α ↔ ¬IsUnit a :=\n  Iff.rfl\n\n"}
{"name":"mul_mem_nonunits_right","module":"Mathlib.RingTheory.Ideal.Nonunits","initialProofState":"α : Type u_2\na b : α\ninst✝ : CommMonoid α\na✝ : Membership.mem (nonunits α) b\n⊢ Membership.mem (nonunits α) (HMul.hMul a b)","decl":"theorem mul_mem_nonunits_right [CommMonoid α] : b ∈ nonunits α → a * b ∈ nonunits α :=\n  mt isUnit_of_mul_isUnit_right\n\n"}
{"name":"mul_mem_nonunits_left","module":"Mathlib.RingTheory.Ideal.Nonunits","initialProofState":"α : Type u_2\na b : α\ninst✝ : CommMonoid α\na✝ : Membership.mem (nonunits α) a\n⊢ Membership.mem (nonunits α) (HMul.hMul a b)","decl":"theorem mul_mem_nonunits_left [CommMonoid α] : a ∈ nonunits α → a * b ∈ nonunits α :=\n  mt isUnit_of_mul_isUnit_left\n\n"}
{"name":"zero_mem_nonunits","module":"Mathlib.RingTheory.Ideal.Nonunits","initialProofState":"α : Type u_2\ninst✝ : Semiring α\n⊢ Iff (Membership.mem (nonunits α) 0) (Ne 0 1)","decl":"theorem zero_mem_nonunits [Semiring α] : 0 ∈ nonunits α ↔ (0 : α) ≠ 1 :=\n  not_congr isUnit_zero_iff\n\n"}
{"name":"one_not_mem_nonunits","module":"Mathlib.RingTheory.Ideal.Nonunits","initialProofState":"α : Type u_2\ninst✝ : Monoid α\n⊢ Not (Membership.mem (nonunits α) 1)","decl":"@[simp 1001] -- increased priority to appease `simpNF`\ntheorem one_not_mem_nonunits [Monoid α] : (1 : α) ∉ nonunits α :=\n  not_not_intro isUnit_one\n\n-- Porting note : as this can be proved by other `simp` lemmas, this is marked as high priority.\n"}
{"name":"map_mem_nonunits_iff","module":"Mathlib.RingTheory.Ideal.Nonunits","initialProofState":"F : Type u_1\nα : Type u_2\nβ : Type u_3\ninst✝⁴ : Monoid α\ninst✝³ : Monoid β\ninst✝² : FunLike F α β\ninst✝¹ : MonoidHomClass F α β\nf : F\ninst✝ : IsLocalHom f\na : α\n⊢ Iff (Membership.mem (nonunits β) (f a)) (Membership.mem (nonunits α) a)","decl":"@[simp (high)]\ntheorem map_mem_nonunits_iff [Monoid α] [Monoid β] [FunLike F α β] [MonoidHomClass F α β] (f : F)\n    [IsLocalHom f] (a) : f a ∈ nonunits β ↔ a ∈ nonunits α :=\n  ⟨fun h ha => h <| ha.map f, fun h ha => h <| ha.of_map⟩\n\n"}
{"name":"coe_subset_nonunits","module":"Mathlib.RingTheory.Ideal.Nonunits","initialProofState":"α : Type u_2\ninst✝ : Semiring α\nI : Ideal α\nh : Ne I Top.top\n⊢ HasSubset.Subset (↑I) (nonunits α)","decl":"theorem coe_subset_nonunits [Semiring α] {I : Ideal α} (h : I ≠ ⊤) : (I : Set α) ⊆ nonunits α :=\n  fun _x hx hu => h <| I.eq_top_of_isUnit_mem hx hu\n\n"}
{"name":"exists_max_ideal_of_mem_nonunits","module":"Mathlib.RingTheory.Ideal.Nonunits","initialProofState":"α : Type u_2\na : α\ninst✝ : CommSemiring α\nh : Membership.mem (nonunits α) a\n⊢ Exists fun I => And I.IsMaximal (Membership.mem I a)","decl":"theorem exists_max_ideal_of_mem_nonunits [CommSemiring α] (h : a ∈ nonunits α) :\n    ∃ I : Ideal α, I.IsMaximal ∧ a ∈ I := by\n  have : Ideal.span ({a} : Set α) ≠ ⊤ := by\n    intro H\n    rw [Ideal.span_singleton_eq_top] at H\n    contradiction\n  rcases Ideal.exists_le_maximal _ this with ⟨I, Imax, H⟩\n  use I, Imax\n  apply H\n  apply Ideal.subset_span\n  exact Set.mem_singleton a\n"}
