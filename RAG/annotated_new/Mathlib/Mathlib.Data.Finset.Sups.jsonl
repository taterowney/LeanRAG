{"name":"Finset.mem_sups","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns t : Finset α\nc : α\n⊢ Iff (Membership.mem (HasSups.sups s t) c) (Exists fun a => And (Membership.mem s a) (Exists fun b => And (Membership.mem t b) (Eq (Max.max a b) c)))","decl":"@[simp]\ntheorem mem_sups : c ∈ s ⊻ t ↔ ∃ a ∈ s, ∃ b ∈ t, a ⊔ b = c := by simp [(· ⊻ ·)]\n\n"}
{"name":"Finset.coe_sups","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns t : Finset α\n⊢ Eq (↑(HasSups.sups s t)) (HasSups.sups ↑s ↑t)","decl":"@[simp, norm_cast]\ntheorem coe_sups : (↑(s ⊻ t) : Set α) = ↑s ⊻ ↑t :=\n  coe_image₂ _ _ _\n\n"}
{"name":"Finset.card_sups_le","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns t : Finset α\n⊢ LE.le (HasSups.sups s t).card (HMul.hMul s.card t.card)","decl":"theorem card_sups_le : #(s ⊻ t) ≤ #s * #t := card_image₂_le _ _ _\n\n"}
{"name":"Finset.card_sups_iff","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns t : Finset α\n⊢ Iff (Eq (HasSups.sups s t).card (HMul.hMul s.card t.card)) (Set.InjOn (fun x => Max.max x.1 x.2) (SProd.sprod ↑s ↑t))","decl":"theorem card_sups_iff : #(s ⊻ t) = #s * #t ↔ (s ×ˢ t : Set (α × α)).InjOn fun x => x.1 ⊔ x.2 :=\n  card_image₂_iff\n\n"}
{"name":"Finset.sup_mem_sups","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns t : Finset α\na b : α\na✝¹ : Membership.mem s a\na✝ : Membership.mem t b\n⊢ Membership.mem (HasSups.sups s t) (Max.max a b)","decl":"theorem sup_mem_sups : a ∈ s → b ∈ t → a ⊔ b ∈ s ⊻ t :=\n  mem_image₂_of_mem\n\n"}
{"name":"Finset.sups_subset","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns₁ s₂ t₁ t₂ : Finset α\na✝¹ : HasSubset.Subset s₁ s₂\na✝ : HasSubset.Subset t₁ t₂\n⊢ HasSubset.Subset (HasSups.sups s₁ t₁) (HasSups.sups s₂ t₂)","decl":"theorem sups_subset : s₁ ⊆ s₂ → t₁ ⊆ t₂ → s₁ ⊻ t₁ ⊆ s₂ ⊻ t₂ :=\n  image₂_subset\n\n"}
{"name":"Finset.sups_subset_left","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns t₁ t₂ : Finset α\na✝ : HasSubset.Subset t₁ t₂\n⊢ HasSubset.Subset (HasSups.sups s t₁) (HasSups.sups s t₂)","decl":"theorem sups_subset_left : t₁ ⊆ t₂ → s ⊻ t₁ ⊆ s ⊻ t₂ :=\n  image₂_subset_left\n\n"}
{"name":"Finset.sups_subset_right","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns₁ s₂ t : Finset α\na✝ : HasSubset.Subset s₁ s₂\n⊢ HasSubset.Subset (HasSups.sups s₁ t) (HasSups.sups s₂ t)","decl":"theorem sups_subset_right : s₁ ⊆ s₂ → s₁ ⊻ t ⊆ s₂ ⊻ t :=\n  image₂_subset_right\n\n"}
{"name":"Finset.image_subset_sups_left","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns t : Finset α\nb : α\na✝ : Membership.mem t b\n⊢ HasSubset.Subset (Finset.image (fun x => Max.max x b) s) (HasSups.sups s t)","decl":"lemma image_subset_sups_left : b ∈ t → s.image (· ⊔ b) ⊆ s ⊻ t := image_subset_image₂_left\n\n"}
{"name":"Finset.image_subset_sups_right","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns t : Finset α\na : α\na✝ : Membership.mem s a\n⊢ HasSubset.Subset (Finset.image (fun x => Max.max a x) t) (HasSups.sups s t)","decl":"lemma image_subset_sups_right : a ∈ s → t.image (a ⊔ ·) ⊆ s ⊻ t := image_subset_image₂_right\n\n"}
{"name":"Finset.forall_sups_iff","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns t : Finset α\np : α → Prop\n⊢ Iff (∀ (c : α), Membership.mem (HasSups.sups s t) c → p c) (∀ (a : α), Membership.mem s a → ∀ (b : α), Membership.mem t b → p (Max.max a b))","decl":"theorem forall_sups_iff {p : α → Prop} : (∀ c ∈ s ⊻ t, p c) ↔ ∀ a ∈ s, ∀ b ∈ t, p (a ⊔ b) :=\n  forall_mem_image₂\n\n"}
{"name":"Finset.sups_subset_iff","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns t u : Finset α\n⊢ Iff (HasSubset.Subset (HasSups.sups s t) u) (∀ (a : α), Membership.mem s a → ∀ (b : α), Membership.mem t b → Membership.mem u (Max.max a b))","decl":"@[simp]\ntheorem sups_subset_iff : s ⊻ t ⊆ u ↔ ∀ a ∈ s, ∀ b ∈ t, a ⊔ b ∈ u :=\n  image₂_subset_iff\n\n"}
{"name":"Finset.sups_nonempty","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns t : Finset α\n⊢ Iff (HasSups.sups s t).Nonempty (And s.Nonempty t.Nonempty)","decl":"@[simp]\ntheorem sups_nonempty : (s ⊻ t).Nonempty ↔ s.Nonempty ∧ t.Nonempty :=\n  image₂_nonempty_iff\n\n"}
{"name":"Finset.Nonempty.sups","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns t : Finset α\na✝¹ : s.Nonempty\na✝ : t.Nonempty\n⊢ (HasSups.sups s t).Nonempty","decl":"@[aesop safe apply (rule_sets := [finsetNonempty])]\nprotected theorem Nonempty.sups : s.Nonempty → t.Nonempty → (s ⊻ t).Nonempty :=\n  Nonempty.image₂\n\n"}
{"name":"Finset.Nonempty.of_sups_left","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns t : Finset α\na✝ : (HasSups.sups s t).Nonempty\n⊢ s.Nonempty","decl":"theorem Nonempty.of_sups_left : (s ⊻ t).Nonempty → s.Nonempty :=\n  Nonempty.of_image₂_left\n\n"}
{"name":"Finset.Nonempty.of_sups_right","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns t : Finset α\na✝ : (HasSups.sups s t).Nonempty\n⊢ t.Nonempty","decl":"theorem Nonempty.of_sups_right : (s ⊻ t).Nonempty → t.Nonempty :=\n  Nonempty.of_image₂_right\n\n"}
{"name":"Finset.empty_sups","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\nt : Finset α\n⊢ Eq (HasSups.sups EmptyCollection.emptyCollection t) EmptyCollection.emptyCollection","decl":"@[simp]\ntheorem empty_sups : ∅ ⊻ t = ∅ :=\n  image₂_empty_left\n\n"}
{"name":"Finset.sups_empty","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns : Finset α\n⊢ Eq (HasSups.sups s EmptyCollection.emptyCollection) EmptyCollection.emptyCollection","decl":"@[simp]\ntheorem sups_empty : s ⊻ ∅ = ∅ :=\n  image₂_empty_right\n\n"}
{"name":"Finset.sups_eq_empty","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns t : Finset α\n⊢ Iff (Eq (HasSups.sups s t) EmptyCollection.emptyCollection) (Or (Eq s EmptyCollection.emptyCollection) (Eq t EmptyCollection.emptyCollection))","decl":"@[simp]\ntheorem sups_eq_empty : s ⊻ t = ∅ ↔ s = ∅ ∨ t = ∅ :=\n  image₂_eq_empty_iff\n\n"}
{"name":"Finset.singleton_sups","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\nt : Finset α\na : α\n⊢ Eq (HasSups.sups (Singleton.singleton a) t) (Finset.image (fun x => Max.max a x) t)","decl":"@[simp] lemma singleton_sups : {a} ⊻ t = t.image (a ⊔ ·) := image₂_singleton_left\n\n"}
{"name":"Finset.sups_singleton","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns : Finset α\nb : α\n⊢ Eq (HasSups.sups s (Singleton.singleton b)) (Finset.image (fun x => Max.max x b) s)","decl":"@[simp] lemma sups_singleton : s ⊻ {b} = s.image (· ⊔ b) := image₂_singleton_right\n\n"}
{"name":"Finset.singleton_sups_singleton","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\na b : α\n⊢ Eq (HasSups.sups (Singleton.singleton a) (Singleton.singleton b)) (Singleton.singleton (Max.max a b))","decl":"theorem singleton_sups_singleton : ({a} ⊻ {b} : Finset α) = {a ⊔ b} :=\n  image₂_singleton\n\n"}
{"name":"Finset.sups_union_left","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns₁ s₂ t : Finset α\n⊢ Eq (HasSups.sups (Union.union s₁ s₂) t) (Union.union (HasSups.sups s₁ t) (HasSups.sups s₂ t))","decl":"theorem sups_union_left : (s₁ ∪ s₂) ⊻ t = s₁ ⊻ t ∪ s₂ ⊻ t :=\n  image₂_union_left\n\n"}
{"name":"Finset.sups_union_right","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns t₁ t₂ : Finset α\n⊢ Eq (HasSups.sups s (Union.union t₁ t₂)) (Union.union (HasSups.sups s t₁) (HasSups.sups s t₂))","decl":"theorem sups_union_right : s ⊻ (t₁ ∪ t₂) = s ⊻ t₁ ∪ s ⊻ t₂ :=\n  image₂_union_right\n\n"}
{"name":"Finset.sups_inter_subset_left","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns₁ s₂ t : Finset α\n⊢ HasSubset.Subset (HasSups.sups (Inter.inter s₁ s₂) t) (Inter.inter (HasSups.sups s₁ t) (HasSups.sups s₂ t))","decl":"theorem sups_inter_subset_left : (s₁ ∩ s₂) ⊻ t ⊆ s₁ ⊻ t ∩ s₂ ⊻ t :=\n  image₂_inter_subset_left\n\n"}
{"name":"Finset.sups_inter_subset_right","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns t₁ t₂ : Finset α\n⊢ HasSubset.Subset (HasSups.sups s (Inter.inter t₁ t₂)) (Inter.inter (HasSups.sups s t₁) (HasSups.sups s t₂))","decl":"theorem sups_inter_subset_right : s ⊻ (t₁ ∩ t₂) ⊆ s ⊻ t₁ ∩ s ⊻ t₂ :=\n  image₂_inter_subset_right\n\n"}
{"name":"Finset.subset_sups","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\nu : Finset α\ns t : Set α\na✝ : HasSubset.Subset (↑u) (HasSups.sups s t)\n⊢ Exists fun s' => Exists fun t' => And (HasSubset.Subset (↑s') s) (And (HasSubset.Subset (↑t') t) (HasSubset.Subset u (HasSups.sups s' t')))","decl":"theorem subset_sups {s t : Set α} :\n    ↑u ⊆ s ⊻ t → ∃ s' t' : Finset α, ↑s' ⊆ s ∧ ↑t' ⊆ t ∧ u ⊆ s' ⊻ t' :=\n  subset_set_image₂\n\n"}
{"name":"Finset.image_sups","module":"Mathlib.Data.Finset.Sups","initialProofState":"F : Type u_1\nα : Type u_2\nβ : Type u_3\ninst✝⁵ : DecidableEq α\ninst✝⁴ : DecidableEq β\ninst✝³ : SemilatticeSup α\ninst✝² : SemilatticeSup β\ninst✝¹ : FunLike F α β\ninst✝ : SupHomClass F α β\nf : F\ns t : Finset α\n⊢ Eq (Finset.image (⇑f) (HasSups.sups s t)) (HasSups.sups (Finset.image (⇑f) s) (Finset.image (⇑f) t))","decl":"lemma image_sups (f : F) (s t : Finset α) : image f (s ⊻ t) = image f s ⊻ image f t :=\n  image_image₂_distrib <| map_sup f\n\n"}
{"name":"Finset.map_sups","module":"Mathlib.Data.Finset.Sups","initialProofState":"F : Type u_1\nα : Type u_2\nβ : Type u_3\ninst✝⁵ : DecidableEq α\ninst✝⁴ : DecidableEq β\ninst✝³ : SemilatticeSup α\ninst✝² : SemilatticeSup β\ninst✝¹ : FunLike F α β\ninst✝ : SupHomClass F α β\nf : F\nhf : Function.Injective ⇑f\ns t : Finset α\n⊢ Eq (Finset.map { toFun := ⇑f, inj' := hf } (HasSups.sups s t)) (HasSups.sups (Finset.map { toFun := ⇑f, inj' := hf } s) (Finset.map { toFun := ⇑f, inj' := hf } t))","decl":"lemma map_sups (f : F) (hf) (s t : Finset α) :\n    map ⟨f, hf⟩ (s ⊻ t) = map ⟨f, hf⟩ s ⊻ map ⟨f, hf⟩ t := by\n  simpa [map_eq_image] using image_sups f s t\n\n"}
{"name":"Finset.subset_sups_self","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns : Finset α\n⊢ HasSubset.Subset s (HasSups.sups s s)","decl":"lemma subset_sups_self : s ⊆ s ⊻ s := fun _a ha ↦ mem_sups.2 ⟨_, ha, _, ha, sup_idem _⟩\n"}
{"name":"Finset.sups_subset_self","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns : Finset α\n⊢ Iff (HasSubset.Subset (HasSups.sups s s) s) (SupClosed ↑s)","decl":"lemma sups_subset_self : s ⊻ s ⊆ s ↔ SupClosed (s : Set α) := sups_subset_iff\n"}
{"name":"Finset.sups_eq_self","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns : Finset α\n⊢ Iff (Eq (HasSups.sups s s) s) (SupClosed ↑s)","decl":"@[simp] lemma sups_eq_self : s ⊻ s = s ↔ SupClosed (s : Set α) := by simp [← coe_inj]\n\n"}
{"name":"Finset.univ_sups_univ","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝² : DecidableEq α\ninst✝¹ : SemilatticeSup α\ninst✝ : Fintype α\n⊢ Eq (HasSups.sups Finset.univ Finset.univ) Finset.univ","decl":"@[simp] lemma univ_sups_univ [Fintype α] : (univ : Finset α) ⊻ univ = univ := by simp\n\n"}
{"name":"Finset.filter_sups_le","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝² : DecidableEq α\ninst✝¹ : SemilatticeSup α\ninst✝ : DecidableRel fun x1 x2 => LE.le x1 x2\ns t : Finset α\na : α\n⊢ Eq (Finset.filter (fun b => LE.le b a) (HasSups.sups s t)) (HasSups.sups (Finset.filter (fun b => LE.le b a) s) (Finset.filter (fun b => LE.le b a) t))","decl":"lemma filter_sups_le [DecidableRel (α := α) (· ≤ ·)] (s t : Finset α) (a : α) :\n    {b ∈ s ⊻ t | b ≤ a} = {b ∈ s | b ≤ a} ⊻ {b ∈ t | b ≤ a} := by\n  simp only [← coe_inj, coe_filter, coe_sups, ← mem_coe, Set.sep_sups_le]\n\n"}
{"name":"Finset.biUnion_image_sup_left","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns t : Finset α\n⊢ Eq (s.biUnion fun a => Finset.image (fun x => Max.max a x) t) (HasSups.sups s t)","decl":"lemma biUnion_image_sup_left : s.biUnion (fun a ↦ t.image (a ⊔ ·)) = s ⊻ t := biUnion_image_left\n\n"}
{"name":"Finset.biUnion_image_sup_right","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns t : Finset α\n⊢ Eq (t.biUnion fun b => Finset.image (fun x => Max.max x b) s) (HasSups.sups s t)","decl":"lemma biUnion_image_sup_right : t.biUnion (fun b ↦ s.image (· ⊔ b)) = s ⊻ t := biUnion_image_right\n\n"}
{"name":"Finset.image_sup_product","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns t : Finset α\n⊢ Eq (Finset.image (Function.uncurry fun x1 x2 => Max.max x1 x2) (SProd.sprod s t)) (HasSups.sups s t)","decl":"theorem image_sup_product (s t : Finset α) : (s ×ˢ t).image (uncurry (· ⊔ ·)) = s ⊻ t :=\n  image_uncurry_product _ _ _\n\n"}
{"name":"Finset.sups_assoc","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns t u : Finset α\n⊢ Eq (HasSups.sups (HasSups.sups s t) u) (HasSups.sups s (HasSups.sups t u))","decl":"theorem sups_assoc : s ⊻ t ⊻ u = s ⊻ (t ⊻ u) := image₂_assoc sup_assoc\n\n"}
{"name":"Finset.sups_comm","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns t : Finset α\n⊢ Eq (HasSups.sups s t) (HasSups.sups t s)","decl":"theorem sups_comm : s ⊻ t = t ⊻ s := image₂_comm sup_comm\n\n"}
{"name":"Finset.sups_left_comm","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns t u : Finset α\n⊢ Eq (HasSups.sups s (HasSups.sups t u)) (HasSups.sups t (HasSups.sups s u))","decl":"theorem sups_left_comm : s ⊻ (t ⊻ u) = t ⊻ (s ⊻ u) :=\n  image₂_left_comm sup_left_comm\n\n"}
{"name":"Finset.sups_right_comm","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns t u : Finset α\n⊢ Eq (HasSups.sups (HasSups.sups s t) u) (HasSups.sups (HasSups.sups s u) t)","decl":"theorem sups_right_comm : s ⊻ t ⊻ u = s ⊻ u ⊻ t :=\n  image₂_right_comm sup_right_comm\n\n"}
{"name":"Finset.sups_sups_sups_comm","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeSup α\ns t u v : Finset α\n⊢ Eq (HasSups.sups (HasSups.sups s t) (HasSups.sups u v)) (HasSups.sups (HasSups.sups s u) (HasSups.sups t v))","decl":"theorem sups_sups_sups_comm : s ⊻ t ⊻ (u ⊻ v) = s ⊻ u ⊻ (t ⊻ v) :=\n  image₂_image₂_image₂_comm sup_sup_sup_comm\n\n"}
{"name":"Finset.mem_infs","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns t : Finset α\nc : α\n⊢ Iff (Membership.mem (HasInfs.infs s t) c) (Exists fun a => And (Membership.mem s a) (Exists fun b => And (Membership.mem t b) (Eq (Min.min a b) c)))","decl":"@[simp]\ntheorem mem_infs : c ∈ s ⊼ t ↔ ∃ a ∈ s, ∃ b ∈ t, a ⊓ b = c := by simp [(· ⊼ ·)]\n\n"}
{"name":"Finset.coe_infs","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns t : Finset α\n⊢ Eq (↑(HasInfs.infs s t)) (HasInfs.infs ↑s ↑t)","decl":"@[simp, norm_cast]\ntheorem coe_infs : (↑(s ⊼ t) : Set α) = ↑s ⊼ ↑t :=\n  coe_image₂ _ _ _\n\n"}
{"name":"Finset.card_infs_le","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns t : Finset α\n⊢ LE.le (HasInfs.infs s t).card (HMul.hMul s.card t.card)","decl":"theorem card_infs_le : #(s ⊼ t) ≤ #s * #t := card_image₂_le _ _ _\n\n"}
{"name":"Finset.card_infs_iff","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns t : Finset α\n⊢ Iff (Eq (HasInfs.infs s t).card (HMul.hMul s.card t.card)) (Set.InjOn (fun x => Min.min x.1 x.2) (SProd.sprod ↑s ↑t))","decl":"theorem card_infs_iff : #(s ⊼ t) = #s * #t ↔ (s ×ˢ t : Set (α × α)).InjOn fun x => x.1 ⊓ x.2 :=\n  card_image₂_iff\n\n"}
{"name":"Finset.inf_mem_infs","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns t : Finset α\na b : α\na✝¹ : Membership.mem s a\na✝ : Membership.mem t b\n⊢ Membership.mem (HasInfs.infs s t) (Min.min a b)","decl":"theorem inf_mem_infs : a ∈ s → b ∈ t → a ⊓ b ∈ s ⊼ t :=\n  mem_image₂_of_mem\n\n"}
{"name":"Finset.infs_subset","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns₁ s₂ t₁ t₂ : Finset α\na✝¹ : HasSubset.Subset s₁ s₂\na✝ : HasSubset.Subset t₁ t₂\n⊢ HasSubset.Subset (HasInfs.infs s₁ t₁) (HasInfs.infs s₂ t₂)","decl":"theorem infs_subset : s₁ ⊆ s₂ → t₁ ⊆ t₂ → s₁ ⊼ t₁ ⊆ s₂ ⊼ t₂ :=\n  image₂_subset\n\n"}
{"name":"Finset.infs_subset_left","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns t₁ t₂ : Finset α\na✝ : HasSubset.Subset t₁ t₂\n⊢ HasSubset.Subset (HasInfs.infs s t₁) (HasInfs.infs s t₂)","decl":"theorem infs_subset_left : t₁ ⊆ t₂ → s ⊼ t₁ ⊆ s ⊼ t₂ :=\n  image₂_subset_left\n\n"}
{"name":"Finset.infs_subset_right","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns₁ s₂ t : Finset α\na✝ : HasSubset.Subset s₁ s₂\n⊢ HasSubset.Subset (HasInfs.infs s₁ t) (HasInfs.infs s₂ t)","decl":"theorem infs_subset_right : s₁ ⊆ s₂ → s₁ ⊼ t ⊆ s₂ ⊼ t :=\n  image₂_subset_right\n\n"}
{"name":"Finset.image_subset_infs_left","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns t : Finset α\nb : α\na✝ : Membership.mem t b\n⊢ HasSubset.Subset (Finset.image (fun x => Min.min x b) s) (HasInfs.infs s t)","decl":"lemma image_subset_infs_left : b ∈ t → s.image (· ⊓ b) ⊆ s ⊼ t := image_subset_image₂_left\n\n"}
{"name":"Finset.image_subset_infs_right","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns t : Finset α\na : α\na✝ : Membership.mem s a\n⊢ HasSubset.Subset (Finset.image (fun x => Min.min a x) t) (HasInfs.infs s t)","decl":"lemma image_subset_infs_right : a ∈ s → t.image (a ⊓ ·) ⊆ s ⊼ t := image_subset_image₂_right\n\n"}
{"name":"Finset.forall_infs_iff","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns t : Finset α\np : α → Prop\n⊢ Iff (∀ (c : α), Membership.mem (HasInfs.infs s t) c → p c) (∀ (a : α), Membership.mem s a → ∀ (b : α), Membership.mem t b → p (Min.min a b))","decl":"theorem forall_infs_iff {p : α → Prop} : (∀ c ∈ s ⊼ t, p c) ↔ ∀ a ∈ s, ∀ b ∈ t, p (a ⊓ b) :=\n  forall_mem_image₂\n\n"}
{"name":"Finset.infs_subset_iff","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns t u : Finset α\n⊢ Iff (HasSubset.Subset (HasInfs.infs s t) u) (∀ (a : α), Membership.mem s a → ∀ (b : α), Membership.mem t b → Membership.mem u (Min.min a b))","decl":"@[simp]\ntheorem infs_subset_iff : s ⊼ t ⊆ u ↔ ∀ a ∈ s, ∀ b ∈ t, a ⊓ b ∈ u :=\n  image₂_subset_iff\n\n"}
{"name":"Finset.infs_nonempty","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns t : Finset α\n⊢ Iff (HasInfs.infs s t).Nonempty (And s.Nonempty t.Nonempty)","decl":"@[simp]\ntheorem infs_nonempty : (s ⊼ t).Nonempty ↔ s.Nonempty ∧ t.Nonempty :=\n  image₂_nonempty_iff\n\n"}
{"name":"Finset.Nonempty.infs","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns t : Finset α\na✝¹ : s.Nonempty\na✝ : t.Nonempty\n⊢ (HasInfs.infs s t).Nonempty","decl":"@[aesop safe apply (rule_sets := [finsetNonempty])]\nprotected theorem Nonempty.infs : s.Nonempty → t.Nonempty → (s ⊼ t).Nonempty :=\n  Nonempty.image₂\n\n"}
{"name":"Finset.Nonempty.of_infs_left","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns t : Finset α\na✝ : (HasInfs.infs s t).Nonempty\n⊢ s.Nonempty","decl":"theorem Nonempty.of_infs_left : (s ⊼ t).Nonempty → s.Nonempty :=\n  Nonempty.of_image₂_left\n\n"}
{"name":"Finset.Nonempty.of_infs_right","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns t : Finset α\na✝ : (HasInfs.infs s t).Nonempty\n⊢ t.Nonempty","decl":"theorem Nonempty.of_infs_right : (s ⊼ t).Nonempty → t.Nonempty :=\n  Nonempty.of_image₂_right\n\n"}
{"name":"Finset.empty_infs","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\nt : Finset α\n⊢ Eq (HasInfs.infs EmptyCollection.emptyCollection t) EmptyCollection.emptyCollection","decl":"@[simp]\ntheorem empty_infs : ∅ ⊼ t = ∅ :=\n  image₂_empty_left\n\n"}
{"name":"Finset.infs_empty","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns : Finset α\n⊢ Eq (HasInfs.infs s EmptyCollection.emptyCollection) EmptyCollection.emptyCollection","decl":"@[simp]\ntheorem infs_empty : s ⊼ ∅ = ∅ :=\n  image₂_empty_right\n\n"}
{"name":"Finset.infs_eq_empty","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns t : Finset α\n⊢ Iff (Eq (HasInfs.infs s t) EmptyCollection.emptyCollection) (Or (Eq s EmptyCollection.emptyCollection) (Eq t EmptyCollection.emptyCollection))","decl":"@[simp]\ntheorem infs_eq_empty : s ⊼ t = ∅ ↔ s = ∅ ∨ t = ∅ :=\n  image₂_eq_empty_iff\n\n"}
{"name":"Finset.singleton_infs","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\nt : Finset α\na : α\n⊢ Eq (HasInfs.infs (Singleton.singleton a) t) (Finset.image (fun x => Min.min a x) t)","decl":"@[simp] lemma singleton_infs : {a} ⊼ t = t.image (a ⊓ ·) := image₂_singleton_left\n\n"}
{"name":"Finset.infs_singleton","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns : Finset α\nb : α\n⊢ Eq (HasInfs.infs s (Singleton.singleton b)) (Finset.image (fun x => Min.min x b) s)","decl":"@[simp] lemma infs_singleton : s ⊼ {b} = s.image (· ⊓ b) := image₂_singleton_right\n\n"}
{"name":"Finset.singleton_infs_singleton","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\na b : α\n⊢ Eq (HasInfs.infs (Singleton.singleton a) (Singleton.singleton b)) (Singleton.singleton (Min.min a b))","decl":"theorem singleton_infs_singleton : ({a} ⊼ {b} : Finset α) = {a ⊓ b} :=\n  image₂_singleton\n\n"}
{"name":"Finset.infs_union_left","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns₁ s₂ t : Finset α\n⊢ Eq (HasInfs.infs (Union.union s₁ s₂) t) (Union.union (HasInfs.infs s₁ t) (HasInfs.infs s₂ t))","decl":"theorem infs_union_left : (s₁ ∪ s₂) ⊼ t = s₁ ⊼ t ∪ s₂ ⊼ t :=\n  image₂_union_left\n\n"}
{"name":"Finset.infs_union_right","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns t₁ t₂ : Finset α\n⊢ Eq (HasInfs.infs s (Union.union t₁ t₂)) (Union.union (HasInfs.infs s t₁) (HasInfs.infs s t₂))","decl":"theorem infs_union_right : s ⊼ (t₁ ∪ t₂) = s ⊼ t₁ ∪ s ⊼ t₂ :=\n  image₂_union_right\n\n"}
{"name":"Finset.infs_inter_subset_left","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns₁ s₂ t : Finset α\n⊢ HasSubset.Subset (HasInfs.infs (Inter.inter s₁ s₂) t) (Inter.inter (HasInfs.infs s₁ t) (HasInfs.infs s₂ t))","decl":"theorem infs_inter_subset_left : (s₁ ∩ s₂) ⊼ t ⊆ s₁ ⊼ t ∩ s₂ ⊼ t :=\n  image₂_inter_subset_left\n\n"}
{"name":"Finset.infs_inter_subset_right","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns t₁ t₂ : Finset α\n⊢ HasSubset.Subset (HasInfs.infs s (Inter.inter t₁ t₂)) (Inter.inter (HasInfs.infs s t₁) (HasInfs.infs s t₂))","decl":"theorem infs_inter_subset_right : s ⊼ (t₁ ∩ t₂) ⊆ s ⊼ t₁ ∩ s ⊼ t₂ :=\n  image₂_inter_subset_right\n\n"}
{"name":"Finset.subset_infs","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\nu : Finset α\ns t : Set α\na✝ : HasSubset.Subset (↑u) (HasInfs.infs s t)\n⊢ Exists fun s' => Exists fun t' => And (HasSubset.Subset (↑s') s) (And (HasSubset.Subset (↑t') t) (HasSubset.Subset u (HasInfs.infs s' t')))","decl":"theorem subset_infs {s t : Set α} :\n    ↑u ⊆ s ⊼ t → ∃ s' t' : Finset α, ↑s' ⊆ s ∧ ↑t' ⊆ t ∧ u ⊆ s' ⊼ t' :=\n  subset_set_image₂\n\n"}
{"name":"Finset.image_infs","module":"Mathlib.Data.Finset.Sups","initialProofState":"F : Type u_1\nα : Type u_2\nβ : Type u_3\ninst✝⁵ : DecidableEq α\ninst✝⁴ : DecidableEq β\ninst✝³ : SemilatticeInf α\ninst✝² : SemilatticeInf β\ninst✝¹ : FunLike F α β\ninst✝ : InfHomClass F α β\nf : F\ns t : Finset α\n⊢ Eq (Finset.image (⇑f) (HasInfs.infs s t)) (HasInfs.infs (Finset.image (⇑f) s) (Finset.image (⇑f) t))","decl":"lemma image_infs (f : F) (s t : Finset α) : image f (s ⊼ t) = image f s ⊼ image f t :=\n  image_image₂_distrib <| map_inf f\n\n"}
{"name":"Finset.map_infs","module":"Mathlib.Data.Finset.Sups","initialProofState":"F : Type u_1\nα : Type u_2\nβ : Type u_3\ninst✝⁵ : DecidableEq α\ninst✝⁴ : DecidableEq β\ninst✝³ : SemilatticeInf α\ninst✝² : SemilatticeInf β\ninst✝¹ : FunLike F α β\ninst✝ : InfHomClass F α β\nf : F\nhf : Function.Injective ⇑f\ns t : Finset α\n⊢ Eq (Finset.map { toFun := ⇑f, inj' := hf } (HasInfs.infs s t)) (HasInfs.infs (Finset.map { toFun := ⇑f, inj' := hf } s) (Finset.map { toFun := ⇑f, inj' := hf } t))","decl":"lemma map_infs (f : F) (hf) (s t : Finset α) :\n    map ⟨f, hf⟩ (s ⊼ t) = map ⟨f, hf⟩ s ⊼ map ⟨f, hf⟩ t := by\n  simpa [map_eq_image] using image_infs f s t\n\n"}
{"name":"Finset.subset_infs_self","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns : Finset α\n⊢ HasSubset.Subset s (HasInfs.infs s s)","decl":"lemma subset_infs_self : s ⊆ s ⊼ s := fun _a ha ↦ mem_infs.2 ⟨_, ha, _, ha, inf_idem _⟩\n"}
{"name":"Finset.infs_self_subset","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns : Finset α\n⊢ Iff (HasSubset.Subset (HasInfs.infs s s) s) (InfClosed ↑s)","decl":"lemma infs_self_subset : s ⊼ s ⊆ s ↔ InfClosed (s : Set α) := infs_subset_iff\n"}
{"name":"Finset.infs_self","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns : Finset α\n⊢ Iff (Eq (HasInfs.infs s s) s) (InfClosed ↑s)","decl":"@[simp] lemma infs_self : s ⊼ s = s ↔ InfClosed (s : Set α) := by simp [← coe_inj]\n\n"}
{"name":"Finset.univ_infs_univ","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝² : DecidableEq α\ninst✝¹ : SemilatticeInf α\ninst✝ : Fintype α\n⊢ Eq (HasInfs.infs Finset.univ Finset.univ) Finset.univ","decl":"@[simp] lemma univ_infs_univ [Fintype α] : (univ : Finset α) ⊼ univ = univ := by simp\n\n"}
{"name":"Finset.filter_infs_le","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝² : DecidableEq α\ninst✝¹ : SemilatticeInf α\ninst✝ : DecidableRel fun x1 x2 => LE.le x1 x2\ns t : Finset α\na : α\n⊢ Eq (Finset.filter (fun b => LE.le a b) (HasInfs.infs s t)) (HasInfs.infs (Finset.filter (fun b => LE.le a b) s) (Finset.filter (fun b => LE.le a b) t))","decl":"lemma filter_infs_le [DecidableRel (α := α) (· ≤ ·)] (s t : Finset α) (a : α) :\n    {b ∈ s ⊼ t | a ≤ b} = {b ∈ s | a ≤ b} ⊼ {b ∈ t | a ≤ b} := by\n  simp only [← coe_inj, coe_filter, coe_infs, ← mem_coe, Set.sep_infs_le]\n\n"}
{"name":"Finset.biUnion_image_inf_left","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns t : Finset α\n⊢ Eq (s.biUnion fun a => Finset.image (fun x => Min.min a x) t) (HasInfs.infs s t)","decl":"lemma biUnion_image_inf_left : s.biUnion (fun a ↦ t.image (a ⊓ ·)) = s ⊼ t := biUnion_image_left\n\n"}
{"name":"Finset.biUnion_image_inf_right","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns t : Finset α\n⊢ Eq (t.biUnion fun b => Finset.image (fun x => Min.min x b) s) (HasInfs.infs s t)","decl":"lemma biUnion_image_inf_right : t.biUnion (fun b ↦ s.image (· ⊓ b)) = s ⊼ t := biUnion_image_right\n\n"}
{"name":"Finset.image_inf_product","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns t : Finset α\n⊢ Eq (Finset.image (Function.uncurry fun x1 x2 => Min.min x1 x2) (SProd.sprod s t)) (HasInfs.infs s t)","decl":"theorem image_inf_product (s t : Finset α) : (s ×ˢ t).image (uncurry (· ⊓ ·)) = s ⊼ t :=\n  image_uncurry_product _ _ _\n\n"}
{"name":"Finset.infs_assoc","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns t u : Finset α\n⊢ Eq (HasInfs.infs (HasInfs.infs s t) u) (HasInfs.infs s (HasInfs.infs t u))","decl":"theorem infs_assoc : s ⊼ t ⊼ u = s ⊼ (t ⊼ u) := image₂_assoc inf_assoc\n\n"}
{"name":"Finset.infs_comm","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns t : Finset α\n⊢ Eq (HasInfs.infs s t) (HasInfs.infs t s)","decl":"theorem infs_comm : s ⊼ t = t ⊼ s := image₂_comm inf_comm\n\n"}
{"name":"Finset.infs_left_comm","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns t u : Finset α\n⊢ Eq (HasInfs.infs s (HasInfs.infs t u)) (HasInfs.infs t (HasInfs.infs s u))","decl":"theorem infs_left_comm : s ⊼ (t ⊼ u) = t ⊼ (s ⊼ u) :=\n  image₂_left_comm inf_left_comm\n\n"}
{"name":"Finset.infs_right_comm","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns t u : Finset α\n⊢ Eq (HasInfs.infs (HasInfs.infs s t) u) (HasInfs.infs (HasInfs.infs s u) t)","decl":"theorem infs_right_comm : s ⊼ t ⊼ u = s ⊼ u ⊼ t :=\n  image₂_right_comm inf_right_comm\n\n"}
{"name":"Finset.infs_infs_infs_comm","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : SemilatticeInf α\ns t u v : Finset α\n⊢ Eq (HasInfs.infs (HasInfs.infs s t) (HasInfs.infs u v)) (HasInfs.infs (HasInfs.infs s u) (HasInfs.infs t v))","decl":"theorem infs_infs_infs_comm : s ⊼ t ⊼ (u ⊼ v) = s ⊼ u ⊼ (t ⊼ v) :=\n  image₂_image₂_image₂_comm inf_inf_inf_comm\n\n"}
{"name":"Finset.sups_infs_subset_left","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : DistribLattice α\ns t u : Finset α\n⊢ HasSubset.Subset (HasSups.sups s (HasInfs.infs t u)) (HasInfs.infs (HasSups.sups s t) (HasSups.sups s u))","decl":"theorem sups_infs_subset_left : s ⊻ t ⊼ u ⊆ (s ⊻ t) ⊼ (s ⊻ u) :=\n  image₂_distrib_subset_left sup_inf_left\n\n"}
{"name":"Finset.sups_infs_subset_right","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : DistribLattice α\ns t u : Finset α\n⊢ HasSubset.Subset (HasSups.sups (HasInfs.infs t u) s) (HasInfs.infs (HasSups.sups t s) (HasSups.sups u s))","decl":"theorem sups_infs_subset_right : t ⊼ u ⊻ s ⊆ (t ⊻ s) ⊼ (u ⊻ s) :=\n  image₂_distrib_subset_right sup_inf_right\n\n"}
{"name":"Finset.infs_sups_subset_left","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : DistribLattice α\ns t u : Finset α\n⊢ HasSubset.Subset (HasInfs.infs s (HasSups.sups t u)) (HasSups.sups (HasInfs.infs s t) (HasInfs.infs s u))","decl":"theorem infs_sups_subset_left : s ⊼ (t ⊻ u) ⊆ s ⊼ t ⊻ s ⊼ u :=\n  image₂_distrib_subset_left inf_sup_left\n\n"}
{"name":"Finset.infs_sups_subset_right","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : DistribLattice α\ns t u : Finset α\n⊢ HasSubset.Subset (HasInfs.infs (HasSups.sups t u) s) (HasSups.sups (HasInfs.infs t s) (HasInfs.infs u s))","decl":"theorem infs_sups_subset_right : (t ⊻ u) ⊼ s ⊆ t ⊼ s ⊻ u ⊼ s :=\n  image₂_distrib_subset_right inf_sup_right\n\n"}
{"name":"Finset.powerset_union","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝ : DecidableEq α\ns t : Finset α\n⊢ Eq (Union.union s t).powerset (HasSups.sups s.powerset t.powerset)","decl":"@[simp] lemma powerset_union (s t : Finset α) : (s ∪ t).powerset = s.powerset ⊻ t.powerset := by\n  ext u\n  simp only [mem_sups, mem_powerset, le_eq_subset, sup_eq_union]\n  refine ⟨fun h ↦ ⟨_, inter_subset_left (s₂ := u), _, inter_subset_left (s₂ := u), ?_⟩, ?_⟩\n  · rwa [← union_inter_distrib_right, inter_eq_right]\n  · rintro ⟨v, hv, w, hw, rfl⟩\n    exact union_subset_union hv hw\n\n"}
{"name":"Finset.powerset_inter","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝ : DecidableEq α\ns t : Finset α\n⊢ Eq (Inter.inter s t).powerset (HasInfs.infs s.powerset t.powerset)","decl":"@[simp] lemma powerset_inter (s t : Finset α) : (s ∩ t).powerset = s.powerset ⊼ t.powerset := by\n  ext u\n  simp only [mem_infs, mem_powerset, le_eq_subset, inf_eq_inter]\n  refine ⟨fun h ↦ ⟨_, inter_subset_left (s₂ := u), _, inter_subset_left (s₂ := u), ?_⟩, ?_⟩\n  · rwa [← inter_inter_distrib_right, inter_eq_right]\n  · rintro ⟨v, hv, w, hw, rfl⟩\n    exact inter_subset_inter hv hw\n\n"}
{"name":"Finset.powerset_sups_powerset_self","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝ : DecidableEq α\ns : Finset α\n⊢ Eq (HasSups.sups s.powerset s.powerset) s.powerset","decl":"@[simp] lemma powerset_sups_powerset_self (s : Finset α) :\n    s.powerset ⊻ s.powerset = s.powerset := by simp [← powerset_union]\n\n"}
{"name":"Finset.powerset_infs_powerset_self","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝ : DecidableEq α\ns : Finset α\n⊢ Eq (HasInfs.infs s.powerset s.powerset) s.powerset","decl":"@[simp] lemma powerset_infs_powerset_self (s : Finset α) :\n    s.powerset ⊼ s.powerset = s.powerset := by simp [← powerset_inter]\n\n"}
{"name":"Finset.union_mem_sups","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝ : DecidableEq α\n𝒜 ℬ : Finset (Finset α)\ns t : Finset α\na✝¹ : Membership.mem 𝒜 s\na✝ : Membership.mem ℬ t\n⊢ Membership.mem (HasSups.sups 𝒜 ℬ) (Union.union s t)","decl":"lemma union_mem_sups : s ∈ 𝒜 → t ∈ ℬ → s ∪ t ∈ 𝒜 ⊻ ℬ := sup_mem_sups\n"}
{"name":"Finset.inter_mem_infs","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝ : DecidableEq α\n𝒜 ℬ : Finset (Finset α)\ns t : Finset α\na✝¹ : Membership.mem 𝒜 s\na✝ : Membership.mem ℬ t\n⊢ Membership.mem (HasInfs.infs 𝒜 ℬ) (Inter.inter s t)","decl":"lemma inter_mem_infs : s ∈ 𝒜 → t ∈ ℬ → s ∩ t ∈ 𝒜 ⊼ ℬ := inf_mem_infs\n\n"}
{"name":"Finset.mem_disjSups","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝³ : DecidableEq α\ninst✝² : SemilatticeSup α\ninst✝¹ : OrderBot α\ninst✝ : DecidableRel Disjoint\ns t : Finset α\nc : α\n⊢ Iff (Membership.mem (s.disjSups t) c) (Exists fun a => And (Membership.mem s a) (Exists fun b => And (Membership.mem t b) (And (Disjoint a b) (Eq (Max.max a b) c))))","decl":"@[simp]\ntheorem mem_disjSups : c ∈ s ○ t ↔ ∃ a ∈ s, ∃ b ∈ t, Disjoint a b ∧ a ⊔ b = c := by\n  simp [disjSups, and_assoc]\n\n"}
{"name":"Finset.disjSups_subset_sups","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝³ : DecidableEq α\ninst✝² : SemilatticeSup α\ninst✝¹ : OrderBot α\ninst✝ : DecidableRel Disjoint\ns t : Finset α\n⊢ HasSubset.Subset (s.disjSups t) (HasSups.sups s t)","decl":"theorem disjSups_subset_sups : s ○ t ⊆ s ⊻ t := by\n  simp_rw [subset_iff, mem_sups, mem_disjSups]\n  exact fun c ⟨a, b, ha, hb, _, hc⟩ => ⟨a, b, ha, hb, hc⟩\n\n"}
{"name":"Finset.card_disjSups_le","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝³ : DecidableEq α\ninst✝² : SemilatticeSup α\ninst✝¹ : OrderBot α\ninst✝ : DecidableRel Disjoint\ns t : Finset α\n⊢ LE.le (s.disjSups t).card (HMul.hMul s.card t.card)","decl":"theorem card_disjSups_le : #(s ○ t) ≤ #s * #t :=\n  (card_le_card disjSups_subset_sups).trans <| card_sups_le _ _\n\n"}
{"name":"Finset.disjSups_subset","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝³ : DecidableEq α\ninst✝² : SemilatticeSup α\ninst✝¹ : OrderBot α\ninst✝ : DecidableRel Disjoint\ns₁ s₂ t₁ t₂ : Finset α\nhs : HasSubset.Subset s₁ s₂\nht : HasSubset.Subset t₁ t₂\n⊢ HasSubset.Subset (s₁.disjSups t₁) (s₂.disjSups t₂)","decl":"theorem disjSups_subset (hs : s₁ ⊆ s₂) (ht : t₁ ⊆ t₂) : s₁ ○ t₁ ⊆ s₂ ○ t₂ :=\n  image_subset_image <| filter_subset_filter _ <| product_subset_product hs ht\n\n"}
{"name":"Finset.disjSups_subset_left","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝³ : DecidableEq α\ninst✝² : SemilatticeSup α\ninst✝¹ : OrderBot α\ninst✝ : DecidableRel Disjoint\ns t₁ t₂ : Finset α\nht : HasSubset.Subset t₁ t₂\n⊢ HasSubset.Subset (s.disjSups t₁) (s.disjSups t₂)","decl":"theorem disjSups_subset_left (ht : t₁ ⊆ t₂) : s ○ t₁ ⊆ s ○ t₂ :=\n  disjSups_subset Subset.rfl ht\n\n"}
{"name":"Finset.disjSups_subset_right","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝³ : DecidableEq α\ninst✝² : SemilatticeSup α\ninst✝¹ : OrderBot α\ninst✝ : DecidableRel Disjoint\ns₁ s₂ t : Finset α\nhs : HasSubset.Subset s₁ s₂\n⊢ HasSubset.Subset (s₁.disjSups t) (s₂.disjSups t)","decl":"theorem disjSups_subset_right (hs : s₁ ⊆ s₂) : s₁ ○ t ⊆ s₂ ○ t :=\n  disjSups_subset hs Subset.rfl\n\n"}
{"name":"Finset.forall_disjSups_iff","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝³ : DecidableEq α\ninst✝² : SemilatticeSup α\ninst✝¹ : OrderBot α\ninst✝ : DecidableRel Disjoint\ns t : Finset α\np : α → Prop\n⊢ Iff (∀ (c : α), Membership.mem (s.disjSups t) c → p c) (∀ (a : α), Membership.mem s a → ∀ (b : α), Membership.mem t b → Disjoint a b → p (Max.max a b))","decl":"theorem forall_disjSups_iff {p : α → Prop} :\n    (∀ c ∈ s ○ t, p c) ↔ ∀ a ∈ s, ∀ b ∈ t, Disjoint a b → p (a ⊔ b) := by\n  simp_rw [mem_disjSups]\n  refine ⟨fun h a ha b hb hab => h _ ⟨_, ha, _, hb, hab, rfl⟩, ?_⟩\n  rintro h _ ⟨a, ha, b, hb, hab, rfl⟩\n  exact h _ ha _ hb hab\n\n"}
{"name":"Finset.disjSups_subset_iff","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝³ : DecidableEq α\ninst✝² : SemilatticeSup α\ninst✝¹ : OrderBot α\ninst✝ : DecidableRel Disjoint\ns t u : Finset α\n⊢ Iff (HasSubset.Subset (s.disjSups t) u) (∀ (a : α), Membership.mem s a → ∀ (b : α), Membership.mem t b → Disjoint a b → Membership.mem u (Max.max a b))","decl":"@[simp]\ntheorem disjSups_subset_iff : s ○ t ⊆ u ↔ ∀ a ∈ s, ∀ b ∈ t, Disjoint a b → a ⊔ b ∈ u :=\n  forall_disjSups_iff\n\n"}
{"name":"Finset.Nonempty.of_disjSups_left","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝³ : DecidableEq α\ninst✝² : SemilatticeSup α\ninst✝¹ : OrderBot α\ninst✝ : DecidableRel Disjoint\ns t : Finset α\na✝ : (s.disjSups t).Nonempty\n⊢ s.Nonempty","decl":"theorem Nonempty.of_disjSups_left : (s ○ t).Nonempty → s.Nonempty := by\n  simp_rw [Finset.Nonempty, mem_disjSups]\n  exact fun ⟨_, a, ha, _⟩ => ⟨a, ha⟩\n\n"}
{"name":"Finset.Nonempty.of_disjSups_right","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝³ : DecidableEq α\ninst✝² : SemilatticeSup α\ninst✝¹ : OrderBot α\ninst✝ : DecidableRel Disjoint\ns t : Finset α\na✝ : (s.disjSups t).Nonempty\n⊢ t.Nonempty","decl":"theorem Nonempty.of_disjSups_right : (s ○ t).Nonempty → t.Nonempty := by\n  simp_rw [Finset.Nonempty, mem_disjSups]\n  exact fun ⟨_, _, _, b, hb, _⟩ => ⟨b, hb⟩\n\n"}
{"name":"Finset.disjSups_empty_left","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝³ : DecidableEq α\ninst✝² : SemilatticeSup α\ninst✝¹ : OrderBot α\ninst✝ : DecidableRel Disjoint\nt : Finset α\n⊢ Eq (EmptyCollection.emptyCollection.disjSups t) EmptyCollection.emptyCollection","decl":"@[simp]\ntheorem disjSups_empty_left : ∅ ○ t = ∅ := by simp [disjSups]\n\n"}
{"name":"Finset.disjSups_empty_right","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝³ : DecidableEq α\ninst✝² : SemilatticeSup α\ninst✝¹ : OrderBot α\ninst✝ : DecidableRel Disjoint\ns : Finset α\n⊢ Eq (s.disjSups EmptyCollection.emptyCollection) EmptyCollection.emptyCollection","decl":"@[simp]\ntheorem disjSups_empty_right : s ○ ∅ = ∅ := by simp [disjSups]\n\n"}
{"name":"Finset.disjSups_singleton","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝³ : DecidableEq α\ninst✝² : SemilatticeSup α\ninst✝¹ : OrderBot α\ninst✝ : DecidableRel Disjoint\na b : α\n⊢ Eq ((Singleton.singleton a).disjSups (Singleton.singleton b)) (ite (Disjoint a b) (Singleton.singleton (Max.max a b)) EmptyCollection.emptyCollection)","decl":"theorem disjSups_singleton : ({a} ○ {b} : Finset α) = if Disjoint a b then {a ⊔ b} else ∅ := by\n  split_ifs with h <;> simp [disjSups, filter_singleton, h]\n\n"}
{"name":"Finset.disjSups_union_left","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝³ : DecidableEq α\ninst✝² : SemilatticeSup α\ninst✝¹ : OrderBot α\ninst✝ : DecidableRel Disjoint\ns₁ s₂ t : Finset α\n⊢ Eq ((Union.union s₁ s₂).disjSups t) (Union.union (s₁.disjSups t) (s₂.disjSups t))","decl":"theorem disjSups_union_left : (s₁ ∪ s₂) ○ t = s₁ ○ t ∪ s₂ ○ t := by\n  simp [disjSups, filter_union, image_union]\n\n"}
{"name":"Finset.disjSups_union_right","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝³ : DecidableEq α\ninst✝² : SemilatticeSup α\ninst✝¹ : OrderBot α\ninst✝ : DecidableRel Disjoint\ns t₁ t₂ : Finset α\n⊢ Eq (s.disjSups (Union.union t₁ t₂)) (Union.union (s.disjSups t₁) (s.disjSups t₂))","decl":"theorem disjSups_union_right : s ○ (t₁ ∪ t₂) = s ○ t₁ ∪ s ○ t₂ := by\n  simp [disjSups, filter_union, image_union]\n\n"}
{"name":"Finset.disjSups_inter_subset_left","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝³ : DecidableEq α\ninst✝² : SemilatticeSup α\ninst✝¹ : OrderBot α\ninst✝ : DecidableRel Disjoint\ns₁ s₂ t : Finset α\n⊢ HasSubset.Subset ((Inter.inter s₁ s₂).disjSups t) (Inter.inter (s₁.disjSups t) (s₂.disjSups t))","decl":"theorem disjSups_inter_subset_left : (s₁ ∩ s₂) ○ t ⊆ s₁ ○ t ∩ s₂ ○ t := by\n  simpa only [disjSups, inter_product, filter_inter_distrib] using image_inter_subset _ _ _\n\n"}
{"name":"Finset.disjSups_inter_subset_right","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝³ : DecidableEq α\ninst✝² : SemilatticeSup α\ninst✝¹ : OrderBot α\ninst✝ : DecidableRel Disjoint\ns t₁ t₂ : Finset α\n⊢ HasSubset.Subset (s.disjSups (Inter.inter t₁ t₂)) (Inter.inter (s.disjSups t₁) (s.disjSups t₂))","decl":"theorem disjSups_inter_subset_right : s ○ (t₁ ∩ t₂) ⊆ s ○ t₁ ∩ s ○ t₂ := by\n  simpa only [disjSups, product_inter, filter_inter_distrib] using image_inter_subset _ _ _\n\n"}
{"name":"Finset.disjSups_comm","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝³ : DecidableEq α\ninst✝² : SemilatticeSup α\ninst✝¹ : OrderBot α\ninst✝ : DecidableRel Disjoint\ns t : Finset α\n⊢ Eq (s.disjSups t) (t.disjSups s)","decl":"theorem disjSups_comm : s ○ t = t ○ s := by\n  ext\n  rw [mem_disjSups, mem_disjSups]\n  -- Porting note: `exists₂_comm` no longer works with `∃ _ ∈ _, ∃ _ ∈ _, _`\n  constructor <;>\n  · rintro ⟨a, ha, b, hb, hd, hs⟩\n    rw [disjoint_comm] at hd\n    rw [sup_comm] at hs\n    exact ⟨b, hb, a, ha, hd, hs⟩\n\n"}
{"name":"Finset.instCommutativeDisjSups","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝³ : DecidableEq α\ninst✝² : SemilatticeSup α\ninst✝¹ : OrderBot α\ninst✝ : DecidableRel Disjoint\n⊢ Std.Commutative fun x1 x2 => x1.disjSups x2","decl":"instance : @Std.Commutative (Finset α) (· ○ ·) := ⟨disjSups_comm⟩\n\n"}
{"name":"Finset.disjSups_assoc","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝³ : DecidableEq α\ninst✝² : DistribLattice α\ninst✝¹ : OrderBot α\ninst✝ : DecidableRel Disjoint\ns t u : Finset α\n⊢ Eq ((s.disjSups t).disjSups u) (s.disjSups (t.disjSups u))","decl":"theorem disjSups_assoc : ∀ s t u : Finset α, s ○ t ○ u = s ○ (t ○ u) := by\n  refine (associative_of_commutative_of_le inferInstance ?_).assoc\n  simp only [le_eq_subset, disjSups_subset_iff, mem_disjSups]\n  rintro s t u _ ⟨a, ha, b, hb, hab, rfl⟩ c hc habc\n  rw [disjoint_sup_left] at habc\n  exact ⟨a, ha, _, ⟨b, hb, c, hc, habc.2, rfl⟩, hab.sup_right habc.1, (sup_assoc ..).symm⟩\n\n"}
{"name":"Finset.instAssociativeDisjSups","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝³ : DecidableEq α\ninst✝² : DistribLattice α\ninst✝¹ : OrderBot α\ninst✝ : DecidableRel Disjoint\n⊢ Std.Associative fun x1 x2 => x1.disjSups x2","decl":"instance : @Std.Associative (Finset α) (· ○ ·) := ⟨disjSups_assoc⟩\n\n"}
{"name":"Finset.disjSups_left_comm","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝³ : DecidableEq α\ninst✝² : DistribLattice α\ninst✝¹ : OrderBot α\ninst✝ : DecidableRel Disjoint\ns t u : Finset α\n⊢ Eq (s.disjSups (t.disjSups u)) (t.disjSups (s.disjSups u))","decl":"theorem disjSups_left_comm : s ○ (t ○ u) = t ○ (s ○ u) := by\n  simp_rw [← disjSups_assoc, disjSups_comm s]\n\n"}
{"name":"Finset.disjSups_right_comm","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝³ : DecidableEq α\ninst✝² : DistribLattice α\ninst✝¹ : OrderBot α\ninst✝ : DecidableRel Disjoint\ns t u : Finset α\n⊢ Eq ((s.disjSups t).disjSups u) ((s.disjSups u).disjSups t)","decl":"theorem disjSups_right_comm : s ○ t ○ u = s ○ u ○ t := by simp_rw [disjSups_assoc, disjSups_comm]\n\n"}
{"name":"Finset.disjSups_disjSups_disjSups_comm","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝³ : DecidableEq α\ninst✝² : DistribLattice α\ninst✝¹ : OrderBot α\ninst✝ : DecidableRel Disjoint\ns t u v : Finset α\n⊢ Eq ((s.disjSups t).disjSups (u.disjSups v)) ((s.disjSups u).disjSups (t.disjSups v))","decl":"theorem disjSups_disjSups_disjSups_comm : s ○ t ○ (u ○ v) = s ○ u ○ (t ○ v) := by\n  simp_rw [← disjSups_assoc, disjSups_right_comm]\n\n"}
{"name":"Finset.mem_diffs","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns t : Finset α\nc : α\n⊢ Iff (Membership.mem (s.diffs t) c) (Exists fun a => And (Membership.mem s a) (Exists fun b => And (Membership.mem t b) (Eq (SDiff.sdiff a b) c)))","decl":"@[simp] lemma mem_diffs : c ∈ s \\\\ t ↔ ∃ a ∈ s, ∃ b ∈ t, a \\ b = c := by simp [(· \\\\ ·)]\n\n"}
{"name":"Finset.coe_diffs","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns t : Finset α\n⊢ Eq (↑(s.diffs t)) (Set.image2 (fun x1 x2 => SDiff.sdiff x1 x2) ↑s ↑t)","decl":"@[simp, norm_cast] lemma coe_diffs : (↑(s \\\\ t) : Set α) = Set.image2 (· \\ ·) s t :=\n  coe_image₂ _ _ _\n\n"}
{"name":"Finset.card_diffs_le","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns t : Finset α\n⊢ LE.le (s.diffs t).card (HMul.hMul s.card t.card)","decl":"lemma card_diffs_le : #(s \\\\ t) ≤ #s * #t := card_image₂_le _ _ _\n\n"}
{"name":"Finset.card_diffs_iff","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns t : Finset α\n⊢ Iff (Eq (s.diffs t).card (HMul.hMul s.card t.card)) (Set.InjOn (fun x => SDiff.sdiff x.1 x.2) (SProd.sprod ↑s ↑t))","decl":"lemma card_diffs_iff : #(s \\\\ t) = #s * #t ↔ (s ×ˢ t : Set (α × α)).InjOn fun x ↦ x.1 \\ x.2 :=\n  card_image₂_iff\n\n"}
{"name":"Finset.sdiff_mem_diffs","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns t : Finset α\na b : α\na✝¹ : Membership.mem s a\na✝ : Membership.mem t b\n⊢ Membership.mem (s.diffs t) (SDiff.sdiff a b)","decl":"lemma sdiff_mem_diffs : a ∈ s → b ∈ t → a \\ b ∈ s \\\\ t := mem_image₂_of_mem\n\n"}
{"name":"Finset.diffs_subset","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns₁ s₂ t₁ t₂ : Finset α\na✝¹ : HasSubset.Subset s₁ s₂\na✝ : HasSubset.Subset t₁ t₂\n⊢ HasSubset.Subset (s₁.diffs t₁) (s₂.diffs t₂)","decl":"lemma diffs_subset : s₁ ⊆ s₂ → t₁ ⊆ t₂ → s₁ \\\\ t₁ ⊆ s₂ \\\\ t₂ := image₂_subset\n"}
{"name":"Finset.diffs_subset_left","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns t₁ t₂ : Finset α\na✝ : HasSubset.Subset t₁ t₂\n⊢ HasSubset.Subset (s.diffs t₁) (s.diffs t₂)","decl":"lemma diffs_subset_left : t₁ ⊆ t₂ → s \\\\ t₁ ⊆ s \\\\ t₂ := image₂_subset_left\n"}
{"name":"Finset.diffs_subset_right","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns₁ s₂ t : Finset α\na✝ : HasSubset.Subset s₁ s₂\n⊢ HasSubset.Subset (s₁.diffs t) (s₂.diffs t)","decl":"lemma diffs_subset_right : s₁ ⊆ s₂ → s₁ \\\\ t ⊆ s₂ \\\\ t := image₂_subset_right\n\n"}
{"name":"Finset.image_subset_diffs_left","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns t : Finset α\nb : α\na✝ : Membership.mem t b\n⊢ HasSubset.Subset (Finset.image (fun x => SDiff.sdiff x b) s) (s.diffs t)","decl":"lemma image_subset_diffs_left : b ∈ t → s.image (· \\ b) ⊆ s \\\\ t := image_subset_image₂_left\n\n"}
{"name":"Finset.image_subset_diffs_right","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns t : Finset α\na : α\na✝ : Membership.mem s a\n⊢ HasSubset.Subset (Finset.image (fun x => SDiff.sdiff a x) t) (s.diffs t)","decl":"lemma image_subset_diffs_right : a ∈ s → t.image (a \\ ·) ⊆ s \\\\ t := image_subset_image₂_right\n\n"}
{"name":"Finset.forall_mem_diffs","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns t : Finset α\np : α → Prop\n⊢ Iff (∀ (c : α), Membership.mem (s.diffs t) c → p c) (∀ (a : α), Membership.mem s a → ∀ (b : α), Membership.mem t b → p (SDiff.sdiff a b))","decl":"lemma forall_mem_diffs {p : α → Prop} : (∀ c ∈ s \\\\ t, p c) ↔ ∀ a ∈ s, ∀ b ∈ t, p (a \\ b) :=\n  forall_mem_image₂\n\n"}
{"name":"Finset.diffs_subset_iff","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns t u : Finset α\n⊢ Iff (HasSubset.Subset (s.diffs t) u) (∀ (a : α), Membership.mem s a → ∀ (b : α), Membership.mem t b → Membership.mem u (SDiff.sdiff a b))","decl":"@[simp] lemma diffs_subset_iff : s \\\\ t ⊆ u ↔ ∀ a ∈ s, ∀ b ∈ t, a \\ b ∈ u := image₂_subset_iff\n\n"}
{"name":"Finset.diffs_nonempty","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns t : Finset α\n⊢ Iff (s.diffs t).Nonempty (And s.Nonempty t.Nonempty)","decl":"@[simp]\nlemma diffs_nonempty : (s \\\\ t).Nonempty ↔ s.Nonempty ∧ t.Nonempty := image₂_nonempty_iff\n\n"}
{"name":"Finset.Nonempty.diffs","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns t : Finset α\na✝¹ : s.Nonempty\na✝ : t.Nonempty\n⊢ (s.diffs t).Nonempty","decl":"@[aesop safe apply (rule_sets := [finsetNonempty])]\nprotected lemma Nonempty.diffs : s.Nonempty → t.Nonempty → (s \\\\ t).Nonempty := Nonempty.image₂\n\n"}
{"name":"Finset.Nonempty.of_diffs_left","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns t : Finset α\na✝ : (s.diffs t).Nonempty\n⊢ s.Nonempty","decl":"lemma Nonempty.of_diffs_left : (s \\\\ t).Nonempty → s.Nonempty := Nonempty.of_image₂_left\n"}
{"name":"Finset.Nonempty.of_diffs_right","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns t : Finset α\na✝ : (s.diffs t).Nonempty\n⊢ t.Nonempty","decl":"lemma Nonempty.of_diffs_right : (s \\\\ t).Nonempty → t.Nonempty := Nonempty.of_image₂_right\n\n"}
{"name":"Finset.empty_diffs","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\nt : Finset α\n⊢ Eq (EmptyCollection.emptyCollection.diffs t) EmptyCollection.emptyCollection","decl":"@[simp] lemma empty_diffs : ∅ \\\\ t = ∅ := image₂_empty_left\n"}
{"name":"Finset.diffs_empty","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns : Finset α\n⊢ Eq (s.diffs EmptyCollection.emptyCollection) EmptyCollection.emptyCollection","decl":"@[simp] lemma diffs_empty : s \\\\ ∅ = ∅ := image₂_empty_right\n"}
{"name":"Finset.diffs_eq_empty","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns t : Finset α\n⊢ Iff (Eq (s.diffs t) EmptyCollection.emptyCollection) (Or (Eq s EmptyCollection.emptyCollection) (Eq t EmptyCollection.emptyCollection))","decl":"@[simp] lemma diffs_eq_empty : s \\\\ t = ∅ ↔ s = ∅ ∨ t = ∅ := image₂_eq_empty_iff\n\n"}
{"name":"Finset.singleton_diffs","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\nt : Finset α\na : α\n⊢ Eq ((Singleton.singleton a).diffs t) (Finset.image (fun x => SDiff.sdiff a x) t)","decl":"@[simp] lemma singleton_diffs : {a} \\\\ t = t.image (a \\ ·) := image₂_singleton_left\n"}
{"name":"Finset.diffs_singleton","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns : Finset α\nb : α\n⊢ Eq (s.diffs (Singleton.singleton b)) (Finset.image (fun x => SDiff.sdiff x b) s)","decl":"@[simp] lemma diffs_singleton : s \\\\ {b} = s.image (· \\ b) := image₂_singleton_right\n"}
{"name":"Finset.singleton_diffs_singleton","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\na b : α\n⊢ Eq ((Singleton.singleton a).diffs (Singleton.singleton b)) (Singleton.singleton (SDiff.sdiff a b))","decl":"lemma singleton_diffs_singleton : ({a} \\\\ {b} : Finset α) = {a \\ b} := image₂_singleton\n\n"}
{"name":"Finset.diffs_union_left","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns₁ s₂ t : Finset α\n⊢ Eq ((Union.union s₁ s₂).diffs t) (Union.union (s₁.diffs t) (s₂.diffs t))","decl":"lemma diffs_union_left : (s₁ ∪ s₂) \\\\ t = s₁ \\\\ t ∪ s₂ \\\\ t := image₂_union_left\n"}
{"name":"Finset.diffs_union_right","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns t₁ t₂ : Finset α\n⊢ Eq (s.diffs (Union.union t₁ t₂)) (Union.union (s.diffs t₁) (s.diffs t₂))","decl":"lemma diffs_union_right : s \\\\ (t₁ ∪ t₂) = s \\\\ t₁ ∪ s \\\\ t₂ := image₂_union_right\n\n"}
{"name":"Finset.diffs_inter_subset_left","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns₁ s₂ t : Finset α\n⊢ HasSubset.Subset ((Inter.inter s₁ s₂).diffs t) (Inter.inter (s₁.diffs t) (s₂.diffs t))","decl":"lemma diffs_inter_subset_left : (s₁ ∩ s₂) \\\\ t ⊆ s₁ \\\\ t ∩ s₂ \\\\ t := image₂_inter_subset_left\n"}
{"name":"Finset.diffs_inter_subset_right","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns t₁ t₂ : Finset α\n⊢ HasSubset.Subset (s.diffs (Inter.inter t₁ t₂)) (Inter.inter (s.diffs t₁) (s.diffs t₂))","decl":"lemma diffs_inter_subset_right : s \\\\ (t₁ ∩ t₂) ⊆ s \\\\ t₁ ∩ s \\\\ t₂ := image₂_inter_subset_right\n\n"}
{"name":"Finset.subset_diffs","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\nu : Finset α\ns t : Set α\na✝ : HasSubset.Subset (↑u) (Set.image2 (fun x1 x2 => SDiff.sdiff x1 x2) s t)\n⊢ Exists fun s' => Exists fun t' => And (HasSubset.Subset (↑s') s) (And (HasSubset.Subset (↑t') t) (HasSubset.Subset u (s'.diffs t')))","decl":"lemma subset_diffs {s t : Set α} :\n    ↑u ⊆ Set.image2 (· \\ ·) s t → ∃ s' t' : Finset α, ↑s' ⊆ s ∧ ↑t' ⊆ t ∧ u ⊆ s' \\\\ t' :=\n  subset_set_image₂\n\n"}
{"name":"Finset.biUnion_image_sdiff_left","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns t : Finset α\n⊢ Eq (s.biUnion fun a => Finset.image (fun x => SDiff.sdiff a x) t) (s.diffs t)","decl":"lemma biUnion_image_sdiff_left : s.biUnion (fun a ↦ t.image (a \\ ·)) = s \\\\ t := biUnion_image_left\n"}
{"name":"Finset.biUnion_image_sdiff_right","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns t : Finset α\n⊢ Eq (t.biUnion fun b => Finset.image (fun x => SDiff.sdiff x b) s) (s.diffs t)","decl":"lemma biUnion_image_sdiff_right : t.biUnion (fun b ↦ s.image (· \\ b)) = s \\\\ t :=\n  biUnion_image_right\n\n"}
{"name":"Finset.image_sdiff_product","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns t : Finset α\n⊢ Eq (Finset.image (Function.uncurry fun x1 x2 => SDiff.sdiff x1 x2) (SProd.sprod s t)) (s.diffs t)","decl":"lemma image_sdiff_product (s t : Finset α) : (s ×ˢ t).image (uncurry (· \\ ·)) = s \\\\ t :=\n  image_uncurry_product _ _ _\n\n"}
{"name":"Finset.diffs_right_comm","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : DecidableEq α\ninst✝ : GeneralizedBooleanAlgebra α\ns t u : Finset α\n⊢ Eq ((s.diffs t).diffs u) ((s.diffs u).diffs t)","decl":"lemma diffs_right_comm : s \\\\ t \\\\ u = s \\\\ u \\\\ t := image₂_right_comm sdiff_right_comm\n\n"}
{"name":"Finset.mem_compls","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝ : BooleanAlgebra α\ns : Finset α\na : α\n⊢ Iff (Membership.mem s.compls a) (Membership.mem s (HasCompl.compl a))","decl":"@[simp] lemma mem_compls : a ∈ sᶜˢ ↔ aᶜ ∈ s := by\n  rw [Iff.comm, ← mem_map' ⟨compl, compl_injective⟩, Embedding.coeFn_mk, compl_compl, compls]\n\n"}
{"name":"Finset.image_compl","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : BooleanAlgebra α\ns : Finset α\ninst✝ : DecidableEq α\n⊢ Eq (Finset.image HasCompl.compl s) s.compls","decl":"@[simp] lemma image_compl [DecidableEq α] : s.image compl = sᶜˢ := by simp [compls, map_eq_image]\n\n"}
{"name":"Finset.coe_compls","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝ : BooleanAlgebra α\ns : Finset α\n⊢ Eq (↑s.compls) (Set.image HasCompl.compl ↑s)","decl":"@[simp, norm_cast] lemma coe_compls : (↑sᶜˢ : Set α) = compl '' ↑s := coe_map _ _\n\n"}
{"name":"Finset.card_compls","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝ : BooleanAlgebra α\ns : Finset α\n⊢ Eq s.compls.card s.card","decl":"@[simp] lemma card_compls : #sᶜˢ = #s := card_map _\n\n"}
{"name":"Finset.compl_mem_compls","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝ : BooleanAlgebra α\ns : Finset α\na : α\na✝ : Membership.mem s a\n⊢ Membership.mem s.compls (HasCompl.compl a)","decl":"lemma compl_mem_compls : a ∈ s → aᶜ ∈ sᶜˢ := mem_map_of_mem _\n"}
{"name":"Finset.compls_subset_compls","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝ : BooleanAlgebra α\ns₁ s₂ : Finset α\n⊢ Iff (HasSubset.Subset s₁.compls s₂.compls) (HasSubset.Subset s₁ s₂)","decl":"@[simp] lemma compls_subset_compls : s₁ᶜˢ ⊆ s₂ᶜˢ ↔ s₁ ⊆ s₂ := map_subset_map\n"}
{"name":"Finset.forall_mem_compls","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝ : BooleanAlgebra α\ns : Finset α\np : α → Prop\n⊢ Iff (∀ (a : α), Membership.mem s.compls a → p a) (∀ (a : α), Membership.mem s a → p (HasCompl.compl a))","decl":"lemma forall_mem_compls {p : α → Prop} : (∀ a ∈ sᶜˢ, p a) ↔ ∀ a ∈ s, p aᶜ := forall_mem_map\n"}
{"name":"Finset.exists_compls_iff","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝ : BooleanAlgebra α\ns : Finset α\np : α → Prop\n⊢ Iff (Exists fun a => And (Membership.mem s.compls a) (p a)) (Exists fun a => And (Membership.mem s a) (p (HasCompl.compl a)))","decl":"lemma exists_compls_iff {p : α → Prop} : (∃ a ∈ sᶜˢ, p a) ↔ ∃ a ∈ s, p aᶜ := by aesop\n\n"}
{"name":"Finset.compls_compls","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝ : BooleanAlgebra α\ns : Finset α\n⊢ Eq s.compls.compls s","decl":"@[simp] lemma compls_compls (s : Finset α) : sᶜˢᶜˢ = s := by ext; simp\n\n"}
{"name":"Finset.compls_subset_iff","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝ : BooleanAlgebra α\ns t : Finset α\n⊢ Iff (HasSubset.Subset s.compls t) (HasSubset.Subset s t.compls)","decl":"lemma compls_subset_iff : sᶜˢ ⊆ t ↔ s ⊆ tᶜˢ := by rw [← compls_subset_compls, compls_compls]\n\n"}
{"name":"Finset.compls_nonempty","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝ : BooleanAlgebra α\ns : Finset α\n⊢ Iff s.compls.Nonempty s.Nonempty","decl":"@[simp]\nlemma compls_nonempty : sᶜˢ.Nonempty ↔ s.Nonempty := map_nonempty\n\n"}
{"name":"Finset.Nonempty.compls","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝ : BooleanAlgebra α\ns : Finset α\na✝ : s.Nonempty\n⊢ s.compls.Nonempty","decl":"protected alias ⟨Nonempty.of_compls, Nonempty.compls⟩ := compls_nonempty\n"}
{"name":"Finset.Nonempty.of_compls","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝ : BooleanAlgebra α\ns : Finset α\na✝ : s.compls.Nonempty\n⊢ s.Nonempty","decl":"protected alias ⟨Nonempty.of_compls, Nonempty.compls⟩ := compls_nonempty\n"}
{"name":"Finset.compls_empty","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝ : BooleanAlgebra α\n⊢ Eq EmptyCollection.emptyCollection.compls EmptyCollection.emptyCollection","decl":"@[simp] lemma compls_empty : (∅ : Finset α)ᶜˢ = ∅ := map_empty _\n"}
{"name":"Finset.compls_eq_empty","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝ : BooleanAlgebra α\ns : Finset α\n⊢ Iff (Eq s.compls EmptyCollection.emptyCollection) (Eq s EmptyCollection.emptyCollection)","decl":"@[simp] lemma compls_eq_empty : sᶜˢ = ∅ ↔ s = ∅ := map_eq_empty\n"}
{"name":"Finset.compls_singleton","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝ : BooleanAlgebra α\na : α\n⊢ Eq (Singleton.singleton a).compls (Singleton.singleton (HasCompl.compl a))","decl":"@[simp] lemma compls_singleton (a : α) : {a}ᶜˢ = {aᶜ} := map_singleton _ _\n"}
{"name":"Finset.compls_univ","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : BooleanAlgebra α\ninst✝ : Fintype α\n⊢ Eq Finset.univ.compls Finset.univ","decl":"@[simp] lemma compls_univ [Fintype α] : (univ : Finset α)ᶜˢ = univ := by ext; simp\n\n"}
{"name":"Finset.compls_union","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : BooleanAlgebra α\ninst✝ : DecidableEq α\ns t : Finset α\n⊢ Eq (Union.union s t).compls (Union.union s.compls t.compls)","decl":"@[simp] lemma compls_union (s t : Finset α) : (s ∪ t)ᶜˢ = sᶜˢ ∪ tᶜˢ := map_union _ _\n"}
{"name":"Finset.compls_inter","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : BooleanAlgebra α\ninst✝ : DecidableEq α\ns t : Finset α\n⊢ Eq (Inter.inter s t).compls (Inter.inter s.compls t.compls)","decl":"@[simp] lemma compls_inter (s t : Finset α) : (s ∩ t)ᶜˢ = sᶜˢ ∩ tᶜˢ := map_inter _ _\n\n"}
{"name":"Finset.compls_infs","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : BooleanAlgebra α\ninst✝ : DecidableEq α\ns t : Finset α\n⊢ Eq (HasInfs.infs s t).compls (HasSups.sups s.compls t.compls)","decl":"@[simp] lemma compls_infs (s t : Finset α) : (s ⊼ t)ᶜˢ = sᶜˢ ⊻ tᶜˢ := by\n  simp_rw [← image_compl]; exact image_image₂_distrib fun _ _ ↦ compl_inf\n\n"}
{"name":"Finset.compls_sups","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : BooleanAlgebra α\ninst✝ : DecidableEq α\ns t : Finset α\n⊢ Eq (HasSups.sups s t).compls (HasInfs.infs s.compls t.compls)","decl":"@[simp] lemma compls_sups (s t : Finset α) : (s ⊻ t)ᶜˢ = sᶜˢ ⊼ tᶜˢ := by\n  simp_rw [← image_compl]; exact image_image₂_distrib fun _ _ ↦ compl_sup\n\n"}
{"name":"Finset.infs_compls_eq_diffs","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : BooleanAlgebra α\ninst✝ : DecidableEq α\ns t : Finset α\n⊢ Eq (HasInfs.infs s t.compls) (s.diffs t)","decl":"@[simp] lemma infs_compls_eq_diffs (s t : Finset α) : s ⊼ tᶜˢ = s \\\\ t := by\n  ext; simp [sdiff_eq]; aesop\n\n"}
{"name":"Finset.compls_infs_eq_diffs","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : BooleanAlgebra α\ninst✝ : DecidableEq α\ns t : Finset α\n⊢ Eq (HasInfs.infs s.compls t) (t.diffs s)","decl":"@[simp] lemma compls_infs_eq_diffs (s t : Finset α) : sᶜˢ ⊼ t = t \\\\ s := by\n  rw [infs_comm, infs_compls_eq_diffs]\n\n"}
{"name":"Finset.diffs_compls_eq_infs","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_2\ninst✝¹ : BooleanAlgebra α\ninst✝ : DecidableEq α\ns t : Finset α\n⊢ Eq (s.diffs t.compls) (HasInfs.infs s t)","decl":"@[simp] lemma diffs_compls_eq_infs (s t : Finset α) : s \\\\ tᶜˢ = s ⊼ t := by\n  rw [← infs_compls_eq_diffs, compls_compls]\n\n"}
{"name":"Set.Sized.compls","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_4\ninst✝¹ : DecidableEq α\ninst✝ : Fintype α\n𝒜 : Finset (Finset α)\nn : Nat\nh𝒜 : Set.Sized n ↑𝒜\n⊢ Set.Sized (HSub.hSub (Fintype.card α) n) ↑𝒜.compls","decl":"protected lemma _root_.Set.Sized.compls (h𝒜 : (𝒜 : Set (Finset α)).Sized n) :\n    (𝒜ᶜˢ : Set (Finset α)).Sized (Fintype.card α - n) :=\n  Finset.forall_mem_compls.2 <| fun s hs ↦ by rw [Finset.card_compl, h𝒜 hs]\n\n"}
{"name":"Finset.sized_compls","module":"Mathlib.Data.Finset.Sups","initialProofState":"α : Type u_4\ninst✝¹ : DecidableEq α\ninst✝ : Fintype α\n𝒜 : Finset (Finset α)\nn : Nat\nhn : LE.le n (Fintype.card α)\n⊢ Iff (Set.Sized n ↑𝒜.compls) (Set.Sized (HSub.hSub (Fintype.card α) n) ↑𝒜)","decl":"lemma sized_compls (hn : n ≤ Fintype.card α) :\n    (𝒜ᶜˢ : Set (Finset α)).Sized n ↔ (𝒜 : Set (Finset α)).Sized (Fintype.card α - n) where\n  mp h𝒜 := by simpa using h𝒜.compls\n  mpr h𝒜 := by simpa only [Nat.sub_sub_self hn] using h𝒜.compls\n\n"}
