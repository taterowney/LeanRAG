{"name":"FreeMonoid.star_of","module":"Mathlib.Algebra.Star.Free","initialProofState":"α : Type u_1\nx : α\n⊢ Eq (Star.star (FreeMonoid.of x)) (FreeMonoid.of x)","decl":"@[simp]\ntheorem star_of (x : α) : star (of x) = of x :=\n  rfl\n\n"}
{"name":"FreeMonoid.star_one","module":"Mathlib.Algebra.Star.Free","initialProofState":"α : Type u_1\n⊢ Eq (Star.star 1) 1","decl":"/-- Note that `star_one` is already a global simp lemma, but this one works with dsimp too -/\n@[simp]\ntheorem star_one : star (1 : FreeMonoid α) = 1 :=\n  rfl\n\n"}
{"name":"FreeAlgebra.star_ι","module":"Mathlib.Algebra.Star.Free","initialProofState":"R : Type u_1\ninst✝ : CommSemiring R\nX : Type u_2\nx : X\n⊢ Eq (Star.star (FreeAlgebra.ι R x)) (FreeAlgebra.ι R x)","decl":"@[simp]\ntheorem star_ι (x : X) : star (ι R x) = ι R x := by simp [star, Star.star]\n\n"}
{"name":"FreeAlgebra.star_algebraMap","module":"Mathlib.Algebra.Star.Free","initialProofState":"R : Type u_1\ninst✝ : CommSemiring R\nX : Type u_2\nr : R\n⊢ Eq (Star.star ((algebraMap R (FreeAlgebra R X)) r)) ((algebraMap R (FreeAlgebra R X)) r)","decl":"@[simp]\ntheorem star_algebraMap (r : R) : star (algebraMap R (FreeAlgebra R X) r) = algebraMap R _ r := by\n  simp [star, Star.star]\n\n"}
