{"name":"IsLinearMap.isLinearMap_add","module":"Mathlib.Algebra.Module.LinearMap.Prod","initialProofState":"R : Type u_1\nM : Type u_2\ninst✝² : Semiring R\ninst✝¹ : AddCommMonoid M\ninst✝ : Module R M\n⊢ IsLinearMap R fun x => HAdd.hAdd x.1 x.2","decl":"theorem isLinearMap_add [AddCommMonoid M] [Module R M] :\n    IsLinearMap R fun x : M × M => x.1 + x.2 := by\n  apply IsLinearMap.mk\n  · intro x y\n    simp only [Prod.fst_add, Prod.snd_add]\n    abel\n  · intro x y\n    simp [smul_add]\n\n"}
{"name":"IsLinearMap.isLinearMap_sub","module":"Mathlib.Algebra.Module.LinearMap.Prod","initialProofState":"R : Type u_1\nM : Type u_2\ninst✝² : Semiring R\ninst✝¹ : AddCommGroup M\ninst✝ : Module R M\n⊢ IsLinearMap R fun x => HSub.hSub x.1 x.2","decl":"theorem isLinearMap_sub [AddCommGroup M] [Module R M] :\n    IsLinearMap R fun x : M × M => x.1 - x.2 := by\n  apply IsLinearMap.mk\n  · intro x y\n    simp [add_comm, add_assoc, add_left_comm, sub_eq_add_neg]\n  · intro x y\n    simp [smul_sub]\n\n"}
