{"name":"Algebraic.infinite_of_charZero","module":"Mathlib.Algebra.AlgebraicCard","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝⁴ : CommRing R\ninst✝³ : IsDomain R\ninst✝² : Ring A\ninst✝¹ : Algebra R A\ninst✝ : CharZero A\n⊢ (setOf fun x => IsAlgebraic R x).Infinite","decl":"theorem infinite_of_charZero (R A : Type*) [CommRing R] [IsDomain R] [Ring A] [Algebra R A]\n    [CharZero A] : { x : A | IsAlgebraic R x }.Infinite :=\n  infinite_of_injective_forall_mem Nat.cast_injective isAlgebraic_nat\n\n"}
{"name":"Algebraic.aleph0_le_cardinalMk_of_charZero","module":"Mathlib.Algebra.AlgebraicCard","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝⁴ : CommRing R\ninst✝³ : IsDomain R\ninst✝² : Ring A\ninst✝¹ : Algebra R A\ninst✝ : CharZero A\n⊢ LE.le Cardinal.aleph0 (Cardinal.mk (Subtype fun x => IsAlgebraic R x))","decl":"theorem aleph0_le_cardinalMk_of_charZero (R A : Type*) [CommRing R] [IsDomain R] [Ring A]\n    [Algebra R A] [CharZero A] : ℵ₀ ≤ #{ x : A // IsAlgebraic R x } :=\n  infinite_iff.1 (Set.infinite_coe_iff.2 <| infinite_of_charZero R A)\n\n"}
{"name":"Algebraic.aleph0_le_cardinal_mk_of_charZero","module":"Mathlib.Algebra.AlgebraicCard","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝⁴ : CommRing R\ninst✝³ : IsDomain R\ninst✝² : Ring A\ninst✝¹ : Algebra R A\ninst✝ : CharZero A\n⊢ LE.le Cardinal.aleph0 (Cardinal.mk (Subtype fun x => IsAlgebraic R x))","decl":"@[deprecated (since := \"2024-11-10\")]\nalias aleph0_le_cardinal_mk_of_charZero := aleph0_le_cardinalMk_of_charZero\n\n"}
{"name":"Algebraic.cardinalMk_lift_le_mul","module":"Mathlib.Algebra.AlgebraicCard","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommRing R\ninst✝³ : CommRing A\ninst✝² : IsDomain A\ninst✝¹ : Algebra R A\ninst✝ : NoZeroSMulDivisors R A\n⊢ LE.le (Cardinal.lift.{u, v} (Cardinal.mk (Subtype fun x => IsAlgebraic R x))) (HMul.hMul (Cardinal.lift.{v, u} (Cardinal.mk (Polynomial R))) Cardinal.aleph0)","decl":"theorem cardinalMk_lift_le_mul :\n    Cardinal.lift.{u} #{ x : A // IsAlgebraic R x } ≤ Cardinal.lift.{v} #R[X] * ℵ₀ := by\n  rw [← mk_uLift, ← mk_uLift]\n  choose g hg₁ hg₂ using fun x : { x : A | IsAlgebraic R x } => x.coe_prop\n  refine lift_mk_le_lift_mk_mul_of_lift_mk_preimage_le g fun f => ?_\n  rw [lift_le_aleph0, le_aleph0_iff_set_countable]\n  suffices MapsTo (↑) (g ⁻¹' {f}) (f.rootSet A) from\n    this.countable_of_injOn Subtype.coe_injective.injOn (f.rootSet_finite A).countable\n  rintro x (rfl : g x = f)\n  exact mem_rootSet.2 ⟨hg₁ x, hg₂ x⟩\n\n"}
{"name":"Algebraic.cardinal_mk_lift_le_mul","module":"Mathlib.Algebra.AlgebraicCard","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommRing R\ninst✝³ : CommRing A\ninst✝² : IsDomain A\ninst✝¹ : Algebra R A\ninst✝ : NoZeroSMulDivisors R A\n⊢ LE.le (Cardinal.lift.{u, v} (Cardinal.mk (Subtype fun x => IsAlgebraic R x))) (HMul.hMul (Cardinal.lift.{v, u} (Cardinal.mk (Polynomial R))) Cardinal.aleph0)","decl":"@[deprecated (since := \"2024-11-10\")] alias cardinal_mk_lift_le_mul := cardinalMk_lift_le_mul\n\n"}
{"name":"Algebraic.cardinalMk_lift_le_max","module":"Mathlib.Algebra.AlgebraicCard","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommRing R\ninst✝³ : CommRing A\ninst✝² : IsDomain A\ninst✝¹ : Algebra R A\ninst✝ : NoZeroSMulDivisors R A\n⊢ LE.le (Cardinal.lift.{u, v} (Cardinal.mk (Subtype fun x => IsAlgebraic R x))) (Max.max (Cardinal.lift.{v, u} (Cardinal.mk R)) Cardinal.aleph0)","decl":"theorem cardinalMk_lift_le_max :\n    Cardinal.lift.{u} #{ x : A // IsAlgebraic R x } ≤ max (Cardinal.lift.{v} #R) ℵ₀ :=\n  (cardinalMk_lift_le_mul R A).trans <|\n    (mul_le_mul_right' (lift_le.2 cardinalMk_le_max) _).trans <| by simp\n\n"}
{"name":"Algebraic.cardinal_mk_lift_le_max","module":"Mathlib.Algebra.AlgebraicCard","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommRing R\ninst✝³ : CommRing A\ninst✝² : IsDomain A\ninst✝¹ : Algebra R A\ninst✝ : NoZeroSMulDivisors R A\n⊢ LE.le (Cardinal.lift.{u, v} (Cardinal.mk (Subtype fun x => IsAlgebraic R x))) (Max.max (Cardinal.lift.{v, u} (Cardinal.mk R)) Cardinal.aleph0)","decl":"@[deprecated (since := \"2024-11-10\")] alias cardinal_mk_lift_le_max := cardinalMk_lift_le_max\n\n"}
{"name":"Algebraic.cardinalMk_lift_of_infinite","module":"Mathlib.Algebra.AlgebraicCard","initialProofState":"R : Type u\nA : Type v\ninst✝⁵ : CommRing R\ninst✝⁴ : CommRing A\ninst✝³ : IsDomain A\ninst✝² : Algebra R A\ninst✝¹ : NoZeroSMulDivisors R A\ninst✝ : Infinite R\n⊢ Eq (Cardinal.lift.{u, v} (Cardinal.mk (Subtype fun x => IsAlgebraic R x))) (Cardinal.lift.{v, u} (Cardinal.mk R))","decl":"@[simp]\ntheorem cardinalMk_lift_of_infinite [Infinite R] :\n    Cardinal.lift.{u} #{ x : A // IsAlgebraic R x } = Cardinal.lift.{v} #R :=\n  ((cardinalMk_lift_le_max R A).trans_eq (max_eq_left <| aleph0_le_mk _)).antisymm <|\n    lift_mk_le'.2 ⟨⟨fun x => ⟨algebraMap R A x, isAlgebraic_algebraMap _⟩, fun _ _ h =>\n      NoZeroSMulDivisors.algebraMap_injective R A (Subtype.ext_iff.1 h)⟩⟩\n\n"}
{"name":"Algebraic.cardinal_mk_lift_of_infinite","module":"Mathlib.Algebra.AlgebraicCard","initialProofState":"R : Type u\nA : Type v\ninst✝⁵ : CommRing R\ninst✝⁴ : CommRing A\ninst✝³ : IsDomain A\ninst✝² : Algebra R A\ninst✝¹ : NoZeroSMulDivisors R A\ninst✝ : Infinite R\n⊢ Eq (Cardinal.lift.{u, v} (Cardinal.mk (Subtype fun x => IsAlgebraic R x))) (Cardinal.lift.{v, u} (Cardinal.mk R))","decl":"@[deprecated (since := \"2024-11-10\")]\nalias cardinal_mk_lift_of_infinite := cardinalMk_lift_of_infinite\n\n"}
{"name":"Algebraic.countable","module":"Mathlib.Algebra.AlgebraicCard","initialProofState":"R : Type u\nA : Type v\ninst✝⁵ : CommRing R\ninst✝⁴ : CommRing A\ninst✝³ : IsDomain A\ninst✝² : Algebra R A\ninst✝¹ : NoZeroSMulDivisors R A\ninst✝ : Countable R\n⊢ (setOf fun x => IsAlgebraic R x).Countable","decl":"@[simp]\nprotected theorem countable : Set.Countable { x : A | IsAlgebraic R x } := by\n  rw [← le_aleph0_iff_set_countable, ← lift_le_aleph0]\n  apply (cardinalMk_lift_le_max R A).trans\n  simp\n\n"}
{"name":"Algebraic.cardinalMk_of_countable_of_charZero","module":"Mathlib.Algebra.AlgebraicCard","initialProofState":"R : Type u\nA : Type v\ninst✝⁷ : CommRing R\ninst✝⁶ : CommRing A\ninst✝⁵ : IsDomain A\ninst✝⁴ : Algebra R A\ninst✝³ : NoZeroSMulDivisors R A\ninst✝² : Countable R\ninst✝¹ : CharZero A\ninst✝ : IsDomain R\n⊢ Eq (Cardinal.mk (Subtype fun x => IsAlgebraic R x)) Cardinal.aleph0","decl":"@[simp]\ntheorem cardinalMk_of_countable_of_charZero [CharZero A] [IsDomain R] :\n    #{ x : A // IsAlgebraic R x } = ℵ₀ :=\n  (Algebraic.countable R A).le_aleph0.antisymm (aleph0_le_cardinalMk_of_charZero R A)\n\n"}
{"name":"Algebraic.cardinal_mk_of_countable_of_charZero","module":"Mathlib.Algebra.AlgebraicCard","initialProofState":"R : Type u\nA : Type v\ninst✝⁷ : CommRing R\ninst✝⁶ : CommRing A\ninst✝⁵ : IsDomain A\ninst✝⁴ : Algebra R A\ninst✝³ : NoZeroSMulDivisors R A\ninst✝² : Countable R\ninst✝¹ : CharZero A\ninst✝ : IsDomain R\n⊢ Eq (Cardinal.mk (Subtype fun x => IsAlgebraic R x)) Cardinal.aleph0","decl":"@[deprecated (since := \"2024-11-10\")]\nalias cardinal_mk_of_countable_of_charZero := cardinalMk_of_countable_of_charZero\n\n"}
{"name":"Algebraic.cardinalMk_le_mul","module":"Mathlib.Algebra.AlgebraicCard","initialProofState":"R A : Type u\ninst✝⁴ : CommRing R\ninst✝³ : CommRing A\ninst✝² : IsDomain A\ninst✝¹ : Algebra R A\ninst✝ : NoZeroSMulDivisors R A\n⊢ LE.le (Cardinal.mk (Subtype fun x => IsAlgebraic R x)) (HMul.hMul (Cardinal.mk (Polynomial R)) Cardinal.aleph0)","decl":"theorem cardinalMk_le_mul : #{ x : A // IsAlgebraic R x } ≤ #R[X] * ℵ₀ := by\n  rw [← lift_id #_, ← lift_id #R[X]]\n  exact cardinalMk_lift_le_mul R A\n\n"}
{"name":"Algebraic.cardinal_mk_le_mul","module":"Mathlib.Algebra.AlgebraicCard","initialProofState":"R A : Type u\ninst✝⁴ : CommRing R\ninst✝³ : CommRing A\ninst✝² : IsDomain A\ninst✝¹ : Algebra R A\ninst✝ : NoZeroSMulDivisors R A\n⊢ LE.le (Cardinal.mk (Subtype fun x => IsAlgebraic R x)) (HMul.hMul (Cardinal.mk (Polynomial R)) Cardinal.aleph0)","decl":"@[deprecated (since := \"2024-11-10\")] alias cardinal_mk_le_mul := cardinalMk_le_mul\n\n"}
{"name":"Algebraic.cardinalMk_le_max","module":"Mathlib.Algebra.AlgebraicCard","initialProofState":"R A : Type u\ninst✝⁴ : CommRing R\ninst✝³ : CommRing A\ninst✝² : IsDomain A\ninst✝¹ : Algebra R A\ninst✝ : NoZeroSMulDivisors R A\n⊢ LE.le (Cardinal.mk (Subtype fun x => IsAlgebraic R x)) (Max.max (Cardinal.mk R) Cardinal.aleph0)","decl":"@[stacks 09GK]\ntheorem cardinalMk_le_max : #{ x : A // IsAlgebraic R x } ≤ max #R ℵ₀ := by\n  rw [← lift_id #_, ← lift_id #R]\n  exact cardinalMk_lift_le_max R A\n\n"}
{"name":"Algebraic.cardinal_mk_le_max","module":"Mathlib.Algebra.AlgebraicCard","initialProofState":"R A : Type u\ninst✝⁴ : CommRing R\ninst✝³ : CommRing A\ninst✝² : IsDomain A\ninst✝¹ : Algebra R A\ninst✝ : NoZeroSMulDivisors R A\n⊢ LE.le (Cardinal.mk (Subtype fun x => IsAlgebraic R x)) (Max.max (Cardinal.mk R) Cardinal.aleph0)","decl":"@[deprecated (since := \"2024-11-10\")] alias cardinal_mk_le_max := cardinalMk_le_max\n\n"}
{"name":"Algebraic.cardinalMk_of_infinite","module":"Mathlib.Algebra.AlgebraicCard","initialProofState":"R A : Type u\ninst✝⁵ : CommRing R\ninst✝⁴ : CommRing A\ninst✝³ : IsDomain A\ninst✝² : Algebra R A\ninst✝¹ : NoZeroSMulDivisors R A\ninst✝ : Infinite R\n⊢ Eq (Cardinal.mk (Subtype fun x => IsAlgebraic R x)) (Cardinal.mk R)","decl":"@[simp]\ntheorem cardinalMk_of_infinite [Infinite R] : #{ x : A // IsAlgebraic R x } = #R :=\n  lift_inj.1 <| cardinalMk_lift_of_infinite R A\n\n"}
{"name":"Algebraic.cardinal_mk_of_infinite","module":"Mathlib.Algebra.AlgebraicCard","initialProofState":"R A : Type u\ninst✝⁵ : CommRing R\ninst✝⁴ : CommRing A\ninst✝³ : IsDomain A\ninst✝² : Algebra R A\ninst✝¹ : NoZeroSMulDivisors R A\ninst✝ : Infinite R\n⊢ Eq (Cardinal.mk (Subtype fun x => IsAlgebraic R x)) (Cardinal.mk R)","decl":"@[deprecated (since := \"2024-11-10\")] alias cardinal_mk_of_infinite := cardinalMk_of_infinite\n\n"}
