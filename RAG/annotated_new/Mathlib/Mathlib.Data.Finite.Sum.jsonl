{"name":"Finite.instSum","module":"Mathlib.Data.Finite.Sum","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : Finite α\ninst✝ : Finite β\n⊢ Finite (Sum α β)","decl":"instance [Finite α] [Finite β] : Finite (α ⊕ β) := by\n  haveI := Fintype.ofFinite α\n  haveI := Fintype.ofFinite β\n  infer_instance\n\n"}
{"name":"Finite.sum_left","module":"Mathlib.Data.Finite.Sum","initialProofState":"α : Type u_1\nβ : Type u_3\ninst✝ : Finite (Sum α β)\n⊢ Finite α","decl":"theorem sum_left (β) [Finite (α ⊕ β)] : Finite α :=\n  of_injective (Sum.inl : α → α ⊕ β) Sum.inl_injective\n\n"}
{"name":"Finite.sum_right","module":"Mathlib.Data.Finite.Sum","initialProofState":"β : Type u_2\nα : Type u_3\ninst✝ : Finite (Sum α β)\n⊢ Finite β","decl":"theorem sum_right (α) [Finite (α ⊕ β)] : Finite β :=\n  of_injective (Sum.inr : β → α ⊕ β) Sum.inr_injective\n\n"}
{"name":"Finite.instPSum","module":"Mathlib.Data.Finite.Sum","initialProofState":"α : Sort u_3\nβ : Sort u_4\ninst✝¹ : Finite α\ninst✝ : Finite β\n⊢ Finite (PSum α β)","decl":"instance {α β : Sort*} [Finite α] [Finite β] : Finite (α ⊕' β) :=\n  of_equiv _ ((Equiv.psumEquivSum _ _).symm.trans (Equiv.plift.psumCongr Equiv.plift))\n\n"}
{"name":"Finite.psum_left","module":"Mathlib.Data.Finite.Sum","initialProofState":"α : Sort u_3\nβ : Sort u_4\ninst✝ : Finite (PSum α β)\n⊢ Finite α","decl":"theorem psum_left {α β : Sort*} [Finite (α ⊕' β)] : Finite α :=\n  of_injective (PSum.inl : α → α ⊕' β) PSum.inl_injective\n\n"}
{"name":"Finite.psum_right","module":"Mathlib.Data.Finite.Sum","initialProofState":"α : Sort u_3\nβ : Sort u_4\ninst✝ : Finite (PSum α β)\n⊢ Finite β","decl":"theorem psum_right {α β : Sort*} [Finite (α ⊕' β)] : Finite β :=\n  of_injective (PSum.inr : β → α ⊕' β) PSum.inr_injective\n\n"}
