{"name":"Finsupp.sumFinsuppLEquivProdFinsupp_apply","module":"Mathlib.LinearAlgebra.Finsupp.SumProd","initialProofState":"M : Type u_2\nR : Type u_5\ninst✝² : Semiring R\ninst✝¹ : AddCommMonoid M\ninst✝ : Module R M\nα : Type u_7\nβ : Type u_8\na✝ : Finsupp (Sum α β) M\n⊢ Eq ((Finsupp.sumFinsuppLEquivProdFinsupp R) a✝) (Finsupp.sumFinsuppAddEquivProdFinsupp.toFun a✝)","decl":"/-- The linear equivalence between `(α ⊕ β) →₀ M` and `(α →₀ M) × (β →₀ M)`.\n\nThis is the `LinearEquiv` version of `Finsupp.sumFinsuppEquivProdFinsupp`. -/\n@[simps apply symm_apply]\ndef sumFinsuppLEquivProdFinsupp {α β : Type*} : (α ⊕ β →₀ M) ≃ₗ[R] (α →₀ M) × (β →₀ M) :=\n  { sumFinsuppAddEquivProdFinsupp with\n    map_smul' := by\n      intros\n      ext <;>\n        simp only [AddEquiv.toFun_eq_coe, Prod.smul_fst, Prod.smul_snd, smul_apply,\n          snd_sumFinsuppAddEquivProdFinsupp, fst_sumFinsuppAddEquivProdFinsupp,\n          RingHom.id_apply] }\n\n"}
{"name":"Finsupp.sumFinsuppLEquivProdFinsupp_symm_apply","module":"Mathlib.LinearAlgebra.Finsupp.SumProd","initialProofState":"M : Type u_2\nR : Type u_5\ninst✝² : Semiring R\ninst✝¹ : AddCommMonoid M\ninst✝ : Module R M\nα : Type u_7\nβ : Type u_8\na✝ : Prod (Finsupp α M) (Finsupp β M)\n⊢ Eq ((Finsupp.sumFinsuppLEquivProdFinsupp R).symm a✝) (Finsupp.sumFinsuppAddEquivProdFinsupp.invFun a✝)","decl":"/-- The linear equivalence between `(α ⊕ β) →₀ M` and `(α →₀ M) × (β →₀ M)`.\n\nThis is the `LinearEquiv` version of `Finsupp.sumFinsuppEquivProdFinsupp`. -/\n@[simps apply symm_apply]\ndef sumFinsuppLEquivProdFinsupp {α β : Type*} : (α ⊕ β →₀ M) ≃ₗ[R] (α →₀ M) × (β →₀ M) :=\n  { sumFinsuppAddEquivProdFinsupp with\n    map_smul' := by\n      intros\n      ext <;>\n        simp only [AddEquiv.toFun_eq_coe, Prod.smul_fst, Prod.smul_snd, smul_apply,\n          snd_sumFinsuppAddEquivProdFinsupp, fst_sumFinsuppAddEquivProdFinsupp,\n          RingHom.id_apply] }\n\n"}
{"name":"Finsupp.fst_sumFinsuppLEquivProdFinsupp","module":"Mathlib.LinearAlgebra.Finsupp.SumProd","initialProofState":"M : Type u_2\nR : Type u_5\ninst✝² : Semiring R\ninst✝¹ : AddCommMonoid M\ninst✝ : Module R M\nα : Type u_7\nβ : Type u_8\nf : Finsupp (Sum α β) M\nx : α\n⊢ Eq (((Finsupp.sumFinsuppLEquivProdFinsupp R) f).1 x) (f (Sum.inl x))","decl":"theorem fst_sumFinsuppLEquivProdFinsupp {α β : Type*} (f : α ⊕ β →₀ M) (x : α) :\n    (sumFinsuppLEquivProdFinsupp R f).1 x = f (Sum.inl x) :=\n  rfl\n\n"}
{"name":"Finsupp.snd_sumFinsuppLEquivProdFinsupp","module":"Mathlib.LinearAlgebra.Finsupp.SumProd","initialProofState":"M : Type u_2\nR : Type u_5\ninst✝² : Semiring R\ninst✝¹ : AddCommMonoid M\ninst✝ : Module R M\nα : Type u_7\nβ : Type u_8\nf : Finsupp (Sum α β) M\ny : β\n⊢ Eq (((Finsupp.sumFinsuppLEquivProdFinsupp R) f).2 y) (f (Sum.inr y))","decl":"theorem snd_sumFinsuppLEquivProdFinsupp {α β : Type*} (f : α ⊕ β →₀ M) (y : β) :\n    (sumFinsuppLEquivProdFinsupp R f).2 y = f (Sum.inr y) :=\n  rfl\n\n"}
{"name":"Finsupp.sumFinsuppLEquivProdFinsupp_symm_inl","module":"Mathlib.LinearAlgebra.Finsupp.SumProd","initialProofState":"M : Type u_2\nR : Type u_5\ninst✝² : Semiring R\ninst✝¹ : AddCommMonoid M\ninst✝ : Module R M\nα : Type u_7\nβ : Type u_8\nfg : Prod (Finsupp α M) (Finsupp β M)\nx : α\n⊢ Eq (((Finsupp.sumFinsuppLEquivProdFinsupp R).symm fg) (Sum.inl x)) (fg.1 x)","decl":"theorem sumFinsuppLEquivProdFinsupp_symm_inl {α β : Type*} (fg : (α →₀ M) × (β →₀ M)) (x : α) :\n    ((sumFinsuppLEquivProdFinsupp R).symm fg) (Sum.inl x) = fg.1 x :=\n  rfl\n\n"}
{"name":"Finsupp.sumFinsuppLEquivProdFinsupp_symm_inr","module":"Mathlib.LinearAlgebra.Finsupp.SumProd","initialProofState":"M : Type u_2\nR : Type u_5\ninst✝² : Semiring R\ninst✝¹ : AddCommMonoid M\ninst✝ : Module R M\nα : Type u_7\nβ : Type u_8\nfg : Prod (Finsupp α M) (Finsupp β M)\ny : β\n⊢ Eq (((Finsupp.sumFinsuppLEquivProdFinsupp R).symm fg) (Sum.inr y)) (fg.2 y)","decl":"theorem sumFinsuppLEquivProdFinsupp_symm_inr {α β : Type*} (fg : (α →₀ M) × (β →₀ M)) (y : β) :\n    ((sumFinsuppLEquivProdFinsupp R).symm fg) (Sum.inr y) = fg.2 y :=\n  rfl\n\n"}
{"name":"Finsupp.sigmaFinsuppLEquivPiFinsupp_apply","module":"Mathlib.LinearAlgebra.Finsupp.SumProd","initialProofState":"R : Type u_5\ninst✝³ : Semiring R\nη : Type u_7\ninst✝² : Fintype η\nM : Type u_9\nιs : η → Type u_10\ninst✝¹ : AddCommMonoid M\ninst✝ : Module R M\nf : Finsupp (Sigma fun j => ιs j) M\nj : η\ni : ιs j\n⊢ Eq (((Finsupp.sigmaFinsuppLEquivPiFinsupp R) f j) i) (f ⟨j, i⟩)","decl":"@[simp]\ntheorem sigmaFinsuppLEquivPiFinsupp_apply {M : Type*} {ιs : η → Type*} [AddCommMonoid M]\n    [Module R M] (f : (Σj, ιs j) →₀ M) (j i) : sigmaFinsuppLEquivPiFinsupp R f j i = f ⟨j, i⟩ :=\n  rfl\n\n"}
{"name":"Finsupp.sigmaFinsuppLEquivPiFinsupp_symm_apply","module":"Mathlib.LinearAlgebra.Finsupp.SumProd","initialProofState":"R : Type u_5\ninst✝³ : Semiring R\nη : Type u_7\ninst✝² : Fintype η\nM : Type u_9\nιs : η → Type u_10\ninst✝¹ : AddCommMonoid M\ninst✝ : Module R M\nf : (j : η) → Finsupp (ιs j) M\nji : Sigma fun j => ιs j\n⊢ Eq (((Finsupp.sigmaFinsuppLEquivPiFinsupp R).symm f) ji) ((f ji.fst) ji.snd)","decl":"@[simp]\ntheorem sigmaFinsuppLEquivPiFinsupp_symm_apply {M : Type*} {ιs : η → Type*} [AddCommMonoid M]\n    [Module R M] (f : (j : _) → (ιs j →₀ M)) (ji) :\n    (Finsupp.sigmaFinsuppLEquivPiFinsupp R).symm f ji = f ji.1 ji.2 :=\n  rfl\n\n"}
