{"name":"mem_fixingSubmonoid_iff","module":"Mathlib.GroupTheory.GroupAction.FixingSubgroup","initialProofState":"M : Type u_1\nα : Type u_2\ninst✝¹ : Monoid M\ninst✝ : MulAction M α\ns : Set α\nm : M\n⊢ Iff (Membership.mem (fixingSubmonoid M s) m) (∀ (y : α), Membership.mem s y → Eq (HSMul.hSMul m y) y)","decl":"theorem mem_fixingSubmonoid_iff {s : Set α} {m : M} :\n    m ∈ fixingSubmonoid M s ↔ ∀ y ∈ s, m • y = y :=\n  ⟨fun hg y hy => hg ⟨y, hy⟩, fun h ⟨y, hy⟩ => h y hy⟩\n\n"}
{"name":"fixingSubmonoid_fixedPoints_gc","module":"Mathlib.GroupTheory.GroupAction.FixingSubgroup","initialProofState":"M : Type u_1\nα : Type u_2\ninst✝¹ : Monoid M\ninst✝ : MulAction M α\n⊢ GaloisConnection (Function.comp (⇑OrderDual.toDual) (fixingSubmonoid M)) (Function.comp (fun P => MulAction.fixedPoints (Subtype fun x => Membership.mem P x) α) ⇑OrderDual.ofDual)","decl":"/-- The Galois connection between fixing submonoids and fixed points of a monoid action -/\ntheorem fixingSubmonoid_fixedPoints_gc :\n    GaloisConnection (OrderDual.toDual ∘ fixingSubmonoid M)\n      ((fun P : Submonoid M => fixedPoints P α) ∘ OrderDual.ofDual) :=\n  fun _s _P => ⟨fun h s hs p => h p.2 ⟨s, hs⟩, fun h p hp s => h s.2 ⟨p, hp⟩⟩\n\n"}
{"name":"fixingSubmonoid_antitone","module":"Mathlib.GroupTheory.GroupAction.FixingSubgroup","initialProofState":"M : Type u_1\nα : Type u_2\ninst✝¹ : Monoid M\ninst✝ : MulAction M α\n⊢ Antitone fun s => fixingSubmonoid M s","decl":"theorem fixingSubmonoid_antitone : Antitone fun s : Set α => fixingSubmonoid M s :=\n  (fixingSubmonoid_fixedPoints_gc M α).monotone_l\n\n"}
{"name":"fixedPoints_antitone","module":"Mathlib.GroupTheory.GroupAction.FixingSubgroup","initialProofState":"M : Type u_1\nα : Type u_2\ninst✝¹ : Monoid M\ninst✝ : MulAction M α\n⊢ Antitone fun P => MulAction.fixedPoints (Subtype fun x => Membership.mem P x) α","decl":"theorem fixedPoints_antitone : Antitone fun P : Submonoid M => fixedPoints P α :=\n  (fixingSubmonoid_fixedPoints_gc M α).monotone_u.dual_left\n\n"}
{"name":"fixingSubmonoid_union","module":"Mathlib.GroupTheory.GroupAction.FixingSubgroup","initialProofState":"M : Type u_1\nα : Type u_2\ninst✝¹ : Monoid M\ninst✝ : MulAction M α\ns t : Set α\n⊢ Eq (fixingSubmonoid M (Union.union s t)) (Min.min (fixingSubmonoid M s) (fixingSubmonoid M t))","decl":"/-- Fixing submonoid of union is intersection -/\ntheorem fixingSubmonoid_union {s t : Set α} :\n    fixingSubmonoid M (s ∪ t) = fixingSubmonoid M s ⊓ fixingSubmonoid M t :=\n  (fixingSubmonoid_fixedPoints_gc M α).l_sup\n\n"}
{"name":"fixingSubmonoid_iUnion","module":"Mathlib.GroupTheory.GroupAction.FixingSubgroup","initialProofState":"M : Type u_1\nα : Type u_2\ninst✝¹ : Monoid M\ninst✝ : MulAction M α\nι : Sort u_3\ns : ι → Set α\n⊢ Eq (fixingSubmonoid M (Set.iUnion fun i => s i)) (iInf fun i => fixingSubmonoid M (s i))","decl":"/-- Fixing submonoid of iUnion is intersection -/\ntheorem fixingSubmonoid_iUnion {ι : Sort*} {s : ι → Set α} :\n    fixingSubmonoid M (⋃ i, s i) = ⨅ i, fixingSubmonoid M (s i) :=\n  (fixingSubmonoid_fixedPoints_gc M α).l_iSup\n\n"}
{"name":"fixedPoints_submonoid_sup","module":"Mathlib.GroupTheory.GroupAction.FixingSubgroup","initialProofState":"M : Type u_1\nα : Type u_2\ninst✝¹ : Monoid M\ninst✝ : MulAction M α\nP Q : Submonoid M\n⊢ Eq (MulAction.fixedPoints (Subtype fun x => Membership.mem (Max.max P Q) x) α) (Inter.inter (MulAction.fixedPoints (Subtype fun x => Membership.mem P x) α) (MulAction.fixedPoints (Subtype fun x => Membership.mem Q x) α))","decl":"/-- Fixed points of sup of submonoids is intersection -/\ntheorem fixedPoints_submonoid_sup {P Q : Submonoid M} :\n    fixedPoints (↥(P ⊔ Q)) α = fixedPoints P α ∩ fixedPoints Q α :=\n  (fixingSubmonoid_fixedPoints_gc M α).u_inf\n\n"}
{"name":"fixedPoints_submonoid_iSup","module":"Mathlib.GroupTheory.GroupAction.FixingSubgroup","initialProofState":"M : Type u_1\nα : Type u_2\ninst✝¹ : Monoid M\ninst✝ : MulAction M α\nι : Sort u_3\nP : ι → Submonoid M\n⊢ Eq (MulAction.fixedPoints (Subtype fun x => Membership.mem (iSup P) x) α) (Set.iInter fun i => MulAction.fixedPoints (Subtype fun x => Membership.mem (P i) x) α)","decl":"/-- Fixed points of iSup of submonoids is intersection -/\ntheorem fixedPoints_submonoid_iSup {ι : Sort*} {P : ι → Submonoid M} :\n    fixedPoints (↥(iSup P)) α = ⋂ i, fixedPoints (P i) α :=\n  (fixingSubmonoid_fixedPoints_gc M α).u_iInf\n\n"}
{"name":"mem_fixingSubgroup_iff","module":"Mathlib.GroupTheory.GroupAction.FixingSubgroup","initialProofState":"M : Type u_1\nα : Type u_2\ninst✝¹ : Group M\ninst✝ : MulAction M α\ns : Set α\nm : M\n⊢ Iff (Membership.mem (fixingSubgroup M s) m) (∀ (y : α), Membership.mem s y → Eq (HSMul.hSMul m y) y)","decl":"theorem mem_fixingSubgroup_iff {s : Set α} {m : M} : m ∈ fixingSubgroup M s ↔ ∀ y ∈ s, m • y = y :=\n  ⟨fun hg y hy => hg ⟨y, hy⟩, fun h ⟨y, hy⟩ => h y hy⟩\n\n"}
{"name":"mem_fixingSubgroup_iff_subset_fixedBy","module":"Mathlib.GroupTheory.GroupAction.FixingSubgroup","initialProofState":"M : Type u_1\nα : Type u_2\ninst✝¹ : Group M\ninst✝ : MulAction M α\ns : Set α\nm : M\n⊢ Iff (Membership.mem (fixingSubgroup M s) m) (HasSubset.Subset s (MulAction.fixedBy α m))","decl":"theorem mem_fixingSubgroup_iff_subset_fixedBy {s : Set α} {m : M} :\n    m ∈ fixingSubgroup M s ↔ s ⊆ fixedBy α m := by\n  simp_rw [mem_fixingSubgroup_iff, Set.subset_def, mem_fixedBy]\n\n"}
{"name":"mem_fixingSubgroup_compl_iff_movedBy_subset","module":"Mathlib.GroupTheory.GroupAction.FixingSubgroup","initialProofState":"M : Type u_1\nα : Type u_2\ninst✝¹ : Group M\ninst✝ : MulAction M α\ns : Set α\nm : M\n⊢ Iff (Membership.mem (fixingSubgroup M (HasCompl.compl s)) m) (HasSubset.Subset (HasCompl.compl (MulAction.fixedBy α m)) s)","decl":"theorem mem_fixingSubgroup_compl_iff_movedBy_subset {s : Set α} {m : M} :\n    m ∈ fixingSubgroup M sᶜ ↔ (fixedBy α m)ᶜ ⊆ s := by\n  rw [mem_fixingSubgroup_iff_subset_fixedBy, Set.compl_subset_comm]\n\n"}
{"name":"fixingSubgroup_fixedPoints_gc","module":"Mathlib.GroupTheory.GroupAction.FixingSubgroup","initialProofState":"M : Type u_1\nα : Type u_2\ninst✝¹ : Group M\ninst✝ : MulAction M α\n⊢ GaloisConnection (Function.comp (⇑OrderDual.toDual) (fixingSubgroup M)) (Function.comp (fun P => MulAction.fixedPoints (Subtype fun x => Membership.mem P x) α) ⇑OrderDual.ofDual)","decl":"/-- The Galois connection between fixing subgroups and fixed points of a group action -/\ntheorem fixingSubgroup_fixedPoints_gc :\n    GaloisConnection (OrderDual.toDual ∘ fixingSubgroup M)\n      ((fun P : Subgroup M => fixedPoints P α) ∘ OrderDual.ofDual) :=\n  fun _s _P => ⟨fun h s hs p => h p.2 ⟨s, hs⟩, fun h p hp s => h s.2 ⟨p, hp⟩⟩\n\n"}
{"name":"fixingSubgroup_antitone","module":"Mathlib.GroupTheory.GroupAction.FixingSubgroup","initialProofState":"M : Type u_1\nα : Type u_2\ninst✝¹ : Group M\ninst✝ : MulAction M α\n⊢ Antitone (fixingSubgroup M)","decl":"theorem fixingSubgroup_antitone : Antitone (fixingSubgroup M : Set α → Subgroup M) :=\n  (fixingSubgroup_fixedPoints_gc M α).monotone_l\n\n"}
{"name":"fixedPoints_subgroup_antitone","module":"Mathlib.GroupTheory.GroupAction.FixingSubgroup","initialProofState":"M : Type u_1\nα : Type u_2\ninst✝¹ : Group M\ninst✝ : MulAction M α\n⊢ Antitone fun P => MulAction.fixedPoints (Subtype fun x => Membership.mem P x) α","decl":"theorem fixedPoints_subgroup_antitone : Antitone fun P : Subgroup M => fixedPoints P α :=\n  (fixingSubgroup_fixedPoints_gc M α).monotone_u.dual_left\n\n"}
{"name":"fixingSubgroup_union","module":"Mathlib.GroupTheory.GroupAction.FixingSubgroup","initialProofState":"M : Type u_1\nα : Type u_2\ninst✝¹ : Group M\ninst✝ : MulAction M α\ns t : Set α\n⊢ Eq (fixingSubgroup M (Union.union s t)) (Min.min (fixingSubgroup M s) (fixingSubgroup M t))","decl":"/-- Fixing subgroup of union is intersection -/\ntheorem fixingSubgroup_union {s t : Set α} :\n    fixingSubgroup M (s ∪ t) = fixingSubgroup M s ⊓ fixingSubgroup M t :=\n  (fixingSubgroup_fixedPoints_gc M α).l_sup\n\n"}
{"name":"fixingSubgroup_iUnion","module":"Mathlib.GroupTheory.GroupAction.FixingSubgroup","initialProofState":"M : Type u_1\nα : Type u_2\ninst✝¹ : Group M\ninst✝ : MulAction M α\nι : Sort u_3\ns : ι → Set α\n⊢ Eq (fixingSubgroup M (Set.iUnion fun i => s i)) (iInf fun i => fixingSubgroup M (s i))","decl":"/-- Fixing subgroup of iUnion is intersection -/\ntheorem fixingSubgroup_iUnion {ι : Sort*} {s : ι → Set α} :\n    fixingSubgroup M (⋃ i, s i) = ⨅ i, fixingSubgroup M (s i) :=\n  (fixingSubgroup_fixedPoints_gc M α).l_iSup\n\n"}
{"name":"fixedPoints_subgroup_sup","module":"Mathlib.GroupTheory.GroupAction.FixingSubgroup","initialProofState":"M : Type u_1\nα : Type u_2\ninst✝¹ : Group M\ninst✝ : MulAction M α\nP Q : Subgroup M\n⊢ Eq (MulAction.fixedPoints (Subtype fun x => Membership.mem (Max.max P Q) x) α) (Inter.inter (MulAction.fixedPoints (Subtype fun x => Membership.mem P x) α) (MulAction.fixedPoints (Subtype fun x => Membership.mem Q x) α))","decl":"/-- Fixed points of sup of subgroups is intersection -/\ntheorem fixedPoints_subgroup_sup {P Q : Subgroup M} :\n    fixedPoints (↥(P ⊔ Q)) α = fixedPoints P α ∩ fixedPoints Q α :=\n  (fixingSubgroup_fixedPoints_gc M α).u_inf\n\n"}
{"name":"fixedPoints_subgroup_iSup","module":"Mathlib.GroupTheory.GroupAction.FixingSubgroup","initialProofState":"M : Type u_1\nα : Type u_2\ninst✝¹ : Group M\ninst✝ : MulAction M α\nι : Sort u_3\nP : ι → Subgroup M\n⊢ Eq (MulAction.fixedPoints (Subtype fun x => Membership.mem (iSup P) x) α) (Set.iInter fun i => MulAction.fixedPoints (Subtype fun x => Membership.mem (P i) x) α)","decl":"/-- Fixed points of iSup of subgroups is intersection -/\ntheorem fixedPoints_subgroup_iSup {ι : Sort*} {P : ι → Subgroup M} :\n    fixedPoints (↥(iSup P)) α = ⋂ i, fixedPoints (P i) α :=\n  (fixingSubgroup_fixedPoints_gc M α).u_iInf\n\n"}
{"name":"orbit_fixingSubgroup_compl_subset","module":"Mathlib.GroupTheory.GroupAction.FixingSubgroup","initialProofState":"M : Type u_1\nα : Type u_2\ninst✝¹ : Group M\ninst✝ : MulAction M α\ns : Set α\na : α\na_in_s : Membership.mem s a\n⊢ HasSubset.Subset (MulAction.orbit (Subtype fun x => Membership.mem (fixingSubgroup M (HasCompl.compl s)) x) a) s","decl":"/-- The orbit of the fixing subgroup of `sᶜ` (ie. the moving subgroup of `s`) is a subset of `s` -/\ntheorem orbit_fixingSubgroup_compl_subset {s : Set α} {a : α} (a_in_s : a ∈ s) :\n    MulAction.orbit (fixingSubgroup M sᶜ) a ⊆ s := by\n  intro b b_in_orbit\n  let ⟨⟨g, g_fixing⟩, g_eq⟩ := MulAction.mem_orbit_iff.mp b_in_orbit\n  rw [Submonoid.mk_smul] at g_eq\n  rw [mem_fixingSubgroup_compl_iff_movedBy_subset] at g_fixing\n  rwa [← g_eq, smul_mem_of_set_mem_fixedBy (set_mem_fixedBy_of_movedBy_subset g_fixing)]\n\n"}
