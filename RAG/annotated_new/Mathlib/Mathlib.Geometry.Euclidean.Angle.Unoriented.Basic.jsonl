{"name":"InnerProductGeometry.continuousAt_angle","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx : Prod V V\nhx1 : Ne x.1 0\nhx2 : Ne x.2 0\n⊢ ContinuousAt (fun y => InnerProductGeometry.angle y.1 y.2) x","decl":"theorem continuousAt_angle {x : V × V} (hx1 : x.1 ≠ 0) (hx2 : x.2 ≠ 0) :\n    ContinuousAt (fun y : V × V => angle y.1 y.2) x :=\n  Real.continuous_arccos.continuousAt.comp <|\n    continuous_inner.continuousAt.div\n      ((continuous_norm.comp continuous_fst).mul (continuous_norm.comp continuous_snd)).continuousAt\n      (by simp [hx1, hx2])\n\n"}
{"name":"InnerProductGeometry.angle_smul_smul","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nc : Real\nhc : Ne c 0\nx y : V\n⊢ Eq (InnerProductGeometry.angle (HSMul.hSMul c x) (HSMul.hSMul c y)) (InnerProductGeometry.angle x y)","decl":"theorem angle_smul_smul {c : ℝ} (hc : c ≠ 0) (x y : V) : angle (c • x) (c • y) = angle x y := by\n  have : c * c ≠ 0 := mul_ne_zero hc hc\n  rw [angle, angle, real_inner_smul_left, inner_smul_right, norm_smul, norm_smul, Real.norm_eq_abs,\n    mul_mul_mul_comm _ ‖x‖, abs_mul_abs_self, ← mul_assoc c c, mul_div_mul_left _ _ this]\n\n"}
{"name":"LinearIsometry.angle_map","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"E : Type u_2\nF : Type u_3\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedAddCommGroup F\ninst✝¹ : InnerProductSpace Real E\ninst✝ : InnerProductSpace Real F\nf : LinearIsometry (RingHom.id Real) E F\nu v : E\n⊢ Eq (InnerProductGeometry.angle (f u) (f v)) (InnerProductGeometry.angle u v)","decl":"@[simp]\ntheorem _root_.LinearIsometry.angle_map {E F : Type*} [NormedAddCommGroup E] [NormedAddCommGroup F]\n    [InnerProductSpace ℝ E] [InnerProductSpace ℝ F] (f : E →ₗᵢ[ℝ] F) (u v : E) :\n    angle (f u) (f v) = angle u v := by\n  rw [angle, angle, f.inner_map_map, f.norm_map, f.norm_map]\n\n"}
{"name":"Submodule.angle_coe","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\ns : Submodule Real V\nx y : Subtype fun x => Membership.mem s x\n⊢ Eq (InnerProductGeometry.angle ↑x ↑y) (InnerProductGeometry.angle x y)","decl":"@[simp, norm_cast]\ntheorem _root_.Submodule.angle_coe {s : Submodule ℝ V} (x y : s) :\n    angle (x : V) (y : V) = angle x y :=\n  s.subtypeₗᵢ.angle_map x y\n\n"}
{"name":"InnerProductGeometry.cos_angle","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\n⊢ Eq (Real.cos (InnerProductGeometry.angle x y)) (HDiv.hDiv (Inner.inner x y) (HMul.hMul (Norm.norm x) (Norm.norm y)))","decl":"/-- The cosine of the angle between two vectors. -/\ntheorem cos_angle (x y : V) : Real.cos (angle x y) = ⟪x, y⟫ / (‖x‖ * ‖y‖) :=\n  Real.cos_arccos (abs_le.mp (abs_real_inner_div_norm_mul_norm_le_one x y)).1\n    (abs_le.mp (abs_real_inner_div_norm_mul_norm_le_one x y)).2\n\n"}
{"name":"InnerProductGeometry.angle_comm","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\n⊢ Eq (InnerProductGeometry.angle x y) (InnerProductGeometry.angle y x)","decl":"/-- The angle between two vectors does not depend on their order. -/\ntheorem angle_comm (x y : V) : angle x y = angle y x := by\n  unfold angle\n  rw [real_inner_comm, mul_comm]\n\n"}
{"name":"InnerProductGeometry.angle_neg_neg","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\n⊢ Eq (InnerProductGeometry.angle (Neg.neg x) (Neg.neg y)) (InnerProductGeometry.angle x y)","decl":"/-- The angle between the negation of two vectors. -/\n@[simp]\ntheorem angle_neg_neg (x y : V) : angle (-x) (-y) = angle x y := by\n  unfold angle\n  rw [inner_neg_neg, norm_neg, norm_neg]\n\n"}
{"name":"InnerProductGeometry.angle_nonneg","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\n⊢ LE.le 0 (InnerProductGeometry.angle x y)","decl":"/-- The angle between two vectors is nonnegative. -/\ntheorem angle_nonneg (x y : V) : 0 ≤ angle x y :=\n  Real.arccos_nonneg _\n\n"}
{"name":"InnerProductGeometry.angle_le_pi","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\n⊢ LE.le (InnerProductGeometry.angle x y) Real.pi","decl":"/-- The angle between two vectors is at most π. -/\ntheorem angle_le_pi (x y : V) : angle x y ≤ π :=\n  Real.arccos_le_pi _\n\n"}
{"name":"InnerProductGeometry.angle_neg_right","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\n⊢ Eq (InnerProductGeometry.angle x (Neg.neg y)) (HSub.hSub Real.pi (InnerProductGeometry.angle x y))","decl":"/-- The angle between a vector and the negation of another vector. -/\ntheorem angle_neg_right (x y : V) : angle x (-y) = π - angle x y := by\n  unfold angle\n  rw [← Real.arccos_neg, norm_neg, inner_neg_right, neg_div]\n\n"}
{"name":"InnerProductGeometry.angle_neg_left","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\n⊢ Eq (InnerProductGeometry.angle (Neg.neg x) y) (HSub.hSub Real.pi (InnerProductGeometry.angle x y))","decl":"/-- The angle between the negation of a vector and another vector. -/\ntheorem angle_neg_left (x y : V) : angle (-x) y = π - angle x y := by\n  rw [← angle_neg_neg, neg_neg, angle_neg_right]\n\n"}
{"name":"InnerProductGeometry.angle_zero_left","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx : V\n⊢ Eq (InnerProductGeometry.angle 0 x) (HDiv.hDiv Real.pi 2)","decl":"/-- The angle between the zero vector and a vector. -/\n@[simp]\ntheorem angle_zero_left (x : V) : angle 0 x = π / 2 := by\n  unfold angle\n  rw [inner_zero_left, zero_div, Real.arccos_zero]\n\n"}
{"name":"InnerProductGeometry.angle_zero_right","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx : V\n⊢ Eq (InnerProductGeometry.angle x 0) (HDiv.hDiv Real.pi 2)","decl":"/-- The angle between a vector and the zero vector. -/\n@[simp]\ntheorem angle_zero_right (x : V) : angle x 0 = π / 2 := by\n  unfold angle\n  rw [inner_zero_right, zero_div, Real.arccos_zero]\n\n"}
{"name":"InnerProductGeometry.angle_self","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx : V\nhx : Ne x 0\n⊢ Eq (InnerProductGeometry.angle x x) 0","decl":"/-- The angle between a nonzero vector and itself. -/\n@[simp]\ntheorem angle_self {x : V} (hx : x ≠ 0) : angle x x = 0 := by\n  unfold angle\n  rw [← real_inner_self_eq_norm_mul_norm, div_self (inner_self_ne_zero.2 hx : ⟪x, x⟫ ≠ 0),\n    Real.arccos_one]\n\n"}
{"name":"InnerProductGeometry.angle_self_neg_of_nonzero","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx : V\nhx : Ne x 0\n⊢ Eq (InnerProductGeometry.angle x (Neg.neg x)) Real.pi","decl":"/-- The angle between a nonzero vector and its negation. -/\n@[simp]\ntheorem angle_self_neg_of_nonzero {x : V} (hx : x ≠ 0) : angle x (-x) = π := by\n  rw [angle_neg_right, angle_self hx, sub_zero]\n\n"}
{"name":"InnerProductGeometry.angle_neg_self_of_nonzero","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx : V\nhx : Ne x 0\n⊢ Eq (InnerProductGeometry.angle (Neg.neg x) x) Real.pi","decl":"/-- The angle between the negation of a nonzero vector and that\nvector. -/\n@[simp]\ntheorem angle_neg_self_of_nonzero {x : V} (hx : x ≠ 0) : angle (-x) x = π := by\n  rw [angle_comm, angle_self_neg_of_nonzero hx]\n\n"}
{"name":"InnerProductGeometry.angle_smul_right_of_pos","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\nr : Real\nhr : LT.lt 0 r\n⊢ Eq (InnerProductGeometry.angle x (HSMul.hSMul r y)) (InnerProductGeometry.angle x y)","decl":"/-- The angle between a vector and a positive multiple of a vector. -/\n@[simp]\ntheorem angle_smul_right_of_pos (x y : V) {r : ℝ} (hr : 0 < r) : angle x (r • y) = angle x y := by\n  unfold angle\n  rw [inner_smul_right, norm_smul, Real.norm_eq_abs, abs_of_nonneg (le_of_lt hr), ← mul_assoc,\n    mul_comm _ r, mul_assoc, mul_div_mul_left _ _ (ne_of_gt hr)]\n\n"}
{"name":"InnerProductGeometry.angle_smul_left_of_pos","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\nr : Real\nhr : LT.lt 0 r\n⊢ Eq (InnerProductGeometry.angle (HSMul.hSMul r x) y) (InnerProductGeometry.angle x y)","decl":"/-- The angle between a positive multiple of a vector and a vector. -/\n@[simp]\ntheorem angle_smul_left_of_pos (x y : V) {r : ℝ} (hr : 0 < r) : angle (r • x) y = angle x y := by\n  rw [angle_comm, angle_smul_right_of_pos y x hr, angle_comm]\n\n"}
{"name":"InnerProductGeometry.angle_smul_right_of_neg","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\nr : Real\nhr : LT.lt r 0\n⊢ Eq (InnerProductGeometry.angle x (HSMul.hSMul r y)) (InnerProductGeometry.angle x (Neg.neg y))","decl":"/-- The angle between a vector and a negative multiple of a vector. -/\n@[simp]\ntheorem angle_smul_right_of_neg (x y : V) {r : ℝ} (hr : r < 0) :\n    angle x (r • y) = angle x (-y) := by\n  rw [← neg_neg r, neg_smul, angle_neg_right, angle_smul_right_of_pos x y (neg_pos_of_neg hr),\n    angle_neg_right]\n\n"}
{"name":"InnerProductGeometry.angle_smul_left_of_neg","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\nr : Real\nhr : LT.lt r 0\n⊢ Eq (InnerProductGeometry.angle (HSMul.hSMul r x) y) (InnerProductGeometry.angle (Neg.neg x) y)","decl":"/-- The angle between a negative multiple of a vector and a vector. -/\n@[simp]\ntheorem angle_smul_left_of_neg (x y : V) {r : ℝ} (hr : r < 0) : angle (r • x) y = angle (-x) y := by\n  rw [angle_comm, angle_smul_right_of_neg y x hr, angle_comm]\n\n"}
{"name":"InnerProductGeometry.cos_angle_mul_norm_mul_norm","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\n⊢ Eq (HMul.hMul (Real.cos (InnerProductGeometry.angle x y)) (HMul.hMul (Norm.norm x) (Norm.norm y))) (Inner.inner x y)","decl":"/-- The cosine of the angle between two vectors, multiplied by the\nproduct of their norms. -/\ntheorem cos_angle_mul_norm_mul_norm (x y : V) : Real.cos (angle x y) * (‖x‖ * ‖y‖) = ⟪x, y⟫ := by\n  rw [cos_angle, div_mul_cancel_of_imp]\n  simp +contextual [or_imp]\n\n"}
{"name":"InnerProductGeometry.sin_angle_mul_norm_mul_norm","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\n⊢ Eq (HMul.hMul (Real.sin (InnerProductGeometry.angle x y)) (HMul.hMul (Norm.norm x) (Norm.norm y))) (HSub.hSub (HMul.hMul (Inner.inner x x) (Inner.inner y y)) (HMul.hMul (Inner.inner x y) (Inner.inner x y))).sqrt","decl":"/-- The sine of the angle between two vectors, multiplied by the\nproduct of their norms. -/\ntheorem sin_angle_mul_norm_mul_norm (x y : V) :\n    Real.sin (angle x y) * (‖x‖ * ‖y‖) = √(⟪x, x⟫ * ⟪y, y⟫ - ⟪x, y⟫ * ⟪x, y⟫) := by\n  unfold angle\n  rw [Real.sin_arccos, ← Real.sqrt_mul_self (mul_nonneg (norm_nonneg x) (norm_nonneg y)),\n    ← Real.sqrt_mul' _ (mul_self_nonneg _), sq,\n    Real.sqrt_mul_self (mul_nonneg (norm_nonneg x) (norm_nonneg y)),\n    real_inner_self_eq_norm_mul_norm, real_inner_self_eq_norm_mul_norm]\n  by_cases h : ‖x‖ * ‖y‖ = 0\n  · rw [show ‖x‖ * ‖x‖ * (‖y‖ * ‖y‖) = ‖x‖ * ‖y‖ * (‖x‖ * ‖y‖) by ring, h, mul_zero,\n      mul_zero, zero_sub]\n    cases' eq_zero_or_eq_zero_of_mul_eq_zero h with hx hy\n    · rw [norm_eq_zero] at hx\n      rw [hx, inner_zero_left, zero_mul, neg_zero]\n    · rw [norm_eq_zero] at hy\n      rw [hy, inner_zero_right, zero_mul, neg_zero]\n  · -- takes 600ms; squeezing the \"equivalent\" simp call yields an invalid result\n    field_simp [h]\n    ring_nf\n\n"}
{"name":"InnerProductGeometry.angle_eq_zero_iff","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\n⊢ Iff (Eq (InnerProductGeometry.angle x y) 0) (And (Ne x 0) (Exists fun r => And (LT.lt 0 r) (Eq y (HSMul.hSMul r x))))","decl":"/-- The angle between two vectors is zero if and only if they are\nnonzero and one is a positive multiple of the other. -/\ntheorem angle_eq_zero_iff {x y : V} : angle x y = 0 ↔ x ≠ 0 ∧ ∃ r : ℝ, 0 < r ∧ y = r • x := by\n  rw [angle, ← real_inner_div_norm_mul_norm_eq_one_iff, Real.arccos_eq_zero, LE.le.le_iff_eq,\n    eq_comm]\n  exact (abs_le.mp (abs_real_inner_div_norm_mul_norm_le_one x y)).2\n\n"}
{"name":"InnerProductGeometry.angle_eq_pi_iff","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\n⊢ Iff (Eq (InnerProductGeometry.angle x y) Real.pi) (And (Ne x 0) (Exists fun r => And (LT.lt r 0) (Eq y (HSMul.hSMul r x))))","decl":"/-- The angle between two vectors is π if and only if they are nonzero\nand one is a negative multiple of the other. -/\ntheorem angle_eq_pi_iff {x y : V} : angle x y = π ↔ x ≠ 0 ∧ ∃ r : ℝ, r < 0 ∧ y = r • x := by\n  rw [angle, ← real_inner_div_norm_mul_norm_eq_neg_one_iff, Real.arccos_eq_pi, LE.le.le_iff_eq]\n  exact (abs_le.mp (abs_real_inner_div_norm_mul_norm_le_one x y)).1\n\n"}
{"name":"InnerProductGeometry.angle_add_angle_eq_pi_of_angle_eq_pi","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y z : V\nh : Eq (InnerProductGeometry.angle x y) Real.pi\n⊢ Eq (HAdd.hAdd (InnerProductGeometry.angle x z) (InnerProductGeometry.angle y z)) Real.pi","decl":"/-- If the angle between two vectors is π, the angles between those\nvectors and a third vector add to π. -/\ntheorem angle_add_angle_eq_pi_of_angle_eq_pi {x y : V} (z : V) (h : angle x y = π) :\n    angle x z + angle y z = π := by\n  rcases angle_eq_pi_iff.1 h with ⟨_, ⟨r, ⟨hr, rfl⟩⟩⟩\n  rw [angle_smul_left_of_neg x z hr, angle_neg_left, add_sub_cancel]\n\n"}
{"name":"InnerProductGeometry.inner_eq_zero_iff_angle_eq_pi_div_two","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\n⊢ Iff (Eq (Inner.inner x y) 0) (Eq (InnerProductGeometry.angle x y) (HDiv.hDiv Real.pi 2))","decl":"/-- Two vectors have inner product 0 if and only if the angle between\nthem is π/2. -/\ntheorem inner_eq_zero_iff_angle_eq_pi_div_two (x y : V) : ⟪x, y⟫ = 0 ↔ angle x y = π / 2 :=\n  Iff.symm <| by simp +contextual [angle, or_imp]\n\n"}
{"name":"InnerProductGeometry.inner_eq_neg_mul_norm_of_angle_eq_pi","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\nh : Eq (InnerProductGeometry.angle x y) Real.pi\n⊢ Eq (Inner.inner x y) (Neg.neg (HMul.hMul (Norm.norm x) (Norm.norm y)))","decl":"/-- If the angle between two vectors is π, the inner product equals the negative product\nof the norms. -/\ntheorem inner_eq_neg_mul_norm_of_angle_eq_pi {x y : V} (h : angle x y = π) :\n    ⟪x, y⟫ = -(‖x‖ * ‖y‖) := by\n  simp [← cos_angle_mul_norm_mul_norm, h]\n\n"}
{"name":"InnerProductGeometry.inner_eq_mul_norm_of_angle_eq_zero","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\nh : Eq (InnerProductGeometry.angle x y) 0\n⊢ Eq (Inner.inner x y) (HMul.hMul (Norm.norm x) (Norm.norm y))","decl":"/-- If the angle between two vectors is 0, the inner product equals the product of the norms. -/\ntheorem inner_eq_mul_norm_of_angle_eq_zero {x y : V} (h : angle x y = 0) : ⟪x, y⟫ = ‖x‖ * ‖y‖ := by\n  simp [← cos_angle_mul_norm_mul_norm, h]\n\n"}
{"name":"InnerProductGeometry.inner_eq_neg_mul_norm_iff_angle_eq_pi","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\nhx : Ne x 0\nhy : Ne y 0\n⊢ Iff (Eq (Inner.inner x y) (Neg.neg (HMul.hMul (Norm.norm x) (Norm.norm y)))) (Eq (InnerProductGeometry.angle x y) Real.pi)","decl":"/-- The inner product of two non-zero vectors equals the negative product of their norms\nif and only if the angle between the two vectors is π. -/\ntheorem inner_eq_neg_mul_norm_iff_angle_eq_pi {x y : V} (hx : x ≠ 0) (hy : y ≠ 0) :\n    ⟪x, y⟫ = -(‖x‖ * ‖y‖) ↔ angle x y = π := by\n  refine ⟨fun h => ?_, inner_eq_neg_mul_norm_of_angle_eq_pi⟩\n  have h₁ : ‖x‖ * ‖y‖ ≠ 0 := (mul_pos (norm_pos_iff.mpr hx) (norm_pos_iff.mpr hy)).ne'\n  rw [angle, h, neg_div, div_self h₁, Real.arccos_neg_one]\n\n"}
{"name":"InnerProductGeometry.inner_eq_mul_norm_iff_angle_eq_zero","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\nhx : Ne x 0\nhy : Ne y 0\n⊢ Iff (Eq (Inner.inner x y) (HMul.hMul (Norm.norm x) (Norm.norm y))) (Eq (InnerProductGeometry.angle x y) 0)","decl":"/-- The inner product of two non-zero vectors equals the product of their norms\nif and only if the angle between the two vectors is 0. -/\ntheorem inner_eq_mul_norm_iff_angle_eq_zero {x y : V} (hx : x ≠ 0) (hy : y ≠ 0) :\n    ⟪x, y⟫ = ‖x‖ * ‖y‖ ↔ angle x y = 0 := by\n  refine ⟨fun h => ?_, inner_eq_mul_norm_of_angle_eq_zero⟩\n  have h₁ : ‖x‖ * ‖y‖ ≠ 0 := (mul_pos (norm_pos_iff.mpr hx) (norm_pos_iff.mpr hy)).ne'\n  rw [angle, h, div_self h₁, Real.arccos_one]\n\n"}
{"name":"InnerProductGeometry.norm_sub_eq_add_norm_of_angle_eq_pi","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\nh : Eq (InnerProductGeometry.angle x y) Real.pi\n⊢ Eq (Norm.norm (HSub.hSub x y)) (HAdd.hAdd (Norm.norm x) (Norm.norm y))","decl":"/-- If the angle between two vectors is π, the norm of their difference equals\nthe sum of their norms. -/\ntheorem norm_sub_eq_add_norm_of_angle_eq_pi {x y : V} (h : angle x y = π) :\n    ‖x - y‖ = ‖x‖ + ‖y‖ := by\n  rw [← sq_eq_sq₀ (norm_nonneg (x - y)) (add_nonneg (norm_nonneg x) (norm_nonneg y)),\n    norm_sub_pow_two_real, inner_eq_neg_mul_norm_of_angle_eq_pi h]\n  ring\n\n"}
{"name":"InnerProductGeometry.norm_add_eq_add_norm_of_angle_eq_zero","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\nh : Eq (InnerProductGeometry.angle x y) 0\n⊢ Eq (Norm.norm (HAdd.hAdd x y)) (HAdd.hAdd (Norm.norm x) (Norm.norm y))","decl":"/-- If the angle between two vectors is 0, the norm of their sum equals\nthe sum of their norms. -/\ntheorem norm_add_eq_add_norm_of_angle_eq_zero {x y : V} (h : angle x y = 0) :\n    ‖x + y‖ = ‖x‖ + ‖y‖ := by\n  rw [← sq_eq_sq₀ (norm_nonneg (x + y)) (add_nonneg (norm_nonneg x) (norm_nonneg y)),\n    norm_add_pow_two_real, inner_eq_mul_norm_of_angle_eq_zero h]\n  ring\n\n"}
{"name":"InnerProductGeometry.norm_sub_eq_abs_sub_norm_of_angle_eq_zero","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\nh : Eq (InnerProductGeometry.angle x y) 0\n⊢ Eq (Norm.norm (HSub.hSub x y)) (abs (HSub.hSub (Norm.norm x) (Norm.norm y)))","decl":"/-- If the angle between two vectors is 0, the norm of their difference equals\nthe absolute value of the difference of their norms. -/\ntheorem norm_sub_eq_abs_sub_norm_of_angle_eq_zero {x y : V} (h : angle x y = 0) :\n    ‖x - y‖ = |‖x‖ - ‖y‖| := by\n  rw [← sq_eq_sq₀ (norm_nonneg (x - y)) (abs_nonneg (‖x‖ - ‖y‖)), norm_sub_pow_two_real,\n    inner_eq_mul_norm_of_angle_eq_zero h, sq_abs (‖x‖ - ‖y‖)]\n  ring\n\n"}
{"name":"InnerProductGeometry.norm_sub_eq_add_norm_iff_angle_eq_pi","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\nhx : Ne x 0\nhy : Ne y 0\n⊢ Iff (Eq (Norm.norm (HSub.hSub x y)) (HAdd.hAdd (Norm.norm x) (Norm.norm y))) (Eq (InnerProductGeometry.angle x y) Real.pi)","decl":"/-- The norm of the difference of two non-zero vectors equals the sum of their norms\nif and only the angle between the two vectors is π. -/\ntheorem norm_sub_eq_add_norm_iff_angle_eq_pi {x y : V} (hx : x ≠ 0) (hy : y ≠ 0) :\n    ‖x - y‖ = ‖x‖ + ‖y‖ ↔ angle x y = π := by\n  refine ⟨fun h => ?_, norm_sub_eq_add_norm_of_angle_eq_pi⟩\n  rw [← inner_eq_neg_mul_norm_iff_angle_eq_pi hx hy]\n  obtain ⟨hxy₁, hxy₂⟩ := norm_nonneg (x - y), add_nonneg (norm_nonneg x) (norm_nonneg y)\n  rw [← sq_eq_sq₀ hxy₁ hxy₂, norm_sub_pow_two_real] at h\n  calc\n    ⟪x, y⟫ = (‖x‖ ^ 2 + ‖y‖ ^ 2 - (‖x‖ + ‖y‖) ^ 2) / 2 := by linarith\n    _ = -(‖x‖ * ‖y‖) := by ring\n\n"}
{"name":"InnerProductGeometry.norm_add_eq_add_norm_iff_angle_eq_zero","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\nhx : Ne x 0\nhy : Ne y 0\n⊢ Iff (Eq (Norm.norm (HAdd.hAdd x y)) (HAdd.hAdd (Norm.norm x) (Norm.norm y))) (Eq (InnerProductGeometry.angle x y) 0)","decl":"/-- The norm of the sum of two non-zero vectors equals the sum of their norms\nif and only the angle between the two vectors is 0. -/\ntheorem norm_add_eq_add_norm_iff_angle_eq_zero {x y : V} (hx : x ≠ 0) (hy : y ≠ 0) :\n    ‖x + y‖ = ‖x‖ + ‖y‖ ↔ angle x y = 0 := by\n  refine ⟨fun h => ?_, norm_add_eq_add_norm_of_angle_eq_zero⟩\n  rw [← inner_eq_mul_norm_iff_angle_eq_zero hx hy]\n  obtain ⟨hxy₁, hxy₂⟩ := norm_nonneg (x + y), add_nonneg (norm_nonneg x) (norm_nonneg y)\n  rw [← sq_eq_sq₀ hxy₁ hxy₂, norm_add_pow_two_real] at h\n  calc\n    ⟪x, y⟫ = ((‖x‖ + ‖y‖) ^ 2 - ‖x‖ ^ 2 - ‖y‖ ^ 2) / 2 := by linarith\n    _ = ‖x‖ * ‖y‖ := by ring\n\n"}
{"name":"InnerProductGeometry.norm_sub_eq_abs_sub_norm_iff_angle_eq_zero","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\nhx : Ne x 0\nhy : Ne y 0\n⊢ Iff (Eq (Norm.norm (HSub.hSub x y)) (abs (HSub.hSub (Norm.norm x) (Norm.norm y)))) (Eq (InnerProductGeometry.angle x y) 0)","decl":"/-- The norm of the difference of two non-zero vectors equals the absolute value\nof the difference of their norms if and only the angle between the two vectors is 0. -/\ntheorem norm_sub_eq_abs_sub_norm_iff_angle_eq_zero {x y : V} (hx : x ≠ 0) (hy : y ≠ 0) :\n    ‖x - y‖ = |‖x‖ - ‖y‖| ↔ angle x y = 0 := by\n  refine ⟨fun h => ?_, norm_sub_eq_abs_sub_norm_of_angle_eq_zero⟩\n  rw [← inner_eq_mul_norm_iff_angle_eq_zero hx hy]\n  have h1 : ‖x - y‖ ^ 2 = (‖x‖ - ‖y‖) ^ 2 := by\n    rw [h]\n    exact sq_abs (‖x‖ - ‖y‖)\n  rw [norm_sub_pow_two_real] at h1\n  calc\n    ⟪x, y⟫ = ((‖x‖ + ‖y‖) ^ 2 - ‖x‖ ^ 2 - ‖y‖ ^ 2) / 2 := by linarith\n    _ = ‖x‖ * ‖y‖ := by ring\n\n"}
{"name":"InnerProductGeometry.norm_add_eq_norm_sub_iff_angle_eq_pi_div_two","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\n⊢ Iff (Eq (Norm.norm (HAdd.hAdd x y)) (Norm.norm (HSub.hSub x y))) (Eq (InnerProductGeometry.angle x y) (HDiv.hDiv Real.pi 2))","decl":"/-- The norm of the sum of two vectors equals the norm of their difference if and only if\nthe angle between them is π/2. -/\ntheorem norm_add_eq_norm_sub_iff_angle_eq_pi_div_two (x y : V) :\n    ‖x + y‖ = ‖x - y‖ ↔ angle x y = π / 2 := by\n  rw [← sq_eq_sq₀ (norm_nonneg (x + y)) (norm_nonneg (x - y)),\n    ← inner_eq_zero_iff_angle_eq_pi_div_two x y, norm_add_pow_two_real, norm_sub_pow_two_real]\n  constructor <;> intro h <;> linarith\n\n"}
{"name":"InnerProductGeometry.cos_eq_one_iff_angle_eq_zero","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\n⊢ Iff (Eq (Real.cos (InnerProductGeometry.angle x y)) 1) (Eq (InnerProductGeometry.angle x y) 0)","decl":"/-- The cosine of the angle between two vectors is 1 if and only if the angle is 0. -/\ntheorem cos_eq_one_iff_angle_eq_zero : cos (angle x y) = 1 ↔ angle x y = 0 := by\n  rw [← cos_zero]\n  exact injOn_cos.eq_iff ⟨angle_nonneg x y, angle_le_pi x y⟩ (left_mem_Icc.2 pi_pos.le)\n\n"}
{"name":"InnerProductGeometry.cos_eq_zero_iff_angle_eq_pi_div_two","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\n⊢ Iff (Eq (Real.cos (InnerProductGeometry.angle x y)) 0) (Eq (InnerProductGeometry.angle x y) (HDiv.hDiv Real.pi 2))","decl":"/-- The cosine of the angle between two vectors is 0 if and only if the angle is π / 2. -/\ntheorem cos_eq_zero_iff_angle_eq_pi_div_two : cos (angle x y) = 0 ↔ angle x y = π / 2 := by\n  rw [← cos_pi_div_two]\n  apply injOn_cos.eq_iff ⟨angle_nonneg x y, angle_le_pi x y⟩\n  constructor <;> linarith [pi_pos]\n\n"}
{"name":"InnerProductGeometry.cos_eq_neg_one_iff_angle_eq_pi","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\n⊢ Iff (Eq (Real.cos (InnerProductGeometry.angle x y)) (-1)) (Eq (InnerProductGeometry.angle x y) Real.pi)","decl":"/-- The cosine of the angle between two vectors is -1 if and only if the angle is π. -/\ntheorem cos_eq_neg_one_iff_angle_eq_pi : cos (angle x y) = -1 ↔ angle x y = π := by\n  rw [← cos_pi]\n  exact injOn_cos.eq_iff ⟨angle_nonneg x y, angle_le_pi x y⟩ (right_mem_Icc.2 pi_pos.le)\n\n"}
{"name":"InnerProductGeometry.sin_eq_zero_iff_angle_eq_zero_or_angle_eq_pi","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\n⊢ Iff (Eq (Real.sin (InnerProductGeometry.angle x y)) 0) (Or (Eq (InnerProductGeometry.angle x y) 0) (Eq (InnerProductGeometry.angle x y) Real.pi))","decl":"/-- The sine of the angle between two vectors is 0 if and only if the angle is 0 or π. -/\ntheorem sin_eq_zero_iff_angle_eq_zero_or_angle_eq_pi :\n    sin (angle x y) = 0 ↔ angle x y = 0 ∨ angle x y = π := by\n  rw [sin_eq_zero_iff_cos_eq, cos_eq_one_iff_angle_eq_zero, cos_eq_neg_one_iff_angle_eq_pi]\n\n"}
{"name":"InnerProductGeometry.sin_eq_one_iff_angle_eq_pi_div_two","module":"Mathlib.Geometry.Euclidean.Angle.Unoriented.Basic","initialProofState":"V : Type u_1\ninst✝¹ : NormedAddCommGroup V\ninst✝ : InnerProductSpace Real V\nx y : V\n⊢ Iff (Eq (Real.sin (InnerProductGeometry.angle x y)) 1) (Eq (InnerProductGeometry.angle x y) (HDiv.hDiv Real.pi 2))","decl":"/-- The sine of the angle between two vectors is 1 if and only if the angle is π / 2. -/\ntheorem sin_eq_one_iff_angle_eq_pi_div_two : sin (angle x y) = 1 ↔ angle x y = π / 2 := by\n  refine ⟨fun h => ?_, fun h => by rw [h, sin_pi_div_two]⟩\n  rw [← cos_eq_zero_iff_angle_eq_pi_div_two, ← abs_eq_zero, abs_cos_eq_sqrt_one_sub_sin_sq, h]\n  simp\n\n"}
