{"name":"CategoryTheory.instIsEmptyDiscrete","module":"Mathlib.CategoryTheory.PEmpty","initialProofState":"α : Type u_1\ninst✝ : IsEmpty α\n⊢ IsEmpty (CategoryTheory.Discrete α)","decl":"instance (α : Type*) [IsEmpty α] : IsEmpty (Discrete α) := Function.isEmpty Discrete.as\n\n"}
{"name":"CategoryTheory.Functor.empty_ext'","module":"Mathlib.CategoryTheory.PEmpty","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nF G : CategoryTheory.Functor (CategoryTheory.Discrete PEmpty.{w + 1}) C\n⊢ Eq F G","decl":"/-- Any two functors out of the empty category are *equal*. You probably want to use\n`emptyExt` instead of this.\n-/\ntheorem empty_ext' (F G : Discrete.{w} PEmpty ⥤ C) : F = G :=\n  Functor.ext (fun x => x.as.elim) fun x _ _ => x.as.elim\n\n"}
