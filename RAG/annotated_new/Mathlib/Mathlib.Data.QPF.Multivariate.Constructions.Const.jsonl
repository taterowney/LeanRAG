{"name":"MvQPF.Const.mk_get","module":"Mathlib.Data.QPF.Multivariate.Constructions.Const","initialProofState":"n : Nat\nA : Type u\nα : TypeVec.{u} n\nx : MvQPF.Const n A α\n⊢ Eq (MvQPF.Const.mk x.get) x","decl":"@[simp]\nprotected theorem mk_get (x : Const n A α) : Const.mk (Const.get x) = x := rfl\n\n"}
{"name":"MvQPF.Const.get_mk","module":"Mathlib.Data.QPF.Multivariate.Constructions.Const","initialProofState":"n : Nat\nA : Type u\nα : TypeVec.{u} n\nx : A\n⊢ Eq (MvQPF.Const.mk x).get x","decl":"@[simp]\nprotected theorem get_mk (x : A) : Const.get (Const.mk x : Const n A α) = x := rfl\n\n"}
{"name":"MvQPF.Const.map_mk","module":"Mathlib.Data.QPF.Multivariate.Constructions.Const","initialProofState":"n : Nat\nA : Type u\nα β : TypeVec.{u} n\nf : α.Arrow β\nx : A\n⊢ Eq (MvFunctor.map f (MvQPF.Const.mk x)) (MvQPF.Const.mk x)","decl":"theorem map_mk (x : A) : f <$$> Const.mk x = Const.mk x := rfl\n\n"}
{"name":"MvQPF.Const.get_map","module":"Mathlib.Data.QPF.Multivariate.Constructions.Const","initialProofState":"n : Nat\nA : Type u\nα β : TypeVec.{u} n\nf : α.Arrow β\nx : MvQPF.Const n A α\n⊢ Eq (MvFunctor.map f x).get x.get","decl":"theorem get_map (x : (Const n A) α) : Const.get (f <$$> x) = Const.get x := rfl\n\n"}
