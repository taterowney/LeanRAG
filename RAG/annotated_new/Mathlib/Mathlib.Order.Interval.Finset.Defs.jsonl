{"name":"LocallyFiniteOrder.finset_mem_Ico","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝ : Preorder α\nself : LocallyFiniteOrder α\na b x : α\n⊢ Iff (Membership.mem (LocallyFiniteOrder.finsetIco a b) x) (And (LE.le a x) (LT.lt x b))","decl":"/-- This is a mixin class describing a locally finite order,\nthat is, is an order where bounded intervals are finite.\nWhen you don't care too much about definitional equality, you can use `LocallyFiniteOrder.ofIcc` or\n`LocallyFiniteOrder.ofFiniteIcc` to build a locally finite order from just `Finset.Icc`. -/\nclass LocallyFiniteOrder (α : Type*) [Preorder α] where\n  /-- Left-closed right-closed interval -/\n  finsetIcc : α → α → Finset α\n  /-- Left-closed right-open interval -/\n  finsetIco : α → α → Finset α\n  /-- Left-open right-closed interval -/\n  finsetIoc : α → α → Finset α\n  /-- Left-open right-open interval -/\n  finsetIoo : α → α → Finset α\n  /-- `x ∈ finsetIcc a b ↔ a ≤ x ∧ x ≤ b` -/\n  finset_mem_Icc : ∀ a b x : α, x ∈ finsetIcc a b ↔ a ≤ x ∧ x ≤ b\n  /-- `x ∈ finsetIco a b ↔ a ≤ x ∧ x < b` -/\n  finset_mem_Ico : ∀ a b x : α, x ∈ finsetIco a b ↔ a ≤ x ∧ x < b\n  /-- `x ∈ finsetIoc a b ↔ a < x ∧ x ≤ b` -/\n  finset_mem_Ioc : ∀ a b x : α, x ∈ finsetIoc a b ↔ a < x ∧ x ≤ b\n  /-- `x ∈ finsetIoo a b ↔ a < x ∧ x < b` -/\n  finset_mem_Ioo : ∀ a b x : α, x ∈ finsetIoo a b ↔ a < x ∧ x < b\n\n"}
{"name":"LocallyFiniteOrder.finset_mem_Ioo","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝ : Preorder α\nself : LocallyFiniteOrder α\na b x : α\n⊢ Iff (Membership.mem (LocallyFiniteOrder.finsetIoo a b) x) (And (LT.lt a x) (LT.lt x b))","decl":"/-- This is a mixin class describing a locally finite order,\nthat is, is an order where bounded intervals are finite.\nWhen you don't care too much about definitional equality, you can use `LocallyFiniteOrder.ofIcc` or\n`LocallyFiniteOrder.ofFiniteIcc` to build a locally finite order from just `Finset.Icc`. -/\nclass LocallyFiniteOrder (α : Type*) [Preorder α] where\n  /-- Left-closed right-closed interval -/\n  finsetIcc : α → α → Finset α\n  /-- Left-closed right-open interval -/\n  finsetIco : α → α → Finset α\n  /-- Left-open right-closed interval -/\n  finsetIoc : α → α → Finset α\n  /-- Left-open right-open interval -/\n  finsetIoo : α → α → Finset α\n  /-- `x ∈ finsetIcc a b ↔ a ≤ x ∧ x ≤ b` -/\n  finset_mem_Icc : ∀ a b x : α, x ∈ finsetIcc a b ↔ a ≤ x ∧ x ≤ b\n  /-- `x ∈ finsetIco a b ↔ a ≤ x ∧ x < b` -/\n  finset_mem_Ico : ∀ a b x : α, x ∈ finsetIco a b ↔ a ≤ x ∧ x < b\n  /-- `x ∈ finsetIoc a b ↔ a < x ∧ x ≤ b` -/\n  finset_mem_Ioc : ∀ a b x : α, x ∈ finsetIoc a b ↔ a < x ∧ x ≤ b\n  /-- `x ∈ finsetIoo a b ↔ a < x ∧ x < b` -/\n  finset_mem_Ioo : ∀ a b x : α, x ∈ finsetIoo a b ↔ a < x ∧ x < b\n\n"}
{"name":"LocallyFiniteOrder.finset_mem_Ioc","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝ : Preorder α\nself : LocallyFiniteOrder α\na b x : α\n⊢ Iff (Membership.mem (LocallyFiniteOrder.finsetIoc a b) x) (And (LT.lt a x) (LE.le x b))","decl":"/-- This is a mixin class describing a locally finite order,\nthat is, is an order where bounded intervals are finite.\nWhen you don't care too much about definitional equality, you can use `LocallyFiniteOrder.ofIcc` or\n`LocallyFiniteOrder.ofFiniteIcc` to build a locally finite order from just `Finset.Icc`. -/\nclass LocallyFiniteOrder (α : Type*) [Preorder α] where\n  /-- Left-closed right-closed interval -/\n  finsetIcc : α → α → Finset α\n  /-- Left-closed right-open interval -/\n  finsetIco : α → α → Finset α\n  /-- Left-open right-closed interval -/\n  finsetIoc : α → α → Finset α\n  /-- Left-open right-open interval -/\n  finsetIoo : α → α → Finset α\n  /-- `x ∈ finsetIcc a b ↔ a ≤ x ∧ x ≤ b` -/\n  finset_mem_Icc : ∀ a b x : α, x ∈ finsetIcc a b ↔ a ≤ x ∧ x ≤ b\n  /-- `x ∈ finsetIco a b ↔ a ≤ x ∧ x < b` -/\n  finset_mem_Ico : ∀ a b x : α, x ∈ finsetIco a b ↔ a ≤ x ∧ x < b\n  /-- `x ∈ finsetIoc a b ↔ a < x ∧ x ≤ b` -/\n  finset_mem_Ioc : ∀ a b x : α, x ∈ finsetIoc a b ↔ a < x ∧ x ≤ b\n  /-- `x ∈ finsetIoo a b ↔ a < x ∧ x < b` -/\n  finset_mem_Ioo : ∀ a b x : α, x ∈ finsetIoo a b ↔ a < x ∧ x < b\n\n"}
{"name":"LocallyFiniteOrder.finset_mem_Icc","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝ : Preorder α\nself : LocallyFiniteOrder α\na b x : α\n⊢ Iff (Membership.mem (LocallyFiniteOrder.finsetIcc a b) x) (And (LE.le a x) (LE.le x b))","decl":"/-- This is a mixin class describing a locally finite order,\nthat is, is an order where bounded intervals are finite.\nWhen you don't care too much about definitional equality, you can use `LocallyFiniteOrder.ofIcc` or\n`LocallyFiniteOrder.ofFiniteIcc` to build a locally finite order from just `Finset.Icc`. -/\nclass LocallyFiniteOrder (α : Type*) [Preorder α] where\n  /-- Left-closed right-closed interval -/\n  finsetIcc : α → α → Finset α\n  /-- Left-closed right-open interval -/\n  finsetIco : α → α → Finset α\n  /-- Left-open right-closed interval -/\n  finsetIoc : α → α → Finset α\n  /-- Left-open right-open interval -/\n  finsetIoo : α → α → Finset α\n  /-- `x ∈ finsetIcc a b ↔ a ≤ x ∧ x ≤ b` -/\n  finset_mem_Icc : ∀ a b x : α, x ∈ finsetIcc a b ↔ a ≤ x ∧ x ≤ b\n  /-- `x ∈ finsetIco a b ↔ a ≤ x ∧ x < b` -/\n  finset_mem_Ico : ∀ a b x : α, x ∈ finsetIco a b ↔ a ≤ x ∧ x < b\n  /-- `x ∈ finsetIoc a b ↔ a < x ∧ x ≤ b` -/\n  finset_mem_Ioc : ∀ a b x : α, x ∈ finsetIoc a b ↔ a < x ∧ x ≤ b\n  /-- `x ∈ finsetIoo a b ↔ a < x ∧ x < b` -/\n  finset_mem_Ioo : ∀ a b x : α, x ∈ finsetIoo a b ↔ a < x ∧ x < b\n\n"}
{"name":"LocallyFiniteOrderTop.finset_mem_Ici","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝ : Preorder α\nself : LocallyFiniteOrderTop α\na x : α\n⊢ Iff (Membership.mem (LocallyFiniteOrderTop.finsetIci a) x) (LE.le a x)","decl":"/-- This mixin class describes an order where all intervals bounded below are finite. This is\nslightly weaker than `LocallyFiniteOrder` + `OrderTop` as it allows empty types. -/\nclass LocallyFiniteOrderTop (α : Type*) [Preorder α] where\n  /-- Left-open right-infinite interval -/\n  finsetIoi : α → Finset α\n  /-- Left-closed right-infinite interval -/\n  finsetIci : α → Finset α\n  /-- `x ∈ finsetIci a ↔ a ≤ x` -/\n  finset_mem_Ici : ∀ a x : α, x ∈ finsetIci a ↔ a ≤ x\n  /-- `x ∈ finsetIoi a ↔ a < x` -/\n  finset_mem_Ioi : ∀ a x : α, x ∈ finsetIoi a ↔ a < x\n\n"}
{"name":"LocallyFiniteOrderTop.finset_mem_Ioi","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝ : Preorder α\nself : LocallyFiniteOrderTop α\na x : α\n⊢ Iff (Membership.mem (LocallyFiniteOrderTop.finsetIoi a) x) (LT.lt a x)","decl":"/-- This mixin class describes an order where all intervals bounded below are finite. This is\nslightly weaker than `LocallyFiniteOrder` + `OrderTop` as it allows empty types. -/\nclass LocallyFiniteOrderTop (α : Type*) [Preorder α] where\n  /-- Left-open right-infinite interval -/\n  finsetIoi : α → Finset α\n  /-- Left-closed right-infinite interval -/\n  finsetIci : α → Finset α\n  /-- `x ∈ finsetIci a ↔ a ≤ x` -/\n  finset_mem_Ici : ∀ a x : α, x ∈ finsetIci a ↔ a ≤ x\n  /-- `x ∈ finsetIoi a ↔ a < x` -/\n  finset_mem_Ioi : ∀ a x : α, x ∈ finsetIoi a ↔ a < x\n\n"}
{"name":"LocallyFiniteOrderBot.finset_mem_Iic","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝ : Preorder α\nself : LocallyFiniteOrderBot α\na x : α\n⊢ Iff (Membership.mem (LocallyFiniteOrderBot.finsetIic a) x) (LE.le x a)","decl":"/-- This mixin class describes an order where all intervals bounded above are finite. This is\nslightly weaker than `LocallyFiniteOrder` + `OrderBot` as it allows empty types. -/\nclass LocallyFiniteOrderBot (α : Type*) [Preorder α] where\n  /-- Left-infinite right-open interval -/\n  finsetIio : α → Finset α\n  /-- Left-infinite right-closed interval -/\n  finsetIic : α → Finset α\n  /-- `x ∈ finsetIic a ↔ x ≤ a` -/\n  finset_mem_Iic : ∀ a x : α, x ∈ finsetIic a ↔ x ≤ a\n  /-- `x ∈ finsetIio a ↔ x < a` -/\n  finset_mem_Iio : ∀ a x : α, x ∈ finsetIio a ↔ x < a\n\n"}
{"name":"LocallyFiniteOrderBot.finset_mem_Iio","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝ : Preorder α\nself : LocallyFiniteOrderBot α\na x : α\n⊢ Iff (Membership.mem (LocallyFiniteOrderBot.finsetIio a) x) (LT.lt x a)","decl":"/-- This mixin class describes an order where all intervals bounded above are finite. This is\nslightly weaker than `LocallyFiniteOrder` + `OrderBot` as it allows empty types. -/\nclass LocallyFiniteOrderBot (α : Type*) [Preorder α] where\n  /-- Left-infinite right-open interval -/\n  finsetIio : α → Finset α\n  /-- Left-infinite right-closed interval -/\n  finsetIic : α → Finset α\n  /-- `x ∈ finsetIic a ↔ x ≤ a` -/\n  finset_mem_Iic : ∀ a x : α, x ∈ finsetIic a ↔ x ≤ a\n  /-- `x ∈ finsetIio a ↔ x < a` -/\n  finset_mem_Iio : ∀ a x : α, x ∈ finsetIio a ↔ x < a\n\n"}
{"name":"Finset.mem_Icc","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b x : α\n⊢ Iff (Membership.mem (Finset.Icc a b) x) (And (LE.le a x) (LE.le x b))","decl":"@[simp]\ntheorem mem_Icc : x ∈ Icc a b ↔ a ≤ x ∧ x ≤ b :=\n  LocallyFiniteOrder.finset_mem_Icc a b x\n\n"}
{"name":"Finset.mem_Ico","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b x : α\n⊢ Iff (Membership.mem (Finset.Ico a b) x) (And (LE.le a x) (LT.lt x b))","decl":"@[simp]\ntheorem mem_Ico : x ∈ Ico a b ↔ a ≤ x ∧ x < b :=\n  LocallyFiniteOrder.finset_mem_Ico a b x\n\n"}
{"name":"Finset.mem_Ioc","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b x : α\n⊢ Iff (Membership.mem (Finset.Ioc a b) x) (And (LT.lt a x) (LE.le x b))","decl":"@[simp]\ntheorem mem_Ioc : x ∈ Ioc a b ↔ a < x ∧ x ≤ b :=\n  LocallyFiniteOrder.finset_mem_Ioc a b x\n\n"}
{"name":"Finset.mem_Ioo","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b x : α\n⊢ Iff (Membership.mem (Finset.Ioo a b) x) (And (LT.lt a x) (LT.lt x b))","decl":"@[simp]\ntheorem mem_Ioo : x ∈ Ioo a b ↔ a < x ∧ x < b :=\n  LocallyFiniteOrder.finset_mem_Ioo a b x\n\n"}
{"name":"Finset.coe_Icc","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Eq (↑(Finset.Icc a b)) (Set.Icc a b)","decl":"@[simp, norm_cast]\ntheorem coe_Icc (a b : α) : (Icc a b : Set α) = Set.Icc a b :=\n  Set.ext fun _ => mem_Icc\n\n"}
{"name":"Finset.coe_Ico","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Eq (↑(Finset.Ico a b)) (Set.Ico a b)","decl":"@[simp, norm_cast]\ntheorem coe_Ico (a b : α) : (Ico a b : Set α) = Set.Ico a b :=\n  Set.ext fun _ => mem_Ico\n\n"}
{"name":"Finset.coe_Ioc","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Eq (↑(Finset.Ioc a b)) (Set.Ioc a b)","decl":"@[simp, norm_cast]\ntheorem coe_Ioc (a b : α) : (Ioc a b : Set α) = Set.Ioc a b :=\n  Set.ext fun _ => mem_Ioc\n\n"}
{"name":"Finset.coe_Ioo","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Eq (↑(Finset.Ioo a b)) (Set.Ioo a b)","decl":"@[simp, norm_cast]\ntheorem coe_Ioo (a b : α) : (Ioo a b : Set α) = Set.Ioo a b :=\n  Set.ext fun _ => mem_Ioo\n\n"}
{"name":"Finset.mem_Ici","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderTop α\na x : α\n⊢ Iff (Membership.mem (Finset.Ici a) x) (LE.le a x)","decl":"@[simp]\ntheorem mem_Ici : x ∈ Ici a ↔ a ≤ x :=\n  LocallyFiniteOrderTop.finset_mem_Ici _ _\n\n"}
{"name":"Finset.mem_Ioi","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderTop α\na x : α\n⊢ Iff (Membership.mem (Finset.Ioi a) x) (LT.lt a x)","decl":"@[simp]\ntheorem mem_Ioi : x ∈ Ioi a ↔ a < x :=\n  LocallyFiniteOrderTop.finset_mem_Ioi _ _\n\n"}
{"name":"Finset.coe_Ici","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderTop α\na : α\n⊢ Eq (↑(Finset.Ici a)) (Set.Ici a)","decl":"@[simp, norm_cast]\ntheorem coe_Ici (a : α) : (Ici a : Set α) = Set.Ici a :=\n  Set.ext fun _ => mem_Ici\n\n"}
{"name":"Finset.coe_Ioi","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderTop α\na : α\n⊢ Eq (↑(Finset.Ioi a)) (Set.Ioi a)","decl":"@[simp, norm_cast]\ntheorem coe_Ioi (a : α) : (Ioi a : Set α) = Set.Ioi a :=\n  Set.ext fun _ => mem_Ioi\n\n"}
{"name":"Finset.mem_Iic","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderBot α\na x : α\n⊢ Iff (Membership.mem (Finset.Iic a) x) (LE.le x a)","decl":"@[simp]\ntheorem mem_Iic : x ∈ Iic a ↔ x ≤ a :=\n  LocallyFiniteOrderBot.finset_mem_Iic _ _\n\n"}
{"name":"Finset.mem_Iio","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderBot α\na x : α\n⊢ Iff (Membership.mem (Finset.Iio a) x) (LT.lt x a)","decl":"@[simp]\ntheorem mem_Iio : x ∈ Iio a ↔ x < a :=\n  LocallyFiniteOrderBot.finset_mem_Iio _ _\n\n"}
{"name":"Finset.coe_Iic","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderBot α\na : α\n⊢ Eq (↑(Finset.Iic a)) (Set.Iic a)","decl":"@[simp, norm_cast]\ntheorem coe_Iic (a : α) : (Iic a : Set α) = Set.Iic a :=\n  Set.ext fun _ => mem_Iic\n\n"}
{"name":"Finset.coe_Iio","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderBot α\na : α\n⊢ Eq (↑(Finset.Iio a)) (Set.Iio a)","decl":"@[simp, norm_cast]\ntheorem coe_Iio (a : α) : (Iio a : Set α) = Set.Iio a :=\n  Set.ext fun _ => mem_Iio\n\n"}
{"name":"Finset.Ici_eq_Icc","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : Preorder α\ninst✝¹ : LocallyFiniteOrder α\ninst✝ : OrderTop α\na : α\n⊢ Eq (Finset.Ici a) (Finset.Icc a Top.top)","decl":"theorem Ici_eq_Icc (a : α) : Ici a = Icc a ⊤ :=\n  rfl\n\n"}
{"name":"Finset.Ioi_eq_Ioc","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : Preorder α\ninst✝¹ : LocallyFiniteOrder α\ninst✝ : OrderTop α\na : α\n⊢ Eq (Finset.Ioi a) (Finset.Ioc a Top.top)","decl":"theorem Ioi_eq_Ioc (a : α) : Ioi a = Ioc a ⊤ :=\n  rfl\n\n"}
{"name":"Finset.Iic_eq_Icc","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : Preorder α\ninst✝¹ : OrderBot α\ninst✝ : LocallyFiniteOrder α\n⊢ Eq Finset.Iic (Finset.Icc Bot.bot)","decl":"theorem Iic_eq_Icc : Iic = Icc (⊥ : α) :=\n  rfl\n\n"}
{"name":"Finset.Iio_eq_Ico","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : Preorder α\ninst✝¹ : OrderBot α\ninst✝ : LocallyFiniteOrder α\n⊢ Eq Finset.Iio (Finset.Ico Bot.bot)","decl":"theorem Iio_eq_Ico : Iio = Ico (⊥ : α) :=\n  rfl\n\n"}
{"name":"Finset.mem_uIcc","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Lattice α\ninst✝ : LocallyFiniteOrder α\na b x : α\n⊢ Iff (Membership.mem (Finset.uIcc a b) x) (And (LE.le (Min.min a b) x) (LE.le x (Max.max a b)))","decl":"@[simp]\ntheorem mem_uIcc : x ∈ uIcc a b ↔ a ⊓ b ≤ x ∧ x ≤ a ⊔ b :=\n  mem_Icc\n\n"}
{"name":"Finset.coe_uIcc","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Lattice α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Eq (↑(Finset.uIcc a b)) (Set.uIcc a b)","decl":"@[simp, norm_cast]\ntheorem coe_uIcc (a b : α) : (Finset.uIcc a b : Set α) = Set.uIcc a b :=\n  coe_Icc _ _\n\n"}
{"name":"Set.finite_Icc","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ (Set.Icc a b).Finite","decl":"theorem finite_Icc : (Icc a b).Finite :=\n  (Icc a b).toFinite\n\n"}
{"name":"Set.finite_Ico","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ (Set.Ico a b).Finite","decl":"theorem finite_Ico : (Ico a b).Finite :=\n  (Ico a b).toFinite\n\n"}
{"name":"Set.finite_Ioc","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ (Set.Ioc a b).Finite","decl":"theorem finite_Ioc : (Ioc a b).Finite :=\n  (Ioc a b).toFinite\n\n"}
{"name":"Set.finite_Ioo","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ (Set.Ioo a b).Finite","decl":"theorem finite_Ioo : (Ioo a b).Finite :=\n  (Ioo a b).toFinite\n\n"}
{"name":"Set.finite_Ici","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderTop α\na : α\n⊢ (Set.Ici a).Finite","decl":"theorem finite_Ici : (Ici a).Finite :=\n  (Ici a).toFinite\n\n"}
{"name":"Set.finite_Ioi","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderTop α\na : α\n⊢ (Set.Ioi a).Finite","decl":"theorem finite_Ioi : (Ioi a).Finite :=\n  (Ioi a).toFinite\n\n"}
{"name":"Set.finite_Iic","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderBot α\nb : α\n⊢ (Set.Iic b).Finite","decl":"theorem finite_Iic : (Iic b).Finite :=\n  (Iic b).toFinite\n\n"}
{"name":"Set.finite_Iio","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderBot α\nb : α\n⊢ (Set.Iio b).Finite","decl":"theorem finite_Iio : (Iio b).Finite :=\n  (Iio b).toFinite\n\n"}
{"name":"Set.finite_interval","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Lattice α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ (Set.uIcc a b).Finite","decl":"@[simp]\ntheorem finite_interval : (uIcc a b).Finite := (uIcc _ _).toFinite\n\n"}
{"name":"instSubsingletonLocallyFiniteOrder","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝ : Preorder α\n⊢ Subsingleton (LocallyFiniteOrder α)","decl":"instance : Subsingleton (LocallyFiniteOrder α) :=\n  Subsingleton.intro fun h₀ h₁ => by\n    cases' h₀ with h₀_finset_Icc h₀_finset_Ico h₀_finset_Ioc h₀_finset_Ioo\n      h₀_finset_mem_Icc h₀_finset_mem_Ico h₀_finset_mem_Ioc h₀_finset_mem_Ioo\n    cases' h₁ with h₁_finset_Icc h₁_finset_Ico h₁_finset_Ioc h₁_finset_Ioo\n      h₁_finset_mem_Icc h₁_finset_mem_Ico h₁_finset_mem_Ioc h₁_finset_mem_Ioo\n    have hIcc : h₀_finset_Icc = h₁_finset_Icc := by\n      ext a b x\n      rw [h₀_finset_mem_Icc, h₁_finset_mem_Icc]\n    have hIco : h₀_finset_Ico = h₁_finset_Ico := by\n      ext a b x\n      rw [h₀_finset_mem_Ico, h₁_finset_mem_Ico]\n    have hIoc : h₀_finset_Ioc = h₁_finset_Ioc := by\n      ext a b x\n      rw [h₀_finset_mem_Ioc, h₁_finset_mem_Ioc]\n    have hIoo : h₀_finset_Ioo = h₁_finset_Ioo := by\n      ext a b x\n      rw [h₀_finset_mem_Ioo, h₁_finset_mem_Ioo]\n    simp_rw [hIcc, hIco, hIoc, hIoo]\n\n"}
{"name":"instSubsingletonLocallyFiniteOrderTop","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝ : Preorder α\n⊢ Subsingleton (LocallyFiniteOrderTop α)","decl":"instance : Subsingleton (LocallyFiniteOrderTop α) :=\n  Subsingleton.intro fun h₀ h₁ => by\n    cases' h₀ with h₀_finset_Ioi h₀_finset_Ici h₀_finset_mem_Ici h₀_finset_mem_Ioi\n    cases' h₁ with h₁_finset_Ioi h₁_finset_Ici h₁_finset_mem_Ici h₁_finset_mem_Ioi\n    have hIci : h₀_finset_Ici = h₁_finset_Ici := by\n      ext a b\n      rw [h₀_finset_mem_Ici, h₁_finset_mem_Ici]\n    have hIoi : h₀_finset_Ioi = h₁_finset_Ioi := by\n      ext a b\n      rw [h₀_finset_mem_Ioi, h₁_finset_mem_Ioi]\n    simp_rw [hIci, hIoi]\n\n"}
{"name":"instSubsingletonLocallyFiniteOrderBot","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝ : Preorder α\n⊢ Subsingleton (LocallyFiniteOrderBot α)","decl":"instance : Subsingleton (LocallyFiniteOrderBot α) :=\n  Subsingleton.intro fun h₀ h₁ => by\n    cases' h₀ with h₀_finset_Iio h₀_finset_Iic h₀_finset_mem_Iic h₀_finset_mem_Iio\n    cases' h₁ with h₁_finset_Iio h₁_finset_Iic h₁_finset_mem_Iic h₁_finset_mem_Iio\n    have hIic : h₀_finset_Iic = h₁_finset_Iic := by\n      ext a b\n      rw [h₀_finset_mem_Iic, h₁_finset_mem_Iic]\n    have hIio : h₀_finset_Iio = h₁_finset_Iio := by\n      ext a b\n      rw [h₀_finset_mem_Iio, h₁_finset_mem_Iio]\n    simp_rw [hIic, hIio]\n\n-- Should this be called `LocallyFiniteOrder.lift`?\n"}
{"name":"Finset.Icc_orderDual_def","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : OrderDual α\n⊢ Eq (Finset.Icc a b) (Finset.map OrderDual.toDual.toEmbedding (Finset.Icc (OrderDual.ofDual b) (OrderDual.ofDual a)))","decl":"lemma Finset.Icc_orderDual_def (a b : αᵒᵈ) :\n    Icc a b = (Icc (ofDual b) (ofDual a)).map toDual.toEmbedding := map_refl.symm\n\n"}
{"name":"Finset.Ico_orderDual_def","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : OrderDual α\n⊢ Eq (Finset.Ico a b) (Finset.map OrderDual.toDual.toEmbedding (Finset.Ioc (OrderDual.ofDual b) (OrderDual.ofDual a)))","decl":"lemma Finset.Ico_orderDual_def (a b : αᵒᵈ) :\n    Ico a b = (Ioc (ofDual b) (ofDual a)).map toDual.toEmbedding := map_refl.symm\n\n"}
{"name":"Finset.Ioc_orderDual_def","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : OrderDual α\n⊢ Eq (Finset.Ioc a b) (Finset.map OrderDual.toDual.toEmbedding (Finset.Ico (OrderDual.ofDual b) (OrderDual.ofDual a)))","decl":"lemma Finset.Ioc_orderDual_def (a b : αᵒᵈ) :\n    Ioc a b = (Ico (ofDual b) (ofDual a)).map toDual.toEmbedding := map_refl.symm\n\n"}
{"name":"Finset.Ioo_orderDual_def","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : OrderDual α\n⊢ Eq (Finset.Ioo a b) (Finset.map OrderDual.toDual.toEmbedding (Finset.Ioo (OrderDual.ofDual b) (OrderDual.ofDual a)))","decl":"lemma Finset.Ioo_orderDual_def (a b : αᵒᵈ) :\n    Ioo a b = (Ioo (ofDual b) (ofDual a)).map toDual.toEmbedding := map_refl.symm\n\n"}
{"name":"Finset.Icc_toDual","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Eq (Finset.Icc (OrderDual.toDual a) (OrderDual.toDual b)) (Finset.map OrderDual.toDual.toEmbedding (Finset.Icc b a))","decl":"lemma Finset.Icc_toDual : Icc (toDual a) (toDual b) = (Icc b a).map toDual.toEmbedding :=\n  map_refl.symm\n\n"}
{"name":"Finset.Ico_toDual","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Eq (Finset.Ico (OrderDual.toDual a) (OrderDual.toDual b)) (Finset.map OrderDual.toDual.toEmbedding (Finset.Ioc b a))","decl":"lemma Finset.Ico_toDual : Ico (toDual a) (toDual b) = (Ioc b a).map toDual.toEmbedding :=\n  map_refl.symm\n\n"}
{"name":"Finset.Ioc_toDual","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Eq (Finset.Ioc (OrderDual.toDual a) (OrderDual.toDual b)) (Finset.map OrderDual.toDual.toEmbedding (Finset.Ico b a))","decl":"lemma Finset.Ioc_toDual : Ioc (toDual a) (toDual b) = (Ico b a).map toDual.toEmbedding :=\n  map_refl.symm\n\n"}
{"name":"Finset.Ioo_toDual","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Eq (Finset.Ioo (OrderDual.toDual a) (OrderDual.toDual b)) (Finset.map OrderDual.toDual.toEmbedding (Finset.Ioo b a))","decl":"lemma Finset.Ioo_toDual : Ioo (toDual a) (toDual b) = (Ioo b a).map toDual.toEmbedding :=\n  map_refl.symm\n\n"}
{"name":"Finset.Icc_ofDual","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : OrderDual α\n⊢ Eq (Finset.Icc (OrderDual.ofDual a) (OrderDual.ofDual b)) (Finset.map OrderDual.ofDual.toEmbedding (Finset.Icc b a))","decl":"lemma Finset.Icc_ofDual (a b : αᵒᵈ) :\n    Icc (ofDual a) (ofDual b) = (Icc b a).map ofDual.toEmbedding := map_refl.symm\n\n"}
{"name":"Finset.Ico_ofDual","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : OrderDual α\n⊢ Eq (Finset.Ico (OrderDual.ofDual a) (OrderDual.ofDual b)) (Finset.map OrderDual.ofDual.toEmbedding (Finset.Ioc b a))","decl":"lemma Finset.Ico_ofDual (a b : αᵒᵈ) :\n    Ico (ofDual a) (ofDual b) = (Ioc b a).map ofDual.toEmbedding := map_refl.symm\n\n"}
{"name":"Finset.Ioc_ofDual","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : OrderDual α\n⊢ Eq (Finset.Ioc (OrderDual.ofDual a) (OrderDual.ofDual b)) (Finset.map OrderDual.ofDual.toEmbedding (Finset.Ico b a))","decl":"lemma Finset.Ioc_ofDual (a b : αᵒᵈ) :\n    Ioc (ofDual a) (ofDual b) = (Ico b a).map ofDual.toEmbedding := map_refl.symm\n\n"}
{"name":"Finset.Ioo_ofDual","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\na b : OrderDual α\n⊢ Eq (Finset.Ioo (OrderDual.ofDual a) (OrderDual.ofDual b)) (Finset.map OrderDual.ofDual.toEmbedding (Finset.Ioo b a))","decl":"lemma Finset.Ioo_ofDual (a b : αᵒᵈ) :\n    Ioo (ofDual a) (ofDual b) = (Ioo b a).map ofDual.toEmbedding := map_refl.symm\n\n"}
{"name":"Iic_orderDual_def","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderTop α\na : OrderDual α\n⊢ Eq (Finset.Iic a) (Finset.map OrderDual.toDual.toEmbedding (Finset.Ici (OrderDual.ofDual a)))","decl":"lemma Iic_orderDual_def (a : αᵒᵈ) : Iic a = (Ici (ofDual a)).map toDual.toEmbedding := map_refl.symm\n"}
{"name":"Iio_orderDual_def","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderTop α\na : OrderDual α\n⊢ Eq (Finset.Iio a) (Finset.map OrderDual.toDual.toEmbedding (Finset.Ioi (OrderDual.ofDual a)))","decl":"lemma Iio_orderDual_def (a : αᵒᵈ) : Iio a = (Ioi (ofDual a)).map toDual.toEmbedding := map_refl.symm\n\n"}
{"name":"Finset.Iic_toDual","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderTop α\na : α\n⊢ Eq (Finset.Iic (OrderDual.toDual a)) (Finset.map OrderDual.toDual.toEmbedding (Finset.Ici a))","decl":"lemma Finset.Iic_toDual (a : α) : Iic (toDual a) = (Ici a).map toDual.toEmbedding :=\n  map_refl.symm\n\n"}
{"name":"Finset.Iio_toDual","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderTop α\na : α\n⊢ Eq (Finset.Iio (OrderDual.toDual a)) (Finset.map OrderDual.toDual.toEmbedding (Finset.Ioi a))","decl":"lemma Finset.Iio_toDual (a : α) : Iio (toDual a) = (Ioi a).map toDual.toEmbedding :=\n  map_refl.symm\n\n"}
{"name":"Finset.Ici_ofDual","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderTop α\na : OrderDual α\n⊢ Eq (Finset.Ici (OrderDual.ofDual a)) (Finset.map OrderDual.ofDual.toEmbedding (Finset.Iic a))","decl":"lemma Finset.Ici_ofDual (a : αᵒᵈ) : Ici (ofDual a) = (Iic a).map ofDual.toEmbedding :=\n  map_refl.symm\n\n"}
{"name":"Finset.Ioi_ofDual","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderTop α\na : OrderDual α\n⊢ Eq (Finset.Ioi (OrderDual.ofDual a)) (Finset.map OrderDual.ofDual.toEmbedding (Finset.Iio a))","decl":"lemma Finset.Ioi_ofDual (a : αᵒᵈ) : Ioi (ofDual a) = (Iio a).map ofDual.toEmbedding :=\n  map_refl.symm\n\n"}
{"name":"Ici_orderDual_def","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderBot α\na : OrderDual α\n⊢ Eq (Finset.Ici a) (Finset.map OrderDual.toDual.toEmbedding (Finset.Iic (OrderDual.ofDual a)))","decl":"lemma Ici_orderDual_def (a : αᵒᵈ) : Ici a = (Iic (ofDual a)).map toDual.toEmbedding := map_refl.symm\n"}
{"name":"Ioi_orderDual_def","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderBot α\na : OrderDual α\n⊢ Eq (Finset.Ioi a) (Finset.map OrderDual.toDual.toEmbedding (Finset.Iio (OrderDual.ofDual a)))","decl":"lemma Ioi_orderDual_def (a : αᵒᵈ) : Ioi a = (Iio (ofDual a)).map toDual.toEmbedding := map_refl.symm\n\n"}
{"name":"Finset.Ici_toDual","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderBot α\na : α\n⊢ Eq (Finset.Ici (OrderDual.toDual a)) (Finset.map OrderDual.toDual.toEmbedding (Finset.Iic a))","decl":"lemma Finset.Ici_toDual (a : α) : Ici (toDual a) = (Iic a).map toDual.toEmbedding :=\n  map_refl.symm\n\n"}
{"name":"Finset.Ioi_toDual","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderBot α\na : α\n⊢ Eq (Finset.Ioi (OrderDual.toDual a)) (Finset.map OrderDual.toDual.toEmbedding (Finset.Iio a))","decl":"lemma Finset.Ioi_toDual (a : α) : Ioi (toDual a) = (Iio a).map toDual.toEmbedding :=\n  map_refl.symm\n\n"}
{"name":"Finset.Iic_ofDual","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderBot α\na : OrderDual α\n⊢ Eq (Finset.Iic (OrderDual.ofDual a)) (Finset.map OrderDual.ofDual.toEmbedding (Finset.Ici a))","decl":"lemma Finset.Iic_ofDual (a : αᵒᵈ) : Iic (ofDual a) = (Ici a).map ofDual.toEmbedding :=\n  map_refl.symm\n\n"}
{"name":"Finset.Iio_ofDual","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderBot α\na : OrderDual α\n⊢ Eq (Finset.Iio (OrderDual.ofDual a)) (Finset.map OrderDual.ofDual.toEmbedding (Finset.Ioi a))","decl":"lemma Finset.Iio_ofDual (a : αᵒᵈ) : Iio (ofDual a) = (Ioi a).map ofDual.toEmbedding :=\n  map_refl.symm\n\n"}
{"name":"Finset.Icc_prod_def","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁴ : Preorder α\ninst✝³ : Preorder β\ninst✝² : LocallyFiniteOrder α\ninst✝¹ : LocallyFiniteOrder β\ninst✝ : DecidableRel fun x1 x2 => LE.le x1 x2\nx y : Prod α β\n⊢ Eq (Finset.Icc x y) (SProd.sprod (Finset.Icc x.1 y.1) (Finset.Icc x.2 y.2))","decl":"lemma Finset.Icc_prod_def (x y : α × β) : Icc x y = Icc x.1 y.1 ×ˢ Icc x.2 y.2 := rfl\n\n"}
{"name":"Finset.Icc_product_Icc","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁴ : Preorder α\ninst✝³ : Preorder β\ninst✝² : LocallyFiniteOrder α\ninst✝¹ : LocallyFiniteOrder β\ninst✝ : DecidableRel fun x1 x2 => LE.le x1 x2\na₁ a₂ : α\nb₁ b₂ : β\n⊢ Eq (SProd.sprod (Finset.Icc a₁ a₂) (Finset.Icc b₁ b₂)) (Finset.Icc { fst := a₁, snd := b₁ } { fst := a₂, snd := b₂ })","decl":"lemma Finset.Icc_product_Icc (a₁ a₂ : α) (b₁ b₂ : β) :\n    Icc a₁ a₂ ×ˢ Icc b₁ b₂ = Icc (a₁, b₁) (a₂, b₂) := rfl\n\n"}
{"name":"Finset.card_Icc_prod","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁴ : Preorder α\ninst✝³ : Preorder β\ninst✝² : LocallyFiniteOrder α\ninst✝¹ : LocallyFiniteOrder β\ninst✝ : DecidableRel fun x1 x2 => LE.le x1 x2\nx y : Prod α β\n⊢ Eq (Finset.Icc x y).card (HMul.hMul (Finset.Icc x.1 y.1).card (Finset.Icc x.2 y.2).card)","decl":"lemma Finset.card_Icc_prod (x y : α × β) : #(Icc x y) = #(Icc x.1 y.1) * #(Icc x.2 y.2) :=\n  card_product ..\n\n"}
{"name":"Finset.Ici_prod_def","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁴ : Preorder α\ninst✝³ : Preorder β\ninst✝² : LocallyFiniteOrderTop α\ninst✝¹ : LocallyFiniteOrderTop β\ninst✝ : DecidableRel fun x1 x2 => LE.le x1 x2\nx : Prod α β\n⊢ Eq (Finset.Ici x) (SProd.sprod (Finset.Ici x.1) (Finset.Ici x.2))","decl":"lemma Finset.Ici_prod_def (x : α × β) : Ici x = Ici x.1 ×ˢ Ici x.2 := rfl\n"}
{"name":"Finset.Ici_product_Ici","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁴ : Preorder α\ninst✝³ : Preorder β\ninst✝² : LocallyFiniteOrderTop α\ninst✝¹ : LocallyFiniteOrderTop β\ninst✝ : DecidableRel fun x1 x2 => LE.le x1 x2\na : α\nb : β\n⊢ Eq (SProd.sprod (Finset.Ici a) (Finset.Ici b)) (Finset.Ici { fst := a, snd := b })","decl":"lemma Finset.Ici_product_Ici (a : α) (b : β) : Ici a ×ˢ Ici b = Ici (a, b) := rfl\n"}
{"name":"Finset.card_Ici_prod","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁴ : Preorder α\ninst✝³ : Preorder β\ninst✝² : LocallyFiniteOrderTop α\ninst✝¹ : LocallyFiniteOrderTop β\ninst✝ : DecidableRel fun x1 x2 => LE.le x1 x2\nx : Prod α β\n⊢ Eq (Finset.Ici x).card (HMul.hMul (Finset.Ici x.1).card (Finset.Ici x.2).card)","decl":"lemma Finset.card_Ici_prod (x : α × β) : #(Ici x) = #(Ici x.1) * #(Ici x.2) :=\n  card_product _ _\n\n"}
{"name":"Finset.Iic_prod_def","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁴ : Preorder α\ninst✝³ : Preorder β\ninst✝² : LocallyFiniteOrderBot α\ninst✝¹ : LocallyFiniteOrderBot β\ninst✝ : DecidableRel fun x1 x2 => LE.le x1 x2\nx : Prod α β\n⊢ Eq (Finset.Iic x) (SProd.sprod (Finset.Iic x.1) (Finset.Iic x.2))","decl":"lemma Finset.Iic_prod_def (x : α × β) : Iic x = Iic x.1 ×ˢ Iic x.2 := rfl\n"}
{"name":"Finset.Iic_product_Iic","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁴ : Preorder α\ninst✝³ : Preorder β\ninst✝² : LocallyFiniteOrderBot α\ninst✝¹ : LocallyFiniteOrderBot β\ninst✝ : DecidableRel fun x1 x2 => LE.le x1 x2\na : α\nb : β\n⊢ Eq (SProd.sprod (Finset.Iic a) (Finset.Iic b)) (Finset.Iic { fst := a, snd := b })","decl":"lemma Finset.Iic_product_Iic (a : α) (b : β) : Iic a ×ˢ Iic b = Iic (a, b) := rfl\n"}
{"name":"Finset.card_Iic_prod","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁴ : Preorder α\ninst✝³ : Preorder β\ninst✝² : LocallyFiniteOrderBot α\ninst✝¹ : LocallyFiniteOrderBot β\ninst✝ : DecidableRel fun x1 x2 => LE.le x1 x2\nx : Prod α β\n⊢ Eq (Finset.Iic x).card (HMul.hMul (Finset.Iic x.1).card (Finset.Iic x.2).card)","decl":"lemma Finset.card_Iic_prod (x : α × β) : #(Iic x) = #(Iic x.1) * #(Iic x.2) := card_product ..\n\n"}
{"name":"Finset.uIcc_prod_def","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁴ : Lattice α\ninst✝³ : Lattice β\ninst✝² : LocallyFiniteOrder α\ninst✝¹ : LocallyFiniteOrder β\ninst✝ : DecidableRel fun x1 x2 => LE.le x1 x2\nx y : Prod α β\n⊢ Eq (Finset.uIcc x y) (SProd.sprod (Finset.uIcc x.1 y.1) (Finset.uIcc x.2 y.2))","decl":"lemma Finset.uIcc_prod_def (x y : α × β) : uIcc x y = uIcc x.1 y.1 ×ˢ uIcc x.2 y.2 := rfl\n\n"}
{"name":"Finset.uIcc_product_uIcc","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁴ : Lattice α\ninst✝³ : Lattice β\ninst✝² : LocallyFiniteOrder α\ninst✝¹ : LocallyFiniteOrder β\ninst✝ : DecidableRel fun x1 x2 => LE.le x1 x2\na₁ a₂ : α\nb₁ b₂ : β\n⊢ Eq (SProd.sprod (Finset.uIcc a₁ a₂) (Finset.uIcc b₁ b₂)) (Finset.uIcc { fst := a₁, snd := b₁ } { fst := a₂, snd := b₂ })","decl":"lemma Finset.uIcc_product_uIcc (a₁ a₂ : α) (b₁ b₂ : β) :\n    uIcc a₁ a₂ ×ˢ uIcc b₁ b₂ = uIcc (a₁, b₁) (a₂, b₂) := rfl\n\n"}
{"name":"Finset.card_uIcc_prod","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁴ : Lattice α\ninst✝³ : Lattice β\ninst✝² : LocallyFiniteOrder α\ninst✝¹ : LocallyFiniteOrder β\ninst✝ : DecidableRel fun x1 x2 => LE.le x1 x2\nx y : Prod α β\n⊢ Eq (Finset.uIcc x y).card (HMul.hMul (Finset.uIcc x.1 y.1).card (Finset.uIcc x.2 y.2).card)","decl":"lemma Finset.card_uIcc_prod (x y : α × β) : #(uIcc x y) = #(uIcc x.1 y.1) * #(uIcc x.2 y.2) :=\n  card_product ..\n\n"}
{"name":"WithTop.Icc_coe_top","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : PartialOrder α\ninst✝¹ : OrderTop α\ninst✝ : LocallyFiniteOrder α\na : α\n⊢ Eq (Finset.Icc (↑a) Top.top) (Finset.insertNone (Finset.Ici a))","decl":"theorem Icc_coe_top : Icc (a : WithTop α) ⊤ = insertNone (Ici a) :=\n  rfl\n\n"}
{"name":"WithTop.Icc_coe_coe","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : PartialOrder α\ninst✝¹ : OrderTop α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Eq (Finset.Icc ↑a ↑b) (Finset.map Function.Embedding.some (Finset.Icc a b))","decl":"theorem Icc_coe_coe : Icc (a : WithTop α) b = (Icc a b).map Embedding.some :=\n  rfl\n\n"}
{"name":"WithTop.Ico_coe_top","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : PartialOrder α\ninst✝¹ : OrderTop α\ninst✝ : LocallyFiniteOrder α\na : α\n⊢ Eq (Finset.Ico (↑a) Top.top) (Finset.map Function.Embedding.some (Finset.Ici a))","decl":"theorem Ico_coe_top : Ico (a : WithTop α) ⊤ = (Ici a).map Embedding.some :=\n  rfl\n\n"}
{"name":"WithTop.Ico_coe_coe","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : PartialOrder α\ninst✝¹ : OrderTop α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Eq (Finset.Ico ↑a ↑b) (Finset.map Function.Embedding.some (Finset.Ico a b))","decl":"theorem Ico_coe_coe : Ico (a : WithTop α) b = (Ico a b).map Embedding.some :=\n  rfl\n\n"}
{"name":"WithTop.Ioc_coe_top","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : PartialOrder α\ninst✝¹ : OrderTop α\ninst✝ : LocallyFiniteOrder α\na : α\n⊢ Eq (Finset.Ioc (↑a) Top.top) (Finset.insertNone (Finset.Ioi a))","decl":"theorem Ioc_coe_top : Ioc (a : WithTop α) ⊤ = insertNone (Ioi a) :=\n  rfl\n\n"}
{"name":"WithTop.Ioc_coe_coe","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : PartialOrder α\ninst✝¹ : OrderTop α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Eq (Finset.Ioc ↑a ↑b) (Finset.map Function.Embedding.some (Finset.Ioc a b))","decl":"theorem Ioc_coe_coe : Ioc (a : WithTop α) b = (Ioc a b).map Embedding.some :=\n  rfl\n\n"}
{"name":"WithTop.Ioo_coe_top","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : PartialOrder α\ninst✝¹ : OrderTop α\ninst✝ : LocallyFiniteOrder α\na : α\n⊢ Eq (Finset.Ioo (↑a) Top.top) (Finset.map Function.Embedding.some (Finset.Ioi a))","decl":"theorem Ioo_coe_top : Ioo (a : WithTop α) ⊤ = (Ioi a).map Embedding.some :=\n  rfl\n\n"}
{"name":"WithTop.Ioo_coe_coe","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : PartialOrder α\ninst✝¹ : OrderTop α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Eq (Finset.Ioo ↑a ↑b) (Finset.map Function.Embedding.some (Finset.Ioo a b))","decl":"theorem Ioo_coe_coe : Ioo (a : WithTop α) b = (Ioo a b).map Embedding.some :=\n  rfl\n\n"}
{"name":"WithBot.Icc_bot_coe","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : PartialOrder α\ninst✝¹ : OrderBot α\ninst✝ : LocallyFiniteOrder α\nb : α\n⊢ Eq (Finset.Icc Bot.bot ↑b) (Finset.insertNone (Finset.Iic b))","decl":"theorem Icc_bot_coe : Icc (⊥ : WithBot α) b = insertNone (Iic b) :=\n  rfl\n\n"}
{"name":"WithBot.Icc_coe_coe","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : PartialOrder α\ninst✝¹ : OrderBot α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Eq (Finset.Icc ↑a ↑b) (Finset.map Function.Embedding.some (Finset.Icc a b))","decl":"theorem Icc_coe_coe : Icc (a : WithBot α) b = (Icc a b).map Embedding.some :=\n  rfl\n\n"}
{"name":"WithBot.Ico_bot_coe","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : PartialOrder α\ninst✝¹ : OrderBot α\ninst✝ : LocallyFiniteOrder α\nb : α\n⊢ Eq (Finset.Ico Bot.bot ↑b) (Finset.insertNone (Finset.Iio b))","decl":"theorem Ico_bot_coe : Ico (⊥ : WithBot α) b = insertNone (Iio b) :=\n  rfl\n\n"}
{"name":"WithBot.Ico_coe_coe","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : PartialOrder α\ninst✝¹ : OrderBot α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Eq (Finset.Ico ↑a ↑b) (Finset.map Function.Embedding.some (Finset.Ico a b))","decl":"theorem Ico_coe_coe : Ico (a : WithBot α) b = (Ico a b).map Embedding.some :=\n  rfl\n\n"}
{"name":"WithBot.Ioc_bot_coe","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : PartialOrder α\ninst✝¹ : OrderBot α\ninst✝ : LocallyFiniteOrder α\nb : α\n⊢ Eq (Finset.Ioc Bot.bot ↑b) (Finset.map Function.Embedding.some (Finset.Iic b))","decl":"theorem Ioc_bot_coe : Ioc (⊥ : WithBot α) b = (Iic b).map Embedding.some :=\n  rfl\n\n"}
{"name":"WithBot.Ioc_coe_coe","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : PartialOrder α\ninst✝¹ : OrderBot α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Eq (Finset.Ioc ↑a ↑b) (Finset.map Function.Embedding.some (Finset.Ioc a b))","decl":"theorem Ioc_coe_coe : Ioc (a : WithBot α) b = (Ioc a b).map Embedding.some :=\n  rfl\n\n"}
{"name":"WithBot.Ioo_bot_coe","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : PartialOrder α\ninst✝¹ : OrderBot α\ninst✝ : LocallyFiniteOrder α\nb : α\n⊢ Eq (Finset.Ioo Bot.bot ↑b) (Finset.map Function.Embedding.some (Finset.Iio b))","decl":"theorem Ioo_bot_coe : Ioo (⊥ : WithBot α) b = (Iio b).map Embedding.some :=\n  rfl\n\n"}
{"name":"WithBot.Ioo_coe_coe","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : PartialOrder α\ninst✝¹ : OrderBot α\ninst✝ : LocallyFiniteOrder α\na b : α\n⊢ Eq (Finset.Ioo ↑a ↑b) (Finset.map Function.Embedding.some (Finset.Ioo a b))","decl":"theorem Ioo_coe_coe : Ioo (a : WithBot α) b = (Ioo a b).map Embedding.some :=\n  rfl\n\n"}
{"name":"Finset.subtype_Icc_eq","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : Preorder α\np : α → Prop\ninst✝¹ : DecidablePred p\ninst✝ : LocallyFiniteOrder α\na b : Subtype p\n⊢ Eq (Finset.Icc a b) (Finset.subtype p (Finset.Icc ↑a ↑b))","decl":"theorem subtype_Icc_eq : Icc a b = (Icc (a : α) b).subtype p :=\n  rfl\n\n"}
{"name":"Finset.subtype_Ico_eq","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : Preorder α\np : α → Prop\ninst✝¹ : DecidablePred p\ninst✝ : LocallyFiniteOrder α\na b : Subtype p\n⊢ Eq (Finset.Ico a b) (Finset.subtype p (Finset.Ico ↑a ↑b))","decl":"theorem subtype_Ico_eq : Ico a b = (Ico (a : α) b).subtype p :=\n  rfl\n\n"}
{"name":"Finset.subtype_Ioc_eq","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : Preorder α\np : α → Prop\ninst✝¹ : DecidablePred p\ninst✝ : LocallyFiniteOrder α\na b : Subtype p\n⊢ Eq (Finset.Ioc a b) (Finset.subtype p (Finset.Ioc ↑a ↑b))","decl":"theorem subtype_Ioc_eq : Ioc a b = (Ioc (a : α) b).subtype p :=\n  rfl\n\n"}
{"name":"Finset.subtype_Ioo_eq","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : Preorder α\np : α → Prop\ninst✝¹ : DecidablePred p\ninst✝ : LocallyFiniteOrder α\na b : Subtype p\n⊢ Eq (Finset.Ioo a b) (Finset.subtype p (Finset.Ioo ↑a ↑b))","decl":"theorem subtype_Ioo_eq : Ioo a b = (Ioo (a : α) b).subtype p :=\n  rfl\n\n"}
{"name":"Finset.map_subtype_embedding_Icc","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : Preorder α\np : α → Prop\ninst✝¹ : DecidablePred p\ninst✝ : LocallyFiniteOrder α\na b : Subtype p\nhp : ∀ ⦃a b x : α⦄, LE.le a x → LE.le x b → p a → p b → p x\n⊢ Eq (Finset.map (Function.Embedding.subtype p) (Finset.Icc a b)) (Finset.Icc ↑a ↑b)","decl":"theorem map_subtype_embedding_Icc (hp : ∀ ⦃a b x⦄, a ≤ x → x ≤ b → p a → p b → p x):\n    (Icc a b).map (Embedding.subtype p) = (Icc a b : Finset α) := by\n  rw [subtype_Icc_eq]\n  refine Finset.subtype_map_of_mem fun x hx => ?_\n  rw [mem_Icc] at hx\n  exact hp hx.1 hx.2 a.prop b.prop\n\n"}
{"name":"Finset.map_subtype_embedding_Ico","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : Preorder α\np : α → Prop\ninst✝¹ : DecidablePred p\ninst✝ : LocallyFiniteOrder α\na b : Subtype p\nhp : ∀ ⦃a b x : α⦄, LE.le a x → LE.le x b → p a → p b → p x\n⊢ Eq (Finset.map (Function.Embedding.subtype p) (Finset.Ico a b)) (Finset.Ico ↑a ↑b)","decl":"theorem map_subtype_embedding_Ico (hp : ∀ ⦃a b x⦄, a ≤ x → x ≤ b → p a → p b → p x):\n    (Ico a b).map (Embedding.subtype p) = (Ico a b : Finset α) := by\n  rw [subtype_Ico_eq]\n  refine Finset.subtype_map_of_mem fun x hx => ?_\n  rw [mem_Ico] at hx\n  exact hp hx.1 hx.2.le a.prop b.prop\n\n"}
{"name":"Finset.map_subtype_embedding_Ioc","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : Preorder α\np : α → Prop\ninst✝¹ : DecidablePred p\ninst✝ : LocallyFiniteOrder α\na b : Subtype p\nhp : ∀ ⦃a b x : α⦄, LE.le a x → LE.le x b → p a → p b → p x\n⊢ Eq (Finset.map (Function.Embedding.subtype p) (Finset.Ioc a b)) (Finset.Ioc ↑a ↑b)","decl":"theorem map_subtype_embedding_Ioc (hp : ∀ ⦃a b x⦄, a ≤ x → x ≤ b → p a → p b → p x):\n    (Ioc a b).map (Embedding.subtype p) = (Ioc a b : Finset α) := by\n  rw [subtype_Ioc_eq]\n  refine Finset.subtype_map_of_mem fun x hx => ?_\n  rw [mem_Ioc] at hx\n  exact hp hx.1.le hx.2 a.prop b.prop\n\n"}
{"name":"Finset.map_subtype_embedding_Ioo","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : Preorder α\np : α → Prop\ninst✝¹ : DecidablePred p\ninst✝ : LocallyFiniteOrder α\na b : Subtype p\nhp : ∀ ⦃a b x : α⦄, LE.le a x → LE.le x b → p a → p b → p x\n⊢ Eq (Finset.map (Function.Embedding.subtype p) (Finset.Ioo a b)) (Finset.Ioo ↑a ↑b)","decl":"theorem map_subtype_embedding_Ioo (hp : ∀ ⦃a b x⦄, a ≤ x → x ≤ b → p a → p b → p x):\n    (Ioo a b).map (Embedding.subtype p) = (Ioo a b : Finset α) := by\n  rw [subtype_Ioo_eq]\n  refine Finset.subtype_map_of_mem fun x hx => ?_\n  rw [mem_Ioo] at hx\n  exact hp hx.1.le hx.2.le a.prop b.prop\n\n"}
{"name":"Finset.subtype_Ici_eq","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : Preorder α\np : α → Prop\ninst✝¹ : DecidablePred p\ninst✝ : LocallyFiniteOrderTop α\na : Subtype p\n⊢ Eq (Finset.Ici a) (Finset.subtype p (Finset.Ici ↑a))","decl":"theorem subtype_Ici_eq : Ici a = (Ici (a : α)).subtype p :=\n  rfl\n\n"}
{"name":"Finset.subtype_Ioi_eq","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : Preorder α\np : α → Prop\ninst✝¹ : DecidablePred p\ninst✝ : LocallyFiniteOrderTop α\na : Subtype p\n⊢ Eq (Finset.Ioi a) (Finset.subtype p (Finset.Ioi ↑a))","decl":"theorem subtype_Ioi_eq : Ioi a = (Ioi (a : α)).subtype p :=\n  rfl\n\n"}
{"name":"Finset.map_subtype_embedding_Ici","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : Preorder α\np : α → Prop\ninst✝¹ : DecidablePred p\ninst✝ : LocallyFiniteOrderTop α\na : Subtype p\nhp : ∀ ⦃a x : α⦄, LE.le a x → p a → p x\n⊢ Eq (Finset.map (Function.Embedding.subtype p) (Finset.Ici a)) (Finset.Ici ↑a)","decl":"theorem map_subtype_embedding_Ici (hp : ∀ ⦃a x⦄, a ≤ x → p a → p x) :\n    (Ici a).map (Embedding.subtype p) = (Ici a : Finset α) := by\n  rw [subtype_Ici_eq]\n  exact Finset.subtype_map_of_mem fun x hx => hp (mem_Ici.1 hx) a.prop\n\n"}
{"name":"Finset.map_subtype_embedding_Ioi","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : Preorder α\np : α → Prop\ninst✝¹ : DecidablePred p\ninst✝ : LocallyFiniteOrderTop α\na : Subtype p\nhp : ∀ ⦃a x : α⦄, LE.le a x → p a → p x\n⊢ Eq (Finset.map (Function.Embedding.subtype p) (Finset.Ioi a)) (Finset.Ioi ↑a)","decl":"theorem map_subtype_embedding_Ioi (hp : ∀ ⦃a x⦄, a ≤ x → p a → p x) :\n    (Ioi a).map (Embedding.subtype p) = (Ioi a : Finset α) := by\n  rw [subtype_Ioi_eq]\n  exact Finset.subtype_map_of_mem fun x hx => hp (mem_Ioi.1 hx).le a.prop\n\n"}
{"name":"Finset.subtype_Iic_eq","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : Preorder α\np : α → Prop\ninst✝¹ : DecidablePred p\ninst✝ : LocallyFiniteOrderBot α\na : Subtype p\n⊢ Eq (Finset.Iic a) (Finset.subtype p (Finset.Iic ↑a))","decl":"theorem subtype_Iic_eq : Iic a = (Iic (a : α)).subtype p :=\n  rfl\n\n"}
{"name":"Finset.subtype_Iio_eq","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : Preorder α\np : α → Prop\ninst✝¹ : DecidablePred p\ninst✝ : LocallyFiniteOrderBot α\na : Subtype p\n⊢ Eq (Finset.Iio a) (Finset.subtype p (Finset.Iio ↑a))","decl":"theorem subtype_Iio_eq : Iio a = (Iio (a : α)).subtype p :=\n  rfl\n\n\n"}
{"name":"Finset.map_subtype_embedding_Iic","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : Preorder α\np : α → Prop\ninst✝¹ : DecidablePred p\ninst✝ : LocallyFiniteOrderBot α\na : Subtype p\nhp : ∀ ⦃a x : α⦄, LE.le x a → p a → p x\n⊢ Eq (Finset.map (Function.Embedding.subtype p) (Finset.Iic a)) (Finset.Iic ↑a)","decl":"theorem map_subtype_embedding_Iic (hp : ∀ ⦃a x⦄, x ≤ a → p a → p x) :\n    (Iic a).map (Embedding.subtype p) = (Iic a : Finset α) := by\n  rw [subtype_Iic_eq]\n  exact Finset.subtype_map_of_mem fun x hx => hp (mem_Iic.1 hx) a.prop\n\n"}
{"name":"Finset.map_subtype_embedding_Iio","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ninst✝² : Preorder α\np : α → Prop\ninst✝¹ : DecidablePred p\ninst✝ : LocallyFiniteOrderBot α\na : Subtype p\nhp : ∀ ⦃a x : α⦄, LE.le x a → p a → p x\n⊢ Eq (Finset.map (Function.Embedding.subtype p) (Finset.Iio a)) (Finset.Iio ↑a)","decl":"theorem map_subtype_embedding_Iio (hp : ∀ ⦃a x⦄, x ≤ a → p a → p x) :\n    (Iio a).map (Embedding.subtype p) = (Iio a : Finset α) := by\n  rw [subtype_Iio_eq]\n  exact Finset.subtype_map_of_mem fun x hx => hp (mem_Iio.1 hx).le a.prop\n\n"}
{"name":"BddBelow.finite_of_bddAbove","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_3\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrder α\ns : Set α\nh₀ : BddBelow s\nh₁ : BddAbove s\n⊢ s.Finite","decl":"theorem BddBelow.finite_of_bddAbove [Preorder α] [LocallyFiniteOrder α]\n    {s : Set α} (h₀ : BddBelow s) (h₁ : BddAbove s) :\n    s.Finite :=\n  let ⟨a, ha⟩ := h₀\n  let ⟨b, hb⟩ := h₁\n  (Set.finite_Icc a b).subset fun _x hx ↦ ⟨ha hx, hb hx⟩\n\n"}
{"name":"Set.finite_iff_bddAbove","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_3\ns : Set α\ninst✝² : SemilatticeSup α\ninst✝¹ : LocallyFiniteOrder α\ninst✝ : OrderBot α\n⊢ Iff s.Finite (BddAbove s)","decl":"theorem Set.finite_iff_bddAbove [SemilatticeSup α] [LocallyFiniteOrder α] [OrderBot α] :\n    s.Finite ↔ BddAbove s :=\n  ⟨fun h ↦ ⟨h.toFinset.sup id, fun _ hx ↦ Finset.le_sup (f := id) ((Finite.mem_toFinset h).mpr hx)⟩,\n    fun ⟨m, hm⟩ ↦ (Set.finite_Icc ⊥ m).subset (fun _ hx ↦ ⟨bot_le, hm hx⟩)⟩\n\n"}
{"name":"Set.finite_iff_bddBelow","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_3\ns : Set α\ninst✝² : SemilatticeInf α\ninst✝¹ : LocallyFiniteOrder α\ninst✝ : OrderTop α\n⊢ Iff s.Finite (BddBelow s)","decl":"theorem Set.finite_iff_bddBelow [SemilatticeInf α] [LocallyFiniteOrder α] [OrderTop α] :\n    s.Finite ↔ BddBelow s :=\n  finite_iff_bddAbove (α := αᵒᵈ)\n\n"}
{"name":"Set.finite_iff_bddBelow_bddAbove","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_3\ns : Set α\ninst✝² : Nonempty α\ninst✝¹ : Lattice α\ninst✝ : LocallyFiniteOrder α\n⊢ Iff s.Finite (And (BddBelow s) (BddAbove s))","decl":"theorem Set.finite_iff_bddBelow_bddAbove [Nonempty α] [Lattice α] [LocallyFiniteOrder α] :\n    s.Finite ↔ BddBelow s ∧ BddAbove s := by\n  obtain (rfl | hs) := s.eq_empty_or_nonempty\n  · simp only [Set.finite_empty, bddBelow_empty, bddAbove_empty, and_self]\n  exact ⟨fun h ↦ ⟨⟨h.toFinset.inf' ((Finite.toFinset_nonempty h).mpr hs) id,\n    fun x hx ↦ Finset.inf'_le id ((Finite.mem_toFinset h).mpr hx)⟩,\n    ⟨h.toFinset.sup' ((Finite.toFinset_nonempty h).mpr hs) id, fun x hx ↦ Finset.le_sup' id\n    ((Finite.mem_toFinset h).mpr hx)⟩⟩,\n    fun ⟨h₀, h₁⟩ ↦ BddBelow.finite_of_bddAbove h₀ h₁⟩\n\n"}
{"name":"instFiniteSubtypeLeOfLocallyFiniteOrderBot","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ny : α\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderBot α\n⊢ Finite (Subtype fun x => LE.le x y)","decl":"instance [Preorder α] [LocallyFiniteOrderBot α] : Finite { x : α // x ≤ y } := by\n  simpa only  [coe_Iic] using (Finset.Iic y).finite_toSet\n\n"}
{"name":"instFiniteSubtypeLtOfLocallyFiniteOrderBot","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ny : α\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderBot α\n⊢ Finite (Subtype fun x => LT.lt x y)","decl":"instance [Preorder α] [LocallyFiniteOrderBot α] : Finite { x : α // x < y } := by\n  simpa only [coe_Iio] using (Finset.Iio y).finite_toSet\n\n"}
{"name":"instFiniteSubtypeLeOfLocallyFiniteOrderTop","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ny : α\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderTop α\n⊢ Finite (Subtype fun x => LE.le y x)","decl":"instance [Preorder α] [LocallyFiniteOrderTop α] : Finite { x : α // y ≤ x } := by\n  simpa only [coe_Ici] using (Finset.Ici y).finite_toSet\n\n"}
{"name":"instFiniteSubtypeLtOfLocallyFiniteOrderTop","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_1\ny : α\ninst✝¹ : Preorder α\ninst✝ : LocallyFiniteOrderTop α\n⊢ Finite (Subtype fun x => LT.lt y x)","decl":"instance [Preorder α] [LocallyFiniteOrderTop α] : Finite { x : α // y < x } := by\n  simpa only [coe_Ioi] using (Finset.Ioi y).finite_toSet\n\n"}
{"name":"Set.toFinset_Icc","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_3\ninst✝² : Preorder α\ninst✝¹ : LocallyFiniteOrder α\na b : α\ninst✝ : Fintype ↑(Set.Icc a b)\n⊢ Eq (Set.Icc a b).toFinset (Finset.Icc a b)","decl":"@[simp] lemma toFinset_Icc (a b : α) [Fintype (Icc a b)] : (Icc a b).toFinset = Finset.Icc a b := by\n  ext; simp\n\n"}
{"name":"Set.toFinset_Ico","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_3\ninst✝² : Preorder α\ninst✝¹ : LocallyFiniteOrder α\na b : α\ninst✝ : Fintype ↑(Set.Ico a b)\n⊢ Eq (Set.Ico a b).toFinset (Finset.Ico a b)","decl":"@[simp] lemma toFinset_Ico (a b : α) [Fintype (Ico a b)] : (Ico a b).toFinset = Finset.Ico a b := by\n  ext; simp\n\n"}
{"name":"Set.toFinset_Ioc","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_3\ninst✝² : Preorder α\ninst✝¹ : LocallyFiniteOrder α\na b : α\ninst✝ : Fintype ↑(Set.Ioc a b)\n⊢ Eq (Set.Ioc a b).toFinset (Finset.Ioc a b)","decl":"@[simp] lemma toFinset_Ioc (a b : α) [Fintype (Ioc a b)] : (Ioc a b).toFinset = Finset.Ioc a b := by\n  ext; simp\n\n"}
{"name":"Set.toFinset_Ioo","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_3\ninst✝² : Preorder α\ninst✝¹ : LocallyFiniteOrder α\na b : α\ninst✝ : Fintype ↑(Set.Ioo a b)\n⊢ Eq (Set.Ioo a b).toFinset (Finset.Ioo a b)","decl":"@[simp] lemma toFinset_Ioo (a b : α) [Fintype (Ioo a b)] : (Ioo a b).toFinset = Finset.Ioo a b := by\n  ext; simp\n\n"}
{"name":"Set.toFinset_Ici","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_3\ninst✝² : Preorder α\ninst✝¹ : LocallyFiniteOrderTop α\na : α\ninst✝ : Fintype ↑(Set.Ici a)\n⊢ Eq (Set.Ici a).toFinset (Finset.Ici a)","decl":"@[simp]\nlemma toFinset_Ici (a : α) [Fintype (Ici a)] : (Ici a).toFinset = Finset.Ici a := by ext; simp\n\n"}
{"name":"Set.toFinset_Ioi","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_3\ninst✝² : Preorder α\ninst✝¹ : LocallyFiniteOrderTop α\na : α\ninst✝ : Fintype ↑(Set.Ioi a)\n⊢ Eq (Set.Ioi a).toFinset (Finset.Ioi a)","decl":"@[simp]\nlemma toFinset_Ioi (a : α) [Fintype (Ioi a)] : (Ioi a).toFinset = Finset.Ioi a := by ext; simp\n\n"}
{"name":"Set.toFinset_Iic","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_3\ninst✝² : Preorder α\ninst✝¹ : LocallyFiniteOrderBot α\na : α\ninst✝ : Fintype ↑(Set.Iic a)\n⊢ Eq (Set.Iic a).toFinset (Finset.Iic a)","decl":"@[simp]\nlemma toFinset_Iic (a : α) [Fintype (Iic a)] : (Iic a).toFinset = Finset.Iic a := by ext; simp\n\n"}
{"name":"Set.toFinset_Iio","module":"Mathlib.Order.Interval.Finset.Defs","initialProofState":"α : Type u_3\ninst✝² : Preorder α\ninst✝¹ : LocallyFiniteOrderBot α\na : α\ninst✝ : Fintype ↑(Set.Iio a)\n⊢ Eq (Set.Iio a).toFinset (Finset.Iio a)","decl":"@[simp]\nlemma toFinset_Iio (a : α) [Fintype (Iio a)] : (Iio a).toFinset = Finset.Iio a := by ext; simp\n\n"}
