{"name":"fst_himp","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\nβ : Type u_3\ninst✝¹ : HImp α\ninst✝ : HImp β\na b : Prod α β\n⊢ Eq (HImp.himp a b).fst (HImp.himp a.fst b.fst)","decl":"@[simp]\ntheorem fst_himp [HImp α] [HImp β] (a b : α × β) : (a ⇨ b).1 = a.1 ⇨ b.1 :=\n  rfl\n\n"}
{"name":"snd_himp","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\nβ : Type u_3\ninst✝¹ : HImp α\ninst✝ : HImp β\na b : Prod α β\n⊢ Eq (HImp.himp a b).snd (HImp.himp a.snd b.snd)","decl":"@[simp]\ntheorem snd_himp [HImp α] [HImp β] (a b : α × β) : (a ⇨ b).2 = a.2 ⇨ b.2 :=\n  rfl\n\n"}
{"name":"fst_hnot","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\nβ : Type u_3\ninst✝¹ : HNot α\ninst✝ : HNot β\na : Prod α β\n⊢ Eq (HNot.hnot a).fst (HNot.hnot a.fst)","decl":"@[simp]\ntheorem fst_hnot [HNot α] [HNot β] (a : α × β) : (￢a).1 = ￢a.1 :=\n  rfl\n\n"}
{"name":"snd_hnot","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\nβ : Type u_3\ninst✝¹ : HNot α\ninst✝ : HNot β\na : Prod α β\n⊢ Eq (HNot.hnot a).snd (HNot.hnot a.snd)","decl":"@[simp]\ntheorem snd_hnot [HNot α] [HNot β] (a : α × β) : (￢a).2 = ￢a.2 :=\n  rfl\n\n"}
{"name":"fst_sdiff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\nβ : Type u_3\ninst✝¹ : SDiff α\ninst✝ : SDiff β\na b : Prod α β\n⊢ Eq (SDiff.sdiff a b).fst (SDiff.sdiff a.fst b.fst)","decl":"@[simp]\ntheorem fst_sdiff [SDiff α] [SDiff β] (a b : α × β) : (a \\ b).1 = a.1 \\ b.1 :=\n  rfl\n\n"}
{"name":"snd_sdiff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\nβ : Type u_3\ninst✝¹ : SDiff α\ninst✝ : SDiff β\na b : Prod α β\n⊢ Eq (SDiff.sdiff a b).snd (SDiff.sdiff a.snd b.snd)","decl":"@[simp]\ntheorem snd_sdiff [SDiff α] [SDiff β] (a b : α × β) : (a \\ b).2 = a.2 \\ b.2 :=\n  rfl\n\n"}
{"name":"fst_compl","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\nβ : Type u_3\ninst✝¹ : HasCompl α\ninst✝ : HasCompl β\na : Prod α β\n⊢ Eq (HasCompl.compl a).fst (HasCompl.compl a.fst)","decl":"@[simp]\ntheorem fst_compl [HasCompl α] [HasCompl β] (a : α × β) : aᶜ.1 = a.1ᶜ :=\n  rfl\n\n"}
{"name":"snd_compl","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\nβ : Type u_3\ninst✝¹ : HasCompl α\ninst✝ : HasCompl β\na : Prod α β\n⊢ Eq (HasCompl.compl a).snd (HasCompl.compl a.snd)","decl":"@[simp]\ntheorem snd_compl [HasCompl α] [HasCompl β] (a : α × β) : aᶜ.2 = a.2ᶜ :=\n  rfl\n\n"}
{"name":"Pi.himp_def","module":"Mathlib.Order.Heyting.Basic","initialProofState":"ι : Type u_1\nπ : ι → Type u_4\ninst✝ : (i : ι) → HImp (π i)\na b : (i : ι) → π i\n⊢ Eq (HImp.himp a b) fun i => HImp.himp (a i) (b i)","decl":"theorem himp_def [∀ i, HImp (π i)] (a b : ∀ i, π i) : a ⇨ b = fun i => a i ⇨ b i :=\n  rfl\n\n"}
{"name":"Pi.hnot_def","module":"Mathlib.Order.Heyting.Basic","initialProofState":"ι : Type u_1\nπ : ι → Type u_4\ninst✝ : (i : ι) → HNot (π i)\na : (i : ι) → π i\n⊢ Eq (HNot.hnot a) fun i => HNot.hnot (a i)","decl":"theorem hnot_def [∀ i, HNot (π i)] (a : ∀ i, π i) : ￢a = fun i => ￢a i :=\n  rfl\n\n"}
{"name":"Pi.himp_apply","module":"Mathlib.Order.Heyting.Basic","initialProofState":"ι : Type u_1\nπ : ι → Type u_4\ninst✝ : (i : ι) → HImp (π i)\na b : (i : ι) → π i\ni : ι\n⊢ Eq (HImp.himp a b i) (HImp.himp (a i) (b i))","decl":"@[simp]\ntheorem himp_apply [∀ i, HImp (π i)] (a b : ∀ i, π i) (i : ι) : (a ⇨ b) i = a i ⇨ b i :=\n  rfl\n\n"}
{"name":"Pi.hnot_apply","module":"Mathlib.Order.Heyting.Basic","initialProofState":"ι : Type u_1\nπ : ι → Type u_4\ninst✝ : (i : ι) → HNot (π i)\na : (i : ι) → π i\ni : ι\n⊢ Eq (HNot.hnot a i) (HNot.hnot (a i))","decl":"@[simp]\ntheorem hnot_apply [∀ i, HNot (π i)] (a : ∀ i, π i) (i : ι) : (￢a) i = ￢a i :=\n  rfl\n\n"}
{"name":"GeneralizedHeytingAlgebra.le_himp_iff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_4\nself : GeneralizedHeytingAlgebra α\na b c : α\n⊢ Iff (LE.le a (HImp.himp b c)) (LE.le (Min.min a b) c)","decl":"/-- A generalized Heyting algebra is a lattice with an additional binary operation `⇨` called\nHeyting implication such that `(a ⇨ ·)` is right adjoint to `(a ⊓ ·)`.\n\n This generalizes `HeytingAlgebra` by not requiring a bottom element. -/\nclass GeneralizedHeytingAlgebra (α : Type*) extends Lattice α, OrderTop α, HImp α where\n  /-- `(a ⇨ ·)` is right adjoint to `(a ⊓ ·)` -/\n  le_himp_iff (a b c : α) : a ≤ b ⇨ c ↔ a ⊓ b ≤ c\n\n"}
{"name":"GeneralizedCoheytingAlgebra.sdiff_le_iff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_4\nself : GeneralizedCoheytingAlgebra α\na b c : α\n⊢ Iff (LE.le (SDiff.sdiff a b) c) (LE.le a (Max.max b c))","decl":"/-- A generalized co-Heyting algebra is a lattice with an additional binary\ndifference operation `\\` such that `(· \\ a)` is right adjoint to `(· ⊔ a)`.\n\nThis generalizes `CoheytingAlgebra` by not requiring a top element. -/\nclass GeneralizedCoheytingAlgebra (α : Type*) extends Lattice α, OrderBot α, SDiff α where\n  /-- `(· \\ a)` is right adjoint to `(· ⊔ a)` -/\n  sdiff_le_iff (a b c : α) : a \\ b ≤ c ↔ a ≤ b ⊔ c\n\n"}
{"name":"HeytingAlgebra.himp_bot","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_4\nself : HeytingAlgebra α\na : α\n⊢ Eq (HImp.himp a Bot.bot) (HasCompl.compl a)","decl":"/-- A Heyting algebra is a bounded lattice with an additional binary operation `⇨` called Heyting\nimplication such that `(a ⇨ ·)` is right adjoint to `(a ⊓ ·)`. -/\nclass HeytingAlgebra (α : Type*) extends GeneralizedHeytingAlgebra α, OrderBot α, HasCompl α where\n  /-- `aᶜ` is defined as `a ⇨ ⊥` -/\n  himp_bot (a : α) : a ⇨ ⊥ = aᶜ\n\n"}
{"name":"CoheytingAlgebra.top_sdiff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_4\nself : CoheytingAlgebra α\na : α\n⊢ Eq (SDiff.sdiff Top.top a) (HNot.hnot a)","decl":"/-- A co-Heyting algebra is a bounded lattice with an additional binary difference operation `\\`\nsuch that `(· \\ a)` is right adjoint to `(· ⊔ a)`. -/\nclass CoheytingAlgebra (α : Type*) extends GeneralizedCoheytingAlgebra α, OrderTop α, HNot α where\n  /-- `⊤ \\ a` is `￢a` -/\n  top_sdiff (a : α) : ⊤ \\ a = ￢a\n\n"}
{"name":"BiheytingAlgebra.top_sdiff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_4\nself : BiheytingAlgebra α\na : α\n⊢ Eq (SDiff.sdiff Top.top a) (HNot.hnot a)","decl":"/-- A bi-Heyting algebra is a Heyting algebra that is also a co-Heyting algebra. -/\nclass BiheytingAlgebra (α : Type*) extends HeytingAlgebra α, SDiff α, HNot α where\n  /-- `(· \\ a)` is right adjoint to `(· ⊔ a)` -/\n  sdiff_le_iff (a b c : α) : a \\ b ≤ c ↔ a ≤ b ⊔ c\n  /-- `⊤ \\ a` is `￢a` -/\n  top_sdiff (a : α) : ⊤ \\ a = ￢a\n\n-- See note [lower instance priority]\n"}
{"name":"BiheytingAlgebra.sdiff_le_iff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_4\nself : BiheytingAlgebra α\na b c : α\n⊢ Iff (LE.le (SDiff.sdiff a b) c) (LE.le a (Max.max b c))","decl":"/-- A bi-Heyting algebra is a Heyting algebra that is also a co-Heyting algebra. -/\nclass BiheytingAlgebra (α : Type*) extends HeytingAlgebra α, SDiff α, HNot α where\n  /-- `(· \\ a)` is right adjoint to `(· ⊔ a)` -/\n  sdiff_le_iff (a b c : α) : a \\ b ≤ c ↔ a ≤ b ⊔ c\n  /-- `⊤ \\ a` is `￢a` -/\n  top_sdiff (a : α) : ⊤ \\ a = ￢a\n\n-- See note [lower instance priority]\n"}
{"name":"le_himp_iff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b c : α\n⊢ Iff (LE.le a (HImp.himp b c)) (LE.le (Min.min a b) c)","decl":"/-- `p → q → r ↔ p ∧ q → r` -/\n@[simp]\ntheorem le_himp_iff : a ≤ b ⇨ c ↔ a ⊓ b ≤ c :=\n  GeneralizedHeytingAlgebra.le_himp_iff _ _ _\n\n"}
{"name":"le_himp_iff'","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b c : α\n⊢ Iff (LE.le a (HImp.himp b c)) (LE.le (Min.min b a) c)","decl":"/-- `p → q → r ↔ q ∧ p → r` -/\ntheorem le_himp_iff' : a ≤ b ⇨ c ↔ b ⊓ a ≤ c := by rw [le_himp_iff, inf_comm]\n\n"}
{"name":"le_himp_comm","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b c : α\n⊢ Iff (LE.le a (HImp.himp b c)) (LE.le b (HImp.himp a c))","decl":"/-- `p → q → r ↔ q → p → r` -/\ntheorem le_himp_comm : a ≤ b ⇨ c ↔ b ≤ a ⇨ c := by rw [le_himp_iff, le_himp_iff']\n\n"}
{"name":"le_himp","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b : α\n⊢ LE.le a (HImp.himp b a)","decl":"/-- `p → q → p` -/\ntheorem le_himp : a ≤ b ⇨ a :=\n  le_himp_iff.2 inf_le_left\n\n"}
{"name":"le_himp_iff_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b : α\n⊢ Iff (LE.le a (HImp.himp a b)) (LE.le a b)","decl":"/-- `p → p → q ↔ p → q` -/\ntheorem le_himp_iff_left : a ≤ a ⇨ b ↔ a ≤ b := by rw [le_himp_iff, inf_idem]\n\n"}
{"name":"himp_self","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na : α\n⊢ Eq (HImp.himp a a) Top.top","decl":"/-- `p → p` -/\n@[simp]\ntheorem himp_self : a ⇨ a = ⊤ :=\n  top_le_iff.1 <| le_himp_iff.2 inf_le_right\n\n"}
{"name":"himp_inf_le","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b : α\n⊢ LE.le (Min.min (HImp.himp a b) a) b","decl":"/-- `(p → q) ∧ p → q` -/\ntheorem himp_inf_le : (a ⇨ b) ⊓ a ≤ b :=\n  le_himp_iff.1 le_rfl\n\n"}
{"name":"inf_himp_le","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b : α\n⊢ LE.le (Min.min a (HImp.himp a b)) b","decl":"/-- `p ∧ (p → q) → q` -/\ntheorem inf_himp_le : a ⊓ (a ⇨ b) ≤ b := by rw [inf_comm, ← le_himp_iff]\n\n"}
{"name":"inf_himp","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b : α\n⊢ Eq (Min.min a (HImp.himp a b)) (Min.min a b)","decl":"/-- `p ∧ (p → q) ↔ p ∧ q` -/\n@[simp]\ntheorem inf_himp (a b : α) : a ⊓ (a ⇨ b) = a ⊓ b :=\n  le_antisymm (le_inf inf_le_left <| by rw [inf_comm, ← le_himp_iff]) <| inf_le_inf_left _ le_himp\n\n"}
{"name":"himp_inf_self","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b : α\n⊢ Eq (Min.min (HImp.himp a b) a) (Min.min b a)","decl":"/-- `(p → q) ∧ p ↔ q ∧ p` -/\n@[simp]\ntheorem himp_inf_self (a b : α) : (a ⇨ b) ⊓ a = b ⊓ a := by rw [inf_comm, inf_himp, inf_comm]\n\n"}
{"name":"himp_eq_top_iff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b : α\n⊢ Iff (Eq (HImp.himp a b) Top.top) (LE.le a b)","decl":"/-- The **deduction theorem** in the Heyting algebra model of intuitionistic logic:\nan implication holds iff the conclusion follows from the hypothesis. -/\n@[simp]\ntheorem himp_eq_top_iff : a ⇨ b = ⊤ ↔ a ≤ b := by rw [← top_le_iff, le_himp_iff, top_inf_eq]\n\n"}
{"name":"himp_top","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na : α\n⊢ Eq (HImp.himp a Top.top) Top.top","decl":"/-- `p → true`, `true → p ↔ p` -/\n@[simp]\ntheorem himp_top : a ⇨ ⊤ = ⊤ :=\n  himp_eq_top_iff.2 le_top\n\n"}
{"name":"top_himp","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na : α\n⊢ Eq (HImp.himp Top.top a) a","decl":"@[simp]\ntheorem top_himp : ⊤ ⇨ a = a :=\n  eq_of_forall_le_iff fun b => by rw [le_himp_iff, inf_top_eq]\n\n"}
{"name":"himp_himp","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b c : α\n⊢ Eq (HImp.himp a (HImp.himp b c)) (HImp.himp (Min.min a b) c)","decl":"/-- `p → q → r ↔ p ∧ q → r` -/\ntheorem himp_himp (a b c : α) : a ⇨ b ⇨ c = a ⊓ b ⇨ c :=\n  eq_of_forall_le_iff fun d => by simp_rw [le_himp_iff, inf_assoc]\n\n"}
{"name":"himp_le_himp_himp_himp","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b c : α\n⊢ LE.le (HImp.himp b c) (HImp.himp (HImp.himp a b) (HImp.himp a c))","decl":"/-- `(q → r) → (p → q) → q → r` -/\ntheorem himp_le_himp_himp_himp : b ⇨ c ≤ (a ⇨ b) ⇨ a ⇨ c := by\n  rw [le_himp_iff, le_himp_iff, inf_assoc, himp_inf_self, ← inf_assoc, himp_inf_self, inf_assoc]\n  exact inf_le_left\n\n"}
{"name":"himp_inf_himp_inf_le","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b c : α\n⊢ LE.le (Min.min (Min.min (HImp.himp b c) (HImp.himp a b)) a) c","decl":"@[simp]\ntheorem himp_inf_himp_inf_le : (b ⇨ c) ⊓ (a ⇨ b) ⊓ a ≤ c := by\n  simpa using @himp_le_himp_himp_himp\n\n"}
{"name":"himp_left_comm","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b c : α\n⊢ Eq (HImp.himp a (HImp.himp b c)) (HImp.himp b (HImp.himp a c))","decl":"/-- `p → q → r ↔ q → p → r` -/\ntheorem himp_left_comm (a b c : α) : a ⇨ b ⇨ c = b ⇨ a ⇨ c := by simp_rw [himp_himp, inf_comm]\n\n"}
{"name":"himp_idem","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b : α\n⊢ Eq (HImp.himp b (HImp.himp b a)) (HImp.himp b a)","decl":"@[simp]\ntheorem himp_idem : b ⇨ b ⇨ a = b ⇨ a := by rw [himp_himp, inf_idem]\n\n"}
{"name":"himp_inf_distrib","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b c : α\n⊢ Eq (HImp.himp a (Min.min b c)) (Min.min (HImp.himp a b) (HImp.himp a c))","decl":"theorem himp_inf_distrib (a b c : α) : a ⇨ b ⊓ c = (a ⇨ b) ⊓ (a ⇨ c) :=\n  eq_of_forall_le_iff fun d => by simp_rw [le_himp_iff, le_inf_iff, le_himp_iff]\n\n"}
{"name":"sup_himp_distrib","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b c : α\n⊢ Eq (HImp.himp (Max.max a b) c) (Min.min (HImp.himp a c) (HImp.himp b c))","decl":"theorem sup_himp_distrib (a b c : α) : a ⊔ b ⇨ c = (a ⇨ c) ⊓ (b ⇨ c) :=\n  eq_of_forall_le_iff fun d => by\n    rw [le_inf_iff, le_himp_comm, sup_le_iff]\n    simp_rw [le_himp_comm]\n\n"}
{"name":"himp_le_himp_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b c : α\nh : LE.le a b\n⊢ LE.le (HImp.himp c a) (HImp.himp c b)","decl":"theorem himp_le_himp_left (h : a ≤ b) : c ⇨ a ≤ c ⇨ b :=\n  le_himp_iff.2 <| himp_inf_le.trans h\n\n"}
{"name":"himp_le_himp_right","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b c : α\nh : LE.le a b\n⊢ LE.le (HImp.himp b c) (HImp.himp a c)","decl":"theorem himp_le_himp_right (h : a ≤ b) : b ⇨ c ≤ a ⇨ c :=\n  le_himp_iff.2 <| (inf_le_inf_left _ h).trans himp_inf_le\n\n"}
{"name":"himp_le_himp","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b c d : α\nhab : LE.le a b\nhcd : LE.le c d\n⊢ LE.le (HImp.himp b c) (HImp.himp a d)","decl":"theorem himp_le_himp (hab : a ≤ b) (hcd : c ≤ d) : b ⇨ c ≤ a ⇨ d :=\n  (himp_le_himp_right hab).trans <| himp_le_himp_left hcd\n\n"}
{"name":"sup_himp_self_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b : α\n⊢ Eq (HImp.himp (Max.max a b) a) (HImp.himp b a)","decl":"@[simp]\ntheorem sup_himp_self_left (a b : α) : a ⊔ b ⇨ a = b ⇨ a := by\n  rw [sup_himp_distrib, himp_self, top_inf_eq]\n\n"}
{"name":"sup_himp_self_right","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b : α\n⊢ Eq (HImp.himp (Max.max a b) b) (HImp.himp a b)","decl":"@[simp]\ntheorem sup_himp_self_right (a b : α) : a ⊔ b ⇨ b = a ⇨ b := by\n  rw [sup_himp_distrib, himp_self, inf_top_eq]\n\n"}
{"name":"Codisjoint.himp_eq_right","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b : α\nh : Codisjoint a b\n⊢ Eq (HImp.himp b a) a","decl":"theorem Codisjoint.himp_eq_right (h : Codisjoint a b) : b ⇨ a = a := by\n  conv_rhs => rw [← @top_himp _ _ a]\n  rw [← h.eq_top, sup_himp_self_left]\n\n"}
{"name":"Codisjoint.himp_eq_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b : α\nh : Codisjoint a b\n⊢ Eq (HImp.himp a b) b","decl":"theorem Codisjoint.himp_eq_left (h : Codisjoint a b) : a ⇨ b = b :=\n  h.symm.himp_eq_right\n\n"}
{"name":"Codisjoint.himp_inf_cancel_right","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b : α\nh : Codisjoint a b\n⊢ Eq (HImp.himp a (Min.min a b)) b","decl":"theorem Codisjoint.himp_inf_cancel_right (h : Codisjoint a b) : a ⇨ a ⊓ b = b := by\n  rw [himp_inf_distrib, himp_self, top_inf_eq, h.himp_eq_left]\n\n"}
{"name":"Codisjoint.himp_inf_cancel_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b : α\nh : Codisjoint a b\n⊢ Eq (HImp.himp b (Min.min a b)) a","decl":"theorem Codisjoint.himp_inf_cancel_left (h : Codisjoint a b) : b ⇨ a ⊓ b = a := by\n  rw [himp_inf_distrib, himp_self, inf_top_eq, h.himp_eq_right]\n\n"}
{"name":"Codisjoint.himp_le_of_right_le","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b c : α\nhac : Codisjoint a c\nhba : LE.le b a\n⊢ LE.le (HImp.himp c b) a","decl":"/-- See `himp_le` for a stronger version in Boolean algebras. -/\ntheorem Codisjoint.himp_le_of_right_le (hac : Codisjoint a c) (hba : b ≤ a) : c ⇨ b ≤ a :=\n  (himp_le_himp_left hba).trans_eq hac.himp_eq_right\n\n"}
{"name":"le_himp_himp","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b : α\n⊢ LE.le a (HImp.himp (HImp.himp a b) b)","decl":"theorem le_himp_himp : a ≤ (a ⇨ b) ⇨ b :=\n  le_himp_iff.2 inf_himp_le\n\n"}
{"name":"himp_eq_himp_iff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b : α\n⊢ Iff (Eq (HImp.himp b a) (HImp.himp a b)) (Eq a b)","decl":"@[simp] lemma himp_eq_himp_iff : b ⇨ a = a ⇨ b ↔ a = b := by simp [le_antisymm_iff]\n"}
{"name":"himp_ne_himp_iff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b : α\n⊢ Iff (Ne (HImp.himp b a) (HImp.himp a b)) (Ne a b)","decl":"lemma himp_ne_himp_iff : b ⇨ a ≠ a ⇨ b ↔ a ≠ b := himp_eq_himp_iff.not\n\n"}
{"name":"himp_triangle","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b c : α\n⊢ LE.le (Min.min (HImp.himp a b) (HImp.himp b c)) (HImp.himp a c)","decl":"theorem himp_triangle (a b c : α) : (a ⇨ b) ⊓ (b ⇨ c) ≤ a ⇨ c := by\n  rw [le_himp_iff, inf_right_comm, ← le_himp_iff]\n  exact himp_inf_le.trans le_himp_himp\n\n"}
{"name":"himp_inf_himp_cancel","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedHeytingAlgebra α\na b c : α\nhba : LE.le b a\nhcb : LE.le c b\n⊢ Eq (Min.min (HImp.himp a b) (HImp.himp b c)) (HImp.himp a c)","decl":"theorem himp_inf_himp_cancel (hba : b ≤ a) (hcb : c ≤ b) : (a ⇨ b) ⊓ (b ⇨ c) = a ⇨ c :=\n  (himp_triangle _ _ _).antisymm <| le_inf (himp_le_himp_left hcb) (himp_le_himp_right hba)\n\n-- See note [lower instance priority]\n"}
{"name":"sdiff_le_iff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\n⊢ Iff (LE.le (SDiff.sdiff a b) c) (LE.le a (Max.max b c))","decl":"@[simp]\ntheorem sdiff_le_iff : a \\ b ≤ c ↔ a ≤ b ⊔ c :=\n  GeneralizedCoheytingAlgebra.sdiff_le_iff _ _ _\n\n"}
{"name":"sdiff_le_iff'","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\n⊢ Iff (LE.le (SDiff.sdiff a b) c) (LE.le a (Max.max c b))","decl":"theorem sdiff_le_iff' : a \\ b ≤ c ↔ a ≤ c ⊔ b := by rw [sdiff_le_iff, sup_comm]\n\n"}
{"name":"sdiff_le_comm","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\n⊢ Iff (LE.le (SDiff.sdiff a b) c) (LE.le (SDiff.sdiff a c) b)","decl":"theorem sdiff_le_comm : a \\ b ≤ c ↔ a \\ c ≤ b := by rw [sdiff_le_iff, sdiff_le_iff']\n\n"}
{"name":"sdiff_le","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\n⊢ LE.le (SDiff.sdiff a b) a","decl":"theorem sdiff_le : a \\ b ≤ a :=\n  sdiff_le_iff.2 le_sup_right\n\n"}
{"name":"Disjoint.disjoint_sdiff_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\nh : Disjoint a b\n⊢ Disjoint (SDiff.sdiff a c) b","decl":"theorem Disjoint.disjoint_sdiff_left (h : Disjoint a b) : Disjoint (a \\ c) b :=\n  h.mono_left sdiff_le\n\n"}
{"name":"Disjoint.disjoint_sdiff_right","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\nh : Disjoint a b\n⊢ Disjoint a (SDiff.sdiff b c)","decl":"theorem Disjoint.disjoint_sdiff_right (h : Disjoint a b) : Disjoint a (b \\ c) :=\n  h.mono_right sdiff_le\n\n"}
{"name":"sdiff_le_iff_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\n⊢ Iff (LE.le (SDiff.sdiff a b) b) (LE.le a b)","decl":"theorem sdiff_le_iff_left : a \\ b ≤ b ↔ a ≤ b := by rw [sdiff_le_iff, sup_idem]\n\n"}
{"name":"sdiff_self","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na : α\n⊢ Eq (SDiff.sdiff a a) Bot.bot","decl":"@[simp]\ntheorem sdiff_self : a \\ a = ⊥ :=\n  le_bot_iff.1 <| sdiff_le_iff.2 le_sup_left\n\n"}
{"name":"le_sup_sdiff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\n⊢ LE.le a (Max.max b (SDiff.sdiff a b))","decl":"theorem le_sup_sdiff : a ≤ b ⊔ a \\ b :=\n  sdiff_le_iff.1 le_rfl\n\n"}
{"name":"le_sdiff_sup","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\n⊢ LE.le a (Max.max (SDiff.sdiff a b) b)","decl":"theorem le_sdiff_sup : a ≤ a \\ b ⊔ b := by rw [sup_comm, ← sdiff_le_iff]\n\n"}
{"name":"sup_sdiff_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\n⊢ Eq (Max.max a (SDiff.sdiff a b)) a","decl":"theorem sup_sdiff_left : a ⊔ a \\ b = a :=\n  sup_of_le_left sdiff_le\n\n"}
{"name":"sup_sdiff_right","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\n⊢ Eq (Max.max (SDiff.sdiff a b) a) a","decl":"theorem sup_sdiff_right : a \\ b ⊔ a = a :=\n  sup_of_le_right sdiff_le\n\n"}
{"name":"inf_sdiff_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\n⊢ Eq (Min.min (SDiff.sdiff a b) a) (SDiff.sdiff a b)","decl":"theorem inf_sdiff_left : a \\ b ⊓ a = a \\ b :=\n  inf_of_le_left sdiff_le\n\n"}
{"name":"inf_sdiff_right","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\n⊢ Eq (Min.min a (SDiff.sdiff a b)) (SDiff.sdiff a b)","decl":"theorem inf_sdiff_right : a ⊓ a \\ b = a \\ b :=\n  inf_of_le_right sdiff_le\n\n"}
{"name":"sup_sdiff_self","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\n⊢ Eq (Max.max a (SDiff.sdiff b a)) (Max.max a b)","decl":"@[simp]\ntheorem sup_sdiff_self (a b : α) : a ⊔ b \\ a = a ⊔ b :=\n  le_antisymm (sup_le_sup_left sdiff_le _) (sup_le le_sup_left le_sup_sdiff)\n\n"}
{"name":"sdiff_sup_self","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\n⊢ Eq (Max.max (SDiff.sdiff b a) a) (Max.max b a)","decl":"@[simp]\ntheorem sdiff_sup_self (a b : α) : b \\ a ⊔ a = b ⊔ a := by rw [sup_comm, sup_sdiff_self, sup_comm]\n\n"}
{"name":"sup_sdiff_self_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\n⊢ Eq (Max.max (SDiff.sdiff b a) a) (Max.max b a)","decl":"alias sup_sdiff_self_left := sdiff_sup_self\n\n"}
{"name":"sup_sdiff_self_right","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\n⊢ Eq (Max.max a (SDiff.sdiff b a)) (Max.max a b)","decl":"alias sup_sdiff_self_right := sup_sdiff_self\n\n"}
{"name":"sup_sdiff_eq_sup","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\nh : LE.le c a\n⊢ Eq (Max.max a (SDiff.sdiff b c)) (Max.max a b)","decl":"theorem sup_sdiff_eq_sup (h : c ≤ a) : a ⊔ b \\ c = a ⊔ b :=\n  sup_congr_left (sdiff_le.trans le_sup_right) <| le_sup_sdiff.trans <| sup_le_sup_right h _\n\n-- cf. `Set.union_diff_cancel'`\n"}
{"name":"sup_sdiff_cancel'","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\nhab : LE.le a b\nhbc : LE.le b c\n⊢ Eq (Max.max b (SDiff.sdiff c a)) c","decl":"theorem sup_sdiff_cancel' (hab : a ≤ b) (hbc : b ≤ c) : b ⊔ c \\ a = c := by\n  rw [sup_sdiff_eq_sup hab, sup_of_le_right hbc]\n\n"}
{"name":"sup_sdiff_cancel_right","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\nh : LE.le a b\n⊢ Eq (Max.max a (SDiff.sdiff b a)) b","decl":"theorem sup_sdiff_cancel_right (h : a ≤ b) : a ⊔ b \\ a = b :=\n  sup_sdiff_cancel' le_rfl h\n\n"}
{"name":"sdiff_sup_cancel","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\nh : LE.le b a\n⊢ Eq (Max.max (SDiff.sdiff a b) b) a","decl":"theorem sdiff_sup_cancel (h : b ≤ a) : a \\ b ⊔ b = a := by rw [sup_comm, sup_sdiff_cancel_right h]\n\n"}
{"name":"sup_le_of_le_sdiff_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\nh : LE.le b (SDiff.sdiff c a)\nhac : LE.le a c\n⊢ LE.le (Max.max a b) c","decl":"theorem sup_le_of_le_sdiff_left (h : b ≤ c \\ a) (hac : a ≤ c) : a ⊔ b ≤ c :=\n  sup_le hac <| h.trans sdiff_le\n\n"}
{"name":"sup_le_of_le_sdiff_right","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\nh : LE.le a (SDiff.sdiff c b)\nhbc : LE.le b c\n⊢ LE.le (Max.max a b) c","decl":"theorem sup_le_of_le_sdiff_right (h : a ≤ c \\ b) (hbc : b ≤ c) : a ⊔ b ≤ c :=\n  sup_le (h.trans sdiff_le) hbc\n\n"}
{"name":"sdiff_eq_bot_iff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\n⊢ Iff (Eq (SDiff.sdiff a b) Bot.bot) (LE.le a b)","decl":"@[simp]\ntheorem sdiff_eq_bot_iff : a \\ b = ⊥ ↔ a ≤ b := by rw [← le_bot_iff, sdiff_le_iff, sup_bot_eq]\n\n"}
{"name":"sdiff_bot","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na : α\n⊢ Eq (SDiff.sdiff a Bot.bot) a","decl":"@[simp]\ntheorem sdiff_bot : a \\ ⊥ = a :=\n  eq_of_forall_ge_iff fun b => by rw [sdiff_le_iff, bot_sup_eq]\n\n"}
{"name":"bot_sdiff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na : α\n⊢ Eq (SDiff.sdiff Bot.bot a) Bot.bot","decl":"@[simp]\ntheorem bot_sdiff : ⊥ \\ a = ⊥ :=\n  sdiff_eq_bot_iff.2 bot_le\n\n"}
{"name":"sdiff_sdiff_sdiff_le_sdiff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\n⊢ LE.le (SDiff.sdiff (SDiff.sdiff a b) (SDiff.sdiff a c)) (SDiff.sdiff c b)","decl":"theorem sdiff_sdiff_sdiff_le_sdiff : (a \\ b) \\ (a \\ c) ≤ c \\ b := by\n  rw [sdiff_le_iff, sdiff_le_iff, sup_left_comm, sup_sdiff_self, sup_left_comm, sdiff_sup_self,\n    sup_left_comm]\n  exact le_sup_left\n\n"}
{"name":"le_sup_sdiff_sup_sdiff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\n⊢ LE.le a (Max.max b (Max.max (SDiff.sdiff a c) (SDiff.sdiff c b)))","decl":"@[simp]\ntheorem le_sup_sdiff_sup_sdiff : a ≤ b ⊔ (a \\ c ⊔ c \\ b) := by\n  simpa using @sdiff_sdiff_sdiff_le_sdiff\n\n"}
{"name":"sdiff_sdiff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\n⊢ Eq (SDiff.sdiff (SDiff.sdiff a b) c) (SDiff.sdiff a (Max.max b c))","decl":"theorem sdiff_sdiff (a b c : α) : (a \\ b) \\ c = a \\ (b ⊔ c) :=\n  eq_of_forall_ge_iff fun d => by simp_rw [sdiff_le_iff, sup_assoc]\n\n"}
{"name":"sdiff_sdiff_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\n⊢ Eq (SDiff.sdiff (SDiff.sdiff a b) c) (SDiff.sdiff a (Max.max b c))","decl":"theorem sdiff_sdiff_left : (a \\ b) \\ c = a \\ (b ⊔ c) :=\n  sdiff_sdiff _ _ _\n\n"}
{"name":"sdiff_right_comm","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\n⊢ Eq (SDiff.sdiff (SDiff.sdiff a b) c) (SDiff.sdiff (SDiff.sdiff a c) b)","decl":"theorem sdiff_right_comm (a b c : α) : (a \\ b) \\ c = (a \\ c) \\ b := by\n  simp_rw [sdiff_sdiff, sup_comm]\n\n"}
{"name":"sdiff_sdiff_comm","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\n⊢ Eq (SDiff.sdiff (SDiff.sdiff a b) c) (SDiff.sdiff (SDiff.sdiff a c) b)","decl":"theorem sdiff_sdiff_comm : (a \\ b) \\ c = (a \\ c) \\ b :=\n  sdiff_right_comm _ _ _\n\n"}
{"name":"sdiff_idem","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\n⊢ Eq (SDiff.sdiff (SDiff.sdiff a b) b) (SDiff.sdiff a b)","decl":"@[simp]\ntheorem sdiff_idem : (a \\ b) \\ b = a \\ b := by rw [sdiff_sdiff_left, sup_idem]\n\n"}
{"name":"sdiff_sdiff_self","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\n⊢ Eq (SDiff.sdiff (SDiff.sdiff a b) a) Bot.bot","decl":"@[simp]\ntheorem sdiff_sdiff_self : (a \\ b) \\ a = ⊥ := by rw [sdiff_sdiff_comm, sdiff_self, bot_sdiff]\n\n"}
{"name":"sup_sdiff_distrib","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\n⊢ Eq (SDiff.sdiff (Max.max a b) c) (Max.max (SDiff.sdiff a c) (SDiff.sdiff b c))","decl":"theorem sup_sdiff_distrib (a b c : α) : (a ⊔ b) \\ c = a \\ c ⊔ b \\ c :=\n  eq_of_forall_ge_iff fun d => by simp_rw [sdiff_le_iff, sup_le_iff, sdiff_le_iff]\n\n"}
{"name":"sdiff_inf_distrib","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\n⊢ Eq (SDiff.sdiff a (Min.min b c)) (Max.max (SDiff.sdiff a b) (SDiff.sdiff a c))","decl":"theorem sdiff_inf_distrib (a b c : α) : a \\ (b ⊓ c) = a \\ b ⊔ a \\ c :=\n  eq_of_forall_ge_iff fun d => by\n    rw [sup_le_iff, sdiff_le_comm, le_inf_iff]\n    simp_rw [sdiff_le_comm]\n\n"}
{"name":"sup_sdiff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\n⊢ Eq (SDiff.sdiff (Max.max a b) c) (Max.max (SDiff.sdiff a c) (SDiff.sdiff b c))","decl":"theorem sup_sdiff : (a ⊔ b) \\ c = a \\ c ⊔ b \\ c :=\n  sup_sdiff_distrib _ _ _\n\n"}
{"name":"sup_sdiff_right_self","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\n⊢ Eq (SDiff.sdiff (Max.max a b) b) (SDiff.sdiff a b)","decl":"@[simp]\ntheorem sup_sdiff_right_self : (a ⊔ b) \\ b = a \\ b := by rw [sup_sdiff, sdiff_self, sup_bot_eq]\n\n"}
{"name":"sup_sdiff_left_self","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\n⊢ Eq (SDiff.sdiff (Max.max a b) a) (SDiff.sdiff b a)","decl":"@[simp]\ntheorem sup_sdiff_left_self : (a ⊔ b) \\ a = b \\ a := by rw [sup_comm, sup_sdiff_right_self]\n\n"}
{"name":"sdiff_le_sdiff_right","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\nh : LE.le a b\n⊢ LE.le (SDiff.sdiff a c) (SDiff.sdiff b c)","decl":"@[gcongr]\ntheorem sdiff_le_sdiff_right (h : a ≤ b) : a \\ c ≤ b \\ c :=\n  sdiff_le_iff.2 <| h.trans <| le_sup_sdiff\n\n"}
{"name":"sdiff_le_sdiff_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\nh : LE.le a b\n⊢ LE.le (SDiff.sdiff c b) (SDiff.sdiff c a)","decl":"@[gcongr]\ntheorem sdiff_le_sdiff_left (h : a ≤ b) : c \\ b ≤ c \\ a :=\n  sdiff_le_iff.2 <| le_sup_sdiff.trans <| sup_le_sup_right h _\n\n"}
{"name":"sdiff_le_sdiff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c d : α\nhab : LE.le a b\nhcd : LE.le c d\n⊢ LE.le (SDiff.sdiff a d) (SDiff.sdiff b c)","decl":"@[gcongr]\ntheorem sdiff_le_sdiff (hab : a ≤ b) (hcd : c ≤ d) : a \\ d ≤ b \\ c :=\n  (sdiff_le_sdiff_right hab).trans <| sdiff_le_sdiff_left hcd\n\n-- cf. `IsCompl.inf_sup`\n"}
{"name":"sdiff_inf","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\n⊢ Eq (SDiff.sdiff a (Min.min b c)) (Max.max (SDiff.sdiff a b) (SDiff.sdiff a c))","decl":"theorem sdiff_inf : a \\ (b ⊓ c) = a \\ b ⊔ a \\ c :=\n  sdiff_inf_distrib _ _ _\n\n"}
{"name":"sdiff_inf_self_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\n⊢ Eq (SDiff.sdiff a (Min.min a b)) (SDiff.sdiff a b)","decl":"@[simp]\ntheorem sdiff_inf_self_left (a b : α) : a \\ (a ⊓ b) = a \\ b := by\n  rw [sdiff_inf, sdiff_self, bot_sup_eq]\n\n"}
{"name":"sdiff_inf_self_right","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\n⊢ Eq (SDiff.sdiff b (Min.min a b)) (SDiff.sdiff b a)","decl":"@[simp]\ntheorem sdiff_inf_self_right (a b : α) : b \\ (a ⊓ b) = b \\ a := by\n  rw [sdiff_inf, sdiff_self, sup_bot_eq]\n\n"}
{"name":"Disjoint.sdiff_eq_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\nh : Disjoint a b\n⊢ Eq (SDiff.sdiff a b) a","decl":"theorem Disjoint.sdiff_eq_left (h : Disjoint a b) : a \\ b = a := by\n  conv_rhs => rw [← @sdiff_bot _ _ a]\n  rw [← h.eq_bot, sdiff_inf_self_left]\n\n"}
{"name":"Disjoint.sdiff_eq_right","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\nh : Disjoint a b\n⊢ Eq (SDiff.sdiff b a) b","decl":"theorem Disjoint.sdiff_eq_right (h : Disjoint a b) : b \\ a = b :=\n  h.symm.sdiff_eq_left\n\n"}
{"name":"Disjoint.sup_sdiff_cancel_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\nh : Disjoint a b\n⊢ Eq (SDiff.sdiff (Max.max a b) a) b","decl":"theorem Disjoint.sup_sdiff_cancel_left (h : Disjoint a b) : (a ⊔ b) \\ a = b := by\n  rw [sup_sdiff, sdiff_self, bot_sup_eq, h.sdiff_eq_right]\n\n"}
{"name":"Disjoint.sup_sdiff_cancel_right","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\nh : Disjoint a b\n⊢ Eq (SDiff.sdiff (Max.max a b) b) a","decl":"theorem Disjoint.sup_sdiff_cancel_right (h : Disjoint a b) : (a ⊔ b) \\ b = a := by\n  rw [sup_sdiff, sdiff_self, sup_bot_eq, h.sdiff_eq_left]\n\n"}
{"name":"Disjoint.le_sdiff_of_le_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\nhac : Disjoint a c\nhab : LE.le a b\n⊢ LE.le a (SDiff.sdiff b c)","decl":"/-- See `le_sdiff` for a stronger version in generalised Boolean algebras. -/\ntheorem Disjoint.le_sdiff_of_le_left (hac : Disjoint a c) (hab : a ≤ b) : a ≤ b \\ c :=\n  hac.sdiff_eq_left.ge.trans <| sdiff_le_sdiff_right hab\n\n"}
{"name":"sdiff_sdiff_le","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\n⊢ LE.le (SDiff.sdiff a (SDiff.sdiff a b)) b","decl":"theorem sdiff_sdiff_le : a \\ (a \\ b) ≤ b :=\n  sdiff_le_iff.2 le_sdiff_sup\n\n"}
{"name":"sdiff_eq_sdiff_iff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\n⊢ Iff (Eq (SDiff.sdiff a b) (SDiff.sdiff b a)) (Eq a b)","decl":"@[simp] lemma sdiff_eq_sdiff_iff : a \\ b = b \\ a ↔ a = b := by simp [le_antisymm_iff]\n"}
{"name":"sdiff_ne_sdiff_iff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b : α\n⊢ Iff (Ne (SDiff.sdiff a b) (SDiff.sdiff b a)) (Ne a b)","decl":"lemma sdiff_ne_sdiff_iff : a \\ b ≠ b \\ a ↔ a ≠ b := sdiff_eq_sdiff_iff.not\n\n"}
{"name":"sdiff_triangle","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\n⊢ LE.le (SDiff.sdiff a c) (Max.max (SDiff.sdiff a b) (SDiff.sdiff b c))","decl":"theorem sdiff_triangle (a b c : α) : a \\ c ≤ a \\ b ⊔ b \\ c := by\n  rw [sdiff_le_iff, sup_left_comm, ← sdiff_le_iff]\n  exact sdiff_sdiff_le.trans le_sup_sdiff\n\n"}
{"name":"sdiff_sup_sdiff_cancel","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\nhba : LE.le b a\nhcb : LE.le c b\n⊢ Eq (Max.max (SDiff.sdiff a b) (SDiff.sdiff b c)) (SDiff.sdiff a c)","decl":"theorem sdiff_sup_sdiff_cancel (hba : b ≤ a) (hcb : c ≤ b) : a \\ b ⊔ b \\ c = a \\ c :=\n  (sdiff_triangle _ _ _).antisymm' <| sup_le (sdiff_le_sdiff_left hcb) (sdiff_le_sdiff_right hba)\n\n"}
{"name":"sdiff_le_sdiff_of_sup_le_sup_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\nh : LE.le (Max.max c a) (Max.max c b)\n⊢ LE.le (SDiff.sdiff a c) (SDiff.sdiff b c)","decl":"theorem sdiff_le_sdiff_of_sup_le_sup_left (h : c ⊔ a ≤ c ⊔ b) : a \\ c ≤ b \\ c := by\n  rw [← sup_sdiff_left_self, ← @sup_sdiff_left_self _ _ _ b]\n  exact sdiff_le_sdiff_right h\n\n"}
{"name":"sdiff_le_sdiff_of_sup_le_sup_right","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\nh : LE.le (Max.max a c) (Max.max b c)\n⊢ LE.le (SDiff.sdiff a c) (SDiff.sdiff b c)","decl":"theorem sdiff_le_sdiff_of_sup_le_sup_right (h : a ⊔ c ≤ b ⊔ c) : a \\ c ≤ b \\ c := by\n  rw [← sup_sdiff_right_self, ← @sup_sdiff_right_self _ _ b]\n  exact sdiff_le_sdiff_right h\n\n"}
{"name":"inf_sdiff_sup_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\n⊢ Eq (Min.min (SDiff.sdiff a c) (Max.max a b)) (SDiff.sdiff a c)","decl":"@[simp]\ntheorem inf_sdiff_sup_left : a \\ c ⊓ (a ⊔ b) = a \\ c :=\n  inf_of_le_left <| sdiff_le.trans le_sup_left\n\n"}
{"name":"inf_sdiff_sup_right","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : GeneralizedCoheytingAlgebra α\na b c : α\n⊢ Eq (Min.min (SDiff.sdiff a c) (Max.max b a)) (SDiff.sdiff a c)","decl":"@[simp]\ntheorem inf_sdiff_sup_right : a \\ c ⊓ (b ⊔ a) = a \\ c :=\n  inf_of_le_left <| sdiff_le.trans le_sup_right\n\n-- See note [lower instance priority]\n"}
{"name":"himp_bot","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na : α\n⊢ Eq (HImp.himp a Bot.bot) (HasCompl.compl a)","decl":"@[simp]\ntheorem himp_bot (a : α) : a ⇨ ⊥ = aᶜ :=\n  HeytingAlgebra.himp_bot _\n\n"}
{"name":"bot_himp","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na : α\n⊢ Eq (HImp.himp Bot.bot a) Top.top","decl":"@[simp]\ntheorem bot_himp (a : α) : ⊥ ⇨ a = ⊤ :=\n  himp_eq_top_iff.2 bot_le\n\n"}
{"name":"compl_sup_distrib","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na b : α\n⊢ Eq (HasCompl.compl (Max.max a b)) (Min.min (HasCompl.compl a) (HasCompl.compl b))","decl":"theorem compl_sup_distrib (a b : α) : (a ⊔ b)ᶜ = aᶜ ⊓ bᶜ := by\n  simp_rw [← himp_bot, sup_himp_distrib]\n\n"}
{"name":"compl_sup","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na b : α\n⊢ Eq (HasCompl.compl (Max.max a b)) (Min.min (HasCompl.compl a) (HasCompl.compl b))","decl":"@[simp]\ntheorem compl_sup : (a ⊔ b)ᶜ = aᶜ ⊓ bᶜ :=\n  compl_sup_distrib _ _\n\n"}
{"name":"compl_le_himp","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na b : α\n⊢ LE.le (HasCompl.compl a) (HImp.himp a b)","decl":"theorem compl_le_himp : aᶜ ≤ a ⇨ b :=\n  (himp_bot _).ge.trans <| himp_le_himp_left bot_le\n\n"}
{"name":"compl_sup_le_himp","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na b : α\n⊢ LE.le (Max.max (HasCompl.compl a) b) (HImp.himp a b)","decl":"theorem compl_sup_le_himp : aᶜ ⊔ b ≤ a ⇨ b :=\n  sup_le compl_le_himp le_himp\n\n"}
{"name":"sup_compl_le_himp","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na b : α\n⊢ LE.le (Max.max b (HasCompl.compl a)) (HImp.himp a b)","decl":"theorem sup_compl_le_himp : b ⊔ aᶜ ≤ a ⇨ b :=\n  sup_le le_himp compl_le_himp\n\n-- `p → ¬ p ↔ ¬ p`\n"}
{"name":"himp_compl","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na : α\n⊢ Eq (HImp.himp a (HasCompl.compl a)) (HasCompl.compl a)","decl":"@[simp]\ntheorem himp_compl (a : α) : a ⇨ aᶜ = aᶜ := by rw [← himp_bot, himp_himp, inf_idem]\n\n-- `p → ¬ q ↔ q → ¬ p`\n"}
{"name":"himp_compl_comm","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na b : α\n⊢ Eq (HImp.himp a (HasCompl.compl b)) (HImp.himp b (HasCompl.compl a))","decl":"theorem himp_compl_comm (a b : α) : a ⇨ bᶜ = b ⇨ aᶜ := by simp_rw [← himp_bot, himp_left_comm]\n\n"}
{"name":"le_compl_iff_disjoint_right","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na b : α\n⊢ Iff (LE.le a (HasCompl.compl b)) (Disjoint a b)","decl":"theorem le_compl_iff_disjoint_right : a ≤ bᶜ ↔ Disjoint a b := by\n  rw [← himp_bot, le_himp_iff, disjoint_iff_inf_le]\n\n"}
{"name":"le_compl_iff_disjoint_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na b : α\n⊢ Iff (LE.le a (HasCompl.compl b)) (Disjoint b a)","decl":"theorem le_compl_iff_disjoint_left : a ≤ bᶜ ↔ Disjoint b a :=\n  le_compl_iff_disjoint_right.trans disjoint_comm\n\n"}
{"name":"le_compl_comm","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na b : α\n⊢ Iff (LE.le a (HasCompl.compl b)) (LE.le b (HasCompl.compl a))","decl":"theorem le_compl_comm : a ≤ bᶜ ↔ b ≤ aᶜ := by\n  rw [le_compl_iff_disjoint_right, le_compl_iff_disjoint_left]\n\n"}
{"name":"Disjoint.le_compl_right","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na b : α\na✝ : Disjoint a b\n⊢ LE.le a (HasCompl.compl b)","decl":"alias ⟨_, Disjoint.le_compl_right⟩ := le_compl_iff_disjoint_right\n\n"}
{"name":"Disjoint.le_compl_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na b : α\na✝ : Disjoint b a\n⊢ LE.le a (HasCompl.compl b)","decl":"alias ⟨_, Disjoint.le_compl_left⟩ := le_compl_iff_disjoint_left\n\n"}
{"name":"le_compl_iff_le_compl","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na b : α\n⊢ Iff (LE.le a (HasCompl.compl b)) (LE.le b (HasCompl.compl a))","decl":"alias le_compl_iff_le_compl := le_compl_comm\n\n"}
{"name":"le_compl_of_le_compl","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na b : α\na✝ : LE.le a (HasCompl.compl b)\n⊢ LE.le b (HasCompl.compl a)","decl":"alias ⟨le_compl_of_le_compl, _⟩ := le_compl_comm\n\n"}
{"name":"disjoint_compl_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na : α\n⊢ Disjoint (HasCompl.compl a) a","decl":"theorem disjoint_compl_left : Disjoint aᶜ a :=\n  disjoint_iff_inf_le.mpr <| le_himp_iff.1 (himp_bot _).ge\n\n"}
{"name":"disjoint_compl_right","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na : α\n⊢ Disjoint a (HasCompl.compl a)","decl":"theorem disjoint_compl_right : Disjoint a aᶜ :=\n  disjoint_compl_left.symm\n\n"}
{"name":"LE.le.disjoint_compl_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na b : α\nh : LE.le b a\n⊢ Disjoint (HasCompl.compl a) b","decl":"theorem LE.le.disjoint_compl_left (h : b ≤ a) : Disjoint aᶜ b :=\n  _root_.disjoint_compl_left.mono_right h\n\n"}
{"name":"LE.le.disjoint_compl_right","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na b : α\nh : LE.le a b\n⊢ Disjoint a (HasCompl.compl b)","decl":"theorem LE.le.disjoint_compl_right (h : a ≤ b) : Disjoint a bᶜ :=\n  _root_.disjoint_compl_right.mono_left h\n\n"}
{"name":"IsCompl.compl_eq","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na b : α\nh : IsCompl a b\n⊢ Eq (HasCompl.compl a) b","decl":"theorem IsCompl.compl_eq (h : IsCompl a b) : aᶜ = b :=\n  h.1.le_compl_left.antisymm' <| Disjoint.le_of_codisjoint disjoint_compl_left h.2\n\n"}
{"name":"IsCompl.eq_compl","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na b : α\nh : IsCompl a b\n⊢ Eq a (HasCompl.compl b)","decl":"theorem IsCompl.eq_compl (h : IsCompl a b) : a = bᶜ :=\n  h.1.le_compl_right.antisymm <| Disjoint.le_of_codisjoint disjoint_compl_left h.2.symm\n\n"}
{"name":"compl_unique","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na b : α\nh₀ : Eq (Min.min a b) Bot.bot\nh₁ : Eq (Max.max a b) Top.top\n⊢ Eq (HasCompl.compl a) b","decl":"theorem compl_unique (h₀ : a ⊓ b = ⊥) (h₁ : a ⊔ b = ⊤) : aᶜ = b :=\n  (IsCompl.of_eq h₀ h₁).compl_eq\n\n"}
{"name":"inf_compl_self","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na : α\n⊢ Eq (Min.min a (HasCompl.compl a)) Bot.bot","decl":"@[simp]\ntheorem inf_compl_self (a : α) : a ⊓ aᶜ = ⊥ :=\n  disjoint_compl_right.eq_bot\n\n"}
{"name":"compl_inf_self","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na : α\n⊢ Eq (Min.min (HasCompl.compl a) a) Bot.bot","decl":"@[simp]\ntheorem compl_inf_self (a : α) : aᶜ ⊓ a = ⊥ :=\n  disjoint_compl_left.eq_bot\n\n"}
{"name":"inf_compl_eq_bot","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na : α\n⊢ Eq (Min.min a (HasCompl.compl a)) Bot.bot","decl":"theorem inf_compl_eq_bot : a ⊓ aᶜ = ⊥ :=\n  inf_compl_self _\n\n"}
{"name":"compl_inf_eq_bot","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na : α\n⊢ Eq (Min.min (HasCompl.compl a) a) Bot.bot","decl":"theorem compl_inf_eq_bot : aᶜ ⊓ a = ⊥ :=\n  compl_inf_self _\n\n"}
{"name":"compl_top","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\n⊢ Eq (HasCompl.compl Top.top) Bot.bot","decl":"@[simp]\ntheorem compl_top : (⊤ : α)ᶜ = ⊥ :=\n  eq_of_forall_le_iff fun a => by rw [le_compl_iff_disjoint_right, disjoint_top, le_bot_iff]\n\n"}
{"name":"compl_bot","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\n⊢ Eq (HasCompl.compl Bot.bot) Top.top","decl":"@[simp]\ntheorem compl_bot : (⊥ : α)ᶜ = ⊤ := by rw [← himp_bot, himp_self]\n\n"}
{"name":"le_compl_self","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na : α\n⊢ Iff (LE.le a (HasCompl.compl a)) (Eq a Bot.bot)","decl":"@[simp] theorem le_compl_self : a ≤ aᶜ ↔ a = ⊥ := by\n  rw [le_compl_iff_disjoint_left, disjoint_self]\n\n"}
{"name":"ne_compl_self","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝¹ : HeytingAlgebra α\na : α\ninst✝ : Nontrivial α\n⊢ Ne a (HasCompl.compl a)","decl":"@[simp] theorem ne_compl_self [Nontrivial α] : a ≠ aᶜ := by\n  intro h\n  cases le_compl_self.1 (le_of_eq h)\n  simp at h\n\n"}
{"name":"compl_ne_self","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝¹ : HeytingAlgebra α\na : α\ninst✝ : Nontrivial α\n⊢ Ne (HasCompl.compl a) a","decl":"@[simp] theorem compl_ne_self [Nontrivial α] : aᶜ ≠ a :=\n  ne_comm.1 ne_compl_self\n\n"}
{"name":"lt_compl_self","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝¹ : HeytingAlgebra α\na : α\ninst✝ : Nontrivial α\n⊢ Iff (LT.lt a (HasCompl.compl a)) (Eq a Bot.bot)","decl":"@[simp] theorem lt_compl_self [Nontrivial α] : a < aᶜ ↔ a = ⊥ := by\n  rw [lt_iff_le_and_ne]; simp\n\n"}
{"name":"le_compl_compl","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na : α\n⊢ LE.le a (HasCompl.compl (HasCompl.compl a))","decl":"theorem le_compl_compl : a ≤ aᶜᶜ :=\n  disjoint_compl_right.le_compl_right\n\n"}
{"name":"compl_anti","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\n⊢ Antitone HasCompl.compl","decl":"theorem compl_anti : Antitone (compl : α → α) := fun _ _ h =>\n  le_compl_comm.1 <| h.trans le_compl_compl\n\n"}
{"name":"compl_le_compl","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na b : α\nh : LE.le a b\n⊢ LE.le (HasCompl.compl b) (HasCompl.compl a)","decl":"@[gcongr]\ntheorem compl_le_compl (h : a ≤ b) : bᶜ ≤ aᶜ :=\n  compl_anti h\n\n"}
{"name":"compl_compl_compl","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na : α\n⊢ Eq (HasCompl.compl (HasCompl.compl (HasCompl.compl a))) (HasCompl.compl a)","decl":"@[simp]\ntheorem compl_compl_compl (a : α) : aᶜᶜᶜ = aᶜ :=\n  (compl_anti le_compl_compl).antisymm le_compl_compl\n\n"}
{"name":"disjoint_compl_compl_left_iff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na b : α\n⊢ Iff (Disjoint (HasCompl.compl (HasCompl.compl a)) b) (Disjoint a b)","decl":"@[simp]\ntheorem disjoint_compl_compl_left_iff : Disjoint aᶜᶜ b ↔ Disjoint a b := by\n  simp_rw [← le_compl_iff_disjoint_left, compl_compl_compl]\n\n"}
{"name":"disjoint_compl_compl_right_iff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na b : α\n⊢ Iff (Disjoint a (HasCompl.compl (HasCompl.compl b))) (Disjoint a b)","decl":"@[simp]\ntheorem disjoint_compl_compl_right_iff : Disjoint a bᶜᶜ ↔ Disjoint a b := by\n  simp_rw [← le_compl_iff_disjoint_right, compl_compl_compl]\n\n"}
{"name":"compl_sup_compl_le","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na b : α\n⊢ LE.le (Max.max (HasCompl.compl a) (HasCompl.compl b)) (HasCompl.compl (Min.min a b))","decl":"theorem compl_sup_compl_le : aᶜ ⊔ bᶜ ≤ (a ⊓ b)ᶜ :=\n  sup_le (compl_anti inf_le_left) <| compl_anti inf_le_right\n\n"}
{"name":"compl_compl_inf_distrib","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na b : α\n⊢ Eq (HasCompl.compl (HasCompl.compl (Min.min a b))) (Min.min (HasCompl.compl (HasCompl.compl a)) (HasCompl.compl (HasCompl.compl b)))","decl":"theorem compl_compl_inf_distrib (a b : α) : (a ⊓ b)ᶜᶜ = aᶜᶜ ⊓ bᶜᶜ := by\n  refine ((compl_anti compl_sup_compl_le).trans (compl_sup_distrib _ _).le).antisymm ?_\n  rw [le_compl_iff_disjoint_right, disjoint_assoc, disjoint_compl_compl_left_iff,\n    disjoint_left_comm, disjoint_compl_compl_left_iff, ← disjoint_assoc, inf_comm]\n  exact disjoint_compl_right\n\n"}
{"name":"compl_compl_himp_distrib","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na b : α\n⊢ Eq (HasCompl.compl (HasCompl.compl (HImp.himp a b))) (HImp.himp (HasCompl.compl (HasCompl.compl a)) (HasCompl.compl (HasCompl.compl b)))","decl":"theorem compl_compl_himp_distrib (a b : α) : (a ⇨ b)ᶜᶜ = aᶜᶜ ⇨ bᶜᶜ := by\n  apply le_antisymm\n  · rw [le_himp_iff, ← compl_compl_inf_distrib]\n    exact compl_anti (compl_anti himp_inf_le)\n  · refine le_compl_comm.1 ((compl_anti compl_sup_le_himp).trans ?_)\n    rw [compl_sup_distrib, le_compl_iff_disjoint_right, disjoint_right_comm, ←\n      le_compl_iff_disjoint_right]\n    exact inf_himp_le\n\n"}
{"name":"ofDual_hnot","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na : OrderDual α\n⊢ Eq (OrderDual.ofDual (HNot.hnot a)) (HasCompl.compl (OrderDual.ofDual a))","decl":"@[simp]\ntheorem ofDual_hnot (a : αᵒᵈ) : ofDual (￢a) = (ofDual a)ᶜ :=\n  rfl\n\n"}
{"name":"toDual_compl","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : HeytingAlgebra α\na : α\n⊢ Eq (OrderDual.toDual (HasCompl.compl a)) (HNot.hnot (OrderDual.toDual a))","decl":"@[simp]\ntheorem toDual_compl (a : α) : toDual aᶜ = ￢toDual a :=\n  rfl\n\n"}
{"name":"top_sdiff'","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na : α\n⊢ Eq (SDiff.sdiff Top.top a) (HNot.hnot a)","decl":"@[simp]\ntheorem top_sdiff' (a : α) : ⊤ \\ a = ￢a :=\n  CoheytingAlgebra.top_sdiff _\n\n"}
{"name":"sdiff_top","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na : α\n⊢ Eq (SDiff.sdiff a Top.top) Bot.bot","decl":"@[simp]\ntheorem sdiff_top (a : α) : a \\ ⊤ = ⊥ :=\n  sdiff_eq_bot_iff.2 le_top\n\n"}
{"name":"hnot_inf_distrib","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na b : α\n⊢ Eq (HNot.hnot (Min.min a b)) (Max.max (HNot.hnot a) (HNot.hnot b))","decl":"theorem hnot_inf_distrib (a b : α) : ￢(a ⊓ b) = ￢a ⊔ ￢b := by\n  simp_rw [← top_sdiff', sdiff_inf_distrib]\n\n"}
{"name":"sdiff_le_hnot","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na b : α\n⊢ LE.le (SDiff.sdiff a b) (HNot.hnot b)","decl":"theorem sdiff_le_hnot : a \\ b ≤ ￢b :=\n  (sdiff_le_sdiff_right le_top).trans_eq <| top_sdiff' _\n\n"}
{"name":"sdiff_le_inf_hnot","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na b : α\n⊢ LE.le (SDiff.sdiff a b) (Min.min a (HNot.hnot b))","decl":"theorem sdiff_le_inf_hnot : a \\ b ≤ a ⊓ ￢b :=\n  le_inf sdiff_le sdiff_le_hnot\n\n-- See note [lower instance priority]\n"}
{"name":"hnot_sdiff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na : α\n⊢ Eq (SDiff.sdiff (HNot.hnot a) a) (HNot.hnot a)","decl":"@[simp]\ntheorem hnot_sdiff (a : α) : ￢a \\ a = ￢a := by rw [← top_sdiff', sdiff_sdiff, sup_idem]\n\n"}
{"name":"hnot_sdiff_comm","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na b : α\n⊢ Eq (SDiff.sdiff (HNot.hnot a) b) (SDiff.sdiff (HNot.hnot b) a)","decl":"theorem hnot_sdiff_comm (a b : α) : ￢a \\ b = ￢b \\ a := by simp_rw [← top_sdiff', sdiff_right_comm]\n\n"}
{"name":"hnot_le_iff_codisjoint_right","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na b : α\n⊢ Iff (LE.le (HNot.hnot a) b) (Codisjoint a b)","decl":"theorem hnot_le_iff_codisjoint_right : ￢a ≤ b ↔ Codisjoint a b := by\n  rw [← top_sdiff', sdiff_le_iff, codisjoint_iff_le_sup]\n\n"}
{"name":"hnot_le_iff_codisjoint_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na b : α\n⊢ Iff (LE.le (HNot.hnot a) b) (Codisjoint b a)","decl":"theorem hnot_le_iff_codisjoint_left : ￢a ≤ b ↔ Codisjoint b a :=\n  hnot_le_iff_codisjoint_right.trans codisjoint_comm\n\n"}
{"name":"hnot_le_comm","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na b : α\n⊢ Iff (LE.le (HNot.hnot a) b) (LE.le (HNot.hnot b) a)","decl":"theorem hnot_le_comm : ￢a ≤ b ↔ ￢b ≤ a := by\n  rw [hnot_le_iff_codisjoint_right, hnot_le_iff_codisjoint_left]\n\n"}
{"name":"Codisjoint.hnot_le_right","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na b : α\na✝ : Codisjoint a b\n⊢ LE.le (HNot.hnot a) b","decl":"alias ⟨_, Codisjoint.hnot_le_right⟩ := hnot_le_iff_codisjoint_right\n\n"}
{"name":"Codisjoint.hnot_le_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na b : α\na✝ : Codisjoint b a\n⊢ LE.le (HNot.hnot a) b","decl":"alias ⟨_, Codisjoint.hnot_le_left⟩ := hnot_le_iff_codisjoint_left\n\n"}
{"name":"codisjoint_hnot_right","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na : α\n⊢ Codisjoint a (HNot.hnot a)","decl":"theorem codisjoint_hnot_right : Codisjoint a (￢a) :=\n  codisjoint_iff_le_sup.2 <| sdiff_le_iff.1 (top_sdiff' _).le\n\n"}
{"name":"codisjoint_hnot_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na : α\n⊢ Codisjoint (HNot.hnot a) a","decl":"theorem codisjoint_hnot_left : Codisjoint (￢a) a :=\n  codisjoint_hnot_right.symm\n\n"}
{"name":"LE.le.codisjoint_hnot_left","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na b : α\nh : LE.le a b\n⊢ Codisjoint (HNot.hnot a) b","decl":"theorem LE.le.codisjoint_hnot_left (h : a ≤ b) : Codisjoint (￢a) b :=\n  _root_.codisjoint_hnot_left.mono_right h\n\n"}
{"name":"LE.le.codisjoint_hnot_right","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na b : α\nh : LE.le b a\n⊢ Codisjoint a (HNot.hnot b)","decl":"theorem LE.le.codisjoint_hnot_right (h : b ≤ a) : Codisjoint a (￢b) :=\n  _root_.codisjoint_hnot_right.mono_left h\n\n"}
{"name":"IsCompl.hnot_eq","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na b : α\nh : IsCompl a b\n⊢ Eq (HNot.hnot a) b","decl":"theorem IsCompl.hnot_eq (h : IsCompl a b) : ￢a = b :=\n  h.2.hnot_le_right.antisymm <| Disjoint.le_of_codisjoint h.1.symm codisjoint_hnot_right\n\n"}
{"name":"IsCompl.eq_hnot","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na b : α\nh : IsCompl a b\n⊢ Eq a (HNot.hnot b)","decl":"theorem IsCompl.eq_hnot (h : IsCompl a b) : a = ￢b :=\n  h.2.hnot_le_left.antisymm' <| Disjoint.le_of_codisjoint h.1 codisjoint_hnot_right\n\n"}
{"name":"sup_hnot_self","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na : α\n⊢ Eq (Max.max a (HNot.hnot a)) Top.top","decl":"@[simp]\ntheorem sup_hnot_self (a : α) : a ⊔ ￢a = ⊤ :=\n  Codisjoint.eq_top codisjoint_hnot_right\n\n"}
{"name":"hnot_sup_self","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na : α\n⊢ Eq (Max.max (HNot.hnot a) a) Top.top","decl":"@[simp]\ntheorem hnot_sup_self (a : α) : ￢a ⊔ a = ⊤ :=\n  Codisjoint.eq_top codisjoint_hnot_left\n\n"}
{"name":"hnot_bot","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\n⊢ Eq (HNot.hnot Bot.bot) Top.top","decl":"@[simp]\ntheorem hnot_bot : ￢(⊥ : α) = ⊤ :=\n  eq_of_forall_ge_iff fun a => by rw [hnot_le_iff_codisjoint_left, codisjoint_bot, top_le_iff]\n\n"}
{"name":"hnot_top","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\n⊢ Eq (HNot.hnot Top.top) Bot.bot","decl":"@[simp]\ntheorem hnot_top : ￢(⊤ : α) = ⊥ := by rw [← top_sdiff', sdiff_self]\n\n"}
{"name":"hnot_hnot_le","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na : α\n⊢ LE.le (HNot.hnot (HNot.hnot a)) a","decl":"theorem hnot_hnot_le : ￢￢a ≤ a :=\n  codisjoint_hnot_right.hnot_le_left\n\n"}
{"name":"hnot_anti","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\n⊢ Antitone HNot.hnot","decl":"theorem hnot_anti : Antitone (hnot : α → α) := fun _ _ h => hnot_le_comm.1 <| hnot_hnot_le.trans h\n\n"}
{"name":"hnot_le_hnot","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na b : α\nh : LE.le a b\n⊢ LE.le (HNot.hnot b) (HNot.hnot a)","decl":"theorem hnot_le_hnot (h : a ≤ b) : ￢b ≤ ￢a :=\n  hnot_anti h\n\n"}
{"name":"hnot_hnot_hnot","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na : α\n⊢ Eq (HNot.hnot (HNot.hnot (HNot.hnot a))) (HNot.hnot a)","decl":"@[simp]\ntheorem hnot_hnot_hnot (a : α) : ￢￢￢a = ￢a :=\n  hnot_hnot_le.antisymm <| hnot_anti hnot_hnot_le\n\n"}
{"name":"codisjoint_hnot_hnot_left_iff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na b : α\n⊢ Iff (Codisjoint (HNot.hnot (HNot.hnot a)) b) (Codisjoint a b)","decl":"@[simp]\ntheorem codisjoint_hnot_hnot_left_iff : Codisjoint (￢￢a) b ↔ Codisjoint a b := by\n  simp_rw [← hnot_le_iff_codisjoint_right, hnot_hnot_hnot]\n\n"}
{"name":"codisjoint_hnot_hnot_right_iff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na b : α\n⊢ Iff (Codisjoint a (HNot.hnot (HNot.hnot b))) (Codisjoint a b)","decl":"@[simp]\ntheorem codisjoint_hnot_hnot_right_iff : Codisjoint a (￢￢b) ↔ Codisjoint a b := by\n  simp_rw [← hnot_le_iff_codisjoint_left, hnot_hnot_hnot]\n\n"}
{"name":"le_hnot_inf_hnot","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na b : α\n⊢ LE.le (HNot.hnot (Max.max a b)) (Min.min (HNot.hnot a) (HNot.hnot b))","decl":"theorem le_hnot_inf_hnot : ￢(a ⊔ b) ≤ ￢a ⊓ ￢b :=\n  le_inf (hnot_anti le_sup_left) <| hnot_anti le_sup_right\n\n"}
{"name":"hnot_hnot_sup_distrib","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na b : α\n⊢ Eq (HNot.hnot (HNot.hnot (Max.max a b))) (Max.max (HNot.hnot (HNot.hnot a)) (HNot.hnot (HNot.hnot b)))","decl":"theorem hnot_hnot_sup_distrib (a b : α) : ￢￢(a ⊔ b) = ￢￢a ⊔ ￢￢b := by\n  refine ((hnot_inf_distrib _ _).ge.trans <| hnot_anti le_hnot_inf_hnot).antisymm' ?_\n  rw [hnot_le_iff_codisjoint_left, codisjoint_assoc, codisjoint_hnot_hnot_left_iff,\n    codisjoint_left_comm, codisjoint_hnot_hnot_left_iff, ← codisjoint_assoc, sup_comm]\n  exact codisjoint_hnot_right\n\n"}
{"name":"hnot_hnot_sdiff_distrib","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na b : α\n⊢ Eq (HNot.hnot (HNot.hnot (SDiff.sdiff a b))) (SDiff.sdiff (HNot.hnot (HNot.hnot a)) (HNot.hnot (HNot.hnot b)))","decl":"theorem hnot_hnot_sdiff_distrib (a b : α) : ￢￢(a \\ b) = ￢￢a \\ ￢￢b := by\n  apply le_antisymm\n  · refine hnot_le_comm.1 ((hnot_anti sdiff_le_inf_hnot).trans' ?_)\n    rw [hnot_inf_distrib, hnot_le_iff_codisjoint_right, codisjoint_left_comm, ←\n      hnot_le_iff_codisjoint_right]\n    exact le_sdiff_sup\n  · rw [sdiff_le_iff, ← hnot_hnot_sup_distrib]\n    exact hnot_anti (hnot_anti le_sup_sdiff)\n\n"}
{"name":"ofDual_compl","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na : OrderDual α\n⊢ Eq (OrderDual.ofDual (HasCompl.compl a)) (HNot.hnot (OrderDual.ofDual a))","decl":"@[simp]\ntheorem ofDual_compl (a : αᵒᵈ) : ofDual aᶜ = ￢ofDual a :=\n  rfl\n\n"}
{"name":"ofDual_himp","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na b : OrderDual α\n⊢ Eq (OrderDual.ofDual (HImp.himp a b)) (SDiff.sdiff (OrderDual.ofDual b) (OrderDual.ofDual a))","decl":"@[simp]\ntheorem ofDual_himp (a b : αᵒᵈ) : ofDual (a ⇨ b) = ofDual b \\ ofDual a :=\n  rfl\n\n"}
{"name":"toDual_hnot","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na : α\n⊢ Eq (OrderDual.toDual (HNot.hnot a)) (HasCompl.compl (OrderDual.toDual a))","decl":"@[simp]\ntheorem toDual_hnot (a : α) : toDual (￢a) = (toDual a)ᶜ :=\n  rfl\n\n"}
{"name":"toDual_sdiff","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : CoheytingAlgebra α\na b : α\n⊢ Eq (OrderDual.toDual (SDiff.sdiff a b)) (HImp.himp (OrderDual.toDual b) (OrderDual.toDual a))","decl":"@[simp]\ntheorem toDual_sdiff (a b : α) : toDual (a \\ b) = toDual b ⇨ toDual a :=\n  rfl\n\n"}
{"name":"compl_le_hnot","module":"Mathlib.Order.Heyting.Basic","initialProofState":"α : Type u_2\ninst✝ : BiheytingAlgebra α\na : α\n⊢ LE.le (HasCompl.compl a) (HNot.hnot a)","decl":"theorem compl_le_hnot : aᶜ ≤ ￢a :=\n  (disjoint_compl_left : Disjoint _ a).le_of_codisjoint codisjoint_hnot_right\n\n"}
{"name":"himp_iff_imp","module":"Mathlib.Order.Heyting.Basic","initialProofState":"p q : Prop\n⊢ Iff (HImp.himp p q) (p → q)","decl":"@[simp]\ntheorem himp_iff_imp (p q : Prop) : p ⇨ q ↔ p → q :=\n  Iff.rfl\n\n"}
{"name":"compl_iff_not","module":"Mathlib.Order.Heyting.Basic","initialProofState":"p : Prop\n⊢ Iff (HasCompl.compl p) (Not p)","decl":"@[simp]\ntheorem compl_iff_not (p : Prop) : pᶜ ↔ ¬p :=\n  Iff.rfl\n\n-- See note [reducible non-instances]\n"}
{"name":"PUnit.top_eq","module":"Mathlib.Order.Heyting.Basic","initialProofState":"⊢ Eq Top.top PUnit.unit","decl":"@[simp]\ntheorem top_eq : (⊤ : PUnit) = unit :=\n  rfl\n\n"}
{"name":"PUnit.bot_eq","module":"Mathlib.Order.Heyting.Basic","initialProofState":"⊢ Eq Bot.bot PUnit.unit","decl":"@[simp]\ntheorem bot_eq : (⊥ : PUnit) = unit :=\n  rfl\n\n"}
{"name":"PUnit.sup_eq","module":"Mathlib.Order.Heyting.Basic","initialProofState":"a b : PUnit.{u + 1}\n⊢ Eq (Max.max a b) PUnit.unit","decl":"@[simp]\ntheorem sup_eq : a ⊔ b = unit :=\n  rfl\n\n"}
{"name":"PUnit.inf_eq","module":"Mathlib.Order.Heyting.Basic","initialProofState":"a b : PUnit.{u + 1}\n⊢ Eq (Min.min a b) PUnit.unit","decl":"@[simp]\ntheorem inf_eq : a ⊓ b = unit :=\n  rfl\n\n"}
{"name":"PUnit.compl_eq","module":"Mathlib.Order.Heyting.Basic","initialProofState":"a : PUnit.{u + 1}\n⊢ Eq (HasCompl.compl a) PUnit.unit","decl":"@[simp]\ntheorem compl_eq : aᶜ = unit :=\n  rfl\n\n"}
{"name":"PUnit.sdiff_eq","module":"Mathlib.Order.Heyting.Basic","initialProofState":"a b : PUnit.{u + 1}\n⊢ Eq (SDiff.sdiff a b) PUnit.unit","decl":"@[simp]\ntheorem sdiff_eq : a \\ b = unit :=\n  rfl\n\n"}
{"name":"PUnit.hnot_eq","module":"Mathlib.Order.Heyting.Basic","initialProofState":"a : PUnit.{u + 1}\n⊢ Eq (HNot.hnot a) PUnit.unit","decl":"@[simp]\ntheorem hnot_eq : ￢a = unit :=\n  rfl\n\n"}
{"name":"PUnit.himp_eq","module":"Mathlib.Order.Heyting.Basic","initialProofState":"a b : PUnit.{u + 1}\n⊢ Eq (HImp.himp a b) PUnit.unit","decl":"@[simp]\ntheorem himp_eq : a ⇨ b = unit :=\n  rfl\n\n"}
