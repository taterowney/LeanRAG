{"name":"TopologicalSpace.eq_induced_by_maps_to_sierpinski","module":"Mathlib.Topology.ContinuousMap.T0Sierpinski","initialProofState":"X : Type u_1\nt : TopologicalSpace X\n⊢ Eq t (iInf fun u => TopologicalSpace.induced (fun x => Membership.mem u x) sierpinskiSpace)","decl":"theorem eq_induced_by_maps_to_sierpinski (X : Type*) [t : TopologicalSpace X] :\n    t = ⨅ u : Opens X, sierpinskiSpace.induced (· ∈ u) := by\n  apply le_antisymm\n  · rw [le_iInf_iff]\n    exact fun u => Continuous.le_induced (isOpen_iff_continuous_mem.mp u.2)\n  · intro u h\n    rw [← generateFrom_iUnion_isOpen]\n    apply isOpen_generateFrom_of_mem\n    simp only [Set.mem_iUnion, Set.mem_setOf_eq, isOpen_induced_iff]\n    exact ⟨⟨u, h⟩, {True}, isOpen_singleton_true, by simp [Set.preimage]⟩\n\n"}
{"name":"TopologicalSpace.productOfMemOpens_isInducing","module":"Mathlib.Topology.ContinuousMap.T0Sierpinski","initialProofState":"X : Type u_1\ninst✝ : TopologicalSpace X\n⊢ Topology.IsInducing ⇑(TopologicalSpace.productOfMemOpens X)","decl":"theorem productOfMemOpens_isInducing : IsInducing (productOfMemOpens X) := by\n  convert inducing_iInf_to_pi fun (u : Opens X) (x : X) => x ∈ u\n  apply eq_induced_by_maps_to_sierpinski\n\n"}
{"name":"TopologicalSpace.productOfMemOpens_inducing","module":"Mathlib.Topology.ContinuousMap.T0Sierpinski","initialProofState":"X : Type u_1\ninst✝ : TopologicalSpace X\n⊢ Topology.IsInducing ⇑(TopologicalSpace.productOfMemOpens X)","decl":"@[deprecated (since := \"2024-10-28\")]\nalias productOfMemOpens_inducing := productOfMemOpens_isInducing\n\n"}
{"name":"TopologicalSpace.productOfMemOpens_injective","module":"Mathlib.Topology.ContinuousMap.T0Sierpinski","initialProofState":"X : Type u_1\ninst✝¹ : TopologicalSpace X\ninst✝ : T0Space X\n⊢ Function.Injective ⇑(TopologicalSpace.productOfMemOpens X)","decl":"theorem productOfMemOpens_injective [T0Space X] : Function.Injective (productOfMemOpens X) := by\n  intro x1 x2 h\n  apply Inseparable.eq\n  rw [← IsInducing.inseparable_iff (productOfMemOpens_isInducing X), h]\n\n"}
{"name":"TopologicalSpace.productOfMemOpens_isEmbedding","module":"Mathlib.Topology.ContinuousMap.T0Sierpinski","initialProofState":"X : Type u_1\ninst✝¹ : TopologicalSpace X\ninst✝ : T0Space X\n⊢ Topology.IsEmbedding ⇑(TopologicalSpace.productOfMemOpens X)","decl":"theorem productOfMemOpens_isEmbedding [T0Space X] : IsEmbedding (productOfMemOpens X) :=\n  .mk (productOfMemOpens_isInducing X) (productOfMemOpens_injective X)\n\n"}
{"name":"TopologicalSpace.productOfMemOpens_embedding","module":"Mathlib.Topology.ContinuousMap.T0Sierpinski","initialProofState":"X : Type u_1\ninst✝¹ : TopologicalSpace X\ninst✝ : T0Space X\n⊢ Topology.IsEmbedding ⇑(TopologicalSpace.productOfMemOpens X)","decl":"@[deprecated (since := \"2024-10-26\")]\nalias productOfMemOpens_embedding := productOfMemOpens_isEmbedding\n\n"}
