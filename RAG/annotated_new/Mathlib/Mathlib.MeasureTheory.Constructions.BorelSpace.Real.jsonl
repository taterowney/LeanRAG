{"name":"Real.borel_eq_generateFrom_Ioo_rat","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ Eq (borel Real) (MeasurableSpace.generateFrom (Set.iUnion fun a => Set.iUnion fun b => Set.iUnion fun x => Singleton.singleton (Set.Ioo ↑a ↑b)))","decl":"theorem borel_eq_generateFrom_Ioo_rat :\n    borel ℝ = .generateFrom (⋃ (a : ℚ) (b : ℚ) (_ : a < b), {Ioo (a : ℝ) (b : ℝ)}) :=\n  isTopologicalBasis_Ioo_rat.borel_eq_generateFrom\n\n"}
{"name":"Real.borel_eq_generateFrom_Iio_rat","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ Eq (borel Real) (MeasurableSpace.generateFrom (Set.iUnion fun a => Singleton.singleton (Set.Iio ↑a)))","decl":"theorem borel_eq_generateFrom_Iio_rat : borel ℝ = .generateFrom (⋃ a : ℚ, {Iio (a : ℝ)}) := by\n  rw [borel_eq_generateFrom_Iio]\n  refine le_antisymm\n    (generateFrom_le ?_)\n    (generateFrom_mono <| iUnion_subset fun q ↦ singleton_subset_iff.mpr <| mem_range_self _)\n  rintro _ ⟨a, rfl⟩\n  have : IsLUB (range ((↑) : ℚ → ℝ) ∩ Iio a) a := by\n    simp [isLUB_iff_le_iff, mem_upperBounds, ← le_iff_forall_rat_lt_imp_le]\n  rw [← this.biUnion_Iio_eq, ← image_univ, ← image_inter_preimage, univ_inter, biUnion_image]\n  exact MeasurableSet.biUnion (to_countable _)\n    fun b _ => GenerateMeasurable.basic (Iio (b : ℝ)) (by simp)\n\n"}
{"name":"Real.borel_eq_generateFrom_Ioi_rat","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ Eq (borel Real) (MeasurableSpace.generateFrom (Set.iUnion fun a => Singleton.singleton (Set.Ioi ↑a)))","decl":"theorem borel_eq_generateFrom_Ioi_rat : borel ℝ = .generateFrom (⋃ a : ℚ, {Ioi (a : ℝ)}) := by\n  rw [borel_eq_generateFrom_Ioi]\n  refine le_antisymm\n    (generateFrom_le ?_)\n    (generateFrom_mono <| iUnion_subset fun q ↦ singleton_subset_iff.mpr <| mem_range_self _)\n  rintro _ ⟨a, rfl⟩\n  have : IsGLB (range ((↑) : ℚ → ℝ) ∩ Ioi a) a := by\n    simp [isGLB_iff_le_iff, mem_lowerBounds, ← le_iff_forall_lt_rat_imp_le]\n  rw [← this.biUnion_Ioi_eq, ← image_univ, ← image_inter_preimage, univ_inter, biUnion_image]\n  exact MeasurableSet.biUnion (to_countable _)\n    fun b _ => GenerateMeasurable.basic (Ioi (b : ℝ)) (by simp)\n\n"}
{"name":"Real.borel_eq_generateFrom_Iic_rat","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ Eq (borel Real) (MeasurableSpace.generateFrom (Set.iUnion fun a => Singleton.singleton (Set.Iic ↑a)))","decl":"theorem borel_eq_generateFrom_Iic_rat : borel ℝ = .generateFrom (⋃ a : ℚ, {Iic (a : ℝ)}) := by\n  rw [borel_eq_generateFrom_Ioi_rat, iUnion_singleton_eq_range, iUnion_singleton_eq_range]\n  refine le_antisymm (generateFrom_le ?_) (generateFrom_le ?_) <;>\n  rintro _ ⟨q, rfl⟩ <;>\n  dsimp only <;>\n  [rw [← compl_Iic]; rw [← compl_Ioi]] <;>\n  exact MeasurableSet.compl (GenerateMeasurable.basic _ (mem_range_self q))\n\n"}
{"name":"Real.borel_eq_generateFrom_Ici_rat","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ Eq (borel Real) (MeasurableSpace.generateFrom (Set.iUnion fun a => Singleton.singleton (Set.Ici ↑a)))","decl":"theorem borel_eq_generateFrom_Ici_rat : borel ℝ = .generateFrom (⋃ a : ℚ, {Ici (a : ℝ)}) := by\n  rw [borel_eq_generateFrom_Iio_rat, iUnion_singleton_eq_range, iUnion_singleton_eq_range]\n  refine le_antisymm (generateFrom_le ?_) (generateFrom_le ?_) <;>\n  rintro _ ⟨q, rfl⟩ <;>\n  dsimp only <;>\n  [rw [← compl_Ici]; rw [← compl_Iio]] <;>\n  exact MeasurableSet.compl (GenerateMeasurable.basic _ (mem_range_self q))\n\n"}
{"name":"Real.isPiSystem_Ioo_rat","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ IsPiSystem (Set.iUnion fun a => Set.iUnion fun b => Set.iUnion fun x => Singleton.singleton (Set.Ioo ↑a ↑b))","decl":"theorem isPiSystem_Ioo_rat :\n    IsPiSystem (⋃ (a : ℚ) (b : ℚ) (_ : a < b), {Ioo (a : ℝ) (b : ℝ)}) := by\n  convert isPiSystem_Ioo ((↑) : ℚ → ℝ) ((↑) : ℚ → ℝ)\n  ext x\n  simp [eq_comm]\n\n"}
{"name":"Real.isPiSystem_Iio_rat","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ IsPiSystem (Set.iUnion fun a => Singleton.singleton (Set.Iio ↑a))","decl":"theorem isPiSystem_Iio_rat : IsPiSystem (⋃ a : ℚ, {Iio (a : ℝ)}) := by\n  convert isPiSystem_image_Iio (((↑) : ℚ → ℝ) '' univ)\n  ext x\n  simp only [iUnion_singleton_eq_range, mem_range, image_univ, mem_image, exists_exists_eq_and]\n\n"}
{"name":"Real.isPiSystem_Ioi_rat","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ IsPiSystem (Set.iUnion fun a => Singleton.singleton (Set.Ioi ↑a))","decl":"theorem isPiSystem_Ioi_rat : IsPiSystem (⋃ a : ℚ, {Ioi (a : ℝ)}) := by\n  convert isPiSystem_image_Ioi (((↑) : ℚ → ℝ) '' univ)\n  ext x\n  simp only [iUnion_singleton_eq_range, mem_range, image_univ, mem_image, exists_exists_eq_and]\n\n"}
{"name":"Real.isPiSystem_Iic_rat","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ IsPiSystem (Set.iUnion fun a => Singleton.singleton (Set.Iic ↑a))","decl":"theorem isPiSystem_Iic_rat : IsPiSystem (⋃ a : ℚ, {Iic (a : ℝ)}) := by\n  convert isPiSystem_image_Iic (((↑) : ℚ → ℝ) '' univ)\n  ext x\n  simp only [iUnion_singleton_eq_range, mem_range, image_univ, mem_image, exists_exists_eq_and]\n\n"}
{"name":"Real.isPiSystem_Ici_rat","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ IsPiSystem (Set.iUnion fun a => Singleton.singleton (Set.Ici ↑a))","decl":"theorem isPiSystem_Ici_rat : IsPiSystem (⋃ a : ℚ, {Ici (a : ℝ)}) := by\n  convert isPiSystem_image_Ici (((↑) : ℚ → ℝ) '' univ)\n  ext x\n  simp only [iUnion_singleton_eq_range, mem_range, image_univ, mem_image, exists_exists_eq_and]\n\n"}
{"name":"Real.measure_ext_Ioo_rat","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"μ ν : MeasureTheory.Measure Real\ninst✝ : MeasureTheory.IsLocallyFiniteMeasure μ\nh : ∀ (a b : Rat), Eq (μ (Set.Ioo ↑a ↑b)) (ν (Set.Ioo ↑a ↑b))\n⊢ Eq μ ν","decl":"theorem measure_ext_Ioo_rat {μ ν : Measure ℝ} [IsLocallyFiniteMeasure μ]\n    (h : ∀ a b : ℚ, μ (Ioo a b) = ν (Ioo a b)) : μ = ν :=\n  (finiteSpanningSetsInIooRat μ).ext borel_eq_generateFrom_Ioo_rat isPiSystem_Ioo_rat <| by\n    simp only [mem_iUnion, mem_singleton_iff]\n    rintro _ ⟨a, b, -, rfl⟩\n    apply h\n\n"}
{"name":"measurable_real_toNNReal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ Measurable Real.toNNReal","decl":"@[measurability, fun_prop]\ntheorem measurable_real_toNNReal : Measurable Real.toNNReal :=\n  continuous_real_toNNReal.measurable\n\n"}
{"name":"Measurable.real_toNNReal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : α → Real\nhf : Measurable f\n⊢ Measurable fun x => (f x).toNNReal","decl":"@[measurability, fun_prop]\ntheorem Measurable.real_toNNReal {f : α → ℝ} (hf : Measurable f) :\n    Measurable fun x => Real.toNNReal (f x) :=\n  measurable_real_toNNReal.comp hf\n\n"}
{"name":"AEMeasurable.real_toNNReal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : α → Real\nμ : MeasureTheory.Measure α\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => (f x).toNNReal) μ","decl":"@[measurability, fun_prop]\ntheorem AEMeasurable.real_toNNReal {f : α → ℝ} {μ : Measure α} (hf : AEMeasurable f μ) :\n    AEMeasurable (fun x => Real.toNNReal (f x)) μ :=\n  measurable_real_toNNReal.comp_aemeasurable hf\n\n"}
{"name":"measurable_coe_nnreal_real","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ Measurable NNReal.toReal","decl":"@[measurability]\ntheorem measurable_coe_nnreal_real : Measurable ((↑) : ℝ≥0 → ℝ) :=\n  NNReal.continuous_coe.measurable\n\n"}
{"name":"Measurable.coe_nnreal_real","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : α → NNReal\nhf : Measurable f\n⊢ Measurable fun x => ↑(f x)","decl":"@[measurability, fun_prop]\ntheorem Measurable.coe_nnreal_real {f : α → ℝ≥0} (hf : Measurable f) :\n    Measurable fun x => (f x : ℝ) :=\n  measurable_coe_nnreal_real.comp hf\n\n"}
{"name":"AEMeasurable.coe_nnreal_real","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : α → NNReal\nμ : MeasureTheory.Measure α\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => ↑(f x)) μ","decl":"@[measurability, fun_prop]\ntheorem AEMeasurable.coe_nnreal_real {f : α → ℝ≥0} {μ : Measure α} (hf : AEMeasurable f μ) :\n    AEMeasurable (fun x => (f x : ℝ)) μ :=\n  measurable_coe_nnreal_real.comp_aemeasurable hf\n\n"}
{"name":"measurable_coe_nnreal_ennreal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ Measurable ENNReal.ofNNReal","decl":"@[measurability]\ntheorem measurable_coe_nnreal_ennreal : Measurable ((↑) : ℝ≥0 → ℝ≥0∞) :=\n  ENNReal.continuous_coe.measurable\n\n"}
{"name":"Measurable.coe_nnreal_ennreal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : α → NNReal\nhf : Measurable f\n⊢ Measurable fun x => ↑(f x)","decl":"@[measurability, fun_prop]\ntheorem Measurable.coe_nnreal_ennreal {f : α → ℝ≥0} (hf : Measurable f) :\n    Measurable fun x => (f x : ℝ≥0∞) :=\n  ENNReal.continuous_coe.measurable.comp hf\n\n"}
{"name":"AEMeasurable.coe_nnreal_ennreal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : α → NNReal\nμ : MeasureTheory.Measure α\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => ↑(f x)) μ","decl":"@[measurability, fun_prop]\ntheorem AEMeasurable.coe_nnreal_ennreal {f : α → ℝ≥0} {μ : Measure α} (hf : AEMeasurable f μ) :\n    AEMeasurable (fun x => (f x : ℝ≥0∞)) μ :=\n  ENNReal.continuous_coe.measurable.comp_aemeasurable hf\n\n"}
{"name":"Measurable.ennreal_ofReal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : α → Real\nhf : Measurable f\n⊢ Measurable fun x => ENNReal.ofReal (f x)","decl":"@[measurability, fun_prop]\ntheorem Measurable.ennreal_ofReal {f : α → ℝ} (hf : Measurable f) :\n    Measurable fun x => ENNReal.ofReal (f x) :=\n  ENNReal.continuous_ofReal.measurable.comp hf\n\n"}
{"name":"AEMeasurable.ennreal_ofReal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : α → Real\nμ : MeasureTheory.Measure α\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => ENNReal.ofReal (f x)) μ","decl":"@[measurability, fun_prop]\nlemma AEMeasurable.ennreal_ofReal {f : α → ℝ} {μ : Measure α} (hf : AEMeasurable f μ) :\n    AEMeasurable (fun x ↦ ENNReal.ofReal (f x)) μ :=\n  ENNReal.continuous_ofReal.measurable.comp_aemeasurable hf\n\n"}
{"name":"measurable_coe_nnreal_real_iff","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : α → NNReal\n⊢ Iff (Measurable fun x => ↑(f x)) (Measurable f)","decl":"@[simp, norm_cast]\ntheorem measurable_coe_nnreal_real_iff {f : α → ℝ≥0} :\n    Measurable (fun x => f x : α → ℝ) ↔ Measurable f :=\n  ⟨fun h => by simpa only [Real.toNNReal_coe] using h.real_toNNReal, Measurable.coe_nnreal_real⟩\n\n"}
{"name":"aemeasurable_coe_nnreal_real_iff","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : α → NNReal\nμ : MeasureTheory.Measure α\n⊢ Iff (AEMeasurable (fun x => ↑(f x)) μ) (AEMeasurable f μ)","decl":"@[simp, norm_cast]\ntheorem aemeasurable_coe_nnreal_real_iff {f : α → ℝ≥0} {μ : Measure α} :\n    AEMeasurable (fun x => f x : α → ℝ) μ ↔ AEMeasurable f μ :=\n  ⟨fun h ↦ by simpa only [Real.toNNReal_coe] using h.real_toNNReal, AEMeasurable.coe_nnreal_real⟩\n\n"}
{"name":"ENNReal.measurable_of_measurable_nnreal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : ENNReal → α\nh : Measurable fun p => f ↑p\n⊢ Measurable f","decl":"theorem measurable_of_measurable_nnreal {f : ℝ≥0∞ → α} (h : Measurable fun p : ℝ≥0 => f p) :\n    Measurable f :=\n  measurable_of_measurable_on_compl_singleton ∞\n    (MeasurableEquiv.ennrealEquivNNReal.symm.measurable_comp_iff.1 h)\n\n"}
{"name":"ENNReal.measurable_of_measurable_nnreal_prod","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"β : Type u_2\nγ : Type u_3\nx✝¹ : MeasurableSpace β\nx✝ : MeasurableSpace γ\nf : Prod ENNReal β → γ\nH₁ : Measurable fun p => f { fst := ↑p.1, snd := p.2 }\nH₂ : Measurable fun x => f { fst := Top.top, snd := x }\n⊢ Measurable f","decl":"theorem measurable_of_measurable_nnreal_prod {_ : MeasurableSpace β} {_ : MeasurableSpace γ}\n    {f : ℝ≥0∞ × β → γ} (H₁ : Measurable fun p : ℝ≥0 × β => f (p.1, p.2))\n    (H₂ : Measurable fun x => f (∞, x)) : Measurable f :=\n  let e : ℝ≥0∞ × β ≃ᵐ (ℝ≥0 × β) ⊕ (Unit × β) :=\n    (ennrealEquivSum.prodCongr (MeasurableEquiv.refl β)).trans\n      (MeasurableEquiv.sumProdDistrib _ _ _)\n  e.symm.measurable_comp_iff.1 <| measurable_sum H₁ (H₂.comp measurable_id.snd)\n\n"}
{"name":"ENNReal.measurable_of_measurable_nnreal_nnreal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"β : Type u_2\nx✝ : MeasurableSpace β\nf : Prod ENNReal ENNReal → β\nh₁ : Measurable fun p => f { fst := ↑p.1, snd := ↑p.2 }\nh₂ : Measurable fun r => f { fst := Top.top, snd := ↑r }\nh₃ : Measurable fun r => f { fst := ↑r, snd := Top.top }\n⊢ Measurable f","decl":"theorem measurable_of_measurable_nnreal_nnreal {_ : MeasurableSpace β} {f : ℝ≥0∞ × ℝ≥0∞ → β}\n    (h₁ : Measurable fun p : ℝ≥0 × ℝ≥0 => f (p.1, p.2)) (h₂ : Measurable fun r : ℝ≥0 => f (∞, r))\n    (h₃ : Measurable fun r : ℝ≥0 => f (r, ∞)) : Measurable f :=\n  measurable_of_measurable_nnreal_prod\n    (measurable_swap_iff.1 <| measurable_of_measurable_nnreal_prod (h₁.comp measurable_swap) h₃)\n    (measurable_of_measurable_nnreal h₂)\n\n"}
{"name":"ENNReal.measurable_ofReal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ Measurable ENNReal.ofReal","decl":"@[measurability]\ntheorem measurable_ofReal : Measurable ENNReal.ofReal :=\n  ENNReal.continuous_ofReal.measurable\n\n"}
{"name":"ENNReal.measurable_toReal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ Measurable ENNReal.toReal","decl":"@[measurability]\ntheorem measurable_toReal : Measurable ENNReal.toReal :=\n  ENNReal.measurable_of_measurable_nnreal measurable_coe_nnreal_real\n\n"}
{"name":"ENNReal.measurable_toNNReal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ Measurable ENNReal.toNNReal","decl":"@[measurability]\ntheorem measurable_toNNReal : Measurable ENNReal.toNNReal :=\n  ENNReal.measurable_of_measurable_nnreal measurable_id\n\n"}
{"name":"ENNReal.instMeasurableMul₂","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ MeasurableMul₂ ENNReal","decl":"instance instMeasurableMul₂ : MeasurableMul₂ ℝ≥0∞ := by\n  refine ⟨measurable_of_measurable_nnreal_nnreal ?_ ?_ ?_⟩\n  · simp only [← ENNReal.coe_mul, measurable_mul.coe_nnreal_ennreal]\n  · simp only [ENNReal.top_mul', ENNReal.coe_eq_zero]\n    exact measurable_const.piecewise (measurableSet_singleton _) measurable_const\n  · simp only [ENNReal.mul_top', ENNReal.coe_eq_zero]\n    exact measurable_const.piecewise (measurableSet_singleton _) measurable_const\n\n"}
{"name":"ENNReal.instMeasurableSub₂","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ MeasurableSub₂ ENNReal","decl":"instance instMeasurableSub₂ : MeasurableSub₂ ℝ≥0∞ :=\n  ⟨by\n    apply measurable_of_measurable_nnreal_nnreal <;>\n      simp [← WithTop.coe_sub, tsub_eq_zero_of_le];\n        exact continuous_sub.measurable.coe_nnreal_ennreal⟩\n\n"}
{"name":"ENNReal.instMeasurableInv","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ MeasurableInv ENNReal","decl":"instance instMeasurableInv : MeasurableInv ℝ≥0∞ :=\n  ⟨continuous_inv.measurable⟩\n\n"}
{"name":"ENNReal.instMeasurableSMulNNReal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ MeasurableSMul NNReal ENNReal","decl":"instance : MeasurableSMul ℝ≥0 ℝ≥0∞ where\n  measurable_const_smul := by\n    simp_rw [ENNReal.smul_def]\n    exact fun _ ↦ MeasurableSMul.measurable_const_smul _\n  measurable_smul_const := fun x ↦ by\n    simp_rw [ENNReal.smul_def]\n    exact measurable_coe_nnreal_ennreal.mul_const _\n\n"}
{"name":"ENNReal.measurable_of_tendsto'","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nι : Type u_5\nf : ι → α → ENNReal\ng : α → ENNReal\nu : Filter ι\ninst✝¹ : u.NeBot\ninst✝ : u.IsCountablyGenerated\nhf : ∀ (i : ι), Measurable (f i)\nlim : Filter.Tendsto f u (nhds g)\n⊢ Measurable g","decl":"/-- A limit (over a general filter) of measurable `ℝ≥0∞` valued functions is measurable. -/\ntheorem measurable_of_tendsto' {ι : Type*} {f : ι → α → ℝ≥0∞} {g : α → ℝ≥0∞} (u : Filter ι)\n    [NeBot u] [IsCountablyGenerated u] (hf : ∀ i, Measurable (f i)) (lim : Tendsto f u (𝓝 g)) :\n    Measurable g := by\n  rcases u.exists_seq_tendsto with ⟨x, hx⟩\n  rw [tendsto_pi_nhds] at lim\n  have : (fun y => liminf (fun n => (f (x n) y : ℝ≥0∞)) atTop) = g := by\n    ext1 y\n    exact ((lim y).comp hx).liminf_eq\n  rw [← this]\n  show Measurable fun y => liminf (fun n => (f (x n) y : ℝ≥0∞)) atTop\n  exact .liminf fun n => hf (x n)\n\n"}
{"name":"ENNReal.measurable_of_tendsto","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : Nat → α → ENNReal\ng : α → ENNReal\nhf : ∀ (i : Nat), Measurable (f i)\nlim : Filter.Tendsto f Filter.atTop (nhds g)\n⊢ Measurable g","decl":"/-- A sequential limit of measurable `ℝ≥0∞` valued functions is measurable. -/\ntheorem measurable_of_tendsto {f : ℕ → α → ℝ≥0∞} {g : α → ℝ≥0∞} (hf : ∀ i, Measurable (f i))\n    (lim : Tendsto f atTop (𝓝 g)) : Measurable g :=\n  measurable_of_tendsto' atTop hf lim\n\n"}
{"name":"ENNReal.aemeasurable_of_tendsto'","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nι : Type u_5\nf : ι → α → ENNReal\ng : α → ENNReal\nμ : MeasureTheory.Measure α\nu : Filter ι\ninst✝¹ : u.NeBot\ninst✝ : u.IsCountablyGenerated\nhf : ∀ (i : ι), AEMeasurable (f i) μ\nhlim : Filter.Eventually (fun a => Filter.Tendsto (fun i => f i a) u (nhds (g a))) (MeasureTheory.ae μ)\n⊢ AEMeasurable g μ","decl":"/-- A limit (over a general filter) of a.e.-measurable `ℝ≥0∞` valued functions is\na.e.-measurable. -/\nlemma aemeasurable_of_tendsto' {ι : Type*} {f : ι → α → ℝ≥0∞} {g : α → ℝ≥0∞}\n    {μ : Measure α} (u : Filter ι) [NeBot u] [IsCountablyGenerated u]\n    (hf : ∀ i, AEMeasurable (f i) μ) (hlim : ∀ᵐ a ∂μ, Tendsto (fun i ↦ f i a) u (𝓝 (g a))) :\n    AEMeasurable g μ := by\n  rcases u.exists_seq_tendsto with ⟨v, hv⟩\n  have h'f : ∀ n, AEMeasurable (f (v n)) μ := fun n ↦ hf (v n)\n  set p : α → (ℕ → ℝ≥0∞) → Prop := fun x f' ↦ Tendsto f' atTop (𝓝 (g x))\n  have hp : ∀ᵐ x ∂μ, p x fun n ↦ f (v n) x := by\n    filter_upwards [hlim] with x hx using hx.comp hv\n  classical\n  set aeSeqLim := fun x ↦ ite (x ∈ aeSeqSet h'f p) (g x) (⟨f (v 0) x⟩ : Nonempty ℝ≥0∞).some\n  refine ⟨aeSeqLim, measurable_of_tendsto' atTop (aeSeq.measurable h'f p)\n    (tendsto_pi_nhds.mpr fun x ↦ ?_), ?_⟩\n  · unfold aeSeqLim\n    simp_rw [aeSeq]\n    split_ifs with hx\n    · simp_rw [aeSeq.mk_eq_fun_of_mem_aeSeqSet h'f hx]\n      exact aeSeq.fun_prop_of_mem_aeSeqSet h'f hx\n    · exact tendsto_const_nhds\n  · exact (ite_ae_eq_of_measure_compl_zero g (fun x ↦ (⟨f (v 0) x⟩ : Nonempty ℝ≥0∞).some)\n      (aeSeqSet h'f p) (aeSeq.measure_compl_aeSeqSet_eq_zero h'f hp)).symm\n\n"}
{"name":"ENNReal.aemeasurable_of_tendsto","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : Nat → α → ENNReal\ng : α → ENNReal\nμ : MeasureTheory.Measure α\nhf : ∀ (i : Nat), AEMeasurable (f i) μ\nhlim : Filter.Eventually (fun a => Filter.Tendsto (fun i => f i a) Filter.atTop (nhds (g a))) (MeasureTheory.ae μ)\n⊢ AEMeasurable g μ","decl":"/-- A limit of a.e.-measurable `ℝ≥0∞` valued functions is a.e.-measurable. -/\nlemma aemeasurable_of_tendsto {f : ℕ → α → ℝ≥0∞} {g : α → ℝ≥0∞} {μ : Measure α}\n    (hf : ∀ i, AEMeasurable (f i) μ) (hlim : ∀ᵐ a ∂μ, Tendsto (fun i ↦ f i a) atTop (𝓝 (g a))) :\n    AEMeasurable g μ :=\n  aemeasurable_of_tendsto' atTop hf hlim\n\n"}
{"name":"Measurable.ennreal_toNNReal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : α → ENNReal\nhf : Measurable f\n⊢ Measurable fun x => (f x).toNNReal","decl":"@[measurability, fun_prop]\ntheorem Measurable.ennreal_toNNReal {f : α → ℝ≥0∞} (hf : Measurable f) :\n    Measurable fun x => (f x).toNNReal :=\n  ENNReal.measurable_toNNReal.comp hf\n\n"}
{"name":"AEMeasurable.ennreal_toNNReal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : α → ENNReal\nμ : MeasureTheory.Measure α\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => (f x).toNNReal) μ","decl":"@[measurability, fun_prop]\ntheorem AEMeasurable.ennreal_toNNReal {f : α → ℝ≥0∞} {μ : Measure α} (hf : AEMeasurable f μ) :\n    AEMeasurable (fun x => (f x).toNNReal) μ :=\n  ENNReal.measurable_toNNReal.comp_aemeasurable hf\n\n"}
{"name":"measurable_coe_nnreal_ennreal_iff","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : α → NNReal\n⊢ Iff (Measurable fun x => ↑(f x)) (Measurable f)","decl":"@[simp, norm_cast]\ntheorem measurable_coe_nnreal_ennreal_iff {f : α → ℝ≥0} :\n    (Measurable fun x => (f x : ℝ≥0∞)) ↔ Measurable f :=\n  ⟨fun h => h.ennreal_toNNReal, fun h => h.coe_nnreal_ennreal⟩\n\n"}
{"name":"aemeasurable_coe_nnreal_ennreal_iff","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : α → NNReal\nμ : MeasureTheory.Measure α\n⊢ Iff (AEMeasurable (fun x => ↑(f x)) μ) (AEMeasurable f μ)","decl":"@[simp, norm_cast]\ntheorem aemeasurable_coe_nnreal_ennreal_iff {f : α → ℝ≥0} {μ : Measure α} :\n    AEMeasurable (fun x => (f x : ℝ≥0∞)) μ ↔ AEMeasurable f μ :=\n  ⟨fun h => h.ennreal_toNNReal, fun h => h.coe_nnreal_ennreal⟩\n\n"}
{"name":"Measurable.ennreal_toReal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : α → ENNReal\nhf : Measurable f\n⊢ Measurable fun x => (f x).toReal","decl":"@[measurability, fun_prop]\ntheorem Measurable.ennreal_toReal {f : α → ℝ≥0∞} (hf : Measurable f) :\n    Measurable fun x => ENNReal.toReal (f x) :=\n  ENNReal.measurable_toReal.comp hf\n\n"}
{"name":"AEMeasurable.ennreal_toReal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : α → ENNReal\nμ : MeasureTheory.Measure α\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => (f x).toReal) μ","decl":"@[measurability, fun_prop]\ntheorem AEMeasurable.ennreal_toReal {f : α → ℝ≥0∞} {μ : Measure α} (hf : AEMeasurable f μ) :\n    AEMeasurable (fun x => ENNReal.toReal (f x)) μ :=\n  ENNReal.measurable_toReal.comp_aemeasurable hf\n\n"}
{"name":"Measurable.ennreal_tsum","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nι : Type u_5\ninst✝ : Countable ι\nf : ι → α → ENNReal\nh : ∀ (i : ι), Measurable (f i)\n⊢ Measurable fun x => tsum fun i => f i x","decl":"/-- note: `ℝ≥0∞` can probably be generalized in a future version of this lemma. -/\n@[measurability, fun_prop]\ntheorem Measurable.ennreal_tsum {ι} [Countable ι] {f : ι → α → ℝ≥0∞} (h : ∀ i, Measurable (f i)) :\n    Measurable fun x => ∑' i, f i x := by\n  simp_rw [ENNReal.tsum_eq_iSup_sum]\n  exact .iSup fun s ↦ s.measurable_sum fun i _ => h i\n\n"}
{"name":"Measurable.ennreal_tsum'","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nι : Type u_5\ninst✝ : Countable ι\nf : ι → α → ENNReal\nh : ∀ (i : ι), Measurable (f i)\n⊢ Measurable (tsum fun i => f i)","decl":"@[measurability, fun_prop]\ntheorem Measurable.ennreal_tsum' {ι} [Countable ι] {f : ι → α → ℝ≥0∞} (h : ∀ i, Measurable (f i)) :\n    Measurable (∑' i, f i) := by\n  convert Measurable.ennreal_tsum h with x\n  exact tsum_apply (Pi.summable.2 fun _ => ENNReal.summable)\n\n"}
{"name":"Measurable.nnreal_tsum","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nι : Type u_5\ninst✝ : Countable ι\nf : ι → α → NNReal\nh : ∀ (i : ι), Measurable (f i)\n⊢ Measurable fun x => tsum fun i => f i x","decl":"@[measurability, fun_prop]\ntheorem Measurable.nnreal_tsum {ι} [Countable ι] {f : ι → α → ℝ≥0} (h : ∀ i, Measurable (f i)) :\n    Measurable fun x => ∑' i, f i x := by\n  simp_rw [NNReal.tsum_eq_toNNReal_tsum]\n  exact (Measurable.ennreal_tsum fun i => (h i).coe_nnreal_ennreal).ennreal_toNNReal\n\n"}
{"name":"AEMeasurable.ennreal_tsum","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nι : Type u_5\ninst✝ : Countable ι\nf : ι → α → ENNReal\nμ : MeasureTheory.Measure α\nh : ∀ (i : ι), AEMeasurable (f i) μ\n⊢ AEMeasurable (fun x => tsum fun i => f i x) μ","decl":"@[measurability, fun_prop]\ntheorem AEMeasurable.ennreal_tsum {ι} [Countable ι] {f : ι → α → ℝ≥0∞} {μ : Measure α}\n    (h : ∀ i, AEMeasurable (f i) μ) : AEMeasurable (fun x => ∑' i, f i x) μ := by\n  simp_rw [ENNReal.tsum_eq_iSup_sum]\n  exact .iSup fun s ↦ Finset.aemeasurable_sum s fun i _ => h i\n\n"}
{"name":"AEMeasurable.nnreal_tsum","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_5\nx✝ : MeasurableSpace α\nι : Type u_6\ninst✝ : Countable ι\nf : ι → α → NNReal\nμ : MeasureTheory.Measure α\nh : ∀ (i : ι), AEMeasurable (f i) μ\n⊢ AEMeasurable (fun x => tsum fun i => f i x) μ","decl":"@[measurability, fun_prop]\ntheorem AEMeasurable.nnreal_tsum {α : Type*} {_ : MeasurableSpace α} {ι : Type*} [Countable ι]\n    {f : ι → α → NNReal} {μ : Measure α} (h : ∀ i : ι, AEMeasurable (f i) μ) :\n    AEMeasurable (fun x : α => ∑' i : ι, f i x) μ := by\n  simp_rw [NNReal.tsum_eq_toNNReal_tsum]\n  exact (AEMeasurable.ennreal_tsum fun i => (h i).coe_nnreal_ennreal).ennreal_toNNReal\n\n"}
{"name":"measurable_coe_real_ereal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ Measurable Real.toEReal","decl":"@[measurability, fun_prop]\ntheorem measurable_coe_real_ereal : Measurable ((↑) : ℝ → EReal) :=\n  continuous_coe_real_ereal.measurable\n\n"}
{"name":"Measurable.coe_real_ereal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : α → Real\nhf : Measurable f\n⊢ Measurable fun x => ↑(f x)","decl":"@[measurability]\ntheorem Measurable.coe_real_ereal {f : α → ℝ} (hf : Measurable f) :\n    Measurable fun x => (f x : EReal) :=\n  measurable_coe_real_ereal.comp hf\n\n"}
{"name":"AEMeasurable.coe_real_ereal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : α → Real\nμ : MeasureTheory.Measure α\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => ↑(f x)) μ","decl":"@[measurability]\ntheorem AEMeasurable.coe_real_ereal {f : α → ℝ} {μ : Measure α} (hf : AEMeasurable f μ) :\n    AEMeasurable (fun x => (f x : EReal)) μ :=\n  measurable_coe_real_ereal.comp_aemeasurable hf\n\n"}
{"name":"EReal.measurable_of_measurable_real","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : EReal → α\nh : Measurable fun p => f ↑p\n⊢ Measurable f","decl":"theorem EReal.measurable_of_measurable_real {f : EReal → α} (h : Measurable fun p : ℝ => f p) :\n    Measurable f :=\n  measurable_of_measurable_on_compl_finite {⊥, ⊤} (by simp)\n    (MeasurableEquiv.erealEquivReal.symm.measurable_comp_iff.1 h)\n\n"}
{"name":"measurable_ereal_toReal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ Measurable EReal.toReal","decl":"@[measurability]\ntheorem measurable_ereal_toReal : Measurable EReal.toReal :=\n  EReal.measurable_of_measurable_real (by simpa using measurable_id)\n\n"}
{"name":"Measurable.ereal_toReal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : α → EReal\nhf : Measurable f\n⊢ Measurable fun x => (f x).toReal","decl":"@[measurability, fun_prop]\ntheorem Measurable.ereal_toReal {f : α → EReal} (hf : Measurable f) :\n    Measurable fun x => (f x).toReal :=\n  measurable_ereal_toReal.comp hf\n\n"}
{"name":"AEMeasurable.ereal_toReal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : α → EReal\nμ : MeasureTheory.Measure α\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => (f x).toReal) μ","decl":"@[measurability, fun_prop]\ntheorem AEMeasurable.ereal_toReal {f : α → EReal} {μ : Measure α} (hf : AEMeasurable f μ) :\n    AEMeasurable (fun x => (f x).toReal) μ :=\n  measurable_ereal_toReal.comp_aemeasurable hf\n\n"}
{"name":"measurable_coe_ennreal_ereal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ Measurable ENNReal.toEReal","decl":"@[measurability]\ntheorem measurable_coe_ennreal_ereal : Measurable ((↑) : ℝ≥0∞ → EReal) :=\n  continuous_coe_ennreal_ereal.measurable\n\n"}
{"name":"Measurable.coe_ereal_ennreal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : α → ENNReal\nhf : Measurable f\n⊢ Measurable fun x => ↑(f x)","decl":"@[measurability, fun_prop]\ntheorem Measurable.coe_ereal_ennreal {f : α → ℝ≥0∞} (hf : Measurable f) :\n    Measurable fun x => (f x : EReal) :=\n  measurable_coe_ennreal_ereal.comp hf\n\n"}
{"name":"AEMeasurable.coe_ereal_ennreal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : α → ENNReal\nμ : MeasureTheory.Measure α\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => ↑(f x)) μ","decl":"@[measurability, fun_prop]\ntheorem AEMeasurable.coe_ereal_ennreal {f : α → ℝ≥0∞} {μ : Measure α} (hf : AEMeasurable f μ) :\n    AEMeasurable (fun x => (f x : EReal)) μ :=\n  measurable_coe_ennreal_ereal.comp_aemeasurable hf\n\n"}
{"name":"measurable_ereal_toENNReal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ Measurable EReal.toENNReal","decl":"@[measurability]\ntheorem measurable_ereal_toENNReal : Measurable EReal.toENNReal :=\n  EReal.measurable_of_measurable_real (by simpa using ENNReal.measurable_ofReal)\n\n"}
{"name":"Measurable.ereal_toENNReal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : α → EReal\nhf : Measurable f\n⊢ Measurable fun x => (f x).toENNReal","decl":"@[measurability, fun_prop]\ntheorem Measurable.ereal_toENNReal {f : α → EReal} (hf : Measurable f) :\n    Measurable fun x => (f x).toENNReal :=\n  measurable_ereal_toENNReal.comp hf\n\n"}
{"name":"AEMeasurable.ereal_toENNReal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : α → EReal\nμ : MeasureTheory.Measure α\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => (f x).toENNReal) μ","decl":"@[measurability, fun_prop]\ntheorem AEMeasurable.ereal_toENNReal {f : α → EReal} {μ : Measure α} (hf : AEMeasurable f μ) :\n    AEMeasurable (fun x => (f x).toENNReal) μ :=\n  measurable_ereal_toENNReal.comp_aemeasurable hf\n\n"}
{"name":"NNReal.instMeasurableSMul₂ENNReal","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ MeasurableSMul₂ NNReal ENNReal","decl":"instance : MeasurableSMul₂ ℝ≥0 ℝ≥0∞ where\n  measurable_smul := show Measurable fun r : ℝ≥0 × ℝ≥0∞ ↦ (r.1 : ℝ≥0) * r.2 by fun_prop\n\n"}
{"name":"NNReal.measurable_of_tendsto'","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nι : Type u_5\nf : ι → α → NNReal\ng : α → NNReal\nu : Filter ι\ninst✝¹ : u.NeBot\ninst✝ : u.IsCountablyGenerated\nhf : ∀ (i : ι), Measurable (f i)\nlim : Filter.Tendsto f u (nhds g)\n⊢ Measurable g","decl":"/-- A limit (over a general filter) of measurable `ℝ≥0` valued functions is measurable. -/\ntheorem measurable_of_tendsto' {ι} {f : ι → α → ℝ≥0} {g : α → ℝ≥0} (u : Filter ι) [NeBot u]\n    [IsCountablyGenerated u] (hf : ∀ i, Measurable (f i)) (lim : Tendsto f u (𝓝 g)) :\n    Measurable g := by\n  simp_rw [← measurable_coe_nnreal_ennreal_iff] at hf ⊢\n  refine ENNReal.measurable_of_tendsto' u hf ?_\n  rw [tendsto_pi_nhds] at lim ⊢\n  exact fun x => (ENNReal.continuous_coe.tendsto (g x)).comp (lim x)\n\n"}
{"name":"NNReal.measurable_of_tendsto","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : Nat → α → NNReal\ng : α → NNReal\nhf : ∀ (i : Nat), Measurable (f i)\nlim : Filter.Tendsto f Filter.atTop (nhds g)\n⊢ Measurable g","decl":"/-- A sequential limit of measurable `ℝ≥0` valued functions is measurable. -/\ntheorem measurable_of_tendsto {f : ℕ → α → ℝ≥0} {g : α → ℝ≥0} (hf : ∀ i, Measurable (f i))\n    (lim : Tendsto f atTop (𝓝 g)) : Measurable g :=\n  measurable_of_tendsto' atTop hf lim\n\n"}
{"name":"EReal.measurableEmbedding_coe","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ MeasurableEmbedding Real.toEReal","decl":"lemma measurableEmbedding_coe : MeasurableEmbedding Real.toEReal :=\n  isOpenEmbedding_coe.measurableEmbedding\n\n"}
{"name":"EReal.instMeasurableAdd₂","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ MeasurableAdd₂ EReal","decl":"instance : MeasurableAdd₂ EReal := ⟨EReal.lowerSemicontinuous_add.measurable⟩\n\n"}
{"name":"EReal.measurable_of_real_prod","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"β : Type u_6\nγ : Type u_7\nmβ : MeasurableSpace β\nmγ : MeasurableSpace γ\nf : Prod EReal β → γ\nh_real : Measurable fun p => f { fst := ↑p.1, snd := p.2 }\nh_bot : Measurable fun x => f { fst := Bot.bot, snd := x }\nh_top : Measurable fun x => f { fst := Top.top, snd := x }\n⊢ Measurable f","decl":"lemma measurable_of_real_prod {f : EReal × β → γ}\n    (h_real : Measurable fun p : ℝ × β ↦ f (p.1, p.2))\n    (h_bot : Measurable fun x ↦ f (⊥, x)) (h_top : Measurable fun x ↦ f (⊤, x)) : Measurable f :=\n  .of_union₃_range_cover (measurableEmbedding_prod_mk_left _) (measurableEmbedding_prod_mk_left _)\n    (measurableEmbedding_coe.prodMap .id) (by simp [-univ_subset_iff, subset_def, EReal.forall])\n    h_bot h_top h_real\n\n"}
{"name":"EReal.measurable_of_real_real","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"β : Type u_6\nmβ : MeasurableSpace β\nf : Prod EReal EReal → β\nh_real : Measurable fun p => f { fst := ↑p.1, snd := ↑p.2 }\nh_bot_left : Measurable fun r => f { fst := Bot.bot, snd := ↑r }\nh_top_left : Measurable fun r => f { fst := Top.top, snd := ↑r }\nh_bot_right : Measurable fun r => f { fst := ↑r, snd := Bot.bot }\nh_top_right : Measurable fun r => f { fst := ↑r, snd := Top.top }\n⊢ Measurable f","decl":"lemma measurable_of_real_real {f : EReal × EReal → β}\n    (h_real : Measurable fun p : ℝ × ℝ ↦ f (p.1, p.2))\n    (h_bot_left : Measurable fun r : ℝ ↦ f (⊥, r))\n    (h_top_left : Measurable fun r : ℝ ↦ f (⊤, r))\n    (h_bot_right : Measurable fun r : ℝ ↦ f (r, ⊥))\n    (h_top_right : Measurable fun r : ℝ ↦ f (r, ⊤)) :\n    Measurable f := by\n  refine measurable_of_real_prod ?_ ?_ ?_\n  · refine measurable_swap_iff.mp <| measurable_of_real_prod ?_ h_bot_right h_top_right\n    exact h_real.comp measurable_swap\n  · exact measurable_of_measurable_real h_bot_left\n  · exact measurable_of_measurable_real h_top_left\n\n"}
{"name":"EReal.instMeasurableMul₂","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"⊢ MeasurableMul₂ EReal","decl":"instance : MeasurableMul₂ EReal := by\n  refine ⟨measurable_of_real_real ?_ ?_ ?_ ?_ ?_⟩\n  · exact (measurable_fst.mul measurable_snd).coe_real_ereal\n  · exact (measurable_const_mul _).comp measurable_coe_real_ereal\n  · exact (measurable_const_mul _).comp measurable_coe_real_ereal\n  · simp_rw [mul_comm _ ⊥]\n    exact (measurable_const_mul _).comp measurable_coe_real_ereal\n  · simp_rw [mul_comm _ ⊤]\n    exact (measurable_const_mul _).comp measurable_coe_real_ereal\n\n"}
{"name":"exists_spanning_measurableSet_le","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nf : α → NNReal\nhf : Measurable f\nμ : MeasureTheory.Measure α\ninst✝ : MeasureTheory.SigmaFinite μ\n⊢ Exists fun s => And (∀ (n : Nat), And (MeasurableSet (s n)) (And (LT.lt (μ (s n)) Top.top) (∀ (x : α), Membership.mem (s n) x → LE.le (f x) ↑n))) (Eq (Set.iUnion fun i => s i) Set.univ)","decl":"/-- If a function `f : α → ℝ≥0` is measurable and the measure is σ-finite, then there exists\nspanning measurable sets with finite measure on which `f` is bounded.\nSee also `StronglyMeasurable.exists_spanning_measurableSet_norm_le` for functions into normed\ngroups. -/\ntheorem exists_spanning_measurableSet_le {f : α → ℝ≥0} (hf : Measurable f) (μ : Measure α)\n    [SigmaFinite μ] :\n    ∃ s : ℕ → Set α,\n      (∀ n, MeasurableSet (s n) ∧ μ (s n) < ∞ ∧ ∀ x ∈ s n, f x ≤ n) ∧\n      ⋃ i, s i = Set.univ := by\n  let sigma_finite_sets := spanningSets μ\n  let norm_sets := fun n : ℕ => { x | f x ≤ n }\n  have norm_sets_spanning : ⋃ n, norm_sets n = Set.univ := by\n    ext1 x\n    simp only [Set.mem_iUnion, Set.mem_setOf_eq, Set.mem_univ, iff_true]\n    exact exists_nat_ge (f x)\n  let sets n := sigma_finite_sets n ∩ norm_sets n\n  have h_meas : ∀ n, MeasurableSet (sets n) := by\n    refine fun n => MeasurableSet.inter ?_ ?_\n    · exact measurableSet_spanningSets μ n\n    · exact hf measurableSet_Iic\n  have h_finite : ∀ n, μ (sets n) < ∞ := by\n    refine fun n => (measure_mono Set.inter_subset_left).trans_lt ?_\n    exact measure_spanningSets_lt_top μ n\n  refine ⟨sets, fun n => ⟨h_meas n, h_finite n, ?_⟩, ?_⟩\n  · exact fun x hx => hx.2\n  · have :\n      ⋃ i, sigma_finite_sets i ∩ norm_sets i = (⋃ i, sigma_finite_sets i) ∩ ⋃ i, norm_sets i := by\n      refine Set.iUnion_inter_of_monotone (monotone_spanningSets μ) fun i j hij x => ?_\n      simp only [norm_sets, Set.mem_setOf_eq]\n      refine fun hif => hif.trans ?_\n      exact mod_cast hij\n    rw [this, norm_sets_spanning, iUnion_spanningSets μ, Set.inter_univ]\n\n"}
{"name":"tendsto_measure_Icc_nhdsWithin_right'","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"μ : MeasureTheory.Measure Real\ninst✝ : MeasureTheory.IsFiniteMeasureOnCompacts μ\nb : Real\n⊢ Filter.Tendsto (fun δ => μ (Set.Icc (HSub.hSub b δ) (HAdd.hAdd b δ))) (nhdsWithin 0 (Set.Ioi 0)) (nhds (μ (Singleton.singleton b)))","decl":"lemma tendsto_measure_Icc_nhdsWithin_right' (b : ℝ) :\n    Tendsto (fun δ ↦ μ (Icc (b - δ) (b + δ))) (𝓝[>] (0 : ℝ)) (𝓝 (μ {b})) := by\n  rw [Real.singleton_eq_inter_Icc]\n  apply tendsto_measure_biInter_gt (fun r hr ↦ nullMeasurableSet_Icc)\n  · intro r s _rpos hrs\n    exact Icc_subset_Icc (by linarith) (by linarith)\n  · exact ⟨1, zero_lt_one, isCompact_Icc.measure_ne_top⟩\n\n"}
{"name":"tendsto_measure_Icc_nhdsWithin_right","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"μ : MeasureTheory.Measure Real\ninst✝ : MeasureTheory.IsFiniteMeasureOnCompacts μ\nb : Real\n⊢ Filter.Tendsto (fun δ => μ (Set.Icc (HSub.hSub b δ) (HAdd.hAdd b δ))) (nhdsWithin 0 (Set.Ici 0)) (nhds (μ (Singleton.singleton b)))","decl":"lemma tendsto_measure_Icc_nhdsWithin_right (b : ℝ) :\n    Tendsto (fun δ ↦ μ (Icc (b - δ) (b + δ))) (𝓝[≥] (0 : ℝ)) (𝓝 (μ {b})) := by\n  simp only [← nhdsWithin_right_sup_nhds_singleton, nhdsWithin_singleton, tendsto_sup,\n    tendsto_measure_Icc_nhdsWithin_right' μ b, true_and, tendsto_pure_left]\n  intro s hs\n  simpa using mem_of_mem_nhds hs\n\n"}
{"name":"tendsto_measure_Icc","module":"Mathlib.MeasureTheory.Constructions.BorelSpace.Real","initialProofState":"μ : MeasureTheory.Measure Real\ninst✝¹ : MeasureTheory.IsFiniteMeasureOnCompacts μ\ninst✝ : MeasureTheory.NoAtoms μ\nb : Real\n⊢ Filter.Tendsto (fun δ => μ (Set.Icc (HSub.hSub b δ) (HAdd.hAdd b δ))) (nhds 0) (nhds 0)","decl":"lemma tendsto_measure_Icc [NoAtoms μ] (b : ℝ) :\n    Tendsto (fun δ ↦ μ (Icc (b - δ) (b + δ))) (𝓝 (0 : ℝ)) (𝓝 0) := by\n  rw [← nhdsLT_sup_nhdsGE, tendsto_sup]\n  constructor\n  · apply tendsto_const_nhds.congr'\n    filter_upwards [self_mem_nhdsWithin] with r (hr : r < 0)\n    rw [Icc_eq_empty (by linarith), measure_empty]\n  · simpa only [measure_singleton] using tendsto_measure_Icc_nhdsWithin_right μ b\n"}
