{"name":"PUnit.zero_eq","module":"Mathlib.Algebra.PUnitInstances.Algebra","initialProofState":"⊢ Eq 0 PUnit.unit","decl":"@[to_additive (attr := simp, nolint simpNF)]\ntheorem one_eq : (1 : PUnit) = unit :=\n  rfl\n\n-- note simp can prove this when the Boolean ring structure is introduced\n"}
{"name":"PUnit.one_eq","module":"Mathlib.Algebra.PUnitInstances.Algebra","initialProofState":"⊢ Eq 1 PUnit.unit","decl":"@[to_additive (attr := simp, nolint simpNF)]\ntheorem one_eq : (1 : PUnit) = unit :=\n  rfl\n\n-- note simp can prove this when the Boolean ring structure is introduced\n"}
{"name":"PUnit.add_eq","module":"Mathlib.Algebra.PUnitInstances.Algebra","initialProofState":"x y : PUnit.{1}\n⊢ Eq (HAdd.hAdd x y) PUnit.unit","decl":"@[to_additive]\ntheorem mul_eq {x y : PUnit} : x * y = unit :=\n  rfl\n\n"}
{"name":"PUnit.mul_eq","module":"Mathlib.Algebra.PUnitInstances.Algebra","initialProofState":"x y : PUnit.{1}\n⊢ Eq (HMul.hMul x y) PUnit.unit","decl":"@[to_additive]\ntheorem mul_eq {x y : PUnit} : x * y = unit :=\n  rfl\n\n"}
{"name":"PUnit.sub_eq","module":"Mathlib.Algebra.PUnitInstances.Algebra","initialProofState":"x y : PUnit.{1}\n⊢ Eq (HSub.hSub x y) PUnit.unit","decl":"@[to_additive (attr := simp)]\ntheorem div_eq {x y : PUnit} : x / y = unit :=\n  rfl\n\n"}
{"name":"PUnit.div_eq","module":"Mathlib.Algebra.PUnitInstances.Algebra","initialProofState":"x y : PUnit.{1}\n⊢ Eq (HDiv.hDiv x y) PUnit.unit","decl":"@[to_additive (attr := simp)]\ntheorem div_eq {x y : PUnit} : x / y = unit :=\n  rfl\n\n"}
{"name":"PUnit.inv_eq","module":"Mathlib.Algebra.PUnitInstances.Algebra","initialProofState":"x : PUnit.{1}\n⊢ Eq (Inv.inv x) PUnit.unit","decl":"@[to_additive (attr := simp)]\ntheorem inv_eq {x : PUnit} : x⁻¹ = unit :=\n  rfl\n\n"}
{"name":"PUnit.neg_eq","module":"Mathlib.Algebra.PUnitInstances.Algebra","initialProofState":"x : PUnit.{1}\n⊢ Eq (Neg.neg x) PUnit.unit","decl":"@[to_additive (attr := simp)]\ntheorem inv_eq {x : PUnit} : x⁻¹ = unit :=\n  rfl\n\n"}
