{"name":"Int.nnnorm_coe_units","module":"Mathlib.Analysis.NormedSpace.Int","initialProofState":"e : Units Int\n⊢ Eq (NNNorm.nnnorm ↑e) 1","decl":"theorem nnnorm_coe_units (e : ℤˣ) : ‖(e : ℤ)‖₊ = 1 := by\n  obtain rfl | rfl := units_eq_one_or e <;>\n    simp only [Units.coe_neg_one, Units.val_one, nnnorm_neg, nnnorm_one]\n\n"}
{"name":"Int.norm_coe_units","module":"Mathlib.Analysis.NormedSpace.Int","initialProofState":"e : Units Int\n⊢ Eq (Norm.norm ↑e) 1","decl":"theorem norm_coe_units (e : ℤˣ) : ‖(e : ℤ)‖ = 1 := by\n  rw [← coe_nnnorm, nnnorm_coe_units, NNReal.coe_one]\n\n"}
{"name":"Int.nnnorm_natCast","module":"Mathlib.Analysis.NormedSpace.Int","initialProofState":"n : Nat\n⊢ Eq (NNNorm.nnnorm ↑n) ↑n","decl":"@[simp]\ntheorem nnnorm_natCast (n : ℕ) : ‖(n : ℤ)‖₊ = n :=\n  Real.nnnorm_natCast _\n\n"}
{"name":"Int.enorm_natCast","module":"Mathlib.Analysis.NormedSpace.Int","initialProofState":"n : Nat\n⊢ Eq (ENorm.enorm ↑n) ↑n","decl":"@[simp] lemma enorm_natCast (n : ℕ) : ‖(n : ℤ)‖ₑ = n := Real.enorm_natCast _\n\n"}
{"name":"Int.toNat_add_toNat_neg_eq_nnnorm","module":"Mathlib.Analysis.NormedSpace.Int","initialProofState":"n : Int\n⊢ Eq (HAdd.hAdd ↑n.toNat ↑(Neg.neg n).toNat) (NNNorm.nnnorm n)","decl":"@[simp]\ntheorem toNat_add_toNat_neg_eq_nnnorm (n : ℤ) : ↑n.toNat + ↑(-n).toNat = ‖n‖₊ := by\n  rw [← Nat.cast_add, toNat_add_toNat_neg_eq_natAbs, NNReal.natCast_natAbs]\n\n"}
{"name":"Int.toNat_add_toNat_neg_eq_norm","module":"Mathlib.Analysis.NormedSpace.Int","initialProofState":"n : Int\n⊢ Eq (HAdd.hAdd ↑n.toNat ↑(Neg.neg n).toNat) (Norm.norm n)","decl":"@[simp]\ntheorem toNat_add_toNat_neg_eq_norm (n : ℤ) : ↑n.toNat + ↑(-n).toNat = ‖n‖ := by\n  simpa only [NNReal.coe_natCast, NNReal.coe_add] using\n    congrArg NNReal.toReal (toNat_add_toNat_neg_eq_nnnorm n)\n\n"}
