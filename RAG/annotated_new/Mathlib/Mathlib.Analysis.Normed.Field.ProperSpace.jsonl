{"name":"ProperSpace.of_nontriviallyNormedField_of_weaklyLocallyCompactSpace","module":"Mathlib.Analysis.Normed.Field.ProperSpace","initialProofState":"𝕜 : Type u_1\ninst✝¹ : NontriviallyNormedField 𝕜\ninst✝ : WeaklyLocallyCompactSpace 𝕜\n⊢ ProperSpace 𝕜","decl":"/-- A weakly locally compact normed field is proper.\nThis is a specialization of `ProperSpace.of_locallyCompactSpace`\nwhich holds for `NormedSpace`s but requires more imports. -/\nlemma ProperSpace.of_nontriviallyNormedField_of_weaklyLocallyCompactSpace\n    (𝕜 : Type*) [NontriviallyNormedField 𝕜] [WeaklyLocallyCompactSpace 𝕜] :\n    ProperSpace 𝕜 := by\n  rcases exists_isCompact_closedBall (0 : 𝕜) with ⟨r, rpos, hr⟩\n  rcases NormedField.exists_one_lt_norm 𝕜 with ⟨c, hc⟩\n  have hC n : IsCompact (closedBall (0 : 𝕜) (‖c‖^n * r)) := by\n    have : c ^ n ≠ 0 := pow_ne_zero _ <| fun h ↦ by simp [h, zero_le_one.not_lt] at hc\n    convert hr.smul (c ^ n)\n    ext\n    simp only [mem_closedBall, dist_zero_right, Set.mem_smul_set_iff_inv_smul_mem₀ this,\n      smul_eq_mul, norm_mul, norm_inv, norm_pow,\n      inv_mul_le_iff₀ (by simpa only [norm_pow] using norm_pos_iff.mpr this)]\n  have hTop : Tendsto (fun n ↦ ‖c‖^n * r) atTop atTop :=\n    Tendsto.atTop_mul_const rpos (tendsto_pow_atTop_atTop_of_one_lt hc)\n  exact .of_seq_closedBall hTop (Eventually.of_forall hC)\n"}
