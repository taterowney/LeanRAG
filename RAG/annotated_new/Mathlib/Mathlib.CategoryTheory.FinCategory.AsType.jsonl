{"name":"CategoryTheory.FinCategory.categoryAsType_id","module":"Mathlib.CategoryTheory.FinCategory.AsType","initialProofState":"α : Type u_1\ninst✝² : Fintype α\ninst✝¹ : CategoryTheory.SmallCategory α\ninst✝ : CategoryTheory.FinCategory α\nx✝ : CategoryTheory.FinCategory.AsType α\n⊢ Eq (CategoryTheory.CategoryStruct.id x✝) ((Fintype.equivFin (Quiver.Hom x✝ x✝)) (CategoryTheory.CategoryStruct.id x✝))","decl":"@[simps (config := .lemmasOnly) id comp]\nnoncomputable instance categoryAsType : SmallCategory (AsType α) where\n  Hom i j := Fin (Fintype.card (@Quiver.Hom (ObjAsType α) _ i j))\n  id _ := Fintype.equivFin _ (𝟙 _)\n  comp f g := Fintype.equivFin _ ((Fintype.equivFin _).symm f ≫ (Fintype.equivFin _).symm g)\n\n"}
{"name":"CategoryTheory.FinCategory.categoryAsType_comp","module":"Mathlib.CategoryTheory.FinCategory.AsType","initialProofState":"α : Type u_1\ninst✝² : Fintype α\ninst✝¹ : CategoryTheory.SmallCategory α\ninst✝ : CategoryTheory.FinCategory α\nX✝ Y✝ Z✝ : CategoryTheory.FinCategory.AsType α\nf : Quiver.Hom X✝ Y✝\ng : Quiver.Hom Y✝ Z✝\n⊢ Eq (CategoryTheory.CategoryStruct.comp f g) ((Fintype.equivFin (Quiver.Hom X✝ Z✝)) (CategoryTheory.CategoryStruct.comp ((Fintype.equivFin (Quiver.Hom X✝ Y✝)).symm f) ((Fintype.equivFin (Quiver.Hom Y✝ Z✝)).symm g)))","decl":"@[simps (config := .lemmasOnly) id comp]\nnoncomputable instance categoryAsType : SmallCategory (AsType α) where\n  Hom i j := Fin (Fintype.card (@Quiver.Hom (ObjAsType α) _ i j))\n  id _ := Fintype.equivFin _ (𝟙 _)\n  comp f g := Fintype.equivFin _ ((Fintype.equivFin _).symm f ≫ (Fintype.equivFin _).symm g)\n\n"}
{"name":"CategoryTheory.FinCategory.asTypeToObjAsType_map","module":"Mathlib.CategoryTheory.FinCategory.AsType","initialProofState":"α : Type u_1\ninst✝² : Fintype α\ninst✝¹ : CategoryTheory.SmallCategory α\ninst✝ : CategoryTheory.FinCategory α\nx✝¹ x✝ : CategoryTheory.FinCategory.AsType α\na : Fin (Fintype.card (Quiver.Hom x✝¹ x✝))\n⊢ Eq ((CategoryTheory.FinCategory.asTypeToObjAsType α).map a) ((Fintype.equivFin (Quiver.Hom x✝¹ x✝)).symm a)","decl":"/-- The \"identity\" functor from `AsType α` to `ObjAsType α`. -/\n@[simps]\nnoncomputable def asTypeToObjAsType : AsType α ⥤ ObjAsType α where\n  obj := id\n  map {_ _} := (Fintype.equivFin _).symm\n\n"}
{"name":"CategoryTheory.FinCategory.asTypeToObjAsType_obj","module":"Mathlib.CategoryTheory.FinCategory.AsType","initialProofState":"α : Type u_1\ninst✝² : Fintype α\ninst✝¹ : CategoryTheory.SmallCategory α\ninst✝ : CategoryTheory.FinCategory α\na : CategoryTheory.FinCategory.AsType α\n⊢ Eq ((CategoryTheory.FinCategory.asTypeToObjAsType α).obj a) (id a)","decl":"/-- The \"identity\" functor from `AsType α` to `ObjAsType α`. -/\n@[simps]\nnoncomputable def asTypeToObjAsType : AsType α ⥤ ObjAsType α where\n  obj := id\n  map {_ _} := (Fintype.equivFin _).symm\n\n"}
{"name":"CategoryTheory.FinCategory.objAsTypeToAsType_obj","module":"Mathlib.CategoryTheory.FinCategory.AsType","initialProofState":"α : Type u_1\ninst✝² : Fintype α\ninst✝¹ : CategoryTheory.SmallCategory α\ninst✝ : CategoryTheory.FinCategory α\na : CategoryTheory.FinCategory.ObjAsType α\n⊢ Eq ((CategoryTheory.FinCategory.objAsTypeToAsType α).obj a) (id a)","decl":"/-- The \"identity\" functor from `ObjAsType α` to `AsType α`. -/\n@[simps]\nnoncomputable def objAsTypeToAsType : ObjAsType α ⥤ AsType α where\n  obj := id\n  map {_ _} := Fintype.equivFin _\n\n"}
{"name":"CategoryTheory.FinCategory.objAsTypeToAsType_map","module":"Mathlib.CategoryTheory.FinCategory.AsType","initialProofState":"α : Type u_1\ninst✝² : Fintype α\ninst✝¹ : CategoryTheory.SmallCategory α\ninst✝ : CategoryTheory.FinCategory α\nx✝¹ x✝ : CategoryTheory.FinCategory.ObjAsType α\na : Quiver.Hom x✝¹ x✝\n⊢ Eq ((CategoryTheory.FinCategory.objAsTypeToAsType α).map a) ((Fintype.equivFin (Quiver.Hom x✝¹ x✝)) a)","decl":"/-- The \"identity\" functor from `ObjAsType α` to `AsType α`. -/\n@[simps]\nnoncomputable def objAsTypeToAsType : ObjAsType α ⥤ AsType α where\n  obj := id\n  map {_ _} := Fintype.equivFin _\n\n"}
