{"name":"CochainComplex.homOfDegreewiseSplit_f","module":"Mathlib.Algebra.Homology.HomotopyCategory.DegreewiseSplit","initialProofState":"C : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_2, u_1} C\ninst✝ : CategoryTheory.Preadditive C\nS : CategoryTheory.ShortComplex (CochainComplex C Int)\nσ : (n : Int) → (S.map (HomologicalComplex.eval C (ComplexShape.up Int) n)).Splitting\nn : Int\n⊢ Eq ((CochainComplex.homOfDegreewiseSplit S σ).f n) ((↑(CochainComplex.cocycleOfDegreewiseSplit S σ)).v n (HAdd.hAdd n 1) ⋯)","decl":"@[simp]\nlemma homOfDegreewiseSplit_f (n : ℤ) :\n    (homOfDegreewiseSplit S σ).f n =\n      (cocycleOfDegreewiseSplit S σ).1.v n (n + 1) rfl := by\n  simp [homOfDegreewiseSplit, Cochain.rightShift_v _ _ _ _ _ _ _ _ rfl]\n\n"}
{"name":"CochainComplex.triangleOfDegreewiseSplit_mor₂","module":"Mathlib.Algebra.Homology.HomotopyCategory.DegreewiseSplit","initialProofState":"C : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_2, u_1} C\ninst✝ : CategoryTheory.Preadditive C\nS : CategoryTheory.ShortComplex (CochainComplex C Int)\nσ : (n : Int) → (S.map (HomologicalComplex.eval C (ComplexShape.up Int) n)).Splitting\n⊢ Eq (CochainComplex.triangleOfDegreewiseSplit S σ).mor₂ S.g","decl":"/-- The triangle in `CochainComplex C ℤ` attached to a degreewise split short exact sequence\nof cochain complexes. -/\n@[simps! obj₁ obj₂ obj₃ mor₁ mor₂ mor₃]\ndef triangleOfDegreewiseSplit : Triangle (CochainComplex C ℤ) :=\n  Triangle.mk S.f S.g (homOfDegreewiseSplit S σ)\n\n"}
{"name":"CochainComplex.triangleOfDegreewiseSplit_obj₂","module":"Mathlib.Algebra.Homology.HomotopyCategory.DegreewiseSplit","initialProofState":"C : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_2, u_1} C\ninst✝ : CategoryTheory.Preadditive C\nS : CategoryTheory.ShortComplex (CochainComplex C Int)\nσ : (n : Int) → (S.map (HomologicalComplex.eval C (ComplexShape.up Int) n)).Splitting\n⊢ Eq (CochainComplex.triangleOfDegreewiseSplit S σ).obj₂ S.X₂","decl":"/-- The triangle in `CochainComplex C ℤ` attached to a degreewise split short exact sequence\nof cochain complexes. -/\n@[simps! obj₁ obj₂ obj₃ mor₁ mor₂ mor₃]\ndef triangleOfDegreewiseSplit : Triangle (CochainComplex C ℤ) :=\n  Triangle.mk S.f S.g (homOfDegreewiseSplit S σ)\n\n"}
{"name":"CochainComplex.triangleOfDegreewiseSplit_obj₃","module":"Mathlib.Algebra.Homology.HomotopyCategory.DegreewiseSplit","initialProofState":"C : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_2, u_1} C\ninst✝ : CategoryTheory.Preadditive C\nS : CategoryTheory.ShortComplex (CochainComplex C Int)\nσ : (n : Int) → (S.map (HomologicalComplex.eval C (ComplexShape.up Int) n)).Splitting\n⊢ Eq (CochainComplex.triangleOfDegreewiseSplit S σ).obj₃ S.X₃","decl":"/-- The triangle in `CochainComplex C ℤ` attached to a degreewise split short exact sequence\nof cochain complexes. -/\n@[simps! obj₁ obj₂ obj₃ mor₁ mor₂ mor₃]\ndef triangleOfDegreewiseSplit : Triangle (CochainComplex C ℤ) :=\n  Triangle.mk S.f S.g (homOfDegreewiseSplit S σ)\n\n"}
{"name":"CochainComplex.triangleOfDegreewiseSplit_obj₁","module":"Mathlib.Algebra.Homology.HomotopyCategory.DegreewiseSplit","initialProofState":"C : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_2, u_1} C\ninst✝ : CategoryTheory.Preadditive C\nS : CategoryTheory.ShortComplex (CochainComplex C Int)\nσ : (n : Int) → (S.map (HomologicalComplex.eval C (ComplexShape.up Int) n)).Splitting\n⊢ Eq (CochainComplex.triangleOfDegreewiseSplit S σ).obj₁ S.X₁","decl":"/-- The triangle in `CochainComplex C ℤ` attached to a degreewise split short exact sequence\nof cochain complexes. -/\n@[simps! obj₁ obj₂ obj₃ mor₁ mor₂ mor₃]\ndef triangleOfDegreewiseSplit : Triangle (CochainComplex C ℤ) :=\n  Triangle.mk S.f S.g (homOfDegreewiseSplit S σ)\n\n"}
{"name":"CochainComplex.triangleOfDegreewiseSplit_mor₁","module":"Mathlib.Algebra.Homology.HomotopyCategory.DegreewiseSplit","initialProofState":"C : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_2, u_1} C\ninst✝ : CategoryTheory.Preadditive C\nS : CategoryTheory.ShortComplex (CochainComplex C Int)\nσ : (n : Int) → (S.map (HomologicalComplex.eval C (ComplexShape.up Int) n)).Splitting\n⊢ Eq (CochainComplex.triangleOfDegreewiseSplit S σ).mor₁ S.f","decl":"/-- The triangle in `CochainComplex C ℤ` attached to a degreewise split short exact sequence\nof cochain complexes. -/\n@[simps! obj₁ obj₂ obj₃ mor₁ mor₂ mor₃]\ndef triangleOfDegreewiseSplit : Triangle (CochainComplex C ℤ) :=\n  Triangle.mk S.f S.g (homOfDegreewiseSplit S σ)\n\n"}
{"name":"CochainComplex.triangleOfDegreewiseSplit_mor₃","module":"Mathlib.Algebra.Homology.HomotopyCategory.DegreewiseSplit","initialProofState":"C : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_2, u_1} C\ninst✝ : CategoryTheory.Preadditive C\nS : CategoryTheory.ShortComplex (CochainComplex C Int)\nσ : (n : Int) → (S.map (HomologicalComplex.eval C (ComplexShape.up Int) n)).Splitting\n⊢ Eq (CochainComplex.triangleOfDegreewiseSplit S σ).mor₃ (CochainComplex.homOfDegreewiseSplit S σ)","decl":"/-- The triangle in `CochainComplex C ℤ` attached to a degreewise split short exact sequence\nof cochain complexes. -/\n@[simps! obj₁ obj₂ obj₃ mor₁ mor₂ mor₃]\ndef triangleOfDegreewiseSplit : Triangle (CochainComplex C ℤ) :=\n  Triangle.mk S.f S.g (homOfDegreewiseSplit S σ)\n\n"}
{"name":"CochainComplex.mappingConeHomOfDegreewiseSplitIso_inv_f","module":"Mathlib.Algebra.Homology.HomotopyCategory.DegreewiseSplit","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Preadditive C\nS : CategoryTheory.ShortComplex (CochainComplex C Int)\nσ : (n : Int) → (S.map (HomologicalComplex.eval C (ComplexShape.up Int) n)).Splitting\ninst✝ : CategoryTheory.Limits.HasBinaryBiproducts C\ni : Int\n⊢ Eq ((CochainComplex.mappingConeHomOfDegreewiseSplitIso S σ).inv.f i) (CochainComplex.mappingConeHomOfDegreewiseSplitXIso S σ i (HAdd.hAdd i 1) ⋯).inv","decl":"/-- The canonical isomorphism `mappingCone (homOfDegreewiseSplit S σ) ≅ S.X₂⟦(1 : ℤ)⟧`. -/\n@[simps!]\nnoncomputable def mappingConeHomOfDegreewiseSplitIso :\n    mappingCone (homOfDegreewiseSplit S σ) ≅ S.X₂⟦(1 : ℤ)⟧ :=\n  Hom.isoOfComponents (fun p => mappingConeHomOfDegreewiseSplitXIso S σ p _ rfl) (by\n    rintro p _ rfl\n    have r_f := (σ (p + 1 + 1)).r_f\n    have s_g := (σ (p + 1)).s_g\n    dsimp at r_f s_g ⊢\n    simp only [mappingConeHomOfDegreewiseSplitXIso, mappingCone.ext_from_iff _ _ _ rfl,\n      mappingCone.inl_v_d_assoc _ (p + 1) _ (p + 1 + 1) (by linarith) (by omega),\n      cocycleOfDegreewiseSplit, r_f, Int.reduceNeg, Cochain.ofHom_v, sub_comp, assoc,\n      Hom.comm, comp_sub, mappingCone.inl_v_fst_v_assoc, mappingCone.inl_v_snd_v_assoc,\n      shiftFunctor_obj_X', zero_comp, sub_zero, homOfDegreewiseSplit_f,\n      mappingCone.inr_f_fst_v_assoc, comp_zero, zero_sub, mappingCone.inr_f_snd_v_assoc,\n      neg_neg, mappingCone.inr_f_d_assoc, shiftFunctor_obj_d',\n      Int.negOnePow_one, neg_comp, sub_neg_eq_add, zero_add, and_true,\n      Units.neg_smul, one_smul, comp_neg, ShortComplex.map_X₂, eval_obj, Cocycle.mk_coe,\n      Cochain.mk_v]\n    simp only [← S.g.comm_assoc, reassoc_of% s_g, comp_id]\n    abel)\n\n"}
{"name":"CochainComplex.mappingConeHomOfDegreewiseSplitIso_hom_f","module":"Mathlib.Algebra.Homology.HomotopyCategory.DegreewiseSplit","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Preadditive C\nS : CategoryTheory.ShortComplex (CochainComplex C Int)\nσ : (n : Int) → (S.map (HomologicalComplex.eval C (ComplexShape.up Int) n)).Splitting\ninst✝ : CategoryTheory.Limits.HasBinaryBiproducts C\ni : Int\n⊢ Eq ((CochainComplex.mappingConeHomOfDegreewiseSplitIso S σ).hom.f i) (CochainComplex.mappingConeHomOfDegreewiseSplitXIso S σ i (HAdd.hAdd i 1) ⋯).hom","decl":"/-- The canonical isomorphism `mappingCone (homOfDegreewiseSplit S σ) ≅ S.X₂⟦(1 : ℤ)⟧`. -/\n@[simps!]\nnoncomputable def mappingConeHomOfDegreewiseSplitIso :\n    mappingCone (homOfDegreewiseSplit S σ) ≅ S.X₂⟦(1 : ℤ)⟧ :=\n  Hom.isoOfComponents (fun p => mappingConeHomOfDegreewiseSplitXIso S σ p _ rfl) (by\n    rintro p _ rfl\n    have r_f := (σ (p + 1 + 1)).r_f\n    have s_g := (σ (p + 1)).s_g\n    dsimp at r_f s_g ⊢\n    simp only [mappingConeHomOfDegreewiseSplitXIso, mappingCone.ext_from_iff _ _ _ rfl,\n      mappingCone.inl_v_d_assoc _ (p + 1) _ (p + 1 + 1) (by linarith) (by omega),\n      cocycleOfDegreewiseSplit, r_f, Int.reduceNeg, Cochain.ofHom_v, sub_comp, assoc,\n      Hom.comm, comp_sub, mappingCone.inl_v_fst_v_assoc, mappingCone.inl_v_snd_v_assoc,\n      shiftFunctor_obj_X', zero_comp, sub_zero, homOfDegreewiseSplit_f,\n      mappingCone.inr_f_fst_v_assoc, comp_zero, zero_sub, mappingCone.inr_f_snd_v_assoc,\n      neg_neg, mappingCone.inr_f_d_assoc, shiftFunctor_obj_d',\n      Int.negOnePow_one, neg_comp, sub_neg_eq_add, zero_add, and_true,\n      Units.neg_smul, one_smul, comp_neg, ShortComplex.map_X₂, eval_obj, Cocycle.mk_coe,\n      Cochain.mk_v]\n    simp only [← S.g.comm_assoc, reassoc_of% s_g, comp_id]\n    abel)\n\n"}
{"name":"CochainComplex.shift_f_comp_mappingConeHomOfDegreewiseSplitIso_inv_assoc","module":"Mathlib.Algebra.Homology.HomotopyCategory.DegreewiseSplit","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Preadditive C\nS : CategoryTheory.ShortComplex (CochainComplex C Int)\nσ : (n : Int) → (S.map (HomologicalComplex.eval C (ComplexShape.up Int) n)).Splitting\ninst✝ : CategoryTheory.Limits.HasBinaryBiproducts C\nZ : CochainComplex C Int\nh : Quiver.Hom (CochainComplex.mappingCone (CochainComplex.homOfDegreewiseSplit S σ)) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp ((CategoryTheory.shiftFunctor (CochainComplex C Int) 1).map S.f) (CategoryTheory.CategoryStruct.comp (CochainComplex.mappingConeHomOfDegreewiseSplitIso S σ).inv h)) (CategoryTheory.CategoryStruct.comp (Neg.neg (CochainComplex.mappingCone.inr (CochainComplex.homOfDegreewiseSplit S σ))) h)","decl":"@[reassoc (attr := simp)]\nlemma shift_f_comp_mappingConeHomOfDegreewiseSplitIso_inv :\n    S.f⟦(1 : ℤ)⟧' ≫ (mappingConeHomOfDegreewiseSplitIso S σ).inv = -mappingCone.inr _ := by\n  ext n\n  have h := (σ (n + 1)).f_r\n  dsimp at h\n  dsimp [mappingConeHomOfDegreewiseSplitXIso]\n  rw [id_comp, comp_sub, ← comp_f_assoc, S.zero, zero_f, zero_comp, zero_sub, reassoc_of% h]\n\n"}
{"name":"CochainComplex.shift_f_comp_mappingConeHomOfDegreewiseSplitIso_inv","module":"Mathlib.Algebra.Homology.HomotopyCategory.DegreewiseSplit","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Preadditive C\nS : CategoryTheory.ShortComplex (CochainComplex C Int)\nσ : (n : Int) → (S.map (HomologicalComplex.eval C (ComplexShape.up Int) n)).Splitting\ninst✝ : CategoryTheory.Limits.HasBinaryBiproducts C\n⊢ Eq (CategoryTheory.CategoryStruct.comp ((CategoryTheory.shiftFunctor (CochainComplex C Int) 1).map S.f) (CochainComplex.mappingConeHomOfDegreewiseSplitIso S σ).inv) (Neg.neg (CochainComplex.mappingCone.inr (CochainComplex.homOfDegreewiseSplit S σ)))","decl":"@[reassoc (attr := simp)]\nlemma shift_f_comp_mappingConeHomOfDegreewiseSplitIso_inv :\n    S.f⟦(1 : ℤ)⟧' ≫ (mappingConeHomOfDegreewiseSplitIso S σ).inv = -mappingCone.inr _ := by\n  ext n\n  have h := (σ (n + 1)).f_r\n  dsimp at h\n  dsimp [mappingConeHomOfDegreewiseSplitXIso]\n  rw [id_comp, comp_sub, ← comp_f_assoc, S.zero, zero_f, zero_comp, zero_sub, reassoc_of% h]\n\n"}
{"name":"CochainComplex.mappingConeHomOfDegreewiseSplitIso_inv_comp_triangle_mor₃_assoc","module":"Mathlib.Algebra.Homology.HomotopyCategory.DegreewiseSplit","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Preadditive C\nS : CategoryTheory.ShortComplex (CochainComplex C Int)\nσ : (n : Int) → (S.map (HomologicalComplex.eval C (ComplexShape.up Int) n)).Splitting\ninst✝ : CategoryTheory.Limits.HasBinaryBiproducts C\nZ : HomologicalComplex C (ComplexShape.up Int)\nh : Quiver.Hom ((CategoryTheory.shiftFunctor (CochainComplex C Int) 1).obj (CochainComplex.mappingCone.triangle (CochainComplex.homOfDegreewiseSplit S σ)).obj₁) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CochainComplex.mappingConeHomOfDegreewiseSplitIso S σ).inv (CategoryTheory.CategoryStruct.comp (CochainComplex.mappingCone.triangle (CochainComplex.homOfDegreewiseSplit S σ)).mor₃ h)) (CategoryTheory.CategoryStruct.comp (Neg.neg ((CategoryTheory.shiftFunctor (CochainComplex C Int) 1).map S.g)) h)","decl":"@[reassoc (attr := simp)]\nlemma mappingConeHomOfDegreewiseSplitIso_inv_comp_triangle_mor₃ :\n    (mappingConeHomOfDegreewiseSplitIso S σ).inv ≫\n      (mappingCone.triangle (homOfDegreewiseSplit S σ)).mor₃ = -S.g⟦(1 : ℤ)⟧' := by\n  ext n\n  dsimp [mappingConeHomOfDegreewiseSplitXIso]\n  simp only [Int.reduceNeg, id_comp, sub_comp, assoc, mappingCone.inl_v_triangle_mor₃_f,\n    shiftFunctor_obj_X, shiftFunctorObjXIso, XIsoOfEq_rfl, Iso.refl_inv, comp_neg, comp_id,\n    mappingCone.inr_f_triangle_mor₃_f, comp_zero, sub_zero]\n\n"}
{"name":"CochainComplex.mappingConeHomOfDegreewiseSplitIso_inv_comp_triangle_mor₃","module":"Mathlib.Algebra.Homology.HomotopyCategory.DegreewiseSplit","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Preadditive C\nS : CategoryTheory.ShortComplex (CochainComplex C Int)\nσ : (n : Int) → (S.map (HomologicalComplex.eval C (ComplexShape.up Int) n)).Splitting\ninst✝ : CategoryTheory.Limits.HasBinaryBiproducts C\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CochainComplex.mappingConeHomOfDegreewiseSplitIso S σ).inv (CochainComplex.mappingCone.triangle (CochainComplex.homOfDegreewiseSplit S σ)).mor₃) (Neg.neg ((CategoryTheory.shiftFunctor (CochainComplex C Int) 1).map S.g))","decl":"@[reassoc (attr := simp)]\nlemma mappingConeHomOfDegreewiseSplitIso_inv_comp_triangle_mor₃ :\n    (mappingConeHomOfDegreewiseSplitIso S σ).inv ≫\n      (mappingCone.triangle (homOfDegreewiseSplit S σ)).mor₃ = -S.g⟦(1 : ℤ)⟧' := by\n  ext n\n  dsimp [mappingConeHomOfDegreewiseSplitXIso]\n  simp only [Int.reduceNeg, id_comp, sub_comp, assoc, mappingCone.inl_v_triangle_mor₃_f,\n    shiftFunctor_obj_X, shiftFunctorObjXIso, XIsoOfEq_rfl, Iso.refl_inv, comp_neg, comp_id,\n    mappingCone.inr_f_triangle_mor₃_f, comp_zero, sub_zero]\n\n"}
{"name":"CochainComplex.mappingCone.triangleRotateShortComplex_X₃","module":"Mathlib.Algebra.Homology.HomotopyCategory.DegreewiseSplit","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Limits.HasBinaryBiproducts C\nK L : CochainComplex C Int\nφ : Quiver.Hom K L\n⊢ Eq (CochainComplex.mappingCone.triangleRotateShortComplex φ).X₃ (CochainComplex.mappingCone.triangle φ).rotate.obj₃","decl":"/-- Given a morphism of cochain complexes `φ`, this is the short complex\ngiven by `(triangle φ).rotate`. -/\n@[simps]\nnoncomputable def triangleRotateShortComplex : ShortComplex (CochainComplex C ℤ) :=\n  ShortComplex.mk (triangle φ).rotate.mor₁ (triangle φ).rotate.mor₂ (by simp)\n\n"}
{"name":"CochainComplex.mappingCone.triangleRotateShortComplex_X₁","module":"Mathlib.Algebra.Homology.HomotopyCategory.DegreewiseSplit","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Limits.HasBinaryBiproducts C\nK L : CochainComplex C Int\nφ : Quiver.Hom K L\n⊢ Eq (CochainComplex.mappingCone.triangleRotateShortComplex φ).X₁ (CochainComplex.mappingCone.triangle φ).rotate.obj₁","decl":"/-- Given a morphism of cochain complexes `φ`, this is the short complex\ngiven by `(triangle φ).rotate`. -/\n@[simps]\nnoncomputable def triangleRotateShortComplex : ShortComplex (CochainComplex C ℤ) :=\n  ShortComplex.mk (triangle φ).rotate.mor₁ (triangle φ).rotate.mor₂ (by simp)\n\n"}
{"name":"CochainComplex.mappingCone.triangleRotateShortComplex_g","module":"Mathlib.Algebra.Homology.HomotopyCategory.DegreewiseSplit","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Limits.HasBinaryBiproducts C\nK L : CochainComplex C Int\nφ : Quiver.Hom K L\n⊢ Eq (CochainComplex.mappingCone.triangleRotateShortComplex φ).g (CochainComplex.mappingCone.triangle φ).rotate.mor₂","decl":"/-- Given a morphism of cochain complexes `φ`, this is the short complex\ngiven by `(triangle φ).rotate`. -/\n@[simps]\nnoncomputable def triangleRotateShortComplex : ShortComplex (CochainComplex C ℤ) :=\n  ShortComplex.mk (triangle φ).rotate.mor₁ (triangle φ).rotate.mor₂ (by simp)\n\n"}
{"name":"CochainComplex.mappingCone.triangleRotateShortComplex_f","module":"Mathlib.Algebra.Homology.HomotopyCategory.DegreewiseSplit","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Limits.HasBinaryBiproducts C\nK L : CochainComplex C Int\nφ : Quiver.Hom K L\n⊢ Eq (CochainComplex.mappingCone.triangleRotateShortComplex φ).f (CochainComplex.mappingCone.triangle φ).rotate.mor₁","decl":"/-- Given a morphism of cochain complexes `φ`, this is the short complex\ngiven by `(triangle φ).rotate`. -/\n@[simps]\nnoncomputable def triangleRotateShortComplex : ShortComplex (CochainComplex C ℤ) :=\n  ShortComplex.mk (triangle φ).rotate.mor₁ (triangle φ).rotate.mor₂ (by simp)\n\n"}
{"name":"CochainComplex.mappingCone.triangleRotateShortComplex_X₂","module":"Mathlib.Algebra.Homology.HomotopyCategory.DegreewiseSplit","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Limits.HasBinaryBiproducts C\nK L : CochainComplex C Int\nφ : Quiver.Hom K L\n⊢ Eq (CochainComplex.mappingCone.triangleRotateShortComplex φ).X₂ (CochainComplex.mappingCone.triangle φ).rotate.obj₂","decl":"/-- Given a morphism of cochain complexes `φ`, this is the short complex\ngiven by `(triangle φ).rotate`. -/\n@[simps]\nnoncomputable def triangleRotateShortComplex : ShortComplex (CochainComplex C ℤ) :=\n  ShortComplex.mk (triangle φ).rotate.mor₁ (triangle φ).rotate.mor₂ (by simp)\n\n"}
{"name":"CochainComplex.mappingCone.triangleRotateShortComplexSplitting_r","module":"Mathlib.Algebra.Homology.HomotopyCategory.DegreewiseSplit","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Limits.HasBinaryBiproducts C\nK L : CochainComplex C Int\nφ : Quiver.Hom K L\nn : Int\n⊢ Eq (CochainComplex.mappingCone.triangleRotateShortComplexSplitting φ n).r ((CochainComplex.mappingCone.snd φ).v n n ⋯)","decl":"/-- `triangleRotateShortComplex φ` is a degreewise split short exact sequence of\ncochain complexes. -/\n@[simps]\nnoncomputable def triangleRotateShortComplexSplitting (n : ℤ) :\n    ((triangleRotateShortComplex φ).map (eval _ _ n)).Splitting where\n  s := -(inl φ).v (n + 1) n (by omega)\n  r := (snd φ).v n n (add_zero n)\n  id := by simp [ext_from_iff φ _ _ rfl]\n\n"}
{"name":"CochainComplex.mappingCone.triangleRotateShortComplexSplitting_s","module":"Mathlib.Algebra.Homology.HomotopyCategory.DegreewiseSplit","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Limits.HasBinaryBiproducts C\nK L : CochainComplex C Int\nφ : Quiver.Hom K L\nn : Int\n⊢ Eq (CochainComplex.mappingCone.triangleRotateShortComplexSplitting φ n).s (Neg.neg ((CochainComplex.mappingCone.inl φ).v (HAdd.hAdd n 1) n ⋯))","decl":"/-- `triangleRotateShortComplex φ` is a degreewise split short exact sequence of\ncochain complexes. -/\n@[simps]\nnoncomputable def triangleRotateShortComplexSplitting (n : ℤ) :\n    ((triangleRotateShortComplex φ).map (eval _ _ n)).Splitting where\n  s := -(inl φ).v (n + 1) n (by omega)\n  r := (snd φ).v n n (add_zero n)\n  id := by simp [ext_from_iff φ _ _ rfl]\n\n"}
{"name":"CochainComplex.mappingCone.cocycleOfDegreewiseSplit_triangleRotateShortComplexSplitting_v","module":"Mathlib.Algebra.Homology.HomotopyCategory.DegreewiseSplit","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Limits.HasBinaryBiproducts C\nK L : CochainComplex C Int\nφ : Quiver.Hom K L\np : Int\n⊢ Eq ((↑(CochainComplex.cocycleOfDegreewiseSplit (CochainComplex.mappingCone.triangleRotateShortComplex φ) (CochainComplex.mappingCone.triangleRotateShortComplexSplitting φ))).v p (HAdd.hAdd p 1) ⋯) (Neg.neg (φ.f (HAdd.hAdd p { as := 1 }.as)))","decl":"@[simp]\nlemma cocycleOfDegreewiseSplit_triangleRotateShortComplexSplitting_v (p : ℤ) :\n    (cocycleOfDegreewiseSplit _ (triangleRotateShortComplexSplitting φ)).1.v p _ rfl =\n      -φ.f _ := by\n  simp [cocycleOfDegreewiseSplit, d_snd_v φ p (p + 1) rfl]\n\n"}
{"name":"HomotopyCategory.distinguished_iff_iso_trianglehOfDegreewiseSplit","module":"Mathlib.Algebra.Homology.HomotopyCategory.DegreewiseSplit","initialProofState":"C : Type u_1\ninst✝³ : CategoryTheory.Category.{u_2, u_1} C\ninst✝² : CategoryTheory.Preadditive C\ninst✝¹ : CategoryTheory.Limits.HasZeroObject C\ninst✝ : CategoryTheory.Limits.HasBinaryBiproducts C\nT : CategoryTheory.Pretriangulated.Triangle (HomotopyCategory C (ComplexShape.up Int))\n⊢ Iff (Membership.mem CategoryTheory.Pretriangulated.distinguishedTriangles T) (Exists fun S => Exists fun σ => Nonempty (CategoryTheory.Iso T (CochainComplex.trianglehOfDegreewiseSplit S σ)))","decl":"lemma distinguished_iff_iso_trianglehOfDegreewiseSplit\n    (T : Triangle (HomotopyCategory C (ComplexShape.up ℤ))) :\n    (T ∈ distTriang _) ↔ ∃ (S : ShortComplex (CochainComplex C ℤ))\n      (σ : ∀ n, (S.map (HomologicalComplex.eval C _ n)).Splitting),\n      Nonempty (T ≅ CochainComplex.trianglehOfDegreewiseSplit S σ) := by\n  constructor\n  · intro hT\n    obtain ⟨K, L, φ, ⟨e⟩⟩ := inv_rot_of_distTriang _ hT\n    exact ⟨_, _, ⟨(triangleRotation _).counitIso.symm.app _ ≪≫ (rotate _).mapIso e ≪≫\n      CochainComplex.mappingCone.trianglehRotateIsoTrianglehOfDegreewiseSplit φ⟩⟩\n  · rintro ⟨S, σ, ⟨e⟩⟩\n    rw [rotate_distinguished_triangle, rotate_distinguished_triangle]\n    refine isomorphic_distinguished _ ?_ _\n      ((rotate _ ⋙ rotate _).mapIso e ≪≫\n        CochainComplex.trianglehOfDegreewiseSplitRotateRotateIso S σ)\n    exact ⟨_, _, _, ⟨Iso.refl _⟩⟩\n\n"}
