{"name":"instEnoughInjectivesModuleCatInt","module":"Mathlib.Algebra.Category.ModuleCat.EnoughInjectives","initialProofState":"⊢ CategoryTheory.EnoughInjectives (ModuleCat Int)","decl":"instance : EnoughInjectives (ModuleCat.{v} ℤ) :=\n  EnoughInjectives.of_equivalence (forget₂ (ModuleCat ℤ) AddCommGrp)\n\n"}
{"name":"ModuleCat.enoughInjectives","module":"Mathlib.Algebra.Category.ModuleCat.EnoughInjectives","initialProofState":"R : Type u\ninst✝ : Ring R\n⊢ CategoryTheory.EnoughInjectives (ModuleCat R)","decl":"lemma ModuleCat.enoughInjectives : EnoughInjectives (ModuleCat.{max v u} R) :=\n  EnoughInjectives.of_adjunction (ModuleCat.restrictCoextendScalarsAdj.{max v u} (algebraMap ℤ R))\n\n"}
{"name":"instEnoughInjectivesModuleCatOfUnivLE","module":"Mathlib.Algebra.Category.ModuleCat.EnoughInjectives","initialProofState":"R : Type u\ninst✝¹ : Ring R\ninst✝ : UnivLE.{u, v}\n⊢ CategoryTheory.EnoughInjectives (ModuleCat R)","decl":"open ModuleCat in\ninstance [UnivLE.{u,v}] : EnoughInjectives (ModuleCat.{v} R) :=\n  letI := (equivShrink.{v} R).symm.ring\n  letI := enoughInjectives.{v} (Shrink.{v} R)\n  EnoughInjectives.of_equivalence (restrictScalars (equivShrink R).symm.ringEquiv.toRingHom)\n"}
