{"name":"CochainComplex.ιTruncLE_naturality_assoc","module":"Mathlib.Algebra.Homology.Embedding.CochainComplex","initialProofState":"C : Type u_1\ninst✝⁴ : CategoryTheory.Category.{u_2, u_1} C\ninst✝³ : CategoryTheory.Limits.HasZeroMorphisms C\nK L : CochainComplex C Int\nφ : Quiver.Hom K L\ninst✝² : CategoryTheory.Limits.HasZeroObject C\ninst✝¹ : ∀ (i : Int), HomologicalComplex.HasHomology K i\ninst✝ : ∀ (i : Int), HomologicalComplex.HasHomology L i\nn : Int\nZ : CochainComplex C Int\nh : Quiver.Hom L Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CochainComplex.truncLEMap φ n) (CategoryTheory.CategoryStruct.comp (L.ιTruncLE n) h)) (CategoryTheory.CategoryStruct.comp (K.ιTruncLE n) (CategoryTheory.CategoryStruct.comp φ h))","decl":"@[reassoc (attr := simp)]\nlemma ιTruncLE_naturality (n : ℤ) :\n    truncLEMap φ n ≫ L.ιTruncLE n = K.ιTruncLE n ≫ φ := by\n  apply HomologicalComplex.ιTruncLE_naturality\n\n"}
{"name":"CochainComplex.ιTruncLE_naturality","module":"Mathlib.Algebra.Homology.Embedding.CochainComplex","initialProofState":"C : Type u_1\ninst✝⁴ : CategoryTheory.Category.{u_2, u_1} C\ninst✝³ : CategoryTheory.Limits.HasZeroMorphisms C\nK L : CochainComplex C Int\nφ : Quiver.Hom K L\ninst✝² : CategoryTheory.Limits.HasZeroObject C\ninst✝¹ : ∀ (i : Int), HomologicalComplex.HasHomology K i\ninst✝ : ∀ (i : Int), HomologicalComplex.HasHomology L i\nn : Int\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CochainComplex.truncLEMap φ n) (L.ιTruncLE n)) (CategoryTheory.CategoryStruct.comp (K.ιTruncLE n) φ)","decl":"@[reassoc (attr := simp)]\nlemma ιTruncLE_naturality (n : ℤ) :\n    truncLEMap φ n ≫ L.ιTruncLE n = K.ιTruncLE n ≫ φ := by\n  apply HomologicalComplex.ιTruncLE_naturality\n\n"}
{"name":"CochainComplex.πTruncGE_naturality_assoc","module":"Mathlib.Algebra.Homology.Embedding.CochainComplex","initialProofState":"C : Type u_1\ninst✝⁴ : CategoryTheory.Category.{u_2, u_1} C\ninst✝³ : CategoryTheory.Limits.HasZeroMorphisms C\nK L : CochainComplex C Int\nφ : Quiver.Hom K L\ninst✝² : CategoryTheory.Limits.HasZeroObject C\ninst✝¹ : ∀ (i : Int), HomologicalComplex.HasHomology K i\ninst✝ : ∀ (i : Int), HomologicalComplex.HasHomology L i\nn : Int\nZ : CochainComplex C Int\nh : Quiver.Hom (L.truncGE n) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (K.πTruncGE n) (CategoryTheory.CategoryStruct.comp (CochainComplex.truncGEMap φ n) h)) (CategoryTheory.CategoryStruct.comp φ (CategoryTheory.CategoryStruct.comp (L.πTruncGE n) h))","decl":"@[reassoc (attr := simp)]\nlemma πTruncGE_naturality (n : ℤ) :\n    K.πTruncGE n ≫ truncGEMap φ n = φ ≫ L.πTruncGE n := by\n  apply HomologicalComplex.πTruncGE_naturality\n\n"}
{"name":"CochainComplex.πTruncGE_naturality","module":"Mathlib.Algebra.Homology.Embedding.CochainComplex","initialProofState":"C : Type u_1\ninst✝⁴ : CategoryTheory.Category.{u_2, u_1} C\ninst✝³ : CategoryTheory.Limits.HasZeroMorphisms C\nK L : CochainComplex C Int\nφ : Quiver.Hom K L\ninst✝² : CategoryTheory.Limits.HasZeroObject C\ninst✝¹ : ∀ (i : Int), HomologicalComplex.HasHomology K i\ninst✝ : ∀ (i : Int), HomologicalComplex.HasHomology L i\nn : Int\n⊢ Eq (CategoryTheory.CategoryStruct.comp (K.πTruncGE n) (CochainComplex.truncGEMap φ n)) (CategoryTheory.CategoryStruct.comp φ (L.πTruncGE n))","decl":"@[reassoc (attr := simp)]\nlemma πTruncGE_naturality (n : ℤ) :\n    K.πTruncGE n ≫ truncGEMap φ n = φ ≫ L.πTruncGE n := by\n  apply HomologicalComplex.πTruncGE_naturality\n\n"}
{"name":"CochainComplex.isZero_of_isStrictlyGE","module":"Mathlib.Algebra.Homology.Embedding.CochainComplex","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Limits.HasZeroMorphisms C\nK : CochainComplex C Int\nn i : Int\nhi : LT.lt i n\ninst✝ : K.IsStrictlyGE n\n⊢ CategoryTheory.Limits.IsZero (K.X i)","decl":"lemma isZero_of_isStrictlyGE (n i : ℤ) (hi : i < n) [K.IsStrictlyGE n] :\n    IsZero (K.X i) :=\n  isZero_X_of_isStrictlySupported K (embeddingUpIntGE n) i\n    (by simpa only [not_mem_range_embeddingUpIntGE_iff] using hi)\n\n"}
{"name":"CochainComplex.isZero_of_isStrictlyLE","module":"Mathlib.Algebra.Homology.Embedding.CochainComplex","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Limits.HasZeroMorphisms C\nK : CochainComplex C Int\nn i : Int\nhi : LT.lt n i\ninst✝ : K.IsStrictlyLE n\n⊢ CategoryTheory.Limits.IsZero (K.X i)","decl":"lemma isZero_of_isStrictlyLE (n i : ℤ) (hi : n < i) [K.IsStrictlyLE n] :\n    IsZero (K.X i) :=\n  isZero_X_of_isStrictlySupported K (embeddingUpIntLE n) i\n    (by simpa only [not_mem_range_embeddingUpIntLE_iff] using hi)\n\n"}
{"name":"CochainComplex.exactAt_of_isGE","module":"Mathlib.Algebra.Homology.Embedding.CochainComplex","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Limits.HasZeroMorphisms C\nK : CochainComplex C Int\nn i : Int\nhi : LT.lt i n\ninst✝ : K.IsGE n\n⊢ HomologicalComplex.ExactAt K i","decl":"lemma exactAt_of_isGE (n i : ℤ) (hi : i < n) [K.IsGE n] :\n    K.ExactAt i :=\n  exactAt_of_isSupported K (embeddingUpIntGE n) i\n    (by simpa only [not_mem_range_embeddingUpIntGE_iff] using hi)\n\n"}
{"name":"CochainComplex.exactAt_of_isLE","module":"Mathlib.Algebra.Homology.Embedding.CochainComplex","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Limits.HasZeroMorphisms C\nK : CochainComplex C Int\nn i : Int\nhi : LT.lt n i\ninst✝ : K.IsLE n\n⊢ HomologicalComplex.ExactAt K i","decl":"lemma exactAt_of_isLE (n i : ℤ) (hi : n < i) [K.IsLE n] :\n    K.ExactAt i :=\n  exactAt_of_isSupported K (embeddingUpIntLE n) i\n    (by simpa only [not_mem_range_embeddingUpIntLE_iff] using hi)\n\n"}
{"name":"CochainComplex.isZero_of_isGE","module":"Mathlib.Algebra.Homology.Embedding.CochainComplex","initialProofState":"C : Type u_1\ninst✝³ : CategoryTheory.Category.{u_2, u_1} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\nK : CochainComplex C Int\nn i : Int\nhi : LT.lt i n\ninst✝¹ : K.IsGE n\ninst✝ : HomologicalComplex.HasHomology K i\n⊢ CategoryTheory.Limits.IsZero (HomologicalComplex.homology K i)","decl":"lemma isZero_of_isGE (n i : ℤ) (hi : i < n) [K.IsGE n] [K.HasHomology i] :\n    IsZero (K.homology i) :=\n  (K.exactAt_of_isGE n i hi).isZero_homology\n\n"}
{"name":"CochainComplex.isZero_of_isLE","module":"Mathlib.Algebra.Homology.Embedding.CochainComplex","initialProofState":"C : Type u_1\ninst✝³ : CategoryTheory.Category.{u_2, u_1} C\ninst✝² : CategoryTheory.Limits.HasZeroMorphisms C\nK : CochainComplex C Int\nn i : Int\nhi : LT.lt n i\ninst✝¹ : K.IsLE n\ninst✝ : HomologicalComplex.HasHomology K i\n⊢ CategoryTheory.Limits.IsZero (HomologicalComplex.homology K i)","decl":"lemma isZero_of_isLE (n i : ℤ) (hi : n < i) [K.IsLE n] [K.HasHomology i] :\n    IsZero (K.homology i) :=\n  (K.exactAt_of_isLE n i hi).isZero_homology\n\n"}
{"name":"CochainComplex.isStrictlyGE_iff","module":"Mathlib.Algebra.Homology.Embedding.CochainComplex","initialProofState":"C : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_2, u_1} C\ninst✝ : CategoryTheory.Limits.HasZeroMorphisms C\nK : CochainComplex C Int\nn : Int\n⊢ Iff (K.IsStrictlyGE n) (∀ (i : Int), LT.lt i n → CategoryTheory.Limits.IsZero (K.X i))","decl":"lemma isStrictlyGE_iff (n : ℤ) :\n    K.IsStrictlyGE n ↔ ∀ (i : ℤ) (_ : i < n), IsZero (K.X i) := by\n  constructor\n  · intro _ i hi\n    exact K.isZero_of_isStrictlyGE n i hi\n  · intro h\n    refine IsStrictlySupported.mk (fun i hi ↦ ?_)\n    rw [not_mem_range_embeddingUpIntGE_iff] at hi\n    exact h i hi\n\n"}
{"name":"CochainComplex.isStrictlyLE_iff","module":"Mathlib.Algebra.Homology.Embedding.CochainComplex","initialProofState":"C : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_2, u_1} C\ninst✝ : CategoryTheory.Limits.HasZeroMorphisms C\nK : CochainComplex C Int\nn : Int\n⊢ Iff (K.IsStrictlyLE n) (∀ (i : Int), LT.lt n i → CategoryTheory.Limits.IsZero (K.X i))","decl":"lemma isStrictlyLE_iff (n : ℤ) :\n    K.IsStrictlyLE n ↔ ∀ (i : ℤ) (_ : n < i), IsZero (K.X i) := by\n  constructor\n  · intro _ i hi\n    exact K.isZero_of_isStrictlyLE n i hi\n  · intro h\n    refine IsStrictlySupported.mk (fun i hi ↦ ?_)\n    rw [not_mem_range_embeddingUpIntLE_iff] at hi\n    exact h i hi\n\n"}
{"name":"CochainComplex.isGE_iff","module":"Mathlib.Algebra.Homology.Embedding.CochainComplex","initialProofState":"C : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_2, u_1} C\ninst✝ : CategoryTheory.Limits.HasZeroMorphisms C\nK : CochainComplex C Int\nn : Int\n⊢ Iff (K.IsGE n) (∀ (i : Int), LT.lt i n → HomologicalComplex.ExactAt K i)","decl":"lemma isGE_iff (n : ℤ) :\n    K.IsGE n ↔ ∀ (i : ℤ) (_ : i < n), K.ExactAt i := by\n  constructor\n  · intro _ i hi\n    exact K.exactAt_of_isGE n i hi\n  · intro h\n    refine IsSupported.mk (fun i hi ↦ ?_)\n    rw [not_mem_range_embeddingUpIntGE_iff] at hi\n    exact h i hi\n\n"}
{"name":"CochainComplex.isLE_iff","module":"Mathlib.Algebra.Homology.Embedding.CochainComplex","initialProofState":"C : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_2, u_1} C\ninst✝ : CategoryTheory.Limits.HasZeroMorphisms C\nK : CochainComplex C Int\nn : Int\n⊢ Iff (K.IsLE n) (∀ (i : Int), LT.lt n i → HomologicalComplex.ExactAt K i)","decl":"lemma isLE_iff (n : ℤ) :\n    K.IsLE n ↔ ∀ (i : ℤ) (_ : n < i), K.ExactAt i := by\n  constructor\n  · intro _ i hi\n    exact K.exactAt_of_isLE n i hi\n  · intro h\n    refine IsSupported.mk (fun i hi ↦ ?_)\n    rw [not_mem_range_embeddingUpIntLE_iff] at hi\n    exact h i hi\n\n"}
{"name":"CochainComplex.isStrictlyLE_of_le","module":"Mathlib.Algebra.Homology.Embedding.CochainComplex","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Limits.HasZeroMorphisms C\nK : CochainComplex C Int\np q : Int\nhpq : LE.le p q\ninst✝ : K.IsStrictlyLE p\n⊢ K.IsStrictlyLE q","decl":"lemma isStrictlyLE_of_le (p q : ℤ) (hpq : p ≤ q) [K.IsStrictlyLE p] :\n    K.IsStrictlyLE q := by\n  rw [isStrictlyLE_iff]\n  intro i hi\n  apply K.isZero_of_isStrictlyLE p\n  omega\n\n"}
{"name":"CochainComplex.isStrictlyGE_of_ge","module":"Mathlib.Algebra.Homology.Embedding.CochainComplex","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Limits.HasZeroMorphisms C\nK : CochainComplex C Int\np q : Int\nhpq : LE.le p q\ninst✝ : K.IsStrictlyGE q\n⊢ K.IsStrictlyGE p","decl":"lemma isStrictlyGE_of_ge (p q : ℤ) (hpq : p ≤ q) [K.IsStrictlyGE q] :\n    K.IsStrictlyGE p := by\n  rw [isStrictlyGE_iff]\n  intro i hi\n  apply K.isZero_of_isStrictlyGE q\n  omega\n\n"}
{"name":"CochainComplex.isLE_of_le","module":"Mathlib.Algebra.Homology.Embedding.CochainComplex","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Limits.HasZeroMorphisms C\nK : CochainComplex C Int\np q : Int\nhpq : LE.le p q\ninst✝ : K.IsLE p\n⊢ K.IsLE q","decl":"lemma isLE_of_le (p q : ℤ) (hpq : p ≤ q) [K.IsLE p] :\n    K.IsLE q := by\n  rw [isLE_iff]\n  intro i hi\n  apply K.exactAt_of_isLE p\n  omega\n\n"}
{"name":"CochainComplex.isGE_of_ge","module":"Mathlib.Algebra.Homology.Embedding.CochainComplex","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Limits.HasZeroMorphisms C\nK : CochainComplex C Int\np q : Int\nhpq : LE.le p q\ninst✝ : K.IsGE q\n⊢ K.IsGE p","decl":"lemma isGE_of_ge (p q : ℤ) (hpq : p ≤ q) [K.IsGE q] :\n    K.IsGE p := by\n  rw [isGE_iff]\n  intro i hi\n  apply K.exactAt_of_isGE q\n  omega\n\n"}
{"name":"CochainComplex.isStrictlyLE_of_iso","module":"Mathlib.Algebra.Homology.Embedding.CochainComplex","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Limits.HasZeroMorphisms C\nK L : CochainComplex C Int\ne : CategoryTheory.Iso K L\nn : Int\ninst✝ : K.IsStrictlyLE n\n⊢ L.IsStrictlyLE n","decl":"lemma isStrictlyLE_of_iso (n : ℤ) [K.IsStrictlyLE n] : L.IsStrictlyLE n := by\n  apply isStrictlySupported_of_iso e\n\n"}
{"name":"CochainComplex.isStrictlyGE_of_iso","module":"Mathlib.Algebra.Homology.Embedding.CochainComplex","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Limits.HasZeroMorphisms C\nK L : CochainComplex C Int\ne : CategoryTheory.Iso K L\nn : Int\ninst✝ : K.IsStrictlyGE n\n⊢ L.IsStrictlyGE n","decl":"lemma isStrictlyGE_of_iso (n : ℤ) [K.IsStrictlyGE n] : L.IsStrictlyGE n := by\n  apply isStrictlySupported_of_iso e\n\n"}
{"name":"CochainComplex.isLE_of_iso","module":"Mathlib.Algebra.Homology.Embedding.CochainComplex","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Limits.HasZeroMorphisms C\nK L : CochainComplex C Int\ne : CategoryTheory.Iso K L\nn : Int\ninst✝ : K.IsLE n\n⊢ L.IsLE n","decl":"lemma isLE_of_iso (n : ℤ) [K.IsLE n] : L.IsLE n := by\n  apply isSupported_of_iso e\n\n"}
{"name":"CochainComplex.isGE_of_iso","module":"Mathlib.Algebra.Homology.Embedding.CochainComplex","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} C\ninst✝¹ : CategoryTheory.Limits.HasZeroMorphisms C\nK L : CochainComplex C Int\ne : CategoryTheory.Iso K L\nn : Int\ninst✝ : K.IsGE n\n⊢ L.IsGE n","decl":"lemma isGE_of_iso (n : ℤ) [K.IsGE n] : L.IsGE n := by\n  apply isSupported_of_iso e\n\n"}
{"name":"CochainComplex.exists_iso_single","module":"Mathlib.Algebra.Homology.Embedding.CochainComplex","initialProofState":"C : Type u_1\ninst✝⁴ : CategoryTheory.Category.{u_2, u_1} C\ninst✝³ : CategoryTheory.Limits.HasZeroMorphisms C\nK : CochainComplex C Int\ninst✝² : CategoryTheory.Limits.HasZeroObject C\nn : Int\ninst✝¹ : K.IsStrictlyGE n\ninst✝ : K.IsStrictlyLE n\n⊢ Exists fun M => Nonempty (CategoryTheory.Iso K ((HomologicalComplex.single C (ComplexShape.up Int) n).obj M))","decl":"/-- A cochain complex that is both strictly `≤ n` and `≥ n` is isomorphic to\na complex `(single _ _ n).obj M` for some object `M`. -/\nlemma exists_iso_single [HasZeroObject C] (n : ℤ) [K.IsStrictlyGE n] [K.IsStrictlyLE n] :\n    ∃ (M : C), Nonempty (K ≅ (single _ _ n).obj M) :=\n  ⟨K.X n, ⟨{\n      hom := mkHomToSingle (𝟙 _) (fun i (hi : i + 1 = n) ↦\n        (K.isZero_of_isStrictlyGE n i (by omega)).eq_of_src _ _)\n      inv := mkHomFromSingle (𝟙 _) (fun i (hi : n + 1 = i) ↦\n        (K.isZero_of_isStrictlyLE n i (by omega)).eq_of_tgt _ _)\n      hom_inv_id := by\n        ext i\n        obtain hi | rfl | hi := lt_trichotomy i n\n        · apply (K.isZero_of_isStrictlyGE n i (by omega)).eq_of_src\n        · simp\n        · apply (K.isZero_of_isStrictlyLE n i (by omega)).eq_of_tgt\n      inv_hom_id := by aesop }⟩⟩\n\n"}
