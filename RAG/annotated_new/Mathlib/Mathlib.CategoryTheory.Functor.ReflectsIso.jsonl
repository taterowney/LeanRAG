{"name":"CategoryTheory.Functor.ReflectsIsomorphisms.reflects","module":"Mathlib.CategoryTheory.Functor.ReflectsIso","initialProofState":"C : Type u₁\ninst✝² : CategoryTheory.Category.{v₁, u₁} C\nD : Type u₂\ninst✝¹ : CategoryTheory.Category.{v₂, u₂} D\nF : CategoryTheory.Functor C D\nself : F.ReflectsIsomorphisms\nA B : C\nf : Quiver.Hom A B\ninst✝ : CategoryTheory.IsIso (F.map f)\n⊢ CategoryTheory.IsIso f","decl":"/-- Define what it means for a functor `F : C ⥤ D` to reflect isomorphisms: for any\nmorphism `f : A ⟶ B`, if `F.map f` is an isomorphism then `f` is as well.\nNote that we do not assume or require that `F` is faithful.\n-/\nclass Functor.ReflectsIsomorphisms (F : C ⥤ D) : Prop where\n  /-- For any `f`, if `F.map f` is an iso, then so was `f`-/\n  reflects : ∀ {A B : C} (f : A ⟶ B) [IsIso (F.map f)], IsIso f\n\n"}
{"name":"CategoryTheory.isIso_of_reflects_iso","module":"Mathlib.CategoryTheory.Functor.ReflectsIso","initialProofState":"C : Type u₁\ninst✝³ : CategoryTheory.Category.{v₁, u₁} C\nD : Type u₂\ninst✝² : CategoryTheory.Category.{v₂, u₂} D\nA B : C\nf : Quiver.Hom A B\nF : CategoryTheory.Functor C D\ninst✝¹ : CategoryTheory.IsIso (F.map f)\ninst✝ : F.ReflectsIsomorphisms\n⊢ CategoryTheory.IsIso f","decl":"/-- If `F` reflects isos and `F.map f` is an iso, then `f` is an iso. -/\ntheorem isIso_of_reflects_iso {A B : C} (f : A ⟶ B) (F : C ⥤ D) [IsIso (F.map f)]\n    [F.ReflectsIsomorphisms] : IsIso f :=\n  ReflectsIsomorphisms.reflects F f\n\n"}
{"name":"CategoryTheory.isIso_iff_of_reflects_iso","module":"Mathlib.CategoryTheory.Functor.ReflectsIso","initialProofState":"C : Type u₁\ninst✝² : CategoryTheory.Category.{v₁, u₁} C\nD : Type u₂\ninst✝¹ : CategoryTheory.Category.{v₂, u₂} D\nA B : C\nf : Quiver.Hom A B\nF : CategoryTheory.Functor C D\ninst✝ : F.ReflectsIsomorphisms\n⊢ Iff (CategoryTheory.IsIso (F.map f)) (CategoryTheory.IsIso f)","decl":"lemma isIso_iff_of_reflects_iso {A B : C} (f : A ⟶ B) (F : C ⥤ D) [F.ReflectsIsomorphisms] :\n    IsIso (F.map f) ↔ IsIso f :=\n  ⟨fun _ => isIso_of_reflects_iso f F, fun _ => inferInstance⟩\n\n"}
{"name":"CategoryTheory.Functor.FullyFaithful.reflectsIsomorphisms","module":"Mathlib.CategoryTheory.Functor.ReflectsIso","initialProofState":"C : Type u₁\ninst✝¹ : CategoryTheory.Category.{v₁, u₁} C\nD : Type u₂\ninst✝ : CategoryTheory.Category.{v₂, u₂} D\nF : CategoryTheory.Functor C D\nhF : F.FullyFaithful\n⊢ F.ReflectsIsomorphisms","decl":"lemma Functor.FullyFaithful.reflectsIsomorphisms {F : C ⥤ D} (hF : F.FullyFaithful) :\n    F.ReflectsIsomorphisms where\n  reflects _ _ := hF.isIso_of_isIso_map _\n\n"}
{"name":"CategoryTheory.reflectsIsomorphisms_of_full_and_faithful","module":"Mathlib.CategoryTheory.Functor.ReflectsIso","initialProofState":"C : Type u₁\ninst✝³ : CategoryTheory.Category.{v₁, u₁} C\nD : Type u₂\ninst✝² : CategoryTheory.Category.{v₂, u₂} D\nF : CategoryTheory.Functor C D\ninst✝¹ : F.Full\ninst✝ : F.Faithful\n⊢ F.ReflectsIsomorphisms","decl":"instance (priority := 100) reflectsIsomorphisms_of_full_and_faithful\n    (F : C ⥤ D) [F.Full] [F.Faithful] :\n    F.ReflectsIsomorphisms :=\n  (Functor.FullyFaithful.ofFullyFaithful F).reflectsIsomorphisms\n\n"}
{"name":"CategoryTheory.reflectsIsomorphisms_comp","module":"Mathlib.CategoryTheory.Functor.ReflectsIso","initialProofState":"C : Type u₁\ninst✝⁴ : CategoryTheory.Category.{v₁, u₁} C\nD : Type u₂\ninst✝³ : CategoryTheory.Category.{v₂, u₂} D\nE : Type u₃\ninst✝² : CategoryTheory.Category.{v₃, u₃} E\nF : CategoryTheory.Functor C D\nG : CategoryTheory.Functor D E\ninst✝¹ : F.ReflectsIsomorphisms\ninst✝ : G.ReflectsIsomorphisms\n⊢ (F.comp G).ReflectsIsomorphisms","decl":"instance reflectsIsomorphisms_comp (F : C ⥤ D) (G : D ⥤ E)\n    [F.ReflectsIsomorphisms] [G.ReflectsIsomorphisms] :\n    (F ⋙ G).ReflectsIsomorphisms :=\n  ⟨fun f (hf : IsIso (G.map _)) => by\n    haveI := isIso_of_reflects_iso (F.map f) G\n    exact isIso_of_reflects_iso f F⟩\n\n"}
{"name":"CategoryTheory.reflectsIsomorphisms_of_comp","module":"Mathlib.CategoryTheory.Functor.ReflectsIso","initialProofState":"C : Type u₁\ninst✝³ : CategoryTheory.Category.{v₁, u₁} C\nD : Type u₂\ninst✝² : CategoryTheory.Category.{v₂, u₂} D\nE : Type u₃\ninst✝¹ : CategoryTheory.Category.{v₃, u₃} E\nF : CategoryTheory.Functor C D\nG : CategoryTheory.Functor D E\ninst✝ : (F.comp G).ReflectsIsomorphisms\n⊢ F.ReflectsIsomorphisms","decl":"lemma reflectsIsomorphisms_of_comp (F : C ⥤ D) (G : D ⥤ E)\n    [(F ⋙ G).ReflectsIsomorphisms] : F.ReflectsIsomorphisms where\n  reflects f _ := by\n    rw [← isIso_iff_of_reflects_iso _ (F ⋙ G)]\n    dsimp\n    infer_instance\n\n"}
{"name":"CategoryTheory.reflectsIsomorphisms_of_reflectsMonomorphisms_of_reflectsEpimorphisms","module":"Mathlib.CategoryTheory.Functor.ReflectsIso","initialProofState":"C : Type u₁\ninst✝⁴ : CategoryTheory.Category.{v₁, u₁} C\nD : Type u₂\ninst✝³ : CategoryTheory.Category.{v₂, u₂} D\ninst✝² : CategoryTheory.Balanced C\nF : CategoryTheory.Functor C D\ninst✝¹ : F.ReflectsMonomorphisms\ninst✝ : F.ReflectsEpimorphisms\n⊢ F.ReflectsIsomorphisms","decl":"instance (priority := 100) reflectsIsomorphisms_of_reflectsMonomorphisms_of_reflectsEpimorphisms\n    [Balanced C] (F : C ⥤ D) [ReflectsMonomorphisms F] [ReflectsEpimorphisms F] :\n    F.ReflectsIsomorphisms where\n  reflects f hf := by\n    haveI : Epi f := epi_of_epi_map F inferInstance\n    haveI : Mono f := mono_of_mono_map F inferInstance\n    exact isIso_of_mono_of_epi f\n\n"}
{"name":"CategoryTheory.instReflectsIsomorphismsFunctorObjWhiskeringRight","module":"Mathlib.CategoryTheory.Functor.ReflectsIso","initialProofState":"C : Type u₁\ninst✝³ : CategoryTheory.Category.{v₁, u₁} C\nD : Type u₂\ninst✝² : CategoryTheory.Category.{v₂, u₂} D\nE : Type u₃\ninst✝¹ : CategoryTheory.Category.{v₃, u₃} E\nF : CategoryTheory.Functor D E\ninst✝ : F.ReflectsIsomorphisms\n⊢ ((CategoryTheory.whiskeringRight C D E).obj F).ReflectsIsomorphisms","decl":"instance (F : D ⥤ E) [F.ReflectsIsomorphisms] :\n    ((whiskeringRight C D E).obj F).ReflectsIsomorphisms where\n  reflects {X Y} f _ := by\n    rw [NatTrans.isIso_iff_isIso_app]\n    intro Z\n    rw [← isIso_iff_of_reflects_iso _ F]\n    change IsIso ((((whiskeringRight C D E).obj F).map f).app Z)\n    infer_instance\n\n"}
{"name":"CategoryTheory.Functor.balanced_of_preserves","module":"Mathlib.CategoryTheory.Functor.ReflectsIso","initialProofState":"C : Type u₁\ninst✝⁵ : CategoryTheory.Category.{v₁, u₁} C\nD : Type u₂\ninst✝⁴ : CategoryTheory.Category.{v₂, u₂} D\nF : CategoryTheory.Functor C D\ninst✝³ : F.ReflectsIsomorphisms\ninst✝² : F.PreservesEpimorphisms\ninst✝¹ : F.PreservesMonomorphisms\ninst✝ : CategoryTheory.Balanced D\n⊢ CategoryTheory.Balanced C","decl":"lemma Functor.balanced_of_preserves (F : C ⥤ D)\n    [F.ReflectsIsomorphisms] [F.PreservesEpimorphisms] [F.PreservesMonomorphisms] [Balanced D] :\n    Balanced C where\n  isIso_of_mono_of_epi f _ _ := by\n    rw [← isIso_iff_of_reflects_iso (F := F)]\n    exact isIso_of_mono_of_epi _\n\n"}
