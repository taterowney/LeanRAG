{"name":"ProbabilityTheory.poissonPMFRealSum","module":"Mathlib.Probability.Distributions.Poisson","initialProofState":"r : NNReal\n⊢ HasSum (fun n => ProbabilityTheory.poissonPMFReal r n) 1","decl":"lemma poissonPMFRealSum (r : ℝ≥0) : HasSum (fun n ↦ poissonPMFReal r n) 1 := by\n  let r := r.toReal\n  unfold poissonPMFReal\n  apply (hasSum_mul_left_iff (exp_ne_zero r)).mp\n  simp only [mul_one]\n  have : (fun i ↦ rexp r * (rexp (-r) * r ^ i / ↑(Nat.factorial i))) =\n      fun i ↦ r ^ i / ↑(Nat.factorial i) := by\n    ext n\n    rw [mul_div_assoc, exp_neg, ← mul_assoc, ← div_eq_mul_inv, div_self (exp_ne_zero r), one_mul]\n  rw [this, exp_eq_exp_ℝ]\n  exact NormedSpace.expSeries_div_hasSum_exp ℝ r\n\n"}
{"name":"ProbabilityTheory.poissonPMFReal_pos","module":"Mathlib.Probability.Distributions.Poisson","initialProofState":"r : NNReal\nn : Nat\nhr : LT.lt 0 r\n⊢ LT.lt 0 (ProbabilityTheory.poissonPMFReal r n)","decl":"/-- The Poisson pmf is positive for all natural numbers -/\nlemma poissonPMFReal_pos {r : ℝ≥0} {n : ℕ} (hr : 0 < r) : 0 < poissonPMFReal r n := by\n  rw [poissonPMFReal]\n  positivity\n\n"}
{"name":"ProbabilityTheory.poissonPMFReal_nonneg","module":"Mathlib.Probability.Distributions.Poisson","initialProofState":"r : NNReal\nn : Nat\n⊢ LE.le 0 (ProbabilityTheory.poissonPMFReal r n)","decl":"lemma poissonPMFReal_nonneg {r : ℝ≥0} {n : ℕ} : 0 ≤ poissonPMFReal r n := by\n  unfold poissonPMFReal\n  positivity\n\n"}
{"name":"ProbabilityTheory.measurable_poissonPMFReal","module":"Mathlib.Probability.Distributions.Poisson","initialProofState":"r : NNReal\n⊢ Measurable (ProbabilityTheory.poissonPMFReal r)","decl":"/-- The Poisson pmf is measurable. -/\n@[measurability]\nlemma measurable_poissonPMFReal (r : ℝ≥0) : Measurable (poissonPMFReal r) := by measurability\n\n"}
{"name":"ProbabilityTheory.stronglyMeasurable_poissonPMFReal","module":"Mathlib.Probability.Distributions.Poisson","initialProofState":"r : NNReal\n⊢ MeasureTheory.StronglyMeasurable (ProbabilityTheory.poissonPMFReal r)","decl":"@[measurability]\nlemma stronglyMeasurable_poissonPMFReal (r : ℝ≥0) : StronglyMeasurable (poissonPMFReal r) :=\n  stronglyMeasurable_iff_measurable.mpr (measurable_poissonPMFReal r)\n\n"}
{"name":"ProbabilityTheory.isProbabilityMeasurePoisson","module":"Mathlib.Probability.Distributions.Poisson","initialProofState":"r : NNReal\n⊢ MeasureTheory.IsProbabilityMeasure (ProbabilityTheory.poissonMeasure r)","decl":"instance isProbabilityMeasurePoisson (r : ℝ≥0) :\n    IsProbabilityMeasure (poissonMeasure r) := PMF.toMeasure.isProbabilityMeasure (poissonPMF r)\n\n"}
