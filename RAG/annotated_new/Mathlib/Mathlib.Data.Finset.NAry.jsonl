{"name":"Finset.mem_image₂","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\nc : γ\n⊢ Iff (Membership.mem (Finset.image₂ f s t) c) (Exists fun a => And (Membership.mem s a) (Exists fun b => And (Membership.mem t b) (Eq (f a b) c)))","decl":"@[simp]\ntheorem mem_image₂ : c ∈ image₂ f s t ↔ ∃ a ∈ s, ∃ b ∈ t, f a b = c := by\n  simp [image₂, and_assoc]\n\n"}
{"name":"Finset.coe_image₂","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\n⊢ Eq (↑(Finset.image₂ f s t)) (Set.image2 f ↑s ↑t)","decl":"@[simp, norm_cast]\ntheorem coe_image₂ (f : α → β → γ) (s : Finset α) (t : Finset β) :\n    (image₂ f s t : Set γ) = Set.image2 f s t :=\n  Set.ext fun _ => mem_image₂\n\n"}
{"name":"Finset.card_image₂_le","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\n⊢ LE.le (Finset.image₂ f s t).card (HMul.hMul s.card t.card)","decl":"theorem card_image₂_le (f : α → β → γ) (s : Finset α) (t : Finset β) :\n    #(image₂ f s t) ≤ #s * #t :=\n  card_image_le.trans_eq <| card_product _ _\n\n"}
{"name":"Finset.card_image₂_iff","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\n⊢ Iff (Eq (Finset.image₂ f s t).card (HMul.hMul s.card t.card)) (Set.InjOn (fun x => f x.1 x.2) (SProd.sprod ↑s ↑t))","decl":"theorem card_image₂_iff :\n    #(image₂ f s t) = #s * #t ↔ (s ×ˢ t : Set (α × β)).InjOn fun x => f x.1 x.2 := by\n  rw [← card_product, ← coe_product]\n  exact card_image_iff\n\n"}
{"name":"Finset.card_image₂","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\nhf : Function.Injective2 f\ns : Finset α\nt : Finset β\n⊢ Eq (Finset.image₂ f s t).card (HMul.hMul s.card t.card)","decl":"theorem card_image₂ (hf : Injective2 f) (s : Finset α) (t : Finset β) :\n    #(image₂ f s t) = #s * #t :=\n  (card_image_of_injective _ hf.uncurry).trans <| card_product _ _\n\n"}
{"name":"Finset.mem_image₂_of_mem","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\na : α\nb : β\nha : Membership.mem s a\nhb : Membership.mem t b\n⊢ Membership.mem (Finset.image₂ f s t) (f a b)","decl":"theorem mem_image₂_of_mem (ha : a ∈ s) (hb : b ∈ t) : f a b ∈ image₂ f s t :=\n  mem_image₂.2 ⟨a, ha, b, hb, rfl⟩\n\n"}
{"name":"Finset.mem_image₂_iff","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\na : α\nb : β\nhf : Function.Injective2 f\n⊢ Iff (Membership.mem (Finset.image₂ f s t) (f a b)) (And (Membership.mem s a) (Membership.mem t b))","decl":"theorem mem_image₂_iff (hf : Injective2 f) : f a b ∈ image₂ f s t ↔ a ∈ s ∧ b ∈ t := by\n  rw [← mem_coe, coe_image₂, mem_image2_iff hf, mem_coe, mem_coe]\n\n"}
{"name":"Finset.image₂_subset","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns s' : Finset α\nt t' : Finset β\nhs : HasSubset.Subset s s'\nht : HasSubset.Subset t t'\n⊢ HasSubset.Subset (Finset.image₂ f s t) (Finset.image₂ f s' t')","decl":"@[gcongr]\ntheorem image₂_subset (hs : s ⊆ s') (ht : t ⊆ t') : image₂ f s t ⊆ image₂ f s' t' := by\n  rw [← coe_subset, coe_image₂, coe_image₂]\n  exact image2_subset hs ht\n\n"}
{"name":"Finset.image₂_subset_left","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt t' : Finset β\nht : HasSubset.Subset t t'\n⊢ HasSubset.Subset (Finset.image₂ f s t) (Finset.image₂ f s t')","decl":"@[gcongr]\ntheorem image₂_subset_left (ht : t ⊆ t') : image₂ f s t ⊆ image₂ f s t' :=\n  image₂_subset Subset.rfl ht\n\n"}
{"name":"Finset.image₂_subset_right","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns s' : Finset α\nt : Finset β\nhs : HasSubset.Subset s s'\n⊢ HasSubset.Subset (Finset.image₂ f s t) (Finset.image₂ f s' t)","decl":"@[gcongr]\ntheorem image₂_subset_right (hs : s ⊆ s') : image₂ f s t ⊆ image₂ f s' t :=\n  image₂_subset hs Subset.rfl\n\n"}
{"name":"Finset.image_subset_image₂_left","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\nb : β\nhb : Membership.mem t b\n⊢ HasSubset.Subset (Finset.image (fun a => f a b) s) (Finset.image₂ f s t)","decl":"theorem image_subset_image₂_left (hb : b ∈ t) : s.image (fun a => f a b) ⊆ image₂ f s t :=\n  image_subset_iff.2 fun _ ha => mem_image₂_of_mem ha hb\n\n"}
{"name":"Finset.image_subset_image₂_right","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\na : α\nha : Membership.mem s a\n⊢ HasSubset.Subset (Finset.image (fun b => f a b) t) (Finset.image₂ f s t)","decl":"theorem image_subset_image₂_right (ha : a ∈ s) : t.image (fun b => f a b) ⊆ image₂ f s t :=\n  image_subset_iff.2 fun _ => mem_image₂_of_mem ha\n\n"}
{"name":"Finset.forall_mem_image₂","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\np : γ → Prop\n⊢ Iff (∀ (z : γ), Membership.mem (Finset.image₂ f s t) z → p z) (∀ (x : α), Membership.mem s x → ∀ (y : β), Membership.mem t y → p (f x y))","decl":"lemma forall_mem_image₂ {p : γ → Prop} :\n    (∀ z ∈ image₂ f s t, p z) ↔ ∀ x ∈ s, ∀ y ∈ t, p (f x y) := by\n  simp_rw [← mem_coe, coe_image₂, forall_mem_image2]\n\n"}
{"name":"Finset.exists_mem_image₂","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\np : γ → Prop\n⊢ Iff (Exists fun z => And (Membership.mem (Finset.image₂ f s t) z) (p z)) (Exists fun x => And (Membership.mem s x) (Exists fun y => And (Membership.mem t y) (p (f x y))))","decl":"lemma exists_mem_image₂ {p : γ → Prop} :\n    (∃ z ∈ image₂ f s t, p z) ↔ ∃ x ∈ s, ∃ y ∈ t, p (f x y) := by\n  simp_rw [← mem_coe, coe_image₂, exists_mem_image2]\n\n"}
{"name":"Finset.forall_image₂_iff","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\np : γ → Prop\n⊢ Iff (∀ (z : γ), Membership.mem (Finset.image₂ f s t) z → p z) (∀ (x : α), Membership.mem s x → ∀ (y : β), Membership.mem t y → p (f x y))","decl":"@[deprecated (since := \"2024-11-23\")] alias forall_image₂_iff := forall_mem_image₂\n\n"}
{"name":"Finset.image₂_subset_iff","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\nu : Finset γ\n⊢ Iff (HasSubset.Subset (Finset.image₂ f s t) u) (∀ (x : α), Membership.mem s x → ∀ (y : β), Membership.mem t y → Membership.mem u (f x y))","decl":"@[simp]\ntheorem image₂_subset_iff : image₂ f s t ⊆ u ↔ ∀ x ∈ s, ∀ y ∈ t, f x y ∈ u :=\n  forall_mem_image₂\n\n"}
{"name":"Finset.image₂_subset_iff_left","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\nu : Finset γ\n⊢ Iff (HasSubset.Subset (Finset.image₂ f s t) u) (∀ (a : α), Membership.mem s a → HasSubset.Subset (Finset.image (fun b => f a b) t) u)","decl":"theorem image₂_subset_iff_left : image₂ f s t ⊆ u ↔ ∀ a ∈ s, (t.image fun b => f a b) ⊆ u := by\n  simp_rw [image₂_subset_iff, image_subset_iff]\n\n"}
{"name":"Finset.image₂_subset_iff_right","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\nu : Finset γ\n⊢ Iff (HasSubset.Subset (Finset.image₂ f s t) u) (∀ (b : β), Membership.mem t b → HasSubset.Subset (Finset.image (fun a => f a b) s) u)","decl":"theorem image₂_subset_iff_right : image₂ f s t ⊆ u ↔ ∀ b ∈ t, (s.image fun a => f a b) ⊆ u := by\n  simp_rw [image₂_subset_iff, image_subset_iff, @forall₂_swap α]\n\n"}
{"name":"Finset.image₂_nonempty_iff","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\n⊢ Iff (Finset.image₂ f s t).Nonempty (And s.Nonempty t.Nonempty)","decl":"@[simp]\ntheorem image₂_nonempty_iff : (image₂ f s t).Nonempty ↔ s.Nonempty ∧ t.Nonempty := by\n  rw [← coe_nonempty, coe_image₂]\n  exact image2_nonempty_iff\n\n"}
{"name":"Finset.Nonempty.image₂","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\nhs : s.Nonempty\nht : t.Nonempty\n⊢ (Finset.image₂ f s t).Nonempty","decl":"@[aesop safe apply (rule_sets := [finsetNonempty])]\ntheorem Nonempty.image₂ (hs : s.Nonempty) (ht : t.Nonempty) : (image₂ f s t).Nonempty :=\n  image₂_nonempty_iff.2 ⟨hs, ht⟩\n\n"}
{"name":"Finset.Nonempty.of_image₂_left","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\nh : (Finset.image₂ f s t).Nonempty\n⊢ s.Nonempty","decl":"theorem Nonempty.of_image₂_left (h : (s.image₂ f t).Nonempty) : s.Nonempty :=\n  (image₂_nonempty_iff.1 h).1\n\n"}
{"name":"Finset.Nonempty.of_image₂_right","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\nh : (Finset.image₂ f s t).Nonempty\n⊢ t.Nonempty","decl":"theorem Nonempty.of_image₂_right (h : (s.image₂ f t).Nonempty) : t.Nonempty :=\n  (image₂_nonempty_iff.1 h).2\n\n"}
{"name":"Finset.image₂_empty_left","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\nt : Finset β\n⊢ Eq (Finset.image₂ f EmptyCollection.emptyCollection t) EmptyCollection.emptyCollection","decl":"@[simp]\ntheorem image₂_empty_left : image₂ f ∅ t = ∅ :=\n  coe_injective <| by simp\n\n"}
{"name":"Finset.image₂_empty_right","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\n⊢ Eq (Finset.image₂ f s EmptyCollection.emptyCollection) EmptyCollection.emptyCollection","decl":"@[simp]\ntheorem image₂_empty_right : image₂ f s ∅ = ∅ :=\n  coe_injective <| by simp\n\n"}
{"name":"Finset.image₂_eq_empty_iff","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\n⊢ Iff (Eq (Finset.image₂ f s t) EmptyCollection.emptyCollection) (Or (Eq s EmptyCollection.emptyCollection) (Eq t EmptyCollection.emptyCollection))","decl":"@[simp]\ntheorem image₂_eq_empty_iff : image₂ f s t = ∅ ↔ s = ∅ ∨ t = ∅ := by\n  simp_rw [← not_nonempty_iff_eq_empty, image₂_nonempty_iff, not_and_or]\n\n"}
{"name":"Finset.image₂_singleton_left","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\nt : Finset β\na : α\n⊢ Eq (Finset.image₂ f (Singleton.singleton a) t) (Finset.image (fun b => f a b) t)","decl":"@[simp]\ntheorem image₂_singleton_left : image₂ f {a} t = t.image fun b => f a b :=\n  ext fun x => by simp\n\n"}
{"name":"Finset.image₂_singleton_right","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nb : β\n⊢ Eq (Finset.image₂ f s (Singleton.singleton b)) (Finset.image (fun a => f a b) s)","decl":"@[simp]\ntheorem image₂_singleton_right : image₂ f s {b} = s.image fun a => f a b :=\n  ext fun x => by simp\n\n"}
{"name":"Finset.image₂_singleton_left'","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\nt : Finset β\na : α\n⊢ Eq (Finset.image₂ f (Singleton.singleton a) t) (Finset.image (f a) t)","decl":"theorem image₂_singleton_left' : image₂ f {a} t = t.image (f a) :=\n  image₂_singleton_left\n\n"}
{"name":"Finset.image₂_singleton","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\na : α\nb : β\n⊢ Eq (Finset.image₂ f (Singleton.singleton a) (Singleton.singleton b)) (Singleton.singleton (f a b))","decl":"theorem image₂_singleton : image₂ f {a} {b} = {f a b} := by simp\n\n"}
{"name":"Finset.image₂_union_left","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝¹ : DecidableEq γ\nf : α → β → γ\ns s' : Finset α\nt : Finset β\ninst✝ : DecidableEq α\n⊢ Eq (Finset.image₂ f (Union.union s s') t) (Union.union (Finset.image₂ f s t) (Finset.image₂ f s' t))","decl":"theorem image₂_union_left [DecidableEq α] : image₂ f (s ∪ s') t = image₂ f s t ∪ image₂ f s' t :=\n  coe_injective <| by\n    push_cast\n    exact image2_union_left\n\n"}
{"name":"Finset.image₂_union_right","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝¹ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt t' : Finset β\ninst✝ : DecidableEq β\n⊢ Eq (Finset.image₂ f s (Union.union t t')) (Union.union (Finset.image₂ f s t) (Finset.image₂ f s t'))","decl":"theorem image₂_union_right [DecidableEq β] : image₂ f s (t ∪ t') = image₂ f s t ∪ image₂ f s t' :=\n  coe_injective <| by\n    push_cast\n    exact image2_union_right\n\n"}
{"name":"Finset.image₂_insert_left","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝¹ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\na : α\ninst✝ : DecidableEq α\n⊢ Eq (Finset.image₂ f (Insert.insert a s) t) (Union.union (Finset.image (fun b => f a b) t) (Finset.image₂ f s t))","decl":"@[simp]\ntheorem image₂_insert_left [DecidableEq α] :\n    image₂ f (insert a s) t = (t.image fun b => f a b) ∪ image₂ f s t :=\n  coe_injective <| by\n    push_cast\n    exact image2_insert_left\n\n"}
{"name":"Finset.image₂_insert_right","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝¹ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\nb : β\ninst✝ : DecidableEq β\n⊢ Eq (Finset.image₂ f s (Insert.insert b t)) (Union.union (Finset.image (fun a => f a b) s) (Finset.image₂ f s t))","decl":"@[simp]\ntheorem image₂_insert_right [DecidableEq β] :\n    image₂ f s (insert b t) = (s.image fun a => f a b) ∪ image₂ f s t :=\n  coe_injective <| by\n    push_cast\n    exact image2_insert_right\n\n"}
{"name":"Finset.image₂_inter_left","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝¹ : DecidableEq γ\nf : α → β → γ\ns s' : Finset α\nt : Finset β\ninst✝ : DecidableEq α\nhf : Function.Injective2 f\n⊢ Eq (Finset.image₂ f (Inter.inter s s') t) (Inter.inter (Finset.image₂ f s t) (Finset.image₂ f s' t))","decl":"theorem image₂_inter_left [DecidableEq α] (hf : Injective2 f) :\n    image₂ f (s ∩ s') t = image₂ f s t ∩ image₂ f s' t :=\n  coe_injective <| by\n    push_cast\n    exact image2_inter_left hf\n\n"}
{"name":"Finset.image₂_inter_right","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝¹ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt t' : Finset β\ninst✝ : DecidableEq β\nhf : Function.Injective2 f\n⊢ Eq (Finset.image₂ f s (Inter.inter t t')) (Inter.inter (Finset.image₂ f s t) (Finset.image₂ f s t'))","decl":"theorem image₂_inter_right [DecidableEq β] (hf : Injective2 f) :\n    image₂ f s (t ∩ t') = image₂ f s t ∩ image₂ f s t' :=\n  coe_injective <| by\n    push_cast\n    exact image2_inter_right hf\n\n"}
{"name":"Finset.image₂_inter_subset_left","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝¹ : DecidableEq γ\nf : α → β → γ\ns s' : Finset α\nt : Finset β\ninst✝ : DecidableEq α\n⊢ HasSubset.Subset (Finset.image₂ f (Inter.inter s s') t) (Inter.inter (Finset.image₂ f s t) (Finset.image₂ f s' t))","decl":"theorem image₂_inter_subset_left [DecidableEq α] :\n    image₂ f (s ∩ s') t ⊆ image₂ f s t ∩ image₂ f s' t :=\n  coe_subset.1 <| by\n    push_cast\n    exact image2_inter_subset_left\n\n"}
{"name":"Finset.image₂_inter_subset_right","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝¹ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt t' : Finset β\ninst✝ : DecidableEq β\n⊢ HasSubset.Subset (Finset.image₂ f s (Inter.inter t t')) (Inter.inter (Finset.image₂ f s t) (Finset.image₂ f s t'))","decl":"theorem image₂_inter_subset_right [DecidableEq β] :\n    image₂ f s (t ∩ t') ⊆ image₂ f s t ∩ image₂ f s t' :=\n  coe_subset.1 <| by\n    push_cast\n    exact image2_inter_subset_right\n\n"}
{"name":"Finset.image₂_congr","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf f' : α → β → γ\ns : Finset α\nt : Finset β\nh : ∀ (a : α), Membership.mem s a → ∀ (b : β), Membership.mem t b → Eq (f a b) (f' a b)\n⊢ Eq (Finset.image₂ f s t) (Finset.image₂ f' s t)","decl":"theorem image₂_congr (h : ∀ a ∈ s, ∀ b ∈ t, f a b = f' a b) : image₂ f s t = image₂ f' s t :=\n  coe_injective <| by\n    push_cast\n    exact image2_congr h\n\n"}
{"name":"Finset.image₂_congr'","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf f' : α → β → γ\ns : Finset α\nt : Finset β\nh : ∀ (a : α) (b : β), Eq (f a b) (f' a b)\n⊢ Eq (Finset.image₂ f s t) (Finset.image₂ f' s t)","decl":"/-- A common special case of `image₂_congr` -/\ntheorem image₂_congr' (h : ∀ a b, f a b = f' a b) : image₂ f s t = image₂ f' s t :=\n  image₂_congr fun a _ b _ => h a b\n\n"}
{"name":"Finset.card_image₂_singleton_left","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\nt : Finset β\na : α\nhf : Function.Injective (f a)\n⊢ Eq (Finset.image₂ f (Singleton.singleton a) t).card t.card","decl":"theorem card_image₂_singleton_left (hf : Injective (f a)) : #(image₂ f {a} t) = #t := by\n  rw [image₂_singleton_left, card_image_of_injective _ hf]\n\n"}
{"name":"Finset.card_image₂_singleton_right","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nb : β\nhf : Function.Injective fun a => f a b\n⊢ Eq (Finset.image₂ f s (Singleton.singleton b)).card s.card","decl":"theorem card_image₂_singleton_right (hf : Injective fun a => f a b) :\n    #(image₂ f s {b}) = #s := by rw [image₂_singleton_right, card_image_of_injective _ hf]\n\n"}
{"name":"Finset.image₂_singleton_inter","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝¹ : DecidableEq γ\nf : α → β → γ\na : α\ninst✝ : DecidableEq β\nt₁ t₂ : Finset β\nhf : Function.Injective (f a)\n⊢ Eq (Finset.image₂ f (Singleton.singleton a) (Inter.inter t₁ t₂)) (Inter.inter (Finset.image₂ f (Singleton.singleton a) t₁) (Finset.image₂ f (Singleton.singleton a) t₂))","decl":"theorem image₂_singleton_inter [DecidableEq β] (t₁ t₂ : Finset β) (hf : Injective (f a)) :\n    image₂ f {a} (t₁ ∩ t₂) = image₂ f {a} t₁ ∩ image₂ f {a} t₂ := by\n  simp_rw [image₂_singleton_left, image_inter _ _ hf]\n\n"}
{"name":"Finset.image₂_inter_singleton","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝¹ : DecidableEq γ\nf : α → β → γ\nb : β\ninst✝ : DecidableEq α\ns₁ s₂ : Finset α\nhf : Function.Injective fun a => f a b\n⊢ Eq (Finset.image₂ f (Inter.inter s₁ s₂) (Singleton.singleton b)) (Inter.inter (Finset.image₂ f s₁ (Singleton.singleton b)) (Finset.image₂ f s₂ (Singleton.singleton b)))","decl":"theorem image₂_inter_singleton [DecidableEq α] (s₁ s₂ : Finset α) (hf : Injective fun a => f a b) :\n    image₂ f (s₁ ∩ s₂) {b} = image₂ f s₁ {b} ∩ image₂ f s₂ {b} := by\n  simp_rw [image₂_singleton_right, image_inter _ _ hf]\n\n"}
{"name":"Finset.card_le_card_image₂_left","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\nt : Finset β\ns : Finset α\nhs : s.Nonempty\nhf : ∀ (a : α), Function.Injective (f a)\n⊢ LE.le t.card (Finset.image₂ f s t).card","decl":"theorem card_le_card_image₂_left {s : Finset α} (hs : s.Nonempty) (hf : ∀ a, Injective (f a)) :\n    #t ≤ #(image₂ f s t) := by\n  obtain ⟨a, ha⟩ := hs\n  rw [← card_image₂_singleton_left _ (hf a)]\n  exact card_le_card (image₂_subset_right <| singleton_subset_iff.2 ha)\n\n"}
{"name":"Finset.card_le_card_image₂_right","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\nht : t.Nonempty\nhf : ∀ (b : β), Function.Injective fun a => f a b\n⊢ LE.le s.card (Finset.image₂ f s t).card","decl":"theorem card_le_card_image₂_right {t : Finset β} (ht : t.Nonempty)\n    (hf : ∀ b, Injective fun a => f a b) : #s ≤ #(image₂ f s t) := by\n  obtain ⟨b, hb⟩ := ht\n  rw [← card_image₂_singleton_right _ (hf b)]\n  exact card_le_card (image₂_subset_left <| singleton_subset_iff.2 hb)\n\n"}
{"name":"Finset.biUnion_image_left","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\n⊢ Eq (s.biUnion fun a => Finset.image (f a) t) (Finset.image₂ f s t)","decl":"theorem biUnion_image_left : (s.biUnion fun a => t.image <| f a) = image₂ f s t :=\n  coe_injective <| by\n    push_cast\n    exact Set.iUnion_image_left _\n\n"}
{"name":"Finset.biUnion_image_right","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\n⊢ Eq (t.biUnion fun b => Finset.image (fun a => f a b) s) (Finset.image₂ f s t)","decl":"theorem biUnion_image_right : (t.biUnion fun b => s.image fun a => f a b) = image₂ f s t :=\n  coe_injective <| by\n    push_cast\n    exact Set.iUnion_image_right _\n\n"}
{"name":"Finset.image_image₂","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\nδ : Type u_7\ninst✝¹ : DecidableEq γ\ns : Finset α\nt : Finset β\ninst✝ : DecidableEq δ\nf : α → β → γ\ng : γ → δ\n⊢ Eq (Finset.image g (Finset.image₂ f s t)) (Finset.image₂ (fun a b => g (f a b)) s t)","decl":"theorem image_image₂ (f : α → β → γ) (g : γ → δ) :\n    (image₂ f s t).image g = image₂ (fun a b => g (f a b)) s t :=\n  coe_injective <| by\n    push_cast\n    exact image_image2 _ _\n\n"}
{"name":"Finset.image₂_image_left","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\nδ : Type u_7\ninst✝¹ : DecidableEq γ\ns : Finset α\nt : Finset β\ninst✝ : DecidableEq δ\nf : γ → β → δ\ng : α → γ\n⊢ Eq (Finset.image₂ f (Finset.image g s) t) (Finset.image₂ (fun a b => f (g a) b) s t)","decl":"theorem image₂_image_left (f : γ → β → δ) (g : α → γ) :\n    image₂ f (s.image g) t = image₂ (fun a b => f (g a) b) s t :=\n  coe_injective <| by\n    push_cast\n    exact image2_image_left _ _\n\n"}
{"name":"Finset.image₂_image_right","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\nδ : Type u_7\ninst✝¹ : DecidableEq γ\ns : Finset α\nt : Finset β\ninst✝ : DecidableEq δ\nf : α → γ → δ\ng : β → γ\n⊢ Eq (Finset.image₂ f s (Finset.image g t)) (Finset.image₂ (fun a b => f a (g b)) s t)","decl":"theorem image₂_image_right (f : α → γ → δ) (g : β → γ) :\n    image₂ f s (t.image g) = image₂ (fun a b => f a (g b)) s t :=\n  coe_injective <| by\n    push_cast\n    exact image2_image_right _ _\n\n"}
{"name":"Finset.image₂_mk_eq_product","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\ninst✝¹ : DecidableEq α\ninst✝ : DecidableEq β\ns : Finset α\nt : Finset β\n⊢ Eq (Finset.image₂ Prod.mk s t) (SProd.sprod s t)","decl":"@[simp]\ntheorem image₂_mk_eq_product [DecidableEq α] [DecidableEq β] (s : Finset α) (t : Finset β) :\n    image₂ Prod.mk s t = s ×ˢ t := by ext; simp [Prod.ext_iff]\n\n"}
{"name":"Finset.image₂_curry","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : Prod α β → γ\ns : Finset α\nt : Finset β\n⊢ Eq (Finset.image₂ (Function.curry f) s t) (Finset.image f (SProd.sprod s t))","decl":"@[simp]\ntheorem image₂_curry (f : α × β → γ) (s : Finset α) (t : Finset β) :\n    image₂ (curry f) s t = (s ×ˢ t).image f := rfl\n\n"}
{"name":"Finset.image_uncurry_product","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\n⊢ Eq (Finset.image (Function.uncurry f) (SProd.sprod s t)) (Finset.image₂ f s t)","decl":"@[simp]\ntheorem image_uncurry_product (f : α → β → γ) (s : Finset α) (t : Finset β) :\n    (s ×ˢ t).image (uncurry f) = image₂ f s t := rfl\n\n"}
{"name":"Finset.image₂_swap","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\n⊢ Eq (Finset.image₂ f s t) (Finset.image₂ (fun a b => f b a) t s)","decl":"theorem image₂_swap (f : α → β → γ) (s : Finset α) (t : Finset β) :\n    image₂ f s t = image₂ (fun a b => f b a) t s :=\n  coe_injective <| by\n    push_cast\n    exact image2_swap _ _ _\n\n"}
{"name":"Finset.image₂_left","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\ns : Finset α\nt : Finset β\ninst✝ : DecidableEq α\nh : t.Nonempty\n⊢ Eq (Finset.image₂ (fun x x_1 => x) s t) s","decl":"@[simp]\ntheorem image₂_left [DecidableEq α] (h : t.Nonempty) : image₂ (fun x _ => x) s t = s :=\n  coe_injective <| by\n    push_cast\n    exact image2_left h\n\n"}
{"name":"Finset.image₂_right","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\ns : Finset α\nt : Finset β\ninst✝ : DecidableEq β\nh : s.Nonempty\n⊢ Eq (Finset.image₂ (fun x y => y) s t) t","decl":"@[simp]\ntheorem image₂_right [DecidableEq β] (h : s.Nonempty) : image₂ (fun _ y => y) s t = t :=\n  coe_injective <| by\n    push_cast\n    exact image2_right h\n\n"}
{"name":"Finset.image₂_assoc","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nδ : Type u_7\nε : Type u_9\nε' : Type u_10\ninst✝² : DecidableEq ε\ninst✝¹ : DecidableEq ε'\ns : Finset α\nt : Finset β\ninst✝ : DecidableEq δ\nγ : Type u_14\nu : Finset γ\nf : δ → γ → ε\ng : α → β → δ\nf' : α → ε' → ε\ng' : β → γ → ε'\nh_assoc : ∀ (a : α) (b : β) (c : γ), Eq (f (g a b) c) (f' a (g' b c))\n⊢ Eq (Finset.image₂ f (Finset.image₂ g s t) u) (Finset.image₂ f' s (Finset.image₂ g' t u))","decl":"theorem image₂_assoc {γ : Type*} {u : Finset γ}\n    {f : δ → γ → ε} {g : α → β → δ} {f' : α → ε' → ε}\n    {g' : β → γ → ε'} (h_assoc : ∀ a b c, f (g a b) c = f' a (g' b c)) :\n    image₂ f (image₂ g s t) u = image₂ f' s (image₂ g' t u) :=\n  coe_injective <| by\n    push_cast\n    exact image2_assoc h_assoc\n\n"}
{"name":"Finset.image₂_comm","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\ng : β → α → γ\nh_comm : ∀ (a : α) (b : β), Eq (f a b) (g b a)\n⊢ Eq (Finset.image₂ f s t) (Finset.image₂ g t s)","decl":"theorem image₂_comm {g : β → α → γ} (h_comm : ∀ a b, f a b = g b a) : image₂ f s t = image₂ g t s :=\n  (image₂_swap _ _ _).trans <| by simp_rw [h_comm]\n\n"}
{"name":"Finset.image₂_left_comm","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nδ : Type u_7\nδ' : Type u_8\nε : Type u_9\ninst✝² : DecidableEq δ'\ninst✝¹ : DecidableEq ε\ns : Finset α\nt : Finset β\ninst✝ : DecidableEq δ\nγ : Type u_14\nu : Finset γ\nf : α → δ → ε\ng : β → γ → δ\nf' : α → γ → δ'\ng' : β → δ' → ε\nh_left_comm : ∀ (a : α) (b : β) (c : γ), Eq (f a (g b c)) (g' b (f' a c))\n⊢ Eq (Finset.image₂ f s (Finset.image₂ g t u)) (Finset.image₂ g' t (Finset.image₂ f' s u))","decl":"theorem image₂_left_comm {γ : Type*} {u : Finset γ} {f : α → δ → ε} {g : β → γ → δ}\n    {f' : α → γ → δ'} {g' : β → δ' → ε} (h_left_comm : ∀ a b c, f a (g b c) = g' b (f' a c)) :\n    image₂ f s (image₂ g t u) = image₂ g' t (image₂ f' s u) :=\n  coe_injective <| by\n    push_cast\n    exact image2_left_comm h_left_comm\n\n"}
{"name":"Finset.image₂_right_comm","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nδ : Type u_7\nδ' : Type u_8\nε : Type u_9\ninst✝² : DecidableEq δ'\ninst✝¹ : DecidableEq ε\ns : Finset α\nt : Finset β\ninst✝ : DecidableEq δ\nγ : Type u_14\nu : Finset γ\nf : δ → γ → ε\ng : α → β → δ\nf' : α → γ → δ'\ng' : δ' → β → ε\nh_right_comm : ∀ (a : α) (b : β) (c : γ), Eq (f (g a b) c) (g' (f' a c) b)\n⊢ Eq (Finset.image₂ f (Finset.image₂ g s t) u) (Finset.image₂ g' (Finset.image₂ f' s u) t)","decl":"theorem image₂_right_comm {γ : Type*} {u : Finset γ} {f : δ → γ → ε} {g : α → β → δ}\n    {f' : α → γ → δ'} {g' : δ' → β → ε} (h_right_comm : ∀ a b c, f (g a b) c = g' (f' a c) b) :\n    image₂ f (image₂ g s t) u = image₂ g' (image₂ f' s u) t :=\n  coe_injective <| by\n    push_cast\n    exact image2_right_comm h_right_comm\n\n"}
{"name":"Finset.image₂_image₂_image₂_comm","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nε : Type u_9\nε' : Type u_10\nζ : Type u_11\nζ' : Type u_12\nν : Type u_13\ninst✝⁴ : DecidableEq ε\ninst✝³ : DecidableEq ε'\ns : Finset α\nt : Finset β\nγ : Type u_14\nδ : Type u_15\nu : Finset γ\nv : Finset δ\ninst✝² : DecidableEq ζ\ninst✝¹ : DecidableEq ζ'\ninst✝ : DecidableEq ν\nf : ε → ζ → ν\ng : α → β → ε\nh : γ → δ → ζ\nf' : ε' → ζ' → ν\ng' : α → γ → ε'\nh' : β → δ → ζ'\nh_comm : ∀ (a : α) (b : β) (c : γ) (d : δ), Eq (f (g a b) (h c d)) (f' (g' a c) (h' b d))\n⊢ Eq (Finset.image₂ f (Finset.image₂ g s t) (Finset.image₂ h u v)) (Finset.image₂ f' (Finset.image₂ g' s u) (Finset.image₂ h' t v))","decl":"theorem image₂_image₂_image₂_comm {γ δ : Type*} {u : Finset γ} {v : Finset δ} [DecidableEq ζ]\n    [DecidableEq ζ'] [DecidableEq ν] {f : ε → ζ → ν} {g : α → β → ε} {h : γ → δ → ζ}\n    {f' : ε' → ζ' → ν} {g' : α → γ → ε'} {h' : β → δ → ζ'}\n    (h_comm : ∀ a b c d, f (g a b) (h c d) = f' (g' a c) (h' b d)) :\n    image₂ f (image₂ g s t) (image₂ h u v) = image₂ f' (image₂ g' s u) (image₂ h' t v) :=\n  coe_injective <| by\n    push_cast\n    exact image2_image2_image2_comm h_comm\n\n"}
{"name":"Finset.image_image₂_distrib","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nα' : Type u_2\nβ : Type u_3\nβ' : Type u_4\nγ : Type u_5\nδ : Type u_7\ninst✝³ : DecidableEq α'\ninst✝² : DecidableEq β'\ninst✝¹ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\ninst✝ : DecidableEq δ\ng : γ → δ\nf' : α' → β' → δ\ng₁ : α → α'\ng₂ : β → β'\nh_distrib : ∀ (a : α) (b : β), Eq (g (f a b)) (f' (g₁ a) (g₂ b))\n⊢ Eq (Finset.image g (Finset.image₂ f s t)) (Finset.image₂ f' (Finset.image g₁ s) (Finset.image g₂ t))","decl":"theorem image_image₂_distrib {g : γ → δ} {f' : α' → β' → δ} {g₁ : α → α'} {g₂ : β → β'}\n    (h_distrib : ∀ a b, g (f a b) = f' (g₁ a) (g₂ b)) :\n    (image₂ f s t).image g = image₂ f' (s.image g₁) (t.image g₂) :=\n  coe_injective <| by\n    push_cast\n    exact image_image2_distrib h_distrib\n\n"}
{"name":"Finset.image_image₂_distrib_left","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nα' : Type u_2\nβ : Type u_3\nγ : Type u_5\nδ : Type u_7\ninst✝² : DecidableEq α'\ninst✝¹ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\ninst✝ : DecidableEq δ\ng : γ → δ\nf' : α' → β → δ\ng' : α → α'\nh_distrib : ∀ (a : α) (b : β), Eq (g (f a b)) (f' (g' a) b)\n⊢ Eq (Finset.image g (Finset.image₂ f s t)) (Finset.image₂ f' (Finset.image g' s) t)","decl":"/-- Symmetric statement to `Finset.image₂_image_left_comm`. -/\ntheorem image_image₂_distrib_left {g : γ → δ} {f' : α' → β → δ} {g' : α → α'}\n    (h_distrib : ∀ a b, g (f a b) = f' (g' a) b) :\n    (image₂ f s t).image g = image₂ f' (s.image g') t :=\n  coe_injective <| by\n    push_cast\n    exact image_image2_distrib_left h_distrib\n\n"}
{"name":"Finset.image_image₂_distrib_right","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nβ' : Type u_4\nγ : Type u_5\nδ : Type u_7\ninst✝² : DecidableEq β'\ninst✝¹ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\ninst✝ : DecidableEq δ\ng : γ → δ\nf' : α → β' → δ\ng' : β → β'\nh_distrib : ∀ (a : α) (b : β), Eq (g (f a b)) (f' a (g' b))\n⊢ Eq (Finset.image g (Finset.image₂ f s t)) (Finset.image₂ f' s (Finset.image g' t))","decl":"/-- Symmetric statement to `Finset.image_image₂_right_comm`. -/\ntheorem image_image₂_distrib_right {g : γ → δ} {f' : α → β' → δ} {g' : β → β'}\n    (h_distrib : ∀ a b, g (f a b) = f' a (g' b)) :\n    (image₂ f s t).image g = image₂ f' s (t.image g') :=\n  coe_injective <| by\n    push_cast\n    exact image_image2_distrib_right h_distrib\n\n"}
{"name":"Finset.image₂_image_left_comm","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nα' : Type u_2\nβ : Type u_3\nγ : Type u_5\nδ : Type u_7\ninst✝² : DecidableEq α'\ninst✝¹ : DecidableEq γ\ns : Finset α\nt : Finset β\ninst✝ : DecidableEq δ\nf : α' → β → γ\ng : α → α'\nf' : α → β → δ\ng' : δ → γ\nh_left_comm : ∀ (a : α) (b : β), Eq (f (g a) b) (g' (f' a b))\n⊢ Eq (Finset.image₂ f (Finset.image g s) t) (Finset.image g' (Finset.image₂ f' s t))","decl":"/-- Symmetric statement to `Finset.image_image₂_distrib_left`. -/\ntheorem image₂_image_left_comm {f : α' → β → γ} {g : α → α'} {f' : α → β → δ} {g' : δ → γ}\n    (h_left_comm : ∀ a b, f (g a) b = g' (f' a b)) :\n    image₂ f (s.image g) t = (image₂ f' s t).image g' :=\n  (image_image₂_distrib_left fun a b => (h_left_comm a b).symm).symm\n\n"}
{"name":"Finset.image_image₂_right_comm","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nβ' : Type u_4\nγ : Type u_5\nδ : Type u_7\ninst✝² : DecidableEq β'\ninst✝¹ : DecidableEq γ\ns : Finset α\nt : Finset β\ninst✝ : DecidableEq δ\nf : α → β' → γ\ng : β → β'\nf' : α → β → δ\ng' : δ → γ\nh_right_comm : ∀ (a : α) (b : β), Eq (f a (g b)) (g' (f' a b))\n⊢ Eq (Finset.image₂ f s (Finset.image g t)) (Finset.image g' (Finset.image₂ f' s t))","decl":"/-- Symmetric statement to `Finset.image_image₂_distrib_right`. -/\ntheorem image_image₂_right_comm {f : α → β' → γ} {g : β → β'} {f' : α → β → δ} {g' : δ → γ}\n    (h_right_comm : ∀ a b, f a (g b) = g' (f' a b)) :\n    image₂ f s (t.image g) = (image₂ f' s t).image g' :=\n  (image_image₂_distrib_right fun a b => (h_right_comm a b).symm).symm\n\n"}
{"name":"Finset.image₂_distrib_subset_left","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nβ' : Type u_4\nγ' : Type u_6\nδ : Type u_7\nε : Type u_9\ninst✝³ : DecidableEq β'\ninst✝² : DecidableEq γ'\ninst✝¹ : DecidableEq ε\ns : Finset α\nt : Finset β\ninst✝ : DecidableEq δ\nγ : Type u_14\nu : Finset γ\nf : α → δ → ε\ng : β → γ → δ\nf₁ : α → β → β'\nf₂ : α → γ → γ'\ng' : β' → γ' → ε\nh_distrib : ∀ (a : α) (b : β) (c : γ), Eq (f a (g b c)) (g' (f₁ a b) (f₂ a c))\n⊢ HasSubset.Subset (Finset.image₂ f s (Finset.image₂ g t u)) (Finset.image₂ g' (Finset.image₂ f₁ s t) (Finset.image₂ f₂ s u))","decl":"/-- The other direction does not hold because of the `s`-`s` cross terms on the RHS. -/\ntheorem image₂_distrib_subset_left {γ : Type*} {u : Finset γ} {f : α → δ → ε} {g : β → γ → δ}\n    {f₁ : α → β → β'} {f₂ : α → γ → γ'} {g' : β' → γ' → ε}\n    (h_distrib : ∀ a b c, f a (g b c) = g' (f₁ a b) (f₂ a c)) :\n    image₂ f s (image₂ g t u) ⊆ image₂ g' (image₂ f₁ s t) (image₂ f₂ s u) :=\n  coe_subset.1 <| by\n    push_cast\n    exact Set.image2_distrib_subset_left h_distrib\n\n"}
{"name":"Finset.image₂_distrib_subset_right","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nα' : Type u_2\nβ : Type u_3\nβ' : Type u_4\nδ : Type u_7\nε : Type u_9\ninst✝³ : DecidableEq α'\ninst✝² : DecidableEq β'\ninst✝¹ : DecidableEq ε\ns : Finset α\nt : Finset β\ninst✝ : DecidableEq δ\nγ : Type u_14\nu : Finset γ\nf : δ → γ → ε\ng : α → β → δ\nf₁ : α → γ → α'\nf₂ : β → γ → β'\ng' : α' → β' → ε\nh_distrib : ∀ (a : α) (b : β) (c : γ), Eq (f (g a b) c) (g' (f₁ a c) (f₂ b c))\n⊢ HasSubset.Subset (Finset.image₂ f (Finset.image₂ g s t) u) (Finset.image₂ g' (Finset.image₂ f₁ s u) (Finset.image₂ f₂ t u))","decl":"/-- The other direction does not hold because of the `u`-`u` cross terms on the RHS. -/\ntheorem image₂_distrib_subset_right {γ : Type*} {u : Finset γ} {f : δ → γ → ε} {g : α → β → δ}\n    {f₁ : α → γ → α'} {f₂ : β → γ → β'} {g' : α' → β' → ε}\n    (h_distrib : ∀ a b c, f (g a b) c = g' (f₁ a c) (f₂ b c)) :\n    image₂ f (image₂ g s t) u ⊆ image₂ g' (image₂ f₁ s u) (image₂ f₂ t u) :=\n  coe_subset.1 <| by\n    push_cast\n    exact Set.image2_distrib_subset_right h_distrib\n\n"}
{"name":"Finset.image_image₂_antidistrib","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nα' : Type u_2\nβ : Type u_3\nβ' : Type u_4\nγ : Type u_5\nδ : Type u_7\ninst✝³ : DecidableEq α'\ninst✝² : DecidableEq β'\ninst✝¹ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\ninst✝ : DecidableEq δ\ng : γ → δ\nf' : β' → α' → δ\ng₁ : β → β'\ng₂ : α → α'\nh_antidistrib : ∀ (a : α) (b : β), Eq (g (f a b)) (f' (g₁ b) (g₂ a))\n⊢ Eq (Finset.image g (Finset.image₂ f s t)) (Finset.image₂ f' (Finset.image g₁ t) (Finset.image g₂ s))","decl":"theorem image_image₂_antidistrib {g : γ → δ} {f' : β' → α' → δ} {g₁ : β → β'} {g₂ : α → α'}\n    (h_antidistrib : ∀ a b, g (f a b) = f' (g₁ b) (g₂ a)) :\n    (image₂ f s t).image g = image₂ f' (t.image g₁) (s.image g₂) := by\n  rw [image₂_swap f]\n  exact image_image₂_distrib fun _ _ => h_antidistrib _ _\n\n"}
{"name":"Finset.image_image₂_antidistrib_left","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nβ' : Type u_4\nγ : Type u_5\nδ : Type u_7\ninst✝² : DecidableEq β'\ninst✝¹ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\ninst✝ : DecidableEq δ\ng : γ → δ\nf' : β' → α → δ\ng' : β → β'\nh_antidistrib : ∀ (a : α) (b : β), Eq (g (f a b)) (f' (g' b) a)\n⊢ Eq (Finset.image g (Finset.image₂ f s t)) (Finset.image₂ f' (Finset.image g' t) s)","decl":"/-- Symmetric statement to `Finset.image₂_image_left_anticomm`. -/\ntheorem image_image₂_antidistrib_left {g : γ → δ} {f' : β' → α → δ} {g' : β → β'}\n    (h_antidistrib : ∀ a b, g (f a b) = f' (g' b) a) :\n    (image₂ f s t).image g = image₂ f' (t.image g') s :=\n  coe_injective <| by\n    push_cast\n    exact image_image2_antidistrib_left h_antidistrib\n\n"}
{"name":"Finset.image_image₂_antidistrib_right","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nα' : Type u_2\nβ : Type u_3\nγ : Type u_5\nδ : Type u_7\ninst✝² : DecidableEq α'\ninst✝¹ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\ninst✝ : DecidableEq δ\ng : γ → δ\nf' : β → α' → δ\ng' : α → α'\nh_antidistrib : ∀ (a : α) (b : β), Eq (g (f a b)) (f' b (g' a))\n⊢ Eq (Finset.image g (Finset.image₂ f s t)) (Finset.image₂ f' t (Finset.image g' s))","decl":"/-- Symmetric statement to `Finset.image_image₂_right_anticomm`. -/\ntheorem image_image₂_antidistrib_right {g : γ → δ} {f' : β → α' → δ} {g' : α → α'}\n    (h_antidistrib : ∀ a b, g (f a b) = f' b (g' a)) :\n    (image₂ f s t).image g = image₂ f' t (s.image g') :=\n  coe_injective <| by\n    push_cast\n    exact image_image2_antidistrib_right h_antidistrib\n\n"}
{"name":"Finset.image₂_image_left_anticomm","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nα' : Type u_2\nβ : Type u_3\nγ : Type u_5\nδ : Type u_7\ninst✝² : DecidableEq α'\ninst✝¹ : DecidableEq γ\ns : Finset α\nt : Finset β\ninst✝ : DecidableEq δ\nf : α' → β → γ\ng : α → α'\nf' : β → α → δ\ng' : δ → γ\nh_left_anticomm : ∀ (a : α) (b : β), Eq (f (g a) b) (g' (f' b a))\n⊢ Eq (Finset.image₂ f (Finset.image g s) t) (Finset.image g' (Finset.image₂ f' t s))","decl":"/-- Symmetric statement to `Finset.image_image₂_antidistrib_left`. -/\ntheorem image₂_image_left_anticomm {f : α' → β → γ} {g : α → α'} {f' : β → α → δ} {g' : δ → γ}\n    (h_left_anticomm : ∀ a b, f (g a) b = g' (f' b a)) :\n    image₂ f (s.image g) t = (image₂ f' t s).image g' :=\n  (image_image₂_antidistrib_left fun a b => (h_left_anticomm b a).symm).symm\n\n"}
{"name":"Finset.image_image₂_right_anticomm","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nβ' : Type u_4\nγ : Type u_5\nδ : Type u_7\ninst✝² : DecidableEq β'\ninst✝¹ : DecidableEq γ\ns : Finset α\nt : Finset β\ninst✝ : DecidableEq δ\nf : α → β' → γ\ng : β → β'\nf' : β → α → δ\ng' : δ → γ\nh_right_anticomm : ∀ (a : α) (b : β), Eq (f a (g b)) (g' (f' b a))\n⊢ Eq (Finset.image₂ f s (Finset.image g t)) (Finset.image g' (Finset.image₂ f' t s))","decl":"/-- Symmetric statement to `Finset.image_image₂_antidistrib_right`. -/\ntheorem image_image₂_right_anticomm {f : α → β' → γ} {g : β → β'} {f' : β → α → δ} {g' : δ → γ}\n    (h_right_anticomm : ∀ a b, f a (g b) = g' (f' b a)) :\n    image₂ f s (t.image g) = (image₂ f' t s).image g' :=\n  (image_image₂_antidistrib_right fun a b => (h_right_anticomm b a).symm).symm\n\n"}
{"name":"Finset.image₂_left_identity","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → γ → γ\na : α\nh : ∀ (b : γ), Eq (f a b) b\nt : Finset γ\n⊢ Eq (Finset.image₂ f (Singleton.singleton a) t) t","decl":"/-- If `a` is a left identity for `f : α → β → β`, then `{a}` is a left identity for\n`Finset.image₂ f`. -/\ntheorem image₂_left_identity {f : α → γ → γ} {a : α} (h : ∀ b, f a b = b) (t : Finset γ) :\n    image₂ f {a} t = t :=\n  coe_injective <| by rw [coe_image₂, coe_singleton, Set.image2_left_identity h]\n\n"}
{"name":"Finset.image₂_right_identity","module":"Mathlib.Data.Finset.NAry","initialProofState":"β : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : γ → β → γ\nb : β\nh : ∀ (a : γ), Eq (f a b) a\ns : Finset γ\n⊢ Eq (Finset.image₂ f s (Singleton.singleton b)) s","decl":"/-- If `b` is a right identity for `f : α → β → α`, then `{b}` is a right identity for\n`Finset.image₂ f`. -/\ntheorem image₂_right_identity {f : γ → β → γ} {b : β} (h : ∀ a, f a b = a) (s : Finset γ) :\n    image₂ f s {b} = s := by rw [image₂_singleton_right, funext h, image_id']\n\n"}
{"name":"Finset.card_dvd_card_image₂_right","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\nhf : ∀ (a : α), Membership.mem s a → Function.Injective (f a)\nhs : (Set.image (fun a => Finset.image (f a) t) ↑s).PairwiseDisjoint id\n⊢ Dvd.dvd t.card (Finset.image₂ f s t).card","decl":"/-- If each partial application of `f` is injective, and images of `s` under those partial\napplications are disjoint (but not necessarily distinct!), then the size of `t` divides the size of\n`Finset.image₂ f s t`. -/\ntheorem card_dvd_card_image₂_right (hf : ∀ a ∈ s, Injective (f a))\n    (hs : ((fun a => t.image <| f a) '' s).PairwiseDisjoint id) : #t ∣ #(image₂ f s t) := by\n  classical\n  induction' s using Finset.induction with a s _ ih\n  · simp\n  specialize ih (forall_of_forall_insert hf)\n    (hs.subset <| Set.image_subset _ <| coe_subset.2 <| subset_insert _ _)\n  rw [image₂_insert_left]\n  by_cases h : Disjoint (image (f a) t) (image₂ f s t)\n  · rw [card_union_of_disjoint h]\n    exact Nat.dvd_add (card_image_of_injective _ <| hf _ <| mem_insert_self _ _).symm.dvd ih\n  simp_rw [← biUnion_image_left, disjoint_biUnion_right, not_forall] at h\n  obtain ⟨b, hb, h⟩ := h\n  rwa [union_eq_right.2]\n  exact (hs.eq (Set.mem_image_of_mem _ <| mem_insert_self _ _)\n      (Set.mem_image_of_mem _ <| mem_insert_of_mem hb) h).trans_subset\n    (image_subset_image₂_right hb)\n\n"}
{"name":"Finset.card_dvd_card_image₂_left","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\nhf : ∀ (b : β), Membership.mem t b → Function.Injective fun a => f a b\nht : (Set.image (fun b => Finset.image (fun a => f a b) s) ↑t).PairwiseDisjoint id\n⊢ Dvd.dvd s.card (Finset.image₂ f s t).card","decl":"/-- If each partial application of `f` is injective, and images of `t` under those partial\napplications are disjoint (but not necessarily distinct!), then the size of `s` divides the size of\n`Finset.image₂ f s t`. -/\ntheorem card_dvd_card_image₂_left (hf : ∀ b ∈ t, Injective fun a => f a b)\n    (ht : ((fun b => s.image fun a => f a b) '' t).PairwiseDisjoint id) :\n    #s ∣ #(image₂ f s t) := by rw [← image₂_swap]; exact card_dvd_card_image₂_right hf ht\n\n"}
{"name":"Finset.subset_set_image₂","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\nu : Finset γ\ns : Set α\nt : Set β\nhu : HasSubset.Subset (↑u) (Set.image2 f s t)\n⊢ Exists fun s' => Exists fun t' => And (HasSubset.Subset (↑s') s) (And (HasSubset.Subset (↑t') t) (HasSubset.Subset u (Finset.image₂ f s' t')))","decl":"/-- If a `Finset` is a subset of the image of two `Set`s under a binary operation,\nthen it is a subset of the `Finset.image₂` of two `Finset` subsets of these `Set`s. -/\ntheorem subset_set_image₂ {s : Set α} {t : Set β} (hu : ↑u ⊆ image2 f s t) :\n    ∃ (s' : Finset α) (t' : Finset β), ↑s' ⊆ s ∧ ↑t' ⊆ t ∧ u ⊆ image₂ f s' t' := by\n  rw [← Set.image_prod, subset_set_image_iff] at hu\n  rcases hu with ⟨u, hu, rfl⟩\n  classical\n  use u.image Prod.fst, u.image Prod.snd\n  simp only [coe_image, Set.image_subset_iff, image₂_image_left, image₂_image_right,\n    image_subset_iff]\n  exact ⟨fun _ h ↦ (hu h).1, fun _ h ↦ (hu h).2, fun x hx ↦ mem_image₂_of_mem hx hx⟩\n\n"}
{"name":"Finset.subset_image₂","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\nf : α → β → γ\nu : Finset γ\ns : Set α\nt : Set β\nhu : HasSubset.Subset (↑u) (Set.image2 f s t)\n⊢ Exists fun s' => Exists fun t' => And (HasSubset.Subset (↑s') s) (And (HasSubset.Subset (↑t') t) (HasSubset.Subset u (Finset.image₂ f s' t')))","decl":"@[deprecated (since := \"2024-09-22\")] alias subset_image₂ := subset_set_image₂\n\n"}
{"name":"Finset.image₂_inter_union_subset_union","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝² : DecidableEq γ\nf : α → β → γ\ns s' : Finset α\nt t' : Finset β\ninst✝¹ : DecidableEq α\ninst✝ : DecidableEq β\n⊢ HasSubset.Subset (Finset.image₂ f (Inter.inter s s') (Union.union t t')) (Union.union (Finset.image₂ f s t) (Finset.image₂ f s' t'))","decl":"theorem image₂_inter_union_subset_union :\n    image₂ f (s ∩ s') (t ∪ t') ⊆ image₂ f s t ∪ image₂ f s' t' :=\n  coe_subset.1 <| by\n    push_cast\n    exact Set.image2_inter_union_subset_union\n\n"}
{"name":"Finset.image₂_union_inter_subset_union","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝² : DecidableEq γ\nf : α → β → γ\ns s' : Finset α\nt t' : Finset β\ninst✝¹ : DecidableEq α\ninst✝ : DecidableEq β\n⊢ HasSubset.Subset (Finset.image₂ f (Union.union s s') (Inter.inter t t')) (Union.union (Finset.image₂ f s t) (Finset.image₂ f s' t'))","decl":"theorem image₂_union_inter_subset_union :\n    image₂ f (s ∪ s') (t ∩ t') ⊆ image₂ f s t ∪ image₂ f s' t' :=\n  coe_subset.1 <| by\n    push_cast\n    exact Set.image2_union_inter_subset_union\n\n"}
{"name":"Finset.image₂_inter_union_subset","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\ninst✝¹ : DecidableEq α\ninst✝ : DecidableEq β\nf : α → α → β\ns t : Finset α\nhf : ∀ (a b : α), Eq (f a b) (f b a)\n⊢ HasSubset.Subset (Finset.image₂ f (Inter.inter s t) (Union.union s t)) (Finset.image₂ f s t)","decl":"theorem image₂_inter_union_subset {f : α → α → β} {s t : Finset α} (hf : ∀ a b, f a b = f b a) :\n    image₂ f (s ∩ t) (s ∪ t) ⊆ image₂ f s t :=\n  coe_subset.1 <| by\n    push_cast\n    exact image2_inter_union_subset hf\n\n"}
{"name":"Finset.image₂_union_inter_subset","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\ninst✝¹ : DecidableEq α\ninst✝ : DecidableEq β\nf : α → α → β\ns t : Finset α\nhf : ∀ (a b : α), Eq (f a b) (f b a)\n⊢ HasSubset.Subset (Finset.image₂ f (Union.union s t) (Inter.inter s t)) (Finset.image₂ f s t)","decl":"theorem image₂_union_inter_subset {f : α → α → β} {s t : Finset α} (hf : ∀ a b, f a b = f b a) :\n    image₂ f (s ∪ t) (s ∩ t) ⊆ image₂ f s t :=\n  coe_subset.1 <| by\n    push_cast\n    exact image2_union_inter_subset hf\n\n"}
{"name":"Finset.sup'_image₂_le","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\nδ : Type u_7\ninst✝¹ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\ninst✝ : SemilatticeSup δ\ng : γ → δ\na : δ\nh : (Finset.image₂ f s t).Nonempty\n⊢ Iff (LE.le ((Finset.image₂ f s t).sup' h g) a) (∀ (x : α), Membership.mem s x → ∀ (y : β), Membership.mem t y → LE.le (g (f x y)) a)","decl":"@[simp (default + 1)] -- otherwise `simp` doesn't use `forall_mem_image₂`\nlemma sup'_image₂_le {g : γ → δ} {a : δ} (h : (image₂ f s t).Nonempty) :\n    sup' (image₂ f s t) h g ≤ a ↔ ∀ x ∈ s, ∀ y ∈ t, g (f x y) ≤ a := by\n  rw [sup'_le_iff, forall_mem_image₂]\n\n"}
{"name":"Finset.sup'_image₂_left","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\nδ : Type u_7\ninst✝¹ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\ninst✝ : SemilatticeSup δ\ng : γ → δ\nh : (Finset.image₂ f s t).Nonempty\n⊢ Eq ((Finset.image₂ f s t).sup' h g) (s.sup' ⋯ fun x => t.sup' ⋯ fun x_1 => g (f x x_1))","decl":"lemma sup'_image₂_left (g : γ → δ) (h : (image₂ f s t).Nonempty) :\n    sup' (image₂ f s t) h g =\n      sup' s h.of_image₂_left fun x ↦ sup' t h.of_image₂_right (g <| f x ·) := by\n  simp only [image₂, sup'_image, sup'_product_left]; rfl\n\n"}
{"name":"Finset.sup'_image₂_right","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\nδ : Type u_7\ninst✝¹ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\ninst✝ : SemilatticeSup δ\ng : γ → δ\nh : (Finset.image₂ f s t).Nonempty\n⊢ Eq ((Finset.image₂ f s t).sup' h g) (t.sup' ⋯ fun y => s.sup' ⋯ fun x => g (f x y))","decl":"lemma sup'_image₂_right (g : γ → δ) (h : (image₂ f s t).Nonempty) :\n    sup' (image₂ f s t) h g =\n      sup' t h.of_image₂_right fun y ↦ sup' s h.of_image₂_left (g <| f · y) := by\n  simp only [image₂, sup'_image, sup'_product_right]; rfl\n\n"}
{"name":"Finset.sup_image₂_le","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\nδ : Type u_7\ninst✝² : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\ninst✝¹ : SemilatticeSup δ\ninst✝ : OrderBot δ\ng : γ → δ\na : δ\n⊢ Iff (LE.le ((Finset.image₂ f s t).sup g) a) (∀ (x : α), Membership.mem s x → ∀ (y : β), Membership.mem t y → LE.le (g (f x y)) a)","decl":"@[simp (default + 1)] -- otherwise `simp` doesn't use `forall_mem_image₂`\nlemma sup_image₂_le {g : γ → δ} {a : δ} :\n    sup (image₂ f s t) g ≤ a ↔ ∀ x ∈ s, ∀ y ∈ t, g (f x y) ≤ a := by\n  rw [Finset.sup_le_iff, forall_mem_image₂]\n\n"}
{"name":"Finset.sup_image₂_left","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\nδ : Type u_7\ninst✝² : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\ninst✝¹ : SemilatticeSup δ\ninst✝ : OrderBot δ\ng : γ → δ\n⊢ Eq ((Finset.image₂ f s t).sup g) (s.sup fun x => t.sup fun x_1 => g (f x x_1))","decl":"lemma sup_image₂_left (g : γ → δ) : sup (image₂ f s t) g = sup s fun x ↦ sup t (g <| f x ·) := by\n  simp only [image₂, sup_image, sup_product_left]; rfl\n\n"}
{"name":"Finset.sup_image₂_right","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\nδ : Type u_7\ninst✝² : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\ninst✝¹ : SemilatticeSup δ\ninst✝ : OrderBot δ\ng : γ → δ\n⊢ Eq ((Finset.image₂ f s t).sup g) (t.sup fun y => s.sup fun x => g (f x y))","decl":"lemma sup_image₂_right (g : γ → δ) : sup (image₂ f s t) g = sup t fun y ↦ sup s (g <| f · y) := by\n  simp only [image₂, sup_image, sup_product_right]; rfl\n\n"}
{"name":"Finset.le_inf'_image₂","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\nδ : Type u_7\ninst✝¹ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\ninst✝ : SemilatticeInf δ\ng : γ → δ\na : δ\nh : (Finset.image₂ f s t).Nonempty\n⊢ Iff (LE.le a ((Finset.image₂ f s t).inf' h g)) (∀ (x : α), Membership.mem s x → ∀ (y : β), Membership.mem t y → LE.le a (g (f x y)))","decl":"@[simp (default + 1)] -- otherwise `simp` doesn't use `forall_mem_image₂`\nlemma le_inf'_image₂ {g : γ → δ} {a : δ} (h : (image₂ f s t).Nonempty) :\n    a ≤ inf' (image₂ f s t) h g ↔ ∀ x ∈ s, ∀ y ∈ t, a ≤ g (f x y) := by\n  rw [le_inf'_iff, forall_mem_image₂]\n\n"}
{"name":"Finset.inf'_image₂_left","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\nδ : Type u_7\ninst✝¹ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\ninst✝ : SemilatticeInf δ\ng : γ → δ\nh : (Finset.image₂ f s t).Nonempty\n⊢ Eq ((Finset.image₂ f s t).inf' h g) (s.inf' ⋯ fun x => t.inf' ⋯ fun x_1 => g (f x x_1))","decl":"lemma inf'_image₂_left (g : γ → δ) (h : (image₂ f s t).Nonempty) :\n    inf' (image₂ f s t) h g =\n      inf' s h.of_image₂_left fun x ↦ inf' t h.of_image₂_right (g <| f x ·) :=\n  sup'_image₂_left (δ := δᵒᵈ) g h\n\n"}
{"name":"Finset.inf'_image₂_right","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\nδ : Type u_7\ninst✝¹ : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\ninst✝ : SemilatticeInf δ\ng : γ → δ\nh : (Finset.image₂ f s t).Nonempty\n⊢ Eq ((Finset.image₂ f s t).inf' h g) (t.inf' ⋯ fun y => s.inf' ⋯ fun x => g (f x y))","decl":"lemma inf'_image₂_right (g : γ → δ) (h : (image₂ f s t).Nonempty) :\n    inf' (image₂ f s t) h g =\n      inf' t h.of_image₂_right fun y ↦ inf' s h.of_image₂_left (g <| f · y) :=\n  sup'_image₂_right (δ := δᵒᵈ) g h\n\n"}
{"name":"Finset.le_inf_image₂","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\nδ : Type u_7\ninst✝² : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\ninst✝¹ : SemilatticeInf δ\ninst✝ : OrderTop δ\ng : γ → δ\na : δ\n⊢ Iff (LE.le a ((Finset.image₂ f s t).inf g)) (∀ (x : α), Membership.mem s x → ∀ (y : β), Membership.mem t y → LE.le a (g (f x y)))","decl":"@[simp (default + 1)] -- otherwise `simp` doesn't use `forall_mem_image₂`\nlemma le_inf_image₂ {g : γ → δ} {a : δ} :\n    a ≤ inf (image₂ f s t) g ↔ ∀ x ∈ s, ∀ y ∈ t, a ≤ g (f x y) :=\n  sup_image₂_le (δ := δᵒᵈ)\n\n"}
{"name":"Finset.inf_image₂_left","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\nδ : Type u_7\ninst✝² : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\ninst✝¹ : SemilatticeInf δ\ninst✝ : OrderTop δ\ng : γ → δ\n⊢ Eq ((Finset.image₂ f s t).inf g) (s.inf fun x => t.inf (Function.comp g (f x)))","decl":"lemma inf_image₂_left (g : γ → δ) : inf (image₂ f s t) g = inf s fun x ↦ inf t (g ∘ f x) :=\n  sup_image₂_left (δ := δᵒᵈ) ..\n\n"}
{"name":"Finset.inf_image₂_right","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\nδ : Type u_7\ninst✝² : DecidableEq γ\nf : α → β → γ\ns : Finset α\nt : Finset β\ninst✝¹ : SemilatticeInf δ\ninst✝ : OrderTop δ\ng : γ → δ\n⊢ Eq ((Finset.image₂ f s t).inf g) (t.inf fun y => s.inf fun x => g (f x y))","decl":"lemma inf_image₂_right (g : γ → δ) : inf (image₂ f s t) g = inf t fun y ↦ inf s (g <| f · y) :=\n  sup_image₂_right (δ := δᵒᵈ) ..\n\n"}
{"name":"Fintype.piFinset_image₂","module":"Mathlib.Data.Finset.NAry","initialProofState":"ι : Type u_14\nα : ι → Type u_15\nβ : ι → Type u_16\nγ : ι → Type u_17\ninst✝² : DecidableEq ι\ninst✝¹ : Fintype ι\ninst✝ : (i : ι) → DecidableEq (γ i)\nf : (i : ι) → α i → β i → γ i\ns : (i : ι) → Finset (α i)\nt : (i : ι) → Finset (β i)\n⊢ Eq (Fintype.piFinset fun i => Finset.image₂ (f i) (s i) (t i)) (Finset.image₂ (fun a b i => f i (a i) (b i)) (Fintype.piFinset s) (Fintype.piFinset t))","decl":"lemma piFinset_image₂ (f : ∀ i, α i → β i → γ i) (s : ∀ i, Finset (α i)) (t : ∀ i, Finset (β i)) :\n    piFinset (fun i ↦ image₂ (f i) (s i) (t i)) =\n      image₂ (fun a b i ↦ f _ (a i) (b i)) (piFinset s) (piFinset t) := by\n  ext; simp only [mem_piFinset, mem_image₂, Classical.skolem, forall_and, funext_iff]\n\n"}
{"name":"Set.toFinset_image2","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝³ : DecidableEq γ\nf : α → β → γ\ns : Set α\nt : Set β\ninst✝² : Fintype ↑s\ninst✝¹ : Fintype ↑t\ninst✝ : Fintype ↑(Set.image2 f s t)\n⊢ Eq (Set.image2 f s t).toFinset (Finset.image₂ f s.toFinset t.toFinset)","decl":"@[simp]\ntheorem toFinset_image2 (f : α → β → γ) (s : Set α) (t : Set β) [Fintype s] [Fintype t]\n    [Fintype (image2 f s t)] : (image2 f s t).toFinset = Finset.image₂ f s.toFinset t.toFinset :=\n  Finset.coe_injective <| by simp\n\n"}
{"name":"Set.Finite.toFinset_image2","module":"Mathlib.Data.Finset.NAry","initialProofState":"α : Type u_1\nβ : Type u_3\nγ : Type u_5\ninst✝ : DecidableEq γ\ns : Set α\nt : Set β\nf : α → β → γ\nhs : s.Finite\nht : t.Finite\nhf : optParam (Set.image2 f s t).Finite ⋯\n⊢ Eq (Set.Finite.toFinset hf) (Finset.image₂ f hs.toFinset ht.toFinset)","decl":"theorem Finite.toFinset_image2 (f : α → β → γ) (hs : s.Finite) (ht : t.Finite)\n    (hf := hs.image2 f ht) : hf.toFinset = Finset.image₂ f hs.toFinset ht.toFinset :=\n  Finset.coe_injective <| by simp\n\n"}
