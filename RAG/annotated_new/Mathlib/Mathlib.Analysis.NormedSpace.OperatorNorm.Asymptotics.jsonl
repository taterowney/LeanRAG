{"name":"ContinuousLinearMap.isBigOWith_id","module":"Mathlib.Analysis.NormedSpace.OperatorNorm.Asymptotics","initialProofState":"𝕜 : Type u_1\n𝕜₂ : Type u_2\nE : Type u_4\nF : Type u_5\ninst✝⁶ : SeminormedAddCommGroup E\ninst✝⁵ : SeminormedAddCommGroup F\ninst✝⁴ : NontriviallyNormedField 𝕜\ninst✝³ : NontriviallyNormedField 𝕜₂\ninst✝² : NormedSpace 𝕜 E\ninst✝¹ : NormedSpace 𝕜₂ F\nσ₁₂ : RingHom 𝕜 𝕜₂\ninst✝ : RingHomIsometric σ₁₂\nf : ContinuousLinearMap σ₁₂ E F\nl : Filter E\n⊢ Asymptotics.IsBigOWith (Norm.norm f) l ⇑f fun x => x","decl":"theorem isBigOWith_id : IsBigOWith ‖f‖ l f fun x => x :=\n  isBigOWith_of_le' _ f.le_opNorm\n\n"}
{"name":"ContinuousLinearMap.isBigO_id","module":"Mathlib.Analysis.NormedSpace.OperatorNorm.Asymptotics","initialProofState":"𝕜 : Type u_1\n𝕜₂ : Type u_2\nE : Type u_4\nF : Type u_5\ninst✝⁶ : SeminormedAddCommGroup E\ninst✝⁵ : SeminormedAddCommGroup F\ninst✝⁴ : NontriviallyNormedField 𝕜\ninst✝³ : NontriviallyNormedField 𝕜₂\ninst✝² : NormedSpace 𝕜 E\ninst✝¹ : NormedSpace 𝕜₂ F\nσ₁₂ : RingHom 𝕜 𝕜₂\ninst✝ : RingHomIsometric σ₁₂\nf : ContinuousLinearMap σ₁₂ E F\nl : Filter E\n⊢ Asymptotics.IsBigO l ⇑f fun x => x","decl":"theorem isBigO_id : f =O[l] fun x => x :=\n  (f.isBigOWith_id l).isBigO\n\n"}
{"name":"ContinuousLinearMap.isBigOWith_comp","module":"Mathlib.Analysis.NormedSpace.OperatorNorm.Asymptotics","initialProofState":"𝕜₂ : Type u_2\n𝕜₃ : Type u_3\nF : Type u_5\nG : Type u_6\ninst✝⁶ : SeminormedAddCommGroup F\ninst✝⁵ : SeminormedAddCommGroup G\ninst✝⁴ : NontriviallyNormedField 𝕜₂\ninst✝³ : NontriviallyNormedField 𝕜₃\ninst✝² : NormedSpace 𝕜₂ F\ninst✝¹ : NormedSpace 𝕜₃ G\nσ₂₃ : RingHom 𝕜₂ 𝕜₃\ninst✝ : RingHomIsometric σ₂₃\nα : Type u_7\ng : ContinuousLinearMap σ₂₃ F G\nf : α → F\nl : Filter α\n⊢ Asymptotics.IsBigOWith (Norm.norm g) l (fun x' => g (f x')) f","decl":"theorem isBigOWith_comp [RingHomIsometric σ₂₃] {α : Type*} (g : F →SL[σ₂₃] G) (f : α → F)\n    (l : Filter α) : IsBigOWith ‖g‖ l (fun x' => g (f x')) f :=\n  (g.isBigOWith_id ⊤).comp_tendsto le_top\n\n"}
{"name":"ContinuousLinearMap.isBigO_comp","module":"Mathlib.Analysis.NormedSpace.OperatorNorm.Asymptotics","initialProofState":"𝕜₂ : Type u_2\n𝕜₃ : Type u_3\nF : Type u_5\nG : Type u_6\ninst✝⁶ : SeminormedAddCommGroup F\ninst✝⁵ : SeminormedAddCommGroup G\ninst✝⁴ : NontriviallyNormedField 𝕜₂\ninst✝³ : NontriviallyNormedField 𝕜₃\ninst✝² : NormedSpace 𝕜₂ F\ninst✝¹ : NormedSpace 𝕜₃ G\nσ₂₃ : RingHom 𝕜₂ 𝕜₃\ninst✝ : RingHomIsometric σ₂₃\nα : Type u_7\ng : ContinuousLinearMap σ₂₃ F G\nf : α → F\nl : Filter α\n⊢ Asymptotics.IsBigO l (fun x' => g (f x')) f","decl":"theorem isBigO_comp [RingHomIsometric σ₂₃] {α : Type*} (g : F →SL[σ₂₃] G) (f : α → F)\n    (l : Filter α) : (fun x' => g (f x')) =O[l] f :=\n  (g.isBigOWith_comp f l).isBigO\n\n"}
{"name":"ContinuousLinearMap.isBigOWith_sub","module":"Mathlib.Analysis.NormedSpace.OperatorNorm.Asymptotics","initialProofState":"𝕜 : Type u_1\n𝕜₂ : Type u_2\nE : Type u_4\nF : Type u_5\ninst✝⁶ : SeminormedAddCommGroup E\ninst✝⁵ : SeminormedAddCommGroup F\ninst✝⁴ : NontriviallyNormedField 𝕜\ninst✝³ : NontriviallyNormedField 𝕜₂\ninst✝² : NormedSpace 𝕜 E\ninst✝¹ : NormedSpace 𝕜₂ F\nσ₁₂ : RingHom 𝕜 𝕜₂\ninst✝ : RingHomIsometric σ₁₂\nf : ContinuousLinearMap σ₁₂ E F\nl : Filter E\nx : E\n⊢ Asymptotics.IsBigOWith (Norm.norm f) l (fun x' => f (HSub.hSub x' x)) fun x' => HSub.hSub x' x","decl":"theorem isBigOWith_sub (x : E) :\n    IsBigOWith ‖f‖ l (fun x' => f (x' - x)) fun x' => x' - x :=\n  f.isBigOWith_comp _ l\n\n"}
{"name":"ContinuousLinearMap.isBigO_sub","module":"Mathlib.Analysis.NormedSpace.OperatorNorm.Asymptotics","initialProofState":"𝕜 : Type u_1\n𝕜₂ : Type u_2\nE : Type u_4\nF : Type u_5\ninst✝⁶ : SeminormedAddCommGroup E\ninst✝⁵ : SeminormedAddCommGroup F\ninst✝⁴ : NontriviallyNormedField 𝕜\ninst✝³ : NontriviallyNormedField 𝕜₂\ninst✝² : NormedSpace 𝕜 E\ninst✝¹ : NormedSpace 𝕜₂ F\nσ₁₂ : RingHom 𝕜 𝕜₂\ninst✝ : RingHomIsometric σ₁₂\nf : ContinuousLinearMap σ₁₂ E F\nl : Filter E\nx : E\n⊢ Asymptotics.IsBigO l (fun x' => f (HSub.hSub x' x)) fun x' => HSub.hSub x' x","decl":"theorem isBigO_sub (x : E) :\n    (fun x' => f (x' - x)) =O[l] fun x' => x' - x :=\n  f.isBigO_comp _ l\n\n"}
{"name":"ContinuousLinearEquiv.isBigO_comp","module":"Mathlib.Analysis.NormedSpace.OperatorNorm.Asymptotics","initialProofState":"𝕜 : Type u_1\n𝕜₂ : Type u_2\nE : Type u_4\nF : Type u_5\ninst✝⁸ : SeminormedAddCommGroup E\ninst✝⁷ : SeminormedAddCommGroup F\ninst✝⁶ : NontriviallyNormedField 𝕜\ninst✝⁵ : NontriviallyNormedField 𝕜₂\ninst✝⁴ : NormedSpace 𝕜 E\ninst✝³ : NormedSpace 𝕜₂ F\nσ₁₂ : RingHom 𝕜 𝕜₂\nσ₂₁ : RingHom 𝕜₂ 𝕜\ninst✝² : RingHomInvPair σ₁₂ σ₂₁\ninst✝¹ : RingHomInvPair σ₂₁ σ₁₂\ne : ContinuousLinearEquiv σ₁₂ E F\ninst✝ : RingHomIsometric σ₁₂\nα : Type u_7\nf : α → E\nl : Filter α\n⊢ Asymptotics.IsBigO l (fun x' => e (f x')) f","decl":"theorem isBigO_comp {α : Type*} (f : α → E) (l : Filter α) : (fun x' => e (f x')) =O[l] f :=\n  (e : E →SL[σ₁₂] F).isBigO_comp f l\n\n"}
{"name":"ContinuousLinearEquiv.isBigO_sub","module":"Mathlib.Analysis.NormedSpace.OperatorNorm.Asymptotics","initialProofState":"𝕜 : Type u_1\n𝕜₂ : Type u_2\nE : Type u_4\nF : Type u_5\ninst✝⁸ : SeminormedAddCommGroup E\ninst✝⁷ : SeminormedAddCommGroup F\ninst✝⁶ : NontriviallyNormedField 𝕜\ninst✝⁵ : NontriviallyNormedField 𝕜₂\ninst✝⁴ : NormedSpace 𝕜 E\ninst✝³ : NormedSpace 𝕜₂ F\nσ₁₂ : RingHom 𝕜 𝕜₂\nσ₂₁ : RingHom 𝕜₂ 𝕜\ninst✝² : RingHomInvPair σ₁₂ σ₂₁\ninst✝¹ : RingHomInvPair σ₂₁ σ₁₂\ne : ContinuousLinearEquiv σ₁₂ E F\ninst✝ : RingHomIsometric σ₁₂\nl : Filter E\nx : E\n⊢ Asymptotics.IsBigO l (fun x' => e (HSub.hSub x' x)) fun x' => HSub.hSub x' x","decl":"theorem isBigO_sub (l : Filter E) (x : E) : (fun x' => e (x' - x)) =O[l] fun x' => x' - x :=\n  (e : E →SL[σ₁₂] F).isBigO_sub l x\n\n"}
{"name":"ContinuousLinearEquiv.isBigO_comp_rev","module":"Mathlib.Analysis.NormedSpace.OperatorNorm.Asymptotics","initialProofState":"𝕜 : Type u_1\n𝕜₂ : Type u_2\nE : Type u_4\nF : Type u_5\ninst✝⁸ : SeminormedAddCommGroup E\ninst✝⁷ : SeminormedAddCommGroup F\ninst✝⁶ : NontriviallyNormedField 𝕜\ninst✝⁵ : NontriviallyNormedField 𝕜₂\ninst✝⁴ : NormedSpace 𝕜 E\ninst✝³ : NormedSpace 𝕜₂ F\nσ₁₂ : RingHom 𝕜 𝕜₂\nσ₂₁ : RingHom 𝕜₂ 𝕜\ninst✝² : RingHomInvPair σ₁₂ σ₂₁\ninst✝¹ : RingHomInvPair σ₂₁ σ₁₂\ne : ContinuousLinearEquiv σ₁₂ E F\ninst✝ : RingHomIsometric σ₂₁\nα : Type u_7\nf : α → E\nl : Filter α\n⊢ Asymptotics.IsBigO l f fun x' => e (f x')","decl":"theorem isBigO_comp_rev {α : Type*} (f : α → E) (l : Filter α) : f =O[l] fun x' => e (f x') :=\n  (e.symm.isBigO_comp _ l).congr_left fun _ => e.symm_apply_apply _\n\n"}
{"name":"ContinuousLinearEquiv.isBigO_sub_rev","module":"Mathlib.Analysis.NormedSpace.OperatorNorm.Asymptotics","initialProofState":"𝕜 : Type u_1\n𝕜₂ : Type u_2\nE : Type u_4\nF : Type u_5\ninst✝⁸ : SeminormedAddCommGroup E\ninst✝⁷ : SeminormedAddCommGroup F\ninst✝⁶ : NontriviallyNormedField 𝕜\ninst✝⁵ : NontriviallyNormedField 𝕜₂\ninst✝⁴ : NormedSpace 𝕜 E\ninst✝³ : NormedSpace 𝕜₂ F\nσ₁₂ : RingHom 𝕜 𝕜₂\nσ₂₁ : RingHom 𝕜₂ 𝕜\ninst✝² : RingHomInvPair σ₁₂ σ₂₁\ninst✝¹ : RingHomInvPair σ₂₁ σ₁₂\ne : ContinuousLinearEquiv σ₁₂ E F\ninst✝ : RingHomIsometric σ₂₁\nl : Filter E\nx : E\n⊢ Asymptotics.IsBigO l (fun x' => HSub.hSub x' x) fun x' => e (HSub.hSub x' x)","decl":"theorem isBigO_sub_rev (l : Filter E) (x : E) : (fun x' => x' - x) =O[l] fun x' => e (x' - x) :=\n  e.isBigO_comp_rev _ _\n\n"}
