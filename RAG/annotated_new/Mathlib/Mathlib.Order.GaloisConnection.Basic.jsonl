{"name":"GaloisConnection.upperBounds_l_image","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\ninst✝¹ : Preorder α\ninst✝ : Preorder β\nl : α → β\nu : β → α\ngc : GaloisConnection l u\ns : Set α\n⊢ Eq (upperBounds (Set.image l s)) (Set.preimage u (upperBounds s))","decl":"theorem upperBounds_l_image (s : Set α) :\n    upperBounds (l '' s) = u ⁻¹' upperBounds s :=\n  Set.ext fun b => by simp [upperBounds, gc _ _]\n\n"}
{"name":"GaloisConnection.lowerBounds_u_image","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\ninst✝¹ : Preorder α\ninst✝ : Preorder β\nl : α → β\nu : β → α\ngc : GaloisConnection l u\ns : Set β\n⊢ Eq (lowerBounds (Set.image u s)) (Set.preimage l (lowerBounds s))","decl":"theorem lowerBounds_u_image (s : Set β) :\n    lowerBounds (u '' s) = l ⁻¹' lowerBounds s :=\n  gc.dual.upperBounds_l_image s\n\n"}
{"name":"GaloisConnection.bddAbove_l_image","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\ninst✝¹ : Preorder α\ninst✝ : Preorder β\nl : α → β\nu : β → α\ngc : GaloisConnection l u\ns : Set α\n⊢ Iff (BddAbove (Set.image l s)) (BddAbove s)","decl":"theorem bddAbove_l_image {s : Set α} : BddAbove (l '' s) ↔ BddAbove s :=\n  ⟨fun ⟨x, hx⟩ => ⟨u x, by rwa [gc.upperBounds_l_image] at hx⟩, gc.monotone_l.map_bddAbove⟩\n\n"}
{"name":"GaloisConnection.bddBelow_u_image","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\ninst✝¹ : Preorder α\ninst✝ : Preorder β\nl : α → β\nu : β → α\ngc : GaloisConnection l u\ns : Set β\n⊢ Iff (BddBelow (Set.image u s)) (BddBelow s)","decl":"theorem bddBelow_u_image {s : Set β} : BddBelow (u '' s) ↔ BddBelow s :=\n  gc.dual.bddAbove_l_image\n\n"}
{"name":"GaloisConnection.isLUB_l_image","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\ninst✝¹ : Preorder α\ninst✝ : Preorder β\nl : α → β\nu : β → α\ngc : GaloisConnection l u\ns : Set α\na : α\nh : IsLUB s a\n⊢ IsLUB (Set.image l s) (l a)","decl":"theorem isLUB_l_image {s : Set α} {a : α} (h : IsLUB s a) : IsLUB (l '' s) (l a) :=\n  ⟨gc.monotone_l.mem_upperBounds_image h.left, fun b hb =>\n    gc.l_le <| h.right <| by rwa [gc.upperBounds_l_image] at hb⟩\n\n"}
{"name":"GaloisConnection.isGLB_u_image","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\ninst✝¹ : Preorder α\ninst✝ : Preorder β\nl : α → β\nu : β → α\ngc : GaloisConnection l u\ns : Set β\nb : β\nh : IsGLB s b\n⊢ IsGLB (Set.image u s) (u b)","decl":"theorem isGLB_u_image {s : Set β} {b : β} (h : IsGLB s b) : IsGLB (u '' s) (u b) :=\n  gc.dual.isLUB_l_image h\n\n"}
{"name":"GaloisConnection.isLeast_l","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\ninst✝¹ : Preorder α\ninst✝ : Preorder β\nl : α → β\nu : β → α\ngc : GaloisConnection l u\na : α\n⊢ IsLeast (setOf fun b => LE.le a (u b)) (l a)","decl":"theorem isLeast_l {a : α} : IsLeast { b | a ≤ u b } (l a) :=\n  ⟨gc.le_u_l _, fun _ hb => gc.l_le hb⟩\n\n"}
{"name":"GaloisConnection.isGreatest_u","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\ninst✝¹ : Preorder α\ninst✝ : Preorder β\nl : α → β\nu : β → α\ngc : GaloisConnection l u\nb : β\n⊢ IsGreatest (setOf fun a => LE.le (l a) b) (u b)","decl":"theorem isGreatest_u {b : β} : IsGreatest { a | l a ≤ b } (u b) :=\n  gc.dual.isLeast_l\n\n"}
{"name":"GaloisConnection.isGLB_l","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\ninst✝¹ : Preorder α\ninst✝ : Preorder β\nl : α → β\nu : β → α\ngc : GaloisConnection l u\na : α\n⊢ IsGLB (setOf fun b => LE.le a (u b)) (l a)","decl":"theorem isGLB_l {a : α} : IsGLB { b | a ≤ u b } (l a) :=\n  gc.isLeast_l.isGLB\n\n"}
{"name":"GaloisConnection.isLUB_u","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\ninst✝¹ : Preorder α\ninst✝ : Preorder β\nl : α → β\nu : β → α\ngc : GaloisConnection l u\nb : β\n⊢ IsLUB (setOf fun a => LE.le (l a) b) (u b)","decl":"theorem isLUB_u {b : β} : IsLUB { a | l a ≤ b } (u b) :=\n  gc.isGreatest_u.isLUB\n\n"}
{"name":"GaloisConnection.l_sup","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\na₁ a₂ : α\ninst✝¹ : SemilatticeSup α\ninst✝ : SemilatticeSup β\nl : α → β\nu : β → α\ngc : GaloisConnection l u\n⊢ Eq (l (Max.max a₁ a₂)) (Max.max (l a₁) (l a₂))","decl":"theorem l_sup (gc : GaloisConnection l u) : l (a₁ ⊔ a₂) = l a₁ ⊔ l a₂ :=\n  (gc.isLUB_l_image isLUB_pair).unique <| by simp only [image_pair, isLUB_pair]\n\n"}
{"name":"GaloisConnection.u_inf","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nb₁ b₂ : β\ninst✝¹ : SemilatticeInf α\ninst✝ : SemilatticeInf β\nl : α → β\nu : β → α\ngc : GaloisConnection l u\n⊢ Eq (u (Min.min b₁ b₂)) (Min.min (u b₁) (u b₂))","decl":"theorem u_inf (gc : GaloisConnection l u) : u (b₁ ⊓ b₂) = u b₁ ⊓ u b₂ := gc.dual.l_sup\n\n"}
{"name":"GaloisConnection.l_iSup","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nι : Sort x\ninst✝¹ : CompleteLattice α\ninst✝ : CompleteLattice β\nl : α → β\nu : β → α\ngc : GaloisConnection l u\nf : ι → α\n⊢ Eq (l (iSup f)) (iSup fun i => l (f i))","decl":"theorem l_iSup (gc : GaloisConnection l u) {f : ι → α} : l (iSup f) = ⨆ i, l (f i) :=\n  Eq.symm <|\n    IsLUB.iSup_eq <|\n      show IsLUB (range (l ∘ f)) (l (iSup f)) by\n        rw [range_comp, ← sSup_range]; exact gc.isLUB_l_image (isLUB_sSup _)\n\n"}
{"name":"GaloisConnection.l_iSup₂","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nι : Sort x\nκ : ι → Sort u_1\ninst✝¹ : CompleteLattice α\ninst✝ : CompleteLattice β\nl : α → β\nu : β → α\ngc : GaloisConnection l u\nf : (i : ι) → κ i → α\n⊢ Eq (l (iSup fun i => iSup fun j => f i j)) (iSup fun i => iSup fun j => l (f i j))","decl":"theorem l_iSup₂ (gc : GaloisConnection l u) {f : ∀ i, κ i → α} :\n    l (⨆ (i) (j), f i j) = ⨆ (i) (j), l (f i j) := by\n  simp_rw [gc.l_iSup]\n\n"}
{"name":"GaloisConnection.u_iInf","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nι : Sort x\ninst✝¹ : CompleteLattice α\ninst✝ : CompleteLattice β\nl : α → β\nu : β → α\ngc : GaloisConnection l u\nf : ι → β\n⊢ Eq (u (iInf f)) (iInf fun i => u (f i))","decl":"theorem u_iInf {f : ι → β} : u (iInf f) = ⨅ i, u (f i) :=\n  gc.dual.l_iSup\n\n"}
{"name":"GaloisConnection.u_iInf₂","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nι : Sort x\nκ : ι → Sort u_1\ninst✝¹ : CompleteLattice α\ninst✝ : CompleteLattice β\nl : α → β\nu : β → α\ngc : GaloisConnection l u\nf : (i : ι) → κ i → β\n⊢ Eq (u (iInf fun i => iInf fun j => f i j)) (iInf fun i => iInf fun j => u (f i j))","decl":"theorem u_iInf₂ {f : ∀ i, κ i → β} : u (⨅ (i) (j), f i j) = ⨅ (i) (j), u (f i j) :=\n  gc.dual.l_iSup₂\n\n"}
{"name":"GaloisConnection.l_sSup","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\ninst✝¹ : CompleteLattice α\ninst✝ : CompleteLattice β\nl : α → β\nu : β → α\ngc : GaloisConnection l u\ns : Set α\n⊢ Eq (l (SupSet.sSup s)) (iSup fun a => iSup fun h => l a)","decl":"theorem l_sSup {s : Set α} : l (sSup s) = ⨆ a ∈ s, l a := by\n  simp only [sSup_eq_iSup, gc.l_iSup]\n\n"}
{"name":"GaloisConnection.u_sInf","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\ninst✝¹ : CompleteLattice α\ninst✝ : CompleteLattice β\nl : α → β\nu : β → α\ngc : GaloisConnection l u\ns : Set β\n⊢ Eq (u (InfSet.sInf s)) (iInf fun a => iInf fun h => u a)","decl":"theorem u_sInf {s : Set β} : u (sInf s) = ⨅ a ∈ s, u a :=\n  gc.dual.l_sSup\n\n"}
{"name":"GaloisConnection.compl","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\ninst✝¹ : BooleanAlgebra α\ninst✝ : BooleanAlgebra β\nl : α → β\nu : β → α\ngc : GaloisConnection l u\n⊢ GaloisConnection (Function.comp HasCompl.compl (Function.comp u HasCompl.compl)) (Function.comp HasCompl.compl (Function.comp l HasCompl.compl))","decl":"protected theorem compl [BooleanAlgebra α] [BooleanAlgebra β] {l : α → β} {u : β → α}\n    (gc : GaloisConnection l u) :\n    GaloisConnection (compl ∘ u ∘ compl) (compl ∘ l ∘ compl) := fun a b ↦ by\n  dsimp\n  rw [le_compl_iff_le_compl, gc, compl_le_iff_compl_le]\n\n"}
{"name":"gc_sSup_Iic","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\ninst✝ : CompleteSemilatticeSup α\n⊢ GaloisConnection SupSet.sSup Set.Iic","decl":"/-- `sSup` and `Iic` form a Galois connection. -/\ntheorem gc_sSup_Iic [CompleteSemilatticeSup α] :\n    GaloisConnection (sSup : Set α → α) (Iic : α → Set α) :=\n  fun _ _ ↦ sSup_le_iff\n\n"}
{"name":"gc_Ici_sInf","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\ninst✝ : CompleteSemilatticeInf α\n⊢ GaloisConnection (Function.comp (⇑OrderDual.toDual) Set.Ici) (Function.comp InfSet.sInf ⇑OrderDual.ofDual)","decl":"/-- `toDual ∘ Ici` and `sInf ∘ ofDual` form a Galois connection. -/\ntheorem gc_Ici_sInf [CompleteSemilatticeInf α] :\n    GaloisConnection (toDual ∘ Ici : α → (Set α)ᵒᵈ) (sInf ∘ ofDual : (Set α)ᵒᵈ → α) :=\n  fun _ _ ↦ le_sInf_iff.symm\n\n"}
{"name":"sSup_image2_eq_sSup_sSup","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nγ : Type w\ninst✝² : CompleteLattice α\ninst✝¹ : CompleteLattice β\ninst✝ : CompleteLattice γ\ns : Set α\nt : Set β\nl : α → β → γ\nu₁ : β → γ → α\nu₂ : α → γ → β\nh₁ : ∀ (b : β), GaloisConnection (Function.swap l b) (u₁ b)\nh₂ : ∀ (a : α), GaloisConnection (l a) (u₂ a)\n⊢ Eq (SupSet.sSup (Set.image2 l s t)) (l (SupSet.sSup s) (SupSet.sSup t))","decl":"theorem sSup_image2_eq_sSup_sSup (h₁ : ∀ b, GaloisConnection (swap l b) (u₁ b))\n    (h₂ : ∀ a, GaloisConnection (l a) (u₂ a)) : sSup (image2 l s t) = l (sSup s) (sSup t) := by\n  simp_rw [sSup_image2, ← (h₂ _).l_sSup, ← (h₁ _).l_sSup]\n\n"}
{"name":"sSup_image2_eq_sSup_sInf","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nγ : Type w\ninst✝² : CompleteLattice α\ninst✝¹ : CompleteLattice β\ninst✝ : CompleteLattice γ\ns : Set α\nt : Set β\nl : α → β → γ\nu₁ : β → γ → α\nu₂ : α → γ → β\nh₁ : ∀ (b : β), GaloisConnection (Function.swap l b) (u₁ b)\nh₂ : ∀ (a : α), GaloisConnection (Function.comp (l a) ⇑OrderDual.ofDual) (Function.comp (⇑OrderDual.toDual) (u₂ a))\n⊢ Eq (SupSet.sSup (Set.image2 l s t)) (l (SupSet.sSup s) (InfSet.sInf t))","decl":"theorem sSup_image2_eq_sSup_sInf (h₁ : ∀ b, GaloisConnection (swap l b) (u₁ b))\n    (h₂ : ∀ a, GaloisConnection (l a ∘ ofDual) (toDual ∘ u₂ a)) :\n    sSup (image2 l s t) = l (sSup s) (sInf t) :=\n  sSup_image2_eq_sSup_sSup (β := βᵒᵈ) h₁ h₂\n\n"}
{"name":"sSup_image2_eq_sInf_sSup","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nγ : Type w\ninst✝² : CompleteLattice α\ninst✝¹ : CompleteLattice β\ninst✝ : CompleteLattice γ\ns : Set α\nt : Set β\nl : α → β → γ\nu₁ : β → γ → α\nu₂ : α → γ → β\nh₁ : ∀ (b : β), GaloisConnection (Function.comp (Function.swap l b) ⇑OrderDual.ofDual) (Function.comp (⇑OrderDual.toDual) (u₁ b))\nh₂ : ∀ (a : α), GaloisConnection (l a) (u₂ a)\n⊢ Eq (SupSet.sSup (Set.image2 l s t)) (l (InfSet.sInf s) (SupSet.sSup t))","decl":"theorem sSup_image2_eq_sInf_sSup (h₁ : ∀ b, GaloisConnection (swap l b ∘ ofDual) (toDual ∘ u₁ b))\n    (h₂ : ∀ a, GaloisConnection (l a) (u₂ a)) : sSup (image2 l s t) = l (sInf s) (sSup t) :=\n  sSup_image2_eq_sSup_sSup (α := αᵒᵈ) h₁ h₂\n\n"}
{"name":"sSup_image2_eq_sInf_sInf","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nγ : Type w\ninst✝² : CompleteLattice α\ninst✝¹ : CompleteLattice β\ninst✝ : CompleteLattice γ\ns : Set α\nt : Set β\nl : α → β → γ\nu₁ : β → γ → α\nu₂ : α → γ → β\nh₁ : ∀ (b : β), GaloisConnection (Function.comp (Function.swap l b) ⇑OrderDual.ofDual) (Function.comp (⇑OrderDual.toDual) (u₁ b))\nh₂ : ∀ (a : α), GaloisConnection (Function.comp (l a) ⇑OrderDual.ofDual) (Function.comp (⇑OrderDual.toDual) (u₂ a))\n⊢ Eq (SupSet.sSup (Set.image2 l s t)) (l (InfSet.sInf s) (InfSet.sInf t))","decl":"theorem sSup_image2_eq_sInf_sInf (h₁ : ∀ b, GaloisConnection (swap l b ∘ ofDual) (toDual ∘ u₁ b))\n    (h₂ : ∀ a, GaloisConnection (l a ∘ ofDual) (toDual ∘ u₂ a)) :\n    sSup (image2 l s t) = l (sInf s) (sInf t) :=\n  sSup_image2_eq_sSup_sSup (α := αᵒᵈ) (β := βᵒᵈ) h₁ h₂\n\n"}
{"name":"sInf_image2_eq_sInf_sInf","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nγ : Type w\ninst✝² : CompleteLattice α\ninst✝¹ : CompleteLattice β\ninst✝ : CompleteLattice γ\ns : Set α\nt : Set β\nu : α → β → γ\nl₁ : β → γ → α\nl₂ : α → γ → β\nh₁ : ∀ (b : β), GaloisConnection (l₁ b) (Function.swap u b)\nh₂ : ∀ (a : α), GaloisConnection (l₂ a) (u a)\n⊢ Eq (InfSet.sInf (Set.image2 u s t)) (u (InfSet.sInf s) (InfSet.sInf t))","decl":"theorem sInf_image2_eq_sInf_sInf (h₁ : ∀ b, GaloisConnection (l₁ b) (swap u b))\n    (h₂ : ∀ a, GaloisConnection (l₂ a) (u a)) : sInf (image2 u s t) = u (sInf s) (sInf t) := by\n  simp_rw [sInf_image2, ← (h₂ _).u_sInf, ← (h₁ _).u_sInf]\n\n"}
{"name":"sInf_image2_eq_sInf_sSup","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nγ : Type w\ninst✝² : CompleteLattice α\ninst✝¹ : CompleteLattice β\ninst✝ : CompleteLattice γ\ns : Set α\nt : Set β\nu : α → β → γ\nl₁ : β → γ → α\nl₂ : α → γ → β\nh₁ : ∀ (b : β), GaloisConnection (l₁ b) (Function.swap u b)\nh₂ : ∀ (a : α), GaloisConnection (Function.comp (⇑OrderDual.toDual) (l₂ a)) (Function.comp (u a) ⇑OrderDual.ofDual)\n⊢ Eq (InfSet.sInf (Set.image2 u s t)) (u (InfSet.sInf s) (SupSet.sSup t))","decl":"theorem sInf_image2_eq_sInf_sSup (h₁ : ∀ b, GaloisConnection (l₁ b) (swap u b))\n    (h₂ : ∀ a, GaloisConnection (toDual ∘ l₂ a) (u a ∘ ofDual)) :\n    sInf (image2 u s t) = u (sInf s) (sSup t) :=\n  sInf_image2_eq_sInf_sInf (β := βᵒᵈ) h₁ h₂\n\n"}
{"name":"sInf_image2_eq_sSup_sInf","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nγ : Type w\ninst✝² : CompleteLattice α\ninst✝¹ : CompleteLattice β\ninst✝ : CompleteLattice γ\ns : Set α\nt : Set β\nu : α → β → γ\nl₁ : β → γ → α\nl₂ : α → γ → β\nh₁ : ∀ (b : β), GaloisConnection (Function.comp (⇑OrderDual.toDual) (l₁ b)) (Function.comp (Function.swap u b) ⇑OrderDual.ofDual)\nh₂ : ∀ (a : α), GaloisConnection (l₂ a) (u a)\n⊢ Eq (InfSet.sInf (Set.image2 u s t)) (u (SupSet.sSup s) (InfSet.sInf t))","decl":"theorem sInf_image2_eq_sSup_sInf (h₁ : ∀ b, GaloisConnection (toDual ∘ l₁ b) (swap u b ∘ ofDual))\n    (h₂ : ∀ a, GaloisConnection (l₂ a) (u a)) : sInf (image2 u s t) = u (sSup s) (sInf t) :=\n  sInf_image2_eq_sInf_sInf (α := αᵒᵈ) h₁ h₂\n\n"}
{"name":"sInf_image2_eq_sSup_sSup","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nγ : Type w\ninst✝² : CompleteLattice α\ninst✝¹ : CompleteLattice β\ninst✝ : CompleteLattice γ\ns : Set α\nt : Set β\nu : α → β → γ\nl₁ : β → γ → α\nl₂ : α → γ → β\nh₁ : ∀ (b : β), GaloisConnection (Function.comp (⇑OrderDual.toDual) (l₁ b)) (Function.comp (Function.swap u b) ⇑OrderDual.ofDual)\nh₂ : ∀ (a : α), GaloisConnection (Function.comp (⇑OrderDual.toDual) (l₂ a)) (Function.comp (u a) ⇑OrderDual.ofDual)\n⊢ Eq (InfSet.sInf (Set.image2 u s t)) (u (SupSet.sSup s) (SupSet.sSup t))","decl":"theorem sInf_image2_eq_sSup_sSup (h₁ : ∀ b, GaloisConnection (toDual ∘ l₁ b) (swap u b ∘ ofDual))\n    (h₂ : ∀ a, GaloisConnection (toDual ∘ l₂ a) (u a ∘ ofDual)) :\n    sInf (image2 u s t) = u (sSup s) (sSup t) :=\n  sInf_image2_eq_sInf_sInf (α := αᵒᵈ) (β := βᵒᵈ) h₁ h₂\n\n"}
{"name":"OrderIso.bddAbove_image","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\ninst✝¹ : Preorder α\ninst✝ : Preorder β\ne : OrderIso α β\ns : Set α\n⊢ Iff (BddAbove (Set.image (⇑e) s)) (BddAbove s)","decl":"@[simp]\ntheorem bddAbove_image (e : α ≃o β) {s : Set α} : BddAbove (e '' s) ↔ BddAbove s :=\n  e.to_galoisConnection.bddAbove_l_image\n\n"}
{"name":"OrderIso.bddBelow_image","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\ninst✝¹ : Preorder α\ninst✝ : Preorder β\ne : OrderIso α β\ns : Set α\n⊢ Iff (BddBelow (Set.image (⇑e) s)) (BddBelow s)","decl":"@[simp]\ntheorem bddBelow_image (e : α ≃o β) {s : Set α} : BddBelow (e '' s) ↔ BddBelow s :=\n  e.dual.bddAbove_image\n\n"}
{"name":"OrderIso.bddAbove_preimage","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\ninst✝¹ : Preorder α\ninst✝ : Preorder β\ne : OrderIso α β\ns : Set β\n⊢ Iff (BddAbove (Set.preimage (⇑e) s)) (BddAbove s)","decl":"@[simp]\ntheorem bddAbove_preimage (e : α ≃o β) {s : Set β} : BddAbove (e ⁻¹' s) ↔ BddAbove s := by\n  rw [← e.bddAbove_image, e.image_preimage]\n\n"}
{"name":"OrderIso.bddBelow_preimage","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\ninst✝¹ : Preorder α\ninst✝ : Preorder β\ne : OrderIso α β\ns : Set β\n⊢ Iff (BddBelow (Set.preimage (⇑e) s)) (BddBelow s)","decl":"@[simp]\ntheorem bddBelow_preimage (e : α ≃o β) {s : Set β} : BddBelow (e ⁻¹' s) ↔ BddBelow s := by\n  rw [← e.bddBelow_image, e.image_preimage]\n\n"}
{"name":"Nat.galoisConnection_mul_div","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"k : Nat\nh : LT.lt 0 k\n⊢ GaloisConnection (fun n => HMul.hMul n k) fun n => HDiv.hDiv n k","decl":"theorem galoisConnection_mul_div {k : ℕ} (h : 0 < k) :\n    GaloisConnection (fun n => n * k) fun n => n / k := fun _ _ => (le_div_iff_mul_le h).symm\n\n"}
{"name":"GaloisInsertion.l_sup_u","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nl : α → β\nu : β → α\ninst✝¹ : SemilatticeSup α\ninst✝ : SemilatticeSup β\ngi : GaloisInsertion l u\na b : β\n⊢ Eq (l (Max.max (u a) (u b))) (Max.max a b)","decl":"theorem l_sup_u [SemilatticeSup α] [SemilatticeSup β] (gi : GaloisInsertion l u) (a b : β) :\n    l (u a ⊔ u b) = a ⊔ b :=\n  calc\n    l (u a ⊔ u b) = l (u a) ⊔ l (u b) := gi.gc.l_sup\n    _ = a ⊔ b := by simp only [gi.l_u_eq]\n\n"}
{"name":"GaloisInsertion.l_iSup_u","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nl : α → β\nu : β → α\ninst✝¹ : CompleteLattice α\ninst✝ : CompleteLattice β\ngi : GaloisInsertion l u\nι : Sort x\nf : ι → β\n⊢ Eq (l (iSup fun i => u (f i))) (iSup fun i => f i)","decl":"theorem l_iSup_u [CompleteLattice α] [CompleteLattice β] (gi : GaloisInsertion l u) {ι : Sort x}\n    (f : ι → β) : l (⨆ i, u (f i)) = ⨆ i, f i :=\n  calc\n    l (⨆ i : ι, u (f i)) = ⨆ i : ι, l (u (f i)) := gi.gc.l_iSup\n    _ = ⨆ i : ι, f i := congr_arg _ <| funext fun i => gi.l_u_eq (f i)\n\n"}
{"name":"GaloisInsertion.l_biSup_u","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nl : α → β\nu : β → α\ninst✝¹ : CompleteLattice α\ninst✝ : CompleteLattice β\ngi : GaloisInsertion l u\nι : Sort x\np : ι → Prop\nf : (i : ι) → p i → β\n⊢ Eq (l (iSup fun i => iSup fun hi => u (f i hi))) (iSup fun i => iSup fun hi => f i hi)","decl":"theorem l_biSup_u [CompleteLattice α] [CompleteLattice β] (gi : GaloisInsertion l u) {ι : Sort x}\n    {p : ι → Prop} (f : ∀ i, p i → β) : l (⨆ (i) (hi), u (f i hi)) = ⨆ (i) (hi), f i hi := by\n  simp only [iSup_subtype', gi.l_iSup_u]\n\n"}
{"name":"GaloisInsertion.l_sSup_u_image","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nl : α → β\nu : β → α\ninst✝¹ : CompleteLattice α\ninst✝ : CompleteLattice β\ngi : GaloisInsertion l u\ns : Set β\n⊢ Eq (l (SupSet.sSup (Set.image u s))) (SupSet.sSup s)","decl":"theorem l_sSup_u_image [CompleteLattice α] [CompleteLattice β] (gi : GaloisInsertion l u)\n    (s : Set β) : l (sSup (u '' s)) = sSup s := by rw [sSup_image, gi.l_biSup_u, sSup_eq_iSup]\n\n"}
{"name":"GaloisInsertion.l_inf_u","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nl : α → β\nu : β → α\ninst✝¹ : SemilatticeInf α\ninst✝ : SemilatticeInf β\ngi : GaloisInsertion l u\na b : β\n⊢ Eq (l (Min.min (u a) (u b))) (Min.min a b)","decl":"theorem l_inf_u [SemilatticeInf α] [SemilatticeInf β] (gi : GaloisInsertion l u) (a b : β) :\n    l (u a ⊓ u b) = a ⊓ b :=\n  calc\n    l (u a ⊓ u b) = l (u (a ⊓ b)) := congr_arg l gi.gc.u_inf.symm\n    _ = a ⊓ b := by simp only [gi.l_u_eq]\n\n"}
{"name":"GaloisInsertion.l_iInf_u","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nl : α → β\nu : β → α\ninst✝¹ : CompleteLattice α\ninst✝ : CompleteLattice β\ngi : GaloisInsertion l u\nι : Sort x\nf : ι → β\n⊢ Eq (l (iInf fun i => u (f i))) (iInf fun i => f i)","decl":"theorem l_iInf_u [CompleteLattice α] [CompleteLattice β] (gi : GaloisInsertion l u) {ι : Sort x}\n    (f : ι → β) : l (⨅ i, u (f i)) = ⨅ i, f i :=\n  calc\n    l (⨅ i : ι, u (f i)) = l (u (⨅ i : ι, f i)) := congr_arg l gi.gc.u_iInf.symm\n    _ = ⨅ i : ι, f i := gi.l_u_eq _\n\n"}
{"name":"GaloisInsertion.l_biInf_u","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nl : α → β\nu : β → α\ninst✝¹ : CompleteLattice α\ninst✝ : CompleteLattice β\ngi : GaloisInsertion l u\nι : Sort x\np : ι → Prop\nf : (i : ι) → p i → β\n⊢ Eq (l (iInf fun i => iInf fun hi => u (f i hi))) (iInf fun i => iInf fun hi => f i hi)","decl":"theorem l_biInf_u [CompleteLattice α] [CompleteLattice β] (gi : GaloisInsertion l u) {ι : Sort x}\n    {p : ι → Prop} (f : ∀ (i) (_ : p i), β) : l (⨅ (i) (hi), u (f i hi)) = ⨅ (i) (hi), f i hi := by\n  simp only [iInf_subtype', gi.l_iInf_u]\n\n"}
{"name":"GaloisInsertion.l_sInf_u_image","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nl : α → β\nu : β → α\ninst✝¹ : CompleteLattice α\ninst✝ : CompleteLattice β\ngi : GaloisInsertion l u\ns : Set β\n⊢ Eq (l (InfSet.sInf (Set.image u s))) (InfSet.sInf s)","decl":"theorem l_sInf_u_image [CompleteLattice α] [CompleteLattice β] (gi : GaloisInsertion l u)\n    (s : Set β) : l (sInf (u '' s)) = sInf s := by rw [sInf_image, gi.l_biInf_u, sInf_eq_iInf]\n\n"}
{"name":"GaloisInsertion.l_iInf_of_ul_eq_self","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nl : α → β\nu : β → α\ninst✝¹ : CompleteLattice α\ninst✝ : CompleteLattice β\ngi : GaloisInsertion l u\nι : Sort x\nf : ι → α\nhf : ∀ (i : ι), Eq (u (l (f i))) (f i)\n⊢ Eq (l (iInf fun i => f i)) (iInf fun i => l (f i))","decl":"theorem l_iInf_of_ul_eq_self [CompleteLattice α] [CompleteLattice β] (gi : GaloisInsertion l u)\n    {ι : Sort x} (f : ι → α) (hf : ∀ i, u (l (f i)) = f i) : l (⨅ i, f i) = ⨅ i, l (f i) :=\n  calc\n    l (⨅ i, f i) = l (⨅ i : ι, u (l (f i))) := by simp [hf]\n    _ = ⨅ i, l (f i) := gi.l_iInf_u _\n\n"}
{"name":"GaloisInsertion.l_biInf_of_ul_eq_self","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nl : α → β\nu : β → α\ninst✝¹ : CompleteLattice α\ninst✝ : CompleteLattice β\ngi : GaloisInsertion l u\nι : Sort x\np : ι → Prop\nf : (i : ι) → p i → α\nhf : ∀ (i : ι) (hi : p i), Eq (u (l (f i hi))) (f i hi)\n⊢ Eq (l (iInf fun i => iInf fun hi => f i hi)) (iInf fun i => iInf fun hi => l (f i hi))","decl":"theorem l_biInf_of_ul_eq_self [CompleteLattice α] [CompleteLattice β] (gi : GaloisInsertion l u)\n    {ι : Sort x} {p : ι → Prop} (f : ∀ (i) (_ : p i), α) (hf : ∀ i hi, u (l (f i hi)) = f i hi) :\n    l (⨅ (i) (hi), f i hi) = ⨅ (i) (hi), l (f i hi) := by\n  rw [iInf_subtype', iInf_subtype']\n  exact gi.l_iInf_of_ul_eq_self _ fun _ => hf _ _\n\n"}
{"name":"GaloisInsertion.isLUB_of_u_image","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nl : α → β\nu : β → α\ninst✝¹ : Preorder α\ninst✝ : Preorder β\ngi : GaloisInsertion l u\ns : Set β\na : α\nhs : IsLUB (Set.image u s) a\n⊢ IsLUB s (l a)","decl":"theorem isLUB_of_u_image [Preorder α] [Preorder β] (gi : GaloisInsertion l u) {s : Set β} {a : α}\n    (hs : IsLUB (u '' s) a) : IsLUB s (l a) :=\n  ⟨fun x hx => (gi.le_l_u x).trans <| gi.gc.monotone_l <| hs.1 <| mem_image_of_mem _ hx, fun _ hx =>\n    gi.gc.l_le <| hs.2 <| gi.gc.monotone_u.mem_upperBounds_image hx⟩\n\n"}
{"name":"GaloisInsertion.isGLB_of_u_image","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nl : α → β\nu : β → α\ninst✝¹ : Preorder α\ninst✝ : Preorder β\ngi : GaloisInsertion l u\ns : Set β\na : α\nhs : IsGLB (Set.image u s) a\n⊢ IsGLB s (l a)","decl":"theorem isGLB_of_u_image [Preorder α] [Preorder β] (gi : GaloisInsertion l u) {s : Set β} {a : α}\n    (hs : IsGLB (u '' s) a) : IsGLB s (l a) :=\n  ⟨fun _ hx => gi.gc.l_le <| hs.1 <| mem_image_of_mem _ hx, fun x hx =>\n    (gi.le_l_u x).trans <| gi.gc.monotone_l <| hs.2 <| gi.gc.monotone_u.mem_lowerBounds_image hx⟩\n\n"}
{"name":"GaloisCoinsertion.u_inf_l","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nl : α → β\nu : β → α\ninst✝¹ : SemilatticeInf α\ninst✝ : SemilatticeInf β\ngi : GaloisCoinsertion l u\na b : α\n⊢ Eq (u (Min.min (l a) (l b))) (Min.min a b)","decl":"theorem u_inf_l [SemilatticeInf α] [SemilatticeInf β] (gi : GaloisCoinsertion l u) (a b : α) :\n    u (l a ⊓ l b) = a ⊓ b :=\n  gi.dual.l_sup_u a b\n\n"}
{"name":"GaloisCoinsertion.u_iInf_l","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nl : α → β\nu : β → α\ninst✝¹ : CompleteLattice α\ninst✝ : CompleteLattice β\ngi : GaloisCoinsertion l u\nι : Sort x\nf : ι → α\n⊢ Eq (u (iInf fun i => l (f i))) (iInf fun i => f i)","decl":"theorem u_iInf_l [CompleteLattice α] [CompleteLattice β] (gi : GaloisCoinsertion l u) {ι : Sort x}\n    (f : ι → α) : u (⨅ i, l (f i)) = ⨅ i, f i :=\n  gi.dual.l_iSup_u _\n\n"}
{"name":"GaloisCoinsertion.u_sInf_l_image","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nl : α → β\nu : β → α\ninst✝¹ : CompleteLattice α\ninst✝ : CompleteLattice β\ngi : GaloisCoinsertion l u\ns : Set α\n⊢ Eq (u (InfSet.sInf (Set.image l s))) (InfSet.sInf s)","decl":"theorem u_sInf_l_image [CompleteLattice α] [CompleteLattice β] (gi : GaloisCoinsertion l u)\n    (s : Set α) : u (sInf (l '' s)) = sInf s :=\n  gi.dual.l_sSup_u_image _\n\n"}
{"name":"GaloisCoinsertion.u_sup_l","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nl : α → β\nu : β → α\ninst✝¹ : SemilatticeSup α\ninst✝ : SemilatticeSup β\ngi : GaloisCoinsertion l u\na b : α\n⊢ Eq (u (Max.max (l a) (l b))) (Max.max a b)","decl":"theorem u_sup_l [SemilatticeSup α] [SemilatticeSup β] (gi : GaloisCoinsertion l u) (a b : α) :\n    u (l a ⊔ l b) = a ⊔ b :=\n  gi.dual.l_inf_u _ _\n\n"}
{"name":"GaloisCoinsertion.u_iSup_l","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nl : α → β\nu : β → α\ninst✝¹ : CompleteLattice α\ninst✝ : CompleteLattice β\ngi : GaloisCoinsertion l u\nι : Sort x\nf : ι → α\n⊢ Eq (u (iSup fun i => l (f i))) (iSup fun i => f i)","decl":"theorem u_iSup_l [CompleteLattice α] [CompleteLattice β] (gi : GaloisCoinsertion l u) {ι : Sort x}\n    (f : ι → α) : u (⨆ i, l (f i)) = ⨆ i, f i :=\n  gi.dual.l_iInf_u _\n\n"}
{"name":"GaloisCoinsertion.u_biSup_l","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nl : α → β\nu : β → α\ninst✝¹ : CompleteLattice α\ninst✝ : CompleteLattice β\ngi : GaloisCoinsertion l u\nι : Sort x\np : ι → Prop\nf : (i : ι) → p i → α\n⊢ Eq (u (iSup fun i => iSup fun hi => l (f i hi))) (iSup fun i => iSup fun hi => f i hi)","decl":"theorem u_biSup_l [CompleteLattice α] [CompleteLattice β] (gi : GaloisCoinsertion l u) {ι : Sort x}\n    {p : ι → Prop} (f : ∀ (i) (_ : p i), α) : u (⨆ (i) (hi), l (f i hi)) = ⨆ (i) (hi), f i hi :=\n  gi.dual.l_biInf_u _\n\n"}
{"name":"GaloisCoinsertion.u_sSup_l_image","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nl : α → β\nu : β → α\ninst✝¹ : CompleteLattice α\ninst✝ : CompleteLattice β\ngi : GaloisCoinsertion l u\ns : Set α\n⊢ Eq (u (SupSet.sSup (Set.image l s))) (SupSet.sSup s)","decl":"theorem u_sSup_l_image [CompleteLattice α] [CompleteLattice β] (gi : GaloisCoinsertion l u)\n    (s : Set α) : u (sSup (l '' s)) = sSup s :=\n  gi.dual.l_sInf_u_image _\n\n"}
{"name":"GaloisCoinsertion.u_iSup_of_lu_eq_self","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nl : α → β\nu : β → α\ninst✝¹ : CompleteLattice α\ninst✝ : CompleteLattice β\ngi : GaloisCoinsertion l u\nι : Sort x\nf : ι → β\nhf : ∀ (i : ι), Eq (l (u (f i))) (f i)\n⊢ Eq (u (iSup fun i => f i)) (iSup fun i => u (f i))","decl":"theorem u_iSup_of_lu_eq_self [CompleteLattice α] [CompleteLattice β] (gi : GaloisCoinsertion l u)\n    {ι : Sort x} (f : ι → β) (hf : ∀ i, l (u (f i)) = f i) : u (⨆ i, f i) = ⨆ i, u (f i) :=\n  gi.dual.l_iInf_of_ul_eq_self _ hf\n\n"}
{"name":"GaloisCoinsertion.u_biSup_of_lu_eq_self","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nl : α → β\nu : β → α\ninst✝¹ : CompleteLattice α\ninst✝ : CompleteLattice β\ngi : GaloisCoinsertion l u\nι : Sort x\np : ι → Prop\nf : (i : ι) → p i → β\nhf : ∀ (i : ι) (hi : p i), Eq (l (u (f i hi))) (f i hi)\n⊢ Eq (u (iSup fun i => iSup fun hi => f i hi)) (iSup fun i => iSup fun hi => u (f i hi))","decl":"theorem u_biSup_of_lu_eq_self [CompleteLattice α] [CompleteLattice β] (gi : GaloisCoinsertion l u)\n    {ι : Sort x} {p : ι → Prop} (f : ∀ (i) (_ : p i), β) (hf : ∀ i hi, l (u (f i hi)) = f i hi) :\n    u (⨆ (i) (hi), f i hi) = ⨆ (i) (hi), u (f i hi) :=\n  gi.dual.l_biInf_of_ul_eq_self _ hf\n\n"}
{"name":"GaloisCoinsertion.isGLB_of_l_image","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nl : α → β\nu : β → α\ninst✝¹ : Preorder α\ninst✝ : Preorder β\ngi : GaloisCoinsertion l u\ns : Set α\na : β\nhs : IsGLB (Set.image l s) a\n⊢ IsGLB s (u a)","decl":"theorem isGLB_of_l_image [Preorder α] [Preorder β] (gi : GaloisCoinsertion l u) {s : Set α} {a : β}\n    (hs : IsGLB (l '' s) a) : IsGLB s (u a) :=\n  gi.dual.isLUB_of_u_image hs\n\n"}
{"name":"GaloisCoinsertion.isLUB_of_l_image","module":"Mathlib.Order.GaloisConnection.Basic","initialProofState":"α : Type u\nβ : Type v\nl : α → β\nu : β → α\ninst✝¹ : Preorder α\ninst✝ : Preorder β\ngi : GaloisCoinsertion l u\ns : Set α\na : β\nhs : IsLUB (Set.image l s) a\n⊢ IsLUB s (u a)","decl":"theorem isLUB_of_l_image [Preorder α] [Preorder β] (gi : GaloisCoinsertion l u) {s : Set α} {a : β}\n    (hs : IsLUB (l '' s) a) : IsLUB s (u a) :=\n  gi.dual.isGLB_of_u_image hs\n\n"}
