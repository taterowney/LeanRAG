{"name":"CategoryTheory.ShortComplex.ShortExact.exact","module":"Mathlib.Algebra.Homology.ShortComplex.ShortExact","initialProofState":"C : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_3, u_1} C\ninst✝ : CategoryTheory.Limits.HasZeroMorphisms C\nS : CategoryTheory.ShortComplex C\nself : S.ShortExact\n⊢ S.Exact","decl":"/-- A short complex `S` is short exact if it is exact, `S.f` is a mono and `S.g` is an epi. -/\nstructure ShortExact : Prop where\n  exact : S.Exact\n  [mono_f : Mono S.f]\n  [epi_g : Epi S.g]\n\n"}
{"name":"CategoryTheory.ShortComplex.ShortExact.epi_g","module":"Mathlib.Algebra.Homology.ShortComplex.ShortExact","initialProofState":"C : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_3, u_1} C\ninst✝ : CategoryTheory.Limits.HasZeroMorphisms C\nS : CategoryTheory.ShortComplex C\nself : S.ShortExact\n⊢ CategoryTheory.Epi S.g","decl":"/-- A short complex `S` is short exact if it is exact, `S.f` is a mono and `S.g` is an epi. -/\nstructure ShortExact : Prop where\n  exact : S.Exact\n  [mono_f : Mono S.f]\n  [epi_g : Epi S.g]\n\n"}
{"name":"CategoryTheory.ShortComplex.ShortExact.mono_f","module":"Mathlib.Algebra.Homology.ShortComplex.ShortExact","initialProofState":"C : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_3, u_1} C\ninst✝ : CategoryTheory.Limits.HasZeroMorphisms C\nS : CategoryTheory.ShortComplex C\nself : S.ShortExact\n⊢ CategoryTheory.Mono S.f","decl":"/-- A short complex `S` is short exact if it is exact, `S.f` is a mono and `S.g` is an epi. -/\nstructure ShortExact : Prop where\n  exact : S.Exact\n  [mono_f : Mono S.f]\n  [epi_g : Epi S.g]\n\n"}
{"name":"CategoryTheory.ShortComplex.ShortExact.mk'","module":"Mathlib.Algebra.Homology.ShortComplex.ShortExact","initialProofState":"C : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_3, u_1} C\ninst✝ : CategoryTheory.Limits.HasZeroMorphisms C\nS : CategoryTheory.ShortComplex C\nh : S.Exact\nx✝¹ : CategoryTheory.Mono S.f\nx✝ : CategoryTheory.Epi S.g\n⊢ S.ShortExact","decl":"lemma ShortExact.mk' (h : S.Exact) (_ : Mono S.f) (_ : Epi S.g) : S.ShortExact where\n  exact := h\n\n"}
{"name":"CategoryTheory.ShortComplex.shortExact_of_iso","module":"Mathlib.Algebra.Homology.ShortComplex.ShortExact","initialProofState":"C : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_3, u_1} C\ninst✝ : CategoryTheory.Limits.HasZeroMorphisms C\nS₁ S₂ : CategoryTheory.ShortComplex C\ne : CategoryTheory.Iso S₁ S₂\nh : S₁.ShortExact\n⊢ S₂.ShortExact","decl":"lemma shortExact_of_iso (e : S₁ ≅ S₂) (h : S₁.ShortExact) : S₂.ShortExact where\n  exact := exact_of_iso e h.exact\n  mono_f := by\n    suffices Mono (S₂.f ≫ e.inv.τ₂) by\n      exact mono_of_mono _ e.inv.τ₂\n    have := h.mono_f\n    rw [← e.inv.comm₁₂]\n    apply mono_comp\n  epi_g := by\n    suffices Epi (e.hom.τ₂ ≫ S₂.g) by\n      exact epi_of_epi e.hom.τ₂ _\n    have := h.epi_g\n    rw [e.hom.comm₂₃]\n    apply epi_comp\n\n"}
{"name":"CategoryTheory.ShortComplex.shortExact_iff_of_iso","module":"Mathlib.Algebra.Homology.ShortComplex.ShortExact","initialProofState":"C : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_3, u_1} C\ninst✝ : CategoryTheory.Limits.HasZeroMorphisms C\nS₁ S₂ : CategoryTheory.ShortComplex C\ne : CategoryTheory.Iso S₁ S₂\n⊢ Iff S₁.ShortExact S₂.ShortExact","decl":"lemma shortExact_iff_of_iso (e : S₁ ≅ S₂) : S₁.ShortExact ↔ S₂.ShortExact := by\n  constructor\n  · exact shortExact_of_iso e\n  · exact shortExact_of_iso e.symm\n\n"}
{"name":"CategoryTheory.ShortComplex.ShortExact.op","module":"Mathlib.Algebra.Homology.ShortComplex.ShortExact","initialProofState":"C : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_3, u_1} C\ninst✝ : CategoryTheory.Limits.HasZeroMorphisms C\nS : CategoryTheory.ShortComplex C\nh : S.ShortExact\n⊢ S.op.ShortExact","decl":"lemma ShortExact.op (h : S.ShortExact) : S.op.ShortExact where\n  exact := h.exact.op\n  mono_f := by\n    have := h.epi_g\n    dsimp\n    infer_instance\n  epi_g := by\n    have := h.mono_f\n    dsimp\n    infer_instance\n\n"}
{"name":"CategoryTheory.ShortComplex.ShortExact.unop","module":"Mathlib.Algebra.Homology.ShortComplex.ShortExact","initialProofState":"C : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_3, u_1} C\ninst✝ : CategoryTheory.Limits.HasZeroMorphisms C\nS : CategoryTheory.ShortComplex (Opposite C)\nh : S.ShortExact\n⊢ S.unop.ShortExact","decl":"lemma ShortExact.unop {S : ShortComplex Cᵒᵖ} (h : S.ShortExact) : S.unop.ShortExact where\n  exact := h.exact.unop\n  mono_f := by\n    have := h.epi_g\n    dsimp\n    infer_instance\n  epi_g := by\n    have := h.mono_f\n    dsimp\n    infer_instance\n\n"}
{"name":"CategoryTheory.ShortComplex.shortExact_iff_op","module":"Mathlib.Algebra.Homology.ShortComplex.ShortExact","initialProofState":"C : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_3, u_1} C\ninst✝ : CategoryTheory.Limits.HasZeroMorphisms C\nS : CategoryTheory.ShortComplex C\n⊢ Iff S.ShortExact S.op.ShortExact","decl":"lemma shortExact_iff_op : S.ShortExact ↔ S.op.ShortExact :=\n  ⟨ShortExact.op, ShortExact.unop⟩\n\n"}
{"name":"CategoryTheory.ShortComplex.shortExact_iff_unop","module":"Mathlib.Algebra.Homology.ShortComplex.ShortExact","initialProofState":"C : Type u_1\ninst✝¹ : CategoryTheory.Category.{u_3, u_1} C\ninst✝ : CategoryTheory.Limits.HasZeroMorphisms C\nS : CategoryTheory.ShortComplex (Opposite C)\n⊢ Iff S.ShortExact S.unop.ShortExact","decl":"lemma shortExact_iff_unop (S : ShortComplex Cᵒᵖ) : S.ShortExact ↔ S.unop.ShortExact :=\n  S.unop.shortExact_iff_op.symm\n\n"}
{"name":"CategoryTheory.ShortComplex.ShortExact.map","module":"Mathlib.Algebra.Homology.ShortComplex.ShortExact","initialProofState":"C : Type u_1\nD : Type u_2\ninst✝⁸ : CategoryTheory.Category.{u_3, u_1} C\ninst✝⁷ : CategoryTheory.Category.{u_4, u_2} D\ninst✝⁶ : CategoryTheory.Limits.HasZeroMorphisms C\ninst✝⁵ : CategoryTheory.Limits.HasZeroMorphisms D\nS : CategoryTheory.ShortComplex C\nh : S.ShortExact\nF : CategoryTheory.Functor C D\ninst✝⁴ : F.PreservesZeroMorphisms\ninst✝³ : F.PreservesLeftHomologyOf S\ninst✝² : F.PreservesRightHomologyOf S\ninst✝¹ : CategoryTheory.Mono (F.map S.f)\ninst✝ : CategoryTheory.Epi (F.map S.g)\n⊢ (S.map F).ShortExact","decl":"lemma ShortExact.map (h : S.ShortExact) (F : C ⥤ D)\n    [F.PreservesZeroMorphisms] [F.PreservesLeftHomologyOf S]\n    [F.PreservesRightHomologyOf S] [Mono (F.map S.f)] [Epi (F.map S.g)] :\n    (S.map F).ShortExact where\n  exact := h.exact.map F\n  mono_f := (inferInstance : Mono (F.map S.f))\n  epi_g := (inferInstance : Epi (F.map S.g))\n\n"}
{"name":"CategoryTheory.ShortComplex.ShortExact.map_of_exact","module":"Mathlib.Algebra.Homology.ShortComplex.ShortExact","initialProofState":"C : Type u_1\nD : Type u_2\ninst✝⁶ : CategoryTheory.Category.{u_3, u_1} C\ninst✝⁵ : CategoryTheory.Category.{u_4, u_2} D\ninst✝⁴ : CategoryTheory.Limits.HasZeroMorphisms C\ninst✝³ : CategoryTheory.Limits.HasZeroMorphisms D\nS : CategoryTheory.ShortComplex C\nhS : S.ShortExact\nF : CategoryTheory.Functor C D\ninst✝² : F.PreservesZeroMorphisms\ninst✝¹ : CategoryTheory.Limits.PreservesFiniteLimits F\ninst✝ : CategoryTheory.Limits.PreservesFiniteColimits F\n⊢ (S.map F).ShortExact","decl":"lemma ShortExact.map_of_exact (hS : S.ShortExact)\n    (F : C ⥤ D) [F.PreservesZeroMorphisms] [PreservesFiniteLimits F]\n    [PreservesFiniteColimits F] : (S.map F).ShortExact := by\n  have := hS.mono_f\n  have := hS.epi_g\n  have := preserves_mono_of_preservesLimit F S.f\n  have := preserves_epi_of_preservesColimit F S.g\n  exact hS.map F\n\n"}
{"name":"CategoryTheory.ShortComplex.ShortExact.isIso_f_iff","module":"Mathlib.Algebra.Homology.ShortComplex.ShortExact","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_3, u_1} C\ninst✝¹ : CategoryTheory.Preadditive C\nS : CategoryTheory.ShortComplex C\nhS : S.ShortExact\ninst✝ : CategoryTheory.Balanced C\n⊢ Iff (CategoryTheory.IsIso S.f) (CategoryTheory.Limits.IsZero S.X₃)","decl":"lemma ShortExact.isIso_f_iff {S : ShortComplex C} (hS : S.ShortExact) [Balanced C] :\n    IsIso S.f ↔ IsZero S.X₃ := by\n  have := hS.exact.hasZeroObject\n  have := hS.mono_f\n  have := hS.epi_g\n  constructor\n  · intro hf\n    simp only [IsZero.iff_id_eq_zero, ← cancel_epi S.g, ← cancel_epi S.f,\n      S.zero_assoc, zero_comp]\n  · intro hX₃\n    have : Epi S.f := (S.exact_iff_epi (hX₃.eq_of_tgt _ _)).1 hS.exact\n    apply isIso_of_mono_of_epi\n\n"}
{"name":"CategoryTheory.ShortComplex.ShortExact.isIso_g_iff","module":"Mathlib.Algebra.Homology.ShortComplex.ShortExact","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_3, u_1} C\ninst✝¹ : CategoryTheory.Preadditive C\nS : CategoryTheory.ShortComplex C\nhS : S.ShortExact\ninst✝ : CategoryTheory.Balanced C\n⊢ Iff (CategoryTheory.IsIso S.g) (CategoryTheory.Limits.IsZero S.X₁)","decl":"lemma ShortExact.isIso_g_iff  {S : ShortComplex C} (hS : S.ShortExact) [Balanced C] :\n    IsIso S.g ↔ IsZero S.X₁ := by\n  have := hS.exact.hasZeroObject\n  have := hS.mono_f\n  have := hS.epi_g\n  constructor\n  · intro hf\n    simp only [IsZero.iff_id_eq_zero, ← cancel_mono S.f, ← cancel_mono S.g,\n      S.zero, zero_comp, assoc, comp_zero]\n  · intro hX₁\n    have : Mono S.g := (S.exact_iff_mono (hX₁.eq_of_src _ _)).1 hS.exact\n    apply isIso_of_mono_of_epi\n\n"}
{"name":"CategoryTheory.ShortComplex.isIso₂_of_shortExact_of_isIso₁₃","module":"Mathlib.Algebra.Homology.ShortComplex.ShortExact","initialProofState":"C : Type u_1\ninst✝⁴ : CategoryTheory.Category.{u_3, u_1} C\ninst✝³ : CategoryTheory.Preadditive C\ninst✝² : CategoryTheory.Balanced C\nS₁ S₂ : CategoryTheory.ShortComplex C\nφ : Quiver.Hom S₁ S₂\nh₁ : S₁.ShortExact\nh₂ : S₂.ShortExact\ninst✝¹ : CategoryTheory.IsIso φ.τ₁\ninst✝ : CategoryTheory.IsIso φ.τ₃\n⊢ CategoryTheory.IsIso φ.τ₂","decl":"lemma isIso₂_of_shortExact_of_isIso₁₃ [Balanced C] {S₁ S₂ : ShortComplex C} (φ : S₁ ⟶ S₂)\n    (h₁ : S₁.ShortExact) (h₂ : S₂.ShortExact) [IsIso φ.τ₁] [IsIso φ.τ₃] : IsIso φ.τ₂ := by\n  have := h₁.mono_f\n  have := h₂.mono_f\n  have := h₁.epi_g\n  have := h₂.epi_g\n  have := mono_τ₂_of_exact_of_mono φ h₁.exact\n  have := epi_τ₂_of_exact_of_epi φ h₂.exact\n  apply isIso_of_mono_of_epi\n\n"}
{"name":"CategoryTheory.ShortComplex.isIso₂_of_shortExact_of_isIso₁₃'","module":"Mathlib.Algebra.Homology.ShortComplex.ShortExact","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_3, u_1} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Balanced C\nS₁ S₂ : CategoryTheory.ShortComplex C\nφ : Quiver.Hom S₁ S₂\nh₁ : S₁.ShortExact\nh₂ : S₂.ShortExact\nx✝¹ : CategoryTheory.IsIso φ.τ₁\nx✝ : CategoryTheory.IsIso φ.τ₃\n⊢ CategoryTheory.IsIso φ.τ₂","decl":"lemma isIso₂_of_shortExact_of_isIso₁₃' [Balanced C] {S₁ S₂ : ShortComplex C} (φ : S₁ ⟶ S₂)\n    (h₁ : S₁.ShortExact) (h₂ : S₂.ShortExact) (_ : IsIso φ.τ₁) (_ : IsIso φ.τ₃) : IsIso φ.τ₂ :=\n  isIso₂_of_shortExact_of_isIso₁₃ φ h₁ h₂\n\n"}
{"name":"CategoryTheory.ShortComplex.Splitting.shortExact","module":"Mathlib.Algebra.Homology.ShortComplex.ShortExact","initialProofState":"C : Type u_1\ninst✝² : CategoryTheory.Category.{u_3, u_1} C\ninst✝¹ : CategoryTheory.Preadditive C\nS : CategoryTheory.ShortComplex C\ninst✝ : CategoryTheory.Limits.HasZeroObject C\ns : S.Splitting\n⊢ S.ShortExact","decl":"/-- A split short complex is short exact. -/\nlemma Splitting.shortExact {S : ShortComplex C} [HasZeroObject C] (s : S.Splitting) :\n    S.ShortExact where\n  exact := s.exact\n  mono_f := s.mono_f\n  epi_g := s.epi_g\n\n"}
