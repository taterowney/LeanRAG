{"name":"le_of_forall_lt_one_mul_le","module":"Mathlib.Algebra.Order.Group.DenselyOrdered","initialProofState":"α : Type u_1\ninst✝³ : Group α\ninst✝² : LinearOrder α\ninst✝¹ : MulLeftMono α\ninst✝ : DenselyOrdered α\na b : α\nh : ∀ (ε : α), LT.lt ε 1 → LE.le (HMul.hMul a ε) b\n⊢ LE.le a b","decl":"@[to_additive]\ntheorem le_of_forall_lt_one_mul_le (h : ∀ ε < 1, a * ε ≤ b) : a ≤ b :=\n  le_of_forall_one_lt_le_mul (α := αᵒᵈ) h\n\n"}
{"name":"le_of_forall_neg_add_le","module":"Mathlib.Algebra.Order.Group.DenselyOrdered","initialProofState":"α : Type u_1\ninst✝³ : AddGroup α\ninst✝² : LinearOrder α\ninst✝¹ : AddLeftMono α\ninst✝ : DenselyOrdered α\na b : α\nh : ∀ (ε : α), LT.lt ε 0 → LE.le (HAdd.hAdd a ε) b\n⊢ LE.le a b","decl":"@[to_additive]\ntheorem le_of_forall_lt_one_mul_le (h : ∀ ε < 1, a * ε ≤ b) : a ≤ b :=\n  le_of_forall_one_lt_le_mul (α := αᵒᵈ) h\n\n"}
{"name":"le_of_forall_pos_sub_le","module":"Mathlib.Algebra.Order.Group.DenselyOrdered","initialProofState":"α : Type u_1\ninst✝³ : AddGroup α\ninst✝² : LinearOrder α\ninst✝¹ : AddLeftMono α\ninst✝ : DenselyOrdered α\na b : α\nh : ∀ (ε : α), LT.lt 0 ε → LE.le (HSub.hSub a ε) b\n⊢ LE.le a b","decl":"@[to_additive]\ntheorem le_of_forall_one_lt_div_le (h : ∀ ε : α, 1 < ε → a / ε ≤ b) : a ≤ b :=\n  le_of_forall_lt_one_mul_le fun ε ε1 => by\n    simpa only [div_eq_mul_inv, inv_inv] using h ε⁻¹ (Left.one_lt_inv_iff.2 ε1)\n\n"}
{"name":"le_of_forall_one_lt_div_le","module":"Mathlib.Algebra.Order.Group.DenselyOrdered","initialProofState":"α : Type u_1\ninst✝³ : Group α\ninst✝² : LinearOrder α\ninst✝¹ : MulLeftMono α\ninst✝ : DenselyOrdered α\na b : α\nh : ∀ (ε : α), LT.lt 1 ε → LE.le (HDiv.hDiv a ε) b\n⊢ LE.le a b","decl":"@[to_additive]\ntheorem le_of_forall_one_lt_div_le (h : ∀ ε : α, 1 < ε → a / ε ≤ b) : a ≤ b :=\n  le_of_forall_lt_one_mul_le fun ε ε1 => by\n    simpa only [div_eq_mul_inv, inv_inv] using h ε⁻¹ (Left.one_lt_inv_iff.2 ε1)\n\n"}
{"name":"le_iff_forall_neg_add_le","module":"Mathlib.Algebra.Order.Group.DenselyOrdered","initialProofState":"α : Type u_1\ninst✝³ : AddGroup α\ninst✝² : LinearOrder α\ninst✝¹ : AddLeftMono α\ninst✝ : DenselyOrdered α\na b : α\n⊢ Iff (LE.le a b) (∀ (ε : α), LT.lt ε 0 → LE.le (HAdd.hAdd a ε) b)","decl":"@[to_additive]\ntheorem le_iff_forall_lt_one_mul_le : a ≤ b ↔ ∀ ε < 1, a * ε ≤ b :=\n  le_iff_forall_one_lt_le_mul (α := αᵒᵈ)\n\n"}
{"name":"le_iff_forall_lt_one_mul_le","module":"Mathlib.Algebra.Order.Group.DenselyOrdered","initialProofState":"α : Type u_1\ninst✝³ : Group α\ninst✝² : LinearOrder α\ninst✝¹ : MulLeftMono α\ninst✝ : DenselyOrdered α\na b : α\n⊢ Iff (LE.le a b) (∀ (ε : α), LT.lt ε 1 → LE.le (HMul.hMul a ε) b)","decl":"@[to_additive]\ntheorem le_iff_forall_lt_one_mul_le : a ≤ b ↔ ∀ ε < 1, a * ε ≤ b :=\n  le_iff_forall_one_lt_le_mul (α := αᵒᵈ)\n\n"}
{"name":"le_mul_of_forall_lt","module":"Mathlib.Algebra.Order.Group.DenselyOrdered","initialProofState":"α : Type u_1\ninst✝³ : CommGroup α\ninst✝² : LinearOrder α\ninst✝¹ : CovariantClass α α (fun x1 x2 => HMul.hMul x1 x2) fun x1 x2 => LE.le x1 x2\ninst✝ : DenselyOrdered α\na b c : α\nh : ∀ (a' : α), GT.gt a' a → ∀ (b' : α), GT.gt b' b → LE.le c (HMul.hMul a' b')\n⊢ LE.le c (HMul.hMul a b)","decl":"@[to_additive]\nlemma le_mul_of_forall_lt [CommGroup α] [LinearOrder α] [CovariantClass α α (· * ·) (· ≤ ·)]\n    [DenselyOrdered α] {a b c : α} (h : ∀ a' > a, ∀ b' > b, c ≤ a' * b') :\n    c ≤ a * b := by\n  refine le_of_forall_gt_imp_ge_of_dense fun d hd ↦ ?_\n  obtain ⟨a', ha', hd⟩ := exists_mul_left_lt hd\n  obtain ⟨b', hb', hd⟩ := exists_mul_right_lt hd\n  exact (h a' ha' b' hb').trans hd.le\n\n"}
{"name":"le_add_of_forall_lt","module":"Mathlib.Algebra.Order.Group.DenselyOrdered","initialProofState":"α : Type u_1\ninst✝³ : AddCommGroup α\ninst✝² : LinearOrder α\ninst✝¹ : CovariantClass α α (fun x1 x2 => HAdd.hAdd x1 x2) fun x1 x2 => LE.le x1 x2\ninst✝ : DenselyOrdered α\na b c : α\nh : ∀ (a' : α), GT.gt a' a → ∀ (b' : α), GT.gt b' b → LE.le c (HAdd.hAdd a' b')\n⊢ LE.le c (HAdd.hAdd a b)","decl":"@[to_additive]\nlemma le_mul_of_forall_lt [CommGroup α] [LinearOrder α] [CovariantClass α α (· * ·) (· ≤ ·)]\n    [DenselyOrdered α] {a b c : α} (h : ∀ a' > a, ∀ b' > b, c ≤ a' * b') :\n    c ≤ a * b := by\n  refine le_of_forall_gt_imp_ge_of_dense fun d hd ↦ ?_\n  obtain ⟨a', ha', hd⟩ := exists_mul_left_lt hd\n  obtain ⟨b', hb', hd⟩ := exists_mul_right_lt hd\n  exact (h a' ha' b' hb').trans hd.le\n\n"}
{"name":"add_le_of_forall_lt","module":"Mathlib.Algebra.Order.Group.DenselyOrdered","initialProofState":"α : Type u_1\ninst✝³ : AddCommGroup α\ninst✝² : LinearOrder α\ninst✝¹ : CovariantClass α α (fun x1 x2 => HAdd.hAdd x1 x2) fun x1 x2 => LE.le x1 x2\ninst✝ : DenselyOrdered α\na b c : α\nh : ∀ (a' : α), LT.lt a' a → ∀ (b' : α), LT.lt b' b → LE.le (HAdd.hAdd a' b') c\n⊢ LE.le (HAdd.hAdd a b) c","decl":"@[to_additive]\nlemma mul_le_of_forall_lt [CommGroup α] [LinearOrder α] [CovariantClass α α (· * ·) (· ≤ ·)]\n    [DenselyOrdered α] {a b c : α} (h : ∀ a' < a, ∀ b' < b, a' * b' ≤ c) :\n    a * b ≤ c := by\n  refine le_of_forall_lt_imp_le_of_dense fun d hd ↦ ?_\n  obtain ⟨a', ha', hd⟩ := exists_lt_mul_left hd\n  obtain ⟨b', hb', hd⟩ := exists_lt_mul_right hd\n  exact hd.le.trans (h a' ha' b' hb')\n\n"}
{"name":"mul_le_of_forall_lt","module":"Mathlib.Algebra.Order.Group.DenselyOrdered","initialProofState":"α : Type u_1\ninst✝³ : CommGroup α\ninst✝² : LinearOrder α\ninst✝¹ : CovariantClass α α (fun x1 x2 => HMul.hMul x1 x2) fun x1 x2 => LE.le x1 x2\ninst✝ : DenselyOrdered α\na b c : α\nh : ∀ (a' : α), LT.lt a' a → ∀ (b' : α), LT.lt b' b → LE.le (HMul.hMul a' b') c\n⊢ LE.le (HMul.hMul a b) c","decl":"@[to_additive]\nlemma mul_le_of_forall_lt [CommGroup α] [LinearOrder α] [CovariantClass α α (· * ·) (· ≤ ·)]\n    [DenselyOrdered α] {a b c : α} (h : ∀ a' < a, ∀ b' < b, a' * b' ≤ c) :\n    a * b ≤ c := by\n  refine le_of_forall_lt_imp_le_of_dense fun d hd ↦ ?_\n  obtain ⟨a', ha', hd⟩ := exists_lt_mul_left hd\n  obtain ⟨b', hb', hd⟩ := exists_lt_mul_right hd\n  exact hd.le.trans (h a' ha' b' hb')\n\n"}
