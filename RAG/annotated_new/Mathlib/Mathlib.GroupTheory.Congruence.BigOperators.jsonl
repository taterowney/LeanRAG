{"name":"Con.list_prod","module":"Mathlib.GroupTheory.Congruence.BigOperators","initialProofState":"ι : Type u_1\nM : Type u_2\ninst✝ : Monoid M\nc : Con M\nl : List ι\nf g : ι → M\nh : ∀ (x : ι), Membership.mem l x → c (f x) (g x)\n⊢ c (List.map f l).prod (List.map g l).prod","decl":"/-- Multiplicative congruence relations preserve product indexed by a list. -/\n@[to_additive \"Additive congruence relations preserve sum indexed by a list.\"]\nprotected theorem list_prod {ι M : Type*} [Monoid M] (c : Con M) {l : List ι} {f g : ι → M}\n    (h : ∀ x ∈ l, c (f x) (g x)) :\n    c (l.map f).prod (l.map g).prod := by\n  induction l with\n  | nil =>\n    simpa only [List.map_nil, List.prod_nil] using c.refl 1\n  | cons x xs ih =>\n    rw [List.map_cons, List.map_cons, List.prod_cons, List.prod_cons]\n    exact c.mul (h _ <| .head _) <| ih fun k hk ↦ h _ (.tail _ hk)\n\n"}
{"name":"AddCon.list_sum","module":"Mathlib.GroupTheory.Congruence.BigOperators","initialProofState":"ι : Type u_1\nM : Type u_2\ninst✝ : AddMonoid M\nc : AddCon M\nl : List ι\nf g : ι → M\nh : ∀ (x : ι), Membership.mem l x → c (f x) (g x)\n⊢ c (List.map f l).sum (List.map g l).sum","decl":"/-- Multiplicative congruence relations preserve product indexed by a list. -/\n@[to_additive \"Additive congruence relations preserve sum indexed by a list.\"]\nprotected theorem list_prod {ι M : Type*} [Monoid M] (c : Con M) {l : List ι} {f g : ι → M}\n    (h : ∀ x ∈ l, c (f x) (g x)) :\n    c (l.map f).prod (l.map g).prod := by\n  induction l with\n  | nil =>\n    simpa only [List.map_nil, List.prod_nil] using c.refl 1\n  | cons x xs ih =>\n    rw [List.map_cons, List.map_cons, List.prod_cons, List.prod_cons]\n    exact c.mul (h _ <| .head _) <| ih fun k hk ↦ h _ (.tail _ hk)\n\n"}
{"name":"AddCon.multiset_sum","module":"Mathlib.GroupTheory.Congruence.BigOperators","initialProofState":"ι : Type u_1\nM : Type u_2\ninst✝ : AddCommMonoid M\nc : AddCon M\ns : Multiset ι\nf g : ι → M\nh : ∀ (x : ι), Membership.mem s x → c (f x) (g x)\n⊢ c (Multiset.map f s).sum (Multiset.map g s).sum","decl":"/-- Multiplicative congruence relations preserve product indexed by a multiset. -/\n@[to_additive \"Additive congruence relations preserve sum indexed by a multiset.\"]\nprotected theorem multiset_prod {ι M : Type*} [CommMonoid M] (c : Con M) {s : Multiset ι}\n    {f g : ι → M} (h : ∀ x ∈ s, c (f x) (g x)) :\n    c (s.map f).prod (s.map g).prod := by\n  rcases s; simpa using c.list_prod h\n\n"}
{"name":"Con.multiset_prod","module":"Mathlib.GroupTheory.Congruence.BigOperators","initialProofState":"ι : Type u_1\nM : Type u_2\ninst✝ : CommMonoid M\nc : Con M\ns : Multiset ι\nf g : ι → M\nh : ∀ (x : ι), Membership.mem s x → c (f x) (g x)\n⊢ c (Multiset.map f s).prod (Multiset.map g s).prod","decl":"/-- Multiplicative congruence relations preserve product indexed by a multiset. -/\n@[to_additive \"Additive congruence relations preserve sum indexed by a multiset.\"]\nprotected theorem multiset_prod {ι M : Type*} [CommMonoid M] (c : Con M) {s : Multiset ι}\n    {f g : ι → M} (h : ∀ x ∈ s, c (f x) (g x)) :\n    c (s.map f).prod (s.map g).prod := by\n  rcases s; simpa using c.list_prod h\n\n"}
{"name":"Con.finset_prod","module":"Mathlib.GroupTheory.Congruence.BigOperators","initialProofState":"ι : Type u_1\nM : Type u_2\ninst✝ : CommMonoid M\nc : Con M\ns : Finset ι\nf g : ι → M\nh : ∀ (i : ι), Membership.mem s i → c (f i) (g i)\n⊢ c (s.prod f) (s.prod g)","decl":"/-- Multiplicative congruence relations preserve finite product. -/\n@[to_additive \"Additive congruence relations preserve finite sum.\"]\nprotected theorem finset_prod {ι M : Type*} [CommMonoid M] (c : Con M) (s : Finset ι)\n    {f g : ι → M} (h : ∀ i ∈ s, c (f i) (g i)) :\n    c (s.prod f) (s.prod g) :=\n  c.multiset_prod h\n\n"}
{"name":"AddCon.finset_sum","module":"Mathlib.GroupTheory.Congruence.BigOperators","initialProofState":"ι : Type u_1\nM : Type u_2\ninst✝ : AddCommMonoid M\nc : AddCon M\ns : Finset ι\nf g : ι → M\nh : ∀ (i : ι), Membership.mem s i → c (f i) (g i)\n⊢ c (s.sum f) (s.sum g)","decl":"/-- Multiplicative congruence relations preserve finite product. -/\n@[to_additive \"Additive congruence relations preserve finite sum.\"]\nprotected theorem finset_prod {ι M : Type*} [CommMonoid M] (c : Con M) (s : Finset ι)\n    {f g : ι → M} (h : ∀ i ∈ s, c (f i) (g i)) :\n    c (s.prod f) (s.prod g) :=\n  c.multiset_prod h\n\n"}
