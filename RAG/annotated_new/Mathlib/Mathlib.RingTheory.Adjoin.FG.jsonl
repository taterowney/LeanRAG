{"name":"Algebra.fg_trans","module":"Mathlib.RingTheory.Adjoin.FG","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : CommSemiring A\ninst✝ : Algebra R A\ns t : Set A\nh1 : (Subalgebra.toSubmodule (Algebra.adjoin R s)).FG\nh2 : (Subalgebra.toSubmodule (Algebra.adjoin (Subtype fun x => Membership.mem (Algebra.adjoin R s) x) t)).FG\n⊢ (Subalgebra.toSubmodule (Algebra.adjoin R (Union.union s t))).FG","decl":"theorem fg_trans (h1 : (adjoin R s).toSubmodule.FG) (h2 : (adjoin (adjoin R s) t).toSubmodule.FG) :\n    (adjoin R (s ∪ t)).toSubmodule.FG := by\n  rcases fg_def.1 h1 with ⟨p, hp, hp'⟩\n  rcases fg_def.1 h2 with ⟨q, hq, hq'⟩\n  refine fg_def.2 ⟨p * q, hp.mul hq, le_antisymm ?_ ?_⟩\n  · rw [span_le, Set.mul_subset_iff]\n    intro x hx y hy\n    change x * y ∈ adjoin R (s ∪ t)\n    refine Subalgebra.mul_mem _ ?_ ?_\n    · have : x ∈ Subalgebra.toSubmodule (adjoin R s) := by\n        rw [← hp']\n        exact subset_span hx\n      exact adjoin_mono Set.subset_union_left this\n    have : y ∈ Subalgebra.toSubmodule (adjoin (adjoin R s) t) := by\n      rw [← hq']\n      exact subset_span hy\n    change y ∈ adjoin R (s ∪ t)\n    rwa [adjoin_union_eq_adjoin_adjoin]\n  · intro r hr\n    change r ∈ adjoin R (s ∪ t) at hr\n    rw [adjoin_union_eq_adjoin_adjoin] at hr\n    change r ∈ Subalgebra.toSubmodule (adjoin (adjoin R s) t) at hr\n    rw [← hq', ← Set.image_id q, Finsupp.mem_span_image_iff_linearCombination (adjoin R s)] at hr\n    rcases hr with ⟨l, hlq, rfl⟩\n    have := @Finsupp.linearCombination_apply A A (adjoin R s)\n    rw [this, Finsupp.sum]\n    refine sum_mem ?_\n    intro z hz\n    change (l z).1 * _ ∈ _\n    have : (l z).1 ∈ Subalgebra.toSubmodule (adjoin R s) := (l z).2\n    rw [← hp', ← Set.image_id p, Finsupp.mem_span_image_iff_linearCombination R] at this\n    rcases this with ⟨l2, hlp, hl⟩\n    have := @Finsupp.linearCombination_apply A A R\n    rw [this] at hl\n    rw [← hl, Finsupp.sum_mul]\n    refine sum_mem ?_\n    intro t ht\n    change _ * _ ∈ _\n    rw [smul_mul_assoc]\n    refine smul_mem _ _ ?_\n    exact subset_span ⟨t, hlp ht, z, hlq hz, rfl⟩\n\n"}
{"name":"Subalgebra.fg_adjoin_finset","module":"Mathlib.RingTheory.Adjoin.FG","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\ns : Finset A\n⊢ (Algebra.adjoin R ↑s).FG","decl":"theorem fg_adjoin_finset (s : Finset A) : (Algebra.adjoin R (↑s : Set A)).FG :=\n  ⟨s, rfl⟩\n\n"}
{"name":"Subalgebra.fg_def","module":"Mathlib.RingTheory.Adjoin.FG","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS : Subalgebra R A\n⊢ Iff S.FG (Exists fun t => And t.Finite (Eq (Algebra.adjoin R t) S))","decl":"theorem fg_def {S : Subalgebra R A} : S.FG ↔ ∃ t : Set A, Set.Finite t ∧ Algebra.adjoin R t = S :=\n  Iff.symm Set.exists_finite_iff_finset\n\n"}
{"name":"Subalgebra.fg_bot","module":"Mathlib.RingTheory.Adjoin.FG","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\n⊢ Bot.bot.FG","decl":"theorem fg_bot : (⊥ : Subalgebra R A).FG :=\n  ⟨∅, Finset.coe_empty ▸ Algebra.adjoin_empty R A⟩\n\n"}
{"name":"Subalgebra.fg_of_fg_toSubmodule","module":"Mathlib.RingTheory.Adjoin.FG","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS : Subalgebra R A\na✝ : (Subalgebra.toSubmodule S).FG\n⊢ S.FG","decl":"theorem fg_of_fg_toSubmodule {S : Subalgebra R A} : S.toSubmodule.FG → S.FG :=\n  fun ⟨t, ht⟩ ↦ ⟨t, le_antisymm\n    (Algebra.adjoin_le fun x hx ↦ show x ∈ Subalgebra.toSubmodule S from ht ▸ subset_span hx) <|\n    show Subalgebra.toSubmodule S ≤ Subalgebra.toSubmodule (Algebra.adjoin R ↑t) from fun x hx ↦\n      span_le.mpr (fun _ hx ↦ Algebra.subset_adjoin hx)\n        (show x ∈ span R ↑t by\n          rw [ht]\n          exact hx)⟩\n\n"}
{"name":"Subalgebra.fg_of_noetherian","module":"Mathlib.RingTheory.Adjoin.FG","initialProofState":"R : Type u\nA : Type v\ninst✝³ : CommSemiring R\ninst✝² : Semiring A\ninst✝¹ : Algebra R A\ninst✝ : IsNoetherian R A\nS : Subalgebra R A\n⊢ S.FG","decl":"theorem fg_of_noetherian [IsNoetherian R A] (S : Subalgebra R A) : S.FG :=\n  fg_of_fg_toSubmodule (IsNoetherian.noetherian (Subalgebra.toSubmodule S))\n\n"}
{"name":"Subalgebra.fg_of_submodule_fg","module":"Mathlib.RingTheory.Adjoin.FG","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nh : Top.top.FG\n⊢ Top.top.FG","decl":"theorem fg_of_submodule_fg (h : (⊤ : Submodule R A).FG) : (⊤ : Subalgebra R A).FG :=\n  let ⟨s, hs⟩ := h\n  ⟨s, toSubmodule.injective <| by\n    rw [Algebra.top_toSubmodule, eq_top_iff, ← hs, span_le]\n    exact Algebra.subset_adjoin⟩\n\n"}
{"name":"Subalgebra.FG.prod","module":"Mathlib.RingTheory.Adjoin.FG","initialProofState":"R : Type u\nA : Type v\nB : Type w\ninst✝⁴ : CommSemiring R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : Semiring B\ninst✝ : Algebra R B\nS : Subalgebra R A\nT : Subalgebra R B\nhS : S.FG\nhT : T.FG\n⊢ (S.prod T).FG","decl":"theorem FG.prod {S : Subalgebra R A} {T : Subalgebra R B} (hS : S.FG) (hT : T.FG) :\n    (S.prod T).FG := by\n  obtain ⟨s, hs⟩ := fg_def.1 hS\n  obtain ⟨t, ht⟩ := fg_def.1 hT\n  rw [← hs.2, ← ht.2]\n  exact fg_def.2 ⟨LinearMap.inl R A B '' (s ∪ {1}) ∪ LinearMap.inr R A B '' (t ∪ {1}),\n    Set.Finite.union (Set.Finite.image _ (Set.Finite.union hs.1 (Set.finite_singleton _)))\n      (Set.Finite.image _ (Set.Finite.union ht.1 (Set.finite_singleton _))),\n    Algebra.adjoin_inl_union_inr_eq_prod R s t⟩\n\n"}
{"name":"Subalgebra.FG.map","module":"Mathlib.RingTheory.Adjoin.FG","initialProofState":"R : Type u\nA : Type v\nB : Type w\ninst✝⁴ : CommSemiring R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : Semiring B\ninst✝ : Algebra R B\nS : Subalgebra R A\nf : AlgHom R A B\nhs : S.FG\n⊢ (Subalgebra.map f S).FG","decl":"theorem FG.map {S : Subalgebra R A} (f : A →ₐ[R] B) (hs : S.FG) : (S.map f).FG := by\n  let ⟨s, hs⟩ := hs\n  classical\n  exact ⟨s.image f, by rw [Finset.coe_image, Algebra.adjoin_image, hs]⟩\n\n"}
{"name":"Subalgebra.fg_of_fg_map","module":"Mathlib.RingTheory.Adjoin.FG","initialProofState":"R : Type u\nA : Type v\nB : Type w\ninst✝⁴ : CommSemiring R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : Semiring B\ninst✝ : Algebra R B\nS : Subalgebra R A\nf : AlgHom R A B\nhf : Function.Injective ⇑f\nhs : (Subalgebra.map f S).FG\n⊢ S.FG","decl":"theorem fg_of_fg_map (S : Subalgebra R A) (f : A →ₐ[R] B) (hf : Function.Injective f)\n    (hs : (S.map f).FG) : S.FG :=\n  let ⟨s, hs⟩ := hs\n  ⟨s.preimage f fun _ _ _ _ h ↦ hf h,\n    map_injective hf <| by\n      rw [← Algebra.adjoin_image, Finset.coe_preimage, Set.image_preimage_eq_of_subset, hs]\n      rw [← AlgHom.coe_range, ← Algebra.adjoin_le_iff, hs, ← Algebra.map_top]\n      exact map_mono le_top⟩\n\n"}
{"name":"Subalgebra.fg_top","module":"Mathlib.RingTheory.Adjoin.FG","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nS : Subalgebra R A\n⊢ Iff Top.top.FG S.FG","decl":"theorem fg_top (S : Subalgebra R A) : (⊤ : Subalgebra R S).FG ↔ S.FG :=\n  ⟨fun h ↦ by\n    rw [← S.range_val, ← Algebra.map_top]\n    exact FG.map _ h, fun h ↦\n    fg_of_fg_map _ S.val Subtype.val_injective <| by\n      rw [Algebra.map_top, range_val]\n      exact h⟩\n\n"}
{"name":"Subalgebra.induction_on_adjoin","module":"Mathlib.RingTheory.Adjoin.FG","initialProofState":"R : Type u\nA : Type v\ninst✝³ : CommSemiring R\ninst✝² : Semiring A\ninst✝¹ : Algebra R A\ninst✝ : IsNoetherian R A\nP : Subalgebra R A → Prop\nbase : P Bot.bot\nih : ∀ (S : Subalgebra R A) (x : A), P S → P (Algebra.adjoin R (Insert.insert x ↑S))\nS : Subalgebra R A\n⊢ P S","decl":"theorem induction_on_adjoin [IsNoetherian R A] (P : Subalgebra R A → Prop) (base : P ⊥)\n    (ih : ∀ (S : Subalgebra R A) (x : A), P S → P (Algebra.adjoin R (insert x S)))\n    (S : Subalgebra R A) : P S := by\n  classical\n  obtain ⟨t, rfl⟩ := S.fg_of_noetherian\n  refine Finset.induction_on t ?_ ?_\n  · simpa using base\n  intro x t _ h\n  rw [Finset.coe_insert]\n  simpa only [Algebra.adjoin_insert_adjoin] using ih _ x h\n\n"}
{"name":"AlgHom.isNoetherianRing_range","module":"Mathlib.RingTheory.Adjoin.FG","initialProofState":"R : Type u\nA : Type v\nB : Type w\ninst✝⁵ : CommSemiring R\ninst✝⁴ : CommRing A\ninst✝³ : CommRing B\ninst✝² : Algebra R A\ninst✝¹ : Algebra R B\nf : AlgHom R A B\ninst✝ : IsNoetherianRing A\n⊢ IsNoetherianRing (Subtype fun x => Membership.mem f.range x)","decl":"/-- The image of a Noetherian R-algebra under an R-algebra map is a Noetherian ring. -/\ninstance AlgHom.isNoetherianRing_range (f : A →ₐ[R] B) [IsNoetherianRing A] :\n    IsNoetherianRing f.range :=\n  _root_.isNoetherianRing_range f.toRingHom\n\n"}
{"name":"isNoetherianRing_of_fg","module":"Mathlib.RingTheory.Adjoin.FG","initialProofState":"R : Type u\nA : Type v\ninst✝³ : CommRing R\ninst✝² : CommRing A\ninst✝¹ : Algebra R A\nS : Subalgebra R A\nHS : S.FG\ninst✝ : IsNoetherianRing R\n⊢ IsNoetherianRing (Subtype fun x => Membership.mem S x)","decl":"theorem isNoetherianRing_of_fg {S : Subalgebra R A} (HS : S.FG) [IsNoetherianRing R] :\n    IsNoetherianRing S :=\n  let ⟨t, ht⟩ := HS\n  ht ▸ (Algebra.adjoin_eq_range R (↑t : Set A)).symm ▸ AlgHom.isNoetherianRing_range _\n\n"}
{"name":"is_noetherian_subring_closure","module":"Mathlib.RingTheory.Adjoin.FG","initialProofState":"R : Type u\ninst✝ : CommRing R\ns : Set R\nhs : s.Finite\n⊢ IsNoetherianRing (Subtype fun x => Membership.mem (Subring.closure s) x)","decl":"theorem is_noetherian_subring_closure (s : Set R) (hs : s.Finite) :\n    IsNoetherianRing (Subring.closure s) :=\n  show IsNoetherianRing (subalgebraOfSubring (Subring.closure s)) from\n    Algebra.adjoin_int s ▸ isNoetherianRing_of_fg (Subalgebra.fg_def.2 ⟨s, hs, rfl⟩)\n\n"}
