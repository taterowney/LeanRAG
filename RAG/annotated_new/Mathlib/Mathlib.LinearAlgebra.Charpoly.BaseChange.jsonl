{"name":"LinearMap.charpoly_baseChange","module":"Mathlib.LinearAlgebra.Charpoly.BaseChange","initialProofState":"R : Type u_1\nM : Type u_2\ninst✝⁶ : CommRing R\ninst✝⁵ : AddCommGroup M\ninst✝⁴ : Module R M\ninst✝³ : Module.Free R M\ninst✝² : Module.Finite R M\nf : LinearMap (RingHom.id R) M M\nA : Type u_3\ninst✝¹ : CommRing A\ninst✝ : Algebra R A\n⊢ Eq (LinearMap.baseChange A f).charpoly (Polynomial.map (algebraMap R A) f.charpoly)","decl":"@[simp]\nlemma LinearMap.charpoly_baseChange {R M} [CommRing R] [AddCommGroup M] [Module R M]\n    [Module.Free R M] [Module.Finite R M] (f : M →ₗ[R] M)\n    (A) [CommRing A] [Algebra R A] :\n    (f.baseChange A).charpoly = f.charpoly.map (algebraMap R A) := by\n  nontriviality A\n  have := (algebraMap R A).domain_nontrivial\n  let I := Module.Free.ChooseBasisIndex R M\n  let b : Basis I R M := Module.Free.chooseBasis R M\n  rw [← f.charpoly_toMatrix b, ← (f.baseChange A).charpoly_toMatrix (b.baseChange A),\n    ← Matrix.charpoly_map]\n  congr 1\n  ext i j\n  simp [LinearMap.toMatrix_apply, ← Algebra.algebraMap_eq_smul_one]\n\n"}
{"name":"LinearMap.det_eq_sign_charpoly_coeff","module":"Mathlib.LinearAlgebra.Charpoly.BaseChange","initialProofState":"R : Type u_1\nM : Type u_2\ninst✝⁴ : CommRing R\ninst✝³ : AddCommGroup M\ninst✝² : Module R M\ninst✝¹ : Module.Free R M\ninst✝ : Module.Finite R M\nf : LinearMap (RingHom.id R) M M\n⊢ Eq (LinearMap.det f) (HMul.hMul (HPow.hPow (-1) (Module.finrank R M)) (f.charpoly.coeff 0))","decl":"lemma LinearMap.det_eq_sign_charpoly_coeff {R M} [CommRing R] [AddCommGroup M] [Module R M]\n    [Module.Free R M] [Module.Finite R M] (f : M →ₗ[R] M) :\n    LinearMap.det f = (-1) ^ Module.finrank R M * f.charpoly.coeff 0 := by\n  nontriviality R\n  rw [← LinearMap.det_toMatrix (Module.Free.chooseBasis R M), Matrix.det_eq_sign_charpoly_coeff,\n    ← Module.finrank_eq_card_chooseBasisIndex, charpoly_def]\n\n"}
{"name":"LinearMap.det_baseChange","module":"Mathlib.LinearAlgebra.Charpoly.BaseChange","initialProofState":"R : Type u_1\nM : Type u_2\ninst✝⁶ : CommRing R\ninst✝⁵ : AddCommGroup M\ninst✝⁴ : Module R M\ninst✝³ : Module.Free R M\ninst✝² : Module.Finite R M\nA : Type u_3\ninst✝¹ : CommRing A\ninst✝ : Algebra R A\nf : LinearMap (RingHom.id R) M M\n⊢ Eq (LinearMap.det (LinearMap.baseChange A f)) ((algebraMap R A) (LinearMap.det f))","decl":"lemma LinearMap.det_baseChange {R M} [CommRing R] [AddCommGroup M] [Module R M]\n    [Module.Free R M] [Module.Finite R M]\n    {A} [CommRing A] [Algebra R A] (f : M →ₗ[R] M) :\n    LinearMap.det (f.baseChange A) = algebraMap R A (LinearMap.det f) := by\n  nontriviality A\n  have := (algebraMap R A).domain_nontrivial\n  rw [LinearMap.det_eq_sign_charpoly_coeff, LinearMap.det_eq_sign_charpoly_coeff]\n  simp\n\n"}
