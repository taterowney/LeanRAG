{"name":"homotopy_congruence","module":"Mathlib.Algebra.Homology.HomotopyCategory","initialProofState":"ι : Type u_2\nV : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} V\ninst✝ : CategoryTheory.Preadditive V\nc : ComplexShape ι\n⊢ CategoryTheory.Congruence (homotopic V c)","decl":"instance homotopy_congruence : Congruence (homotopic V c) where\n  equivalence :=\n    { refl := fun C => ⟨Homotopy.refl C⟩\n      symm := fun ⟨w⟩ => ⟨w.symm⟩\n      trans := fun ⟨w₁⟩ ⟨w₂⟩ => ⟨w₁.trans w₂⟩ }\n  compLeft := fun _ _ _ ⟨i⟩ => ⟨i.compLeft _⟩\n  compRight := fun _ ⟨i⟩ => ⟨i.compRight _⟩\n\n"}
{"name":"HomotopyCategory.instFullHomologicalComplexQuotient","module":"Mathlib.Algebra.Homology.HomotopyCategory","initialProofState":"ι : Type u_2\nV : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} V\ninst✝ : CategoryTheory.Preadditive V\nc : ComplexShape ι\n⊢ (HomotopyCategory.quotient V c).Full","decl":"instance : (quotient V c).Full := Quotient.full_functor _\n\n"}
{"name":"HomotopyCategory.instEssSurjHomologicalComplexQuotient","module":"Mathlib.Algebra.Homology.HomotopyCategory","initialProofState":"ι : Type u_2\nV : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} V\ninst✝ : CategoryTheory.Preadditive V\nc : ComplexShape ι\n⊢ (HomotopyCategory.quotient V c).EssSurj","decl":"instance : (quotient V c).EssSurj := Quotient.essSurj_functor _\n\n"}
{"name":"HomotopyCategory.instAdditiveHomologicalComplexQuotient","module":"Mathlib.Algebra.Homology.HomotopyCategory","initialProofState":"ι : Type u_2\nV : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} V\ninst✝ : CategoryTheory.Preadditive V\nc : ComplexShape ι\n⊢ (HomotopyCategory.quotient V c).Additive","decl":"instance : (quotient V c).Additive where\n\n"}
{"name":"HomotopyCategory.instAdditiveHomologicalComplexQuotientHomotopicFunctor","module":"Mathlib.Algebra.Homology.HomotopyCategory","initialProofState":"ι : Type u_2\nV : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} V\ninst✝ : CategoryTheory.Preadditive V\nc : ComplexShape ι\n⊢ (CategoryTheory.Quotient.functor (homotopic V c)).Additive","decl":"instance : Functor.Additive (Quotient.functor (homotopic V c)) where\n\n"}
{"name":"HomotopyCategory.instLinearHomologicalComplexQuotient","module":"Mathlib.Algebra.Homology.HomotopyCategory","initialProofState":"R : Type u_1\ninst✝³ : Semiring R\nι : Type u_2\nV : Type u\ninst✝² : CategoryTheory.Category.{v, u} V\ninst✝¹ : CategoryTheory.Preadditive V\nc : ComplexShape ι\ninst✝ : CategoryTheory.Linear R V\n⊢ CategoryTheory.Functor.Linear R (HomotopyCategory.quotient V c)","decl":"instance [Linear R V] : Functor.Linear R (HomotopyCategory.quotient V c) :=\n  Quotient.linear_functor _ _ _\n\n"}
{"name":"HomotopyCategory.instHasZeroObject","module":"Mathlib.Algebra.Homology.HomotopyCategory","initialProofState":"ι : Type u_2\nV : Type u\ninst✝² : CategoryTheory.Category.{v, u} V\ninst✝¹ : CategoryTheory.Preadditive V\nc : ComplexShape ι\ninst✝ : CategoryTheory.Limits.HasZeroObject V\n⊢ CategoryTheory.Limits.HasZeroObject (HomotopyCategory V c)","decl":"instance [HasZeroObject V] : HasZeroObject (HomotopyCategory V c) :=\n  ⟨(quotient V c).obj 0, by\n    rw [IsZero.iff_id_eq_zero, ← (quotient V c).map_id, id_zero, Functor.map_zero]⟩\n\n"}
{"name":"HomotopyCategory.instFullFunctorHomologicalComplexObjWhiskeringLeftQuotient","module":"Mathlib.Algebra.Homology.HomotopyCategory","initialProofState":"ι : Type u_2\nV : Type u\ninst✝² : CategoryTheory.Category.{v, u} V\ninst✝¹ : CategoryTheory.Preadditive V\nc : ComplexShape ι\nD : Type u_3\ninst✝ : CategoryTheory.Category.{u_4, u_3} D\n⊢ ((CategoryTheory.whiskeringLeft (HomologicalComplex V c) (HomotopyCategory V c) D).obj (HomotopyCategory.quotient V c)).Full","decl":"instance {D : Type*} [Category D] : ((whiskeringLeft _ _ D).obj (quotient V c)).Full :=\n  Quotient.full_whiskeringLeft_functor _ _\n\n"}
{"name":"HomotopyCategory.instFaithfulFunctorHomologicalComplexObjWhiskeringLeftQuotient","module":"Mathlib.Algebra.Homology.HomotopyCategory","initialProofState":"ι : Type u_2\nV : Type u\ninst✝² : CategoryTheory.Category.{v, u} V\ninst✝¹ : CategoryTheory.Preadditive V\nc : ComplexShape ι\nD : Type u_3\ninst✝ : CategoryTheory.Category.{u_4, u_3} D\n⊢ ((CategoryTheory.whiskeringLeft (HomologicalComplex V c) (HomotopyCategory V c) D).obj (HomotopyCategory.quotient V c)).Faithful","decl":"instance {D : Type*} [Category D] : ((whiskeringLeft _ _ D).obj (quotient V c)).Faithful :=\n  Quotient.faithful_whiskeringLeft_functor _ _\n\n"}
{"name":"HomotopyCategory.quotient_obj_as","module":"Mathlib.Algebra.Homology.HomotopyCategory","initialProofState":"ι : Type u_2\nV : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} V\ninst✝ : CategoryTheory.Preadditive V\nc : ComplexShape ι\nC : HomologicalComplex V c\n⊢ Eq ((HomotopyCategory.quotient V c).obj C).as C","decl":"theorem quotient_obj_as (C : HomologicalComplex V c) : ((quotient V c).obj C).as = C :=\n  rfl\n\n"}
{"name":"HomotopyCategory.quotient_map_out","module":"Mathlib.Algebra.Homology.HomotopyCategory","initialProofState":"ι : Type u_2\nV : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} V\ninst✝ : CategoryTheory.Preadditive V\nc : ComplexShape ι\nC D : HomotopyCategory V c\nf : Quiver.Hom C D\n⊢ Eq ((HomotopyCategory.quotient V c).map (Quot.out f)) f","decl":"@[simp]\ntheorem quotient_map_out {C D : HomotopyCategory V c} (f : C ⟶ D) : (quotient V c).map f.out = f :=\n  Quot.out_eq _\n\n-- Porting note: added to ease the port\n"}
{"name":"HomotopyCategory.quot_mk_eq_quotient_map","module":"Mathlib.Algebra.Homology.HomotopyCategory","initialProofState":"ι : Type u_2\nV : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} V\ninst✝ : CategoryTheory.Preadditive V\nc : ComplexShape ι\nC D : HomologicalComplex V c\nf : Quiver.Hom C D\n⊢ Eq (Quot.mk (CategoryTheory.Quotient.CompClosure (homotopic V c)) f) ((HomotopyCategory.quotient V c).map f)","decl":"theorem quot_mk_eq_quotient_map {C D : HomologicalComplex V c} (f : C ⟶ D) :\n    Quot.mk _ f = (quotient V c).map f := rfl\n\n"}
{"name":"HomotopyCategory.eq_of_homotopy","module":"Mathlib.Algebra.Homology.HomotopyCategory","initialProofState":"ι : Type u_2\nV : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} V\ninst✝ : CategoryTheory.Preadditive V\nc : ComplexShape ι\nC D : HomologicalComplex V c\nf g : Quiver.Hom C D\nh : Homotopy f g\n⊢ Eq ((HomotopyCategory.quotient V c).map f) ((HomotopyCategory.quotient V c).map g)","decl":"theorem eq_of_homotopy {C D : HomologicalComplex V c} (f g : C ⟶ D) (h : Homotopy f g) :\n    (quotient V c).map f = (quotient V c).map g :=\n  CategoryTheory.Quotient.sound _ ⟨h⟩\n\n"}
{"name":"HomotopyCategory.quotient_map_out_comp_out","module":"Mathlib.Algebra.Homology.HomotopyCategory","initialProofState":"ι : Type u_2\nV : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} V\ninst✝ : CategoryTheory.Preadditive V\nc : ComplexShape ι\nC D E : HomotopyCategory V c\nf : Quiver.Hom C D\ng : Quiver.Hom D E\n⊢ Eq ((HomotopyCategory.quotient V c).map (CategoryTheory.CategoryStruct.comp (Quot.out f) (Quot.out g))) (CategoryTheory.CategoryStruct.comp f g)","decl":"theorem quotient_map_out_comp_out {C D E : HomotopyCategory V c} (f : C ⟶ D) (g : D ⟶ E) :\n    (quotient V c).map (Quot.out f ≫ Quot.out g) = f ≫ g := by simp\n\n"}
{"name":"HomotopyCategory.isoOfHomotopyEquiv_hom","module":"Mathlib.Algebra.Homology.HomotopyCategory","initialProofState":"ι : Type u_2\nV : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} V\ninst✝ : CategoryTheory.Preadditive V\nc : ComplexShape ι\nC D : HomologicalComplex V c\nf : HomotopyEquiv C D\n⊢ Eq (HomotopyCategory.isoOfHomotopyEquiv f).hom ((HomotopyCategory.quotient V c).map f.hom)","decl":"/-- Homotopy equivalent complexes become isomorphic in the homotopy category. -/\n@[simps]\ndef isoOfHomotopyEquiv {C D : HomologicalComplex V c} (f : HomotopyEquiv C D) :\n    (quotient V c).obj C ≅ (quotient V c).obj D where\n  hom := (quotient V c).map f.hom\n  inv := (quotient V c).map f.inv\n  hom_inv_id := by\n    rw [← (quotient V c).map_comp, ← (quotient V c).map_id]\n    exact eq_of_homotopy _ _ f.homotopyHomInvId\n  inv_hom_id := by\n    rw [← (quotient V c).map_comp, ← (quotient V c).map_id]\n    exact eq_of_homotopy _ _ f.homotopyInvHomId\n\n"}
{"name":"HomotopyCategory.isoOfHomotopyEquiv_inv","module":"Mathlib.Algebra.Homology.HomotopyCategory","initialProofState":"ι : Type u_2\nV : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} V\ninst✝ : CategoryTheory.Preadditive V\nc : ComplexShape ι\nC D : HomologicalComplex V c\nf : HomotopyEquiv C D\n⊢ Eq (HomotopyCategory.isoOfHomotopyEquiv f).inv ((HomotopyCategory.quotient V c).map f.inv)","decl":"/-- Homotopy equivalent complexes become isomorphic in the homotopy category. -/\n@[simps]\ndef isoOfHomotopyEquiv {C D : HomologicalComplex V c} (f : HomotopyEquiv C D) :\n    (quotient V c).obj C ≅ (quotient V c).obj D where\n  hom := (quotient V c).map f.hom\n  inv := (quotient V c).map f.inv\n  hom_inv_id := by\n    rw [← (quotient V c).map_comp, ← (quotient V c).map_id]\n    exact eq_of_homotopy _ _ f.homotopyHomInvId\n  inv_hom_id := by\n    rw [← (quotient V c).map_comp, ← (quotient V c).map_id]\n    exact eq_of_homotopy _ _ f.homotopyInvHomId\n\n"}
{"name":"HomotopyCategory.quotient_inverts_homotopyEquivalences","module":"Mathlib.Algebra.Homology.HomotopyCategory","initialProofState":"ι : Type u_2\nV : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} V\ninst✝ : CategoryTheory.Preadditive V\nc : ComplexShape ι\n⊢ (HomologicalComplex.homotopyEquivalences V c).IsInvertedBy (HomotopyCategory.quotient V c)","decl":"variable (V c) in\nlemma quotient_inverts_homotopyEquivalences :\n    (HomologicalComplex.homotopyEquivalences V c).IsInvertedBy (quotient V c) := by\n  rintro K L _ ⟨e, rfl⟩\n  change IsIso (isoOfHomotopyEquiv e).hom\n  infer_instance\n\n"}
{"name":"HomotopyCategory.isZero_quotient_obj_iff","module":"Mathlib.Algebra.Homology.HomotopyCategory","initialProofState":"ι : Type u_2\nV : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} V\ninst✝ : CategoryTheory.Preadditive V\nc : ComplexShape ι\nC : HomologicalComplex V c\n⊢ Iff (CategoryTheory.Limits.IsZero ((HomotopyCategory.quotient V c).obj C)) (Nonempty (Homotopy (CategoryTheory.CategoryStruct.id C) 0))","decl":"lemma isZero_quotient_obj_iff (C : HomologicalComplex V c) :\n    IsZero ((quotient _ _).obj C) ↔ Nonempty (Homotopy (𝟙 C) 0) := by\n  rw [IsZero.iff_id_eq_zero]\n  constructor\n  · intro h\n    exact ⟨(homotopyOfEq _ _ (by simp [h]))⟩\n  · rintro ⟨h⟩\n    simpa using (eq_of_homotopy _ _ h)\n\n"}
{"name":"HomotopyCategory.instAdditiveHomologyFunctor","module":"Mathlib.Algebra.Homology.HomotopyCategory","initialProofState":"ι : Type u_2\nV : Type u\ninst✝² : CategoryTheory.Category.{v, u} V\ninst✝¹ : CategoryTheory.Preadditive V\nc : ComplexShape ι\ninst✝ : CategoryTheory.CategoryWithHomology V\ni : ι\n⊢ (HomotopyCategory.homologyFunctor V c i).Additive","decl":"instance (i : ι) : (homologyFunctor V c i).Additive := by\n  have := Functor.additive_of_iso (homologyFunctorFactors V c i).symm\n  exact Functor.additive_of_full_essSurj_comp (quotient V c) _\n\n"}
{"name":"CategoryTheory.Functor.mapHomotopyCategory_obj","module":"Mathlib.Algebra.Homology.HomotopyCategory","initialProofState":"ι : Type u_2\nV : Type u\ninst✝⁴ : CategoryTheory.Category.{v, u} V\ninst✝³ : CategoryTheory.Preadditive V\nW : Type u_3\ninst✝² : CategoryTheory.Category.{u_4, u_3} W\ninst✝¹ : CategoryTheory.Preadditive W\nF : CategoryTheory.Functor V W\ninst✝ : F.Additive\nc : ComplexShape ι\na : CategoryTheory.Quotient (homotopic V c)\n⊢ Eq ((F.mapHomotopyCategory c).obj a) ((HomotopyCategory.quotient W c).obj ((F.mapHomologicalComplex c).obj a.as))","decl":"/-- An additive functor induces a functor between homotopy categories. -/\n@[simps! obj]\ndef Functor.mapHomotopyCategory (F : V ⥤ W) [F.Additive] (c : ComplexShape ι) :\n    HomotopyCategory V c ⥤ HomotopyCategory W c :=\n  CategoryTheory.Quotient.lift _ (F.mapHomologicalComplex c ⋙ HomotopyCategory.quotient W c)\n    (fun _ _ _ _ ⟨h⟩ => HomotopyCategory.eq_of_homotopy _ _ (F.mapHomotopy h))\n\n"}
{"name":"CategoryTheory.Functor.mapHomotopyCategory_map","module":"Mathlib.Algebra.Homology.HomotopyCategory","initialProofState":"ι : Type u_2\nV : Type u\ninst✝⁴ : CategoryTheory.Category.{v, u} V\ninst✝³ : CategoryTheory.Preadditive V\nW : Type u_3\ninst✝² : CategoryTheory.Category.{u_4, u_3} W\ninst✝¹ : CategoryTheory.Preadditive W\nF : CategoryTheory.Functor V W\ninst✝ : F.Additive\nc : ComplexShape ι\nK L : HomologicalComplex V c\nf : Quiver.Hom K L\n⊢ Eq ((F.mapHomotopyCategory c).map ((HomotopyCategory.quotient V c).map f)) ((HomotopyCategory.quotient W c).map ((F.mapHomologicalComplex c).map f))","decl":"@[simp]\nlemma Functor.mapHomotopyCategory_map (F : V ⥤ W) [F.Additive] {c : ComplexShape ι}\n    {K L : HomologicalComplex V c} (f : K ⟶ L) :\n    (F.mapHomotopyCategory c).map ((HomotopyCategory.quotient V c).map f) =\n      (HomotopyCategory.quotient W c).map ((F.mapHomologicalComplex c).map f) :=\n  rfl\n\n"}
{"name":"CategoryTheory.NatTrans.mapHomotopyCategory_app","module":"Mathlib.Algebra.Homology.HomotopyCategory","initialProofState":"ι : Type u_2\nV : Type u\ninst✝⁵ : CategoryTheory.Category.{v, u} V\ninst✝⁴ : CategoryTheory.Preadditive V\nW : Type u_3\ninst✝³ : CategoryTheory.Category.{u_4, u_3} W\ninst✝² : CategoryTheory.Preadditive W\nF G : CategoryTheory.Functor V W\ninst✝¹ : F.Additive\ninst✝ : G.Additive\nα : Quiver.Hom F G\nc : ComplexShape ι\nC : HomotopyCategory V c\n⊢ Eq ((CategoryTheory.NatTrans.mapHomotopyCategory α c).app C) ((HomotopyCategory.quotient W c).map ((CategoryTheory.NatTrans.mapHomologicalComplex α c).app C.as))","decl":"/-- A natural transformation induces a natural transformation between\n  the induced functors on the homotopy category. -/\n@[simps]\ndef NatTrans.mapHomotopyCategory {F G : V ⥤ W} [F.Additive] [G.Additive] (α : F ⟶ G)\n    (c : ComplexShape ι) : F.mapHomotopyCategory c ⟶ G.mapHomotopyCategory c where\n  app C := (HomotopyCategory.quotient W c).map ((NatTrans.mapHomologicalComplex α c).app C.as)\n  naturality := by\n    rintro ⟨C⟩ ⟨D⟩ ⟨f : C ⟶ D⟩\n    simp only [HomotopyCategory.quot_mk_eq_quotient_map, Functor.mapHomotopyCategory_map,\n      ← Functor.map_comp, NatTrans.naturality]\n\n"}
{"name":"CategoryTheory.NatTrans.mapHomotopyCategory_id","module":"Mathlib.Algebra.Homology.HomotopyCategory","initialProofState":"ι : Type u_2\nV : Type u\ninst✝⁴ : CategoryTheory.Category.{v, u} V\ninst✝³ : CategoryTheory.Preadditive V\nW : Type u_3\ninst✝² : CategoryTheory.Category.{u_4, u_3} W\ninst✝¹ : CategoryTheory.Preadditive W\nc : ComplexShape ι\nF : CategoryTheory.Functor V W\ninst✝ : F.Additive\n⊢ Eq (CategoryTheory.NatTrans.mapHomotopyCategory (CategoryTheory.CategoryStruct.id F) c) (CategoryTheory.CategoryStruct.id (F.mapHomotopyCategory c))","decl":"@[simp]\ntheorem NatTrans.mapHomotopyCategory_id (c : ComplexShape ι) (F : V ⥤ W) [F.Additive] :\n    NatTrans.mapHomotopyCategory (𝟙 F) c = 𝟙 (F.mapHomotopyCategory c) := by aesop_cat\n\n"}
{"name":"CategoryTheory.NatTrans.mapHomotopyCategory_comp","module":"Mathlib.Algebra.Homology.HomotopyCategory","initialProofState":"ι : Type u_2\nV : Type u\ninst✝⁶ : CategoryTheory.Category.{v, u} V\ninst✝⁵ : CategoryTheory.Preadditive V\nW : Type u_3\ninst✝⁴ : CategoryTheory.Category.{u_4, u_3} W\ninst✝³ : CategoryTheory.Preadditive W\nc : ComplexShape ι\nF G H : CategoryTheory.Functor V W\ninst✝² : F.Additive\ninst✝¹ : G.Additive\ninst✝ : H.Additive\nα : Quiver.Hom F G\nβ : Quiver.Hom G H\n⊢ Eq (CategoryTheory.NatTrans.mapHomotopyCategory (CategoryTheory.CategoryStruct.comp α β) c) (CategoryTheory.CategoryStruct.comp (CategoryTheory.NatTrans.mapHomotopyCategory α c) (CategoryTheory.NatTrans.mapHomotopyCategory β c))","decl":"@[simp]\ntheorem NatTrans.mapHomotopyCategory_comp (c : ComplexShape ι) {F G H : V ⥤ W} [F.Additive]\n    [G.Additive] [H.Additive] (α : F ⟶ G) (β : G ⟶ H) :\n    NatTrans.mapHomotopyCategory (α ≫ β) c =\n      NatTrans.mapHomotopyCategory α c ≫ NatTrans.mapHomotopyCategory β c := by aesop_cat\n\n"}
