{"name":"LinearOrderedSemifield.zpow_zero'","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedSemifield α\na : α\n⊢ Eq (LinearOrderedSemifield.zpow 0 a) 1","decl":"/-- A linear ordered semifield is a field with a linear order respecting the operations. -/\nclass LinearOrderedSemifield (α : Type*) extends LinearOrderedCommSemiring α, Semifield α\n\n"}
{"name":"LinearOrderedSemifield.zpow_succ'","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedSemifield α\nn : Nat\na : α\n⊢ Eq (LinearOrderedSemifield.zpow (↑n.succ) a) (HMul.hMul (LinearOrderedSemifield.zpow (↑n) a) a)","decl":"/-- A linear ordered semifield is a field with a linear order respecting the operations. -/\nclass LinearOrderedSemifield (α : Type*) extends LinearOrderedCommSemiring α, Semifield α\n\n"}
{"name":"LinearOrderedSemifield.nnqsmul_def","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedSemifield α\nq : NNRat\na : α\n⊢ Eq (LinearOrderedSemifield.nnqsmul q a) (HMul.hMul (↑q) a)","decl":"/-- A linear ordered semifield is a field with a linear order respecting the operations. -/\nclass LinearOrderedSemifield (α : Type*) extends LinearOrderedCommSemiring α, Semifield α\n\n"}
{"name":"LinearOrderedSemifield.inv_zero","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedSemifield α\n⊢ Eq (Inv.inv 0) 0","decl":"/-- A linear ordered semifield is a field with a linear order respecting the operations. -/\nclass LinearOrderedSemifield (α : Type*) extends LinearOrderedCommSemiring α, Semifield α\n\n"}
{"name":"LinearOrderedSemifield.div_eq_mul_inv","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedSemifield α\na b : α\n⊢ Eq (HDiv.hDiv a b) (HMul.hMul a (Inv.inv b))","decl":"/-- A linear ordered semifield is a field with a linear order respecting the operations. -/\nclass LinearOrderedSemifield (α : Type*) extends LinearOrderedCommSemiring α, Semifield α\n\n"}
{"name":"LinearOrderedSemifield.nnratCast_def","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedSemifield α\nq : NNRat\n⊢ Eq (↑q) (HDiv.hDiv ↑q.num ↑q.den)","decl":"/-- A linear ordered semifield is a field with a linear order respecting the operations. -/\nclass LinearOrderedSemifield (α : Type*) extends LinearOrderedCommSemiring α, Semifield α\n\n"}
{"name":"LinearOrderedSemifield.mul_inv_cancel","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedSemifield α\na : α\na✝ : Ne a 0\n⊢ Eq (HMul.hMul a (Inv.inv a)) 1","decl":"/-- A linear ordered semifield is a field with a linear order respecting the operations. -/\nclass LinearOrderedSemifield (α : Type*) extends LinearOrderedCommSemiring α, Semifield α\n\n"}
{"name":"LinearOrderedSemifield.zpow_neg'","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedSemifield α\nn : Nat\na : α\n⊢ Eq (LinearOrderedSemifield.zpow (Int.negSucc n) a) (Inv.inv (LinearOrderedSemifield.zpow (↑n.succ) a))","decl":"/-- A linear ordered semifield is a field with a linear order respecting the operations. -/\nclass LinearOrderedSemifield (α : Type*) extends LinearOrderedCommSemiring α, Semifield α\n\n"}
{"name":"LinearOrderedField.zpow_neg'","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedField α\nn : Nat\na : α\n⊢ Eq (LinearOrderedField.zpow (Int.negSucc n) a) (Inv.inv (LinearOrderedField.zpow (↑n.succ) a))","decl":"/-- A linear ordered field is a field with a linear order respecting the operations. -/\nclass LinearOrderedField (α : Type*) extends LinearOrderedCommRing α, Field α\n\n-- See note [lower instance priority]\n"}
{"name":"LinearOrderedField.nnqsmul_def","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedField α\nq : NNRat\na : α\n⊢ Eq (LinearOrderedField.nnqsmul q a) (HMul.hMul (↑q) a)","decl":"/-- A linear ordered field is a field with a linear order respecting the operations. -/\nclass LinearOrderedField (α : Type*) extends LinearOrderedCommRing α, Field α\n\n-- See note [lower instance priority]\n"}
{"name":"LinearOrderedField.qsmul_def","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedField α\na : Rat\nx : α\n⊢ Eq (LinearOrderedField.qsmul a x) (HMul.hMul (↑a) x)","decl":"/-- A linear ordered field is a field with a linear order respecting the operations. -/\nclass LinearOrderedField (α : Type*) extends LinearOrderedCommRing α, Field α\n\n-- See note [lower instance priority]\n"}
{"name":"LinearOrderedField.zpow_zero'","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedField α\na : α\n⊢ Eq (LinearOrderedField.zpow 0 a) 1","decl":"/-- A linear ordered field is a field with a linear order respecting the operations. -/\nclass LinearOrderedField (α : Type*) extends LinearOrderedCommRing α, Field α\n\n-- See note [lower instance priority]\n"}
{"name":"LinearOrderedField.zpow_succ'","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedField α\nn : Nat\na : α\n⊢ Eq (LinearOrderedField.zpow (↑n.succ) a) (HMul.hMul (LinearOrderedField.zpow (↑n) a) a)","decl":"/-- A linear ordered field is a field with a linear order respecting the operations. -/\nclass LinearOrderedField (α : Type*) extends LinearOrderedCommRing α, Field α\n\n-- See note [lower instance priority]\n"}
{"name":"LinearOrderedField.div_eq_mul_inv","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedField α\na b : α\n⊢ Eq (HDiv.hDiv a b) (HMul.hMul a (Inv.inv b))","decl":"/-- A linear ordered field is a field with a linear order respecting the operations. -/\nclass LinearOrderedField (α : Type*) extends LinearOrderedCommRing α, Field α\n\n-- See note [lower instance priority]\n"}
{"name":"LinearOrderedField.nnratCast_def","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedField α\nq : NNRat\n⊢ Eq (↑q) (HDiv.hDiv ↑q.num ↑q.den)","decl":"/-- A linear ordered field is a field with a linear order respecting the operations. -/\nclass LinearOrderedField (α : Type*) extends LinearOrderedCommRing α, Field α\n\n-- See note [lower instance priority]\n"}
{"name":"LinearOrderedField.inv_zero","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedField α\n⊢ Eq (Inv.inv 0) 0","decl":"/-- A linear ordered field is a field with a linear order respecting the operations. -/\nclass LinearOrderedField (α : Type*) extends LinearOrderedCommRing α, Field α\n\n-- See note [lower instance priority]\n"}
{"name":"LinearOrderedField.ratCast_def","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedField α\nq : Rat\n⊢ Eq (↑q) (HDiv.hDiv ↑q.num ↑q.den)","decl":"/-- A linear ordered field is a field with a linear order respecting the operations. -/\nclass LinearOrderedField (α : Type*) extends LinearOrderedCommRing α, Field α\n\n-- See note [lower instance priority]\n"}
{"name":"LinearOrderedField.mul_inv_cancel","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_2\nself : LinearOrderedField α\na : α\na✝ : Ne a 0\n⊢ Eq (HMul.hMul a (Inv.inv a)) 1","decl":"/-- A linear ordered field is a field with a linear order respecting the operations. -/\nclass LinearOrderedField (α : Type*) extends LinearOrderedCommRing α, Field α\n\n-- See note [lower instance priority]\n"}
{"name":"mul_inv_le_one","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedSemifield α\na : α\n⊢ LE.le (HMul.hMul a (Inv.inv a)) 1","decl":"/-- Equality holds when `a ≠ 0`. See `mul_inv_cancel`. -/\nlemma mul_inv_le_one : a * a⁻¹ ≤ 1 := by obtain rfl | ha := eq_or_ne a 0 <;> simp [*]\n\n"}
{"name":"inv_mul_le_one","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedSemifield α\na : α\n⊢ LE.le (HMul.hMul (Inv.inv a) a) 1","decl":"/-- Equality holds when `a ≠ 0`. See `inv_mul_cancel`. -/\nlemma inv_mul_le_one : a⁻¹ * a ≤ 1 := by obtain rfl | ha := eq_or_ne a 0 <;> simp [*]\n\n"}
{"name":"mul_inv_left_le","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedSemifield α\na b : α\nhb : LE.le 0 b\n⊢ LE.le (HMul.hMul a (HMul.hMul (Inv.inv a) b)) b","decl":"/-- Equality holds when `a ≠ 0`. See `mul_inv_cancel_left`. -/\nlemma mul_inv_left_le (hb : 0 ≤ b) : a * (a⁻¹ * b) ≤ b := by\n  obtain rfl | ha := eq_or_ne a 0 <;> simp [*]\n\n"}
{"name":"le_mul_inv_left","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedSemifield α\na b : α\nhb : LE.le b 0\n⊢ LE.le b (HMul.hMul a (HMul.hMul (Inv.inv a) b))","decl":"/-- Equality holds when `a ≠ 0`. See `mul_inv_cancel_left`. -/\nlemma le_mul_inv_left (hb : b ≤ 0) : b ≤ a * (a⁻¹ * b) := by\n  obtain rfl | ha := eq_or_ne a 0 <;> simp [*]\n\n"}
{"name":"inv_mul_left_le","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedSemifield α\na b : α\nhb : LE.le 0 b\n⊢ LE.le (HMul.hMul (Inv.inv a) (HMul.hMul a b)) b","decl":"/-- Equality holds when `a ≠ 0`. See `inv_mul_cancel_left`. -/\nlemma inv_mul_left_le (hb : 0 ≤ b) : a⁻¹ * (a * b) ≤ b := by\n  obtain rfl | ha := eq_or_ne a 0 <;> simp [*]\n\n"}
{"name":"le_inv_mul_left","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedSemifield α\na b : α\nhb : LE.le b 0\n⊢ LE.le b (HMul.hMul (Inv.inv a) (HMul.hMul a b))","decl":"/-- Equality holds when `a ≠ 0`. See `inv_mul_cancel_left`. -/\nlemma le_inv_mul_left (hb : b ≤ 0) : b ≤ a⁻¹ * (a * b) := by\n  obtain rfl | ha := eq_or_ne a 0 <;> simp [*]\n\n"}
{"name":"mul_inv_right_le","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedSemifield α\na b : α\nha : LE.le 0 a\n⊢ LE.le (HMul.hMul (HMul.hMul a b) (Inv.inv b)) a","decl":"/-- Equality holds when `b ≠ 0`. See `mul_inv_cancel_right`. -/\nlemma mul_inv_right_le (ha : 0 ≤ a) : a * b * b⁻¹ ≤ a := by\n  obtain rfl | hb := eq_or_ne b 0 <;> simp [*]\n\n"}
{"name":"le_mul_inv_right","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedSemifield α\na b : α\nha : LE.le a 0\n⊢ LE.le a (HMul.hMul (HMul.hMul a b) (Inv.inv b))","decl":"/-- Equality holds when `b ≠ 0`. See `mul_inv_cancel_right`. -/\nlemma le_mul_inv_right (ha : a ≤ 0) : a ≤ a * b * b⁻¹ := by\n  obtain rfl | hb := eq_or_ne b 0 <;> simp [*]\n\n"}
{"name":"inv_mul_right_le","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedSemifield α\na b : α\nha : LE.le 0 a\n⊢ LE.le (HMul.hMul (HMul.hMul a (Inv.inv b)) b) a","decl":"/-- Equality holds when `b ≠ 0`. See `inv_mul_cancel_right`. -/\nlemma inv_mul_right_le (ha : 0 ≤ a) : a * b⁻¹ * b ≤ a := by\n  obtain rfl | hb := eq_or_ne b 0 <;> simp [*]\n\n"}
{"name":"le_inv_mul_right","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedSemifield α\na b : α\nha : LE.le a 0\n⊢ LE.le a (HMul.hMul (HMul.hMul a (Inv.inv b)) b)","decl":"/-- Equality holds when `b ≠ 0`. See `inv_mul_cancel_right`. -/\nlemma le_inv_mul_right (ha : a ≤ 0) : a ≤ a * b⁻¹ * b := by\n  obtain rfl | hb := eq_or_ne b 0 <;> simp [*]\n\n"}
{"name":"mul_div_mul_left_le","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedSemifield α\na b c : α\nh : LE.le 0 (HDiv.hDiv a b)\n⊢ LE.le (HDiv.hDiv (HMul.hMul c a) (HMul.hMul c b)) (HDiv.hDiv a b)","decl":"/-- Equality holds when `c ≠ 0`. See `mul_div_mul_left`. -/\nlemma mul_div_mul_left_le (h : 0 ≤ a / b) : c * a / (c * b) ≤ a / b := by\n  obtain rfl | hc := eq_or_ne c 0\n  · simpa\n  · rw [mul_div_mul_left _ _ hc]\n\n"}
{"name":"le_mul_div_mul_left","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedSemifield α\na b c : α\nh : LE.le (HDiv.hDiv a b) 0\n⊢ LE.le (HDiv.hDiv a b) (HDiv.hDiv (HMul.hMul c a) (HMul.hMul c b))","decl":"/-- Equality holds when `c ≠ 0`. See `mul_div_mul_left`. -/\nlemma le_mul_div_mul_left (h : a / b ≤ 0) : a / b ≤ c * a / (c * b) := by\n  obtain rfl | hc := eq_or_ne c 0\n  · simpa\n  · rw [mul_div_mul_left _ _ hc]\n\n"}
{"name":"mul_div_mul_right_le","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedSemifield α\na b c : α\nh : LE.le 0 (HDiv.hDiv a b)\n⊢ LE.le (HDiv.hDiv (HMul.hMul a c) (HMul.hMul b c)) (HDiv.hDiv a b)","decl":"/-- Equality holds when `c ≠ 0`. See `mul_div_mul_right`. -/\nlemma mul_div_mul_right_le (h : 0 ≤ a / b) : a * c / (b * c) ≤ a / b := by\n  obtain rfl | hc := eq_or_ne c 0\n  · simpa\n  · rw [mul_div_mul_right _ _ hc]\n\n"}
{"name":"le_mul_div_mul_right","module":"Mathlib.Algebra.Order.Field.Defs","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedSemifield α\na b c : α\nh : LE.le (HDiv.hDiv a b) 0\n⊢ LE.le (HDiv.hDiv a b) (HDiv.hDiv (HMul.hMul a c) (HMul.hMul b c))","decl":"/-- Equality holds when `c ≠ 0`. See `mul_div_mul_right`. -/\nlemma le_mul_div_mul_right (h : a / b ≤ 0) : a / b ≤ a * c / (b * c) := by\n  obtain rfl | hc := eq_or_ne c 0\n  · simpa\n  · rw [mul_div_mul_right _ _ hc]\n"}
