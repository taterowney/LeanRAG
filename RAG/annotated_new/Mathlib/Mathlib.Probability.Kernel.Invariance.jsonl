{"name":"ProbabilityTheory.Kernel.bind_add","module":"Mathlib.Probability.Kernel.Invariance","initialProofState":"α : Type u_1\nβ : Type u_2\nmα : MeasurableSpace α\nmβ : MeasurableSpace β\nμ ν : MeasureTheory.Measure α\nκ : ProbabilityTheory.Kernel α β\n⊢ Eq ((HAdd.hAdd μ ν).bind ⇑κ) (HAdd.hAdd (μ.bind ⇑κ) (ν.bind ⇑κ))","decl":"@[simp]\ntheorem bind_add (μ ν : Measure α) (κ : Kernel α β) : (μ + ν).bind κ = μ.bind κ + ν.bind κ := by\n  ext1 s hs\n  rw [Measure.bind_apply hs (Kernel.measurable _), lintegral_add_measure, Measure.coe_add,\n    Pi.add_apply, Measure.bind_apply hs (Kernel.measurable _),\n    Measure.bind_apply hs (Kernel.measurable _)]\n\n"}
{"name":"ProbabilityTheory.Kernel.bind_smul","module":"Mathlib.Probability.Kernel.Invariance","initialProofState":"α : Type u_1\nβ : Type u_2\nmα : MeasurableSpace α\nmβ : MeasurableSpace β\nκ : ProbabilityTheory.Kernel α β\nμ : MeasureTheory.Measure α\nr : ENNReal\n⊢ Eq ((HSMul.hSMul r μ).bind ⇑κ) (HSMul.hSMul r (μ.bind ⇑κ))","decl":"@[simp]\ntheorem bind_smul (κ : Kernel α β) (μ : Measure α) (r : ℝ≥0∞) : (r • μ).bind κ = r • μ.bind κ := by\n  ext1 s hs\n  rw [Measure.bind_apply hs (Kernel.measurable _), lintegral_smul_measure, Measure.coe_smul,\n    Pi.smul_apply, Measure.bind_apply hs (Kernel.measurable _), smul_eq_mul]\n\n"}
{"name":"ProbabilityTheory.Kernel.const_bind_eq_comp_const","module":"Mathlib.Probability.Kernel.Invariance","initialProofState":"α : Type u_1\nβ : Type u_2\nmα : MeasurableSpace α\nmβ : MeasurableSpace β\nκ : ProbabilityTheory.Kernel α β\nμ : MeasureTheory.Measure α\n⊢ Eq (ProbabilityTheory.Kernel.const α (μ.bind ⇑κ)) (κ.comp (ProbabilityTheory.Kernel.const α μ))","decl":"theorem const_bind_eq_comp_const (κ : Kernel α β) (μ : Measure α) :\n    const α (μ.bind κ) = κ ∘ₖ const α μ := by\n  ext a s hs\n  simp_rw [comp_apply' _ _ _ hs, const_apply, Measure.bind_apply hs (Kernel.measurable _)]\n\n"}
{"name":"ProbabilityTheory.Kernel.comp_const_apply_eq_bind","module":"Mathlib.Probability.Kernel.Invariance","initialProofState":"α : Type u_1\nβ : Type u_2\nmα : MeasurableSpace α\nmβ : MeasurableSpace β\nκ : ProbabilityTheory.Kernel α β\nμ : MeasureTheory.Measure α\na : α\n⊢ Eq ((κ.comp (ProbabilityTheory.Kernel.const α μ)) a) (μ.bind ⇑κ)","decl":"theorem comp_const_apply_eq_bind (κ : Kernel α β) (μ : Measure α) (a : α) :\n    (κ ∘ₖ const α μ) a = μ.bind κ := by\n  rw [← const_apply (μ.bind κ) a, const_bind_eq_comp_const κ μ]\n\n"}
{"name":"ProbabilityTheory.Kernel.Invariant.def","module":"Mathlib.Probability.Kernel.Invariance","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nκ : ProbabilityTheory.Kernel α α\nμ : MeasureTheory.Measure α\nhκ : κ.Invariant μ\n⊢ Eq (μ.bind ⇑κ) μ","decl":"theorem Invariant.def (hκ : Invariant κ μ) : μ.bind κ = μ :=\n  hκ\n\n"}
{"name":"ProbabilityTheory.Kernel.Invariant.comp_const","module":"Mathlib.Probability.Kernel.Invariance","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nκ : ProbabilityTheory.Kernel α α\nμ : MeasureTheory.Measure α\nhκ : κ.Invariant μ\n⊢ Eq (κ.comp (ProbabilityTheory.Kernel.const α μ)) (ProbabilityTheory.Kernel.const α μ)","decl":"theorem Invariant.comp_const (hκ : Invariant κ μ) : κ ∘ₖ const α μ = const α μ := by\n  rw [← const_bind_eq_comp_const κ μ, hκ.def]\n\n"}
{"name":"ProbabilityTheory.Kernel.Invariant.comp","module":"Mathlib.Probability.Kernel.Invariance","initialProofState":"α : Type u_1\nmα : MeasurableSpace α\nκ η : ProbabilityTheory.Kernel α α\nμ : MeasureTheory.Measure α\ninst✝ : ProbabilityTheory.IsSFiniteKernel κ\nhκ : κ.Invariant μ\nhη : η.Invariant μ\n⊢ (κ.comp η).Invariant μ","decl":"theorem Invariant.comp [IsSFiniteKernel κ] (hκ : Invariant κ μ) (hη : Invariant η μ) :\n    Invariant (κ ∘ₖ η) μ := by\n  cases' isEmpty_or_nonempty α with _ hα\n  · exact Subsingleton.elim _ _\n  · simp_rw [Invariant, ← comp_const_apply_eq_bind (κ ∘ₖ η) μ hα.some, comp_assoc, hη.comp_const,\n      hκ.comp_const, const_apply]\n\n"}
