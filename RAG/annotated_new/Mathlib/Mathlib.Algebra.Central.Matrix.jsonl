{"name":"Algebra.IsCentral.matrix","module":"Mathlib.Algebra.Central.Matrix","initialProofState":"K : Type u_1\nD : Type u_2\ninst✝⁴ : CommSemiring K\ninst✝³ : Semiring D\ninst✝² : Algebra K D\nι : Type u_3\ninst✝¹ : Fintype ι\ninst✝ : DecidableEq ι\n⊢ Algebra.IsCentral K (Matrix ι ι D)","decl":"open Matrix in\ninstance matrix (ι : Type*) [Fintype ι] [DecidableEq ι] :\n    Algebra.IsCentral K (Matrix ι ι D) where\n  out m h := by\n    refine isEmpty_or_nonempty ι |>.recOn\n      (fun h => Algebra.mem_bot.2 ⟨0, Matrix.ext fun i _ => h.elim i⟩) fun ⟨i⟩ => ?_\n    obtain ⟨d, rfl⟩ := mem_range_scalar_of_commute_stdBasisMatrix (M := m) (fun _ _ _ =>\n      Subalgebra.mem_center_iff.mp h _)\n    have mem : d ∈ Subalgebra.center K D := by\n      rw [Subalgebra.mem_center_iff] at h ⊢\n      intro d'\n      simpa using Matrix.ext_iff.2 (h (scalar ι d')) i i\n    rw [center_eq_bot, Algebra.mem_bot] at mem\n    obtain ⟨r, rfl⟩ := mem\n    rw [Algebra.mem_bot]\n    exact ⟨r, rfl⟩\n\n"}
