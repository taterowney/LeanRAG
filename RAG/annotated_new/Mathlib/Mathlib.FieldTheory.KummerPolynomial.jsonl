{"name":"root_X_pow_sub_C_pow","module":"Mathlib.FieldTheory.KummerPolynomial","initialProofState":"K : Type u\ninst✝ : Field K\nn : Nat\na : K\n⊢ Eq (HPow.hPow (AdjoinRoot.root (HSub.hSub (HPow.hPow Polynomial.X n) (Polynomial.C a))) n) ((AdjoinRoot.of (HSub.hSub (HPow.hPow Polynomial.X n) (Polynomial.C a))) a)","decl":"lemma root_X_pow_sub_C_pow (n : ℕ) (a : K) :\n    (AdjoinRoot.root (X ^ n - C a)) ^ n = AdjoinRoot.of _ a := by\n  rw [← sub_eq_zero, ← AdjoinRoot.eval₂_root, eval₂_sub, eval₂_C, eval₂_pow, eval₂_X]\n\n"}
{"name":"root_X_pow_sub_C_ne_zero","module":"Mathlib.FieldTheory.KummerPolynomial","initialProofState":"K : Type u\ninst✝ : Field K\nn : Nat\nhn : LT.lt 1 n\na : K\n⊢ Ne (AdjoinRoot.root (HSub.hSub (HPow.hPow Polynomial.X n) (Polynomial.C a))) 0","decl":"lemma root_X_pow_sub_C_ne_zero {n : ℕ} (hn : 1 < n) (a : K) :\n    (AdjoinRoot.root (X ^ n - C a)) ≠ 0 :=\n  mk_ne_zero_of_natDegree_lt (monic_X_pow_sub_C _ (Nat.not_eq_zero_of_lt hn))\n    X_ne_zero <| by rwa [natDegree_X_pow_sub_C, natDegree_X]\n\n"}
{"name":"root_X_pow_sub_C_ne_zero'","module":"Mathlib.FieldTheory.KummerPolynomial","initialProofState":"K : Type u\ninst✝ : Field K\nn : Nat\na : K\nhn : LT.lt 0 n\nha : Ne a 0\n⊢ Ne (AdjoinRoot.root (HSub.hSub (HPow.hPow Polynomial.X n) (Polynomial.C a))) 0","decl":"lemma root_X_pow_sub_C_ne_zero' {n : ℕ} {a : K} (hn : 0 < n) (ha : a ≠ 0) :\n    (AdjoinRoot.root (X ^ n - C a)) ≠ 0 := by\n  obtain (rfl|hn) := (Nat.succ_le_iff.mpr hn).eq_or_lt\n  · rw [pow_one]\n    intro e\n    refine mk_ne_zero_of_natDegree_lt (monic_X_sub_C a) (C_ne_zero.mpr ha) (by simp) ?_\n    trans AdjoinRoot.mk (X - C a) (X - (X - C a))\n    · rw [sub_sub_cancel]\n    · rw [map_sub, mk_self, sub_zero, mk_X, e]\n  · exact root_X_pow_sub_C_ne_zero hn a\n\n"}
{"name":"ne_zero_of_irreducible_X_pow_sub_C","module":"Mathlib.FieldTheory.KummerPolynomial","initialProofState":"K : Type u\ninst✝ : Field K\nn : Nat\na : K\nH : Irreducible (HSub.hSub (HPow.hPow Polynomial.X n) (Polynomial.C a))\n⊢ Ne n 0","decl":"lemma ne_zero_of_irreducible_X_pow_sub_C {n : ℕ} {a : K} (H : Irreducible (X ^ n - C a)) :\n    n ≠ 0 := by\n  rintro rfl\n  rw [pow_zero, ← C.map_one, ← map_sub] at H\n  exact not_irreducible_C _ H\n\n"}
{"name":"ne_zero_of_irreducible_X_pow_sub_C'","module":"Mathlib.FieldTheory.KummerPolynomial","initialProofState":"K : Type u\ninst✝ : Field K\nn : Nat\nhn : Ne n 1\na : K\nH : Irreducible (HSub.hSub (HPow.hPow Polynomial.X n) (Polynomial.C a))\n⊢ Ne a 0","decl":"lemma ne_zero_of_irreducible_X_pow_sub_C' {n : ℕ} (hn : n ≠ 1) {a : K}\n    (H : Irreducible (X ^ n - C a)) : a ≠ 0 := by\n  rintro rfl\n  rw [map_zero, sub_zero] at H\n  exact not_irreducible_pow hn H\n\n"}
{"name":"root_X_pow_sub_C_eq_zero_iff","module":"Mathlib.FieldTheory.KummerPolynomial","initialProofState":"K : Type u\ninst✝ : Field K\nn : Nat\na : K\nH : Irreducible (HSub.hSub (HPow.hPow Polynomial.X n) (Polynomial.C a))\n⊢ Iff (Eq (AdjoinRoot.root (HSub.hSub (HPow.hPow Polynomial.X n) (Polynomial.C a))) 0) (Eq a 0)","decl":"lemma root_X_pow_sub_C_eq_zero_iff {n : ℕ} {a : K} (H : Irreducible (X ^ n - C a)) :\n    (AdjoinRoot.root (X ^ n - C a)) = 0 ↔ a = 0 := by\n  have hn := Nat.pos_iff_ne_zero.mpr (ne_zero_of_irreducible_X_pow_sub_C H)\n  refine ⟨not_imp_not.mp (root_X_pow_sub_C_ne_zero' hn), ?_⟩\n  rintro rfl\n  have := not_imp_not.mp (fun hn ↦ ne_zero_of_irreducible_X_pow_sub_C' hn H) rfl\n  rw [this, pow_one, map_zero, sub_zero, ← mk_X, mk_self]\n\n"}
{"name":"root_X_pow_sub_C_ne_zero_iff","module":"Mathlib.FieldTheory.KummerPolynomial","initialProofState":"K : Type u\ninst✝ : Field K\nn : Nat\na : K\nH : Irreducible (HSub.hSub (HPow.hPow Polynomial.X n) (Polynomial.C a))\n⊢ Iff (Ne (AdjoinRoot.root (HSub.hSub (HPow.hPow Polynomial.X n) (Polynomial.C a))) 0) (Ne a 0)","decl":"lemma root_X_pow_sub_C_ne_zero_iff {n : ℕ} {a : K} (H : Irreducible (X ^ n - C a)) :\n    (AdjoinRoot.root (X ^ n - C a)) ≠ 0 ↔ a ≠ 0 :=\n  (root_X_pow_sub_C_eq_zero_iff H).not\n\n"}
{"name":"pow_ne_of_irreducible_X_pow_sub_C","module":"Mathlib.FieldTheory.KummerPolynomial","initialProofState":"K : Type u\ninst✝ : Field K\nn : Nat\na : K\nH : Irreducible (HSub.hSub (HPow.hPow Polynomial.X n) (Polynomial.C a))\nm : Nat\nhm : Dvd.dvd m n\nhm' : Ne m 1\nb : K\n⊢ Ne (HPow.hPow b m) a","decl":"theorem pow_ne_of_irreducible_X_pow_sub_C {n : ℕ} {a : K}\n    (H : Irreducible (X ^ n - C a)) {m : ℕ} (hm : m ∣ n) (hm' : m ≠ 1) (b : K) : b ^ m ≠ a := by\n  have hn : n ≠ 0 := fun e ↦ not_irreducible_C\n    (1 - a) (by simpa only [e, pow_zero, ← C.map_one, ← map_sub] using H)\n  obtain ⟨k, rfl⟩ := hm\n  rintro rfl\n  obtain ⟨q, hq⟩ := sub_dvd_pow_sub_pow (X ^ k) (C b) m\n  rw [mul_comm, pow_mul, map_pow, hq] at H\n  have : degree q = 0 := by\n    simpa [isUnit_iff_degree_eq_zero, degree_X_pow_sub_C,\n      Nat.pos_iff_ne_zero, (mul_ne_zero_iff.mp hn).2] using H.2 _ q rfl\n  apply_fun degree at hq\n  simp only [this, ← pow_mul, mul_comm k m, degree_X_pow_sub_C, Nat.pos_iff_ne_zero.mpr hn,\n    Nat.pos_iff_ne_zero.mpr (mul_ne_zero_iff.mp hn).2, degree_mul, ← map_pow, add_zero,\n    Nat.cast_injective.eq_iff] at hq\n  exact hm' ((mul_eq_right₀ (mul_ne_zero_iff.mp hn).2).mp hq)\n\n"}
{"name":"X_pow_sub_C_irreducible_of_prime","module":"Mathlib.FieldTheory.KummerPolynomial","initialProofState":"K : Type u\ninst✝ : Field K\np : Nat\nhp : Nat.Prime p\na : K\nha : ∀ (b : K), Ne (HPow.hPow b p) a\n⊢ Irreducible (HSub.hSub (HPow.hPow Polynomial.X p) (Polynomial.C a))","decl":"/--Let `p` be a prime number. Let `K` be a field.\nLet `t ∈ K` be an element which does not have a `p`th root in `K`.\nThen the polynomial `x ^ p - t` is irreducible over `K`.-/\n@[stacks 09HF \"We proved the result without the condition that `K` is char p in 09HF.\"]\ntheorem X_pow_sub_C_irreducible_of_prime {p : ℕ} (hp : p.Prime) {a : K} (ha : ∀ b : K, b ^ p ≠ a) :\n    Irreducible (X ^ p - C a) := by\n  -- First of all, We may find an irreducible factor `g` of `X ^ p - C a`.\n  have : ¬ IsUnit (X ^ p - C a) := by\n    rw [Polynomial.isUnit_iff_degree_eq_zero, degree_X_pow_sub_C hp.pos, Nat.cast_eq_zero]\n    exact hp.ne_zero\n  have ⟨g, hg, hg'⟩ := WfDvdMonoid.exists_irreducible_factor this (X_pow_sub_C_ne_zero hp.pos a)\n  -- It suffices to show that `deg g = p`.\n  suffices natDegree g = p from (associated_of_dvd_of_natDegree_le hg'\n    (X_pow_sub_C_ne_zero hp.pos a) (this.trans natDegree_X_pow_sub_C.symm).ge).irreducible hg\n  -- Suppose `deg g ≠ p`.\n  by_contra h\n  have : Fact (Irreducible g) := ⟨hg⟩\n  -- Let `r` be a root of `g`, then `N_K(r) ^ p = N_K(r ^ p) = N_K(a) = a ^ (deg g)`.\n  have key : (Algebra.norm K (AdjoinRoot.root g)) ^ p = a ^ g.natDegree := by\n    have := eval₂_eq_zero_of_dvd_of_eval₂_eq_zero _ _ hg' (AdjoinRoot.eval₂_root g)\n    rw [eval₂_sub, eval₂_pow, eval₂_C, eval₂_X, sub_eq_zero] at this\n    rw [← map_pow, this, ← AdjoinRoot.algebraMap_eq, Algebra.norm_algebraMap,\n      (powerBasis hg.ne_zero).finrank, powerBasis_dim hg.ne_zero]\n  -- Since `a ^ (deg g)` is a `p`-power, and `p` is coprime to `deg g`, we conclude that `a` is\n  -- also a `p`-power, contradicting the hypothesis\n  have : p.Coprime (natDegree g) := hp.coprime_iff_not_dvd.mpr (fun e ↦ h (((natDegree_le_of_dvd hg'\n    (X_pow_sub_C_ne_zero hp.pos a)).trans_eq natDegree_X_pow_sub_C).antisymm (Nat.le_of_dvd\n      (natDegree_pos_iff_degree_pos.mpr <| Polynomial.degree_pos_of_irreducible hg) e)))\n  exact ha _ ((pow_mem_range_pow_of_coprime this.symm a).mp ⟨_, key⟩).choose_spec\n\n"}
{"name":"X_pow_sub_C_irreducible_iff_of_prime","module":"Mathlib.FieldTheory.KummerPolynomial","initialProofState":"K : Type u\ninst✝ : Field K\np : Nat\nhp : Nat.Prime p\na : K\n⊢ Iff (Irreducible (HSub.hSub (HPow.hPow Polynomial.X p) (Polynomial.C a))) (∀ (b : K), Ne (HPow.hPow b p) a)","decl":"theorem X_pow_sub_C_irreducible_iff_of_prime {p : ℕ} (hp : p.Prime) {a : K} :\n    Irreducible (X ^ p - C a) ↔ ∀ b, b ^ p ≠ a :=\n  ⟨(pow_ne_of_irreducible_X_pow_sub_C · dvd_rfl hp.ne_one), X_pow_sub_C_irreducible_of_prime hp⟩\n\n"}
