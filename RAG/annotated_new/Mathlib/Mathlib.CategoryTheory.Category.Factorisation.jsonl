{"name":"CategoryTheory.Factorisation.mk.injEq","module":"Mathlib.CategoryTheory.Category.Factorisation","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX Y : C\nf : Quiver.Hom X Y\nmid✝ : C\nι✝ : Quiver.Hom X mid✝\nπ✝ : Quiver.Hom mid✝ Y\nι_π✝ : autoParam (Eq (CategoryTheory.CategoryStruct.comp ι✝ π✝) f) _auto✝\nmid : C\nι : Quiver.Hom X mid\nπ : Quiver.Hom mid Y\nι_π : autoParam (Eq (CategoryTheory.CategoryStruct.comp ι π) f) _auto✝\n⊢ Eq (Eq { mid := mid✝, ι := ι✝, π := π✝, ι_π := ι_π✝ } { mid := mid, ι := ι, π := π, ι_π := ι_π }) (And (Eq mid✝ mid) (And (HEq ι✝ ι) (HEq π✝ π)))","decl":"/-- Factorisations of a morphism `f` as a structure, containing, one object, two morphisms,\nand the condition that their composition equals `f`. -/\nstructure Factorisation {X Y : C} (f : X ⟶ Y) where\n  /-- The midpoint of the factorisation. -/\n  mid : C\n  /-- The morphism into the factorisation midpoint. -/\n  ι   : X ⟶ mid\n  /-- The morphism out of the factorisation midpoint. -/\n  π   : mid ⟶ Y\n  /-- The factorisation condition. -/\n  ι_π : ι ≫ π = f := by aesop_cat\n\n"}
{"name":"CategoryTheory.Factorisation.ι_π","module":"Mathlib.CategoryTheory.Category.Factorisation","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX Y : C\nf : Quiver.Hom X Y\nself : CategoryTheory.Factorisation f\n⊢ Eq (CategoryTheory.CategoryStruct.comp self.ι self.π) f","decl":"/-- Factorisations of a morphism `f` as a structure, containing, one object, two morphisms,\nand the condition that their composition equals `f`. -/\nstructure Factorisation {X Y : C} (f : X ⟶ Y) where\n  /-- The midpoint of the factorisation. -/\n  mid : C\n  /-- The morphism into the factorisation midpoint. -/\n  ι   : X ⟶ mid\n  /-- The morphism out of the factorisation midpoint. -/\n  π   : mid ⟶ Y\n  /-- The factorisation condition. -/\n  ι_π : ι ≫ π = f := by aesop_cat\n\n"}
{"name":"CategoryTheory.Factorisation.mk.inj","module":"Mathlib.CategoryTheory.Category.Factorisation","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX Y : C\nf : Quiver.Hom X Y\nmid✝ : C\nι✝ : Quiver.Hom X mid✝\nπ✝ : Quiver.Hom mid✝ Y\nι_π✝ : autoParam (Eq (CategoryTheory.CategoryStruct.comp ι✝ π✝) f) _auto✝\nmid : C\nι : Quiver.Hom X mid\nπ : Quiver.Hom mid Y\nι_π : autoParam (Eq (CategoryTheory.CategoryStruct.comp ι π) f) _auto✝\nx✝ : Eq { mid := mid✝, ι := ι✝, π := π✝, ι_π := ι_π✝ } { mid := mid, ι := ι, π := π, ι_π := ι_π }\n⊢ And (Eq mid✝ mid) (And (HEq ι✝ ι) (HEq π✝ π))","decl":"/-- Factorisations of a morphism `f` as a structure, containing, one object, two morphisms,\nand the condition that their composition equals `f`. -/\nstructure Factorisation {X Y : C} (f : X ⟶ Y) where\n  /-- The midpoint of the factorisation. -/\n  mid : C\n  /-- The morphism into the factorisation midpoint. -/\n  ι   : X ⟶ mid\n  /-- The morphism out of the factorisation midpoint. -/\n  π   : mid ⟶ Y\n  /-- The factorisation condition. -/\n  ι_π : ι ≫ π = f := by aesop_cat\n\n"}
{"name":"CategoryTheory.Factorisation.mk.sizeOf_spec","module":"Mathlib.CategoryTheory.Category.Factorisation","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nX Y : C\nf : Quiver.Hom X Y\ninst✝ : SizeOf C\nmid : C\nι : Quiver.Hom X mid\nπ : Quiver.Hom mid Y\nι_π : autoParam (Eq (CategoryTheory.CategoryStruct.comp ι π) f) _auto✝\n⊢ Eq (SizeOf.sizeOf { mid := mid, ι := ι, π := π, ι_π := ι_π }) (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd 1 (SizeOf.sizeOf mid)) (SizeOf.sizeOf ι)) (SizeOf.sizeOf π)) (SizeOf.sizeOf ι_π))","decl":"/-- Factorisations of a morphism `f` as a structure, containing, one object, two morphisms,\nand the condition that their composition equals `f`. -/\nstructure Factorisation {X Y : C} (f : X ⟶ Y) where\n  /-- The midpoint of the factorisation. -/\n  mid : C\n  /-- The morphism into the factorisation midpoint. -/\n  ι   : X ⟶ mid\n  /-- The morphism out of the factorisation midpoint. -/\n  π   : mid ⟶ Y\n  /-- The factorisation condition. -/\n  ι_π : ι ≫ π = f := by aesop_cat\n\n"}
{"name":"CategoryTheory.Factorisation.Hom.h_π","module":"Mathlib.CategoryTheory.Category.Factorisation","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX Y : C\nf : Quiver.Hom X Y\nd e : CategoryTheory.Factorisation f\nself : d.Hom e\n⊢ Eq (CategoryTheory.CategoryStruct.comp self.h e.π) d.π","decl":"/-- Morphisms of `Factorisation f` consist of morphism between their midpoints and the obvious\ncommutativity conditions. -/\n@[ext]\nprotected structure Hom (d e : Factorisation f) : Type (max u v) where\n  /-- The morphism between the midpoints of the factorizations. -/\n  h : d.mid ⟶ e.mid\n  /-- The left commuting triangle of the factorization morphism. -/\n  ι_h : d.ι ≫ h = e.ι := by aesop_cat\n  /-- The right commuting triangle of the factorization morphism. -/\n  h_π : h ≫ e.π = d.π := by aesop_cat\n\n"}
{"name":"CategoryTheory.Factorisation.Hom.mk.injEq","module":"Mathlib.CategoryTheory.Category.Factorisation","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX Y : C\nf : Quiver.Hom X Y\nd e : CategoryTheory.Factorisation f\nh✝ : Quiver.Hom d.mid e.mid\nι_h✝ : autoParam (Eq (CategoryTheory.CategoryStruct.comp d.ι h✝) e.ι) _auto✝\nh_π✝ : autoParam (Eq (CategoryTheory.CategoryStruct.comp h✝ e.π) d.π) _auto✝\nh : Quiver.Hom d.mid e.mid\nι_h : autoParam (Eq (CategoryTheory.CategoryStruct.comp d.ι h) e.ι) _auto✝\nh_π : autoParam (Eq (CategoryTheory.CategoryStruct.comp h e.π) d.π) _auto✝\n⊢ Eq (Eq { h := h✝, ι_h := ι_h✝, h_π := h_π✝ } { h := h, ι_h := ι_h, h_π := h_π }) (Eq h✝ h)","decl":"/-- Morphisms of `Factorisation f` consist of morphism between their midpoints and the obvious\ncommutativity conditions. -/\n@[ext]\nprotected structure Hom (d e : Factorisation f) : Type (max u v) where\n  /-- The morphism between the midpoints of the factorizations. -/\n  h : d.mid ⟶ e.mid\n  /-- The left commuting triangle of the factorization morphism. -/\n  ι_h : d.ι ≫ h = e.ι := by aesop_cat\n  /-- The right commuting triangle of the factorization morphism. -/\n  h_π : h ≫ e.π = d.π := by aesop_cat\n\n"}
{"name":"CategoryTheory.Factorisation.Hom.mk.sizeOf_spec","module":"Mathlib.CategoryTheory.Category.Factorisation","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nX Y : C\nf : Quiver.Hom X Y\nd e : CategoryTheory.Factorisation f\ninst✝ : SizeOf C\nh : Quiver.Hom d.mid e.mid\nι_h : autoParam (Eq (CategoryTheory.CategoryStruct.comp d.ι h) e.ι) _auto✝\nh_π : autoParam (Eq (CategoryTheory.CategoryStruct.comp h e.π) d.π) _auto✝\n⊢ Eq (SizeOf.sizeOf { h := h, ι_h := ι_h, h_π := h_π }) (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd 1 (SizeOf.sizeOf h)) (SizeOf.sizeOf ι_h)) (SizeOf.sizeOf h_π))","decl":"/-- Morphisms of `Factorisation f` consist of morphism between their midpoints and the obvious\ncommutativity conditions. -/\n@[ext]\nprotected structure Hom (d e : Factorisation f) : Type (max u v) where\n  /-- The morphism between the midpoints of the factorizations. -/\n  h : d.mid ⟶ e.mid\n  /-- The left commuting triangle of the factorization morphism. -/\n  ι_h : d.ι ≫ h = e.ι := by aesop_cat\n  /-- The right commuting triangle of the factorization morphism. -/\n  h_π : h ≫ e.π = d.π := by aesop_cat\n\n"}
{"name":"CategoryTheory.Factorisation.Hom.ι_h","module":"Mathlib.CategoryTheory.Category.Factorisation","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX Y : C\nf : Quiver.Hom X Y\nd e : CategoryTheory.Factorisation f\nself : d.Hom e\n⊢ Eq (CategoryTheory.CategoryStruct.comp d.ι self.h) e.ι","decl":"/-- Morphisms of `Factorisation f` consist of morphism between their midpoints and the obvious\ncommutativity conditions. -/\n@[ext]\nprotected structure Hom (d e : Factorisation f) : Type (max u v) where\n  /-- The morphism between the midpoints of the factorizations. -/\n  h : d.mid ⟶ e.mid\n  /-- The left commuting triangle of the factorization morphism. -/\n  ι_h : d.ι ≫ h = e.ι := by aesop_cat\n  /-- The right commuting triangle of the factorization morphism. -/\n  h_π : h ≫ e.π = d.π := by aesop_cat\n\n"}
{"name":"CategoryTheory.Factorisation.Hom.mk.inj","module":"Mathlib.CategoryTheory.Category.Factorisation","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX Y : C\nf : Quiver.Hom X Y\nd e : CategoryTheory.Factorisation f\nh✝ : Quiver.Hom d.mid e.mid\nι_h✝ : autoParam (Eq (CategoryTheory.CategoryStruct.comp d.ι h✝) e.ι) _auto✝\nh_π✝ : autoParam (Eq (CategoryTheory.CategoryStruct.comp h✝ e.π) d.π) _auto✝\nh : Quiver.Hom d.mid e.mid\nι_h : autoParam (Eq (CategoryTheory.CategoryStruct.comp d.ι h) e.ι) _auto✝\nh_π : autoParam (Eq (CategoryTheory.CategoryStruct.comp h e.π) d.π) _auto✝\nx✝ : Eq { h := h✝, ι_h := ι_h✝, h_π := h_π✝ } { h := h, ι_h := ι_h, h_π := h_π }\n⊢ Eq h✝ h","decl":"/-- Morphisms of `Factorisation f` consist of morphism between their midpoints and the obvious\ncommutativity conditions. -/\n@[ext]\nprotected structure Hom (d e : Factorisation f) : Type (max u v) where\n  /-- The morphism between the midpoints of the factorizations. -/\n  h : d.mid ⟶ e.mid\n  /-- The left commuting triangle of the factorization morphism. -/\n  ι_h : d.ι ≫ h = e.ι := by aesop_cat\n  /-- The right commuting triangle of the factorization morphism. -/\n  h_π : h ≫ e.π = d.π := by aesop_cat\n\n"}
{"name":"CategoryTheory.Factorisation.Hom.ext","module":"Mathlib.CategoryTheory.Category.Factorisation","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX Y : C\nf : Quiver.Hom X Y\nd e : CategoryTheory.Factorisation f\nx y : d.Hom e\nh : Eq x.h y.h\n⊢ Eq x y","decl":"/-- Morphisms of `Factorisation f` consist of morphism between their midpoints and the obvious\ncommutativity conditions. -/\n@[ext]\nprotected structure Hom (d e : Factorisation f) : Type (max u v) where\n  /-- The morphism between the midpoints of the factorizations. -/\n  h : d.mid ⟶ e.mid\n  /-- The left commuting triangle of the factorization morphism. -/\n  ι_h : d.ι ≫ h = e.ι := by aesop_cat\n  /-- The right commuting triangle of the factorization morphism. -/\n  h_π : h ≫ e.π = d.π := by aesop_cat\n\n"}
{"name":"CategoryTheory.Factorisation.Hom.ext_iff","module":"Mathlib.CategoryTheory.Category.Factorisation","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX Y : C\nf : Quiver.Hom X Y\nd e : CategoryTheory.Factorisation f\nx y : d.Hom e\n⊢ Iff (Eq x y) (Eq x.h y.h)","decl":"/-- Morphisms of `Factorisation f` consist of morphism between their midpoints and the obvious\ncommutativity conditions. -/\n@[ext]\nprotected structure Hom (d e : Factorisation f) : Type (max u v) where\n  /-- The morphism between the midpoints of the factorizations. -/\n  h : d.mid ⟶ e.mid\n  /-- The left commuting triangle of the factorization morphism. -/\n  ι_h : d.ι ≫ h = e.ι := by aesop_cat\n  /-- The right commuting triangle of the factorization morphism. -/\n  h_π : h ≫ e.π = d.π := by aesop_cat\n\n"}
{"name":"CategoryTheory.Factorisation.Hom.id_h","module":"Mathlib.CategoryTheory.Category.Factorisation","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX Y : C\nf : Quiver.Hom X Y\nd : CategoryTheory.Factorisation f\n⊢ Eq (CategoryTheory.Factorisation.Hom.id d).h (CategoryTheory.CategoryStruct.id d.mid)","decl":"/-- The identity morphism of `Factorisation f`. -/\n@[simps]\nprotected def Hom.id (d : Factorisation f) : Factorisation.Hom d d where\n  h := 𝟙 _\n\n"}
{"name":"CategoryTheory.Factorisation.Hom.comp_h","module":"Mathlib.CategoryTheory.Category.Factorisation","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX Y : C\nf✝ : Quiver.Hom X Y\nd₁ d₂ d₃ : CategoryTheory.Factorisation f✝\nf : d₁.Hom d₂\ng : d₂.Hom d₃\n⊢ Eq (f.comp g).h (CategoryTheory.CategoryStruct.comp f.h g.h)","decl":"/-- Composition of morphisms in `Factorisation f`. -/\n@[simps]\nprotected def Hom.comp {d₁ d₂ d₃ : Factorisation f}\n    (f : Factorisation.Hom d₁ d₂) (g : Factorisation.Hom d₂ d₃) : Factorisation.Hom d₁ d₃ where\n  h := f.h ≫ g.h\n  ι_h := by rw [← Category.assoc, f.ι_h, g.ι_h]\n  h_π := by rw [Category.assoc, g.h_π, f.h_π]\n\n"}
{"name":"CategoryTheory.Factorisation.initial_π","module":"Mathlib.CategoryTheory.Category.Factorisation","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX Y : C\nf : Quiver.Hom X Y\n⊢ Eq CategoryTheory.Factorisation.initial.π f","decl":"/-- The initial object in `Factorisation f`, with the domain of `f` as its midpoint. -/\n@[simps]\nprotected def initial : Factorisation f where\n  mid := X\n  ι := 𝟙 _\n  π := f\n\n"}
{"name":"CategoryTheory.Factorisation.initial_ι","module":"Mathlib.CategoryTheory.Category.Factorisation","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX Y : C\nf : Quiver.Hom X Y\n⊢ Eq CategoryTheory.Factorisation.initial.ι (CategoryTheory.CategoryStruct.id X)","decl":"/-- The initial object in `Factorisation f`, with the domain of `f` as its midpoint. -/\n@[simps]\nprotected def initial : Factorisation f where\n  mid := X\n  ι := 𝟙 _\n  π := f\n\n"}
{"name":"CategoryTheory.Factorisation.initial_mid","module":"Mathlib.CategoryTheory.Category.Factorisation","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX Y : C\nf : Quiver.Hom X Y\n⊢ Eq CategoryTheory.Factorisation.initial.mid X","decl":"/-- The initial object in `Factorisation f`, with the domain of `f` as its midpoint. -/\n@[simps]\nprotected def initial : Factorisation f where\n  mid := X\n  ι := 𝟙 _\n  π := f\n\n"}
{"name":"CategoryTheory.Factorisation.initialHom_h","module":"Mathlib.CategoryTheory.Category.Factorisation","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX Y : C\nf : Quiver.Hom X Y\nd : CategoryTheory.Factorisation f\n⊢ Eq d.initialHom.h d.ι","decl":"/-- The unique morphism out of `Factorisation.initial f`. -/\n@[simps]\nprotected def initialHom (d : Factorisation f) :\n    Factorisation.Hom (Factorisation.initial : Factorisation f) d where\n  h := d.ι\n\n"}
{"name":"CategoryTheory.Factorisation.terminal_π","module":"Mathlib.CategoryTheory.Category.Factorisation","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX Y : C\nf : Quiver.Hom X Y\n⊢ Eq CategoryTheory.Factorisation.terminal.π (CategoryTheory.CategoryStruct.id Y)","decl":"/-- The terminal object in `Factorisation f`, with the codomain of `f` as its midpoint. -/\n@[simps]\nprotected def terminal : Factorisation f where\n  mid := Y\n  ι := f\n  π := 𝟙 _\n\n"}
{"name":"CategoryTheory.Factorisation.terminal_mid","module":"Mathlib.CategoryTheory.Category.Factorisation","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX Y : C\nf : Quiver.Hom X Y\n⊢ Eq CategoryTheory.Factorisation.terminal.mid Y","decl":"/-- The terminal object in `Factorisation f`, with the codomain of `f` as its midpoint. -/\n@[simps]\nprotected def terminal : Factorisation f where\n  mid := Y\n  ι := f\n  π := 𝟙 _\n\n"}
{"name":"CategoryTheory.Factorisation.terminal_ι","module":"Mathlib.CategoryTheory.Category.Factorisation","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX Y : C\nf : Quiver.Hom X Y\n⊢ Eq CategoryTheory.Factorisation.terminal.ι f","decl":"/-- The terminal object in `Factorisation f`, with the codomain of `f` as its midpoint. -/\n@[simps]\nprotected def terminal : Factorisation f where\n  mid := Y\n  ι := f\n  π := 𝟙 _\n\n"}
{"name":"CategoryTheory.Factorisation.terminalHom_h","module":"Mathlib.CategoryTheory.Category.Factorisation","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX Y : C\nf : Quiver.Hom X Y\nd : CategoryTheory.Factorisation f\n⊢ Eq d.terminalHom.h d.π","decl":"/-- The unique morphism into `Factorisation.terminal f`. -/\n@[simps]\nprotected def terminalHom (d : Factorisation f) :\n    Factorisation.Hom d (Factorisation.terminal : Factorisation f) where\n  h := d.π\n\n"}
{"name":"CategoryTheory.Factorisation.instHasInitial","module":"Mathlib.CategoryTheory.Category.Factorisation","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX Y : C\nf : Quiver.Hom X Y\n⊢ CategoryTheory.Limits.HasInitial (CategoryTheory.Factorisation f)","decl":"instance : HasInitial (Factorisation f) := Limits.hasInitial_of_unique Factorisation.initial\n\n"}
{"name":"CategoryTheory.Factorisation.instHasTerminal","module":"Mathlib.CategoryTheory.Category.Factorisation","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX Y : C\nf : Quiver.Hom X Y\n⊢ CategoryTheory.Limits.HasTerminal (CategoryTheory.Factorisation f)","decl":"instance : HasTerminal (Factorisation f) := Limits.hasTerminal_of_unique Factorisation.terminal\n\n"}
{"name":"CategoryTheory.Factorisation.forget_map","module":"Mathlib.CategoryTheory.Category.Factorisation","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX Y : C\nf✝ : Quiver.Hom X Y\nX✝ Y✝ : CategoryTheory.Factorisation f✝\nf : Quiver.Hom X✝ Y✝\n⊢ Eq (CategoryTheory.Factorisation.forget.map f) f.h","decl":"/-- The forgetful functor from `Factorisation f` to the underlying category `C`. -/\n@[simps]\ndef forget : Factorisation f ⥤ C where\n  obj := Factorisation.mid\n  map f := f.h\n\n"}
{"name":"CategoryTheory.Factorisation.forget_obj","module":"Mathlib.CategoryTheory.Category.Factorisation","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nX Y : C\nf : Quiver.Hom X Y\nself : CategoryTheory.Factorisation f\n⊢ Eq (CategoryTheory.Factorisation.forget.obj self) self.mid","decl":"/-- The forgetful functor from `Factorisation f` to the underlying category `C`. -/\n@[simps]\ndef forget : Factorisation f ⥤ C where\n  obj := Factorisation.mid\n  map f := f.h\n\n"}
