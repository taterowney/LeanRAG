{"name":"AlgebraCat.instSmallSubtypeForallCarrierObjMemSubalgebraSectionsSubalgebra","module":"Mathlib.Algebra.Category.AlgebraCat.Limits","initialProofState":"R : Type u\ninst✝² : CommRing R\nJ : Type v\ninst✝¹ : CategoryTheory.Category.{t, v} J\nF : CategoryTheory.Functor J (AlgebraCat R)\ninst✝ : Small.{w, max v w} ↑(F.comp (CategoryTheory.forget (AlgebraCat R))).sections\n⊢ Small.{w, max v w} (Subtype fun x => Membership.mem (AlgebraCat.sectionsSubalgebra F) x)","decl":"instance : Small.{w} (sectionsSubalgebra F) :=\n  inferInstanceAs <| Small.{w} (F ⋙ forget _).sections\n\n"}
{"name":"AlgebraCat.hasLimitsOfSize","module":"Mathlib.Algebra.Category.AlgebraCat.Limits","initialProofState":"R : Type u\ninst✝¹ : CommRing R\ninst✝ : UnivLE.{v, w}\n⊢ CategoryTheory.Limits.HasLimitsOfSize.{t, v, w, max (w + 1) u} (AlgebraCat R)","decl":"/-- The category of R-algebras has all limits. -/\nlemma hasLimitsOfSize [UnivLE.{v, w}] : HasLimitsOfSize.{t, v} (AlgebraCat.{w} R) :=\n  { has_limits_of_shape := fun _ _ =>\n    { has_limit := fun F => HasLimit.mk\n        { cone := limitCone F\n          isLimit := limitConeIsLimit F } } }\n\n"}
{"name":"AlgebraCat.hasLimits","module":"Mathlib.Algebra.Category.AlgebraCat.Limits","initialProofState":"R : Type u\ninst✝ : CommRing R\n⊢ CategoryTheory.Limits.HasLimits (AlgebraCat R)","decl":"instance hasLimits : HasLimits (AlgebraCat.{w} R) :=\n  AlgebraCat.hasLimitsOfSize.{w, w, u}\n\n"}
{"name":"AlgebraCat.forget₂Ring_preservesLimitsOfSize","module":"Mathlib.Algebra.Category.AlgebraCat.Limits","initialProofState":"R : Type u\ninst✝¹ : CommRing R\ninst✝ : UnivLE.{v, w}\n⊢ CategoryTheory.Limits.PreservesLimitsOfSize.{t, v, w, w, max u (w + 1), w + 1} (CategoryTheory.forget₂ (AlgebraCat R) RingCat)","decl":"/-- The forgetful functor from R-algebras to rings preserves all limits.\n-/\ninstance forget₂Ring_preservesLimitsOfSize [UnivLE.{v, w}] :\n    PreservesLimitsOfSize.{t, v} (forget₂ (AlgebraCat.{w} R) RingCat.{w}) where\n  preservesLimitsOfShape :=\n    { preservesLimit := fun {K} ↦\n        preservesLimit_of_preserves_limit_cone (limitConeIsLimit K)\n          (RingCat.limitConeIsLimit.{v, w}\n            (_ ⋙ forget₂ (AlgebraCat.{w} R) RingCat.{w})) }\n\n"}
{"name":"AlgebraCat.forget₂Ring_preservesLimits","module":"Mathlib.Algebra.Category.AlgebraCat.Limits","initialProofState":"R : Type u\ninst✝ : CommRing R\n⊢ CategoryTheory.Limits.PreservesLimits (CategoryTheory.forget₂ (AlgebraCat R) RingCat)","decl":"instance forget₂Ring_preservesLimits : PreservesLimits (forget₂ (AlgebraCat R) RingCat.{w}) :=\n  AlgebraCat.forget₂Ring_preservesLimitsOfSize.{w, w}\n\n"}
{"name":"AlgebraCat.forget₂Module_preservesLimitsOfSize","module":"Mathlib.Algebra.Category.AlgebraCat.Limits","initialProofState":"R : Type u\ninst✝¹ : CommRing R\ninst✝ : UnivLE.{v, w}\n⊢ CategoryTheory.Limits.PreservesLimitsOfSize.{t, v, w, w, max u (w + 1), max u (w + 1)} (CategoryTheory.forget₂ (AlgebraCat R) (ModuleCat R))","decl":"/-- The forgetful functor from R-algebras to R-modules preserves all limits.\n-/\ninstance forget₂Module_preservesLimitsOfSize [UnivLE.{v, w}] : PreservesLimitsOfSize.{t, v}\n    (forget₂ (AlgebraCat.{w} R) (ModuleCat.{w} R)) where\n  preservesLimitsOfShape :=\n    { preservesLimit := fun {K} ↦\n        preservesLimit_of_preserves_limit_cone (limitConeIsLimit K)\n          (ModuleCat.HasLimits.limitConeIsLimit\n            (K ⋙ forget₂ (AlgebraCat.{w} R) (ModuleCat.{w} R))) }\n\n"}
{"name":"AlgebraCat.forget₂Module_preservesLimits","module":"Mathlib.Algebra.Category.AlgebraCat.Limits","initialProofState":"R : Type u\ninst✝ : CommRing R\n⊢ CategoryTheory.Limits.PreservesLimits (CategoryTheory.forget₂ (AlgebraCat R) (ModuleCat R))","decl":"instance forget₂Module_preservesLimits :\n    PreservesLimits (forget₂ (AlgebraCat R) (ModuleCat.{w} R)) :=\n  AlgebraCat.forget₂Module_preservesLimitsOfSize.{w, w}\n\n"}
{"name":"AlgebraCat.forget_preservesLimitsOfSize","module":"Mathlib.Algebra.Category.AlgebraCat.Limits","initialProofState":"R : Type u\ninst✝¹ : CommRing R\ninst✝ : UnivLE.{v, w}\n⊢ CategoryTheory.Limits.PreservesLimitsOfSize.{t, v, w, w, max u (w + 1), w + 1} (CategoryTheory.forget (AlgebraCat R))","decl":"/-- The forgetful functor from R-algebras to types preserves all limits.\n-/\ninstance forget_preservesLimitsOfSize [UnivLE.{v, w}] :\n    PreservesLimitsOfSize.{t, v} (forget (AlgebraCat.{w} R)) where\n  preservesLimitsOfShape :=\n    { preservesLimit := fun {K} ↦\n       preservesLimit_of_preserves_limit_cone (limitConeIsLimit K)\n          (Types.Small.limitConeIsLimit.{v} (K ⋙ forget _)) }\n\n"}
{"name":"AlgebraCat.forget_preservesLimits","module":"Mathlib.Algebra.Category.AlgebraCat.Limits","initialProofState":"R : Type u\ninst✝ : CommRing R\n⊢ CategoryTheory.Limits.PreservesLimits (CategoryTheory.forget (AlgebraCat R))","decl":"instance forget_preservesLimits : PreservesLimits (forget (AlgebraCat.{w} R)) :=\n  AlgebraCat.forget_preservesLimitsOfSize.{w, w}\n\n"}
