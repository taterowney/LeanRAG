{"name":"map_eq_bind_pure_comp","module":"Mathlib.Control.Monad.Basic","initialProofState":"α β : Type u\nm : Type u → Type v\ninst✝¹ : Monad m\ninst✝ : LawfulMonad m\nf : α → β\nx : m α\n⊢ Eq (Functor.map f x) (Bind.bind x (Function.comp Pure.pure f))","decl":"@[monad_norm]\ntheorem map_eq_bind_pure_comp (m : Type u → Type v) [Monad m] [LawfulMonad m]\n    (f : α → β) (x : m α) : f <$> x = x >>= pure ∘ f :=\n  (bind_pure_comp f x).symm\n\n"}
