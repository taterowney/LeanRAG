{"name":"VertexOperator.ext","module":"Mathlib.Algebra.Vertex.VertexOperator","initialProofState":"R : Type u_1\nV : Type u_2\ninst✝² : CommRing R\ninst✝¹ : AddCommGroup V\ninst✝ : Module R V\nA B : VertexOperator R V\nh : ∀ (v : V), Eq (A v) (B v)\n⊢ Eq A B","decl":"@[ext]\ntheorem ext (A B : VertexOperator R V) (h : ∀ v : V, A v = B v) :\n    A = B := LinearMap.ext h\n\n"}
{"name":"VertexOperator.ext_iff","module":"Mathlib.Algebra.Vertex.VertexOperator","initialProofState":"R : Type u_1\nV : Type u_2\ninst✝² : CommRing R\ninst✝¹ : AddCommGroup V\ninst✝ : Module R V\nA B : VertexOperator R V\n⊢ Iff (Eq A B) (∀ (v : V), Eq (A v) (B v))","decl":"@[ext]\ntheorem ext (A B : VertexOperator R V) (h : ∀ v : V, A v = B v) :\n    A = B := LinearMap.ext h\n\n"}
{"name":"VertexOperator.coeff_eq_ncoeff","module":"Mathlib.Algebra.Vertex.VertexOperator","initialProofState":"R : Type u_1\nV : Type u_2\ninst✝² : CommRing R\ninst✝¹ : AddCommGroup V\ninst✝ : Module R V\nA : VertexOperator R V\nn : Int\n⊢ Eq (HVertexOperator.coeff A n) (A.ncoeff (HSub.hSub (Neg.neg n) 1))","decl":"@[simp]\ntheorem coeff_eq_ncoeff (A : VertexOperator R V)\n    (n : ℤ) : HVertexOperator.coeff A n = A [[-n - 1]] := by\n  rw [ncoeff, neg_sub, sub_neg_eq_add, add_sub_cancel_left]\n\n"}
{"name":"VertexOperator.ncoeff_add","module":"Mathlib.Algebra.Vertex.VertexOperator","initialProofState":"R : Type u_1\nV : Type u_2\ninst✝² : CommRing R\ninst✝¹ : AddCommGroup V\ninst✝ : Module R V\nA B : VertexOperator R V\nn : Int\n⊢ Eq ((HAdd.hAdd A B).ncoeff n) (HAdd.hAdd (A.ncoeff n) (B.ncoeff n))","decl":"@[simp]\ntheorem ncoeff_add (A B : VertexOperator R V) (n : ℤ) : (A + B) [[n]] = A [[n]] + B [[n]] := by\n  rw [ncoeff, ncoeff, ncoeff, coeff_add, Pi.add_apply]\n\n"}
{"name":"VertexOperator.ncoeff_smul","module":"Mathlib.Algebra.Vertex.VertexOperator","initialProofState":"R : Type u_1\nV : Type u_2\ninst✝² : CommRing R\ninst✝¹ : AddCommGroup V\ninst✝ : Module R V\nA : VertexOperator R V\nr : R\nn : Int\n⊢ Eq ((HSMul.hSMul r A).ncoeff n) (HSMul.hSMul r (A.ncoeff n))","decl":"@[simp]\ntheorem ncoeff_smul (A : VertexOperator R V) (r : R) (n : ℤ) : (r • A) [[n]] = r • A [[n]] := by\n  rw [ncoeff, ncoeff, coeff_smul, Pi.smul_apply]\n\n"}
{"name":"VertexOperator.ncoeff_eq_zero_of_lt_order","module":"Mathlib.Algebra.Vertex.VertexOperator","initialProofState":"R : Type u_1\nV : Type u_2\ninst✝² : CommRing R\ninst✝¹ : AddCommGroup V\ninst✝ : Module R V\nA : VertexOperator R V\nn : Int\nx : V\nh : LT.lt (HSub.hSub (Neg.neg n) 1) ((HahnModule.of R).symm (A x)).order\n⊢ Eq ((A.ncoeff n) x) 0","decl":"theorem ncoeff_eq_zero_of_lt_order (A : VertexOperator R V) (n : ℤ) (x : V)\n    (h : -n - 1 < HahnSeries.order ((HahnModule.of R).symm (A x))) : (A [[n]]) x = 0 := by\n  simp only [ncoeff, HVertexOperator.coeff, LinearMap.coe_mk, AddHom.coe_mk]\n  exact HahnSeries.coeff_eq_zero_of_lt_order h\n\n"}
{"name":"VertexOperator.coeff_eq_zero_of_lt_order","module":"Mathlib.Algebra.Vertex.VertexOperator","initialProofState":"R : Type u_1\nV : Type u_2\ninst✝² : CommRing R\ninst✝¹ : AddCommGroup V\ninst✝ : Module R V\nA : VertexOperator R V\nn : Int\nx : V\nh : LT.lt n ((HahnModule.of R).symm (A x)).order\n⊢ Eq ((HVertexOperator.coeff A n) x) 0","decl":"theorem coeff_eq_zero_of_lt_order (A : VertexOperator R V) (n : ℤ) (x : V)\n    (h : n < HahnSeries.order ((HahnModule.of R).symm (A x))) : coeff A n x = 0 := by\n  rw [coeff_eq_ncoeff, ncoeff_eq_zero_of_lt_order A (-n - 1) x]\n  omega\n\n"}
{"name":"VertexOperator.of_coeff_apply_coeff","module":"Mathlib.Algebra.Vertex.VertexOperator","initialProofState":"R : Type u_1\nV : Type u_2\ninst✝² : CommRing R\ninst✝¹ : AddCommGroup V\ninst✝ : Module R V\nf : Int → Module.End R V\nhf : ∀ (x : V), Exists fun n => ∀ (m : Int), LT.lt m n → Eq ((f m) x) 0\nx : V\nn : Int\n⊢ Eq (((HahnModule.of R).symm ((VertexOperator.of_coeff f hf) x)).coeff n) ((f n) x)","decl":"@[simp]\ntheorem of_coeff_apply_coeff (f : ℤ → Module.End R V)\n    (hf : ∀ (x : V), ∃ n, ∀ m < n, (f m) x = 0) (x : V) (n : ℤ) :\n    ((HahnModule.of R).symm ((of_coeff f hf) x)).coeff n = (f n) x := by\n  rfl\n\n"}
{"name":"VertexOperator.ncoeff_of_coeff","module":"Mathlib.Algebra.Vertex.VertexOperator","initialProofState":"R : Type u_1\nV : Type u_2\ninst✝² : CommRing R\ninst✝¹ : AddCommGroup V\ninst✝ : Module R V\nf : Int → Module.End R V\nhf : ∀ (x : V), Exists fun n => ∀ (m : Int), LT.lt m n → Eq ((f m) x) 0\nn : Int\n⊢ Eq ((VertexOperator.of_coeff f hf).ncoeff n) (f (HSub.hSub (Neg.neg n) 1))","decl":"@[simp]\ntheorem ncoeff_of_coeff (f : ℤ → Module.End R V)\n    (hf : ∀(x : V), ∃(n : ℤ), ∀(m : ℤ), m < n → (f m) x = 0) (n : ℤ) :\n    (of_coeff f hf) [[n]] = f (-n - 1) := by\n  ext v\n  rw [ncoeff, coeff_apply, of_coeff_apply_coeff]\n\n"}
