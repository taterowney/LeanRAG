{"name":"totallyBounded_convexHull","module":"Mathlib.Analysis.Convex.TotallyBounded","initialProofState":"E : Type u_1\ns : Set E\ninst✝⁴ : AddCommGroup E\ninst✝³ : Module Real E\ninst✝² : UniformSpace E\ninst✝¹ : UniformAddGroup E\nlcs : LocallyConvexSpace Real E\ninst✝ : ContinuousSMul Real E\nhs : TotallyBounded s\n⊢ TotallyBounded ((convexHull Real) s)","decl":"theorem totallyBounded_convexHull (hs : TotallyBounded s) :\n    TotallyBounded (convexHull ℝ s) := by\n  rw [totallyBounded_iff_subset_finite_iUnion_nhds_zero]\n  intro U hU\n  obtain ⟨W, hW₁, hW₂⟩ := exists_nhds_zero_half hU\n  obtain ⟨V, ⟨hV₁, hV₂, hV₃⟩⟩ := (locallyConvexSpace_iff_exists_convex_subset_zero ℝ E).mp lcs W hW₁\n  obtain ⟨t, ⟨htf, hts⟩⟩ := (totallyBounded_iff_subset_finite_iUnion_nhds_zero.mp hs) _ hV₁\n  obtain ⟨t', ⟨htf', hts'⟩⟩ := (totallyBounded_iff_subset_finite_iUnion_nhds_zero.mp\n    (IsCompact.totallyBounded (Finite.isCompact_convexHull htf)) _ hV₁)\n  use t', htf'\n  simp only [iUnion_vadd_set, vadd_eq_add] at hts hts' ⊢\n  calc convexHull ℝ s\n    _ ⊆ convexHull ℝ (t + V) := convexHull_mono hts\n    _ ⊆ convexHull ℝ t + convexHull ℝ V := convexHull_add_subset\n    _ = convexHull ℝ t + V := by rw [hV₂.convexHull_eq]\n    _ ⊆ t' + V + V := add_subset_add_right hts'\n    _ = t' + (V + V) := by rw [add_assoc]\n    _ ⊆ t' + (W + W) := add_subset_add_left (add_subset_add hV₃ hV₃)\n    _ ⊆ t' + U := add_subset_add_left (add_subset_iff.mpr hW₂)\n"}
