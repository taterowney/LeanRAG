{"name":"MeasurableSup.measurable_sup_const","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝¹ : MeasurableSpace M\ninst✝ : Max M\nself : MeasurableSup M\nc : M\n⊢ Measurable fun x => Max.max x c","decl":"/-- We say that a type has `MeasurableSup` if `(c ⊔ ·)` and `(· ⊔ c)` are measurable functions.\nFor a typeclass assuming measurability of `uncurry (· ⊔ ·)` see `MeasurableSup₂`. -/\nclass MeasurableSup (M : Type*) [MeasurableSpace M] [Max M] : Prop where\n  measurable_const_sup : ∀ c : M, Measurable (c ⊔ ·)\n  measurable_sup_const : ∀ c : M, Measurable (· ⊔ c)\n\n"}
{"name":"MeasurableSup.measurable_const_sup","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝¹ : MeasurableSpace M\ninst✝ : Max M\nself : MeasurableSup M\nc : M\n⊢ Measurable fun x => Max.max c x","decl":"/-- We say that a type has `MeasurableSup` if `(c ⊔ ·)` and `(· ⊔ c)` are measurable functions.\nFor a typeclass assuming measurability of `uncurry (· ⊔ ·)` see `MeasurableSup₂`. -/\nclass MeasurableSup (M : Type*) [MeasurableSpace M] [Max M] : Prop where\n  measurable_const_sup : ∀ c : M, Measurable (c ⊔ ·)\n  measurable_sup_const : ∀ c : M, Measurable (· ⊔ c)\n\n"}
{"name":"MeasurableSup₂.measurable_sup","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝¹ : MeasurableSpace M\ninst✝ : Max M\nself : MeasurableSup₂ M\n⊢ Measurable fun p => Max.max p.1 p.2","decl":"/-- We say that a type has `MeasurableSup₂` if `uncurry (· ⊔ ·)` is a measurable functions.\nFor a typeclass assuming measurability of `(c ⊔ ·)` and `(· ⊔ c)` see `MeasurableSup`. -/\nclass MeasurableSup₂ (M : Type*) [MeasurableSpace M] [Max M] : Prop where\n  measurable_sup : Measurable fun p : M × M => p.1 ⊔ p.2\n\n"}
{"name":"MeasurableInf.measurable_const_inf","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝¹ : MeasurableSpace M\ninst✝ : Min M\nself : MeasurableInf M\nc : M\n⊢ Measurable fun x => Min.min c x","decl":"/-- We say that a type has `MeasurableInf` if `(c ⊓ ·)` and `(· ⊓ c)` are measurable functions.\nFor a typeclass assuming measurability of `uncurry (· ⊓ ·)` see `MeasurableInf₂`. -/\nclass MeasurableInf (M : Type*) [MeasurableSpace M] [Min M] : Prop where\n  measurable_const_inf : ∀ c : M, Measurable (c ⊓ ·)\n  measurable_inf_const : ∀ c : M, Measurable (· ⊓ c)\n\n"}
{"name":"MeasurableInf.measurable_inf_const","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝¹ : MeasurableSpace M\ninst✝ : Min M\nself : MeasurableInf M\nc : M\n⊢ Measurable fun x => Min.min x c","decl":"/-- We say that a type has `MeasurableInf` if `(c ⊓ ·)` and `(· ⊓ c)` are measurable functions.\nFor a typeclass assuming measurability of `uncurry (· ⊓ ·)` see `MeasurableInf₂`. -/\nclass MeasurableInf (M : Type*) [MeasurableSpace M] [Min M] : Prop where\n  measurable_const_inf : ∀ c : M, Measurable (c ⊓ ·)\n  measurable_inf_const : ∀ c : M, Measurable (· ⊓ c)\n\n"}
{"name":"MeasurableInf₂.measurable_inf","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝¹ : MeasurableSpace M\ninst✝ : Min M\nself : MeasurableInf₂ M\n⊢ Measurable fun p => Min.min p.1 p.2","decl":"/-- We say that a type has `MeasurableInf₂` if `uncurry (· ⊓ ·)` is a measurable functions.\nFor a typeclass assuming measurability of `(c ⊓ ·)` and `(· ⊓ c)` see `MeasurableInf`. -/\nclass MeasurableInf₂ (M : Type*) [MeasurableSpace M] [Min M] : Prop where\n  measurable_inf : Measurable fun p : M × M => p.1 ⊓ p.2\n\n"}
{"name":"OrderDual.instMeasurableSup","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝² : MeasurableSpace M\ninst✝¹ : Min M\ninst✝ : MeasurableInf M\n⊢ MeasurableSup (OrderDual M)","decl":"instance (priority := 100) OrderDual.instMeasurableSup [Min M] [MeasurableInf M] :\n    MeasurableSup Mᵒᵈ :=\n  ⟨@measurable_const_inf M _ _ _, @measurable_inf_const M _ _ _⟩\n\n"}
{"name":"OrderDual.instMeasurableInf","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝² : MeasurableSpace M\ninst✝¹ : Max M\ninst✝ : MeasurableSup M\n⊢ MeasurableInf (OrderDual M)","decl":"instance (priority := 100) OrderDual.instMeasurableInf [Max M] [MeasurableSup M] :\n    MeasurableInf Mᵒᵈ :=\n  ⟨@measurable_const_sup M _ _ _, @measurable_sup_const M _ _ _⟩\n\n"}
{"name":"OrderDual.instMeasurableSup₂","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝² : MeasurableSpace M\ninst✝¹ : Min M\ninst✝ : MeasurableInf₂ M\n⊢ MeasurableSup₂ (OrderDual M)","decl":"instance (priority := 100) OrderDual.instMeasurableSup₂ [Min M] [MeasurableInf₂ M] :\n    MeasurableSup₂ Mᵒᵈ :=\n  ⟨@measurable_inf M _ _ _⟩\n\n"}
{"name":"OrderDual.instMeasurableInf₂","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝² : MeasurableSpace M\ninst✝¹ : Max M\ninst✝ : MeasurableSup₂ M\n⊢ MeasurableInf₂ (OrderDual M)","decl":"instance (priority := 100) OrderDual.instMeasurableInf₂ [Max M] [MeasurableSup₂ M] :\n    MeasurableInf₂ Mᵒᵈ :=\n  ⟨@measurable_sup M _ _ _⟩\n\n"}
{"name":"Measurable.const_sup","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝² : MeasurableSpace M\nα : Type u_2\nm : MeasurableSpace α\nf : α → M\ninst✝¹ : Max M\ninst✝ : MeasurableSup M\nhf : Measurable f\nc : M\n⊢ Measurable fun x => Max.max c (f x)","decl":"@[measurability]\ntheorem Measurable.const_sup (hf : Measurable f) (c : M) : Measurable fun x => c ⊔ f x :=\n  (measurable_const_sup c).comp hf\n\n"}
{"name":"AEMeasurable.const_sup","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝² : MeasurableSpace M\nα : Type u_2\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf : α → M\ninst✝¹ : Max M\ninst✝ : MeasurableSup M\nhf : AEMeasurable f μ\nc : M\n⊢ AEMeasurable (fun x => Max.max c (f x)) μ","decl":"@[measurability]\ntheorem AEMeasurable.const_sup (hf : AEMeasurable f μ) (c : M) :\n    AEMeasurable (fun x => c ⊔ f x) μ :=\n  (MeasurableSup.measurable_const_sup c).comp_aemeasurable hf\n\n"}
{"name":"Measurable.sup_const","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝² : MeasurableSpace M\nα : Type u_2\nm : MeasurableSpace α\nf : α → M\ninst✝¹ : Max M\ninst✝ : MeasurableSup M\nhf : Measurable f\nc : M\n⊢ Measurable fun x => Max.max (f x) c","decl":"@[measurability]\ntheorem Measurable.sup_const (hf : Measurable f) (c : M) : Measurable fun x => f x ⊔ c :=\n  (measurable_sup_const c).comp hf\n\n"}
{"name":"AEMeasurable.sup_const","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝² : MeasurableSpace M\nα : Type u_2\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf : α → M\ninst✝¹ : Max M\ninst✝ : MeasurableSup M\nhf : AEMeasurable f μ\nc : M\n⊢ AEMeasurable (fun x => Max.max (f x) c) μ","decl":"@[measurability]\ntheorem AEMeasurable.sup_const (hf : AEMeasurable f μ) (c : M) :\n    AEMeasurable (fun x => f x ⊔ c) μ :=\n  (measurable_sup_const c).comp_aemeasurable hf\n\n"}
{"name":"Measurable.sup'","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝² : MeasurableSpace M\nα : Type u_2\nm : MeasurableSpace α\nf g : α → M\ninst✝¹ : Max M\ninst✝ : MeasurableSup₂ M\nhf : Measurable f\nhg : Measurable g\n⊢ Measurable (Max.max f g)","decl":"@[measurability]\ntheorem Measurable.sup' (hf : Measurable f) (hg : Measurable g) : Measurable (f ⊔ g) :=\n  measurable_sup.comp (hf.prod_mk hg)\n\n"}
{"name":"Measurable.sup","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝² : MeasurableSpace M\nα : Type u_2\nm : MeasurableSpace α\nf g : α → M\ninst✝¹ : Max M\ninst✝ : MeasurableSup₂ M\nhf : Measurable f\nhg : Measurable g\n⊢ Measurable fun a => Max.max (f a) (g a)","decl":"@[measurability]\ntheorem Measurable.sup (hf : Measurable f) (hg : Measurable g) : Measurable fun a => f a ⊔ g a :=\n  measurable_sup.comp (hf.prod_mk hg)\n\n"}
{"name":"AEMeasurable.sup'","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝² : MeasurableSpace M\nα : Type u_2\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf g : α → M\ninst✝¹ : Max M\ninst✝ : MeasurableSup₂ M\nhf : AEMeasurable f μ\nhg : AEMeasurable g μ\n⊢ AEMeasurable (Max.max f g) μ","decl":"@[measurability]\ntheorem AEMeasurable.sup' (hf : AEMeasurable f μ) (hg : AEMeasurable g μ) :\n    AEMeasurable (f ⊔ g) μ :=\n  measurable_sup.comp_aemeasurable (hf.prod_mk hg)\n\n"}
{"name":"AEMeasurable.sup","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝² : MeasurableSpace M\nα : Type u_2\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf g : α → M\ninst✝¹ : Max M\ninst✝ : MeasurableSup₂ M\nhf : AEMeasurable f μ\nhg : AEMeasurable g μ\n⊢ AEMeasurable (fun a => Max.max (f a) (g a)) μ","decl":"@[measurability]\ntheorem AEMeasurable.sup (hf : AEMeasurable f μ) (hg : AEMeasurable g μ) :\n    AEMeasurable (fun a => f a ⊔ g a) μ :=\n  measurable_sup.comp_aemeasurable (hf.prod_mk hg)\n\n"}
{"name":"MeasurableSup₂.toMeasurableSup","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝² : MeasurableSpace M\ninst✝¹ : Max M\ninst✝ : MeasurableSup₂ M\n⊢ MeasurableSup M","decl":"instance (priority := 100) MeasurableSup₂.toMeasurableSup : MeasurableSup M :=\n  ⟨fun _ => measurable_const.sup measurable_id, fun _ => measurable_id.sup measurable_const⟩\n\n"}
{"name":"Measurable.const_inf","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝² : MeasurableSpace M\nα : Type u_2\nm : MeasurableSpace α\nf : α → M\ninst✝¹ : Min M\ninst✝ : MeasurableInf M\nhf : Measurable f\nc : M\n⊢ Measurable fun x => Min.min c (f x)","decl":"@[measurability]\ntheorem Measurable.const_inf (hf : Measurable f) (c : M) : Measurable fun x => c ⊓ f x :=\n  (measurable_const_inf c).comp hf\n\n"}
{"name":"AEMeasurable.const_inf","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝² : MeasurableSpace M\nα : Type u_2\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf : α → M\ninst✝¹ : Min M\ninst✝ : MeasurableInf M\nhf : AEMeasurable f μ\nc : M\n⊢ AEMeasurable (fun x => Min.min c (f x)) μ","decl":"@[measurability]\ntheorem AEMeasurable.const_inf (hf : AEMeasurable f μ) (c : M) :\n    AEMeasurable (fun x => c ⊓ f x) μ :=\n  (MeasurableInf.measurable_const_inf c).comp_aemeasurable hf\n\n"}
{"name":"Measurable.inf_const","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝² : MeasurableSpace M\nα : Type u_2\nm : MeasurableSpace α\nf : α → M\ninst✝¹ : Min M\ninst✝ : MeasurableInf M\nhf : Measurable f\nc : M\n⊢ Measurable fun x => Min.min (f x) c","decl":"@[measurability]\ntheorem Measurable.inf_const (hf : Measurable f) (c : M) : Measurable fun x => f x ⊓ c :=\n  (measurable_inf_const c).comp hf\n\n"}
{"name":"AEMeasurable.inf_const","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝² : MeasurableSpace M\nα : Type u_2\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf : α → M\ninst✝¹ : Min M\ninst✝ : MeasurableInf M\nhf : AEMeasurable f μ\nc : M\n⊢ AEMeasurable (fun x => Min.min (f x) c) μ","decl":"@[measurability]\ntheorem AEMeasurable.inf_const (hf : AEMeasurable f μ) (c : M) :\n    AEMeasurable (fun x => f x ⊓ c) μ :=\n  (measurable_inf_const c).comp_aemeasurable hf\n\n"}
{"name":"Measurable.inf'","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝² : MeasurableSpace M\nα : Type u_2\nm : MeasurableSpace α\nf g : α → M\ninst✝¹ : Min M\ninst✝ : MeasurableInf₂ M\nhf : Measurable f\nhg : Measurable g\n⊢ Measurable (Min.min f g)","decl":"@[measurability]\ntheorem Measurable.inf' (hf : Measurable f) (hg : Measurable g) : Measurable (f ⊓ g) :=\n  measurable_inf.comp (hf.prod_mk hg)\n\n"}
{"name":"Measurable.inf","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝² : MeasurableSpace M\nα : Type u_2\nm : MeasurableSpace α\nf g : α → M\ninst✝¹ : Min M\ninst✝ : MeasurableInf₂ M\nhf : Measurable f\nhg : Measurable g\n⊢ Measurable fun a => Min.min (f a) (g a)","decl":"@[measurability]\ntheorem Measurable.inf (hf : Measurable f) (hg : Measurable g) : Measurable fun a => f a ⊓ g a :=\n  measurable_inf.comp (hf.prod_mk hg)\n\n"}
{"name":"AEMeasurable.inf'","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝² : MeasurableSpace M\nα : Type u_2\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf g : α → M\ninst✝¹ : Min M\ninst✝ : MeasurableInf₂ M\nhf : AEMeasurable f μ\nhg : AEMeasurable g μ\n⊢ AEMeasurable (Min.min f g) μ","decl":"@[measurability]\ntheorem AEMeasurable.inf' (hf : AEMeasurable f μ) (hg : AEMeasurable g μ) :\n    AEMeasurable (f ⊓ g) μ :=\n  measurable_inf.comp_aemeasurable (hf.prod_mk hg)\n\n"}
{"name":"AEMeasurable.inf","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝² : MeasurableSpace M\nα : Type u_2\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf g : α → M\ninst✝¹ : Min M\ninst✝ : MeasurableInf₂ M\nhf : AEMeasurable f μ\nhg : AEMeasurable g μ\n⊢ AEMeasurable (fun a => Min.min (f a) (g a)) μ","decl":"@[measurability]\ntheorem AEMeasurable.inf (hf : AEMeasurable f μ) (hg : AEMeasurable g μ) :\n    AEMeasurable (fun a => f a ⊓ g a) μ :=\n  measurable_inf.comp_aemeasurable (hf.prod_mk hg)\n\n"}
{"name":"MeasurableInf₂.to_hasMeasurableInf","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"M : Type u_1\ninst✝² : MeasurableSpace M\ninst✝¹ : Min M\ninst✝ : MeasurableInf₂ M\n⊢ MeasurableInf M","decl":"instance (priority := 100) MeasurableInf₂.to_hasMeasurableInf : MeasurableInf M :=\n  ⟨fun _ => measurable_const.inf measurable_id, fun _ => measurable_id.inf measurable_const⟩\n\n"}
{"name":"Finset.measurable_sup'","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"α : Type u_2\nm : MeasurableSpace α\nδ : Type u_3\ninst✝² : MeasurableSpace δ\ninst✝¹ : SemilatticeSup α\ninst✝ : MeasurableSup₂ α\nι : Type u_4\ns : Finset ι\nhs : s.Nonempty\nf : ι → δ → α\nhf : ∀ (n : ι), Membership.mem s n → Measurable (f n)\n⊢ Measurable (s.sup' hs f)","decl":"@[measurability]\ntheorem Finset.measurable_sup' {ι : Type*} {s : Finset ι} (hs : s.Nonempty) {f : ι → δ → α}\n    (hf : ∀ n ∈ s, Measurable (f n)) : Measurable (s.sup' hs f) :=\n  Finset.sup'_induction hs _ (fun _f hf _g hg => hf.sup hg) fun n hn => hf n hn\n\n"}
{"name":"Finset.measurable_range_sup'","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"α : Type u_2\nm : MeasurableSpace α\nδ : Type u_3\ninst✝² : MeasurableSpace δ\ninst✝¹ : SemilatticeSup α\ninst✝ : MeasurableSup₂ α\nf : Nat → δ → α\nn : Nat\nhf : ∀ (k : Nat), LE.le k n → Measurable (f k)\n⊢ Measurable ((Finset.range (HAdd.hAdd n 1)).sup' ⋯ f)","decl":"@[measurability]\ntheorem Finset.measurable_range_sup' {f : ℕ → δ → α} {n : ℕ} (hf : ∀ k ≤ n, Measurable (f k)) :\n    Measurable ((range (n + 1)).sup' nonempty_range_succ f) := by\n  simp_rw [← Nat.lt_succ_iff] at hf\n  refine Finset.measurable_sup' _ ?_\n  simpa [Finset.mem_range]\n\n"}
{"name":"Finset.measurable_range_sup''","module":"Mathlib.MeasureTheory.Order.Lattice","initialProofState":"α : Type u_2\nm : MeasurableSpace α\nδ : Type u_3\ninst✝² : MeasurableSpace δ\ninst✝¹ : SemilatticeSup α\ninst✝ : MeasurableSup₂ α\nf : Nat → δ → α\nn : Nat\nhf : ∀ (k : Nat), LE.le k n → Measurable (f k)\n⊢ Measurable fun x => (Finset.range (HAdd.hAdd n 1)).sup' ⋯ fun k => f k x","decl":"@[measurability]\ntheorem Finset.measurable_range_sup'' {f : ℕ → δ → α} {n : ℕ} (hf : ∀ k ≤ n, Measurable (f k)) :\n    Measurable fun x => (range (n + 1)).sup' nonempty_range_succ fun k => f k x := by\n  convert Finset.measurable_range_sup' hf using 1\n  ext x\n  simp\n\n"}
