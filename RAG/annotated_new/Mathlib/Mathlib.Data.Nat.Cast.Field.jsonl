{"name":"Nat.cast_div","module":"Mathlib.Data.Nat.Cast.Field","initialProofState":"α : Type u_1\ninst✝ : DivisionSemiring α\nm n : Nat\nn_dvd : Dvd.dvd n m\nhn : Ne (↑n) 0\n⊢ Eq (↑(HDiv.hDiv m n)) (HDiv.hDiv ↑m ↑n)","decl":"@[simp]\ntheorem cast_div [DivisionSemiring α] {m n : ℕ} (n_dvd : n ∣ m) (hn : (n : α) ≠ 0) :\n    ((m / n : ℕ) : α) = m / n := by\n  rcases n_dvd with ⟨k, rfl⟩\n  have : n ≠ 0 := by rintro rfl; simp at hn\n  rw [Nat.mul_div_cancel_left _ <| zero_lt_of_ne_zero this, mul_comm n,\n    cast_mul, mul_div_cancel_right₀ _ hn]\n\n"}
{"name":"Nat.cast_div_div_div_cancel_right","module":"Mathlib.Data.Nat.Cast.Field","initialProofState":"α : Type u_1\ninst✝¹ : DivisionSemiring α\ninst✝ : CharZero α\nm n d : Nat\nhn : Dvd.dvd d n\nhm : Dvd.dvd d m\n⊢ Eq (HDiv.hDiv ↑(HDiv.hDiv m d) ↑(HDiv.hDiv n d)) (HDiv.hDiv ↑m ↑n)","decl":"theorem cast_div_div_div_cancel_right [DivisionSemiring α] [CharZero α] {m n d : ℕ}\n    (hn : d ∣ n) (hm : d ∣ m) :\n    (↑(m / d) : α) / (↑(n / d) : α) = (m : α) / n := by\n  rcases eq_or_ne d 0 with (rfl | hd); · simp [Nat.zero_dvd.1 hm]\n  replace hd : (d : α) ≠ 0 := by norm_cast\n  rw [cast_div hm, cast_div hn, div_div_div_cancel_right₀ hd] <;> exact hd\n\n"}
