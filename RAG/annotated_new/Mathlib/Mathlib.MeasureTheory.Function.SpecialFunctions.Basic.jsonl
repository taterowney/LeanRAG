{"name":"Real.measurable_exp","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"⊢ Measurable Real.exp","decl":"@[measurability]\ntheorem measurable_exp : Measurable exp :=\n  continuous_exp.measurable\n\n"}
{"name":"Real.measurable_log","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"⊢ Measurable Real.log","decl":"@[measurability]\ntheorem measurable_log : Measurable log :=\n  measurable_of_measurable_on_compl_singleton 0 <|\n    Continuous.measurable <| continuousOn_iff_continuous_restrict.1 continuousOn_log\n\n"}
{"name":"Real.measurable_of_measurable_exp","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nx✝ : MeasurableSpace α\nf : α → Real\nhf : Measurable fun x => Real.exp (f x)\n⊢ Measurable f","decl":"lemma measurable_of_measurable_exp (hf : Measurable (fun x ↦ exp (f x))) :\n    Measurable f := by\n  have : f = fun x ↦ log (exp (f x)) := by ext; rw [log_exp]\n  rw [this]\n  exact measurable_log.comp hf\n\n"}
{"name":"Real.aemeasurable_of_aemeasurable_exp","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nx✝ : MeasurableSpace α\nf : α → Real\nμ : MeasureTheory.Measure α\nhf : AEMeasurable (fun x => Real.exp (f x)) μ\n⊢ AEMeasurable f μ","decl":"lemma aemeasurable_of_aemeasurable_exp (hf : AEMeasurable (fun x ↦ exp (f x)) μ) :\n    AEMeasurable f μ := by\n  have : f = fun x ↦ log (exp (f x)) := by ext; rw [log_exp]\n  rw [this]\n  exact measurable_log.comp_aemeasurable hf\n\n"}
{"name":"Real.aemeasurable_of_aemeasurable_exp_mul","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nx✝ : MeasurableSpace α\nf : α → Real\nμ : MeasureTheory.Measure α\nt : Real\nht : Ne t 0\nhf : AEMeasurable (fun x => Real.exp (HMul.hMul t (f x))) μ\n⊢ AEMeasurable f μ","decl":"lemma aemeasurable_of_aemeasurable_exp_mul {t : ℝ}\n    (ht : t ≠ 0) (hf : AEMeasurable (fun x ↦ exp (t * f x)) μ) :\n    AEMeasurable f μ := by\n  simpa only [mul_div_cancel_left₀ _ ht]\n    using (aemeasurable_of_aemeasurable_exp hf).div (aemeasurable_const (b := t))\n\n"}
{"name":"Real.measurable_sin","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"⊢ Measurable Real.sin","decl":"@[measurability]\ntheorem measurable_sin : Measurable sin :=\n  continuous_sin.measurable\n\n"}
{"name":"Real.measurable_cos","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"⊢ Measurable Real.cos","decl":"@[measurability]\ntheorem measurable_cos : Measurable cos :=\n  continuous_cos.measurable\n\n"}
{"name":"Real.measurable_sinh","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"⊢ Measurable Real.sinh","decl":"@[measurability]\ntheorem measurable_sinh : Measurable sinh :=\n  continuous_sinh.measurable\n\n"}
{"name":"Real.measurable_cosh","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"⊢ Measurable Real.cosh","decl":"@[measurability]\ntheorem measurable_cosh : Measurable cosh :=\n  continuous_cosh.measurable\n\n"}
{"name":"Real.measurable_arcsin","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"⊢ Measurable Real.arcsin","decl":"@[measurability]\ntheorem measurable_arcsin : Measurable arcsin :=\n  continuous_arcsin.measurable\n\n"}
{"name":"Real.measurable_arccos","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"⊢ Measurable Real.arccos","decl":"@[measurability]\ntheorem measurable_arccos : Measurable arccos :=\n  continuous_arccos.measurable\n\n"}
{"name":"Complex.measurable_re","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"⊢ Measurable Complex.re","decl":"@[measurability]\ntheorem measurable_re : Measurable re :=\n  continuous_re.measurable\n\n"}
{"name":"Complex.measurable_im","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"⊢ Measurable Complex.im","decl":"@[measurability]\ntheorem measurable_im : Measurable im :=\n  continuous_im.measurable\n\n"}
{"name":"Complex.measurable_ofReal","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"⊢ Measurable Complex.ofReal","decl":"@[measurability]\ntheorem measurable_ofReal : Measurable ((↑) : ℝ → ℂ) :=\n  continuous_ofReal.measurable\n\n"}
{"name":"Complex.measurable_exp","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"⊢ Measurable Complex.exp","decl":"@[measurability]\ntheorem measurable_exp : Measurable exp :=\n  continuous_exp.measurable\n\n"}
{"name":"Complex.measurable_sin","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"⊢ Measurable Complex.sin","decl":"@[measurability]\ntheorem measurable_sin : Measurable sin :=\n  continuous_sin.measurable\n\n"}
{"name":"Complex.measurable_cos","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"⊢ Measurable Complex.cos","decl":"@[measurability]\ntheorem measurable_cos : Measurable cos :=\n  continuous_cos.measurable\n\n"}
{"name":"Complex.measurable_sinh","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"⊢ Measurable Complex.sinh","decl":"@[measurability]\ntheorem measurable_sinh : Measurable sinh :=\n  continuous_sinh.measurable\n\n"}
{"name":"Complex.measurable_cosh","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"⊢ Measurable Complex.cosh","decl":"@[measurability]\ntheorem measurable_cosh : Measurable cosh :=\n  continuous_cosh.measurable\n\n"}
{"name":"Complex.measurable_arg","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"⊢ Measurable Complex.arg","decl":"@[measurability]\ntheorem measurable_arg : Measurable arg :=\n  have A : Measurable fun x : ℂ => Real.arcsin (x.im / Complex.abs x) :=\n    Real.measurable_arcsin.comp (measurable_im.div measurable_norm)\n  have B : Measurable fun x : ℂ => Real.arcsin ((-x).im / Complex.abs x) :=\n    Real.measurable_arcsin.comp ((measurable_im.comp measurable_neg).div measurable_norm)\n  Measurable.ite (isClosed_le continuous_const continuous_re).measurableSet A <|\n    Measurable.ite (isClosed_le continuous_const continuous_im).measurableSet (B.add_const _)\n      (B.sub_const _)\n\n"}
{"name":"Complex.measurable_log","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"⊢ Measurable Complex.log","decl":"@[measurability]\ntheorem measurable_log : Measurable log :=\n  (measurable_ofReal.comp <| Real.measurable_log.comp measurable_norm).add <|\n    (measurable_ofReal.comp measurable_arg).mul_const I\n\n"}
{"name":"Measurable.exp","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nf : α → Real\nhf : Measurable f\n⊢ Measurable fun x => Real.exp (f x)","decl":"@[measurability, fun_prop]\nprotected theorem Measurable.exp : Measurable fun x => Real.exp (f x) :=\n  Real.measurable_exp.comp hf\n\n"}
{"name":"Measurable.log","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nf : α → Real\nhf : Measurable f\n⊢ Measurable fun x => Real.log (f x)","decl":"@[measurability, fun_prop]\nprotected theorem Measurable.log : Measurable fun x => log (f x) :=\n  measurable_log.comp hf\n\n"}
{"name":"Measurable.cos","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nf : α → Real\nhf : Measurable f\n⊢ Measurable fun x => Real.cos (f x)","decl":"@[measurability, fun_prop]\nprotected theorem Measurable.cos : Measurable fun x ↦ cos (f x) := measurable_cos.comp hf\n\n"}
{"name":"Measurable.sin","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nf : α → Real\nhf : Measurable f\n⊢ Measurable fun x => Real.sin (f x)","decl":"@[measurability, fun_prop]\nprotected theorem Measurable.sin : Measurable fun x ↦ sin (f x) := measurable_sin.comp hf\n\n"}
{"name":"Measurable.cosh","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nf : α → Real\nhf : Measurable f\n⊢ Measurable fun x => Real.cosh (f x)","decl":"@[measurability, fun_prop]\nprotected theorem Measurable.cosh : Measurable fun x ↦ cosh (f x) := measurable_cosh.comp hf\n\n"}
{"name":"Measurable.sinh","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nf : α → Real\nhf : Measurable f\n⊢ Measurable fun x => Real.sinh (f x)","decl":"@[measurability, fun_prop]\nprotected theorem Measurable.sinh : Measurable fun x ↦ sinh (f x) := measurable_sinh.comp hf\n\n"}
{"name":"Measurable.sqrt","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nf : α → Real\nhf : Measurable f\n⊢ Measurable fun x => (f x).sqrt","decl":"@[measurability, fun_prop]\nprotected theorem Measurable.sqrt : Measurable fun x => √(f x) := continuous_sqrt.measurable.comp hf\n\n"}
{"name":"AEMeasurable.exp","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf : α → Real\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => Real.exp (f x)) μ","decl":"@[measurability, fun_prop]\nprotected lemma AEMeasurable.exp : AEMeasurable (fun x ↦ exp (f x)) μ :=\n  measurable_exp.comp_aemeasurable hf\n\n"}
{"name":"AEMeasurable.log","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf : α → Real\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => Real.log (f x)) μ","decl":"@[measurability, fun_prop]\nprotected lemma AEMeasurable.log : AEMeasurable (fun x ↦ log (f x)) μ :=\n  measurable_log.comp_aemeasurable hf\n\n"}
{"name":"AEMeasurable.cos","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf : α → Real\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => Real.cos (f x)) μ","decl":"@[measurability, fun_prop]\nprotected lemma AEMeasurable.cos : AEMeasurable (fun x ↦ cos (f x)) μ :=\n  measurable_cos.comp_aemeasurable hf\n\n"}
{"name":"AEMeasurable.sin","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf : α → Real\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => Real.sin (f x)) μ","decl":"@[measurability, fun_prop]\nprotected lemma AEMeasurable.sin : AEMeasurable (fun x ↦ sin (f x)) μ :=\n  measurable_sin.comp_aemeasurable hf\n\n"}
{"name":"AEMeasurable.cosh","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf : α → Real\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => Real.cosh (f x)) μ","decl":"@[measurability, fun_prop]\nprotected lemma AEMeasurable.cosh : AEMeasurable (fun x ↦ cosh (f x)) μ :=\n  measurable_cosh.comp_aemeasurable hf\n\n"}
{"name":"AEMeasurable.sinh","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf : α → Real\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => Real.sinh (f x)) μ","decl":"@[measurability, fun_prop]\nprotected lemma AEMeasurable.sinh : AEMeasurable (fun x ↦ sinh (f x)) μ :=\n  measurable_sinh.comp_aemeasurable hf\n\n"}
{"name":"AEMeasurable.sqrt","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf : α → Real\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => (f x).sqrt) μ","decl":"@[measurability, fun_prop]\nprotected lemma AEMeasurable.sqrt : AEMeasurable (fun x ↦ √(f x)) μ :=\n  continuous_sqrt.measurable.comp_aemeasurable hf\n\n"}
{"name":"Measurable.cexp","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nf : α → Complex\nhf : Measurable f\n⊢ Measurable fun x => Complex.exp (f x)","decl":"@[measurability, fun_prop]\nprotected theorem Measurable.cexp : Measurable fun x => Complex.exp (f x) :=\n  Complex.measurable_exp.comp hf\n\n"}
{"name":"Measurable.ccos","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nf : α → Complex\nhf : Measurable f\n⊢ Measurable fun x => Complex.cos (f x)","decl":"@[measurability, fun_prop]\nprotected theorem Measurable.ccos : Measurable fun x => Complex.cos (f x) :=\n  Complex.measurable_cos.comp hf\n\n"}
{"name":"Measurable.csin","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nf : α → Complex\nhf : Measurable f\n⊢ Measurable fun x => Complex.sin (f x)","decl":"@[measurability, fun_prop]\nprotected theorem Measurable.csin : Measurable fun x => Complex.sin (f x) :=\n  Complex.measurable_sin.comp hf\n\n"}
{"name":"Measurable.ccosh","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nf : α → Complex\nhf : Measurable f\n⊢ Measurable fun x => Complex.cosh (f x)","decl":"@[measurability, fun_prop]\nprotected theorem Measurable.ccosh : Measurable fun x => Complex.cosh (f x) :=\n  Complex.measurable_cosh.comp hf\n\n"}
{"name":"Measurable.csinh","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nf : α → Complex\nhf : Measurable f\n⊢ Measurable fun x => Complex.sinh (f x)","decl":"@[measurability, fun_prop]\nprotected theorem Measurable.csinh : Measurable fun x => Complex.sinh (f x) :=\n  Complex.measurable_sinh.comp hf\n\n"}
{"name":"Measurable.carg","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nf : α → Complex\nhf : Measurable f\n⊢ Measurable fun x => (f x).arg","decl":"@[measurability, fun_prop]\nprotected theorem Measurable.carg : Measurable fun x => arg (f x) :=\n  measurable_arg.comp hf\n\n"}
{"name":"Measurable.clog","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nf : α → Complex\nhf : Measurable f\n⊢ Measurable fun x => Complex.log (f x)","decl":"@[measurability, fun_prop]\nprotected theorem Measurable.clog : Measurable fun x => Complex.log (f x) :=\n  measurable_log.comp hf\n\n"}
{"name":"AEMeasurable.cexp","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf : α → Complex\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => Complex.exp (f x)) μ","decl":"@[measurability, fun_prop]\nprotected lemma AEMeasurable.cexp : AEMeasurable (fun x ↦ exp (f x)) μ :=\n  measurable_exp.comp_aemeasurable hf\n\n"}
{"name":"AEMeasurable.ccos","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf : α → Complex\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => Complex.cos (f x)) μ","decl":"@[measurability, fun_prop]\nprotected lemma AEMeasurable.ccos : AEMeasurable (fun x ↦ cos (f x)) μ :=\n  measurable_cos.comp_aemeasurable hf\n\n"}
{"name":"AEMeasurable.csin","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf : α → Complex\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => Complex.sin (f x)) μ","decl":"@[measurability, fun_prop]\nprotected lemma AEMeasurable.csin : AEMeasurable (fun x ↦ sin (f x)) μ :=\n  measurable_sin.comp_aemeasurable hf\n\n"}
{"name":"AEMeasurable.ccosh","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf : α → Complex\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => Complex.cosh (f x)) μ","decl":"@[measurability, fun_prop]\nprotected lemma AEMeasurable.ccosh : AEMeasurable (fun x ↦ cosh (f x)) μ :=\n  measurable_cosh.comp_aemeasurable hf\n\n"}
{"name":"AEMeasurable.csinh","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf : α → Complex\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => Complex.sinh (f x)) μ","decl":"@[measurability, fun_prop]\nprotected lemma AEMeasurable.csinh : AEMeasurable (fun x ↦ sinh (f x)) μ :=\n  measurable_sinh.comp_aemeasurable hf\n\n"}
{"name":"AEMeasurable.carg","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf : α → Complex\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => (f x).arg) μ","decl":"@[measurability, fun_prop]\nprotected lemma AEMeasurable.carg : AEMeasurable (fun x ↦ arg (f x)) μ :=\n  measurable_arg.comp_aemeasurable hf\n\n"}
{"name":"AEMeasurable.clog","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf : α → Complex\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => Complex.log (f x)) μ","decl":"@[measurability, fun_prop]\nprotected lemma AEMeasurable.clog : AEMeasurable (fun x ↦ log (f x)) μ :=\n  measurable_log.comp_aemeasurable hf\n\n"}
{"name":"Measurable.complex_ofReal","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nf : α → Real\nhf : Measurable f\n⊢ Measurable fun x => ↑(f x)","decl":"@[measurability, fun_prop]\nprotected theorem Measurable.complex_ofReal {α : Type*} {m : MeasurableSpace α} {f : α → ℝ}\n    (hf : Measurable f) :\n    Measurable fun x ↦ (f x : ℂ) :=\n  Complex.measurable_ofReal.comp hf\n\n"}
{"name":"AEMeasurable.complex_ofReal","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"α : Type u_1\nm : MeasurableSpace α\nμ : MeasureTheory.Measure α\nf : α → Real\nhf : AEMeasurable f μ\n⊢ AEMeasurable (fun x => ↑(f x)) μ","decl":"@[measurability, fun_prop]\nprotected theorem AEMeasurable.complex_ofReal {α : Type*} {m : MeasurableSpace α}  {μ : Measure α}\n    {f : α → ℝ} (hf : AEMeasurable f μ) :\n    AEMeasurable (fun x ↦ (f x : ℂ)) μ :=\n  Complex.measurable_ofReal.comp_aemeasurable hf\n\n"}
{"name":"Complex.hasMeasurablePow","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"⊢ MeasurablePow Complex Complex","decl":"instance Complex.hasMeasurablePow : MeasurablePow ℂ ℂ :=\n  ⟨Measurable.ite (measurable_fst (measurableSet_singleton 0))\n      (Measurable.ite (measurable_snd (measurableSet_singleton 0)) measurable_one measurable_zero)\n      (measurable_fst.clog.mul measurable_snd).cexp⟩\n\n"}
{"name":"Real.hasMeasurablePow","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"⊢ MeasurablePow Real Real","decl":"instance Real.hasMeasurablePow : MeasurablePow ℝ ℝ :=\n  ⟨Complex.measurable_re.comp <|\n      (Complex.measurable_ofReal.comp measurable_fst).pow\n        (Complex.measurable_ofReal.comp measurable_snd)⟩\n\n"}
{"name":"NNReal.hasMeasurablePow","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"⊢ MeasurablePow NNReal Real","decl":"instance NNReal.hasMeasurablePow : MeasurablePow ℝ≥0 ℝ :=\n  ⟨(measurable_fst.coe_nnreal_real.pow measurable_snd).subtype_mk⟩\n\n"}
{"name":"ENNReal.hasMeasurablePow","module":"Mathlib.MeasureTheory.Function.SpecialFunctions.Basic","initialProofState":"⊢ MeasurablePow ENNReal Real","decl":"instance ENNReal.hasMeasurablePow : MeasurablePow ℝ≥0∞ ℝ := by\n  refine ⟨ENNReal.measurable_of_measurable_nnreal_prod ?_ ?_⟩\n  · simp_rw [ENNReal.coe_rpow_def]\n    refine Measurable.ite ?_ measurable_const (measurable_fst.pow measurable_snd).coe_nnreal_ennreal\n    exact\n      MeasurableSet.inter (measurable_fst (measurableSet_singleton 0))\n        (measurable_snd measurableSet_Iio)\n  · simp_rw [ENNReal.top_rpow_def]\n    refine Measurable.ite measurableSet_Ioi measurable_const ?_\n    exact Measurable.ite (measurableSet_singleton 0) measurable_const measurable_const\n\n"}
