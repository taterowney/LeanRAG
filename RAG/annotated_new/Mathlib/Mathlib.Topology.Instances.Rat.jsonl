{"name":"Rat.dist_eq","module":"Mathlib.Topology.Instances.Rat","initialProofState":"x y : Rat\n⊢ Eq (Dist.dist x y) (abs (HSub.hSub ↑x ↑y))","decl":"theorem dist_eq (x y : ℚ) : dist x y = |(x : ℝ) - y| := rfl\n\n"}
{"name":"Rat.dist_cast","module":"Mathlib.Topology.Instances.Rat","initialProofState":"x y : Rat\n⊢ Eq (Dist.dist ↑x ↑y) (Dist.dist x y)","decl":"@[norm_cast, simp]\ntheorem dist_cast (x y : ℚ) : dist (x : ℝ) y = dist x y :=\n  rfl\n\n"}
{"name":"Rat.uniformContinuous_coe_real","module":"Mathlib.Topology.Instances.Rat","initialProofState":"⊢ UniformContinuous Rat.cast","decl":"theorem uniformContinuous_coe_real : UniformContinuous ((↑) : ℚ → ℝ) :=\n  uniformContinuous_comap\n\n"}
{"name":"Rat.isUniformEmbedding_coe_real","module":"Mathlib.Topology.Instances.Rat","initialProofState":"⊢ IsUniformEmbedding Rat.cast","decl":"theorem isUniformEmbedding_coe_real : IsUniformEmbedding ((↑) : ℚ → ℝ) :=\n  isUniformEmbedding_comap Rat.cast_injective\n\n"}
{"name":"Rat.uniformEmbedding_coe_real","module":"Mathlib.Topology.Instances.Rat","initialProofState":"⊢ IsUniformEmbedding Rat.cast","decl":"@[deprecated (since := \"2024-10-01\")]\nalias uniformEmbedding_coe_real := isUniformEmbedding_coe_real\n\n"}
{"name":"Rat.isDenseEmbedding_coe_real","module":"Mathlib.Topology.Instances.Rat","initialProofState":"⊢ IsDenseEmbedding Rat.cast","decl":"theorem isDenseEmbedding_coe_real : IsDenseEmbedding ((↑) : ℚ → ℝ) :=\n  isUniformEmbedding_coe_real.isDenseEmbedding Rat.denseRange_cast\n\n"}
{"name":"Rat.denseEmbedding_coe_real","module":"Mathlib.Topology.Instances.Rat","initialProofState":"⊢ IsDenseEmbedding Rat.cast","decl":"@[deprecated (since := \"2024-09-30\")]\nalias denseEmbedding_coe_real := isDenseEmbedding_coe_real\n\n"}
{"name":"Rat.isEmbedding_coe_real","module":"Mathlib.Topology.Instances.Rat","initialProofState":"⊢ Topology.IsEmbedding Rat.cast","decl":"theorem isEmbedding_coe_real : IsEmbedding ((↑) : ℚ → ℝ) :=\n  isDenseEmbedding_coe_real.isEmbedding\n\n"}
{"name":"Rat.embedding_coe_real","module":"Mathlib.Topology.Instances.Rat","initialProofState":"⊢ Topology.IsEmbedding Rat.cast","decl":"@[deprecated (since := \"2024-10-26\")]\nalias embedding_coe_real := isEmbedding_coe_real\n\n"}
{"name":"Rat.continuous_coe_real","module":"Mathlib.Topology.Instances.Rat","initialProofState":"⊢ Continuous Rat.cast","decl":"theorem continuous_coe_real : Continuous ((↑) : ℚ → ℝ) :=\n  uniformContinuous_coe_real.continuous\n\n"}
{"name":"Nat.dist_cast_rat","module":"Mathlib.Topology.Instances.Rat","initialProofState":"x y : Nat\n⊢ Eq (Dist.dist ↑x ↑y) (Dist.dist x y)","decl":"@[norm_cast, simp]\ntheorem Nat.dist_cast_rat (x y : ℕ) : dist (x : ℚ) y = dist x y := by\n  rw [← Nat.dist_cast_real, ← Rat.dist_cast]; congr\n\n"}
{"name":"Nat.isUniformEmbedding_coe_rat","module":"Mathlib.Topology.Instances.Rat","initialProofState":"⊢ IsUniformEmbedding Nat.cast","decl":"theorem Nat.isUniformEmbedding_coe_rat : IsUniformEmbedding ((↑) : ℕ → ℚ) :=\n  isUniformEmbedding_bot_of_pairwise_le_dist zero_lt_one <| by simpa using Nat.pairwise_one_le_dist\n\n"}
{"name":"Nat.uniformEmbedding_coe_rat","module":"Mathlib.Topology.Instances.Rat","initialProofState":"⊢ IsUniformEmbedding Nat.cast","decl":"@[deprecated (since := \"2024-10-01\")]\nalias Nat.uniformEmbedding_coe_rat := Nat.isUniformEmbedding_coe_rat\n\n"}
{"name":"Nat.isClosedEmbedding_coe_rat","module":"Mathlib.Topology.Instances.Rat","initialProofState":"⊢ Topology.IsClosedEmbedding Nat.cast","decl":"theorem Nat.isClosedEmbedding_coe_rat : IsClosedEmbedding ((↑) : ℕ → ℚ) :=\n  isClosedEmbedding_of_pairwise_le_dist zero_lt_one <| by simpa using Nat.pairwise_one_le_dist\n\n"}
{"name":"Nat.closedEmbedding_coe_rat","module":"Mathlib.Topology.Instances.Rat","initialProofState":"⊢ Topology.IsClosedEmbedding Nat.cast","decl":"@[deprecated (since := \"2024-10-20\")]\nalias Nat.closedEmbedding_coe_rat := Nat.isClosedEmbedding_coe_rat\n\n"}
{"name":"Int.dist_cast_rat","module":"Mathlib.Topology.Instances.Rat","initialProofState":"x y : Int\n⊢ Eq (Dist.dist ↑x ↑y) (Dist.dist x y)","decl":"@[norm_cast, simp]\ntheorem Int.dist_cast_rat (x y : ℤ) : dist (x : ℚ) y = dist x y := by\n  rw [← Int.dist_cast_real, ← Rat.dist_cast]; congr\n\n"}
{"name":"Int.isUniformEmbedding_coe_rat","module":"Mathlib.Topology.Instances.Rat","initialProofState":"⊢ IsUniformEmbedding Int.cast","decl":"theorem Int.isUniformEmbedding_coe_rat : IsUniformEmbedding ((↑) : ℤ → ℚ) :=\n  isUniformEmbedding_bot_of_pairwise_le_dist zero_lt_one <| by simpa using Int.pairwise_one_le_dist\n\n"}
{"name":"Int.uniformEmbedding_coe_rat","module":"Mathlib.Topology.Instances.Rat","initialProofState":"⊢ IsUniformEmbedding Int.cast","decl":"@[deprecated (since := \"2024-10-01\")]\nalias Int.uniformEmbedding_coe_rat := Int.isUniformEmbedding_coe_rat\n\n"}
{"name":"Int.isClosedEmbedding_coe_rat","module":"Mathlib.Topology.Instances.Rat","initialProofState":"⊢ Topology.IsClosedEmbedding Int.cast","decl":"theorem Int.isClosedEmbedding_coe_rat : IsClosedEmbedding ((↑) : ℤ → ℚ) :=\n  isClosedEmbedding_of_pairwise_le_dist zero_lt_one <| by simpa using Int.pairwise_one_le_dist\n\n"}
{"name":"Int.closedEmbedding_coe_rat","module":"Mathlib.Topology.Instances.Rat","initialProofState":"⊢ Topology.IsClosedEmbedding Int.cast","decl":"@[deprecated (since := \"2024-10-20\")]\nalias Int.closedEmbedding_coe_rat := Int.isClosedEmbedding_coe_rat\n\n"}
{"name":"Rat.instNoncompactSpace","module":"Mathlib.Topology.Instances.Rat","initialProofState":"⊢ NoncompactSpace Rat","decl":"instance : NoncompactSpace ℚ := Int.isClosedEmbedding_coe_rat.noncompactSpace\n\n"}
{"name":"Rat.uniformContinuous_add","module":"Mathlib.Topology.Instances.Rat","initialProofState":"⊢ UniformContinuous fun p => HAdd.hAdd p.1 p.2","decl":"theorem uniformContinuous_add : UniformContinuous fun p : ℚ × ℚ => p.1 + p.2 :=\n  Rat.isUniformEmbedding_coe_real.isUniformInducing.uniformContinuous_iff.2 <| by\n    simp only [Function.comp_def, Rat.cast_add]\n    exact Real.uniformContinuous_add.comp\n      (Rat.uniformContinuous_coe_real.prodMap Rat.uniformContinuous_coe_real)\n\n"}
{"name":"Rat.uniformContinuous_neg","module":"Mathlib.Topology.Instances.Rat","initialProofState":"⊢ UniformContinuous Neg.neg","decl":"theorem uniformContinuous_neg : UniformContinuous (@Neg.neg ℚ _) :=\n  Metric.uniformContinuous_iff.2 fun ε ε0 =>\n    ⟨_, ε0, fun _ _ h => by simpa only [abs_sub_comm, dist_eq, cast_neg, neg_sub_neg] using h⟩\n\n"}
{"name":"Rat.instUniformAddGroup","module":"Mathlib.Topology.Instances.Rat","initialProofState":"⊢ UniformAddGroup Rat","decl":"instance : UniformAddGroup ℚ :=\n  UniformAddGroup.mk' Rat.uniformContinuous_add Rat.uniformContinuous_neg\n\n"}
{"name":"Rat.instTopologicalAddGroup","module":"Mathlib.Topology.Instances.Rat","initialProofState":"⊢ TopologicalAddGroup Rat","decl":"instance : TopologicalAddGroup ℚ := inferInstance\n\n"}
{"name":"Rat.instOrderTopology","module":"Mathlib.Topology.Instances.Rat","initialProofState":"⊢ OrderTopology Rat","decl":"instance : OrderTopology ℚ := induced_orderTopology _ Rat.cast_lt exists_rat_btwn\n\n"}
{"name":"Rat.uniformContinuous_abs","module":"Mathlib.Topology.Instances.Rat","initialProofState":"⊢ UniformContinuous abs","decl":"theorem uniformContinuous_abs : UniformContinuous (abs : ℚ → ℚ) :=\n  Metric.uniformContinuous_iff.2 fun ε ε0 =>\n    ⟨ε, ε0, fun _ _ h =>\n      lt_of_le_of_lt (by simpa [Rat.dist_eq] using abs_abs_sub_abs_le_abs_sub _ _) h⟩\n\n"}
{"name":"Rat.instTopologicalRing","module":"Mathlib.Topology.Instances.Rat","initialProofState":"⊢ TopologicalRing Rat","decl":"instance : TopologicalRing ℚ := inferInstance\n\n"}
{"name":"Rat.totallyBounded_Icc","module":"Mathlib.Topology.Instances.Rat","initialProofState":"a b : Rat\n⊢ TotallyBounded (Set.Icc a b)","decl":"nonrec theorem totallyBounded_Icc (a b : ℚ) : TotallyBounded (Icc a b) := by\n  simpa only [preimage_cast_Icc]\n    using totallyBounded_preimage Rat.isUniformEmbedding_coe_real.isUniformInducing\n      (totallyBounded_Icc (a : ℝ) b)\n\n"}
