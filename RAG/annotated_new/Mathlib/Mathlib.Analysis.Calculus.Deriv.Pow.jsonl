{"name":"hasStrictDerivAt_pow","module":"Mathlib.Analysis.Calculus.Deriv.Pow","initialProofState":"𝕜 : Type u\ninst✝ : NontriviallyNormedField 𝕜\nn : Nat\nx : 𝕜\n⊢ HasStrictDerivAt (fun x => HPow.hPow x n) (HMul.hMul (↑n) (HPow.hPow x (HSub.hSub n 1))) x","decl":"theorem hasStrictDerivAt_pow :\n    ∀ (n : ℕ) (x : 𝕜), HasStrictDerivAt (fun x : 𝕜 ↦ x ^ n) ((n : 𝕜) * x ^ (n - 1)) x\n  | 0, x => by simp [hasStrictDerivAt_const]\n  | 1, x => by simpa using hasStrictDerivAt_id x\n  | n + 1 + 1, x => by\n    simpa [pow_succ, add_mul, mul_assoc] using\n      (hasStrictDerivAt_pow (n + 1) x).mul (hasStrictDerivAt_id x)\n\n"}
{"name":"hasDerivAt_pow","module":"Mathlib.Analysis.Calculus.Deriv.Pow","initialProofState":"𝕜 : Type u\ninst✝ : NontriviallyNormedField 𝕜\nn : Nat\nx : 𝕜\n⊢ HasDerivAt (fun x => HPow.hPow x n) (HMul.hMul (↑n) (HPow.hPow x (HSub.hSub n 1))) x","decl":"theorem hasDerivAt_pow (n : ℕ) (x : 𝕜) :\n    HasDerivAt (fun x : 𝕜 => x ^ n) ((n : 𝕜) * x ^ (n - 1)) x :=\n  (hasStrictDerivAt_pow n x).hasDerivAt\n\n"}
{"name":"hasDerivWithinAt_pow","module":"Mathlib.Analysis.Calculus.Deriv.Pow","initialProofState":"𝕜 : Type u\ninst✝ : NontriviallyNormedField 𝕜\nn : Nat\nx : 𝕜\ns : Set 𝕜\n⊢ HasDerivWithinAt (fun x => HPow.hPow x n) (HMul.hMul (↑n) (HPow.hPow x (HSub.hSub n 1))) s x","decl":"theorem hasDerivWithinAt_pow (n : ℕ) (x : 𝕜) (s : Set 𝕜) :\n    HasDerivWithinAt (fun x : 𝕜 => x ^ n) ((n : 𝕜) * x ^ (n - 1)) s x :=\n  (hasDerivAt_pow n x).hasDerivWithinAt\n\n"}
{"name":"differentiableAt_pow","module":"Mathlib.Analysis.Calculus.Deriv.Pow","initialProofState":"𝕜 : Type u\ninst✝ : NontriviallyNormedField 𝕜\nx : 𝕜\nn : Nat\n⊢ DifferentiableAt 𝕜 (fun x => HPow.hPow x n) x","decl":"theorem differentiableAt_pow : DifferentiableAt 𝕜 (fun x : 𝕜 => x ^ n) x :=\n  (hasDerivAt_pow n x).differentiableAt\n\n"}
{"name":"differentiableWithinAt_pow","module":"Mathlib.Analysis.Calculus.Deriv.Pow","initialProofState":"𝕜 : Type u\ninst✝ : NontriviallyNormedField 𝕜\nx : 𝕜\ns : Set 𝕜\nn : Nat\n⊢ DifferentiableWithinAt 𝕜 (fun x => HPow.hPow x n) s x","decl":"theorem differentiableWithinAt_pow :\n    DifferentiableWithinAt 𝕜 (fun x : 𝕜 => x ^ n) s x :=\n  (differentiableAt_pow n).differentiableWithinAt\n\n"}
{"name":"differentiable_pow","module":"Mathlib.Analysis.Calculus.Deriv.Pow","initialProofState":"𝕜 : Type u\ninst✝ : NontriviallyNormedField 𝕜\nn : Nat\n⊢ Differentiable 𝕜 fun x => HPow.hPow x n","decl":"theorem differentiable_pow : Differentiable 𝕜 fun x : 𝕜 => x ^ n := fun _ => differentiableAt_pow n\n\n"}
{"name":"differentiableOn_pow","module":"Mathlib.Analysis.Calculus.Deriv.Pow","initialProofState":"𝕜 : Type u\ninst✝ : NontriviallyNormedField 𝕜\ns : Set 𝕜\nn : Nat\n⊢ DifferentiableOn 𝕜 (fun x => HPow.hPow x n) s","decl":"theorem differentiableOn_pow : DifferentiableOn 𝕜 (fun x : 𝕜 => x ^ n) s :=\n  (differentiable_pow n).differentiableOn\n\n"}
{"name":"deriv_pow","module":"Mathlib.Analysis.Calculus.Deriv.Pow","initialProofState":"𝕜 : Type u\ninst✝ : NontriviallyNormedField 𝕜\nx : 𝕜\nn : Nat\n⊢ Eq (deriv (fun x => HPow.hPow x n) x) (HMul.hMul (↑n) (HPow.hPow x (HSub.hSub n 1)))","decl":"theorem deriv_pow : deriv (fun x : 𝕜 => x ^ n) x = (n : 𝕜) * x ^ (n - 1) :=\n  (hasDerivAt_pow n x).deriv\n\n"}
{"name":"deriv_pow'","module":"Mathlib.Analysis.Calculus.Deriv.Pow","initialProofState":"𝕜 : Type u\ninst✝ : NontriviallyNormedField 𝕜\nn : Nat\n⊢ Eq (deriv fun x => HPow.hPow x n) fun x => HMul.hMul (↑n) (HPow.hPow x (HSub.hSub n 1))","decl":"@[simp]\ntheorem deriv_pow' : (deriv fun x : 𝕜 => x ^ n) = fun x => (n : 𝕜) * x ^ (n - 1) :=\n  funext fun _ => deriv_pow n\n\n"}
{"name":"derivWithin_pow","module":"Mathlib.Analysis.Calculus.Deriv.Pow","initialProofState":"𝕜 : Type u\ninst✝ : NontriviallyNormedField 𝕜\nx : 𝕜\ns : Set 𝕜\nn : Nat\nhxs : UniqueDiffWithinAt 𝕜 s x\n⊢ Eq (derivWithin (fun x => HPow.hPow x n) s x) (HMul.hMul (↑n) (HPow.hPow x (HSub.hSub n 1)))","decl":"theorem derivWithin_pow (hxs : UniqueDiffWithinAt 𝕜 s x) :\n    derivWithin (fun x : 𝕜 => x ^ n) s x = (n : 𝕜) * x ^ (n - 1) :=\n  (hasDerivWithinAt_pow n x s).derivWithin hxs\n\n"}
{"name":"HasDerivWithinAt.pow","module":"Mathlib.Analysis.Calculus.Deriv.Pow","initialProofState":"𝕜 : Type u\ninst✝ : NontriviallyNormedField 𝕜\nx : 𝕜\ns : Set 𝕜\nc : 𝕜 → 𝕜\nc' : 𝕜\nn : Nat\nhc : HasDerivWithinAt c c' s x\n⊢ HasDerivWithinAt (fun y => HPow.hPow (c y) n) (HMul.hMul (HMul.hMul (↑n) (HPow.hPow (c x) (HSub.hSub n 1))) c') s x","decl":"theorem HasDerivWithinAt.pow (hc : HasDerivWithinAt c c' s x) :\n    HasDerivWithinAt (fun y => c y ^ n) ((n : 𝕜) * c x ^ (n - 1) * c') s x :=\n  (hasDerivAt_pow n (c x)).comp_hasDerivWithinAt x hc\n\n"}
{"name":"HasDerivAt.pow","module":"Mathlib.Analysis.Calculus.Deriv.Pow","initialProofState":"𝕜 : Type u\ninst✝ : NontriviallyNormedField 𝕜\nx : 𝕜\nc : 𝕜 → 𝕜\nc' : 𝕜\nn : Nat\nhc : HasDerivAt c c' x\n⊢ HasDerivAt (fun y => HPow.hPow (c y) n) (HMul.hMul (HMul.hMul (↑n) (HPow.hPow (c x) (HSub.hSub n 1))) c') x","decl":"theorem HasDerivAt.pow (hc : HasDerivAt c c' x) :\n    HasDerivAt (fun y => c y ^ n) ((n : 𝕜) * c x ^ (n - 1) * c') x := by\n  rw [← hasDerivWithinAt_univ] at *\n  exact hc.pow n\n\n"}
{"name":"derivWithin_pow'","module":"Mathlib.Analysis.Calculus.Deriv.Pow","initialProofState":"𝕜 : Type u\ninst✝ : NontriviallyNormedField 𝕜\nx : 𝕜\ns : Set 𝕜\nc : 𝕜 → 𝕜\nn : Nat\nhc : DifferentiableWithinAt 𝕜 c s x\n⊢ Eq (derivWithin (fun x => HPow.hPow (c x) n) s x) (HMul.hMul (HMul.hMul (↑n) (HPow.hPow (c x) (HSub.hSub n 1))) (derivWithin c s x))","decl":"theorem derivWithin_pow' (hc : DifferentiableWithinAt 𝕜 c s x) :\n    derivWithin (fun x => c x ^ n) s x = (n : 𝕜) * c x ^ (n - 1) * derivWithin c s x := by\n  rcases uniqueDiffWithinAt_or_nhdsWithin_eq_bot s x with hxs | hxs\n  · exact (hc.hasDerivWithinAt.pow n).derivWithin hxs\n  · simp [derivWithin_zero_of_isolated hxs]\n\n"}
{"name":"deriv_pow''","module":"Mathlib.Analysis.Calculus.Deriv.Pow","initialProofState":"𝕜 : Type u\ninst✝ : NontriviallyNormedField 𝕜\nx : 𝕜\nc : 𝕜 → 𝕜\nn : Nat\nhc : DifferentiableAt 𝕜 c x\n⊢ Eq (deriv (fun x => HPow.hPow (c x) n) x) (HMul.hMul (HMul.hMul (↑n) (HPow.hPow (c x) (HSub.hSub n 1))) (deriv c x))","decl":"@[simp]\ntheorem deriv_pow'' (hc : DifferentiableAt 𝕜 c x) :\n    deriv (fun x => c x ^ n) x = (n : 𝕜) * c x ^ (n - 1) * deriv c x :=\n  (hc.hasDerivAt.pow n).deriv\n"}
