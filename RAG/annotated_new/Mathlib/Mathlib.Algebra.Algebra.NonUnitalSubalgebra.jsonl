{"name":"NonUnitalSubalgebraClass.coeSubtype","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"S : Type u_1\nR : Type u_2\nA : Type u_3\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : SetLike S A\ninst✝ : NonUnitalSubsemiringClass S A\nhSR : SMulMemClass S R A\ns : S\n⊢ Eq (⇑(NonUnitalSubalgebraClass.subtype s)) Subtype.val","decl":"@[simp]\ntheorem coeSubtype : (subtype s : s → A) = ((↑) : s → A) :=\n  rfl\n\n"}
{"name":"NonUnitalSubalgebra.mk.inj","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\ntoNonUnitalSubsemiring✝ : NonUnitalSubsemiring A\nsmul_mem'✝ : ∀ (c : R) {x : A}, Membership.mem toNonUnitalSubsemiring✝.carrier x → Membership.mem toNonUnitalSubsemiring✝.carrier (HSMul.hSMul c x)\ntoNonUnitalSubsemiring : NonUnitalSubsemiring A\nsmul_mem' : ∀ (c : R) {x : A}, Membership.mem toNonUnitalSubsemiring.carrier x → Membership.mem toNonUnitalSubsemiring.carrier (HSMul.hSMul c x)\nx✝ : Eq { toNonUnitalSubsemiring := toNonUnitalSubsemiring✝, smul_mem' := smul_mem'✝ } { toNonUnitalSubsemiring := toNonUnitalSubsemiring, smul_mem' := smul_mem' }\n⊢ Eq toNonUnitalSubsemiring✝ toNonUnitalSubsemiring","decl":"/-- A non-unital subalgebra is a sub(semi)ring that is also a submodule. -/\nstructure NonUnitalSubalgebra (R : Type u) (A : Type v) [CommSemiring R]\n    [NonUnitalNonAssocSemiring A] [Module R A]\n    extends NonUnitalSubsemiring A, Submodule R A : Type v\n\n"}
{"name":"NonUnitalSubalgebra.smul_mem'","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\nself : NonUnitalSubalgebra R A\nc : R\nx : A\na✝ : Membership.mem self.carrier x\n⊢ Membership.mem self.carrier (HSMul.hSMul c x)","decl":"/-- A non-unital subalgebra is a sub(semi)ring that is also a submodule. -/\nstructure NonUnitalSubalgebra (R : Type u) (A : Type v) [CommSemiring R]\n    [NonUnitalNonAssocSemiring A] [Module R A]\n    extends NonUnitalSubsemiring A, Submodule R A : Type v\n\n"}
{"name":"NonUnitalSubalgebra.mk.injEq","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\ntoNonUnitalSubsemiring✝ : NonUnitalSubsemiring A\nsmul_mem'✝ : ∀ (c : R) {x : A}, Membership.mem toNonUnitalSubsemiring✝.carrier x → Membership.mem toNonUnitalSubsemiring✝.carrier (HSMul.hSMul c x)\ntoNonUnitalSubsemiring : NonUnitalSubsemiring A\nsmul_mem' : ∀ (c : R) {x : A}, Membership.mem toNonUnitalSubsemiring.carrier x → Membership.mem toNonUnitalSubsemiring.carrier (HSMul.hSMul c x)\n⊢ Eq (Eq { toNonUnitalSubsemiring := toNonUnitalSubsemiring✝, smul_mem' := smul_mem'✝ } { toNonUnitalSubsemiring := toNonUnitalSubsemiring, smul_mem' := smul_mem' }) (Eq toNonUnitalSubsemiring✝ toNonUnitalSubsemiring)","decl":"/-- A non-unital subalgebra is a sub(semi)ring that is also a submodule. -/\nstructure NonUnitalSubalgebra (R : Type u) (A : Type v) [CommSemiring R]\n    [NonUnitalNonAssocSemiring A] [Module R A]\n    extends NonUnitalSubsemiring A, Submodule R A : Type v\n\n"}
{"name":"NonUnitalSubalgebra.mk.sizeOf_spec","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : SizeOf R\ninst✝ : SizeOf A\ntoNonUnitalSubsemiring : NonUnitalSubsemiring A\nsmul_mem' : ∀ (c : R) {x : A}, Membership.mem toNonUnitalSubsemiring.carrier x → Membership.mem toNonUnitalSubsemiring.carrier (HSMul.hSMul c x)\n⊢ Eq (SizeOf.sizeOf { toNonUnitalSubsemiring := toNonUnitalSubsemiring, smul_mem' := smul_mem' }) (HAdd.hAdd 1 (SizeOf.sizeOf toNonUnitalSubsemiring))","decl":"/-- A non-unital subalgebra is a sub(semi)ring that is also a submodule. -/\nstructure NonUnitalSubalgebra (R : Type u) (A : Type v) [CommSemiring R]\n    [NonUnitalNonAssocSemiring A] [Module R A]\n    extends NonUnitalSubsemiring A, Submodule R A : Type v\n\n"}
{"name":"NonUnitalSubalgebra.instNonUnitalSubsemiringClass","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\n⊢ NonUnitalSubsemiringClass (NonUnitalSubalgebra R A) A","decl":"instance instNonUnitalSubsemiringClass :\n    NonUnitalSubsemiringClass (NonUnitalSubalgebra R A) A where\n  add_mem {s} := s.add_mem'\n  mul_mem {s} := s.mul_mem'\n  zero_mem {s} := s.zero_mem'\n\n"}
{"name":"NonUnitalSubalgebra.instSMulMemClass","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\n⊢ SMulMemClass (NonUnitalSubalgebra R A) R A","decl":"instance instSMulMemClass : SMulMemClass (NonUnitalSubalgebra R A) R A where\n  smul_mem := @fun s => s.smul_mem'\n\n"}
{"name":"NonUnitalSubalgebra.mem_carrier","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\ns : NonUnitalSubalgebra R A\nx : A\n⊢ Iff (Membership.mem s.carrier x) (Membership.mem s x)","decl":"theorem mem_carrier {s : NonUnitalSubalgebra R A} {x : A} : x ∈ s.carrier ↔ x ∈ s :=\n  Iff.rfl\n\n"}
{"name":"NonUnitalSubalgebra.ext","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\nS T : NonUnitalSubalgebra R A\nh : ∀ (x : A), Iff (Membership.mem S x) (Membership.mem T x)\n⊢ Eq S T","decl":"@[ext]\ntheorem ext {S T : NonUnitalSubalgebra R A} (h : ∀ x : A, x ∈ S ↔ x ∈ T) : S = T :=\n  SetLike.ext h\n\n"}
{"name":"NonUnitalSubalgebra.ext_iff","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\nS T : NonUnitalSubalgebra R A\n⊢ Iff (Eq S T) (∀ (x : A), Iff (Membership.mem S x) (Membership.mem T x))","decl":"@[ext]\ntheorem ext {S T : NonUnitalSubalgebra R A} (h : ∀ x : A, x ∈ S ↔ x ∈ T) : S = T :=\n  SetLike.ext h\n\n"}
{"name":"NonUnitalSubalgebra.mem_toNonUnitalSubsemiring","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\nS : NonUnitalSubalgebra R A\nx : A\n⊢ Iff (Membership.mem S.toNonUnitalSubsemiring x) (Membership.mem S x)","decl":"@[simp]\ntheorem mem_toNonUnitalSubsemiring {S : NonUnitalSubalgebra R A} {x} :\n    x ∈ S.toNonUnitalSubsemiring ↔ x ∈ S :=\n  Iff.rfl\n\n"}
{"name":"NonUnitalSubalgebra.coe_toNonUnitalSubsemiring","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\nS : NonUnitalSubalgebra R A\n⊢ Eq ↑S.toNonUnitalSubsemiring ↑S","decl":"@[simp]\ntheorem coe_toNonUnitalSubsemiring (S : NonUnitalSubalgebra R A) :\n    (↑S.toNonUnitalSubsemiring : Set A) = S :=\n  rfl\n\n"}
{"name":"NonUnitalSubalgebra.toNonUnitalSubsemiring_injective","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\n⊢ Function.Injective NonUnitalSubalgebra.toNonUnitalSubsemiring","decl":"theorem toNonUnitalSubsemiring_injective :\n    Function.Injective\n      (toNonUnitalSubsemiring : NonUnitalSubalgebra R A → NonUnitalSubsemiring A) :=\n  fun S T h =>\n  ext fun x => by rw [← mem_toNonUnitalSubsemiring, ← mem_toNonUnitalSubsemiring, h]\n\n"}
{"name":"NonUnitalSubalgebra.toNonUnitalSubsemiring_inj","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\nS U : NonUnitalSubalgebra R A\n⊢ Iff (Eq S.toNonUnitalSubsemiring U.toNonUnitalSubsemiring) (Eq S U)","decl":"theorem toNonUnitalSubsemiring_inj {S U : NonUnitalSubalgebra R A} :\n    S.toNonUnitalSubsemiring = U.toNonUnitalSubsemiring ↔ S = U :=\n  toNonUnitalSubsemiring_injective.eq_iff\n\n"}
{"name":"NonUnitalSubalgebra.mem_toSubmodule","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\nS : NonUnitalSubalgebra R A\nx : A\n⊢ Iff (Membership.mem S.toSubmodule x) (Membership.mem S x)","decl":"theorem mem_toSubmodule (S : NonUnitalSubalgebra R A) {x} : x ∈ S.toSubmodule ↔ x ∈ S :=\n  Iff.rfl\n\n"}
{"name":"NonUnitalSubalgebra.coe_toSubmodule","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\nS : NonUnitalSubalgebra R A\n⊢ Eq ↑S.toSubmodule ↑S","decl":"@[simp]\ntheorem coe_toSubmodule (S : NonUnitalSubalgebra R A) : (↑S.toSubmodule : Set A) = S :=\n  rfl\n\n"}
{"name":"NonUnitalSubalgebra.toSubmodule_injective","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\n⊢ Function.Injective NonUnitalSubalgebra.toSubmodule","decl":"theorem toSubmodule_injective :\n    Function.Injective (toSubmodule : NonUnitalSubalgebra R A → Submodule R A) := fun S T h =>\n  ext fun x => by rw [← mem_toSubmodule, ← mem_toSubmodule, h]\n\n"}
{"name":"NonUnitalSubalgebra.toSubmodule_inj","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\nS U : NonUnitalSubalgebra R A\n⊢ Iff (Eq S.toSubmodule U.toSubmodule) (Eq S U)","decl":"theorem toSubmodule_inj {S U : NonUnitalSubalgebra R A} : S.toSubmodule = U.toSubmodule ↔ S = U :=\n  toSubmodule_injective.eq_iff\n\n"}
{"name":"NonUnitalSubalgebra.coe_copy","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\nS : NonUnitalSubalgebra R A\ns : Set A\nhs : Eq s ↑S\n⊢ Eq (↑(S.copy s hs)) s","decl":"@[simp]\ntheorem coe_copy (S : NonUnitalSubalgebra R A) (s : Set A) (hs : s = ↑S) :\n    (S.copy s hs : Set A) = s :=\n  rfl\n\n"}
{"name":"NonUnitalSubalgebra.copy_eq","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\nS : NonUnitalSubalgebra R A\ns : Set A\nhs : Eq s ↑S\n⊢ Eq (S.copy s hs) S","decl":"theorem copy_eq (S : NonUnitalSubalgebra R A) (s : Set A) (hs : s = ↑S) : S.copy s hs = S :=\n  SetLike.coe_injective hs\n\n"}
{"name":"NonUnitalSubalgebra.instNonUnitalSubringClass","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommRing R\ninst✝¹ : NonUnitalNonAssocRing A\ninst✝ : Module R A\n⊢ NonUnitalSubringClass (NonUnitalSubalgebra R A) A","decl":"instance instNonUnitalSubringClass : NonUnitalSubringClass (NonUnitalSubalgebra R A) A :=\n  { NonUnitalSubalgebra.instNonUnitalSubsemiringClass with\n    neg_mem := @fun _ x hx => neg_one_smul R x ▸ SMulMemClass.smul_mem _ hx }\n\n"}
{"name":"NonUnitalSubalgebra.mem_toNonUnitalSubring","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommRing R\ninst✝¹ : NonUnitalNonAssocRing A\ninst✝ : Module R A\nS : NonUnitalSubalgebra R A\nx : A\n⊢ Iff (Membership.mem S.toNonUnitalSubring x) (Membership.mem S x)","decl":"@[simp]\ntheorem mem_toNonUnitalSubring {S : NonUnitalSubalgebra R A} {x} :\n    x ∈ S.toNonUnitalSubring ↔ x ∈ S :=\n  Iff.rfl\n\n"}
{"name":"NonUnitalSubalgebra.coe_toNonUnitalSubring","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommRing R\ninst✝¹ : NonUnitalNonAssocRing A\ninst✝ : Module R A\nS : NonUnitalSubalgebra R A\n⊢ Eq ↑S.toNonUnitalSubring ↑S","decl":"@[simp]\ntheorem coe_toNonUnitalSubring (S : NonUnitalSubalgebra R A) :\n    (↑S.toNonUnitalSubring : Set A) = S :=\n  rfl\n\n"}
{"name":"NonUnitalSubalgebra.toNonUnitalSubring_injective","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommRing R\ninst✝¹ : NonUnitalNonAssocRing A\ninst✝ : Module R A\n⊢ Function.Injective NonUnitalSubalgebra.toNonUnitalSubring","decl":"theorem toNonUnitalSubring_injective :\n    Function.Injective (toNonUnitalSubring : NonUnitalSubalgebra R A → NonUnitalSubring A) :=\n  fun S T h => ext fun x => by rw [← mem_toNonUnitalSubring, ← mem_toNonUnitalSubring, h]\n\n"}
{"name":"NonUnitalSubalgebra.toNonUnitalSubring_inj","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommRing R\ninst✝¹ : NonUnitalNonAssocRing A\ninst✝ : Module R A\nS U : NonUnitalSubalgebra R A\n⊢ Iff (Eq S.toNonUnitalSubring U.toNonUnitalSubring) (Eq S U)","decl":"theorem toNonUnitalSubring_inj {S U : NonUnitalSubalgebra R A} :\n    S.toNonUnitalSubring = U.toNonUnitalSubring ↔ S = U :=\n  toNonUnitalSubring_injective.eq_iff\n\n"}
{"name":"NonUnitalSubalgebra.instIsScalarTower'","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R' : Type u'\nR : Type u\nA : Type v\ninst✝⁶ : CommSemiring R\ninst✝⁵ : NonUnitalNonAssocSemiring A\ninst✝⁴ : Module R A\nS : NonUnitalSubalgebra R A\ninst✝³ : Semiring R'\ninst✝² : SMul R' R\ninst✝¹ : Module R' A\ninst✝ : IsScalarTower R' R A\n⊢ IsScalarTower R' R (Subtype fun x => Membership.mem S x)","decl":"instance instIsScalarTower' [Semiring R'] [SMul R' R] [Module R' A] [IsScalarTower R' R A] :\n    IsScalarTower R' R S :=\n  S.toSubmodule.isScalarTower\n\n"}
{"name":"NonUnitalSubalgebra.instIsScalarTowerSubtypeMem","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝³ : CommSemiring R\ninst✝² : NonUnitalNonAssocSemiring A\ninst✝¹ : Module R A\nS : NonUnitalSubalgebra R A\ninst✝ : IsScalarTower R A A\n⊢ IsScalarTower R (Subtype fun x => Membership.mem S x) (Subtype fun x => Membership.mem S x)","decl":"instance [IsScalarTower R A A] : IsScalarTower R S S where\n  smul_assoc r x y := Subtype.ext <| smul_assoc r (x : A) (y : A)\n\n"}
{"name":"NonUnitalSubalgebra.instSMulCommClass'","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R' : Type u'\nR : Type u\nA : Type v\ninst✝⁷ : CommSemiring R\ninst✝⁶ : NonUnitalNonAssocSemiring A\ninst✝⁵ : Module R A\nS : NonUnitalSubalgebra R A\ninst✝⁴ : Semiring R'\ninst✝³ : SMul R' R\ninst✝² : Module R' A\ninst✝¹ : IsScalarTower R' R A\ninst✝ : SMulCommClass R' R A\n⊢ SMulCommClass R' R (Subtype fun x => Membership.mem S x)","decl":"instance instSMulCommClass' [Semiring R'] [SMul R' R] [Module R' A] [IsScalarTower R' R A]\n    [SMulCommClass R' R A] : SMulCommClass R' R S where\n  smul_comm r' r s := Subtype.ext <| smul_comm r' r (s : A)\n\n"}
{"name":"NonUnitalSubalgebra.instSMulCommClass","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝³ : CommSemiring R\ninst✝² : NonUnitalNonAssocSemiring A\ninst✝¹ : Module R A\nS : NonUnitalSubalgebra R A\ninst✝ : SMulCommClass R A A\n⊢ SMulCommClass R (Subtype fun x => Membership.mem S x) (Subtype fun x => Membership.mem S x)","decl":"instance instSMulCommClass [SMulCommClass R A A] : SMulCommClass R S S where\n  smul_comm r x y := Subtype.ext <| smul_comm r (x : A) (y : A)\n\n"}
{"name":"NonUnitalSubalgebra.noZeroSMulDivisors_bot","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝³ : CommSemiring R\ninst✝² : NonUnitalNonAssocSemiring A\ninst✝¹ : Module R A\nS : NonUnitalSubalgebra R A\ninst✝ : NoZeroSMulDivisors R A\n⊢ NoZeroSMulDivisors R (Subtype fun x => Membership.mem S x)","decl":"instance noZeroSMulDivisors_bot [NoZeroSMulDivisors R A] : NoZeroSMulDivisors R S :=\n  ⟨fun {c x} h =>\n    have : c = 0 ∨ (x : A) = 0 := eq_zero_or_eq_zero_of_smul_eq_zero (congr_arg ((↑) : S → A) h)\n    this.imp_right (@Subtype.ext_iff _ _ x 0).mpr⟩\n\n"}
{"name":"NonUnitalSubalgebra.coe_add","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\nS : NonUnitalSubalgebra R A\nx y : Subtype fun x => Membership.mem S x\n⊢ Eq (↑(HAdd.hAdd x y)) (HAdd.hAdd ↑x ↑y)","decl":"protected theorem coe_add (x y : S) : (↑(x + y) : A) = ↑x + ↑y :=\n  rfl\n\n"}
{"name":"NonUnitalSubalgebra.coe_mul","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\nS : NonUnitalSubalgebra R A\nx y : Subtype fun x => Membership.mem S x\n⊢ Eq (↑(HMul.hMul x y)) (HMul.hMul ↑x ↑y)","decl":"protected theorem coe_mul (x y : S) : (↑(x * y) : A) = ↑x * ↑y :=\n  rfl\n\n"}
{"name":"NonUnitalSubalgebra.coe_zero","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\nS : NonUnitalSubalgebra R A\n⊢ Eq (↑0) 0","decl":"protected theorem coe_zero : ((0 : S) : A) = 0 :=\n  rfl\n\n"}
{"name":"NonUnitalSubalgebra.coe_neg","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommRing R\ninst✝¹ : Ring A\ninst✝ : Algebra R A\nS : NonUnitalSubalgebra R A\nx : Subtype fun x => Membership.mem S x\n⊢ Eq (↑(Neg.neg x)) (Neg.neg ↑x)","decl":"protected theorem coe_neg {R : Type u} {A : Type v} [CommRing R] [Ring A] [Algebra R A]\n    {S : NonUnitalSubalgebra R A} (x : S) : (↑(-x) : A) = -↑x :=\n  rfl\n\n"}
{"name":"NonUnitalSubalgebra.coe_sub","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommRing R\ninst✝¹ : Ring A\ninst✝ : Algebra R A\nS : NonUnitalSubalgebra R A\nx y : Subtype fun x => Membership.mem S x\n⊢ Eq (↑(HSub.hSub x y)) (HSub.hSub ↑x ↑y)","decl":"protected theorem coe_sub {R : Type u} {A : Type v} [CommRing R] [Ring A] [Algebra R A]\n    {S : NonUnitalSubalgebra R A} (x y : S) : (↑(x - y) : A) = ↑x - ↑y :=\n  rfl\n\n"}
{"name":"NonUnitalSubalgebra.coe_smul","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R' : Type u'\nR : Type u\nA : Type v\ninst✝⁶ : CommSemiring R\ninst✝⁵ : NonUnitalNonAssocSemiring A\ninst✝⁴ : Module R A\nS : NonUnitalSubalgebra R A\ninst✝³ : Semiring R'\ninst✝² : SMul R' R\ninst✝¹ : Module R' A\ninst✝ : IsScalarTower R' R A\nr : R'\nx : Subtype fun x => Membership.mem S x\n⊢ Eq (↑(HSMul.hSMul r x)) (HSMul.hSMul r ↑x)","decl":"@[simp, norm_cast]\ntheorem coe_smul [Semiring R'] [SMul R' R] [Module R' A] [IsScalarTower R' R A] (r : R') (x : S) :\n    ↑(r • x) = r • (x : A) :=\n  rfl\n\n"}
{"name":"NonUnitalSubalgebra.coe_eq_zero","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\nS : NonUnitalSubalgebra R A\nx : Subtype fun x => Membership.mem S x\n⊢ Iff (Eq (↑x) 0) (Eq x 0)","decl":"protected theorem coe_eq_zero {x : S} : (x : A) = 0 ↔ x = 0 :=\n  ZeroMemClass.coe_eq_zero\n\n"}
{"name":"NonUnitalSubalgebra.toNonUnitalSubsemiring_subtype","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\nS : NonUnitalSubalgebra R A\n⊢ Eq (NonUnitalSubsemiringClass.subtype S) ↑(NonUnitalSubalgebraClass.subtype S)","decl":"@[simp]\ntheorem toNonUnitalSubsemiring_subtype :\n    NonUnitalSubsemiringClass.subtype S = NonUnitalSubalgebraClass.subtype (R := R) S :=\n  rfl\n\n"}
{"name":"NonUnitalSubalgebra.toSubring_subtype","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝² : CommRing R\ninst✝¹ : Ring A\ninst✝ : Algebra R A\nS : NonUnitalSubalgebra R A\n⊢ Eq (NonUnitalSubringClass.subtype S) ↑(NonUnitalSubalgebraClass.subtype S)","decl":"@[simp]\ntheorem toSubring_subtype {R A : Type*} [CommRing R] [Ring A] [Algebra R A]\n    (S : NonUnitalSubalgebra R A) :\n    NonUnitalSubringClass.subtype S = NonUnitalSubalgebraClass.subtype (R := R) S :=\n  rfl\n\n"}
{"name":"NonUnitalSubalgebra.map_mono","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"F : Type v'\nR : Type u\nA : Type v\nB : Type w\ninst✝⁶ : CommSemiring R\ninst✝⁵ : NonUnitalNonAssocSemiring A\ninst✝⁴ : NonUnitalNonAssocSemiring B\ninst✝³ : Module R A\ninst✝² : Module R B\ninst✝¹ : FunLike F A B\ninst✝ : NonUnitalAlgHomClass F R A B\nS₁ S₂ : NonUnitalSubalgebra R A\nf : F\na✝ : LE.le S₁ S₂\n⊢ LE.le (NonUnitalSubalgebra.map f S₁) (NonUnitalSubalgebra.map f S₂)","decl":"theorem map_mono {S₁ S₂ : NonUnitalSubalgebra R A} {f : F} :\n    S₁ ≤ S₂ → (map f S₁ : NonUnitalSubalgebra R B) ≤ map f S₂ :=\n  Set.image_subset f\n\n"}
{"name":"NonUnitalSubalgebra.map_injective","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"F : Type v'\nR : Type u\nA : Type v\nB : Type w\ninst✝⁶ : CommSemiring R\ninst✝⁵ : NonUnitalNonAssocSemiring A\ninst✝⁴ : NonUnitalNonAssocSemiring B\ninst✝³ : Module R A\ninst✝² : Module R B\ninst✝¹ : FunLike F A B\ninst✝ : NonUnitalAlgHomClass F R A B\nf : F\nhf : Function.Injective ⇑f\n⊢ Function.Injective (NonUnitalSubalgebra.map f)","decl":"theorem map_injective {f : F} (hf : Function.Injective f) :\n    Function.Injective (map f : NonUnitalSubalgebra R A → NonUnitalSubalgebra R B) :=\n  fun _S₁ _S₂ ih =>\n  ext <| Set.ext_iff.1 <| Set.image_injective.2 hf <| Set.ext <| SetLike.ext_iff.mp ih\n\n"}
{"name":"NonUnitalSubalgebra.map_id","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\nS : NonUnitalSubalgebra R A\n⊢ Eq (NonUnitalSubalgebra.map (NonUnitalAlgHom.id R A) S) S","decl":"@[simp]\ntheorem map_id (S : NonUnitalSubalgebra R A) : map (NonUnitalAlgHom.id R A) S = S :=\n  SetLike.coe_injective <| Set.image_id _\n\n"}
{"name":"NonUnitalSubalgebra.map_map","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\nB : Type w\nC : Type w'\ninst✝⁶ : CommSemiring R\ninst✝⁵ : NonUnitalNonAssocSemiring A\ninst✝⁴ : NonUnitalNonAssocSemiring B\ninst✝³ : NonUnitalNonAssocSemiring C\ninst✝² : Module R A\ninst✝¹ : Module R B\ninst✝ : Module R C\nS : NonUnitalSubalgebra R A\ng : NonUnitalAlgHom (MonoidHom.id R) B C\nf : NonUnitalAlgHom (MonoidHom.id R) A B\n⊢ Eq (NonUnitalSubalgebra.map g (NonUnitalSubalgebra.map f S)) (NonUnitalSubalgebra.map (g.comp f) S)","decl":"theorem map_map (S : NonUnitalSubalgebra R A) (g : B →ₙₐ[R] C) (f : A →ₙₐ[R] B) :\n    (S.map f).map g = S.map (g.comp f) :=\n  SetLike.coe_injective <| Set.image_image _ _ _\n\n"}
{"name":"NonUnitalSubalgebra.mem_map","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"F : Type v'\nR : Type u\nA : Type v\nB : Type w\ninst✝⁶ : CommSemiring R\ninst✝⁵ : NonUnitalNonAssocSemiring A\ninst✝⁴ : NonUnitalNonAssocSemiring B\ninst✝³ : Module R A\ninst✝² : Module R B\ninst✝¹ : FunLike F A B\ninst✝ : NonUnitalAlgHomClass F R A B\nS : NonUnitalSubalgebra R A\nf : F\ny : B\n⊢ Iff (Membership.mem (NonUnitalSubalgebra.map f S) y) (Exists fun x => And (Membership.mem S x) (Eq (f x) y))","decl":"@[simp]\ntheorem mem_map {S : NonUnitalSubalgebra R A} {f : F} {y : B} : y ∈ map f S ↔ ∃ x ∈ S, f x = y :=\n  NonUnitalSubsemiring.mem_map\n\n"}
{"name":"NonUnitalSubalgebra.map_toSubmodule","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"F : Type v'\nR : Type u\nA : Type v\nB : Type w\ninst✝⁶ : CommSemiring R\ninst✝⁵ : NonUnitalNonAssocSemiring A\ninst✝⁴ : NonUnitalNonAssocSemiring B\ninst✝³ : Module R A\ninst✝² : Module R B\ninst✝¹ : FunLike F A B\ninst✝ : NonUnitalAlgHomClass F R A B\nS : NonUnitalSubalgebra R A\nf : F\n⊢ Eq (NonUnitalSubalgebra.map f S).toSubmodule (Submodule.map (LinearMapClass.linearMap f) S.toSubmodule)","decl":"theorem map_toSubmodule {S : NonUnitalSubalgebra R A} {f : F} :\n    -- TODO: introduce a better coercion from `NonUnitalAlgHomClass` to `LinearMap`\n    (map f S).toSubmodule = Submodule.map (LinearMapClass.linearMap f) S.toSubmodule :=\n  SetLike.coe_injective rfl\n\n"}
{"name":"NonUnitalSubalgebra.map_toNonUnitalSubsemiring","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"F : Type v'\nR : Type u\nA : Type v\nB : Type w\ninst✝⁶ : CommSemiring R\ninst✝⁵ : NonUnitalNonAssocSemiring A\ninst✝⁴ : NonUnitalNonAssocSemiring B\ninst✝³ : Module R A\ninst✝² : Module R B\ninst✝¹ : FunLike F A B\ninst✝ : NonUnitalAlgHomClass F R A B\nS : NonUnitalSubalgebra R A\nf : F\n⊢ Eq (NonUnitalSubalgebra.map f S).toNonUnitalSubsemiring (NonUnitalSubsemiring.map (↑f) S.toNonUnitalSubsemiring)","decl":"theorem map_toNonUnitalSubsemiring {S : NonUnitalSubalgebra R A} {f : F} :\n    (map f S).toNonUnitalSubsemiring = S.toNonUnitalSubsemiring.map (f : A →ₙ+* B) :=\n  SetLike.coe_injective rfl\n\n"}
{"name":"NonUnitalSubalgebra.coe_map","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"F : Type v'\nR : Type u\nA : Type v\nB : Type w\ninst✝⁶ : CommSemiring R\ninst✝⁵ : NonUnitalNonAssocSemiring A\ninst✝⁴ : NonUnitalNonAssocSemiring B\ninst✝³ : Module R A\ninst✝² : Module R B\ninst✝¹ : FunLike F A B\ninst✝ : NonUnitalAlgHomClass F R A B\nS : NonUnitalSubalgebra R A\nf : F\n⊢ Eq (↑(NonUnitalSubalgebra.map f S)) (Set.image ⇑f ↑S)","decl":"@[simp]\ntheorem coe_map (S : NonUnitalSubalgebra R A) (f : F) : (map f S : Set B) = f '' S :=\n  rfl\n\n"}
{"name":"NonUnitalSubalgebra.map_le","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"F : Type v'\nR : Type u\nA : Type v\nB : Type w\ninst✝⁶ : CommSemiring R\ninst✝⁵ : NonUnitalNonAssocSemiring A\ninst✝⁴ : NonUnitalNonAssocSemiring B\ninst✝³ : Module R A\ninst✝² : Module R B\ninst✝¹ : FunLike F A B\ninst✝ : NonUnitalAlgHomClass F R A B\nS : NonUnitalSubalgebra R A\nf : F\nU : NonUnitalSubalgebra R B\n⊢ Iff (LE.le (NonUnitalSubalgebra.map f S) U) (LE.le S (NonUnitalSubalgebra.comap f U))","decl":"theorem map_le {S : NonUnitalSubalgebra R A} {f : F} {U : NonUnitalSubalgebra R B} :\n    map f S ≤ U ↔ S ≤ comap f U :=\n  Set.image_subset_iff\n\n"}
{"name":"NonUnitalSubalgebra.gc_map_comap","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"F : Type v'\nR : Type u\nA : Type v\nB : Type w\ninst✝⁶ : CommSemiring R\ninst✝⁵ : NonUnitalNonAssocSemiring A\ninst✝⁴ : NonUnitalNonAssocSemiring B\ninst✝³ : Module R A\ninst✝² : Module R B\ninst✝¹ : FunLike F A B\ninst✝ : NonUnitalAlgHomClass F R A B\nf : F\n⊢ GaloisConnection (NonUnitalSubalgebra.map f) (NonUnitalSubalgebra.comap f)","decl":"theorem gc_map_comap (f : F) :\n    GaloisConnection (map f : NonUnitalSubalgebra R A → NonUnitalSubalgebra R B) (comap f) :=\n  fun _ _ => map_le\n\n"}
{"name":"NonUnitalSubalgebra.mem_comap","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"F : Type v'\nR : Type u\nA : Type v\nB : Type w\ninst✝⁶ : CommSemiring R\ninst✝⁵ : NonUnitalNonAssocSemiring A\ninst✝⁴ : NonUnitalNonAssocSemiring B\ninst✝³ : Module R A\ninst✝² : Module R B\ninst✝¹ : FunLike F A B\ninst✝ : NonUnitalAlgHomClass F R A B\nS : NonUnitalSubalgebra R B\nf : F\nx : A\n⊢ Iff (Membership.mem (NonUnitalSubalgebra.comap f S) x) (Membership.mem S (f x))","decl":"@[simp]\ntheorem mem_comap (S : NonUnitalSubalgebra R B) (f : F) (x : A) : x ∈ comap f S ↔ f x ∈ S :=\n  Iff.rfl\n\n"}
{"name":"NonUnitalSubalgebra.coe_comap","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"F : Type v'\nR : Type u\nA : Type v\nB : Type w\ninst✝⁶ : CommSemiring R\ninst✝⁵ : NonUnitalNonAssocSemiring A\ninst✝⁴ : NonUnitalNonAssocSemiring B\ninst✝³ : Module R A\ninst✝² : Module R B\ninst✝¹ : FunLike F A B\ninst✝ : NonUnitalAlgHomClass F R A B\nS : NonUnitalSubalgebra R B\nf : F\n⊢ Eq (↑(NonUnitalSubalgebra.comap f S)) (Set.preimage ⇑f ↑S)","decl":"@[simp, norm_cast]\ntheorem coe_comap (S : NonUnitalSubalgebra R B) (f : F) : (comap f S : Set A) = f ⁻¹' (S : Set B) :=\n  rfl\n\n"}
{"name":"NonUnitalSubalgebra.noZeroDivisors","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝³ : CommSemiring R\ninst✝² : NonUnitalSemiring A\ninst✝¹ : NoZeroDivisors A\ninst✝ : Module R A\nS : NonUnitalSubalgebra R A\n⊢ NoZeroDivisors (Subtype fun x => Membership.mem S x)","decl":"instance noZeroDivisors {R A : Type*} [CommSemiring R] [NonUnitalSemiring A] [NoZeroDivisors A]\n    [Module R A] (S : NonUnitalSubalgebra R A) : NoZeroDivisors S :=\n  NonUnitalSubsemiringClass.noZeroDivisors S\n\n"}
{"name":"Submodule.mem_toNonUnitalSubalgebra","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\np : Submodule R A\nh_mul : ∀ (x y : A), Membership.mem p x → Membership.mem p y → Membership.mem p (HMul.hMul x y)\nx : A\n⊢ Iff (Membership.mem (p.toNonUnitalSubalgebra h_mul) x) (Membership.mem p x)","decl":"@[simp]\ntheorem mem_toNonUnitalSubalgebra {p : Submodule R A} {h_mul} {x} :\n    x ∈ p.toNonUnitalSubalgebra h_mul ↔ x ∈ p :=\n  Iff.rfl\n\n"}
{"name":"Submodule.coe_toNonUnitalSubalgebra","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\np : Submodule R A\nh_mul : ∀ (x y : A), Membership.mem p x → Membership.mem p y → Membership.mem p (HMul.hMul x y)\n⊢ Eq ↑(p.toNonUnitalSubalgebra h_mul) ↑p","decl":"@[simp]\ntheorem coe_toNonUnitalSubalgebra (p : Submodule R A) (h_mul) :\n    (p.toNonUnitalSubalgebra h_mul : Set A) = p :=\n  rfl\n\n"}
{"name":"Submodule.toNonUnitalSubalgebra_mk","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\np : Submodule R A\nhmul : ∀ (x y : A), Membership.mem p x → Membership.mem p y → Membership.mem p (HMul.hMul x y)\n⊢ Eq (p.toNonUnitalSubalgebra hmul) { carrier := ↑p, add_mem' := ⋯, zero_mem' := ⋯, mul_mem' := ⋯, smul_mem' := ⋯ }","decl":"theorem toNonUnitalSubalgebra_mk (p : Submodule R A) hmul :\n    p.toNonUnitalSubalgebra hmul =\n      NonUnitalSubalgebra.mk ⟨⟨⟨p, p.add_mem⟩, p.zero_mem⟩, hmul _ _⟩ p.smul_mem' :=\n  rfl\n\n"}
{"name":"Submodule.toNonUnitalSubalgebra_toSubmodule","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\np : Submodule R A\nh_mul : ∀ (x y : A), Membership.mem p x → Membership.mem p y → Membership.mem p (HMul.hMul x y)\n⊢ Eq (p.toNonUnitalSubalgebra h_mul).toSubmodule p","decl":"@[simp]\ntheorem toNonUnitalSubalgebra_toSubmodule (p : Submodule R A) (h_mul) :\n    (p.toNonUnitalSubalgebra h_mul).toSubmodule = p :=\n  SetLike.coe_injective rfl\n\n"}
{"name":"NonUnitalSubalgebra.toSubmodule_toNonUnitalSubalgebra","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\nS : NonUnitalSubalgebra R A\n⊢ Eq (S.toSubmodule.toNonUnitalSubalgebra ⋯) S","decl":"@[simp]\ntheorem _root_.NonUnitalSubalgebra.toSubmodule_toNonUnitalSubalgebra (S : NonUnitalSubalgebra R A) :\n    (S.toSubmodule.toNonUnitalSubalgebra fun _ _ => mul_mem (s := S)) = S :=\n  SetLike.coe_injective rfl\n\n"}
{"name":"NonUnitalAlgHom.mem_range","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"F : Type v'\nR : Type u\nA : Type v\nB : Type w\ninst✝⁶ : CommSemiring R\ninst✝⁵ : NonUnitalNonAssocSemiring A\ninst✝⁴ : Module R A\ninst✝³ : NonUnitalNonAssocSemiring B\ninst✝² : Module R B\ninst✝¹ : FunLike F A B\ninst✝ : NonUnitalAlgHomClass F R A B\nφ : F\ny : B\n⊢ Iff (Membership.mem (NonUnitalAlgHom.range φ) y) (Exists fun x => Eq (φ x) y)","decl":"@[simp]\ntheorem mem_range (φ : F) {y : B} :\n    y ∈ (NonUnitalAlgHom.range φ : NonUnitalSubalgebra R B) ↔ ∃ x : A, φ x = y :=\n  NonUnitalRingHom.mem_srange\n\n"}
{"name":"NonUnitalAlgHom.mem_range_self","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"F : Type v'\nR : Type u\nA : Type v\nB : Type w\ninst✝⁶ : CommSemiring R\ninst✝⁵ : NonUnitalNonAssocSemiring A\ninst✝⁴ : Module R A\ninst✝³ : NonUnitalNonAssocSemiring B\ninst✝² : Module R B\ninst✝¹ : FunLike F A B\ninst✝ : NonUnitalAlgHomClass F R A B\nφ : F\nx : A\n⊢ Membership.mem (NonUnitalAlgHom.range φ) (φ x)","decl":"theorem mem_range_self (φ : F) (x : A) :\n    φ x ∈ (NonUnitalAlgHom.range φ : NonUnitalSubalgebra R B) :=\n  (NonUnitalAlgHom.mem_range φ).2 ⟨x, rfl⟩\n\n"}
{"name":"NonUnitalAlgHom.coe_range","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"F : Type v'\nR : Type u\nA : Type v\nB : Type w\ninst✝⁶ : CommSemiring R\ninst✝⁵ : NonUnitalNonAssocSemiring A\ninst✝⁴ : Module R A\ninst✝³ : NonUnitalNonAssocSemiring B\ninst✝² : Module R B\ninst✝¹ : FunLike F A B\ninst✝ : NonUnitalAlgHomClass F R A B\nφ : F\n⊢ Eq (↑(NonUnitalAlgHom.range φ)) (Set.range ⇑φ)","decl":"@[simp]\ntheorem coe_range (φ : F) :\n    ((NonUnitalAlgHom.range φ : NonUnitalSubalgebra R B) : Set B) = Set.range (φ : A → B) := by\n  ext\n  rw [SetLike.mem_coe, mem_range]\n  rfl\n\n"}
{"name":"NonUnitalAlgHom.range_comp","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\nB : Type w\nC : Type w'\ninst✝⁶ : CommSemiring R\ninst✝⁵ : NonUnitalNonAssocSemiring A\ninst✝⁴ : Module R A\ninst✝³ : NonUnitalNonAssocSemiring B\ninst✝² : Module R B\ninst✝¹ : NonUnitalNonAssocSemiring C\ninst✝ : Module R C\nf : NonUnitalAlgHom (MonoidHom.id R) A B\ng : NonUnitalAlgHom (MonoidHom.id R) B C\n⊢ Eq (NonUnitalAlgHom.range (g.comp f)) (NonUnitalSubalgebra.map g (NonUnitalAlgHom.range f))","decl":"theorem range_comp (f : A →ₙₐ[R] B) (g : B →ₙₐ[R] C) :\n    NonUnitalAlgHom.range (g.comp f) = (NonUnitalAlgHom.range f).map g :=\n  SetLike.coe_injective (Set.range_comp g f)\n\n"}
{"name":"NonUnitalAlgHom.range_comp_le_range","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\nB : Type w\nC : Type w'\ninst✝⁶ : CommSemiring R\ninst✝⁵ : NonUnitalNonAssocSemiring A\ninst✝⁴ : Module R A\ninst✝³ : NonUnitalNonAssocSemiring B\ninst✝² : Module R B\ninst✝¹ : NonUnitalNonAssocSemiring C\ninst✝ : Module R C\nf : NonUnitalAlgHom (MonoidHom.id R) A B\ng : NonUnitalAlgHom (MonoidHom.id R) B C\n⊢ LE.le (NonUnitalAlgHom.range (g.comp f)) (NonUnitalAlgHom.range g)","decl":"theorem range_comp_le_range (f : A →ₙₐ[R] B) (g : B →ₙₐ[R] C) :\n    NonUnitalAlgHom.range (g.comp f) ≤ NonUnitalAlgHom.range g :=\n  SetLike.coe_mono (Set.range_comp_subset_range f g)\n\n"}
{"name":"NonUnitalAlgHom.subtype_comp_codRestrict","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"F : Type v'\nR : Type u\nA : Type v\nB : Type w\ninst✝⁶ : CommSemiring R\ninst✝⁵ : NonUnitalNonAssocSemiring A\ninst✝⁴ : Module R A\ninst✝³ : NonUnitalNonAssocSemiring B\ninst✝² : Module R B\ninst✝¹ : FunLike F A B\ninst✝ : NonUnitalAlgHomClass F R A B\nf : F\nS : NonUnitalSubalgebra R B\nhf : ∀ (x : A), Membership.mem S (f x)\n⊢ Eq ((NonUnitalSubalgebraClass.subtype S).comp (NonUnitalAlgHom.codRestrict f S hf)) (NonUnitalAlgHomClass.toNonUnitalAlgHom f)","decl":"@[simp]\ntheorem subtype_comp_codRestrict (f : F) (S : NonUnitalSubalgebra R B) (hf : ∀ x : A, f x ∈ S) :\n    (NonUnitalSubalgebraClass.subtype S).comp (NonUnitalAlgHom.codRestrict f S hf) = f :=\n  rfl\n\n"}
{"name":"NonUnitalAlgHom.coe_codRestrict","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"F : Type v'\nR : Type u\nA : Type v\nB : Type w\ninst✝⁶ : CommSemiring R\ninst✝⁵ : NonUnitalNonAssocSemiring A\ninst✝⁴ : Module R A\ninst✝³ : NonUnitalNonAssocSemiring B\ninst✝² : Module R B\ninst✝¹ : FunLike F A B\ninst✝ : NonUnitalAlgHomClass F R A B\nf : F\nS : NonUnitalSubalgebra R B\nhf : ∀ (x : A), Membership.mem S (f x)\nx : A\n⊢ Eq (↑((NonUnitalAlgHom.codRestrict f S hf) x)) (f x)","decl":"@[simp]\ntheorem coe_codRestrict (f : F) (S : NonUnitalSubalgebra R B) (hf : ∀ x, f x ∈ S) (x : A) :\n    ↑(NonUnitalAlgHom.codRestrict f S hf x) = f x :=\n  rfl\n\n"}
{"name":"NonUnitalAlgHom.injective_codRestrict","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"F : Type v'\nR : Type u\nA : Type v\nB : Type w\ninst✝⁶ : CommSemiring R\ninst✝⁵ : NonUnitalNonAssocSemiring A\ninst✝⁴ : Module R A\ninst✝³ : NonUnitalNonAssocSemiring B\ninst✝² : Module R B\ninst✝¹ : FunLike F A B\ninst✝ : NonUnitalAlgHomClass F R A B\nf : F\nS : NonUnitalSubalgebra R B\nhf : ∀ (x : A), Membership.mem S (f x)\n⊢ Iff (Function.Injective ⇑(NonUnitalAlgHom.codRestrict f S hf)) (Function.Injective ⇑f)","decl":"theorem injective_codRestrict (f : F) (S : NonUnitalSubalgebra R B) (hf : ∀ x : A, f x ∈ S) :\n    Function.Injective (NonUnitalAlgHom.codRestrict f S hf) ↔ Function.Injective f :=\n  ⟨fun H _x _y hxy => H <| Subtype.eq hxy, fun H _x _y hxy => H (congr_arg Subtype.val hxy :)⟩\n\n"}
{"name":"NonUnitalAlgebra.span_eq_toSubmodule","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\ns : NonUnitalSubalgebra R A\n⊢ Eq (Submodule.span R ↑s) s.toSubmodule","decl":"@[simp]\nlemma span_eq_toSubmodule (s : NonUnitalSubalgebra R A) :\n    Submodule.span R (s : Set A) = s.toSubmodule := by\n  simp [SetLike.ext'_iff, Submodule.coe_span_eq_self]\n\n"}
{"name":"NonUnitalAlgebra.adjoin_toSubmodule","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ns : Set A\n⊢ Eq (NonUnitalAlgebra.adjoin R s).toSubmodule (Submodule.span R ↑(NonUnitalSubsemiring.closure s))","decl":"theorem adjoin_toSubmodule (s : Set A) :\n    (adjoin R s).toSubmodule = Submodule.span R (NonUnitalSubsemiring.closure s : Set A) :=\n  rfl\n\n"}
{"name":"NonUnitalAlgebra.subset_adjoin","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ns : Set A\n⊢ HasSubset.Subset s ↑(NonUnitalAlgebra.adjoin R s)","decl":"@[aesop safe 20 apply (rule_sets := [SetLike])]\ntheorem subset_adjoin {s : Set A} : s ⊆ adjoin R s :=\n  NonUnitalSubsemiring.subset_closure.trans Submodule.subset_span\n\n"}
{"name":"NonUnitalAlgebra.self_mem_adjoin_singleton","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nx : A\n⊢ Membership.mem (NonUnitalAlgebra.adjoin R (Singleton.singleton x)) x","decl":"theorem self_mem_adjoin_singleton (x : A) : x ∈ adjoin R ({x} : Set A) :=\n  NonUnitalAlgebra.subset_adjoin R (Set.mem_singleton x)\n\n"}
{"name":"NonUnitalAlgebra.gc","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\n⊢ GaloisConnection (NonUnitalAlgebra.adjoin R) SetLike.coe","decl":"protected theorem gc : GaloisConnection (adjoin R : Set A → NonUnitalSubalgebra R A) (↑) :=\n  fun s S =>\n  ⟨fun H => (NonUnitalSubsemiring.subset_closure.trans Submodule.subset_span).trans H,\n    fun H => show Submodule.span R _ ≤ S.toSubmodule from Submodule.span_le.mpr <|\n      show NonUnitalSubsemiring.closure s ≤ S.toNonUnitalSubsemiring from\n        NonUnitalSubsemiring.closure_le.2 H⟩\n\n"}
{"name":"NonUnitalAlgebra.adjoin_le","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nS : NonUnitalSubalgebra R A\ns : Set A\nhs : HasSubset.Subset s ↑S\n⊢ LE.le (NonUnitalAlgebra.adjoin R s) S","decl":"theorem adjoin_le {S : NonUnitalSubalgebra R A} {s : Set A} (hs : s ⊆ S) : adjoin R s ≤ S :=\n  NonUnitalAlgebra.gc.l_le hs\n\n"}
{"name":"NonUnitalAlgebra.adjoin_le_iff","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nS : NonUnitalSubalgebra R A\ns : Set A\n⊢ Iff (LE.le (NonUnitalAlgebra.adjoin R s) S) (HasSubset.Subset s ↑S)","decl":"theorem adjoin_le_iff {S : NonUnitalSubalgebra R A} {s : Set A} : adjoin R s ≤ S ↔ s ⊆ S :=\n  NonUnitalAlgebra.gc _ _\n\n"}
{"name":"NonUnitalAlgebra.adjoin_union","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ns t : Set A\n⊢ Eq (NonUnitalAlgebra.adjoin R (Union.union s t)) (Max.max (NonUnitalAlgebra.adjoin R s) (NonUnitalAlgebra.adjoin R t))","decl":"theorem adjoin_union (s t : Set A) : adjoin R (s ∪ t) = adjoin R s ⊔ adjoin R t :=\n  (NonUnitalAlgebra.gc : GaloisConnection _ ((↑) : NonUnitalSubalgebra R A → Set A)).l_sup\n\n"}
{"name":"NonUnitalAlgebra.adjoin_eq","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ns : NonUnitalSubalgebra R A\n⊢ Eq (NonUnitalAlgebra.adjoin R ↑s) s","decl":"lemma adjoin_eq (s : NonUnitalSubalgebra R A) : adjoin R (s : Set A) = s :=\n  le_antisymm (adjoin_le le_rfl) (subset_adjoin R)\n\n"}
{"name":"NonUnitalAlgebra.adjoin_induction","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ns : Set A\np : (x : A) → Membership.mem (NonUnitalAlgebra.adjoin R s) x → Prop\nmem : ∀ (x : A) (hx : Membership.mem s x), p x ⋯\nadd : ∀ (x y : A) (hx : Membership.mem (NonUnitalAlgebra.adjoin R s) x) (hy : Membership.mem (NonUnitalAlgebra.adjoin R s) y), p x hx → p y hy → p (HAdd.hAdd x y) ⋯\nzero : p 0 ⋯\nmul : ∀ (x y : A) (hx : Membership.mem (NonUnitalAlgebra.adjoin R s) x) (hy : Membership.mem (NonUnitalAlgebra.adjoin R s) y), p x hx → p y hy → p (HMul.hMul x y) ⋯\nsmul : ∀ (r : R) (x : A) (hx : Membership.mem (NonUnitalAlgebra.adjoin R s) x), p x hx → p (HSMul.hSMul r x) ⋯\nx : A\nhx : Membership.mem (NonUnitalAlgebra.adjoin R s) x\n⊢ p x hx","decl":"/-- If some predicate holds for all `x ∈ (s : Set A)` and this predicate is closed under the\n`algebraMap`, addition, multiplication and star operations, then it holds for `a ∈ adjoin R s`. -/\n@[elab_as_elim]\ntheorem adjoin_induction {s : Set A} {p : (x : A) → x ∈ adjoin R s → Prop}\n    (mem : ∀ (x) (hx : x ∈ s), p x (subset_adjoin R hx))\n    (add : ∀ x y hx hy, p x hx → p y hy → p (x + y) (add_mem hx hy)) (zero : p 0 (zero_mem _))\n    (mul : ∀ x y hx hy, p x hx → p y hy → p (x * y) (mul_mem hx hy))\n    (smul : ∀ r x hx, p x hx → p (r • x) (SMulMemClass.smul_mem r hx))\n    {x} (hx : x ∈ adjoin R s) : p x hx :=\n  let S : NonUnitalSubalgebra R A :=\n    { carrier := { x | ∃ hx, p x hx }\n      mul_mem' := (Exists.elim · fun _ ha ↦ (Exists.elim · fun _ hb ↦ ⟨_, mul _ _ _ _ ha hb⟩))\n      add_mem' := (Exists.elim · fun _ ha ↦ (Exists.elim · fun _ hb ↦ ⟨_, add _ _ _ _ ha hb⟩))\n      smul_mem' := fun r ↦ (Exists.elim · fun _ hb ↦ ⟨_, smul r _ _ hb⟩)\n      zero_mem' := ⟨_, zero⟩ }\n  adjoin_le (S := S) (fun y hy ↦ ⟨subset_adjoin R hy, mem y hy⟩) hx |>.elim fun _ ↦ id\n\n"}
{"name":"NonUnitalAlgebra.adjoin_induction'","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ns : Set A\np : (x : A) → Membership.mem (NonUnitalAlgebra.adjoin R s) x → Prop\nmem : ∀ (x : A) (hx : Membership.mem s x), p x ⋯\nadd : ∀ (x y : A) (hx : Membership.mem (NonUnitalAlgebra.adjoin R s) x) (hy : Membership.mem (NonUnitalAlgebra.adjoin R s) y), p x hx → p y hy → p (HAdd.hAdd x y) ⋯\nzero : p 0 ⋯\nmul : ∀ (x y : A) (hx : Membership.mem (NonUnitalAlgebra.adjoin R s) x) (hy : Membership.mem (NonUnitalAlgebra.adjoin R s) y), p x hx → p y hy → p (HMul.hMul x y) ⋯\nsmul : ∀ (r : R) (x : A) (hx : Membership.mem (NonUnitalAlgebra.adjoin R s) x), p x hx → p (HSMul.hSMul r x) ⋯\nx : A\nhx : Membership.mem (NonUnitalAlgebra.adjoin R s) x\n⊢ p x hx","decl":"@[deprecated adjoin_induction (since := \"2024-10-10\")]\nalias adjoin_induction' := adjoin_induction\n\n"}
{"name":"NonUnitalAlgebra.adjoin_induction₂","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ns : Set A\np : (x y : A) → Membership.mem (NonUnitalAlgebra.adjoin R s) x → Membership.mem (NonUnitalAlgebra.adjoin R s) y → Prop\nmem_mem : ∀ (x y : A) (hx : Membership.mem s x) (hy : Membership.mem s y), p x y ⋯ ⋯\nzero_left : ∀ (x : A) (hx : Membership.mem (NonUnitalAlgebra.adjoin R s) x), p 0 x ⋯ hx\nzero_right : ∀ (x : A) (hx : Membership.mem (NonUnitalAlgebra.adjoin R s) x), p x 0 hx ⋯\nadd_left : ∀ (x y z : A) (hx : Membership.mem (NonUnitalAlgebra.adjoin R s) x) (hy : Membership.mem (NonUnitalAlgebra.adjoin R s) y) (hz : Membership.mem (NonUnitalAlgebra.adjoin R s) z), p x z hx hz → p y z hy hz → p (HAdd.hAdd x y) z ⋯ hz\nadd_right : ∀ (x y z : A) (hx : Membership.mem (NonUnitalAlgebra.adjoin R s) x) (hy : Membership.mem (NonUnitalAlgebra.adjoin R s) y) (hz : Membership.mem (NonUnitalAlgebra.adjoin R s) z), p x y hx hy → p x z hx hz → p x (HAdd.hAdd y z) hx ⋯\nmul_left : ∀ (x y z : A) (hx : Membership.mem (NonUnitalAlgebra.adjoin R s) x) (hy : Membership.mem (NonUnitalAlgebra.adjoin R s) y) (hz : Membership.mem (NonUnitalAlgebra.adjoin R s) z), p x z hx hz → p y z hy hz → p (HMul.hMul x y) z ⋯ hz\nmul_right : ∀ (x y z : A) (hx : Membership.mem (NonUnitalAlgebra.adjoin R s) x) (hy : Membership.mem (NonUnitalAlgebra.adjoin R s) y) (hz : Membership.mem (NonUnitalAlgebra.adjoin R s) z), p x y hx hy → p x z hx hz → p x (HMul.hMul y z) hx ⋯\nsmul_left : ∀ (r : R) (x y : A) (hx : Membership.mem (NonUnitalAlgebra.adjoin R s) x) (hy : Membership.mem (NonUnitalAlgebra.adjoin R s) y), p x y hx hy → p (HSMul.hSMul r x) y ⋯ hy\nsmul_right : ∀ (r : R) (x y : A) (hx : Membership.mem (NonUnitalAlgebra.adjoin R s) x) (hy : Membership.mem (NonUnitalAlgebra.adjoin R s) y), p x y hx hy → p x (HSMul.hSMul r y) hx ⋯\nx y : A\nhx : Membership.mem (NonUnitalAlgebra.adjoin R s) x\nhy : Membership.mem (NonUnitalAlgebra.adjoin R s) y\n⊢ p x y hx hy","decl":"@[elab_as_elim]\ntheorem adjoin_induction₂ {s : Set A} {p : ∀ x y, x ∈ adjoin R s → y ∈ adjoin R s → Prop}\n    (mem_mem : ∀ (x) (y) (hx : x ∈ s) (hy : y ∈ s), p x y (subset_adjoin R hx) (subset_adjoin R hy))\n    (zero_left : ∀ x hx, p 0 x (zero_mem _) hx) (zero_right : ∀ x hx, p x 0 hx (zero_mem _))\n    (add_left : ∀ x y z hx hy hz, p x z hx hz → p y z hy hz → p (x + y) z (add_mem hx hy) hz)\n    (add_right : ∀ x y z hx hy hz, p x y hx hy → p x z hx hz → p x (y + z) hx (add_mem hy hz))\n    (mul_left : ∀ x y z hx hy hz, p x z hx hz → p y z hy hz → p (x * y) z (mul_mem hx hy) hz)\n    (mul_right : ∀ x y z hx hy hz, p x y hx hy → p x z hx hz → p x (y * z) hx (mul_mem hy hz))\n    (smul_left : ∀ r x y hx hy, p x y hx hy → p (r • x) y (SMulMemClass.smul_mem r hx) hy)\n    (smul_right : ∀ r x y hx hy, p x y hx hy → p x (r • y) hx (SMulMemClass.smul_mem r hy))\n    {x y : A} (hx : x ∈ adjoin R s) (hy : y ∈ adjoin R s) :\n    p x y hx hy := by\n  induction hy using adjoin_induction with\n  | mem z hz =>\n    induction hx using adjoin_induction with\n    | mem _ h => exact mem_mem _ _ h hz\n    | zero => exact zero_left _ _\n    | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ _ h₁ h₂\n    | add _ _ _ _ h₁ h₂ => exact add_left _ _ _ _ _ _ h₁ h₂\n    | smul _ _ _ h => exact smul_left _ _ _ _ _ h\n  | zero => exact zero_right x hx\n  | mul _ _ _ _ h₁ h₂ => exact mul_right _ _ _ _ _ _ h₁ h₂\n  | add _ _ _ _ h₁ h₂ => exact add_right _ _ _ _ _ _ h₁ h₂\n  | smul _ _ _ h => exact smul_right _ _ _ _ _ h\n\n"}
{"name":"NonUnitalAlgebra.adjoin_induction_subtype","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ns : Set A\np : (Subtype fun x => Membership.mem (NonUnitalAlgebra.adjoin R s) x) → Prop\na : Subtype fun x => Membership.mem (NonUnitalAlgebra.adjoin R s) x\nmem : ∀ (x : A) (h : Membership.mem s x), p ⟨x, ⋯⟩\nadd : ∀ (x y : Subtype fun x => Membership.mem (NonUnitalAlgebra.adjoin R s) x), p x → p y → p (HAdd.hAdd x y)\nzero : p 0\nmul : ∀ (x y : Subtype fun x => Membership.mem (NonUnitalAlgebra.adjoin R s) x), p x → p y → p (HMul.hMul x y)\nsmul : ∀ (r : R) (x : Subtype fun x => Membership.mem (NonUnitalAlgebra.adjoin R s) x), p x → p (HSMul.hSMul r x)\n⊢ p a","decl":"/-- The difference with `NonUnitalAlgebra.adjoin_induction` is that this acts on the subtype. -/\n@[elab_as_elim, deprecated adjoin_induction (since := \"2024-10-11\")]\nlemma adjoin_induction_subtype {s : Set A} {p : adjoin R s → Prop} (a : adjoin R s)\n    (mem : ∀ x (h : x ∈ s), p ⟨x, subset_adjoin R h⟩)\n    (add : ∀ x y, p x → p y → p (x + y)) (zero : p 0)\n    (mul : ∀ x y, p x → p y → p (x * y)) (smul : ∀ (r : R) x, p x → p (r • x)) : p a :=\n  Subtype.recOn a fun b hb => by\n    induction hb using adjoin_induction with\n    | mem _ h => exact mem _ h\n    | zero => exact zero\n    | mul _ _ _ _ h₁ h₂ => exact mul _ _ h₁ h₂\n    | add _ _ _ _ h₁ h₂ => exact add _ _ h₁ h₂\n    | smul _ _ _ h => exact smul _ _ h\n\n"}
{"name":"NonUnitalAlgebra.adjoin_eq_span","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ns : Set A\n⊢ Eq (NonUnitalAlgebra.adjoin R s).toSubmodule (Submodule.span R ↑(Subsemigroup.closure s))","decl":"open Submodule in\nlemma adjoin_eq_span (s : Set A) : (adjoin R s).toSubmodule = span R (Subsemigroup.closure s) := by\n  apply le_antisymm\n  · intro x hx\n    induction hx using adjoin_induction with\n    | mem x hx => exact subset_span <| Subsemigroup.subset_closure hx\n    | add x y _ _ hpx hpy => exact add_mem hpx hpy\n    | zero => exact zero_mem _\n    | mul x y _ _ hpx hpy =>\n      apply span_induction₂ ?Hs (by simp) (by simp) ?Hadd_l ?Hadd_r ?Hsmul_l ?Hsmul_r hpx hpy\n      case Hs => exact fun x y hx hy ↦ subset_span <| mul_mem hx hy\n      case Hadd_l => exact fun x y z _ _ _ hxz hyz ↦ by simpa [add_mul] using add_mem hxz hyz\n      case Hadd_r => exact fun x y z _ _ _ hxz hyz ↦ by simpa [mul_add] using add_mem hxz hyz\n      case Hsmul_l => exact fun r x y _ _ hxy ↦ by simpa [smul_mul_assoc] using smul_mem _ _ hxy\n      case Hsmul_r => exact fun r x y _ _ hxy ↦ by simpa [mul_smul_comm] using smul_mem _ _ hxy\n    | smul r x _ hpx => exact smul_mem _ _ hpx\n  · apply span_le.2 _\n    show Subsemigroup.closure s ≤ (adjoin R s).toSubsemigroup\n    exact Subsemigroup.closure_le.2 (subset_adjoin R)\n\n"}
{"name":"NonUnitalAlgebra.adjoin_empty","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\n⊢ Eq (NonUnitalAlgebra.adjoin R EmptyCollection.emptyCollection) Bot.bot","decl":"@[simp]\ntheorem adjoin_empty : adjoin R (∅ : Set A) = ⊥ :=\n  show adjoin R ⊥ = ⊥ by apply GaloisConnection.l_bot; exact NonUnitalAlgebra.gc\n\n"}
{"name":"NonUnitalAlgebra.adjoin_univ","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\n⊢ Eq (NonUnitalAlgebra.adjoin R Set.univ) Top.top","decl":"@[simp]\ntheorem adjoin_univ : adjoin R (Set.univ : Set A) = ⊤ :=\n  eq_top_iff.2 fun _x hx => subset_adjoin R hx\n\n"}
{"name":"NonUnitalAlgHom.map_adjoin","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"F : Type u_1\nR : Type u\nA : Type v\nB : Type w\ninst✝¹⁰ : CommSemiring R\ninst✝⁹ : NonUnitalNonAssocSemiring A\ninst✝⁸ : Module R A\ninst✝⁷ : NonUnitalNonAssocSemiring B\ninst✝⁶ : Module R B\ninst✝⁵ : FunLike F A B\ninst✝⁴ : NonUnitalAlgHomClass F R A B\ninst✝³ : IsScalarTower R A A\ninst✝² : SMulCommClass R A A\ninst✝¹ : IsScalarTower R B B\ninst✝ : SMulCommClass R B B\nf : F\ns : Set A\n⊢ Eq (NonUnitalSubalgebra.map f (NonUnitalAlgebra.adjoin R s)) (NonUnitalAlgebra.adjoin R (Set.image (⇑f) s))","decl":"open NonUnitalSubalgebra in\nlemma _root_.NonUnitalAlgHom.map_adjoin [IsScalarTower R B B] [SMulCommClass R B B]\n    (f : F) (s : Set A) : map f (adjoin R s) = adjoin R (f '' s) :=\n  Set.image_preimage.l_comm_of_u_comm (gc_map_comap f) NonUnitalAlgebra.gi.gc\n    NonUnitalAlgebra.gi.gc fun _t => rfl\n\n"}
{"name":"NonUnitalAlgHom.map_adjoin_singleton","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"F : Type u_1\nR : Type u\nA : Type v\nB : Type w\ninst✝¹⁰ : CommSemiring R\ninst✝⁹ : NonUnitalNonAssocSemiring A\ninst✝⁸ : Module R A\ninst✝⁷ : NonUnitalNonAssocSemiring B\ninst✝⁶ : Module R B\ninst✝⁵ : FunLike F A B\ninst✝⁴ : NonUnitalAlgHomClass F R A B\ninst✝³ : IsScalarTower R A A\ninst✝² : SMulCommClass R A A\ninst✝¹ : IsScalarTower R B B\ninst✝ : SMulCommClass R B B\nf : F\nx : A\n⊢ Eq (NonUnitalSubalgebra.map f (NonUnitalAlgebra.adjoin R (Singleton.singleton x))) (NonUnitalAlgebra.adjoin R (Singleton.singleton (f x)))","decl":"open NonUnitalSubalgebra in\n@[simp]\nlemma _root_.NonUnitalAlgHom.map_adjoin_singleton [IsScalarTower R B B] [SMulCommClass R B B]\n    (f : F) (x : A) : map f (adjoin R {x}) = adjoin R {f x} := by\n  simp [NonUnitalAlgHom.map_adjoin]\n\n"}
{"name":"NonUnitalAlgebra.coe_top","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\n⊢ Eq (↑Top.top) Set.univ","decl":"@[simp]\ntheorem coe_top : (↑(⊤ : NonUnitalSubalgebra R A) : Set A) = Set.univ :=\n  rfl\n\n"}
{"name":"NonUnitalAlgebra.mem_top","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nx : A\n⊢ Membership.mem Top.top x","decl":"@[simp]\ntheorem mem_top {x : A} : x ∈ (⊤ : NonUnitalSubalgebra R A) :=\n  Set.mem_univ x\n\n"}
{"name":"NonUnitalAlgebra.top_toSubmodule","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\n⊢ Eq Top.top.toSubmodule Top.top","decl":"@[simp]\ntheorem top_toSubmodule : (⊤ : NonUnitalSubalgebra R A).toSubmodule = ⊤ :=\n  rfl\n\n"}
{"name":"NonUnitalAlgebra.top_toNonUnitalSubsemiring","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\n⊢ Eq Top.top.toNonUnitalSubsemiring Top.top","decl":"@[simp]\ntheorem top_toNonUnitalSubsemiring : (⊤ : NonUnitalSubalgebra R A).toNonUnitalSubsemiring = ⊤ :=\n  rfl\n\n"}
{"name":"NonUnitalAlgebra.top_toSubring","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁴ : CommRing R\ninst✝³ : NonUnitalNonAssocRing A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\n⊢ Eq Top.top.toNonUnitalSubring Top.top","decl":"@[simp]\ntheorem top_toSubring {R A : Type*} [CommRing R] [NonUnitalNonAssocRing A] [Module R A]\n    [IsScalarTower R A A] [SMulCommClass R A A] :\n    (⊤ : NonUnitalSubalgebra R A).toNonUnitalSubring = ⊤ :=\n  rfl\n\n"}
{"name":"NonUnitalAlgebra.toSubmodule_eq_top","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nS : NonUnitalSubalgebra R A\n⊢ Iff (Eq S.toSubmodule Top.top) (Eq S Top.top)","decl":"@[simp]\ntheorem toSubmodule_eq_top {S : NonUnitalSubalgebra R A} : S.toSubmodule = ⊤ ↔ S = ⊤ :=\n  NonUnitalSubalgebra.toSubmodule'.injective.eq_iff' top_toSubmodule\n\n"}
{"name":"NonUnitalAlgebra.toNonUnitalSubsemiring_eq_top","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nS : NonUnitalSubalgebra R A\n⊢ Iff (Eq S.toNonUnitalSubsemiring Top.top) (Eq S Top.top)","decl":"@[simp]\ntheorem toNonUnitalSubsemiring_eq_top {S : NonUnitalSubalgebra R A} :\n    S.toNonUnitalSubsemiring = ⊤ ↔ S = ⊤ :=\n  NonUnitalSubalgebra.toNonUnitalSubsemiring_injective.eq_iff' top_toNonUnitalSubsemiring\n\n"}
{"name":"NonUnitalAlgebra.to_subring_eq_top","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝² : CommRing R\ninst✝¹ : Ring A\ninst✝ : Algebra R A\nS : NonUnitalSubalgebra R A\n⊢ Iff (Eq S.toNonUnitalSubring Top.top) (Eq S Top.top)","decl":"@[simp]\ntheorem to_subring_eq_top {R A : Type*} [CommRing R] [Ring A] [Algebra R A]\n    {S : NonUnitalSubalgebra R A} : S.toNonUnitalSubring = ⊤ ↔ S = ⊤ :=\n  NonUnitalSubalgebra.toNonUnitalSubring_injective.eq_iff' top_toSubring\n\n"}
{"name":"NonUnitalAlgebra.mem_sup_left","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nS T : NonUnitalSubalgebra R A\nx : A\na✝ : Membership.mem S x\n⊢ Membership.mem (Max.max S T) x","decl":"theorem mem_sup_left {S T : NonUnitalSubalgebra R A} : ∀ {x : A}, x ∈ S → x ∈ S ⊔ T := by\n  rw [← SetLike.le_def]\n  exact le_sup_left\n\n"}
{"name":"NonUnitalAlgebra.mem_sup_right","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nS T : NonUnitalSubalgebra R A\nx : A\na✝ : Membership.mem T x\n⊢ Membership.mem (Max.max S T) x","decl":"theorem mem_sup_right {S T : NonUnitalSubalgebra R A} : ∀ {x : A}, x ∈ T → x ∈ S ⊔ T := by\n  rw [← SetLike.le_def]\n  exact le_sup_right\n\n"}
{"name":"NonUnitalAlgebra.mul_mem_sup","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nS T : NonUnitalSubalgebra R A\nx y : A\nhx : Membership.mem S x\nhy : Membership.mem T y\n⊢ Membership.mem (Max.max S T) (HMul.hMul x y)","decl":"theorem mul_mem_sup {S T : NonUnitalSubalgebra R A} {x y : A} (hx : x ∈ S) (hy : y ∈ T) :\n    x * y ∈ S ⊔ T :=\n  mul_mem (mem_sup_left hx) (mem_sup_right hy)\n\n"}
{"name":"NonUnitalAlgebra.map_sup","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"F : Type u_1\nR : Type u\nA : Type v\nB : Type w\ninst✝¹⁰ : CommSemiring R\ninst✝⁹ : NonUnitalNonAssocSemiring A\ninst✝⁸ : Module R A\ninst✝⁷ : NonUnitalNonAssocSemiring B\ninst✝⁶ : Module R B\ninst✝⁵ : FunLike F A B\ninst✝⁴ : NonUnitalAlgHomClass F R A B\ninst✝³ : IsScalarTower R A A\ninst✝² : SMulCommClass R A A\ninst✝¹ : IsScalarTower R B B\ninst✝ : SMulCommClass R B B\nf : F\nS T : NonUnitalSubalgebra R A\n⊢ Eq (NonUnitalSubalgebra.map f (Max.max S T)) (Max.max (NonUnitalSubalgebra.map f S) (NonUnitalSubalgebra.map f T))","decl":"theorem map_sup [IsScalarTower R B B] [SMulCommClass R B B]\n    (f : F) (S T : NonUnitalSubalgebra R A) :\n    ((S ⊔ T).map f : NonUnitalSubalgebra R B) = S.map f ⊔ T.map f :=\n  (NonUnitalSubalgebra.gc_map_comap f).l_sup\n\n"}
{"name":"NonUnitalAlgebra.map_inf","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"F : Type u_1\nR : Type u\nA : Type v\nB : Type w\ninst✝¹⁰ : CommSemiring R\ninst✝⁹ : NonUnitalNonAssocSemiring A\ninst✝⁸ : Module R A\ninst✝⁷ : NonUnitalNonAssocSemiring B\ninst✝⁶ : Module R B\ninst✝⁵ : FunLike F A B\ninst✝⁴ : NonUnitalAlgHomClass F R A B\ninst✝³ : IsScalarTower R A A\ninst✝² : SMulCommClass R A A\ninst✝¹ : IsScalarTower R B B\ninst✝ : SMulCommClass R B B\nf : F\nhf : Function.Injective ⇑f\nS T : NonUnitalSubalgebra R A\n⊢ Eq (NonUnitalSubalgebra.map f (Min.min S T)) (Min.min (NonUnitalSubalgebra.map f S) (NonUnitalSubalgebra.map f T))","decl":"theorem map_inf [IsScalarTower R B B] [SMulCommClass R B B]\n    (f : F) (hf : Function.Injective f) (S T : NonUnitalSubalgebra R A) :\n    ((S ⊓ T).map f : NonUnitalSubalgebra R B) = S.map f ⊓ T.map f :=\n  SetLike.coe_injective (Set.image_inter hf)\n\n"}
{"name":"NonUnitalAlgebra.coe_inf","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nS T : NonUnitalSubalgebra R A\n⊢ Eq (↑(Min.min S T)) (Inter.inter ↑S ↑T)","decl":"@[simp, norm_cast]\ntheorem coe_inf (S T : NonUnitalSubalgebra R A) : (↑(S ⊓ T) : Set A) = (S : Set A) ∩ T :=\n  rfl\n\n"}
{"name":"NonUnitalAlgebra.mem_inf","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nS T : NonUnitalSubalgebra R A\nx : A\n⊢ Iff (Membership.mem (Min.min S T) x) (And (Membership.mem S x) (Membership.mem T x))","decl":"@[simp]\ntheorem mem_inf {S T : NonUnitalSubalgebra R A} {x : A} : x ∈ S ⊓ T ↔ x ∈ S ∧ x ∈ T :=\n  Iff.rfl\n\n"}
{"name":"NonUnitalAlgebra.inf_toSubmodule","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nS T : NonUnitalSubalgebra R A\n⊢ Eq (Min.min S T).toSubmodule (Min.min S.toSubmodule T.toSubmodule)","decl":"@[simp]\ntheorem inf_toSubmodule (S T : NonUnitalSubalgebra R A) :\n    (S ⊓ T).toSubmodule = S.toSubmodule ⊓ T.toSubmodule :=\n  rfl\n\n"}
{"name":"NonUnitalAlgebra.inf_toNonUnitalSubsemiring","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nS T : NonUnitalSubalgebra R A\n⊢ Eq (Min.min S T).toNonUnitalSubsemiring (Min.min S.toNonUnitalSubsemiring T.toNonUnitalSubsemiring)","decl":"@[simp]\ntheorem inf_toNonUnitalSubsemiring (S T : NonUnitalSubalgebra R A) :\n    (S ⊓ T).toNonUnitalSubsemiring = S.toNonUnitalSubsemiring ⊓ T.toNonUnitalSubsemiring :=\n  rfl\n\n"}
{"name":"NonUnitalAlgebra.coe_sInf","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nS : Set (NonUnitalSubalgebra R A)\n⊢ Eq (↑(InfSet.sInf S)) (Set.iInter fun s => Set.iInter fun h => ↑s)","decl":"@[simp, norm_cast]\ntheorem coe_sInf (S : Set (NonUnitalSubalgebra R A)) : (↑(sInf S) : Set A) = ⋂ s ∈ S, ↑s :=\n  sInf_image\n\n"}
{"name":"NonUnitalAlgebra.mem_sInf","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nS : Set (NonUnitalSubalgebra R A)\nx : A\n⊢ Iff (Membership.mem (InfSet.sInf S) x) (∀ (p : NonUnitalSubalgebra R A), Membership.mem S p → Membership.mem p x)","decl":"theorem mem_sInf {S : Set (NonUnitalSubalgebra R A)} {x : A} : x ∈ sInf S ↔ ∀ p ∈ S, x ∈ p := by\n  simp only [← SetLike.mem_coe, coe_sInf, Set.mem_iInter₂]\n\n"}
{"name":"NonUnitalAlgebra.sInf_toSubmodule","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nS : Set (NonUnitalSubalgebra R A)\n⊢ Eq (InfSet.sInf S).toSubmodule (InfSet.sInf (Set.image NonUnitalSubalgebra.toSubmodule S))","decl":"@[simp]\ntheorem sInf_toSubmodule (S : Set (NonUnitalSubalgebra R A)) :\n    (sInf S).toSubmodule = sInf (NonUnitalSubalgebra.toSubmodule '' S) :=\n  SetLike.coe_injective <| by simp\n\n"}
{"name":"NonUnitalAlgebra.sInf_toNonUnitalSubsemiring","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nS : Set (NonUnitalSubalgebra R A)\n⊢ Eq (InfSet.sInf S).toNonUnitalSubsemiring (InfSet.sInf (Set.image NonUnitalSubalgebra.toNonUnitalSubsemiring S))","decl":"@[simp]\ntheorem sInf_toNonUnitalSubsemiring (S : Set (NonUnitalSubalgebra R A)) :\n    (sInf S).toNonUnitalSubsemiring = sInf (NonUnitalSubalgebra.toNonUnitalSubsemiring '' S) :=\n  SetLike.coe_injective <| by simp\n\n"}
{"name":"NonUnitalAlgebra.coe_iInf","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nι : Sort u_2\nS : ι → NonUnitalSubalgebra R A\n⊢ Eq (↑(iInf fun i => S i)) (Set.iInter fun i => ↑(S i))","decl":"@[simp, norm_cast]\ntheorem coe_iInf {ι : Sort*} {S : ι → NonUnitalSubalgebra R A} :\n    (↑(⨅ i, S i) : Set A) = ⋂ i, S i := by simp [iInf]\n\n"}
{"name":"NonUnitalAlgebra.mem_iInf","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nι : Sort u_2\nS : ι → NonUnitalSubalgebra R A\nx : A\n⊢ Iff (Membership.mem (iInf fun i => S i) x) (∀ (i : ι), Membership.mem (S i) x)","decl":"theorem mem_iInf {ι : Sort*} {S : ι → NonUnitalSubalgebra R A} {x : A} :\n    (x ∈ ⨅ i, S i) ↔ ∀ i, x ∈ S i := by simp only [iInf, mem_sInf, Set.forall_mem_range]\n\n"}
{"name":"NonUnitalAlgebra.map_iInf","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"F : Type u_1\nR : Type u\nA : Type v\nB : Type w\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : NonUnitalNonAssocSemiring A\ninst✝⁹ : Module R A\ninst✝⁸ : NonUnitalNonAssocSemiring B\ninst✝⁷ : Module R B\ninst✝⁶ : FunLike F A B\ninst✝⁵ : NonUnitalAlgHomClass F R A B\ninst✝⁴ : IsScalarTower R A A\ninst✝³ : SMulCommClass R A A\nι : Sort u_2\ninst✝² : Nonempty ι\ninst✝¹ : IsScalarTower R B B\ninst✝ : SMulCommClass R B B\nf : F\nhf : Function.Injective ⇑f\nS : ι → NonUnitalSubalgebra R A\n⊢ Eq (NonUnitalSubalgebra.map f (iInf fun i => S i)) (iInf fun i => NonUnitalSubalgebra.map f (S i))","decl":"theorem map_iInf {ι : Sort*} [Nonempty ι]\n    [IsScalarTower R B B] [SMulCommClass R B B] (f : F)\n    (hf : Function.Injective f) (S : ι → NonUnitalSubalgebra R A) :\n    ((⨅ i, S i).map f : NonUnitalSubalgebra R B) = ⨅ i, (S i).map f := by\n  apply SetLike.coe_injective\n  simpa using (Set.injOn_of_injective hf).image_iInter_eq (s := SetLike.coe ∘ S)\n\n"}
{"name":"NonUnitalAlgebra.iInf_toSubmodule","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nι : Sort u_2\nS : ι → NonUnitalSubalgebra R A\n⊢ Eq (iInf fun i => S i).toSubmodule (iInf fun i => (S i).toSubmodule)","decl":"@[simp]\ntheorem iInf_toSubmodule {ι : Sort*} (S : ι → NonUnitalSubalgebra R A) :\n    (⨅ i, S i).toSubmodule = ⨅ i, (S i).toSubmodule :=\n  SetLike.coe_injective <| by simp\n\n"}
{"name":"NonUnitalAlgebra.mem_bot","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nx : A\n⊢ Iff (Membership.mem Bot.bot x) (Eq x 0)","decl":"theorem mem_bot {x : A} : x ∈ (⊥ : NonUnitalSubalgebra R A) ↔ x = 0 :=\n  show x ∈ Submodule.span R (NonUnitalSubsemiring.closure (∅ : Set A) : Set A) ↔ x = 0 by\n    rw [NonUnitalSubsemiring.closure_empty, NonUnitalSubsemiring.coe_bot,\n      Submodule.span_zero_singleton, Submodule.mem_bot]\n\n"}
{"name":"NonUnitalAlgebra.toSubmodule_bot","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\n⊢ Eq Bot.bot.toSubmodule Bot.bot","decl":"theorem toSubmodule_bot : (⊥ : NonUnitalSubalgebra R A).toSubmodule = ⊥ := by\n  ext\n  simp only [mem_bot, NonUnitalSubalgebra.mem_toSubmodule, Submodule.mem_bot]\n\n"}
{"name":"NonUnitalAlgebra.coe_bot","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\n⊢ Eq (↑Bot.bot) (Singleton.singleton 0)","decl":"@[simp]\ntheorem coe_bot : ((⊥ : NonUnitalSubalgebra R A) : Set A) = {0} := by\n  simp [Set.ext_iff, NonUnitalAlgebra.mem_bot]\n\n"}
{"name":"NonUnitalAlgebra.eq_top_iff","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nS : NonUnitalSubalgebra R A\n⊢ Iff (Eq S Top.top) (∀ (x : A), Membership.mem S x)","decl":"theorem eq_top_iff {S : NonUnitalSubalgebra R A} : S = ⊤ ↔ ∀ x : A, x ∈ S :=\n  ⟨fun h x => by rw [h]; exact mem_top, fun h => by ext x; exact ⟨fun _ => mem_top, fun _ => h x⟩⟩\n\n"}
{"name":"NonUnitalAlgebra.range_id","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\n⊢ Eq (NonUnitalAlgHom.range (NonUnitalAlgHom.id R A)) Top.top","decl":"@[simp]\ntheorem range_id : NonUnitalAlgHom.range (NonUnitalAlgHom.id R A) = ⊤ :=\n  SetLike.coe_injective Set.range_id\n\n"}
{"name":"NonUnitalAlgebra.map_top","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\nB : Type w\ninst✝⁶ : CommSemiring R\ninst✝⁵ : NonUnitalNonAssocSemiring A\ninst✝⁴ : Module R A\ninst✝³ : NonUnitalNonAssocSemiring B\ninst✝² : Module R B\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nf : NonUnitalAlgHom (MonoidHom.id R) A B\n⊢ Eq (NonUnitalSubalgebra.map f Top.top) (NonUnitalAlgHom.range f)","decl":"@[simp]\ntheorem map_top (f : A →ₙₐ[R] B) : (⊤ : NonUnitalSubalgebra R A).map f = NonUnitalAlgHom.range f :=\n  SetLike.coe_injective Set.image_univ\n\n"}
{"name":"NonUnitalAlgebra.map_bot","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\nB : Type w\ninst✝⁸ : CommSemiring R\ninst✝⁷ : NonUnitalNonAssocSemiring A\ninst✝⁶ : Module R A\ninst✝⁵ : NonUnitalNonAssocSemiring B\ninst✝⁴ : Module R B\ninst✝³ : IsScalarTower R A A\ninst✝² : SMulCommClass R A A\ninst✝¹ : IsScalarTower R B B\ninst✝ : SMulCommClass R B B\nf : NonUnitalAlgHom (MonoidHom.id R) A B\n⊢ Eq (NonUnitalSubalgebra.map f Bot.bot) Bot.bot","decl":"@[simp]\ntheorem map_bot [IsScalarTower R B B] [SMulCommClass R B B]\n    (f : A →ₙₐ[R] B) : (⊥ : NonUnitalSubalgebra R A).map f = ⊥ :=\n  SetLike.coe_injective <| by simp [NonUnitalAlgebra.coe_bot, NonUnitalSubalgebra.coe_map]\n\n"}
{"name":"NonUnitalAlgebra.comap_top","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\nB : Type w\ninst✝⁸ : CommSemiring R\ninst✝⁷ : NonUnitalNonAssocSemiring A\ninst✝⁶ : Module R A\ninst✝⁵ : NonUnitalNonAssocSemiring B\ninst✝⁴ : Module R B\ninst✝³ : IsScalarTower R A A\ninst✝² : SMulCommClass R A A\ninst✝¹ : IsScalarTower R B B\ninst✝ : SMulCommClass R B B\nf : NonUnitalAlgHom (MonoidHom.id R) A B\n⊢ Eq (NonUnitalSubalgebra.comap f Top.top) Top.top","decl":"@[simp]\ntheorem comap_top [IsScalarTower R B B] [SMulCommClass R B B]\n    (f : A →ₙₐ[R] B) : (⊤ : NonUnitalSubalgebra R B).comap f = ⊤ :=\n  eq_top_iff.2 fun _ => mem_top\n\n"}
{"name":"NonUnitalAlgebra.range_eq_top","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\nB : Type w\ninst✝⁶ : CommSemiring R\ninst✝⁵ : NonUnitalNonAssocSemiring A\ninst✝⁴ : Module R A\ninst✝³ : NonUnitalNonAssocSemiring B\ninst✝² : Module R B\ninst✝¹ : IsScalarTower R B B\ninst✝ : SMulCommClass R B B\nf : NonUnitalAlgHom (MonoidHom.id R) A B\n⊢ Iff (Eq (NonUnitalAlgHom.range f) Top.top) (Function.Surjective ⇑f)","decl":"theorem range_eq_top [IsScalarTower R B B] [SMulCommClass R B B] (f : A →ₙₐ[R] B) :\n    NonUnitalAlgHom.range f = (⊤ : NonUnitalSubalgebra R B) ↔ Function.Surjective f :=\n  NonUnitalAlgebra.eq_top_iff\n\n"}
{"name":"NonUnitalAlgebra.range_top_iff_surjective","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\nB : Type w\ninst✝⁶ : CommSemiring R\ninst✝⁵ : NonUnitalNonAssocSemiring A\ninst✝⁴ : Module R A\ninst✝³ : NonUnitalNonAssocSemiring B\ninst✝² : Module R B\ninst✝¹ : IsScalarTower R B B\ninst✝ : SMulCommClass R B B\nf : NonUnitalAlgHom (MonoidHom.id R) A B\n⊢ Iff (Eq (NonUnitalAlgHom.range f) Top.top) (Function.Surjective ⇑f)","decl":"@[deprecated (since := \"2024-11-11\")] alias range_top_iff_surjective := range_eq_top\n\n"}
{"name":"NonUnitalSubalgebra.range_val","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : NonUnitalNonAssocSemiring A\ninst✝ : Module R A\nS : NonUnitalSubalgebra R A\n⊢ Eq (NonUnitalAlgHom.range (NonUnitalSubalgebraClass.subtype S)) S","decl":"theorem range_val : NonUnitalAlgHom.range (NonUnitalSubalgebraClass.subtype S) = S :=\n  ext <| Set.ext_iff.1 <| (NonUnitalSubalgebraClass.subtype S).coe_range.trans Subtype.range_val\n\n"}
{"name":"NonUnitalSubalgebra.subsingleton_of_subsingleton","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝³ : CommSemiring R\ninst✝² : NonUnitalNonAssocSemiring A\ninst✝¹ : Module R A\ninst✝ : Subsingleton A\n⊢ Subsingleton (NonUnitalSubalgebra R A)","decl":"instance subsingleton_of_subsingleton [Subsingleton A] : Subsingleton (NonUnitalSubalgebra R A) :=\n  ⟨fun B C => ext fun x => by simp only [Subsingleton.elim x 0, zero_mem B, zero_mem C]⟩\n\n"}
{"name":"NonUnitalSubalgebra.coe_prod","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\nB : Type w\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\nS : NonUnitalSubalgebra R A\ninst✝¹ : NonUnitalNonAssocSemiring B\ninst✝ : Module R B\nS₁ : NonUnitalSubalgebra R B\n⊢ Eq (↑(S.prod S₁)) (SProd.sprod ↑S ↑S₁)","decl":"@[simp]\ntheorem coe_prod : (prod S S₁ : Set (A × B)) = (S : Set A) ×ˢ S₁ :=\n  rfl\n\n"}
{"name":"NonUnitalSubalgebra.prod_toSubmodule","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\nB : Type w\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\nS : NonUnitalSubalgebra R A\ninst✝¹ : NonUnitalNonAssocSemiring B\ninst✝ : Module R B\nS₁ : NonUnitalSubalgebra R B\n⊢ Eq (S.prod S₁).toSubmodule (S.toSubmodule.prod S₁.toSubmodule)","decl":"theorem prod_toSubmodule : (S.prod S₁).toSubmodule = S.toSubmodule.prod S₁.toSubmodule :=\n  rfl\n\n"}
{"name":"NonUnitalSubalgebra.mem_prod","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\nB : Type w\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : NonUnitalNonAssocSemiring B\ninst✝ : Module R B\nS : NonUnitalSubalgebra R A\nS₁ : NonUnitalSubalgebra R B\nx : Prod A B\n⊢ Iff (Membership.mem (S.prod S₁) x) (And (Membership.mem S x.1) (Membership.mem S₁ x.2))","decl":"@[simp]\ntheorem mem_prod {S : NonUnitalSubalgebra R A} {S₁ : NonUnitalSubalgebra R B} {x : A × B} :\n    x ∈ prod S S₁ ↔ x.1 ∈ S ∧ x.2 ∈ S₁ :=\n  Set.mem_prod\n\n"}
{"name":"NonUnitalSubalgebra.prod_top","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\nB : Type w\ninst✝⁸ : CommSemiring R\ninst✝⁷ : NonUnitalNonAssocSemiring A\ninst✝⁶ : Module R A\ninst✝⁵ : NonUnitalNonAssocSemiring B\ninst✝⁴ : Module R B\ninst✝³ : IsScalarTower R A A\ninst✝² : SMulCommClass R A A\ninst✝¹ : IsScalarTower R B B\ninst✝ : SMulCommClass R B B\n⊢ Eq (Top.top.prod Top.top) Top.top","decl":"@[simp]\ntheorem prod_top : (prod ⊤ ⊤ : NonUnitalSubalgebra R (A × B)) = ⊤ := by ext; simp\n\n"}
{"name":"NonUnitalSubalgebra.prod_mono","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\nB : Type w\ninst✝⁸ : CommSemiring R\ninst✝⁷ : NonUnitalNonAssocSemiring A\ninst✝⁶ : Module R A\ninst✝⁵ : NonUnitalNonAssocSemiring B\ninst✝⁴ : Module R B\ninst✝³ : IsScalarTower R A A\ninst✝² : SMulCommClass R A A\ninst✝¹ : IsScalarTower R B B\ninst✝ : SMulCommClass R B B\nS T : NonUnitalSubalgebra R A\nS₁ T₁ : NonUnitalSubalgebra R B\na✝¹ : LE.le S T\na✝ : LE.le S₁ T₁\n⊢ LE.le (S.prod S₁) (T.prod T₁)","decl":"theorem prod_mono {S T : NonUnitalSubalgebra R A} {S₁ T₁ : NonUnitalSubalgebra R B} :\n    S ≤ T → S₁ ≤ T₁ → prod S S₁ ≤ prod T T₁ :=\n  Set.prod_mono\n\n"}
{"name":"NonUnitalSubalgebra.prod_inf_prod","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\nB : Type w\ninst✝⁸ : CommSemiring R\ninst✝⁷ : NonUnitalNonAssocSemiring A\ninst✝⁶ : Module R A\ninst✝⁵ : NonUnitalNonAssocSemiring B\ninst✝⁴ : Module R B\ninst✝³ : IsScalarTower R A A\ninst✝² : SMulCommClass R A A\ninst✝¹ : IsScalarTower R B B\ninst✝ : SMulCommClass R B B\nS T : NonUnitalSubalgebra R A\nS₁ T₁ : NonUnitalSubalgebra R B\n⊢ Eq (Min.min (S.prod S₁) (T.prod T₁)) ((Min.min S T).prod (Min.min S₁ T₁))","decl":"@[simp]\ntheorem prod_inf_prod {S T : NonUnitalSubalgebra R A} {S₁ T₁ : NonUnitalSubalgebra R B} :\n    S.prod S₁ ⊓ T.prod T₁ = (S ⊓ T).prod (S₁ ⊓ T₁) :=\n  SetLike.coe_injective Set.prod_inter_prod\n\n"}
{"name":"NonUnitalAlgHom.subsingleton","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\nB : Type w\ninst✝⁷ : CommSemiring R\ninst✝⁶ : NonUnitalNonAssocSemiring A\ninst✝⁵ : Module R A\ninst✝⁴ : NonUnitalNonAssocSemiring B\ninst✝³ : Module R B\ninst✝² : IsScalarTower R A A\ninst✝¹ : SMulCommClass R A A\ninst✝ : Subsingleton (NonUnitalSubalgebra R A)\n⊢ Subsingleton (NonUnitalAlgHom (MonoidHom.id R) A B)","decl":"instance _root_.NonUnitalAlgHom.subsingleton [Subsingleton (NonUnitalSubalgebra R A)] :\n    Subsingleton (A →ₙₐ[R] B) :=\n  ⟨fun f g =>\n    NonUnitalAlgHom.ext fun a =>\n      have : a ∈ (⊥ : NonUnitalSubalgebra R A) :=\n        Subsingleton.elim (⊤ : NonUnitalSubalgebra R A) ⊥ ▸ mem_top\n      (mem_bot.mp this).symm ▸ (map_zero f).trans (map_zero g).symm⟩\n\n\n"}
{"name":"NonUnitalSubalgebra.inclusion_injective","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nS T : NonUnitalSubalgebra R A\nh : LE.le S T\n⊢ Function.Injective ⇑(NonUnitalSubalgebra.inclusion h)","decl":"theorem inclusion_injective {S T : NonUnitalSubalgebra R A} (h : S ≤ T) :\n    Function.Injective (inclusion h) := fun _ _ => Subtype.ext ∘ Subtype.mk.inj\n\n"}
{"name":"NonUnitalSubalgebra.inclusion_self","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nS : NonUnitalSubalgebra R A\n⊢ Eq (NonUnitalSubalgebra.inclusion ⋯) (NonUnitalAlgHom.id R (Subtype fun x => Membership.mem S x))","decl":"@[simp]\ntheorem inclusion_self {S : NonUnitalSubalgebra R A} :\n    inclusion (le_refl S) = NonUnitalAlgHom.id R S :=\n  rfl\n\n"}
{"name":"NonUnitalSubalgebra.inclusion_mk","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nS T : NonUnitalSubalgebra R A\nh : LE.le S T\nx : A\nhx : Membership.mem S x\n⊢ Eq ((NonUnitalSubalgebra.inclusion h) ⟨x, hx⟩) ⟨x, ⋯⟩","decl":"@[simp]\ntheorem inclusion_mk {S T : NonUnitalSubalgebra R A} (h : S ≤ T) (x : A) (hx : x ∈ S) :\n    inclusion h ⟨x, hx⟩ = ⟨x, h hx⟩ :=\n  rfl\n\n"}
{"name":"NonUnitalSubalgebra.inclusion_right","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nS T : NonUnitalSubalgebra R A\nh : LE.le S T\nx : Subtype fun x => Membership.mem T x\nm : Membership.mem S ↑x\n⊢ Eq ((NonUnitalSubalgebra.inclusion h) ⟨↑x, m⟩) x","decl":"theorem inclusion_right {S T : NonUnitalSubalgebra R A} (h : S ≤ T) (x : T) (m : (x : A) ∈ S) :\n    inclusion h ⟨x, m⟩ = x :=\n  Subtype.ext rfl\n\n"}
{"name":"NonUnitalSubalgebra.inclusion_inclusion","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nS T U : NonUnitalSubalgebra R A\nhst : LE.le S T\nhtu : LE.le T U\nx : Subtype fun x => Membership.mem S x\n⊢ Eq ((NonUnitalSubalgebra.inclusion htu) ((NonUnitalSubalgebra.inclusion hst) x)) ((NonUnitalSubalgebra.inclusion ⋯) x)","decl":"@[simp]\ntheorem inclusion_inclusion {S T U : NonUnitalSubalgebra R A} (hst : S ≤ T) (htu : T ≤ U) (x : S) :\n    inclusion htu (inclusion hst x) = inclusion (le_trans hst htu) x :=\n  Subtype.ext rfl\n\n"}
{"name":"NonUnitalSubalgebra.coe_inclusion","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nS T : NonUnitalSubalgebra R A\nh : LE.le S T\ns : Subtype fun x => Membership.mem S x\n⊢ Eq ↑((NonUnitalSubalgebra.inclusion h) s) ↑s","decl":"@[simp]\ntheorem coe_inclusion {S T : NonUnitalSubalgebra R A} (h : S ≤ T) (s : S) :\n    (inclusion h s : A) = s :=\n  rfl\n\n"}
{"name":"NonUnitalSubalgebra.coe_iSup_of_directed","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁵ : CommSemiring R\ninst✝⁴ : NonUnitalNonAssocSemiring A\ninst✝³ : Module R A\ninst✝² : IsScalarTower R A A\ninst✝¹ : SMulCommClass R A A\nι : Type u_1\ninst✝ : Nonempty ι\nS : ι → NonUnitalSubalgebra R A\ndir : Directed (fun x1 x2 => LE.le x1 x2) S\n⊢ Eq (↑(iSup S)) (Set.iUnion fun i => ↑(S i))","decl":"theorem coe_iSup_of_directed [Nonempty ι] {S : ι → NonUnitalSubalgebra R A}\n    (dir : Directed (· ≤ ·) S) : ↑(iSup S) = ⋃ i, (S i : Set A) :=\n  let K : NonUnitalSubalgebra R A :=\n    { __ := NonUnitalSubsemiring.copy _ _ (NonUnitalSubsemiring.coe_iSup_of_directed dir).symm\n      smul_mem' := fun r _x hx ↦\n        let ⟨i, hi⟩ := Set.mem_iUnion.1 hx\n        Set.mem_iUnion.2 ⟨i, (S i).smul_mem' r hi⟩ }\n  have : iSup S = K := le_antisymm\n    (iSup_le fun i ↦ le_iSup (fun i ↦ (S i : Set A)) i) (Set.iUnion_subset fun _ ↦ le_iSup S _)\n  this.symm ▸ rfl\n\n"}
{"name":"NonUnitalSubalgebra.iSupLift_inclusion","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\nB : Type w\ninst✝⁷ : CommSemiring R\ninst✝⁶ : NonUnitalNonAssocSemiring A\ninst✝⁵ : Module R A\ninst✝⁴ : NonUnitalNonAssocSemiring B\ninst✝³ : Module R B\ninst✝² : IsScalarTower R A A\ninst✝¹ : SMulCommClass R A A\nι : Type u_1\ninst✝ : Nonempty ι\nK : ι → NonUnitalSubalgebra R A\ndir : Directed (fun x1 x2 => LE.le x1 x2) K\nf : (i : ι) → NonUnitalAlgHom (MonoidHom.id R) (Subtype fun x => Membership.mem (K i) x) B\nhf : ∀ (i j : ι) (h : LE.le (K i) (K j)), Eq (f i) ((f j).comp (NonUnitalSubalgebra.inclusion h))\nT : NonUnitalSubalgebra R A\nhT : Eq T (iSup K)\ni : ι\nx : Subtype fun x => Membership.mem (K i) x\nh : LE.le (K i) T\n⊢ Eq ((NonUnitalSubalgebra.iSupLift K dir f hf T hT) ((NonUnitalSubalgebra.inclusion h) x)) ((f i) x)","decl":"@[simp]\ntheorem iSupLift_inclusion {i : ι} (x : K i) (h : K i ≤ T) :\n    iSupLift K dir f hf T hT (inclusion h x) = f i x := by\n  subst T\n  dsimp [iSupLift]\n  apply Set.iUnionLift_inclusion\n  exact h\n\n"}
{"name":"NonUnitalSubalgebra.iSupLift_comp_inclusion","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\nB : Type w\ninst✝⁷ : CommSemiring R\ninst✝⁶ : NonUnitalNonAssocSemiring A\ninst✝⁵ : Module R A\ninst✝⁴ : NonUnitalNonAssocSemiring B\ninst✝³ : Module R B\ninst✝² : IsScalarTower R A A\ninst✝¹ : SMulCommClass R A A\nι : Type u_1\ninst✝ : Nonempty ι\nK : ι → NonUnitalSubalgebra R A\ndir : Directed (fun x1 x2 => LE.le x1 x2) K\nf : (i : ι) → NonUnitalAlgHom (MonoidHom.id R) (Subtype fun x => Membership.mem (K i) x) B\nhf : ∀ (i j : ι) (h : LE.le (K i) (K j)), Eq (f i) ((f j).comp (NonUnitalSubalgebra.inclusion h))\nT : NonUnitalSubalgebra R A\nhT : Eq T (iSup K)\ni : ι\nh : LE.le (K i) T\n⊢ Eq ((NonUnitalSubalgebra.iSupLift K dir f hf T hT).comp (NonUnitalSubalgebra.inclusion h)) (f i)","decl":"@[simp]\ntheorem iSupLift_comp_inclusion {i : ι} (h : K i ≤ T) :\n    (iSupLift K dir f hf T hT).comp (inclusion h) = f i := by\n  ext\n  simp only [NonUnitalAlgHom.comp_apply, iSupLift_inclusion]\n\n"}
{"name":"NonUnitalSubalgebra.iSupLift_mk","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\nB : Type w\ninst✝⁷ : CommSemiring R\ninst✝⁶ : NonUnitalNonAssocSemiring A\ninst✝⁵ : Module R A\ninst✝⁴ : NonUnitalNonAssocSemiring B\ninst✝³ : Module R B\ninst✝² : IsScalarTower R A A\ninst✝¹ : SMulCommClass R A A\nι : Type u_1\ninst✝ : Nonempty ι\nK : ι → NonUnitalSubalgebra R A\ndir : Directed (fun x1 x2 => LE.le x1 x2) K\nf : (i : ι) → NonUnitalAlgHom (MonoidHom.id R) (Subtype fun x => Membership.mem (K i) x) B\nhf : ∀ (i j : ι) (h : LE.le (K i) (K j)), Eq (f i) ((f j).comp (NonUnitalSubalgebra.inclusion h))\nT : NonUnitalSubalgebra R A\nhT : Eq T (iSup K)\ni : ι\nx : Subtype fun x => Membership.mem (K i) x\nhx : Membership.mem T ↑x\n⊢ Eq ((NonUnitalSubalgebra.iSupLift K dir f hf T hT) ⟨↑x, hx⟩) ((f i) x)","decl":"@[simp]\ntheorem iSupLift_mk {i : ι} (x : K i) (hx : (x : A) ∈ T) :\n    iSupLift K dir f hf T hT ⟨x, hx⟩ = f i x := by\n  subst hT\n  dsimp [iSupLift]\n  apply Set.iUnionLift_mk\n\n"}
{"name":"NonUnitalSubalgebra.iSupLift_of_mem","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u\nA : Type v\nB : Type w\ninst✝⁷ : CommSemiring R\ninst✝⁶ : NonUnitalNonAssocSemiring A\ninst✝⁵ : Module R A\ninst✝⁴ : NonUnitalNonAssocSemiring B\ninst✝³ : Module R B\ninst✝² : IsScalarTower R A A\ninst✝¹ : SMulCommClass R A A\nι : Type u_1\ninst✝ : Nonempty ι\nK : ι → NonUnitalSubalgebra R A\ndir : Directed (fun x1 x2 => LE.le x1 x2) K\nf : (i : ι) → NonUnitalAlgHom (MonoidHom.id R) (Subtype fun x => Membership.mem (K i) x) B\nhf : ∀ (i j : ι) (h : LE.le (K i) (K j)), Eq (f i) ((f j).comp (NonUnitalSubalgebra.inclusion h))\nT : NonUnitalSubalgebra R A\nhT : Eq T (iSup K)\ni : ι\nx : Subtype fun x => Membership.mem T x\nhx : Membership.mem (K i) ↑x\n⊢ Eq ((NonUnitalSubalgebra.iSupLift K dir f hf T hT) x) ((f i) ⟨↑x, hx⟩)","decl":"theorem iSupLift_of_mem {i : ι} (x : T) (hx : (x : A) ∈ K i) :\n    iSupLift K dir f hf T hT x = f i ⟨x, hx⟩ := by\n  subst hT\n  dsimp [iSupLift]\n  apply Set.iUnionLift_of_mem\n\n"}
{"name":"Set.smul_mem_center","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\nr : R\na : A\nha : Membership.mem (Set.center A) a\n⊢ Membership.mem (Set.center A) (HSMul.hSMul r a)","decl":"theorem _root_.Set.smul_mem_center (r : R) {a : A} (ha : a ∈ Set.center A) :\n    r • a ∈ Set.center A where\n  comm b := by rw [mul_smul_comm, smul_mul_assoc, ha.comm]\n  left_assoc b c := by rw [smul_mul_assoc, smul_mul_assoc, smul_mul_assoc, ha.left_assoc]\n  mid_assoc b c := by\n    rw [mul_smul_comm, smul_mul_assoc, smul_mul_assoc, mul_smul_comm, ha.mid_assoc]\n  right_assoc b c := by\n    rw [mul_smul_comm, mul_smul_comm, mul_smul_comm, ha.right_assoc]\n\n"}
{"name":"NonUnitalSubalgebra.coe_center","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\n⊢ Eq (↑(NonUnitalSubalgebra.center R A)) (Set.center A)","decl":"theorem coe_center : (center R A : Set A) = Set.center A :=\n  rfl\n\n"}
{"name":"NonUnitalSubalgebra.center_toNonUnitalSubsemiring","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalNonAssocSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\n⊢ Eq (NonUnitalSubalgebra.center R A).toNonUnitalSubsemiring (NonUnitalSubsemiring.center A)","decl":"@[simp]\ntheorem center_toNonUnitalSubsemiring :\n    (center R A).toNonUnitalSubsemiring = NonUnitalSubsemiring.center A :=\n  rfl\n\n"}
{"name":"NonUnitalSubalgebra.center_toNonUnitalSubring","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u_3\nA : Type u_4\ninst✝⁴ : CommRing R\ninst✝³ : NonUnitalRing A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\n⊢ Eq (NonUnitalSubalgebra.center R A).toNonUnitalSubring (NonUnitalSubring.center A)","decl":"@[simp] lemma center_toNonUnitalSubring (R A : Type*) [CommRing R] [NonUnitalRing A]\n    [Module R A] [IsScalarTower R A A] [SMulCommClass R A A] :\n    (center R A).toNonUnitalSubring = NonUnitalSubring.center A :=\n  rfl\n\n"}
{"name":"NonUnitalSubalgebra.center_eq_top","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u_1\ninst✝⁴ : CommSemiring R\nA : Type u_3\ninst✝³ : NonUnitalCommSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\n⊢ Eq (NonUnitalSubalgebra.center R A) Top.top","decl":"@[simp]\ntheorem center_eq_top (A : Type*) [NonUnitalCommSemiring A] [Module R A] [IsScalarTower R A A]\n    [SMulCommClass R A A] : center R A = ⊤ :=\n  SetLike.coe_injective (Set.center_eq_univ A)\n\n"}
{"name":"NonUnitalSubalgebra.mem_center_iff","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\na : A\n⊢ Iff (Membership.mem (NonUnitalSubalgebra.center R A) a) (∀ (b : A), Eq (HMul.hMul b a) (HMul.hMul a b))","decl":"theorem mem_center_iff {a : A} : a ∈ center R A ↔ ∀ b : A, b * a = a * b :=\n  Subsemigroup.mem_center_iff\n\n"}
{"name":"Set.smul_mem_centralizer","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ns : Set A\nr : R\na : A\nha : Membership.mem s.centralizer a\n⊢ Membership.mem s.centralizer (HSMul.hSMul r a)","decl":"@[simp]\ntheorem _root_.Set.smul_mem_centralizer {s : Set A} (r : R) {a : A} (ha : a ∈ s.centralizer) :\n    r • a ∈ s.centralizer :=\n  fun x hx => by rw [mul_smul_comm, smul_mul_assoc, ha x hx]\n\n"}
{"name":"NonUnitalSubalgebra.coe_centralizer","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ns : Set A\n⊢ Eq (↑(NonUnitalSubalgebra.centralizer R s)) s.centralizer","decl":"@[simp, norm_cast]\ntheorem coe_centralizer (s : Set A) : (centralizer R s : Set A) = s.centralizer :=\n  rfl\n\n"}
{"name":"NonUnitalSubalgebra.mem_centralizer_iff","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ns : Set A\nz : A\n⊢ Iff (Membership.mem (NonUnitalSubalgebra.centralizer R s) z) (∀ (g : A), Membership.mem s g → Eq (HMul.hMul g z) (HMul.hMul z g))","decl":"theorem mem_centralizer_iff {s : Set A} {z : A} : z ∈ centralizer R s ↔ ∀ g ∈ s, g * z = z * g :=\n  Iff.rfl\n\n"}
{"name":"NonUnitalSubalgebra.centralizer_le","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ns t : Set A\nh : HasSubset.Subset s t\n⊢ LE.le (NonUnitalSubalgebra.centralizer R t) (NonUnitalSubalgebra.centralizer R s)","decl":"theorem centralizer_le (s t : Set A) (h : s ⊆ t) : centralizer R t ≤ centralizer R s :=\n  Set.centralizer_subset h\n\n"}
{"name":"NonUnitalSubalgebra.centralizer_univ","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\n⊢ Eq (NonUnitalSubalgebra.centralizer R Set.univ) (NonUnitalSubalgebra.center R A)","decl":"@[simp]\ntheorem centralizer_univ : centralizer R Set.univ = center R A :=\n  SetLike.ext' (Set.centralizer_univ A)\n\n"}
{"name":"NonUnitalAlgebra.adjoin_le_centralizer_centralizer","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\ns : Set A\n⊢ LE.le (NonUnitalAlgebra.adjoin R s) (NonUnitalSubalgebra.centralizer R ↑(NonUnitalSubalgebra.centralizer R s))","decl":"variable (R) in\nlemma adjoin_le_centralizer_centralizer (s : Set A) :\n    adjoin R s ≤ centralizer R (centralizer R s) :=\n  adjoin_le Set.subset_centralizer_centralizer\n\n"}
{"name":"NonUnitalAlgebra.commute_of_mem_adjoin_of_forall_mem_commute","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\na b : A\ns : Set A\nhb : Membership.mem (NonUnitalAlgebra.adjoin R s) b\nh : ∀ (b : A), Membership.mem s b → Commute a b\n⊢ Commute a b","decl":"lemma commute_of_mem_adjoin_of_forall_mem_commute {a b : A} {s : Set A}\n    (hb : b ∈ adjoin R s) (h : ∀ b ∈ s, Commute a b) :\n    Commute a b := by\n  have : a ∈ centralizer R s := by simpa only [Commute.symm_iff (a := a)] using h\n  exact adjoin_le_centralizer_centralizer R s hb a this\n\n"}
{"name":"NonUnitalAlgebra.commute_of_mem_adjoin_singleton_of_commute","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\na b c : A\nhc : Membership.mem (NonUnitalAlgebra.adjoin R (Singleton.singleton b)) c\nh : Commute a b\n⊢ Commute a c","decl":"lemma commute_of_mem_adjoin_singleton_of_commute {a b c : A}\n    (hc : c ∈ adjoin R {b}) (h : Commute a b) :\n    Commute a c :=\n  commute_of_mem_adjoin_of_forall_mem_commute hc <| by simpa\n\n"}
{"name":"NonUnitalAlgebra.commute_of_mem_adjoin_self","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝⁴ : CommSemiring R\ninst✝³ : NonUnitalSemiring A\ninst✝² : Module R A\ninst✝¹ : IsScalarTower R A A\ninst✝ : SMulCommClass R A A\na b : A\nhb : Membership.mem (NonUnitalAlgebra.adjoin R (Singleton.singleton a)) b\n⊢ Commute a b","decl":"lemma commute_of_mem_adjoin_self {a b : A} (hb : b ∈ adjoin R {a}) :\n    Commute a b :=\n  commute_of_mem_adjoin_singleton_of_commute hb rfl\n\n"}
{"name":"mem_nonUnitalSubalgebraOfNonUnitalSubsemiring","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u_1\ninst✝ : NonUnitalNonAssocSemiring R\nx : R\nS : NonUnitalSubsemiring R\n⊢ Iff (Membership.mem (nonUnitalSubalgebraOfNonUnitalSubsemiring S) x) (Membership.mem S x)","decl":"@[simp]\ntheorem mem_nonUnitalSubalgebraOfNonUnitalSubsemiring {x : R} {S : NonUnitalSubsemiring R} :\n    x ∈ nonUnitalSubalgebraOfNonUnitalSubsemiring S ↔ x ∈ S :=\n  Iff.rfl\n\n"}
{"name":"mem_nonUnitalSubalgebraOfNonUnitalSubring","module":"Mathlib.Algebra.Algebra.NonUnitalSubalgebra","initialProofState":"R : Type u_1\ninst✝ : NonUnitalNonAssocRing R\nx : R\nS : NonUnitalSubring R\n⊢ Iff (Membership.mem (nonUnitalSubalgebraOfNonUnitalSubring S) x) (Membership.mem S x)","decl":"@[simp]\ntheorem mem_nonUnitalSubalgebraOfNonUnitalSubring {x : R} {S : NonUnitalSubring R} :\n    x ∈ nonUnitalSubalgebraOfNonUnitalSubring S ↔ x ∈ S :=\n  Iff.rfl\n\n"}
