{"name":"Units.coe_dvd","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : Monoid α\na : α\nu : Units α\n⊢ Dvd.dvd (↑u) a","decl":"/-- Elements of the unit group of a monoid represented as elements of the monoid\n    divide any element of the monoid. -/\ntheorem coe_dvd : ↑u ∣ a :=\n  ⟨↑u⁻¹ * a, by simp⟩\n\n"}
{"name":"Units.dvd_mul_right","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : Monoid α\na b : α\nu : Units α\n⊢ Iff (Dvd.dvd a (HMul.hMul b ↑u)) (Dvd.dvd a b)","decl":"/-- In a monoid, an element `a` divides an element `b` iff `a` divides all\n    associates of `b`. -/\ntheorem dvd_mul_right : a ∣ b * u ↔ a ∣ b :=\n  Iff.intro (fun ⟨c, eq⟩ ↦ ⟨c * ↑u⁻¹, by rw [← mul_assoc, ← eq, Units.mul_inv_cancel_right]⟩)\n    fun ⟨_, eq⟩ ↦ eq.symm ▸ (_root_.dvd_mul_right _ _).mul_right _\n\n"}
{"name":"Units.mul_right_dvd","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : Monoid α\na b : α\nu : Units α\n⊢ Iff (Dvd.dvd (HMul.hMul a ↑u) b) (Dvd.dvd a b)","decl":"/-- In a monoid, an element `a` divides an element `b` iff all associates of `a` divide `b`. -/\ntheorem mul_right_dvd : a * u ∣ b ↔ a ∣ b :=\n  Iff.intro (fun ⟨c, eq⟩ => ⟨↑u * c, eq.trans (mul_assoc _ _ _)⟩) fun h =>\n    dvd_trans (Dvd.intro (↑u⁻¹) (by rw [mul_assoc, u.mul_inv, mul_one])) h\n\n"}
{"name":"Units.dvd_mul_left","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\na b : α\nu : Units α\n⊢ Iff (Dvd.dvd a (HMul.hMul (↑u) b)) (Dvd.dvd a b)","decl":"/-- In a commutative monoid, an element `a` divides an element `b` iff `a` divides all left\n    associates of `b`. -/\ntheorem dvd_mul_left : a ∣ u * b ↔ a ∣ b := by\n  rw [mul_comm]\n  apply dvd_mul_right\n\n"}
{"name":"Units.mul_left_dvd","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\na b : α\nu : Units α\n⊢ Iff (Dvd.dvd (HMul.hMul (↑u) a) b) (Dvd.dvd a b)","decl":"/-- In a commutative monoid, an element `a` divides an element `b` iff all\n  left associates of `a` divide `b`. -/\ntheorem mul_left_dvd : ↑u * a ∣ b ↔ a ∣ b := by\n  rw [mul_comm]\n  apply mul_right_dvd\n\n"}
{"name":"IsUnit.dvd","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : Monoid α\na u : α\nhu : IsUnit u\n⊢ Dvd.dvd u a","decl":"/-- Units of a monoid divide any element of the monoid. -/\n@[simp]\ntheorem dvd (hu : IsUnit u) : u ∣ a := by\n  rcases hu with ⟨u, rfl⟩\n  apply Units.coe_dvd\n\n"}
{"name":"IsUnit.dvd_mul_right","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : Monoid α\na b u : α\nhu : IsUnit u\n⊢ Iff (Dvd.dvd a (HMul.hMul b u)) (Dvd.dvd a b)","decl":"@[simp]\ntheorem dvd_mul_right (hu : IsUnit u) : a ∣ b * u ↔ a ∣ b := by\n  rcases hu with ⟨u, rfl⟩\n  apply Units.dvd_mul_right\n\n"}
{"name":"IsUnit.mul_right_dvd","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : Monoid α\na b u : α\nhu : IsUnit u\n⊢ Iff (Dvd.dvd (HMul.hMul a u) b) (Dvd.dvd a b)","decl":"/-- In a monoid, an element a divides an element b iff all associates of `a` divide `b`. -/\n@[simp]\ntheorem mul_right_dvd (hu : IsUnit u) : a * u ∣ b ↔ a ∣ b := by\n  rcases hu with ⟨u, rfl⟩\n  apply Units.mul_right_dvd\n\n"}
{"name":"IsUnit.isPrimal","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : Monoid α\nu : α\nhu : IsUnit u\n⊢ IsPrimal u","decl":"theorem isPrimal (hu : IsUnit u) : IsPrimal u :=\n  fun _ _ _ ↦ ⟨u, 1, hu.dvd, one_dvd _, (mul_one u).symm⟩\n\n"}
{"name":"IsUnit.dvd_mul_left","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\na b u : α\nhu : IsUnit u\n⊢ Iff (Dvd.dvd a (HMul.hMul u b)) (Dvd.dvd a b)","decl":"/-- In a commutative monoid, an element `a` divides an element `b` iff `a` divides all left\n    associates of `b`. -/\n@[simp]\ntheorem dvd_mul_left (hu : IsUnit u) : a ∣ u * b ↔ a ∣ b := by\n  rcases hu with ⟨u, rfl⟩\n  apply Units.dvd_mul_left\n\n"}
{"name":"IsUnit.mul_left_dvd","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\na b u : α\nhu : IsUnit u\n⊢ Iff (Dvd.dvd (HMul.hMul u a) b) (Dvd.dvd a b)","decl":"/-- In a commutative monoid, an element `a` divides an element `b` iff all\n  left associates of `a` divide `b`. -/\n@[simp]\ntheorem mul_left_dvd (hu : IsUnit u) : u * a ∣ b ↔ a ∣ b := by\n  rcases hu with ⟨u, rfl⟩\n  apply Units.mul_left_dvd\n\n"}
{"name":"isUnit_iff_dvd_one","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx : α\n⊢ Iff (IsUnit x) (Dvd.dvd x 1)","decl":"theorem isUnit_iff_dvd_one {x : α} : IsUnit x ↔ x ∣ 1 :=\n  ⟨IsUnit.dvd, fun ⟨y, h⟩ => ⟨⟨x, y, h.symm, by rw [h, mul_comm]⟩, rfl⟩⟩\n\n"}
{"name":"isUnit_iff_forall_dvd","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx : α\n⊢ Iff (IsUnit x) (∀ (y : α), Dvd.dvd x y)","decl":"theorem isUnit_iff_forall_dvd {x : α} : IsUnit x ↔ ∀ y, x ∣ y :=\n  isUnit_iff_dvd_one.trans ⟨fun h _ => h.trans (one_dvd _), fun h => h _⟩\n\n"}
{"name":"isUnit_of_dvd_unit","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx y : α\nxy : Dvd.dvd x y\nhu : IsUnit y\n⊢ IsUnit x","decl":"theorem isUnit_of_dvd_unit {x y : α} (xy : x ∣ y) (hu : IsUnit y) : IsUnit x :=\n  isUnit_iff_dvd_one.2 <| xy.trans <| isUnit_iff_dvd_one.1 hu\n\n"}
{"name":"isUnit_of_dvd_one","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\na : α\nh : Dvd.dvd a 1\n⊢ IsUnit a","decl":"theorem isUnit_of_dvd_one {a : α} (h : a ∣ 1) : IsUnit (a : α) :=\n  isUnit_iff_dvd_one.mpr h\n\n"}
{"name":"not_isUnit_of_not_isUnit_dvd","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\na b : α\nha : Not (IsUnit a)\nhb : Dvd.dvd a b\n⊢ Not (IsUnit b)","decl":"theorem not_isUnit_of_not_isUnit_dvd {a b : α} (ha : ¬IsUnit a) (hb : a ∣ b) : ¬IsUnit b :=\n  mt (isUnit_of_dvd_unit hb) ha\n\n"}
{"name":"IsRelPrime.symm","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx y : α\nH : IsRelPrime x y\n⊢ IsRelPrime y x","decl":"@[symm] theorem IsRelPrime.symm (H : IsRelPrime x y) : IsRelPrime y x := fun _ hx hy ↦ H hy hx\n\n"}
{"name":"isRelPrime_comm","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx y : α\n⊢ Iff (IsRelPrime x y) (IsRelPrime y x)","decl":"theorem isRelPrime_comm : IsRelPrime x y ↔ IsRelPrime y x :=\n  ⟨IsRelPrime.symm, IsRelPrime.symm⟩\n\n"}
{"name":"isRelPrime_self","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx : α\n⊢ Iff (IsRelPrime x x) (IsUnit x)","decl":"theorem isRelPrime_self : IsRelPrime x x ↔ IsUnit x :=\n  ⟨(· dvd_rfl dvd_rfl), fun hu _ _ dvd ↦ isUnit_of_dvd_unit dvd hu⟩\n\n"}
{"name":"IsUnit.isRelPrime_left","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx y : α\nh : IsUnit x\n⊢ IsRelPrime x y","decl":"theorem IsUnit.isRelPrime_left (h : IsUnit x) : IsRelPrime x y :=\n  fun _ hx _ ↦ isUnit_of_dvd_unit hx h\n"}
{"name":"IsUnit.isRelPrime_right","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx y : α\nh : IsUnit y\n⊢ IsRelPrime x y","decl":"theorem IsUnit.isRelPrime_right (h : IsUnit y) : IsRelPrime x y := h.isRelPrime_left.symm\n"}
{"name":"isRelPrime_one_left","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx : α\n⊢ IsRelPrime 1 x","decl":"theorem isRelPrime_one_left : IsRelPrime 1 x := isUnit_one.isRelPrime_left\n"}
{"name":"isRelPrime_one_right","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx : α\n⊢ IsRelPrime x 1","decl":"theorem isRelPrime_one_right : IsRelPrime x 1 := isUnit_one.isRelPrime_right\n\n"}
{"name":"IsRelPrime.of_mul_left_left","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx y z : α\nH : IsRelPrime (HMul.hMul x y) z\n⊢ IsRelPrime x z","decl":"theorem IsRelPrime.of_mul_left_left (H : IsRelPrime (x * y) z) : IsRelPrime x z :=\n  fun _ hx ↦ H (dvd_mul_of_dvd_left hx _)\n\n"}
{"name":"IsRelPrime.of_mul_left_right","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx y z : α\nH : IsRelPrime (HMul.hMul x y) z\n⊢ IsRelPrime y z","decl":"theorem IsRelPrime.of_mul_left_right (H : IsRelPrime (x * y) z) : IsRelPrime y z :=\n  (mul_comm x y ▸ H).of_mul_left_left\n\n"}
{"name":"IsRelPrime.of_mul_right_left","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx y z : α\nH : IsRelPrime x (HMul.hMul y z)\n⊢ IsRelPrime x y","decl":"theorem IsRelPrime.of_mul_right_left (H : IsRelPrime x (y * z)) : IsRelPrime x y := by\n  rw [isRelPrime_comm] at H ⊢\n  exact H.of_mul_left_left\n\n"}
{"name":"IsRelPrime.of_mul_right_right","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx y z : α\nH : IsRelPrime x (HMul.hMul y z)\n⊢ IsRelPrime x z","decl":"theorem IsRelPrime.of_mul_right_right (H : IsRelPrime x (y * z)) : IsRelPrime x z :=\n  (mul_comm y z ▸ H).of_mul_right_left\n\n"}
{"name":"IsRelPrime.of_dvd_left","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx y z : α\nh : IsRelPrime y z\ndvd : Dvd.dvd x y\n⊢ IsRelPrime x z","decl":"theorem IsRelPrime.of_dvd_left (h : IsRelPrime y z) (dvd : x ∣ y) : IsRelPrime x z := by\n  obtain ⟨d, rfl⟩ := dvd; exact IsRelPrime.of_mul_left_left h\n\n"}
{"name":"IsRelPrime.of_dvd_right","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx y z : α\nh : IsRelPrime z y\ndvd : Dvd.dvd x y\n⊢ IsRelPrime z x","decl":"theorem IsRelPrime.of_dvd_right (h : IsRelPrime z y) (dvd : x ∣ y) : IsRelPrime z x :=\n  (h.symm.of_dvd_left dvd).symm\n\n"}
{"name":"IsRelPrime.isUnit_of_dvd","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx y : α\nH : IsRelPrime x y\nd : Dvd.dvd x y\n⊢ IsUnit x","decl":"theorem IsRelPrime.isUnit_of_dvd (H : IsRelPrime x y) (d : x ∣ y) : IsUnit x := H dvd_rfl d\n\n"}
{"name":"isRelPrime_mul_unit_left_left","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx y z : α\nhu : IsUnit x\n⊢ Iff (IsRelPrime (HMul.hMul x y) z) (IsRelPrime y z)","decl":"theorem isRelPrime_mul_unit_left_left : IsRelPrime (x * y) z ↔ IsRelPrime y z :=\n  ⟨IsRelPrime.of_mul_left_right, fun H _ h ↦ H (hu.dvd_mul_left.mp h)⟩\n\n"}
{"name":"isRelPrime_mul_unit_left_right","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx y z : α\nhu : IsUnit x\n⊢ Iff (IsRelPrime y (HMul.hMul x z)) (IsRelPrime y z)","decl":"theorem isRelPrime_mul_unit_left_right : IsRelPrime y (x * z) ↔ IsRelPrime y z := by\n  rw [isRelPrime_comm, isRelPrime_mul_unit_left_left hu, isRelPrime_comm]\n\n"}
{"name":"isRelPrime_mul_unit_left","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx y z : α\nhu : IsUnit x\n⊢ Iff (IsRelPrime (HMul.hMul x y) (HMul.hMul x z)) (IsRelPrime y z)","decl":"theorem isRelPrime_mul_unit_left : IsRelPrime (x * y) (x * z) ↔ IsRelPrime y z := by\n  rw [isRelPrime_mul_unit_left_left hu, isRelPrime_mul_unit_left_right hu]\n\n"}
{"name":"isRelPrime_mul_unit_right_left","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx y z : α\nhu : IsUnit x\n⊢ Iff (IsRelPrime (HMul.hMul y x) z) (IsRelPrime y z)","decl":"theorem isRelPrime_mul_unit_right_left : IsRelPrime (y * x) z ↔ IsRelPrime y z := by\n  rw [mul_comm, isRelPrime_mul_unit_left_left hu]\n\n"}
{"name":"isRelPrime_mul_unit_right_right","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx y z : α\nhu : IsUnit x\n⊢ Iff (IsRelPrime y (HMul.hMul z x)) (IsRelPrime y z)","decl":"theorem isRelPrime_mul_unit_right_right : IsRelPrime y (z * x) ↔ IsRelPrime y z := by\n  rw [mul_comm, isRelPrime_mul_unit_left_right hu]\n\n"}
{"name":"isRelPrime_mul_unit_right","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx y z : α\nhu : IsUnit x\n⊢ Iff (IsRelPrime (HMul.hMul y x) (HMul.hMul z x)) (IsRelPrime y z)","decl":"theorem isRelPrime_mul_unit_right : IsRelPrime (y * x) (z * x) ↔ IsRelPrime y z := by\n  rw [isRelPrime_mul_unit_right_left hu, isRelPrime_mul_unit_right_right hu]\n\n"}
{"name":"IsRelPrime.dvd_of_dvd_mul_right_of_isPrimal","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx y z : α\nH1 : IsRelPrime x z\nH2 : Dvd.dvd x (HMul.hMul y z)\nh : IsPrimal x\n⊢ Dvd.dvd x y","decl":"theorem IsRelPrime.dvd_of_dvd_mul_right_of_isPrimal (H1 : IsRelPrime x z) (H2 : x ∣ y * z)\n    (h : IsPrimal x) : x ∣ y := by\n  obtain ⟨a, b, ha, hb, rfl⟩ := h H2\n  exact (H1.of_mul_left_right.isUnit_of_dvd hb).mul_right_dvd.mpr ha\n\n"}
{"name":"IsRelPrime.dvd_of_dvd_mul_left_of_isPrimal","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx y z : α\nH1 : IsRelPrime x y\nH2 : Dvd.dvd x (HMul.hMul y z)\nh : IsPrimal x\n⊢ Dvd.dvd x z","decl":"theorem IsRelPrime.dvd_of_dvd_mul_left_of_isPrimal (H1 : IsRelPrime x y) (H2 : x ∣ y * z)\n    (h : IsPrimal x) : x ∣ z :=\n  H1.dvd_of_dvd_mul_right_of_isPrimal (mul_comm y z ▸ H2) h\n\n"}
{"name":"IsRelPrime.mul_dvd_of_right_isPrimal","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx y z : α\nH : IsRelPrime x y\nH1 : Dvd.dvd x z\nH2 : Dvd.dvd y z\nhy : IsPrimal y\n⊢ Dvd.dvd (HMul.hMul x y) z","decl":"theorem IsRelPrime.mul_dvd_of_right_isPrimal (H : IsRelPrime x y) (H1 : x ∣ z) (H2 : y ∣ z)\n    (hy : IsPrimal y) : x * y ∣ z := by\n  obtain ⟨w, rfl⟩ := H1\n  exact mul_dvd_mul_left x (H.symm.dvd_of_dvd_mul_left_of_isPrimal H2 hy)\n\n"}
{"name":"IsRelPrime.mul_dvd_of_left_isPrimal","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝ : CommMonoid α\nx y z : α\nH : IsRelPrime x y\nH1 : Dvd.dvd x z\nH2 : Dvd.dvd y z\nhx : IsPrimal x\n⊢ Dvd.dvd (HMul.hMul x y) z","decl":"theorem IsRelPrime.mul_dvd_of_left_isPrimal (H : IsRelPrime x y) (H1 : x ∣ z) (H2 : y ∣ z)\n    (hx : IsPrimal x) : x * y ∣ z := by\n  rw [mul_comm]; exact H.symm.mul_dvd_of_right_isPrimal H2 H1 hx\n\n"}
{"name":"IsRelPrime.dvd_of_dvd_mul_right","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝¹ : CommMonoid α\nx y z : α\ninst✝ : DecompositionMonoid α\nH1 : IsRelPrime x z\nH2 : Dvd.dvd x (HMul.hMul y z)\n⊢ Dvd.dvd x y","decl":"theorem IsRelPrime.dvd_of_dvd_mul_right (H1 : IsRelPrime x z) (H2 : x ∣ y * z) : x ∣ y :=\n  H1.dvd_of_dvd_mul_right_of_isPrimal H2 (DecompositionMonoid.primal x)\n\n"}
{"name":"IsRelPrime.dvd_of_dvd_mul_left","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝¹ : CommMonoid α\nx y z : α\ninst✝ : DecompositionMonoid α\nH1 : IsRelPrime x y\nH2 : Dvd.dvd x (HMul.hMul y z)\n⊢ Dvd.dvd x z","decl":"theorem IsRelPrime.dvd_of_dvd_mul_left (H1 : IsRelPrime x y) (H2 : x ∣ y * z) : x ∣ z :=\n  H1.dvd_of_dvd_mul_right (mul_comm y z ▸ H2)\n\n"}
{"name":"IsRelPrime.mul_left","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝¹ : CommMonoid α\nx y z : α\ninst✝ : DecompositionMonoid α\nH1 : IsRelPrime x z\nH2 : IsRelPrime y z\n⊢ IsRelPrime (HMul.hMul x y) z","decl":"theorem IsRelPrime.mul_left (H1 : IsRelPrime x z) (H2 : IsRelPrime y z) : IsRelPrime (x * y) z :=\n  fun _ h hz ↦ by\n    obtain ⟨a, b, ha, hb, rfl⟩ := exists_dvd_and_dvd_of_dvd_mul h\n    exact (H1 ha <| (dvd_mul_right a b).trans hz).mul (H2 hb <| (dvd_mul_left b a).trans hz)\n\n"}
{"name":"IsRelPrime.mul_right","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝¹ : CommMonoid α\nx y z : α\ninst✝ : DecompositionMonoid α\nH1 : IsRelPrime x y\nH2 : IsRelPrime x z\n⊢ IsRelPrime x (HMul.hMul y z)","decl":"theorem IsRelPrime.mul_right (H1 : IsRelPrime x y) (H2 : IsRelPrime x z) :\n    IsRelPrime x (y * z) := by\n  rw [isRelPrime_comm] at H1 H2 ⊢; exact H1.mul_left H2\n\n"}
{"name":"IsRelPrime.mul_left_iff","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝¹ : CommMonoid α\nx y z : α\ninst✝ : DecompositionMonoid α\n⊢ Iff (IsRelPrime (HMul.hMul x y) z) (And (IsRelPrime x z) (IsRelPrime y z))","decl":"theorem IsRelPrime.mul_left_iff : IsRelPrime (x * y) z ↔ IsRelPrime x z ∧ IsRelPrime y z :=\n  ⟨fun H ↦ ⟨H.of_mul_left_left, H.of_mul_left_right⟩, fun ⟨H1, H2⟩ ↦ H1.mul_left H2⟩\n\n"}
{"name":"IsRelPrime.mul_right_iff","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝¹ : CommMonoid α\nx y z : α\ninst✝ : DecompositionMonoid α\n⊢ Iff (IsRelPrime x (HMul.hMul y z)) (And (IsRelPrime x y) (IsRelPrime x z))","decl":"theorem IsRelPrime.mul_right_iff : IsRelPrime x (y * z) ↔ IsRelPrime x y ∧ IsRelPrime x z :=\n  ⟨fun H ↦ ⟨H.of_mul_right_left, H.of_mul_right_right⟩, fun ⟨H1, H2⟩ ↦ H1.mul_right H2⟩\n\n"}
{"name":"IsRelPrime.mul_dvd","module":"Mathlib.Algebra.Divisibility.Units","initialProofState":"α : Type u_1\ninst✝¹ : CommMonoid α\nx y z : α\ninst✝ : DecompositionMonoid α\nH : IsRelPrime x y\nH1 : Dvd.dvd x z\nH2 : Dvd.dvd y z\n⊢ Dvd.dvd (HMul.hMul x y) z","decl":"theorem IsRelPrime.mul_dvd (H : IsRelPrime x y) (H1 : x ∣ z) (H2 : y ∣ z) : x * y ∣ z :=\n  H.mul_dvd_of_left_isPrimal H1 H2 (DecompositionMonoid.primal x)\n\n"}
