{"name":"Equiv.Perm.viaEmbedding_apply","module":"Mathlib.GroupTheory.Perm.ViaEmbedding","initialProofState":"α : Type u_1\nβ : Type u_2\ne : Equiv.Perm α\nι : Function.Embedding α β\nx : α\n⊢ Eq ((e.viaEmbedding ι) (ι x)) (ι (e x))","decl":"open scoped Classical in\ntheorem viaEmbedding_apply (x : α) : e.viaEmbedding ι (ι x) = ι (e x) :=\n  extendDomain_apply_image e (ofInjective ι.1 ι.2) x\n\n"}
{"name":"Equiv.Perm.viaEmbedding_apply_of_not_mem","module":"Mathlib.GroupTheory.Perm.ViaEmbedding","initialProofState":"α : Type u_1\nβ : Type u_2\ne : Equiv.Perm α\nι : Function.Embedding α β\nx : β\nhx : Not (Membership.mem (Set.range ⇑ι) x)\n⊢ Eq ((e.viaEmbedding ι) x) x","decl":"open scoped Classical in\ntheorem viaEmbedding_apply_of_not_mem (x : β) (hx : x ∉ Set.range ι) : e.viaEmbedding ι x = x :=\n  extendDomain_apply_not_subtype e (ofInjective ι.1 ι.2) hx\n\n"}
{"name":"Equiv.Perm.viaEmbeddingHom_apply","module":"Mathlib.GroupTheory.Perm.ViaEmbedding","initialProofState":"α : Type u_1\nβ : Type u_2\ne : Equiv.Perm α\nι : Function.Embedding α β\n⊢ Eq ((Equiv.Perm.viaEmbeddingHom ι) e) (e.viaEmbedding ι)","decl":"theorem viaEmbeddingHom_apply : viaEmbeddingHom ι e = viaEmbedding e ι :=\n  rfl\n\n"}
{"name":"Equiv.Perm.viaEmbeddingHom_injective","module":"Mathlib.GroupTheory.Perm.ViaEmbedding","initialProofState":"α : Type u_1\nβ : Type u_2\nι : Function.Embedding α β\n⊢ Function.Injective ⇑(Equiv.Perm.viaEmbeddingHom ι)","decl":"open scoped Classical in\ntheorem viaEmbeddingHom_injective : Function.Injective (viaEmbeddingHom ι) :=\n  extendDomainHom_injective (ofInjective ι.1 ι.2)\n\n"}
