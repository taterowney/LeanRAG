{"name":"Asymptotics.IsBigO.antisymm","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\nF : Type u_4\ninst✝¹ : Norm E\ninst✝ : Norm F\nf : α → E\ng : α → F\nl : Filter α\nh₁ : Asymptotics.IsBigO l f g\nh₂ : Asymptotics.IsBigO l g f\n⊢ Asymptotics.IsTheta l f g","decl":"theorem IsBigO.antisymm (h₁ : f =O[l] g) (h₂ : g =O[l] f) : f =Θ[l] g :=\n  ⟨h₁, h₂⟩\n\n"}
{"name":"Asymptotics.IsTheta.isBigO","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\nF : Type u_4\ninst✝¹ : Norm E\ninst✝ : Norm F\nf : α → E\ng : α → F\nl : Filter α\nh : Asymptotics.IsTheta l f g\n⊢ Asymptotics.IsBigO l f g","decl":"lemma IsTheta.isBigO (h : f =Θ[l] g) : f =O[l] g := h.1\n\n"}
{"name":"Asymptotics.IsTheta.isBigO_symm","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\nF : Type u_4\ninst✝¹ : Norm E\ninst✝ : Norm F\nf : α → E\ng : α → F\nl : Filter α\nh : Asymptotics.IsTheta l f g\n⊢ Asymptotics.IsBigO l g f","decl":"lemma IsTheta.isBigO_symm (h : f =Θ[l] g) : g =O[l] f := h.2\n\n"}
{"name":"Asymptotics.isTheta_refl","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\ninst✝ : Norm E\nf : α → E\nl : Filter α\n⊢ Asymptotics.IsTheta l f f","decl":"@[refl]\ntheorem isTheta_refl (f : α → E) (l : Filter α) : f =Θ[l] f :=\n  ⟨isBigO_refl _ _, isBigO_refl _ _⟩\n\n"}
{"name":"Asymptotics.isTheta_rfl","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\ninst✝ : Norm E\nf : α → E\nl : Filter α\n⊢ Asymptotics.IsTheta l f f","decl":"theorem isTheta_rfl : f =Θ[l] f :=\n  isTheta_refl _ _\n\n"}
{"name":"Asymptotics.IsTheta.symm","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\nF : Type u_4\ninst✝¹ : Norm E\ninst✝ : Norm F\nf : α → E\ng : α → F\nl : Filter α\nh : Asymptotics.IsTheta l f g\n⊢ Asymptotics.IsTheta l g f","decl":"@[symm]\nnonrec theorem IsTheta.symm (h : f =Θ[l] g) : g =Θ[l] f :=\n  h.symm\n\n"}
{"name":"Asymptotics.isTheta_comm","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\nF : Type u_4\ninst✝¹ : Norm E\ninst✝ : Norm F\nf : α → E\ng : α → F\nl : Filter α\n⊢ Iff (Asymptotics.IsTheta l f g) (Asymptotics.IsTheta l g f)","decl":"theorem isTheta_comm : f =Θ[l] g ↔ g =Θ[l] f :=\n  ⟨fun h ↦ h.symm, fun h ↦ h.symm⟩\n\n"}
{"name":"Asymptotics.IsTheta.trans","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\nG : Type u_5\nF' : Type u_7\ninst✝² : Norm E\ninst✝¹ : Norm G\ninst✝ : SeminormedAddCommGroup F'\nl : Filter α\nf : α → E\ng : α → F'\nk : α → G\nh₁ : Asymptotics.IsTheta l f g\nh₂ : Asymptotics.IsTheta l g k\n⊢ Asymptotics.IsTheta l f k","decl":"@[trans]\ntheorem IsTheta.trans {f : α → E} {g : α → F'} {k : α → G} (h₁ : f =Θ[l] g) (h₂ : g =Θ[l] k) :\n    f =Θ[l] k :=\n  ⟨h₁.1.trans h₂.1, h₂.2.trans h₁.2⟩\n\n-- Porting note (https://github.com/leanprover-community/mathlib4/issues/10754): added instance\n"}
{"name":"Asymptotics.IsBigO.trans_isTheta","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\nG : Type u_5\nF' : Type u_7\ninst✝² : Norm E\ninst✝¹ : Norm G\ninst✝ : SeminormedAddCommGroup F'\nl : Filter α\nf : α → E\ng : α → F'\nk : α → G\nh₁ : Asymptotics.IsBigO l f g\nh₂ : Asymptotics.IsTheta l g k\n⊢ Asymptotics.IsBigO l f k","decl":"@[trans]\ntheorem IsBigO.trans_isTheta {f : α → E} {g : α → F'} {k : α → G} (h₁ : f =O[l] g)\n    (h₂ : g =Θ[l] k) : f =O[l] k :=\n  h₁.trans h₂.1\n\n-- Porting note (https://github.com/leanprover-community/mathlib4/issues/10754): added instance\n"}
{"name":"Asymptotics.IsTheta.trans_isBigO","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\nG : Type u_5\nF' : Type u_7\ninst✝² : Norm E\ninst✝¹ : Norm G\ninst✝ : SeminormedAddCommGroup F'\nl : Filter α\nf : α → E\ng : α → F'\nk : α → G\nh₁ : Asymptotics.IsTheta l f g\nh₂ : Asymptotics.IsBigO l g k\n⊢ Asymptotics.IsBigO l f k","decl":"@[trans]\ntheorem IsTheta.trans_isBigO {f : α → E} {g : α → F'} {k : α → G} (h₁ : f =Θ[l] g)\n    (h₂ : g =O[l] k) : f =O[l] k :=\n  h₁.1.trans h₂\n\n-- Porting note (https://github.com/leanprover-community/mathlib4/issues/10754): added instance\n"}
{"name":"Asymptotics.IsLittleO.trans_isTheta","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\nF : Type u_4\nG' : Type u_8\ninst✝² : Norm E\ninst✝¹ : Norm F\ninst✝ : SeminormedAddCommGroup G'\nl : Filter α\nf : α → E\ng : α → F\nk : α → G'\nh₁ : Asymptotics.IsLittleO l f g\nh₂ : Asymptotics.IsTheta l g k\n⊢ Asymptotics.IsLittleO l f k","decl":"@[trans]\ntheorem IsLittleO.trans_isTheta {f : α → E} {g : α → F} {k : α → G'} (h₁ : f =o[l] g)\n    (h₂ : g =Θ[l] k) : f =o[l] k :=\n  h₁.trans_isBigO h₂.1\n\n-- Porting note (https://github.com/leanprover-community/mathlib4/issues/10754): added instance\n"}
{"name":"Asymptotics.IsTheta.trans_isLittleO","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\nG : Type u_5\nF' : Type u_7\ninst✝² : Norm E\ninst✝¹ : Norm G\ninst✝ : SeminormedAddCommGroup F'\nl : Filter α\nf : α → E\ng : α → F'\nk : α → G\nh₁ : Asymptotics.IsTheta l f g\nh₂ : Asymptotics.IsLittleO l g k\n⊢ Asymptotics.IsLittleO l f k","decl":"@[trans]\ntheorem IsTheta.trans_isLittleO {f : α → E} {g : α → F'} {k : α → G} (h₁ : f =Θ[l] g)\n    (h₂ : g =o[l] k) : f =o[l] k :=\n  h₁.1.trans_isLittleO h₂\n\n-- Porting note (https://github.com/leanprover-community/mathlib4/issues/10754): added instance\n"}
{"name":"Asymptotics.IsTheta.trans_eventuallyEq","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\nF : Type u_4\ninst✝¹ : Norm E\ninst✝ : Norm F\nl : Filter α\nf : α → E\ng₁ g₂ : α → F\nh : Asymptotics.IsTheta l f g₁\nhg : l.EventuallyEq g₁ g₂\n⊢ Asymptotics.IsTheta l f g₂","decl":"@[trans]\ntheorem IsTheta.trans_eventuallyEq {f : α → E} {g₁ g₂ : α → F} (h : f =Θ[l] g₁) (hg : g₁ =ᶠ[l] g₂) :\n    f =Θ[l] g₂ :=\n  ⟨h.1.trans_eventuallyEq hg, hg.symm.trans_isBigO h.2⟩\n\n-- Porting note (https://github.com/leanprover-community/mathlib4/issues/10754): added instance\n"}
{"name":"Filter.EventuallyEq.trans_isTheta","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\nF : Type u_4\ninst✝¹ : Norm E\ninst✝ : Norm F\nl : Filter α\nf₁ f₂ : α → E\ng : α → F\nhf : l.EventuallyEq f₁ f₂\nh : Asymptotics.IsTheta l f₂ g\n⊢ Asymptotics.IsTheta l f₁ g","decl":"@[trans]\ntheorem _root_.Filter.EventuallyEq.trans_isTheta {f₁ f₂ : α → E} {g : α → F} (hf : f₁ =ᶠ[l] f₂)\n    (h : f₂ =Θ[l] g) : f₁ =Θ[l] g :=\n  ⟨hf.trans_isBigO h.1, h.2.trans_eventuallyEq hf.symm⟩\n\n-- Porting note (https://github.com/leanprover-community/mathlib4/issues/10754): added instance\n"}
{"name":"Filter.EventuallyEq.isTheta","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\ninst✝ : Norm E\nl : Filter α\nf g : α → E\nh : l.EventuallyEq f g\n⊢ Asymptotics.IsTheta l f g","decl":"lemma _root_.Filter.EventuallyEq.isTheta {f g : α → E} (h : f =ᶠ[l] g) : f =Θ[l] g :=\n  h.trans_isTheta isTheta_rfl\n\n"}
{"name":"Asymptotics.isTheta_bot","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\nF : Type u_4\ninst✝¹ : Norm E\ninst✝ : Norm F\nf : α → E\ng : α → F\n⊢ Asymptotics.IsTheta Bot.bot f g","decl":"@[simp]\ntheorem isTheta_bot : f =Θ[⊥] g := by simp [IsTheta]\n\n"}
{"name":"Asymptotics.isTheta_norm_left","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nF : Type u_4\nE' : Type u_6\ninst✝¹ : Norm F\ninst✝ : SeminormedAddCommGroup E'\ng : α → F\nf' : α → E'\nl : Filter α\n⊢ Iff (Asymptotics.IsTheta l (fun x => Norm.norm (f' x)) g) (Asymptotics.IsTheta l f' g)","decl":"@[simp]\ntheorem isTheta_norm_left : (fun x ↦ ‖f' x‖) =Θ[l] g ↔ f' =Θ[l] g := by simp [IsTheta]\n\n"}
{"name":"Asymptotics.isTheta_norm_right","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\nF' : Type u_7\ninst✝¹ : Norm E\ninst✝ : SeminormedAddCommGroup F'\nf : α → E\ng' : α → F'\nl : Filter α\n⊢ Iff (Asymptotics.IsTheta l f fun x => Norm.norm (g' x)) (Asymptotics.IsTheta l f g')","decl":"@[simp]\ntheorem isTheta_norm_right : (f =Θ[l] fun x ↦ ‖g' x‖) ↔ f =Θ[l] g' := by simp [IsTheta]\n\n"}
{"name":"Asymptotics.IsTheta.norm_left","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nF : Type u_4\nE' : Type u_6\ninst✝¹ : Norm F\ninst✝ : SeminormedAddCommGroup E'\ng : α → F\nf' : α → E'\nl : Filter α\na✝ : Asymptotics.IsTheta l f' g\n⊢ Asymptotics.IsTheta l (fun x => Norm.norm (f' x)) g","decl":"alias ⟨IsTheta.of_norm_left, IsTheta.norm_left⟩ := isTheta_norm_left\n\n"}
{"name":"Asymptotics.IsTheta.of_norm_left","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nF : Type u_4\nE' : Type u_6\ninst✝¹ : Norm F\ninst✝ : SeminormedAddCommGroup E'\ng : α → F\nf' : α → E'\nl : Filter α\na✝ : Asymptotics.IsTheta l (fun x => Norm.norm (f' x)) g\n⊢ Asymptotics.IsTheta l f' g","decl":"alias ⟨IsTheta.of_norm_left, IsTheta.norm_left⟩ := isTheta_norm_left\n\n"}
{"name":"Asymptotics.IsTheta.norm_right","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\nF' : Type u_7\ninst✝¹ : Norm E\ninst✝ : SeminormedAddCommGroup F'\nf : α → E\ng' : α → F'\nl : Filter α\na✝ : Asymptotics.IsTheta l f g'\n⊢ Asymptotics.IsTheta l f fun x => Norm.norm (g' x)","decl":"alias ⟨IsTheta.of_norm_right, IsTheta.norm_right⟩ := isTheta_norm_right\n\n"}
{"name":"Asymptotics.IsTheta.of_norm_right","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\nF' : Type u_7\ninst✝¹ : Norm E\ninst✝ : SeminormedAddCommGroup F'\nf : α → E\ng' : α → F'\nl : Filter α\na✝ : Asymptotics.IsTheta l f fun x => Norm.norm (g' x)\n⊢ Asymptotics.IsTheta l f g'","decl":"alias ⟨IsTheta.of_norm_right, IsTheta.norm_right⟩ := isTheta_norm_right\n\n"}
{"name":"Asymptotics.IsTheta.of_norm_eventuallyEq_norm","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\nF : Type u_4\ninst✝¹ : Norm E\ninst✝ : Norm F\nf : α → E\ng : α → F\nl : Filter α\nh : l.EventuallyEq (fun x => Norm.norm (f x)) fun x => Norm.norm (g x)\n⊢ Asymptotics.IsTheta l f g","decl":"theorem IsTheta.of_norm_eventuallyEq_norm (h : (fun x ↦ ‖f x‖) =ᶠ[l] fun x ↦ ‖g x‖) : f =Θ[l] g :=\n  ⟨.of_bound' h.le, .of_bound' h.symm.le⟩\n\n"}
{"name":"Asymptotics.isTheta_of_norm_eventuallyEq","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\nF : Type u_4\ninst✝¹ : Norm E\ninst✝ : Norm F\nf : α → E\ng : α → F\nl : Filter α\nh : l.EventuallyEq (fun x => Norm.norm (f x)) fun x => Norm.norm (g x)\n⊢ Asymptotics.IsTheta l f g","decl":"@[deprecated (since := \"2025-01-03\")]\nalias isTheta_of_norm_eventuallyEq := IsTheta.of_norm_eventuallyEq_norm\n\n"}
{"name":"Asymptotics.IsTheta.of_norm_eventuallyEq","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE' : Type u_6\ninst✝ : SeminormedAddCommGroup E'\nf' : α → E'\nl : Filter α\ng : α → Real\nh : l.EventuallyEq (fun x => Norm.norm (f' x)) g\n⊢ Asymptotics.IsTheta l f' g","decl":"theorem IsTheta.of_norm_eventuallyEq {g : α → ℝ} (h : (fun x ↦ ‖f' x‖) =ᶠ[l] g) : f' =Θ[l] g :=\n  of_norm_eventuallyEq_norm <| h.mono fun x hx ↦ by simp only [← hx, norm_norm]\n\n"}
{"name":"Asymptotics.isTheta_of_norm_eventuallyEq'","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE' : Type u_6\ninst✝ : SeminormedAddCommGroup E'\nf' : α → E'\nl : Filter α\ng : α → Real\nh : l.EventuallyEq (fun x => Norm.norm (f' x)) g\n⊢ Asymptotics.IsTheta l f' g","decl":"@[deprecated (since := \"2025-01-03\")]\nalias isTheta_of_norm_eventuallyEq' := IsTheta.of_norm_eventuallyEq\n\n"}
{"name":"Asymptotics.IsTheta.isLittleO_congr_left","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nG : Type u_5\nE' : Type u_6\nF' : Type u_7\ninst✝² : Norm G\ninst✝¹ : SeminormedAddCommGroup E'\ninst✝ : SeminormedAddCommGroup F'\nk : α → G\nf' : α → E'\ng' : α → F'\nl : Filter α\nh : Asymptotics.IsTheta l f' g'\n⊢ Iff (Asymptotics.IsLittleO l f' k) (Asymptotics.IsLittleO l g' k)","decl":"theorem IsTheta.isLittleO_congr_left (h : f' =Θ[l] g') : f' =o[l] k ↔ g' =o[l] k :=\n  ⟨h.symm.trans_isLittleO, h.trans_isLittleO⟩\n\n"}
{"name":"Asymptotics.IsTheta.isLittleO_congr_right","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\nF' : Type u_7\nG' : Type u_8\ninst✝² : Norm E\ninst✝¹ : SeminormedAddCommGroup F'\ninst✝ : SeminormedAddCommGroup G'\nf : α → E\ng' : α → F'\nk' : α → G'\nl : Filter α\nh : Asymptotics.IsTheta l g' k'\n⊢ Iff (Asymptotics.IsLittleO l f g') (Asymptotics.IsLittleO l f k')","decl":"theorem IsTheta.isLittleO_congr_right (h : g' =Θ[l] k') : f =o[l] g' ↔ f =o[l] k' :=\n  ⟨fun H ↦ H.trans_isTheta h, fun H ↦ H.trans_isTheta h.symm⟩\n\n"}
{"name":"Asymptotics.IsTheta.isBigO_congr_left","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nG : Type u_5\nE' : Type u_6\nF' : Type u_7\ninst✝² : Norm G\ninst✝¹ : SeminormedAddCommGroup E'\ninst✝ : SeminormedAddCommGroup F'\nk : α → G\nf' : α → E'\ng' : α → F'\nl : Filter α\nh : Asymptotics.IsTheta l f' g'\n⊢ Iff (Asymptotics.IsBigO l f' k) (Asymptotics.IsBigO l g' k)","decl":"theorem IsTheta.isBigO_congr_left (h : f' =Θ[l] g') : f' =O[l] k ↔ g' =O[l] k :=\n  ⟨h.symm.trans_isBigO, h.trans_isBigO⟩\n\n"}
{"name":"Asymptotics.IsTheta.isBigO_congr_right","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\nF' : Type u_7\nG' : Type u_8\ninst✝² : Norm E\ninst✝¹ : SeminormedAddCommGroup F'\ninst✝ : SeminormedAddCommGroup G'\nf : α → E\ng' : α → F'\nk' : α → G'\nl : Filter α\nh : Asymptotics.IsTheta l g' k'\n⊢ Iff (Asymptotics.IsBigO l f g') (Asymptotics.IsBigO l f k')","decl":"theorem IsTheta.isBigO_congr_right (h : g' =Θ[l] k') : f =O[l] g' ↔ f =O[l] k' :=\n  ⟨fun H ↦ H.trans_isTheta h, fun H ↦ H.trans_isTheta h.symm⟩\n\n"}
{"name":"Asymptotics.IsTheta.isTheta_congr_left","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nG : Type u_5\nE' : Type u_6\nF' : Type u_7\ninst✝² : Norm G\ninst✝¹ : SeminormedAddCommGroup E'\ninst✝ : SeminormedAddCommGroup F'\nk : α → G\nf' : α → E'\ng' : α → F'\nl : Filter α\nh : Asymptotics.IsTheta l f' g'\n⊢ Iff (Asymptotics.IsTheta l f' k) (Asymptotics.IsTheta l g' k)","decl":"lemma IsTheta.isTheta_congr_left (h : f' =Θ[l] g') : f' =Θ[l] k ↔ g' =Θ[l] k :=\n  h.isBigO_congr_left.and h.isBigO_congr_right\n\n"}
{"name":"Asymptotics.IsTheta.isTheta_congr_right","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nG : Type u_5\nE' : Type u_6\nF' : Type u_7\ninst✝² : Norm G\ninst✝¹ : SeminormedAddCommGroup E'\ninst✝ : SeminormedAddCommGroup F'\nk : α → G\nf' : α → E'\ng' : α → F'\nl : Filter α\nh : Asymptotics.IsTheta l f' g'\n⊢ Iff (Asymptotics.IsTheta l k f') (Asymptotics.IsTheta l k g')","decl":"lemma IsTheta.isTheta_congr_right (h : f' =Θ[l] g') : k =Θ[l] f' ↔ k =Θ[l] g' :=\n  h.isBigO_congr_right.and h.isBigO_congr_left\n\n"}
{"name":"Asymptotics.IsTheta.mono","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\nF : Type u_4\ninst✝¹ : Norm E\ninst✝ : Norm F\nf : α → E\ng : α → F\nl l' : Filter α\nh : Asymptotics.IsTheta l f g\nhl : LE.le l' l\n⊢ Asymptotics.IsTheta l' f g","decl":"theorem IsTheta.mono (h : f =Θ[l] g) (hl : l' ≤ l) : f =Θ[l'] g :=\n  ⟨h.1.mono hl, h.2.mono hl⟩\n\n"}
{"name":"Asymptotics.IsTheta.sup","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE' : Type u_6\nF' : Type u_7\ninst✝¹ : SeminormedAddCommGroup E'\ninst✝ : SeminormedAddCommGroup F'\nf' : α → E'\ng' : α → F'\nl l' : Filter α\nh : Asymptotics.IsTheta l f' g'\nh' : Asymptotics.IsTheta l' f' g'\n⊢ Asymptotics.IsTheta (Max.max l l') f' g'","decl":"theorem IsTheta.sup (h : f' =Θ[l] g') (h' : f' =Θ[l'] g') : f' =Θ[l ⊔ l'] g' :=\n  ⟨h.1.sup h'.1, h.2.sup h'.2⟩\n\n"}
{"name":"Asymptotics.isTheta_sup","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE' : Type u_6\nF' : Type u_7\ninst✝¹ : SeminormedAddCommGroup E'\ninst✝ : SeminormedAddCommGroup F'\nf' : α → E'\ng' : α → F'\nl l' : Filter α\n⊢ Iff (Asymptotics.IsTheta (Max.max l l') f' g') (And (Asymptotics.IsTheta l f' g') (Asymptotics.IsTheta l' f' g'))","decl":"@[simp]\ntheorem isTheta_sup : f' =Θ[l ⊔ l'] g' ↔ f' =Θ[l] g' ∧ f' =Θ[l'] g' :=\n  ⟨fun h ↦ ⟨h.mono le_sup_left, h.mono le_sup_right⟩, fun h ↦ h.1.sup h.2⟩\n\n"}
{"name":"Asymptotics.IsTheta.eq_zero_iff","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE'' : Type u_9\nF'' : Type u_10\ninst✝¹ : NormedAddCommGroup E''\ninst✝ : NormedAddCommGroup F''\nf'' : α → E''\ng'' : α → F''\nl : Filter α\nh : Asymptotics.IsTheta l f'' g''\n⊢ Filter.Eventually (fun x => Iff (Eq (f'' x) 0) (Eq (g'' x) 0)) l","decl":"theorem IsTheta.eq_zero_iff (h : f'' =Θ[l] g'') : ∀ᶠ x in l, f'' x = 0 ↔ g'' x = 0 :=\n  h.1.eq_zero_imp.mp <| h.2.eq_zero_imp.mono fun _ ↦ Iff.intro\n\n"}
{"name":"Asymptotics.IsTheta.tendsto_zero_iff","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE'' : Type u_9\nF'' : Type u_10\ninst✝¹ : NormedAddCommGroup E''\ninst✝ : NormedAddCommGroup F''\nf'' : α → E''\ng'' : α → F''\nl : Filter α\nh : Asymptotics.IsTheta l f'' g''\n⊢ Iff (Filter.Tendsto f'' l (nhds 0)) (Filter.Tendsto g'' l (nhds 0))","decl":"theorem IsTheta.tendsto_zero_iff (h : f'' =Θ[l] g'') :\n    Tendsto f'' l (𝓝 0) ↔ Tendsto g'' l (𝓝 0) := by\n  simp only [← isLittleO_one_iff ℝ, h.isLittleO_congr_left]\n\n"}
{"name":"Asymptotics.IsTheta.tendsto_norm_atTop_iff","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE' : Type u_6\nF' : Type u_7\ninst✝¹ : SeminormedAddCommGroup E'\ninst✝ : SeminormedAddCommGroup F'\nf' : α → E'\ng' : α → F'\nl : Filter α\nh : Asymptotics.IsTheta l f' g'\n⊢ Iff (Filter.Tendsto (Function.comp Norm.norm f') l Filter.atTop) (Filter.Tendsto (Function.comp Norm.norm g') l Filter.atTop)","decl":"theorem IsTheta.tendsto_norm_atTop_iff (h : f' =Θ[l] g') :\n    Tendsto (norm ∘ f') l atTop ↔ Tendsto (norm ∘ g') l atTop := by\n  simp only [Function.comp_def, ← isLittleO_const_left_of_ne (one_ne_zero' ℝ),\n    h.isLittleO_congr_right]\n\n"}
{"name":"Asymptotics.IsTheta.isBoundedUnder_le_iff","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE' : Type u_6\nF' : Type u_7\ninst✝¹ : SeminormedAddCommGroup E'\ninst✝ : SeminormedAddCommGroup F'\nf' : α → E'\ng' : α → F'\nl : Filter α\nh : Asymptotics.IsTheta l f' g'\n⊢ Iff (Filter.IsBoundedUnder (fun x1 x2 => LE.le x1 x2) l (Function.comp Norm.norm f')) (Filter.IsBoundedUnder (fun x1 x2 => LE.le x1 x2) l (Function.comp Norm.norm g'))","decl":"theorem IsTheta.isBoundedUnder_le_iff (h : f' =Θ[l] g') :\n    IsBoundedUnder (· ≤ ·) l (norm ∘ f') ↔ IsBoundedUnder (· ≤ ·) l (norm ∘ g') := by\n  simp only [← isBigO_const_of_ne (one_ne_zero' ℝ), h.isBigO_congr_left]\n\n"}
{"name":"Asymptotics.IsTheta.smul","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE' : Type u_6\nF' : Type u_7\n𝕜 : Type u_14\n𝕜' : Type u_15\ninst✝⁵ : SeminormedAddCommGroup E'\ninst✝⁴ : SeminormedAddCommGroup F'\ninst✝³ : NormedField 𝕜\ninst✝² : NormedField 𝕜'\nl : Filter α\ninst✝¹ : NormedSpace 𝕜 E'\ninst✝ : NormedSpace 𝕜' F'\nf₁ : α → 𝕜\nf₂ : α → 𝕜'\ng₁ : α → E'\ng₂ : α → F'\nhf : Asymptotics.IsTheta l f₁ f₂\nhg : Asymptotics.IsTheta l g₁ g₂\n⊢ Asymptotics.IsTheta l (fun x => HSMul.hSMul (f₁ x) (g₁ x)) fun x => HSMul.hSMul (f₂ x) (g₂ x)","decl":"theorem IsTheta.smul [NormedSpace 𝕜 E'] [NormedSpace 𝕜' F'] {f₁ : α → 𝕜} {f₂ : α → 𝕜'} {g₁ : α → E'}\n    {g₂ : α → F'} (hf : f₁ =Θ[l] f₂) (hg : g₁ =Θ[l] g₂) :\n    (fun x ↦ f₁ x • g₁ x) =Θ[l] fun x ↦ f₂ x • g₂ x :=\n  ⟨hf.1.smul hg.1, hf.2.smul hg.2⟩\n\n"}
{"name":"Asymptotics.IsTheta.mul","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\n𝕜 : Type u_14\n𝕜' : Type u_15\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedField 𝕜'\nl : Filter α\nf₁ f₂ : α → 𝕜\ng₁ g₂ : α → 𝕜'\nh₁ : Asymptotics.IsTheta l f₁ g₁\nh₂ : Asymptotics.IsTheta l f₂ g₂\n⊢ Asymptotics.IsTheta l (fun x => HMul.hMul (f₁ x) (f₂ x)) fun x => HMul.hMul (g₁ x) (g₂ x)","decl":"theorem IsTheta.mul {f₁ f₂ : α → 𝕜} {g₁ g₂ : α → 𝕜'} (h₁ : f₁ =Θ[l] g₁) (h₂ : f₂ =Θ[l] g₂) :\n    (fun x ↦ f₁ x * f₂ x) =Θ[l] fun x ↦ g₁ x * g₂ x :=\n  h₁.smul h₂\n\n"}
{"name":"Asymptotics.IsTheta.listProd","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\n𝕜 : Type u_14\n𝕜' : Type u_15\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedField 𝕜'\nl : Filter α\nι : Type u_16\nL : List ι\nf : ι → α → 𝕜\ng : ι → α → 𝕜'\nh : ∀ (i : ι), Membership.mem L i → Asymptotics.IsTheta l (f i) (g i)\n⊢ Asymptotics.IsTheta l (fun x => (List.map (fun x_1 => f x_1 x) L).prod) fun x => (List.map (fun x_1 => g x_1 x) L).prod","decl":"theorem IsTheta.listProd {ι : Type*} {L : List ι} {f : ι → α → 𝕜} {g : ι → α → 𝕜'}\n    (h : ∀ i ∈ L, f i =Θ[l] g i) :\n    (fun x ↦ (L.map (f · x)).prod) =Θ[l] (fun x ↦ (L.map (g · x)).prod) :=\n  ⟨.listProd fun i hi ↦ (h i hi).isBigO, .listProd fun i hi ↦ (h i hi).symm.isBigO⟩\n\n"}
{"name":"Asymptotics.IsTheta.multisetProd","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\n𝕜 : Type u_14\n𝕜' : Type u_15\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedField 𝕜'\nl : Filter α\nι : Type u_16\ns : Multiset ι\nf : ι → α → 𝕜\ng : ι → α → 𝕜'\nh : ∀ (i : ι), Membership.mem s i → Asymptotics.IsTheta l (f i) (g i)\n⊢ Asymptotics.IsTheta l (fun x => (Multiset.map (fun x_1 => f x_1 x) s).prod) fun x => (Multiset.map (fun x_1 => g x_1 x) s).prod","decl":"theorem IsTheta.multisetProd {ι : Type*} {s : Multiset ι} {f : ι → α → 𝕜} {g : ι → α → 𝕜'}\n    (h : ∀ i ∈ s, f i =Θ[l] g i) :\n    (fun x ↦ (s.map (f · x)).prod) =Θ[l] (fun x ↦ (s.map (g · x)).prod) :=\n  ⟨.multisetProd fun i hi ↦ (h i hi).isBigO, .multisetProd fun i hi ↦ (h i hi).symm.isBigO⟩\n\n"}
{"name":"Asymptotics.IsTheta.finsetProd","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\n𝕜 : Type u_14\n𝕜' : Type u_15\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedField 𝕜'\nl : Filter α\nι : Type u_16\ns : Finset ι\nf : ι → α → 𝕜\ng : ι → α → 𝕜'\nh : ∀ (i : ι), Membership.mem s i → Asymptotics.IsTheta l (f i) (g i)\n⊢ Asymptotics.IsTheta l (fun x => s.prod fun i => f i x) fun x => s.prod fun i => g i x","decl":"theorem IsTheta.finsetProd {ι : Type*} {s : Finset ι} {f : ι → α → 𝕜} {g : ι → α → 𝕜'}\n    (h : ∀ i ∈ s, f i =Θ[l] g i) : (∏ i ∈ s, f i ·) =Θ[l] (∏ i ∈ s, g i ·) :=\n  ⟨.finsetProd fun i hi ↦ (h i hi).isBigO, .finsetProd fun i hi ↦ (h i hi).symm.isBigO⟩\n\n"}
{"name":"Asymptotics.IsTheta.inv","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\n𝕜 : Type u_14\n𝕜' : Type u_15\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedField 𝕜'\nl : Filter α\nf : α → 𝕜\ng : α → 𝕜'\nh : Asymptotics.IsTheta l f g\n⊢ Asymptotics.IsTheta l (fun x => Inv.inv (f x)) fun x => Inv.inv (g x)","decl":"theorem IsTheta.inv {f : α → 𝕜} {g : α → 𝕜'} (h : f =Θ[l] g) :\n    (fun x ↦ (f x)⁻¹) =Θ[l] fun x ↦ (g x)⁻¹ :=\n  ⟨h.2.inv_rev h.1.eq_zero_imp, h.1.inv_rev h.2.eq_zero_imp⟩\n\n"}
{"name":"Asymptotics.isTheta_inv","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\n𝕜 : Type u_14\n𝕜' : Type u_15\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedField 𝕜'\nl : Filter α\nf : α → 𝕜\ng : α → 𝕜'\n⊢ Iff (Asymptotics.IsTheta l (fun x => Inv.inv (f x)) fun x => Inv.inv (g x)) (Asymptotics.IsTheta l f g)","decl":"@[simp]\ntheorem isTheta_inv {f : α → 𝕜} {g : α → 𝕜'} :\n    ((fun x ↦ (f x)⁻¹) =Θ[l] fun x ↦ (g x)⁻¹) ↔ f =Θ[l] g :=\n  ⟨fun h ↦ by simpa only [inv_inv] using h.inv, IsTheta.inv⟩\n\n"}
{"name":"Asymptotics.IsTheta.div","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\n𝕜 : Type u_14\n𝕜' : Type u_15\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedField 𝕜'\nl : Filter α\nf₁ f₂ : α → 𝕜\ng₁ g₂ : α → 𝕜'\nh₁ : Asymptotics.IsTheta l f₁ g₁\nh₂ : Asymptotics.IsTheta l f₂ g₂\n⊢ Asymptotics.IsTheta l (fun x => HDiv.hDiv (f₁ x) (f₂ x)) fun x => HDiv.hDiv (g₁ x) (g₂ x)","decl":"theorem IsTheta.div {f₁ f₂ : α → 𝕜} {g₁ g₂ : α → 𝕜'} (h₁ : f₁ =Θ[l] g₁) (h₂ : f₂ =Θ[l] g₂) :\n    (fun x ↦ f₁ x / f₂ x) =Θ[l] fun x ↦ g₁ x / g₂ x := by\n  simpa only [div_eq_mul_inv] using h₁.mul h₂.inv\n\n"}
{"name":"Asymptotics.IsTheta.pow","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\n𝕜 : Type u_14\n𝕜' : Type u_15\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedField 𝕜'\nl : Filter α\nf : α → 𝕜\ng : α → 𝕜'\nh : Asymptotics.IsTheta l f g\nn : Nat\n⊢ Asymptotics.IsTheta l (fun x => HPow.hPow (f x) n) fun x => HPow.hPow (g x) n","decl":"theorem IsTheta.pow {f : α → 𝕜} {g : α → 𝕜'} (h : f =Θ[l] g) (n : ℕ) :\n    (fun x ↦ f x ^ n) =Θ[l] fun x ↦ g x ^ n :=\n  ⟨h.1.pow n, h.2.pow n⟩\n\n"}
{"name":"Asymptotics.IsTheta.zpow","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\n𝕜 : Type u_14\n𝕜' : Type u_15\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedField 𝕜'\nl : Filter α\nf : α → 𝕜\ng : α → 𝕜'\nh : Asymptotics.IsTheta l f g\nn : Int\n⊢ Asymptotics.IsTheta l (fun x => HPow.hPow (f x) n) fun x => HPow.hPow (g x) n","decl":"theorem IsTheta.zpow {f : α → 𝕜} {g : α → 𝕜'} (h : f =Θ[l] g) (n : ℤ) :\n    (fun x ↦ f x ^ n) =Θ[l] fun x ↦ g x ^ n := by\n  cases n\n  · simpa only [Int.ofNat_eq_coe, zpow_natCast] using h.pow _\n  · simpa only [zpow_negSucc] using (h.pow _).inv\n\n"}
{"name":"Asymptotics.isTheta_const_const","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE'' : Type u_9\nF'' : Type u_10\ninst✝¹ : NormedAddCommGroup E''\ninst✝ : NormedAddCommGroup F''\nl : Filter α\nc₁ : E''\nc₂ : F''\nh₁ : Ne c₁ 0\nh₂ : Ne c₂ 0\n⊢ Asymptotics.IsTheta l (fun x => c₁) fun x => c₂","decl":"theorem isTheta_const_const {c₁ : E''} {c₂ : F''} (h₁ : c₁ ≠ 0) (h₂ : c₂ ≠ 0) :\n    (fun _ : α ↦ c₁) =Θ[l] fun _ ↦ c₂ :=\n  ⟨isBigO_const_const _ h₂ _, isBigO_const_const _ h₁ _⟩\n\n"}
{"name":"Asymptotics.isTheta_const_const_iff","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE'' : Type u_9\nF'' : Type u_10\ninst✝² : NormedAddCommGroup E''\ninst✝¹ : NormedAddCommGroup F''\nl : Filter α\ninst✝ : l.NeBot\nc₁ : E''\nc₂ : F''\n⊢ Iff (Asymptotics.IsTheta l (fun x => c₁) fun x => c₂) (Iff (Eq c₁ 0) (Eq c₂ 0))","decl":"@[simp]\ntheorem isTheta_const_const_iff [NeBot l] {c₁ : E''} {c₂ : F''} :\n    ((fun _ : α ↦ c₁) =Θ[l] fun _ ↦ c₂) ↔ (c₁ = 0 ↔ c₂ = 0) := by\n  simpa only [IsTheta, isBigO_const_const_iff, ← iff_def] using Iff.comm\n\n"}
{"name":"Asymptotics.isTheta_zero_left","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE' : Type u_6\nF'' : Type u_10\ninst✝¹ : SeminormedAddCommGroup E'\ninst✝ : NormedAddCommGroup F''\ng'' : α → F''\nl : Filter α\n⊢ Iff (Asymptotics.IsTheta l (fun x => 0) g'') (l.EventuallyEq g'' 0)","decl":"@[simp]\ntheorem isTheta_zero_left : (fun _ ↦ (0 : E')) =Θ[l] g'' ↔ g'' =ᶠ[l] 0 := by\n  simp only [IsTheta, isBigO_zero, isBigO_zero_right_iff, true_and]\n\n"}
{"name":"Asymptotics.isTheta_zero_right","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nF' : Type u_7\nE'' : Type u_9\ninst✝¹ : SeminormedAddCommGroup F'\ninst✝ : NormedAddCommGroup E''\nf'' : α → E''\nl : Filter α\n⊢ Iff (Asymptotics.IsTheta l f'' fun x => 0) (l.EventuallyEq f'' 0)","decl":"@[simp]\ntheorem isTheta_zero_right : (f'' =Θ[l] fun _ ↦ (0 : F')) ↔ f'' =ᶠ[l] 0 :=\n  isTheta_comm.trans isTheta_zero_left\n\n"}
{"name":"Asymptotics.isTheta_const_smul_left","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nF : Type u_4\nE' : Type u_6\n𝕜 : Type u_14\ninst✝³ : Norm F\ninst✝² : SeminormedAddCommGroup E'\ninst✝¹ : NormedField 𝕜\ng : α → F\nf' : α → E'\nl : Filter α\ninst✝ : NormedSpace 𝕜 E'\nc : 𝕜\nhc : Ne c 0\n⊢ Iff (Asymptotics.IsTheta l (fun x => HSMul.hSMul c (f' x)) g) (Asymptotics.IsTheta l f' g)","decl":"theorem isTheta_const_smul_left [NormedSpace 𝕜 E'] {c : 𝕜} (hc : c ≠ 0) :\n    (fun x ↦ c • f' x) =Θ[l] g ↔ f' =Θ[l] g :=\n  and_congr (isBigO_const_smul_left hc) (isBigO_const_smul_right hc)\n\n"}
{"name":"Asymptotics.IsTheta.const_smul_left","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nF : Type u_4\nE' : Type u_6\n𝕜 : Type u_14\ninst✝³ : Norm F\ninst✝² : SeminormedAddCommGroup E'\ninst✝¹ : NormedField 𝕜\ng : α → F\nf' : α → E'\nl : Filter α\ninst✝ : NormedSpace 𝕜 E'\nc : 𝕜\nhc : Ne c 0\na✝ : Asymptotics.IsTheta l f' g\n⊢ Asymptotics.IsTheta l (fun x => HSMul.hSMul c (f' x)) g","decl":"alias ⟨IsTheta.of_const_smul_left, IsTheta.const_smul_left⟩ := isTheta_const_smul_left\n\n"}
{"name":"Asymptotics.IsTheta.of_const_smul_left","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nF : Type u_4\nE' : Type u_6\n𝕜 : Type u_14\ninst✝³ : Norm F\ninst✝² : SeminormedAddCommGroup E'\ninst✝¹ : NormedField 𝕜\ng : α → F\nf' : α → E'\nl : Filter α\ninst✝ : NormedSpace 𝕜 E'\nc : 𝕜\nhc : Ne c 0\na✝ : Asymptotics.IsTheta l (fun x => HSMul.hSMul c (f' x)) g\n⊢ Asymptotics.IsTheta l f' g","decl":"alias ⟨IsTheta.of_const_smul_left, IsTheta.const_smul_left⟩ := isTheta_const_smul_left\n\n"}
{"name":"Asymptotics.isTheta_const_smul_right","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\nF' : Type u_7\n𝕜 : Type u_14\ninst✝³ : Norm E\ninst✝² : SeminormedAddCommGroup F'\ninst✝¹ : NormedField 𝕜\nf : α → E\ng' : α → F'\nl : Filter α\ninst✝ : NormedSpace 𝕜 F'\nc : 𝕜\nhc : Ne c 0\n⊢ Iff (Asymptotics.IsTheta l f fun x => HSMul.hSMul c (g' x)) (Asymptotics.IsTheta l f g')","decl":"theorem isTheta_const_smul_right [NormedSpace 𝕜 F'] {c : 𝕜} (hc : c ≠ 0) :\n    (f =Θ[l] fun x ↦ c • g' x) ↔ f =Θ[l] g' :=\n  and_congr (isBigO_const_smul_right hc) (isBigO_const_smul_left hc)\n\n"}
{"name":"Asymptotics.IsTheta.of_const_smul_right","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\nF' : Type u_7\n𝕜 : Type u_14\ninst✝³ : Norm E\ninst✝² : SeminormedAddCommGroup F'\ninst✝¹ : NormedField 𝕜\nf : α → E\ng' : α → F'\nl : Filter α\ninst✝ : NormedSpace 𝕜 F'\nc : 𝕜\nhc : Ne c 0\na✝ : Asymptotics.IsTheta l f fun x => HSMul.hSMul c (g' x)\n⊢ Asymptotics.IsTheta l f g'","decl":"alias ⟨IsTheta.of_const_smul_right, IsTheta.const_smul_right⟩ := isTheta_const_smul_right\n\n"}
{"name":"Asymptotics.IsTheta.const_smul_right","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\nF' : Type u_7\n𝕜 : Type u_14\ninst✝³ : Norm E\ninst✝² : SeminormedAddCommGroup F'\ninst✝¹ : NormedField 𝕜\nf : α → E\ng' : α → F'\nl : Filter α\ninst✝ : NormedSpace 𝕜 F'\nc : 𝕜\nhc : Ne c 0\na✝ : Asymptotics.IsTheta l f g'\n⊢ Asymptotics.IsTheta l f fun x => HSMul.hSMul c (g' x)","decl":"alias ⟨IsTheta.of_const_smul_right, IsTheta.const_smul_right⟩ := isTheta_const_smul_right\n\n"}
{"name":"Asymptotics.isTheta_const_mul_left","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nF : Type u_4\n𝕜 : Type u_14\ninst✝¹ : Norm F\ninst✝ : NormedField 𝕜\ng : α → F\nl : Filter α\nc : 𝕜\nf : α → 𝕜\nhc : Ne c 0\n⊢ Iff (Asymptotics.IsTheta l (fun x => HMul.hMul c (f x)) g) (Asymptotics.IsTheta l f g)","decl":"theorem isTheta_const_mul_left {c : 𝕜} {f : α → 𝕜} (hc : c ≠ 0) :\n    (fun x ↦ c * f x) =Θ[l] g ↔ f =Θ[l] g := by\n  simpa only [← smul_eq_mul] using isTheta_const_smul_left hc\n\n"}
{"name":"Asymptotics.IsTheta.const_mul_left","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nF : Type u_4\n𝕜 : Type u_14\ninst✝¹ : Norm F\ninst✝ : NormedField 𝕜\ng : α → F\nl : Filter α\nc : 𝕜\nf : α → 𝕜\nhc : Ne c 0\na✝ : Asymptotics.IsTheta l f g\n⊢ Asymptotics.IsTheta l (fun x => HMul.hMul c (f x)) g","decl":"alias ⟨IsTheta.of_const_mul_left, IsTheta.const_mul_left⟩ := isTheta_const_mul_left\n\n"}
{"name":"Asymptotics.IsTheta.of_const_mul_left","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nF : Type u_4\n𝕜 : Type u_14\ninst✝¹ : Norm F\ninst✝ : NormedField 𝕜\ng : α → F\nl : Filter α\nc : 𝕜\nf : α → 𝕜\nhc : Ne c 0\na✝ : Asymptotics.IsTheta l (fun x => HMul.hMul c (f x)) g\n⊢ Asymptotics.IsTheta l f g","decl":"alias ⟨IsTheta.of_const_mul_left, IsTheta.const_mul_left⟩ := isTheta_const_mul_left\n\n"}
{"name":"Asymptotics.isTheta_const_mul_right","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\n𝕜 : Type u_14\ninst✝¹ : Norm E\ninst✝ : NormedField 𝕜\nf : α → E\nl : Filter α\nc : 𝕜\ng : α → 𝕜\nhc : Ne c 0\n⊢ Iff (Asymptotics.IsTheta l f fun x => HMul.hMul c (g x)) (Asymptotics.IsTheta l f g)","decl":"theorem isTheta_const_mul_right {c : 𝕜} {g : α → 𝕜} (hc : c ≠ 0) :\n    (f =Θ[l] fun x ↦ c * g x) ↔ f =Θ[l] g := by\n  simpa only [← smul_eq_mul] using isTheta_const_smul_right hc\n\n"}
{"name":"Asymptotics.IsTheta.of_const_mul_right","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\n𝕜 : Type u_14\ninst✝¹ : Norm E\ninst✝ : NormedField 𝕜\nf : α → E\nl : Filter α\nc : 𝕜\ng : α → 𝕜\nhc : Ne c 0\na✝ : Asymptotics.IsTheta l f fun x => HMul.hMul c (g x)\n⊢ Asymptotics.IsTheta l f g","decl":"alias ⟨IsTheta.of_const_mul_right, IsTheta.const_mul_right⟩ := isTheta_const_mul_right\n\n"}
{"name":"Asymptotics.IsTheta.const_mul_right","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_3\n𝕜 : Type u_14\ninst✝¹ : Norm E\ninst✝ : NormedField 𝕜\nf : α → E\nl : Filter α\nc : 𝕜\ng : α → 𝕜\nhc : Ne c 0\na✝ : Asymptotics.IsTheta l f g\n⊢ Asymptotics.IsTheta l f fun x => HMul.hMul c (g x)","decl":"alias ⟨IsTheta.of_const_mul_right, IsTheta.const_mul_right⟩ := isTheta_const_mul_right\n\n"}
{"name":"Asymptotics.IsLittleO.right_isTheta_add","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE' : Type u_6\ninst✝ : SeminormedAddCommGroup E'\nl : Filter α\nf₁ f₂ : α → E'\nh : Asymptotics.IsLittleO l f₁ f₂\n⊢ Asymptotics.IsTheta l f₂ (HAdd.hAdd f₁ f₂)","decl":"theorem IsLittleO.right_isTheta_add {f₁ f₂ : α → E'} (h : f₁ =o[l] f₂) :\n    f₂ =Θ[l] (f₁ + f₂) :=\n  ⟨h.right_isBigO_add, h.add_isBigO (isBigO_refl _ _)⟩\n\n"}
{"name":"Asymptotics.IsLittleO.right_isTheta_add'","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE' : Type u_6\ninst✝ : SeminormedAddCommGroup E'\nl : Filter α\nf₁ f₂ : α → E'\nh : Asymptotics.IsLittleO l f₁ f₂\n⊢ Asymptotics.IsTheta l f₂ (HAdd.hAdd f₂ f₁)","decl":"theorem IsLittleO.right_isTheta_add' {f₁ f₂ : α → E'} (h : f₁ =o[l] f₂) :\n    f₂ =Θ[l] (f₂ + f₁) :=\n  add_comm f₁ f₂ ▸ h.right_isTheta_add\n\n"}
{"name":"Asymptotics.IsTheta.add_isLittleO","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nF : Type u_4\nE' : Type u_6\ninst✝¹ : Norm F\ninst✝ : SeminormedAddCommGroup E'\nl : Filter α\nf₁ f₂ : α → E'\ng : α → F\nhΘ : Asymptotics.IsTheta l f₁ g\nho : Asymptotics.IsLittleO l f₂ g\n⊢ Asymptotics.IsTheta l (HAdd.hAdd f₁ f₂) g","decl":"lemma IsTheta.add_isLittleO {f₁ f₂ : α → E'} {g : α → F}\n    (hΘ : f₁ =Θ[l] g) (ho : f₂ =o[l] g) : (f₁ + f₂) =Θ[l] g :=\n  (ho.trans_isTheta hΘ.symm).right_isTheta_add'.symm.trans hΘ\n\n"}
{"name":"Asymptotics.IsLittleO.add_isTheta","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nF : Type u_4\nE' : Type u_6\ninst✝¹ : Norm F\ninst✝ : SeminormedAddCommGroup E'\nl : Filter α\nf₁ f₂ : α → E'\ng : α → F\nho : Asymptotics.IsLittleO l f₁ g\nhΘ : Asymptotics.IsTheta l f₂ g\n⊢ Asymptotics.IsTheta l (HAdd.hAdd f₁ f₂) g","decl":"lemma IsLittleO.add_isTheta {f₁ f₂ : α → E'} {g : α → F}\n    (ho : f₁ =o[l] g) (hΘ : f₂ =Θ[l] g) : (f₁ + f₂) =Θ[l] g :=\n  add_comm f₁ f₂ ▸ hΘ.add_isLittleO ho\n\n"}
{"name":"Asymptotics.IsTheta.fiberwise_right","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nβ : Type u_2\nE : Type u_3\nF : Type u_4\ninst✝¹ : Norm E\ninst✝ : Norm F\nl : Filter α\nf : Prod α β → E\ng : Prod α β → F\nl' : Filter β\na✝ : Asymptotics.IsTheta (SProd.sprod l l') f g\n⊢ Filter.Eventually (fun x => Asymptotics.IsTheta l' (fun x_1 => f { fst := x, snd := x_1 }) fun x_1 => g { fst := x, snd := x_1 }) l","decl":"protected theorem IsTheta.fiberwise_right :\n    f =Θ[l ×ˢ l'] g → ∀ᶠ x in l, (f ⟨x, ·⟩) =Θ[l'] (g ⟨x, ·⟩) := by\n  simp only [IsTheta, eventually_and]\n  exact fun ⟨h₁, h₂⟩ ↦ ⟨h₁.fiberwise_right, h₂.fiberwise_right⟩\n\n"}
{"name":"Asymptotics.IsTheta.fiberwise_left","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nβ : Type u_2\nE : Type u_3\nF : Type u_4\ninst✝¹ : Norm E\ninst✝ : Norm F\nl : Filter α\nf : Prod α β → E\ng : Prod α β → F\nl' : Filter β\na✝ : Asymptotics.IsTheta (SProd.sprod l l') f g\n⊢ Filter.Eventually (fun y => Asymptotics.IsTheta l (fun x => f { fst := x, snd := y }) fun x => g { fst := x, snd := y }) l'","decl":"protected theorem IsTheta.fiberwise_left :\n    f =Θ[l ×ˢ l'] g → ∀ᶠ y in l', (f ⟨·, y⟩) =Θ[l] (g ⟨·, y⟩) := by\n  simp only [IsTheta, eventually_and]\n  exact fun ⟨h₁, h₂⟩ ↦ ⟨h₁.fiberwise_left, h₂.fiberwise_left⟩\n\n"}
{"name":"Asymptotics.IsTheta.comp_fst","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nβ : Type u_2\nE : Type u_3\nF : Type u_4\ninst✝¹ : Norm E\ninst✝ : Norm F\nf : α → E\ng : α → F\nl : Filter α\nl' : Filter β\na✝ : Asymptotics.IsTheta l f g\n⊢ Asymptotics.IsTheta (SProd.sprod l l') (Function.comp f Prod.fst) (Function.comp g Prod.fst)","decl":"protected theorem IsTheta.comp_fst : f =Θ[l] g → (f ∘ Prod.fst) =Θ[l ×ˢ l'] (g ∘ Prod.fst) := by\n  simp only [IsTheta, eventually_and]\n  exact fun ⟨h₁, h₂⟩ ↦ ⟨h₁.comp_fst l', h₂.comp_fst l'⟩\n\n"}
{"name":"Asymptotics.IsTheta.comp_snd","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nβ : Type u_2\nE : Type u_3\nF : Type u_4\ninst✝¹ : Norm E\ninst✝ : Norm F\nf : α → E\ng : α → F\nl : Filter α\nl' : Filter β\na✝ : Asymptotics.IsTheta l f g\n⊢ Asymptotics.IsTheta (SProd.sprod l' l) (Function.comp f Prod.snd) (Function.comp g Prod.snd)","decl":"protected theorem IsTheta.comp_snd : f =Θ[l] g → (f ∘ Prod.snd) =Θ[l' ×ˢ l] (g ∘ Prod.snd) := by\n  simp only [IsTheta, eventually_and]\n  exact fun ⟨h₁, h₂⟩ ↦ ⟨h₁.comp_snd l', h₂.comp_snd l'⟩\n\n"}
{"name":"ContinuousOn.isTheta_principal","module":"Mathlib.Analysis.Asymptotics.Theta","initialProofState":"α : Type u_1\nE : Type u_2\nF : Type u_3\ninst✝² : NormedAddGroup E\ninst✝¹ : SeminormedAddGroup F\ninst✝ : TopologicalSpace α\ns : Set α\nf : α → E\nc : F\nhf : ContinuousOn f s\nhs : IsCompact s\nhc : Ne (Norm.norm c) 0\nhC : ∀ (i : α), Membership.mem s i → Ne (f i) 0\n⊢ Asymptotics.IsTheta (Filter.principal s) f fun x => c","decl":"protected theorem isTheta_principal\n    (hf : ContinuousOn f s) (hs : IsCompact s) (hc : ‖c‖ ≠ 0) (hC : ∀ i ∈ s, f i ≠ 0) :\n    f =Θ[𝓟 s] fun _ => c :=\n  ⟨hf.isBigO_principal hs hc, hf.isBigO_rev_principal hs hC c⟩\n\n"}
