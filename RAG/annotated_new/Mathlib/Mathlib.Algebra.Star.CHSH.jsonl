{"name":"IsCHSHTuple.A₀B₁_commutes","module":"Mathlib.Algebra.Star.CHSH","initialProofState":"R : Type u_1\ninst✝¹ : Monoid R\ninst✝ : StarMul R\nA₀ A₁ B₀ B₁ : R\nself : IsCHSHTuple A₀ A₁ B₀ B₁\n⊢ Eq (HMul.hMul A₀ B₁) (HMul.hMul B₁ A₀)","decl":"/-- A CHSH tuple in a *-monoid consists of 4 self-adjoint involutions `A₀ A₁ B₀ B₁` such that\nthe `Aᵢ` commute with the `Bⱼ`.\n\nThe physical interpretation is that `A₀` and `A₁` are a pair of boolean observables which\nare spacelike separated from another pair `B₀` and `B₁` of boolean observables.\n-/\nstructure IsCHSHTuple {R} [Monoid R] [StarMul R] (A₀ A₁ B₀ B₁ : R) : Prop where\n  A₀_inv : A₀ ^ 2 = 1\n  A₁_inv : A₁ ^ 2 = 1\n  B₀_inv : B₀ ^ 2 = 1\n  B₁_inv : B₁ ^ 2 = 1\n  A₀_sa : star A₀ = A₀\n  A₁_sa : star A₁ = A₁\n  B₀_sa : star B₀ = B₀\n  B₁_sa : star B₁ = B₁\n  A₀B₀_commutes : A₀ * B₀ = B₀ * A₀\n  A₀B₁_commutes : A₀ * B₁ = B₁ * A₀\n  A₁B₀_commutes : A₁ * B₀ = B₀ * A₁\n  A₁B₁_commutes : A₁ * B₁ = B₁ * A₁\n\n"}
{"name":"IsCHSHTuple.A₀_sa","module":"Mathlib.Algebra.Star.CHSH","initialProofState":"R : Type u_1\ninst✝¹ : Monoid R\ninst✝ : StarMul R\nA₀ A₁ B₀ B₁ : R\nself : IsCHSHTuple A₀ A₁ B₀ B₁\n⊢ Eq (Star.star A₀) A₀","decl":"/-- A CHSH tuple in a *-monoid consists of 4 self-adjoint involutions `A₀ A₁ B₀ B₁` such that\nthe `Aᵢ` commute with the `Bⱼ`.\n\nThe physical interpretation is that `A₀` and `A₁` are a pair of boolean observables which\nare spacelike separated from another pair `B₀` and `B₁` of boolean observables.\n-/\nstructure IsCHSHTuple {R} [Monoid R] [StarMul R] (A₀ A₁ B₀ B₁ : R) : Prop where\n  A₀_inv : A₀ ^ 2 = 1\n  A₁_inv : A₁ ^ 2 = 1\n  B₀_inv : B₀ ^ 2 = 1\n  B₁_inv : B₁ ^ 2 = 1\n  A₀_sa : star A₀ = A₀\n  A₁_sa : star A₁ = A₁\n  B₀_sa : star B₀ = B₀\n  B₁_sa : star B₁ = B₁\n  A₀B₀_commutes : A₀ * B₀ = B₀ * A₀\n  A₀B₁_commutes : A₀ * B₁ = B₁ * A₀\n  A₁B₀_commutes : A₁ * B₀ = B₀ * A₁\n  A₁B₁_commutes : A₁ * B₁ = B₁ * A₁\n\n"}
{"name":"IsCHSHTuple.A₁_inv","module":"Mathlib.Algebra.Star.CHSH","initialProofState":"R : Type u_1\ninst✝¹ : Monoid R\ninst✝ : StarMul R\nA₀ A₁ B₀ B₁ : R\nself : IsCHSHTuple A₀ A₁ B₀ B₁\n⊢ Eq (HPow.hPow A₁ 2) 1","decl":"/-- A CHSH tuple in a *-monoid consists of 4 self-adjoint involutions `A₀ A₁ B₀ B₁` such that\nthe `Aᵢ` commute with the `Bⱼ`.\n\nThe physical interpretation is that `A₀` and `A₁` are a pair of boolean observables which\nare spacelike separated from another pair `B₀` and `B₁` of boolean observables.\n-/\nstructure IsCHSHTuple {R} [Monoid R] [StarMul R] (A₀ A₁ B₀ B₁ : R) : Prop where\n  A₀_inv : A₀ ^ 2 = 1\n  A₁_inv : A₁ ^ 2 = 1\n  B₀_inv : B₀ ^ 2 = 1\n  B₁_inv : B₁ ^ 2 = 1\n  A₀_sa : star A₀ = A₀\n  A₁_sa : star A₁ = A₁\n  B₀_sa : star B₀ = B₀\n  B₁_sa : star B₁ = B₁\n  A₀B₀_commutes : A₀ * B₀ = B₀ * A₀\n  A₀B₁_commutes : A₀ * B₁ = B₁ * A₀\n  A₁B₀_commutes : A₁ * B₀ = B₀ * A₁\n  A₁B₁_commutes : A₁ * B₁ = B₁ * A₁\n\n"}
{"name":"IsCHSHTuple.A₁B₀_commutes","module":"Mathlib.Algebra.Star.CHSH","initialProofState":"R : Type u_1\ninst✝¹ : Monoid R\ninst✝ : StarMul R\nA₀ A₁ B₀ B₁ : R\nself : IsCHSHTuple A₀ A₁ B₀ B₁\n⊢ Eq (HMul.hMul A₁ B₀) (HMul.hMul B₀ A₁)","decl":"/-- A CHSH tuple in a *-monoid consists of 4 self-adjoint involutions `A₀ A₁ B₀ B₁` such that\nthe `Aᵢ` commute with the `Bⱼ`.\n\nThe physical interpretation is that `A₀` and `A₁` are a pair of boolean observables which\nare spacelike separated from another pair `B₀` and `B₁` of boolean observables.\n-/\nstructure IsCHSHTuple {R} [Monoid R] [StarMul R] (A₀ A₁ B₀ B₁ : R) : Prop where\n  A₀_inv : A₀ ^ 2 = 1\n  A₁_inv : A₁ ^ 2 = 1\n  B₀_inv : B₀ ^ 2 = 1\n  B₁_inv : B₁ ^ 2 = 1\n  A₀_sa : star A₀ = A₀\n  A₁_sa : star A₁ = A₁\n  B₀_sa : star B₀ = B₀\n  B₁_sa : star B₁ = B₁\n  A₀B₀_commutes : A₀ * B₀ = B₀ * A₀\n  A₀B₁_commutes : A₀ * B₁ = B₁ * A₀\n  A₁B₀_commutes : A₁ * B₀ = B₀ * A₁\n  A₁B₁_commutes : A₁ * B₁ = B₁ * A₁\n\n"}
{"name":"IsCHSHTuple.A₀B₀_commutes","module":"Mathlib.Algebra.Star.CHSH","initialProofState":"R : Type u_1\ninst✝¹ : Monoid R\ninst✝ : StarMul R\nA₀ A₁ B₀ B₁ : R\nself : IsCHSHTuple A₀ A₁ B₀ B₁\n⊢ Eq (HMul.hMul A₀ B₀) (HMul.hMul B₀ A₀)","decl":"/-- A CHSH tuple in a *-monoid consists of 4 self-adjoint involutions `A₀ A₁ B₀ B₁` such that\nthe `Aᵢ` commute with the `Bⱼ`.\n\nThe physical interpretation is that `A₀` and `A₁` are a pair of boolean observables which\nare spacelike separated from another pair `B₀` and `B₁` of boolean observables.\n-/\nstructure IsCHSHTuple {R} [Monoid R] [StarMul R] (A₀ A₁ B₀ B₁ : R) : Prop where\n  A₀_inv : A₀ ^ 2 = 1\n  A₁_inv : A₁ ^ 2 = 1\n  B₀_inv : B₀ ^ 2 = 1\n  B₁_inv : B₁ ^ 2 = 1\n  A₀_sa : star A₀ = A₀\n  A₁_sa : star A₁ = A₁\n  B₀_sa : star B₀ = B₀\n  B₁_sa : star B₁ = B₁\n  A₀B₀_commutes : A₀ * B₀ = B₀ * A₀\n  A₀B₁_commutes : A₀ * B₁ = B₁ * A₀\n  A₁B₀_commutes : A₁ * B₀ = B₀ * A₁\n  A₁B₁_commutes : A₁ * B₁ = B₁ * A₁\n\n"}
{"name":"IsCHSHTuple.B₀_inv","module":"Mathlib.Algebra.Star.CHSH","initialProofState":"R : Type u_1\ninst✝¹ : Monoid R\ninst✝ : StarMul R\nA₀ A₁ B₀ B₁ : R\nself : IsCHSHTuple A₀ A₁ B₀ B₁\n⊢ Eq (HPow.hPow B₀ 2) 1","decl":"/-- A CHSH tuple in a *-monoid consists of 4 self-adjoint involutions `A₀ A₁ B₀ B₁` such that\nthe `Aᵢ` commute with the `Bⱼ`.\n\nThe physical interpretation is that `A₀` and `A₁` are a pair of boolean observables which\nare spacelike separated from another pair `B₀` and `B₁` of boolean observables.\n-/\nstructure IsCHSHTuple {R} [Monoid R] [StarMul R] (A₀ A₁ B₀ B₁ : R) : Prop where\n  A₀_inv : A₀ ^ 2 = 1\n  A₁_inv : A₁ ^ 2 = 1\n  B₀_inv : B₀ ^ 2 = 1\n  B₁_inv : B₁ ^ 2 = 1\n  A₀_sa : star A₀ = A₀\n  A₁_sa : star A₁ = A₁\n  B₀_sa : star B₀ = B₀\n  B₁_sa : star B₁ = B₁\n  A₀B₀_commutes : A₀ * B₀ = B₀ * A₀\n  A₀B₁_commutes : A₀ * B₁ = B₁ * A₀\n  A₁B₀_commutes : A₁ * B₀ = B₀ * A₁\n  A₁B₁_commutes : A₁ * B₁ = B₁ * A₁\n\n"}
{"name":"IsCHSHTuple.B₁_sa","module":"Mathlib.Algebra.Star.CHSH","initialProofState":"R : Type u_1\ninst✝¹ : Monoid R\ninst✝ : StarMul R\nA₀ A₁ B₀ B₁ : R\nself : IsCHSHTuple A₀ A₁ B₀ B₁\n⊢ Eq (Star.star B₁) B₁","decl":"/-- A CHSH tuple in a *-monoid consists of 4 self-adjoint involutions `A₀ A₁ B₀ B₁` such that\nthe `Aᵢ` commute with the `Bⱼ`.\n\nThe physical interpretation is that `A₀` and `A₁` are a pair of boolean observables which\nare spacelike separated from another pair `B₀` and `B₁` of boolean observables.\n-/\nstructure IsCHSHTuple {R} [Monoid R] [StarMul R] (A₀ A₁ B₀ B₁ : R) : Prop where\n  A₀_inv : A₀ ^ 2 = 1\n  A₁_inv : A₁ ^ 2 = 1\n  B₀_inv : B₀ ^ 2 = 1\n  B₁_inv : B₁ ^ 2 = 1\n  A₀_sa : star A₀ = A₀\n  A₁_sa : star A₁ = A₁\n  B₀_sa : star B₀ = B₀\n  B₁_sa : star B₁ = B₁\n  A₀B₀_commutes : A₀ * B₀ = B₀ * A₀\n  A₀B₁_commutes : A₀ * B₁ = B₁ * A₀\n  A₁B₀_commutes : A₁ * B₀ = B₀ * A₁\n  A₁B₁_commutes : A₁ * B₁ = B₁ * A₁\n\n"}
{"name":"IsCHSHTuple.A₁B₁_commutes","module":"Mathlib.Algebra.Star.CHSH","initialProofState":"R : Type u_1\ninst✝¹ : Monoid R\ninst✝ : StarMul R\nA₀ A₁ B₀ B₁ : R\nself : IsCHSHTuple A₀ A₁ B₀ B₁\n⊢ Eq (HMul.hMul A₁ B₁) (HMul.hMul B₁ A₁)","decl":"/-- A CHSH tuple in a *-monoid consists of 4 self-adjoint involutions `A₀ A₁ B₀ B₁` such that\nthe `Aᵢ` commute with the `Bⱼ`.\n\nThe physical interpretation is that `A₀` and `A₁` are a pair of boolean observables which\nare spacelike separated from another pair `B₀` and `B₁` of boolean observables.\n-/\nstructure IsCHSHTuple {R} [Monoid R] [StarMul R] (A₀ A₁ B₀ B₁ : R) : Prop where\n  A₀_inv : A₀ ^ 2 = 1\n  A₁_inv : A₁ ^ 2 = 1\n  B₀_inv : B₀ ^ 2 = 1\n  B₁_inv : B₁ ^ 2 = 1\n  A₀_sa : star A₀ = A₀\n  A₁_sa : star A₁ = A₁\n  B₀_sa : star B₀ = B₀\n  B₁_sa : star B₁ = B₁\n  A₀B₀_commutes : A₀ * B₀ = B₀ * A₀\n  A₀B₁_commutes : A₀ * B₁ = B₁ * A₀\n  A₁B₀_commutes : A₁ * B₀ = B₀ * A₁\n  A₁B₁_commutes : A₁ * B₁ = B₁ * A₁\n\n"}
{"name":"IsCHSHTuple.B₀_sa","module":"Mathlib.Algebra.Star.CHSH","initialProofState":"R : Type u_1\ninst✝¹ : Monoid R\ninst✝ : StarMul R\nA₀ A₁ B₀ B₁ : R\nself : IsCHSHTuple A₀ A₁ B₀ B₁\n⊢ Eq (Star.star B₀) B₀","decl":"/-- A CHSH tuple in a *-monoid consists of 4 self-adjoint involutions `A₀ A₁ B₀ B₁` such that\nthe `Aᵢ` commute with the `Bⱼ`.\n\nThe physical interpretation is that `A₀` and `A₁` are a pair of boolean observables which\nare spacelike separated from another pair `B₀` and `B₁` of boolean observables.\n-/\nstructure IsCHSHTuple {R} [Monoid R] [StarMul R] (A₀ A₁ B₀ B₁ : R) : Prop where\n  A₀_inv : A₀ ^ 2 = 1\n  A₁_inv : A₁ ^ 2 = 1\n  B₀_inv : B₀ ^ 2 = 1\n  B₁_inv : B₁ ^ 2 = 1\n  A₀_sa : star A₀ = A₀\n  A₁_sa : star A₁ = A₁\n  B₀_sa : star B₀ = B₀\n  B₁_sa : star B₁ = B₁\n  A₀B₀_commutes : A₀ * B₀ = B₀ * A₀\n  A₀B₁_commutes : A₀ * B₁ = B₁ * A₀\n  A₁B₀_commutes : A₁ * B₀ = B₀ * A₁\n  A₁B₁_commutes : A₁ * B₁ = B₁ * A₁\n\n"}
{"name":"IsCHSHTuple.A₀_inv","module":"Mathlib.Algebra.Star.CHSH","initialProofState":"R : Type u_1\ninst✝¹ : Monoid R\ninst✝ : StarMul R\nA₀ A₁ B₀ B₁ : R\nself : IsCHSHTuple A₀ A₁ B₀ B₁\n⊢ Eq (HPow.hPow A₀ 2) 1","decl":"/-- A CHSH tuple in a *-monoid consists of 4 self-adjoint involutions `A₀ A₁ B₀ B₁` such that\nthe `Aᵢ` commute with the `Bⱼ`.\n\nThe physical interpretation is that `A₀` and `A₁` are a pair of boolean observables which\nare spacelike separated from another pair `B₀` and `B₁` of boolean observables.\n-/\nstructure IsCHSHTuple {R} [Monoid R] [StarMul R] (A₀ A₁ B₀ B₁ : R) : Prop where\n  A₀_inv : A₀ ^ 2 = 1\n  A₁_inv : A₁ ^ 2 = 1\n  B₀_inv : B₀ ^ 2 = 1\n  B₁_inv : B₁ ^ 2 = 1\n  A₀_sa : star A₀ = A₀\n  A₁_sa : star A₁ = A₁\n  B₀_sa : star B₀ = B₀\n  B₁_sa : star B₁ = B₁\n  A₀B₀_commutes : A₀ * B₀ = B₀ * A₀\n  A₀B₁_commutes : A₀ * B₁ = B₁ * A₀\n  A₁B₀_commutes : A₁ * B₀ = B₀ * A₁\n  A₁B₁_commutes : A₁ * B₁ = B₁ * A₁\n\n"}
{"name":"IsCHSHTuple.A₁_sa","module":"Mathlib.Algebra.Star.CHSH","initialProofState":"R : Type u_1\ninst✝¹ : Monoid R\ninst✝ : StarMul R\nA₀ A₁ B₀ B₁ : R\nself : IsCHSHTuple A₀ A₁ B₀ B₁\n⊢ Eq (Star.star A₁) A₁","decl":"/-- A CHSH tuple in a *-monoid consists of 4 self-adjoint involutions `A₀ A₁ B₀ B₁` such that\nthe `Aᵢ` commute with the `Bⱼ`.\n\nThe physical interpretation is that `A₀` and `A₁` are a pair of boolean observables which\nare spacelike separated from another pair `B₀` and `B₁` of boolean observables.\n-/\nstructure IsCHSHTuple {R} [Monoid R] [StarMul R] (A₀ A₁ B₀ B₁ : R) : Prop where\n  A₀_inv : A₀ ^ 2 = 1\n  A₁_inv : A₁ ^ 2 = 1\n  B₀_inv : B₀ ^ 2 = 1\n  B₁_inv : B₁ ^ 2 = 1\n  A₀_sa : star A₀ = A₀\n  A₁_sa : star A₁ = A₁\n  B₀_sa : star B₀ = B₀\n  B₁_sa : star B₁ = B₁\n  A₀B₀_commutes : A₀ * B₀ = B₀ * A₀\n  A₀B₁_commutes : A₀ * B₁ = B₁ * A₀\n  A₁B₀_commutes : A₁ * B₀ = B₀ * A₁\n  A₁B₁_commutes : A₁ * B₁ = B₁ * A₁\n\n"}
{"name":"IsCHSHTuple.B₁_inv","module":"Mathlib.Algebra.Star.CHSH","initialProofState":"R : Type u_1\ninst✝¹ : Monoid R\ninst✝ : StarMul R\nA₀ A₁ B₀ B₁ : R\nself : IsCHSHTuple A₀ A₁ B₀ B₁\n⊢ Eq (HPow.hPow B₁ 2) 1","decl":"/-- A CHSH tuple in a *-monoid consists of 4 self-adjoint involutions `A₀ A₁ B₀ B₁` such that\nthe `Aᵢ` commute with the `Bⱼ`.\n\nThe physical interpretation is that `A₀` and `A₁` are a pair of boolean observables which\nare spacelike separated from another pair `B₀` and `B₁` of boolean observables.\n-/\nstructure IsCHSHTuple {R} [Monoid R] [StarMul R] (A₀ A₁ B₀ B₁ : R) : Prop where\n  A₀_inv : A₀ ^ 2 = 1\n  A₁_inv : A₁ ^ 2 = 1\n  B₀_inv : B₀ ^ 2 = 1\n  B₁_inv : B₁ ^ 2 = 1\n  A₀_sa : star A₀ = A₀\n  A₁_sa : star A₁ = A₁\n  B₀_sa : star B₀ = B₀\n  B₁_sa : star B₁ = B₁\n  A₀B₀_commutes : A₀ * B₀ = B₀ * A₀\n  A₀B₁_commutes : A₀ * B₁ = B₁ * A₀\n  A₁B₀_commutes : A₁ * B₀ = B₀ * A₁\n  A₁B₁_commutes : A₁ * B₁ = B₁ * A₁\n\n"}
{"name":"CHSH_id","module":"Mathlib.Algebra.Star.CHSH","initialProofState":"R : Type u\ninst✝ : CommRing R\nA₀ A₁ B₀ B₁ : R\nA₀_inv : Eq (HPow.hPow A₀ 2) 1\nA₁_inv : Eq (HPow.hPow A₁ 2) 1\nB₀_inv : Eq (HPow.hPow B₀ 2) 1\nB₁_inv : Eq (HPow.hPow B₁ 2) 1\n⊢ Eq (HMul.hMul (HAdd.hAdd (HSub.hSub (HSub.hSub (HSub.hSub 2 (HMul.hMul A₀ B₀)) (HMul.hMul A₀ B₁)) (HMul.hMul A₁ B₀)) (HMul.hMul A₁ B₁)) (HAdd.hAdd (HSub.hSub (HSub.hSub (HSub.hSub 2 (HMul.hMul A₀ B₀)) (HMul.hMul A₀ B₁)) (HMul.hMul A₁ B₀)) (HMul.hMul A₁ B₁))) (HMul.hMul 4 (HAdd.hAdd (HSub.hSub (HSub.hSub (HSub.hSub 2 (HMul.hMul A₀ B₀)) (HMul.hMul A₀ B₁)) (HMul.hMul A₁ B₀)) (HMul.hMul A₁ B₁)))","decl":"theorem CHSH_id [CommRing R] {A₀ A₁ B₀ B₁ : R} (A₀_inv : A₀ ^ 2 = 1) (A₁_inv : A₁ ^ 2 = 1)\n    (B₀_inv : B₀ ^ 2 = 1) (B₁_inv : B₁ ^ 2 = 1) :\n    (2 - A₀ * B₀ - A₀ * B₁ - A₁ * B₀ + A₁ * B₁) * (2 - A₀ * B₀ - A₀ * B₁ - A₁ * B₀ + A₁ * B₁) =\n      4 * (2 - A₀ * B₀ - A₀ * B₁ - A₁ * B₀ + A₁ * B₁) := by\n  -- polyrith suggests:\n  linear_combination\n    (2 * B₀ * B₁ + 2) * A₀_inv + (B₀ ^ 2 - 2 * B₀ * B₁ + B₁ ^ 2) * A₁_inv +\n        (A₀ ^ 2 + 2 * A₀ * A₁ + 1) * B₀_inv +\n      (A₀ ^ 2 - 2 * A₀ * A₁ + 1) * B₁_inv\n\n"}
{"name":"CHSH_inequality_of_comm","module":"Mathlib.Algebra.Star.CHSH","initialProofState":"R : Type u\ninst✝⁴ : OrderedCommRing R\ninst✝³ : StarRing R\ninst✝² : StarOrderedRing R\ninst✝¹ : Algebra Real R\ninst✝ : OrderedSMul Real R\nA₀ A₁ B₀ B₁ : R\nT : IsCHSHTuple A₀ A₁ B₀ B₁\n⊢ LE.le (HSub.hSub (HAdd.hAdd (HAdd.hAdd (HMul.hMul A₀ B₀) (HMul.hMul A₀ B₁)) (HMul.hMul A₁ B₀)) (HMul.hMul A₁ B₁)) 2","decl":"/-- Given a CHSH tuple (A₀, A₁, B₀, B₁) in a *commutative* ordered `*`-algebra over ℝ,\n`A₀ * B₀ + A₀ * B₁ + A₁ * B₀ - A₁ * B₁ ≤ 2`.\n\n(We could work over ℤ[⅟2] if we wanted to!)\n-/\ntheorem CHSH_inequality_of_comm [OrderedCommRing R] [StarRing R] [StarOrderedRing R] [Algebra ℝ R]\n    [OrderedSMul ℝ R] (A₀ A₁ B₀ B₁ : R) (T : IsCHSHTuple A₀ A₁ B₀ B₁) :\n    A₀ * B₀ + A₀ * B₁ + A₁ * B₀ - A₁ * B₁ ≤ 2 := by\n  let P := 2 - A₀ * B₀ - A₀ * B₁ - A₁ * B₀ + A₁ * B₁\n  have i₁ : 0 ≤ P := by\n    have idem : P * P = 4 * P := CHSH_id T.A₀_inv T.A₁_inv T.B₀_inv T.B₁_inv\n    have idem' : P = (1 / 4 : ℝ) • (P * P) := by\n      have h : 4 * P = (4 : ℝ) • P := by simp [map_ofNat, Algebra.smul_def]\n      rw [idem, h, ← mul_smul]\n      norm_num\n    have sa : star P = P := by\n      dsimp [P]\n      simp only [star_add, star_sub, star_mul, star_ofNat, star_one, T.A₀_sa, T.A₁_sa, T.B₀_sa,\n        T.B₁_sa, mul_comm B₀, mul_comm B₁]\n    simpa only [← idem', sa]\n      using smul_nonneg (by norm_num : (0 : ℝ) ≤ 1 / 4) (star_mul_self_nonneg P)\n  apply le_of_sub_nonneg\n  simpa only [sub_add_eq_sub_sub, ← sub_add] using i₁\n\n"}
{"name":"TsirelsonInequality.tsirelson_inequality_aux","module":"Mathlib.Algebra.Star.CHSH","initialProofState":"⊢ Eq (HMul.hMul (Real.sqrt 2) (HPow.hPow (Real.sqrt 2) 3)) (HMul.hMul (Real.sqrt 2) (HAdd.hAdd (HMul.hMul 2 (Inv.inv (Real.sqrt 2))) (HMul.hMul 4 (HMul.hMul (Inv.inv (Real.sqrt 2)) (Inv.inv 2)))))","decl":"theorem tsirelson_inequality_aux : √2 * √2 ^ 3 = √2 * (2 * (√2)⁻¹ + 4 * ((√2)⁻¹ * 2⁻¹)) := by\n  ring_nf\n  rw [mul_inv_cancel₀ (ne_of_gt (Real.sqrt_pos.2 (show (2 : ℝ) > 0 by norm_num)))]\n  convert congr_arg (· ^ 2) (@Real.sq_sqrt 2 (by norm_num)) using 1 <;>\n    (try simp only [← pow_mul]) <;> norm_num\n\n"}
{"name":"TsirelsonInequality.sqrt_two_inv_mul_self","module":"Mathlib.Algebra.Star.CHSH","initialProofState":"⊢ Eq (HMul.hMul (Inv.inv (Real.sqrt 2)) (Inv.inv (Real.sqrt 2))) (Inv.inv 2)","decl":"theorem sqrt_two_inv_mul_self : (√2)⁻¹ * (√2)⁻¹ = (2⁻¹ : ℝ) := by\n  rw [← mul_inv]\n  norm_num\n\n"}
{"name":"tsirelson_inequality","module":"Mathlib.Algebra.Star.CHSH","initialProofState":"R : Type u\ninst✝⁵ : OrderedRing R\ninst✝⁴ : StarRing R\ninst✝³ : StarOrderedRing R\ninst✝² : Algebra Real R\ninst✝¹ : OrderedSMul Real R\ninst✝ : StarModule Real R\nA₀ A₁ B₀ B₁ : R\nT : IsCHSHTuple A₀ A₁ B₀ B₁\n⊢ LE.le (HSub.hSub (HAdd.hAdd (HAdd.hAdd (HMul.hMul A₀ B₀) (HMul.hMul A₀ B₁)) (HMul.hMul A₁ B₀)) (HMul.hMul A₁ B₁)) (HSMul.hSMul (HPow.hPow (Real.sqrt 2) 3) 1)","decl":"/-- In a noncommutative ordered `*`-algebra over ℝ,\nTsirelson's bound for a CHSH tuple (A₀, A₁, B₀, B₁) is\n`A₀ * B₀ + A₀ * B₁ + A₁ * B₀ - A₁ * B₁ ≤ 2^(3/2) • 1`.\n\nWe prove this by providing an explicit sum-of-squares decomposition\nof the difference.\n\n(We could work over `ℤ[2^(1/2), 2^(-1/2)]` if we really wanted to!)\n-/\ntheorem tsirelson_inequality [OrderedRing R] [StarRing R] [StarOrderedRing R] [Algebra ℝ R]\n    [OrderedSMul ℝ R] [StarModule ℝ R] (A₀ A₁ B₀ B₁ : R) (T : IsCHSHTuple A₀ A₁ B₀ B₁) :\n    A₀ * B₀ + A₀ * B₁ + A₁ * B₀ - A₁ * B₁ ≤ √2 ^ 3 • (1 : R) := by\n  -- abel will create `ℤ` multiplication. We will `simp` them away to `ℝ` multiplication.\n  have M : ∀ (m : ℤ) (a : ℝ) (x : R), m • a • x = ((m : ℝ) * a) • x := fun m a x => by\n    rw [← Int.cast_smul_eq_zsmul ℝ, ← mul_smul]\n  let P := (√2)⁻¹ • (A₁ + A₀) - B₀\n  let Q := (√2)⁻¹ • (A₁ - A₀) + B₁\n  have w : √2 ^ 3 • (1 : R) - A₀ * B₀ - A₀ * B₁ - A₁ * B₀ + A₁ * B₁ = (√2)⁻¹ • (P ^ 2 + Q ^ 2) := by\n    dsimp [P, Q]\n    -- distribute out all the powers and products appearing on the RHS\n    simp only [sq, sub_mul, mul_sub, add_mul, mul_add, smul_add, smul_sub]\n    -- pull all coefficients out to the front, and combine `√2`s where possible\n    simp only [Algebra.mul_smul_comm, Algebra.smul_mul_assoc, ← mul_smul, sqrt_two_inv_mul_self]\n    -- replace Aᵢ * Aᵢ = 1 and Bᵢ * Bᵢ = 1\n    simp only [← sq, T.A₀_inv, T.A₁_inv, T.B₀_inv, T.B₁_inv]\n    -- move Aᵢ to the left of Bᵢ\n    simp only [← T.A₀B₀_commutes, ← T.A₀B₁_commutes, ← T.A₁B₀_commutes, ← T.A₁B₁_commutes]\n    -- collect terms, simplify coefficients, and collect terms again:\n    abel_nf\n    -- all terms coincide, but the last one. Simplify all other terms\n    simp only [M]\n    simp only [neg_mul, one_mul, mul_inv_cancel_of_invertible, Int.cast_one, add_assoc, add_comm,\n      add_left_comm, one_smul, Int.cast_neg, neg_smul, Int.cast_ofNat]\n    simp only [← add_assoc, ← add_smul]\n    -- just look at the coefficients now:\n    congr\n    exact mul_left_cancel₀ (by norm_num) tsirelson_inequality_aux\n  have pos : 0 ≤ (√2)⁻¹ • (P ^ 2 + Q ^ 2) := by\n    have P_sa : star P = P := by\n      simp only [P, star_smul, star_add, star_sub, star_id_of_comm, T.A₀_sa, T.A₁_sa, T.B₀_sa,\n        T.B₁_sa]\n    have Q_sa : star Q = Q := by\n      simp only [Q, star_smul, star_add, star_sub, star_id_of_comm, T.A₀_sa, T.A₁_sa, T.B₀_sa,\n        T.B₁_sa]\n    have P2_nonneg : 0 ≤ P ^ 2 := by simpa only [P_sa, sq] using star_mul_self_nonneg P\n    have Q2_nonneg : 0 ≤ Q ^ 2 := by simpa only [Q_sa, sq] using star_mul_self_nonneg Q\n    exact smul_nonneg (by positivity) (add_nonneg P2_nonneg Q2_nonneg)\n  apply le_of_sub_nonneg\n  simpa only [sub_add_eq_sub_sub, ← sub_add, w, Nat.cast_zero] using pos\n"}
