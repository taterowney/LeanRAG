{"name":"DFunLike.finite","module":"Mathlib.Data.FunLike.Fintype","initialProofState":"F : Sort u_1\nα : Sort u_3\nβ : α → Sort u_5\ninst✝² : DFunLike F α β\ninst✝¹ : Finite α\ninst✝ : ∀ (i : α), Finite (β i)\n⊢ Finite F","decl":"/-- All `DFunLike`s are finite if their domain and codomain are.\n\nCan't be an instance because it can cause infinite loops.\n-/\ntheorem DFunLike.finite [Finite α] [∀ i, Finite (β i)] : Finite F :=\n  Finite.of_injective _ DFunLike.coe_injective\n\n"}
{"name":"FunLike.finite","module":"Mathlib.Data.FunLike.Fintype","initialProofState":"G : Sort u_2\nα : Sort u_3\nγ : Sort u_4\ninst✝² : FunLike G α γ\ninst✝¹ : Finite α\ninst✝ : Finite γ\n⊢ Finite G","decl":"/-- All `FunLike`s are finite if their domain and codomain are.\n\nNon-dependent version of `DFunLike.finite` that might be easier to infer.\nCan't be an instance because it can cause infinite loops.\n-/\ntheorem FunLike.finite [Finite α] [Finite γ] : Finite G :=\n  DFunLike.finite G\n\n"}
