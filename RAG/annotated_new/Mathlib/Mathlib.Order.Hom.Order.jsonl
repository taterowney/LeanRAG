{"name":"OrderHom.coe_sup","module":"Mathlib.Order.Hom.Order","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : Preorder α\ninst✝ : SemilatticeSup β\nf g : OrderHom α β\n⊢ Eq (⇑(Max.max f g)) (Max.max ⇑f ⇑g)","decl":"@[simp] lemma coe_sup [SemilatticeSup β] (f g : α →o β) :\n  ((f ⊔ g : α →o β) : α → β) = (f : α → β) ⊔ g := rfl\n\n"}
{"name":"OrderHom.coe_inf","module":"Mathlib.Order.Hom.Order","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : Preorder α\ninst✝ : SemilatticeInf β\nf g : OrderHom α β\n⊢ Eq (⇑(Min.min f g)) (Min.min ⇑f ⇑g)","decl":"@[simp] lemma coe_inf [SemilatticeInf β] (f g : α →o β) :\n  ((f ⊓ g : α →o β) : α → β) = (f : α → β) ⊓ g := rfl\n\n"}
{"name":"OrderHom.instBotOfOrderBot_bot","module":"Mathlib.Order.Hom.Order","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : Preorder α\ninst✝¹ : Preorder β\ninst✝ : OrderBot β\n⊢ Eq Bot.bot ((OrderHom.const α) Bot.bot)","decl":"@[simps]\ninstance [Preorder β] [OrderBot β] : Bot (α →o β) where\n  bot := const α ⊥\n\n"}
{"name":"OrderHom.instTopOrderHom_top","module":"Mathlib.Order.Hom.Order","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : Preorder α\ninst✝¹ : Preorder β\ninst✝ : OrderTop β\n⊢ Eq Top.top ((OrderHom.const α) Top.top)","decl":"@[simps]\ninstance instTopOrderHom [Preorder β] [OrderTop β] : Top (α →o β) where\n  top := const α ⊤\n\n"}
{"name":"OrderHom.sInf_apply","module":"Mathlib.Order.Hom.Order","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : Preorder α\ninst✝ : CompleteLattice β\ns : Set (OrderHom α β)\nx : α\n⊢ Eq ((InfSet.sInf s) x) (iInf fun f => iInf fun h => f x)","decl":"@[simp]\ntheorem sInf_apply [CompleteLattice β] (s : Set (α →o β)) (x : α) :\n    sInf s x = ⨅ f ∈ s, (f :) x :=\n  rfl\n\n"}
{"name":"OrderHom.iInf_apply","module":"Mathlib.Order.Hom.Order","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : Preorder α\nι : Sort u_3\ninst✝ : CompleteLattice β\nf : ι → OrderHom α β\nx : α\n⊢ Eq ((iInf fun i => f i) x) (iInf fun i => (f i) x)","decl":"theorem iInf_apply {ι : Sort*} [CompleteLattice β] (f : ι → α →o β) (x : α) :\n    (⨅ i, f i) x = ⨅ i, f i x :=\n  (sInf_apply _ _).trans iInf_range\n\n"}
{"name":"OrderHom.coe_iInf","module":"Mathlib.Order.Hom.Order","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : Preorder α\nι : Sort u_3\ninst✝ : CompleteLattice β\nf : ι → OrderHom α β\n⊢ Eq (⇑(iInf fun i => f i)) (iInf fun i => ⇑(f i))","decl":"@[simp, norm_cast]\ntheorem coe_iInf {ι : Sort*} [CompleteLattice β] (f : ι → α →o β) :\n    ((⨅ i, f i : α →o β) : α → β) = ⨅ i, (f i : α → β) := by\n  funext x; simp [iInf_apply]\n\n"}
{"name":"OrderHom.sSup_apply","module":"Mathlib.Order.Hom.Order","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : Preorder α\ninst✝ : CompleteLattice β\ns : Set (OrderHom α β)\nx : α\n⊢ Eq ((SupSet.sSup s) x) (iSup fun f => iSup fun h => f x)","decl":"@[simp]\ntheorem sSup_apply [CompleteLattice β] (s : Set (α →o β)) (x : α) :\n    sSup s x = ⨆ f ∈ s, (f :) x :=\n  rfl\n\n"}
{"name":"OrderHom.iSup_apply","module":"Mathlib.Order.Hom.Order","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : Preorder α\nι : Sort u_3\ninst✝ : CompleteLattice β\nf : ι → OrderHom α β\nx : α\n⊢ Eq ((iSup fun i => f i) x) (iSup fun i => (f i) x)","decl":"theorem iSup_apply {ι : Sort*} [CompleteLattice β] (f : ι → α →o β) (x : α) :\n    (⨆ i, f i) x = ⨆ i, f i x :=\n  (sSup_apply _ _).trans iSup_range\n\n"}
{"name":"OrderHom.coe_iSup","module":"Mathlib.Order.Hom.Order","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : Preorder α\nι : Sort u_3\ninst✝ : CompleteLattice β\nf : ι → OrderHom α β\n⊢ Eq (⇑(iSup fun i => f i)) (iSup fun i => ⇑(f i))","decl":"@[simp, norm_cast]\ntheorem coe_iSup {ι : Sort*} [CompleteLattice β] (f : ι → α →o β) :\n    ((⨆ i, f i : α →o β) : α → β) = ⨆ i, (f i : α → β) := by\n  funext x; simp [iSup_apply]\n\n"}
{"name":"OrderHom.iterate_sup_le_sup_iff","module":"Mathlib.Order.Hom.Order","initialProofState":"α : Type u_3\ninst✝ : SemilatticeSup α\nf : OrderHom α α\n⊢ Iff (∀ (n₁ n₂ : Nat) (a₁ a₂ : α), LE.le (Nat.iterate (⇑f) (HAdd.hAdd n₁ n₂) (Max.max a₁ a₂)) (Max.max (Nat.iterate (⇑f) n₁ a₁) (Nat.iterate (⇑f) n₂ a₂))) (∀ (a₁ a₂ : α), LE.le (f (Max.max a₁ a₂)) (Max.max (f a₁) a₂))","decl":"theorem iterate_sup_le_sup_iff {α : Type*} [SemilatticeSup α] (f : α →o α) :\n    (∀ n₁ n₂ a₁ a₂, f^[n₁ + n₂] (a₁ ⊔ a₂) ≤ f^[n₁] a₁ ⊔ f^[n₂] a₂) ↔\n      ∀ a₁ a₂, f (a₁ ⊔ a₂) ≤ f a₁ ⊔ a₂ := by\n  constructor <;> intro h\n  · exact h 1 0\n  · intro n₁ n₂ a₁ a₂\n    have h' : ∀ n a₁ a₂, f^[n] (a₁ ⊔ a₂) ≤ f^[n] a₁ ⊔ a₂ := by\n      intro n\n      induction n with\n      | zero => intro a₁ a₂; rfl\n      | succ n ih =>\n        intro a₁ a₂\n        calc\n          f^[n + 1] (a₁ ⊔ a₂) = f^[n] (f (a₁ ⊔ a₂)) := Function.iterate_succ_apply f n _\n          _ ≤ f^[n] (f a₁ ⊔ a₂) := f.mono.iterate n (h a₁ a₂)\n          _ ≤ f^[n] (f a₁) ⊔ a₂ := ih _ _\n          _ = f^[n + 1] a₁ ⊔ a₂ := by rw [← Function.iterate_succ_apply]\n    calc\n      f^[n₁ + n₂] (a₁ ⊔ a₂) = f^[n₁] (f^[n₂] (a₁ ⊔ a₂)) :=\n        Function.iterate_add_apply f n₁ n₂ _\n      _ = f^[n₁] (f^[n₂] (a₂ ⊔ a₁)) := by rw [sup_comm]\n      _ ≤ f^[n₁] (f^[n₂] a₂ ⊔ a₁) := f.mono.iterate n₁ (h' n₂ _ _)\n      _ = f^[n₁] (a₁ ⊔ f^[n₂] a₂) := by rw [sup_comm]\n      _ ≤ f^[n₁] a₁ ⊔ f^[n₂] a₂ := h' n₁ a₁ _\n\n"}
