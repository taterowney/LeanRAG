{"name":"Orientation.oangle_eq_two_zsmul_oangle_sub_of_norm_eq","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\ninst✝² : NormedAddCommGroup V\ninst✝¹ : InnerProductSpace Real V\ninst✝ : Fact (Eq (Module.finrank Real V) 2)\no : Orientation Real V (Fin 2)\nx y z : V\nhxyne : Ne x y\nhxzne : Ne x z\nhxy : Eq (Norm.norm x) (Norm.norm y)\nhxz : Eq (Norm.norm x) (Norm.norm z)\n⊢ Eq (o.oangle y z) (HSMul.hSMul 2 (o.oangle (HSub.hSub y x) (HSub.hSub z x)))","decl":"/-- Angle at center of a circle equals twice angle at circumference, oriented vector angle\nform. -/\ntheorem oangle_eq_two_zsmul_oangle_sub_of_norm_eq {x y z : V} (hxyne : x ≠ y) (hxzne : x ≠ z)\n    (hxy : ‖x‖ = ‖y‖) (hxz : ‖x‖ = ‖z‖) : o.oangle y z = (2 : ℤ) • o.oangle (y - x) (z - x) := by\n  have hy : y ≠ 0 := by\n    rintro rfl\n    rw [norm_zero, norm_eq_zero] at hxy\n    exact hxyne hxy\n  have hx : x ≠ 0 := norm_ne_zero_iff.1 (hxy.symm ▸ norm_ne_zero_iff.2 hy)\n  have hz : z ≠ 0 := norm_ne_zero_iff.1 (hxz ▸ norm_ne_zero_iff.2 hx)\n  calc\n    o.oangle y z = o.oangle x z - o.oangle x y := (o.oangle_sub_left hx hy hz).symm\n    _ = π - (2 : ℤ) • o.oangle (x - z) x - (π - (2 : ℤ) • o.oangle (x - y) x) := by\n      rw [o.oangle_eq_pi_sub_two_zsmul_oangle_sub_of_norm_eq hxzne.symm hxz.symm,\n        o.oangle_eq_pi_sub_two_zsmul_oangle_sub_of_norm_eq hxyne.symm hxy.symm]\n    _ = (2 : ℤ) • (o.oangle (x - y) x - o.oangle (x - z) x) := by abel\n    _ = (2 : ℤ) • o.oangle (x - y) (x - z) := by\n      rw [o.oangle_sub_right (sub_ne_zero_of_ne hxyne) (sub_ne_zero_of_ne hxzne) hx]\n    _ = (2 : ℤ) • o.oangle (y - x) (z - x) := by rw [← oangle_neg_neg, neg_sub, neg_sub]\n\n"}
{"name":"Orientation.oangle_eq_two_zsmul_oangle_sub_of_norm_eq_real","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\ninst✝² : NormedAddCommGroup V\ninst✝¹ : InnerProductSpace Real V\ninst✝ : Fact (Eq (Module.finrank Real V) 2)\no : Orientation Real V (Fin 2)\nx y z : V\nhxyne : Ne x y\nhxzne : Ne x z\nr : Real\nhx : Eq (Norm.norm x) r\nhy : Eq (Norm.norm y) r\nhz : Eq (Norm.norm z) r\n⊢ Eq (o.oangle y z) (HSMul.hSMul 2 (o.oangle (HSub.hSub y x) (HSub.hSub z x)))","decl":"/-- Angle at center of a circle equals twice angle at circumference, oriented vector angle\nform with radius specified. -/\ntheorem oangle_eq_two_zsmul_oangle_sub_of_norm_eq_real {x y z : V} (hxyne : x ≠ y) (hxzne : x ≠ z)\n    {r : ℝ} (hx : ‖x‖ = r) (hy : ‖y‖ = r) (hz : ‖z‖ = r) :\n    o.oangle y z = (2 : ℤ) • o.oangle (y - x) (z - x) :=\n  o.oangle_eq_two_zsmul_oangle_sub_of_norm_eq hxyne hxzne (hy.symm ▸ hx) (hz.symm ▸ hx)\n\n"}
{"name":"Orientation.two_zsmul_oangle_sub_eq_two_zsmul_oangle_sub_of_norm_eq","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\ninst✝² : NormedAddCommGroup V\ninst✝¹ : InnerProductSpace Real V\ninst✝ : Fact (Eq (Module.finrank Real V) 2)\no : Orientation Real V (Fin 2)\nx₁ x₂ y z : V\nhx₁yne : Ne x₁ y\nhx₁zne : Ne x₁ z\nhx₂yne : Ne x₂ y\nhx₂zne : Ne x₂ z\nr : Real\nhx₁ : Eq (Norm.norm x₁) r\nhx₂ : Eq (Norm.norm x₂) r\nhy : Eq (Norm.norm y) r\nhz : Eq (Norm.norm z) r\n⊢ Eq (HSMul.hSMul 2 (o.oangle (HSub.hSub y x₁) (HSub.hSub z x₁))) (HSMul.hSMul 2 (o.oangle (HSub.hSub y x₂) (HSub.hSub z x₂)))","decl":"/-- Oriented vector angle version of \"angles in same segment are equal\" and \"opposite angles of\na cyclic quadrilateral add to π\", for oriented angles mod π (for which those are the same\nresult), represented here as equality of twice the angles. -/\ntheorem two_zsmul_oangle_sub_eq_two_zsmul_oangle_sub_of_norm_eq {x₁ x₂ y z : V} (hx₁yne : x₁ ≠ y)\n    (hx₁zne : x₁ ≠ z) (hx₂yne : x₂ ≠ y) (hx₂zne : x₂ ≠ z) {r : ℝ} (hx₁ : ‖x₁‖ = r) (hx₂ : ‖x₂‖ = r)\n    (hy : ‖y‖ = r) (hz : ‖z‖ = r) :\n    (2 : ℤ) • o.oangle (y - x₁) (z - x₁) = (2 : ℤ) • o.oangle (y - x₂) (z - x₂) :=\n  o.oangle_eq_two_zsmul_oangle_sub_of_norm_eq_real hx₁yne hx₁zne hx₁ hy hz ▸\n    o.oangle_eq_two_zsmul_oangle_sub_of_norm_eq_real hx₂yne hx₂zne hx₂ hy hz\n\n"}
{"name":"EuclideanGeometry.Sphere.oangle_center_eq_two_zsmul_oangle","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : NormedAddCommGroup V\ninst✝³ : InnerProductSpace Real V\ninst✝² : MetricSpace P\ninst✝¹ : NormedAddTorsor V P\nhd2 : Fact (Eq (Module.finrank Real V) 2)\ninst✝ : Module.Oriented Real V (Fin 2)\ns : EuclideanGeometry.Sphere P\np₁ p₂ p₃ : P\nhp₁ : Membership.mem s p₁\nhp₂ : Membership.mem s p₂\nhp₃ : Membership.mem s p₃\nhp₂p₁ : Ne p₂ p₁\nhp₂p₃ : Ne p₂ p₃\n⊢ Eq (EuclideanGeometry.oangle p₁ s.center p₃) (HSMul.hSMul 2 (EuclideanGeometry.oangle p₁ p₂ p₃))","decl":"/-- Angle at center of a circle equals twice angle at circumference, oriented angle version. -/\ntheorem oangle_center_eq_two_zsmul_oangle {s : Sphere P} {p₁ p₂ p₃ : P} (hp₁ : p₁ ∈ s)\n    (hp₂ : p₂ ∈ s) (hp₃ : p₃ ∈ s) (hp₂p₁ : p₂ ≠ p₁) (hp₂p₃ : p₂ ≠ p₃) :\n    ∡ p₁ s.center p₃ = (2 : ℤ) • ∡ p₁ p₂ p₃ := by\n  rw [mem_sphere, @dist_eq_norm_vsub V] at hp₁ hp₂ hp₃\n  rw [oangle, oangle, o.oangle_eq_two_zsmul_oangle_sub_of_norm_eq_real _ _ hp₂ hp₁ hp₃] <;>\n    simp [hp₂p₁, hp₂p₃]\n\n"}
{"name":"EuclideanGeometry.Sphere.two_zsmul_oangle_eq","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : NormedAddCommGroup V\ninst✝³ : InnerProductSpace Real V\ninst✝² : MetricSpace P\ninst✝¹ : NormedAddTorsor V P\nhd2 : Fact (Eq (Module.finrank Real V) 2)\ninst✝ : Module.Oriented Real V (Fin 2)\ns : EuclideanGeometry.Sphere P\np₁ p₂ p₃ p₄ : P\nhp₁ : Membership.mem s p₁\nhp₂ : Membership.mem s p₂\nhp₃ : Membership.mem s p₃\nhp₄ : Membership.mem s p₄\nhp₂p₁ : Ne p₂ p₁\nhp₂p₄ : Ne p₂ p₄\nhp₃p₁ : Ne p₃ p₁\nhp₃p₄ : Ne p₃ p₄\n⊢ Eq (HSMul.hSMul 2 (EuclideanGeometry.oangle p₁ p₂ p₄)) (HSMul.hSMul 2 (EuclideanGeometry.oangle p₁ p₃ p₄))","decl":"/-- Oriented angle version of \"angles in same segment are equal\" and \"opposite angles of a\ncyclic quadrilateral add to π\", for oriented angles mod π (for which those are the same result),\nrepresented here as equality of twice the angles. -/\ntheorem two_zsmul_oangle_eq {s : Sphere P} {p₁ p₂ p₃ p₄ : P} (hp₁ : p₁ ∈ s) (hp₂ : p₂ ∈ s)\n    (hp₃ : p₃ ∈ s) (hp₄ : p₄ ∈ s) (hp₂p₁ : p₂ ≠ p₁) (hp₂p₄ : p₂ ≠ p₄) (hp₃p₁ : p₃ ≠ p₁)\n    (hp₃p₄ : p₃ ≠ p₄) : (2 : ℤ) • ∡ p₁ p₂ p₄ = (2 : ℤ) • ∡ p₁ p₃ p₄ := by\n  rw [mem_sphere, @dist_eq_norm_vsub V] at hp₁ hp₂ hp₃ hp₄\n  rw [oangle, oangle, ← vsub_sub_vsub_cancel_right p₁ p₂ s.center, ←\n      vsub_sub_vsub_cancel_right p₄ p₂ s.center,\n      o.two_zsmul_oangle_sub_eq_two_zsmul_oangle_sub_of_norm_eq _ _ _ _ hp₂ hp₃ hp₁ hp₄] <;>\n    simp [hp₂p₁, hp₂p₄, hp₃p₁, hp₃p₄]\n\n"}
{"name":"EuclideanGeometry.Cospherical.two_zsmul_oangle_eq","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : NormedAddCommGroup V\ninst✝³ : InnerProductSpace Real V\ninst✝² : MetricSpace P\ninst✝¹ : NormedAddTorsor V P\nhd2 : Fact (Eq (Module.finrank Real V) 2)\ninst✝ : Module.Oriented Real V (Fin 2)\np₁ p₂ p₃ p₄ : P\nh : EuclideanGeometry.Cospherical (Insert.insert p₁ (Insert.insert p₂ (Insert.insert p₃ (Singleton.singleton p₄))))\nhp₂p₁ : Ne p₂ p₁\nhp₂p₄ : Ne p₂ p₄\nhp₃p₁ : Ne p₃ p₁\nhp₃p₄ : Ne p₃ p₄\n⊢ Eq (HSMul.hSMul 2 (EuclideanGeometry.oangle p₁ p₂ p₄)) (HSMul.hSMul 2 (EuclideanGeometry.oangle p₁ p₃ p₄))","decl":"/-- Oriented angle version of \"angles in same segment are equal\" and \"opposite angles of a\ncyclic quadrilateral add to π\", for oriented angles mod π (for which those are the same result),\nrepresented here as equality of twice the angles. -/\ntheorem Cospherical.two_zsmul_oangle_eq {p₁ p₂ p₃ p₄ : P}\n    (h : Cospherical ({p₁, p₂, p₃, p₄} : Set P)) (hp₂p₁ : p₂ ≠ p₁) (hp₂p₄ : p₂ ≠ p₄)\n    (hp₃p₁ : p₃ ≠ p₁) (hp₃p₄ : p₃ ≠ p₄) : (2 : ℤ) • ∡ p₁ p₂ p₄ = (2 : ℤ) • ∡ p₁ p₃ p₄ := by\n  obtain ⟨s, hs⟩ := cospherical_iff_exists_sphere.1 h\n  simp_rw [Set.insert_subset_iff, Set.singleton_subset_iff, Sphere.mem_coe] at hs\n  exact Sphere.two_zsmul_oangle_eq hs.1 hs.2.1 hs.2.2.1 hs.2.2.2 hp₂p₁ hp₂p₄ hp₃p₁ hp₃p₄\n\n"}
{"name":"EuclideanGeometry.Sphere.oangle_eq_pi_sub_two_zsmul_oangle_center_left","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : NormedAddCommGroup V\ninst✝³ : InnerProductSpace Real V\ninst✝² : MetricSpace P\ninst✝¹ : NormedAddTorsor V P\nhd2 : Fact (Eq (Module.finrank Real V) 2)\ninst✝ : Module.Oriented Real V (Fin 2)\ns : EuclideanGeometry.Sphere P\np₁ p₂ : P\nhp₁ : Membership.mem s p₁\nhp₂ : Membership.mem s p₂\nh : Ne p₁ p₂\n⊢ Eq (EuclideanGeometry.oangle p₁ s.center p₂) (HSub.hSub (↑Real.pi) (HSMul.hSMul 2 (EuclideanGeometry.oangle s.center p₂ p₁)))","decl":"/-- The angle at the apex of an isosceles triangle is `π` minus twice a base angle, oriented\nangle-at-point form where the apex is given as the center of a circle. -/\ntheorem oangle_eq_pi_sub_two_zsmul_oangle_center_left {s : Sphere P} {p₁ p₂ : P} (hp₁ : p₁ ∈ s)\n    (hp₂ : p₂ ∈ s) (h : p₁ ≠ p₂) : ∡ p₁ s.center p₂ = π - (2 : ℤ) • ∡ s.center p₂ p₁ := by\n  rw [oangle_eq_pi_sub_two_zsmul_oangle_of_dist_eq h.symm\n      (dist_center_eq_dist_center_of_mem_sphere' hp₂ hp₁)]\n\n"}
{"name":"EuclideanGeometry.Sphere.oangle_eq_pi_sub_two_zsmul_oangle_center_right","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : NormedAddCommGroup V\ninst✝³ : InnerProductSpace Real V\ninst✝² : MetricSpace P\ninst✝¹ : NormedAddTorsor V P\nhd2 : Fact (Eq (Module.finrank Real V) 2)\ninst✝ : Module.Oriented Real V (Fin 2)\ns : EuclideanGeometry.Sphere P\np₁ p₂ : P\nhp₁ : Membership.mem s p₁\nhp₂ : Membership.mem s p₂\nh : Ne p₁ p₂\n⊢ Eq (EuclideanGeometry.oangle p₁ s.center p₂) (HSub.hSub (↑Real.pi) (HSMul.hSMul 2 (EuclideanGeometry.oangle p₂ p₁ s.center)))","decl":"/-- The angle at the apex of an isosceles triangle is `π` minus twice a base angle, oriented\nangle-at-point form where the apex is given as the center of a circle. -/\ntheorem oangle_eq_pi_sub_two_zsmul_oangle_center_right {s : Sphere P} {p₁ p₂ : P} (hp₁ : p₁ ∈ s)\n    (hp₂ : p₂ ∈ s) (h : p₁ ≠ p₂) : ∡ p₁ s.center p₂ = π - (2 : ℤ) • ∡ p₂ p₁ s.center := by\n  rw [oangle_eq_pi_sub_two_zsmul_oangle_center_left hp₁ hp₂ h,\n    oangle_eq_oangle_of_dist_eq (dist_center_eq_dist_center_of_mem_sphere' hp₂ hp₁)]\n\n"}
{"name":"EuclideanGeometry.Sphere.two_zsmul_oangle_center_add_two_zsmul_oangle_eq_pi","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : NormedAddCommGroup V\ninst✝³ : InnerProductSpace Real V\ninst✝² : MetricSpace P\ninst✝¹ : NormedAddTorsor V P\nhd2 : Fact (Eq (Module.finrank Real V) 2)\ninst✝ : Module.Oriented Real V (Fin 2)\ns : EuclideanGeometry.Sphere P\np₁ p₂ p₃ : P\nhp₁ : Membership.mem s p₁\nhp₂ : Membership.mem s p₂\nhp₃ : Membership.mem s p₃\nhp₂p₁ : Ne p₂ p₁\nhp₂p₃ : Ne p₂ p₃\nhp₁p₃ : Ne p₁ p₃\n⊢ Eq (HAdd.hAdd (HSMul.hSMul 2 (EuclideanGeometry.oangle p₃ p₁ s.center)) (HSMul.hSMul 2 (EuclideanGeometry.oangle p₁ p₂ p₃))) ↑Real.pi","decl":"/-- Twice a base angle of an isosceles triangle with apex at the center of a circle, plus twice\nthe angle at the apex of a triangle with the same base but apex on the circle, equals `π`. -/\ntheorem two_zsmul_oangle_center_add_two_zsmul_oangle_eq_pi {s : Sphere P} {p₁ p₂ p₃ : P}\n    (hp₁ : p₁ ∈ s) (hp₂ : p₂ ∈ s) (hp₃ : p₃ ∈ s) (hp₂p₁ : p₂ ≠ p₁) (hp₂p₃ : p₂ ≠ p₃)\n    (hp₁p₃ : p₁ ≠ p₃) : (2 : ℤ) • ∡ p₃ p₁ s.center + (2 : ℤ) • ∡ p₁ p₂ p₃ = π := by\n  rw [← oangle_center_eq_two_zsmul_oangle hp₁ hp₂ hp₃ hp₂p₁ hp₂p₃,\n    oangle_eq_pi_sub_two_zsmul_oangle_center_right hp₁ hp₃ hp₁p₃, add_sub_cancel]\n\n"}
{"name":"EuclideanGeometry.Sphere.abs_oangle_center_left_toReal_lt_pi_div_two","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : NormedAddCommGroup V\ninst✝³ : InnerProductSpace Real V\ninst✝² : MetricSpace P\ninst✝¹ : NormedAddTorsor V P\nhd2 : Fact (Eq (Module.finrank Real V) 2)\ninst✝ : Module.Oriented Real V (Fin 2)\ns : EuclideanGeometry.Sphere P\np₁ p₂ : P\nhp₁ : Membership.mem s p₁\nhp₂ : Membership.mem s p₂\n⊢ LT.lt (abs (EuclideanGeometry.oangle s.center p₂ p₁).toReal) (HDiv.hDiv Real.pi 2)","decl":"/-- A base angle of an isosceles triangle with apex at the center of a circle is acute. -/\ntheorem abs_oangle_center_left_toReal_lt_pi_div_two {s : Sphere P} {p₁ p₂ : P} (hp₁ : p₁ ∈ s)\n    (hp₂ : p₂ ∈ s) : |(∡ s.center p₂ p₁).toReal| < π / 2 :=\n  abs_oangle_right_toReal_lt_pi_div_two_of_dist_eq\n    (dist_center_eq_dist_center_of_mem_sphere' hp₂ hp₁)\n\n"}
{"name":"EuclideanGeometry.Sphere.abs_oangle_center_right_toReal_lt_pi_div_two","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : NormedAddCommGroup V\ninst✝³ : InnerProductSpace Real V\ninst✝² : MetricSpace P\ninst✝¹ : NormedAddTorsor V P\nhd2 : Fact (Eq (Module.finrank Real V) 2)\ninst✝ : Module.Oriented Real V (Fin 2)\ns : EuclideanGeometry.Sphere P\np₁ p₂ : P\nhp₁ : Membership.mem s p₁\nhp₂ : Membership.mem s p₂\n⊢ LT.lt (abs (EuclideanGeometry.oangle p₂ p₁ s.center).toReal) (HDiv.hDiv Real.pi 2)","decl":"/-- A base angle of an isosceles triangle with apex at the center of a circle is acute. -/\ntheorem abs_oangle_center_right_toReal_lt_pi_div_two {s : Sphere P} {p₁ p₂ : P} (hp₁ : p₁ ∈ s)\n    (hp₂ : p₂ ∈ s) : |(∡ p₂ p₁ s.center).toReal| < π / 2 :=\n  abs_oangle_left_toReal_lt_pi_div_two_of_dist_eq\n    (dist_center_eq_dist_center_of_mem_sphere' hp₂ hp₁)\n\n"}
{"name":"EuclideanGeometry.Sphere.tan_div_two_smul_rotation_pi_div_two_vadd_midpoint_eq_center","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : NormedAddCommGroup V\ninst✝³ : InnerProductSpace Real V\ninst✝² : MetricSpace P\ninst✝¹ : NormedAddTorsor V P\nhd2 : Fact (Eq (Module.finrank Real V) 2)\ninst✝ : Module.Oriented Real V (Fin 2)\ns : EuclideanGeometry.Sphere P\np₁ p₂ : P\nhp₁ : Membership.mem s p₁\nhp₂ : Membership.mem s p₂\nh : Ne p₁ p₂\n⊢ Eq (HVAdd.hVAdd (HSMul.hSMul (HDiv.hDiv (EuclideanGeometry.oangle p₂ p₁ s.center).tan 2) ((EuclideanGeometry.o.rotation ↑(HDiv.hDiv Real.pi 2)) (VSub.vsub p₂ p₁))) (midpoint Real p₁ p₂)) s.center","decl":"/-- Given two points on a circle, the center of that circle may be expressed explicitly as a\nmultiple (by half the tangent of the angle between the chord and the radius at one of those\npoints) of a `π / 2` rotation of the vector between those points, plus the midpoint of those\npoints. -/\ntheorem tan_div_two_smul_rotation_pi_div_two_vadd_midpoint_eq_center {s : Sphere P} {p₁ p₂ : P}\n    (hp₁ : p₁ ∈ s) (hp₂ : p₂ ∈ s) (h : p₁ ≠ p₂) :\n    (Real.Angle.tan (∡ p₂ p₁ s.center) / 2) • o.rotation (π / 2 : ℝ) (p₂ -ᵥ p₁) +ᵥ\n      midpoint ℝ p₁ p₂ = s.center := by\n  obtain ⟨r, hr⟩ := (dist_eq_iff_eq_smul_rotation_pi_div_two_vadd_midpoint h).1\n    (dist_center_eq_dist_center_of_mem_sphere hp₁ hp₂)\n  rw [← hr, ← oangle_midpoint_rev_left, oangle, vadd_vsub_assoc]\n  nth_rw 1 [show p₂ -ᵥ p₁ = (2 : ℝ) • (midpoint ℝ p₁ p₂ -ᵥ p₁) by simp]\n  rw [map_smul, smul_smul, add_comm, o.tan_oangle_add_right_smul_rotation_pi_div_two,\n    mul_div_cancel_right₀ _ (two_ne_zero' ℝ)]\n  simpa using h.symm\n\n"}
{"name":"EuclideanGeometry.Sphere.inv_tan_div_two_smul_rotation_pi_div_two_vadd_midpoint_eq_center","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : NormedAddCommGroup V\ninst✝³ : InnerProductSpace Real V\ninst✝² : MetricSpace P\ninst✝¹ : NormedAddTorsor V P\nhd2 : Fact (Eq (Module.finrank Real V) 2)\ninst✝ : Module.Oriented Real V (Fin 2)\ns : EuclideanGeometry.Sphere P\np₁ p₂ p₃ : P\nhp₁ : Membership.mem s p₁\nhp₂ : Membership.mem s p₂\nhp₃ : Membership.mem s p₃\nhp₁p₂ : Ne p₁ p₂\nhp₁p₃ : Ne p₁ p₃\nhp₂p₃ : Ne p₂ p₃\n⊢ Eq (HVAdd.hVAdd (HSMul.hSMul (HDiv.hDiv (Inv.inv (EuclideanGeometry.oangle p₁ p₂ p₃).tan) 2) ((EuclideanGeometry.o.rotation ↑(HDiv.hDiv Real.pi 2)) (VSub.vsub p₃ p₁))) (midpoint Real p₁ p₃)) s.center","decl":"/-- Given three points on a circle, the center of that circle may be expressed explicitly as a\nmultiple (by half the inverse of the tangent of the angle at one of those points) of a `π / 2`\nrotation of the vector between the other two points, plus the midpoint of those points. -/\ntheorem inv_tan_div_two_smul_rotation_pi_div_two_vadd_midpoint_eq_center {s : Sphere P}\n    {p₁ p₂ p₃ : P} (hp₁ : p₁ ∈ s) (hp₂ : p₂ ∈ s) (hp₃ : p₃ ∈ s) (hp₁p₂ : p₁ ≠ p₂) (hp₁p₃ : p₁ ≠ p₃)\n    (hp₂p₃ : p₂ ≠ p₃) :\n    ((Real.Angle.tan (∡ p₁ p₂ p₃))⁻¹ / 2) • o.rotation (π / 2 : ℝ) (p₃ -ᵥ p₁) +ᵥ midpoint ℝ p₁ p₃ =\n      s.center := by\n  convert tan_div_two_smul_rotation_pi_div_two_vadd_midpoint_eq_center hp₁ hp₃ hp₁p₃\n  convert (Real.Angle.tan_eq_inv_of_two_zsmul_add_two_zsmul_eq_pi _).symm\n  rw [add_comm,\n    two_zsmul_oangle_center_add_two_zsmul_oangle_eq_pi hp₁ hp₂ hp₃ hp₁p₂.symm hp₂p₃ hp₁p₃]\n\n"}
{"name":"EuclideanGeometry.Sphere.dist_div_cos_oangle_center_div_two_eq_radius","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : NormedAddCommGroup V\ninst✝³ : InnerProductSpace Real V\ninst✝² : MetricSpace P\ninst✝¹ : NormedAddTorsor V P\nhd2 : Fact (Eq (Module.finrank Real V) 2)\ninst✝ : Module.Oriented Real V (Fin 2)\ns : EuclideanGeometry.Sphere P\np₁ p₂ : P\nhp₁ : Membership.mem s p₁\nhp₂ : Membership.mem s p₂\nh : Ne p₁ p₂\n⊢ Eq (HDiv.hDiv (HDiv.hDiv (Dist.dist p₁ p₂) (EuclideanGeometry.oangle p₂ p₁ s.center).cos) 2) s.radius","decl":"/-- Given two points on a circle, the radius of that circle may be expressed explicitly as half\nthe distance between those two points divided by the cosine of the angle between the chord and\nthe radius at one of those points. -/\ntheorem dist_div_cos_oangle_center_div_two_eq_radius {s : Sphere P} {p₁ p₂ : P} (hp₁ : p₁ ∈ s)\n    (hp₂ : p₂ ∈ s) (h : p₁ ≠ p₂) :\n    dist p₁ p₂ / Real.Angle.cos (∡ p₂ p₁ s.center) / 2 = s.radius := by\n  rw [div_right_comm, div_eq_mul_inv _ (2 : ℝ), mul_comm,\n    show (2 : ℝ)⁻¹ * dist p₁ p₂ = dist p₁ (midpoint ℝ p₁ p₂) by simp, ← mem_sphere.1 hp₁, ←\n    tan_div_two_smul_rotation_pi_div_two_vadd_midpoint_eq_center hp₁ hp₂ h, ←\n    oangle_midpoint_rev_left, oangle, vadd_vsub_assoc,\n    show p₂ -ᵥ p₁ = (2 : ℝ) • (midpoint ℝ p₁ p₂ -ᵥ p₁) by simp, map_smul, smul_smul,\n    div_mul_cancel₀ _ (two_ne_zero' ℝ), @dist_eq_norm_vsub' V, @dist_eq_norm_vsub' V,\n    vadd_vsub_assoc, add_comm, o.oangle_add_right_smul_rotation_pi_div_two, Real.Angle.cos_coe,\n    Real.cos_arctan]\n  · norm_cast\n    rw [one_div, div_inv_eq_mul, ←\n      mul_self_inj (mul_nonneg (norm_nonneg _) (Real.sqrt_nonneg _)) (norm_nonneg _),\n      norm_add_sq_eq_norm_sq_add_norm_sq_real (o.inner_smul_rotation_pi_div_two_right _ _), ←\n      mul_assoc, mul_comm, mul_comm _ (√_), ← mul_assoc, ← mul_assoc,\n      Real.mul_self_sqrt (add_nonneg zero_le_one (sq_nonneg _)), norm_smul,\n      LinearIsometryEquiv.norm_map]\n    conv_rhs =>\n      rw [← mul_assoc, mul_comm _ ‖Real.Angle.tan _‖, ← mul_assoc, Real.norm_eq_abs,\n        abs_mul_abs_self]\n    ring\n  · simpa using h.symm\n\n"}
{"name":"EuclideanGeometry.Sphere.dist_div_cos_oangle_center_eq_two_mul_radius","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : NormedAddCommGroup V\ninst✝³ : InnerProductSpace Real V\ninst✝² : MetricSpace P\ninst✝¹ : NormedAddTorsor V P\nhd2 : Fact (Eq (Module.finrank Real V) 2)\ninst✝ : Module.Oriented Real V (Fin 2)\ns : EuclideanGeometry.Sphere P\np₁ p₂ : P\nhp₁ : Membership.mem s p₁\nhp₂ : Membership.mem s p₂\nh : Ne p₁ p₂\n⊢ Eq (HDiv.hDiv (Dist.dist p₁ p₂) (EuclideanGeometry.oangle p₂ p₁ s.center).cos) (HMul.hMul 2 s.radius)","decl":"/-- Given two points on a circle, twice the radius of that circle may be expressed explicitly as\nthe distance between those two points divided by the cosine of the angle between the chord and\nthe radius at one of those points. -/\ntheorem dist_div_cos_oangle_center_eq_two_mul_radius {s : Sphere P} {p₁ p₂ : P} (hp₁ : p₁ ∈ s)\n    (hp₂ : p₂ ∈ s) (h : p₁ ≠ p₂) :\n    dist p₁ p₂ / Real.Angle.cos (∡ p₂ p₁ s.center) = 2 * s.radius := by\n  rw [← dist_div_cos_oangle_center_div_two_eq_radius hp₁ hp₂ h, mul_div_cancel₀ _ (two_ne_zero' ℝ)]\n\n"}
{"name":"EuclideanGeometry.Sphere.dist_div_sin_oangle_div_two_eq_radius","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : NormedAddCommGroup V\ninst✝³ : InnerProductSpace Real V\ninst✝² : MetricSpace P\ninst✝¹ : NormedAddTorsor V P\nhd2 : Fact (Eq (Module.finrank Real V) 2)\ninst✝ : Module.Oriented Real V (Fin 2)\ns : EuclideanGeometry.Sphere P\np₁ p₂ p₃ : P\nhp₁ : Membership.mem s p₁\nhp₂ : Membership.mem s p₂\nhp₃ : Membership.mem s p₃\nhp₁p₂ : Ne p₁ p₂\nhp₁p₃ : Ne p₁ p₃\nhp₂p₃ : Ne p₂ p₃\n⊢ Eq (HDiv.hDiv (HDiv.hDiv (Dist.dist p₁ p₃) (abs (EuclideanGeometry.oangle p₁ p₂ p₃).sin)) 2) s.radius","decl":"/-- Given three points on a circle, the radius of that circle may be expressed explicitly as half\nthe distance between two of those points divided by the absolute value of the sine of the angle\nat the third point (a version of the law of sines or sine rule). -/\ntheorem dist_div_sin_oangle_div_two_eq_radius {s : Sphere P} {p₁ p₂ p₃ : P} (hp₁ : p₁ ∈ s)\n    (hp₂ : p₂ ∈ s) (hp₃ : p₃ ∈ s) (hp₁p₂ : p₁ ≠ p₂) (hp₁p₃ : p₁ ≠ p₃) (hp₂p₃ : p₂ ≠ p₃) :\n    dist p₁ p₃ / |Real.Angle.sin (∡ p₁ p₂ p₃)| / 2 = s.radius := by\n  convert dist_div_cos_oangle_center_div_two_eq_radius hp₁ hp₃ hp₁p₃\n  rw [← Real.Angle.abs_cos_eq_abs_sin_of_two_zsmul_add_two_zsmul_eq_pi\n    (two_zsmul_oangle_center_add_two_zsmul_oangle_eq_pi hp₁ hp₂ hp₃ hp₁p₂.symm hp₂p₃ hp₁p₃),\n    _root_.abs_of_nonneg (Real.Angle.cos_nonneg_iff_abs_toReal_le_pi_div_two.2 _)]\n  exact (abs_oangle_center_right_toReal_lt_pi_div_two hp₁ hp₃).le\n\n"}
{"name":"EuclideanGeometry.Sphere.dist_div_sin_oangle_eq_two_mul_radius","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : NormedAddCommGroup V\ninst✝³ : InnerProductSpace Real V\ninst✝² : MetricSpace P\ninst✝¹ : NormedAddTorsor V P\nhd2 : Fact (Eq (Module.finrank Real V) 2)\ninst✝ : Module.Oriented Real V (Fin 2)\ns : EuclideanGeometry.Sphere P\np₁ p₂ p₃ : P\nhp₁ : Membership.mem s p₁\nhp₂ : Membership.mem s p₂\nhp₃ : Membership.mem s p₃\nhp₁p₂ : Ne p₁ p₂\nhp₁p₃ : Ne p₁ p₃\nhp₂p₃ : Ne p₂ p₃\n⊢ Eq (HDiv.hDiv (Dist.dist p₁ p₃) (abs (EuclideanGeometry.oangle p₁ p₂ p₃).sin)) (HMul.hMul 2 s.radius)","decl":"/-- Given three points on a circle, twice the radius of that circle may be expressed explicitly as\nthe distance between two of those points divided by the absolute value of the sine of the angle\nat the third point (a version of the law of sines or sine rule). -/\ntheorem dist_div_sin_oangle_eq_two_mul_radius {s : Sphere P} {p₁ p₂ p₃ : P} (hp₁ : p₁ ∈ s)\n    (hp₂ : p₂ ∈ s) (hp₃ : p₃ ∈ s) (hp₁p₂ : p₁ ≠ p₂) (hp₁p₃ : p₁ ≠ p₃) (hp₂p₃ : p₂ ≠ p₃) :\n    dist p₁ p₃ / |Real.Angle.sin (∡ p₁ p₂ p₃)| = 2 * s.radius := by\n  rw [← dist_div_sin_oangle_div_two_eq_radius hp₁ hp₂ hp₃ hp₁p₂ hp₁p₃ hp₂p₃,\n    mul_div_cancel₀ _ (two_ne_zero' ℝ)]\n\n"}
{"name":"Affine.Triangle.inv_tan_div_two_smul_rotation_pi_div_two_vadd_midpoint_eq_circumcenter","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : NormedAddCommGroup V\ninst✝³ : InnerProductSpace Real V\ninst✝² : MetricSpace P\ninst✝¹ : NormedAddTorsor V P\nhd2 : Fact (Eq (Module.finrank Real V) 2)\ninst✝ : Module.Oriented Real V (Fin 2)\nt : Affine.Triangle Real P\ni₁ i₂ i₃ : Fin 3\nh₁₂ : Ne i₁ i₂\nh₁₃ : Ne i₁ i₃\nh₂₃ : Ne i₂ i₃\n⊢ Eq (HVAdd.hVAdd (HSMul.hSMul (HDiv.hDiv (Inv.inv (EuclideanGeometry.oangle (t.points i₁) (t.points i₂) (t.points i₃)).tan) 2) ((EuclideanGeometry.o.rotation ↑(HDiv.hDiv Real.pi 2)) (VSub.vsub (t.points i₃) (t.points i₁)))) (midpoint Real (t.points i₁) (t.points i₃))) (Affine.Simplex.circumcenter t)","decl":"/-- The circumcenter of a triangle may be expressed explicitly as a multiple (by half the inverse\nof the tangent of the angle at one of the vertices) of a `π / 2` rotation of the vector between\nthe other two vertices, plus the midpoint of those vertices. -/\ntheorem inv_tan_div_two_smul_rotation_pi_div_two_vadd_midpoint_eq_circumcenter (t : Triangle ℝ P)\n    {i₁ i₂ i₃ : Fin 3} (h₁₂ : i₁ ≠ i₂) (h₁₃ : i₁ ≠ i₃) (h₂₃ : i₂ ≠ i₃) :\n    ((Real.Angle.tan (∡ (t.points i₁) (t.points i₂) (t.points i₃)))⁻¹ / 2) •\n      o.rotation (π / 2 : ℝ) (t.points i₃ -ᵥ t.points i₁) +ᵥ\n        midpoint ℝ (t.points i₁) (t.points i₃) = t.circumcenter :=\n  Sphere.inv_tan_div_two_smul_rotation_pi_div_two_vadd_midpoint_eq_center (t.mem_circumsphere _)\n    (t.mem_circumsphere _) (t.mem_circumsphere _) (t.independent.injective.ne h₁₂)\n    (t.independent.injective.ne h₁₃) (t.independent.injective.ne h₂₃)\n\n"}
{"name":"Affine.Triangle.dist_div_sin_oangle_div_two_eq_circumradius","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : NormedAddCommGroup V\ninst✝³ : InnerProductSpace Real V\ninst✝² : MetricSpace P\ninst✝¹ : NormedAddTorsor V P\nhd2 : Fact (Eq (Module.finrank Real V) 2)\ninst✝ : Module.Oriented Real V (Fin 2)\nt : Affine.Triangle Real P\ni₁ i₂ i₃ : Fin 3\nh₁₂ : Ne i₁ i₂\nh₁₃ : Ne i₁ i₃\nh₂₃ : Ne i₂ i₃\n⊢ Eq (HDiv.hDiv (HDiv.hDiv (Dist.dist (t.points i₁) (t.points i₃)) (abs (EuclideanGeometry.oangle (t.points i₁) (t.points i₂) (t.points i₃)).sin)) 2) (Affine.Simplex.circumradius t)","decl":"/-- The circumradius of a triangle may be expressed explicitly as half the length of a side\ndivided by the absolute value of the sine of the angle at the third point (a version of the law\nof sines or sine rule). -/\ntheorem dist_div_sin_oangle_div_two_eq_circumradius (t : Triangle ℝ P) {i₁ i₂ i₃ : Fin 3}\n    (h₁₂ : i₁ ≠ i₂) (h₁₃ : i₁ ≠ i₃) (h₂₃ : i₂ ≠ i₃) : dist (t.points i₁) (t.points i₃) /\n      |Real.Angle.sin (∡ (t.points i₁) (t.points i₂) (t.points i₃))| / 2 = t.circumradius :=\n  Sphere.dist_div_sin_oangle_div_two_eq_radius (t.mem_circumsphere _) (t.mem_circumsphere _)\n    (t.mem_circumsphere _) (t.independent.injective.ne h₁₂) (t.independent.injective.ne h₁₃)\n    (t.independent.injective.ne h₂₃)\n\n"}
{"name":"Affine.Triangle.dist_div_sin_oangle_eq_two_mul_circumradius","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : NormedAddCommGroup V\ninst✝³ : InnerProductSpace Real V\ninst✝² : MetricSpace P\ninst✝¹ : NormedAddTorsor V P\nhd2 : Fact (Eq (Module.finrank Real V) 2)\ninst✝ : Module.Oriented Real V (Fin 2)\nt : Affine.Triangle Real P\ni₁ i₂ i₃ : Fin 3\nh₁₂ : Ne i₁ i₂\nh₁₃ : Ne i₁ i₃\nh₂₃ : Ne i₂ i₃\n⊢ Eq (HDiv.hDiv (Dist.dist (t.points i₁) (t.points i₃)) (abs (EuclideanGeometry.oangle (t.points i₁) (t.points i₂) (t.points i₃)).sin)) (HMul.hMul 2 (Affine.Simplex.circumradius t))","decl":"/-- Twice the circumradius of a triangle may be expressed explicitly as the length of a side\ndivided by the absolute value of the sine of the angle at the third point (a version of the law\nof sines or sine rule). -/\ntheorem dist_div_sin_oangle_eq_two_mul_circumradius (t : Triangle ℝ P) {i₁ i₂ i₃ : Fin 3}\n    (h₁₂ : i₁ ≠ i₂) (h₁₃ : i₁ ≠ i₃) (h₂₃ : i₂ ≠ i₃) : dist (t.points i₁) (t.points i₃) /\n      |Real.Angle.sin (∡ (t.points i₁) (t.points i₂) (t.points i₃))| = 2 * t.circumradius :=\n  Sphere.dist_div_sin_oangle_eq_two_mul_radius (t.mem_circumsphere _) (t.mem_circumsphere _)\n    (t.mem_circumsphere _) (t.independent.injective.ne h₁₂) (t.independent.injective.ne h₁₃)\n    (t.independent.injective.ne h₂₃)\n\n"}
{"name":"Affine.Triangle.circumsphere_eq_of_dist_of_oangle","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : NormedAddCommGroup V\ninst✝³ : InnerProductSpace Real V\ninst✝² : MetricSpace P\ninst✝¹ : NormedAddTorsor V P\nhd2 : Fact (Eq (Module.finrank Real V) 2)\ninst✝ : Module.Oriented Real V (Fin 2)\nt : Affine.Triangle Real P\ni₁ i₂ i₃ : Fin 3\nh₁₂ : Ne i₁ i₂\nh₁₃ : Ne i₁ i₃\nh₂₃ : Ne i₂ i₃\n⊢ Eq (Affine.Simplex.circumsphere t) { center := HVAdd.hVAdd (HSMul.hSMul (HDiv.hDiv (Inv.inv (EuclideanGeometry.oangle (t.points i₁) (t.points i₂) (t.points i₃)).tan) 2) ((EuclideanGeometry.o.rotation ↑(HDiv.hDiv Real.pi 2)) (VSub.vsub (t.points i₃) (t.points i₁)))) (midpoint Real (t.points i₁) (t.points i₃)), radius := HDiv.hDiv (HDiv.hDiv (Dist.dist (t.points i₁) (t.points i₃)) (abs (EuclideanGeometry.oangle (t.points i₁) (t.points i₂) (t.points i₃)).sin)) 2 }","decl":"/-- The circumsphere of a triangle may be expressed explicitly in terms of two points and the\nangle at the third point. -/\ntheorem circumsphere_eq_of_dist_of_oangle (t : Triangle ℝ P) {i₁ i₂ i₃ : Fin 3} (h₁₂ : i₁ ≠ i₂)\n    (h₁₃ : i₁ ≠ i₃) (h₂₃ : i₂ ≠ i₃) : t.circumsphere =\n    ⟨((Real.Angle.tan (∡ (t.points i₁) (t.points i₂) (t.points i₃)))⁻¹ / 2) •\n      o.rotation (π / 2 : ℝ) (t.points i₃ -ᵥ t.points i₁) +ᵥ midpoint ℝ (t.points i₁) (t.points i₃),\n      dist (t.points i₁) (t.points i₃) /\n        |Real.Angle.sin (∡ (t.points i₁) (t.points i₂) (t.points i₃))| / 2⟩ :=\n  t.circumsphere.ext\n    (t.inv_tan_div_two_smul_rotation_pi_div_two_vadd_midpoint_eq_circumcenter h₁₂ h₁₃ h₂₃).symm\n    (t.dist_div_sin_oangle_div_two_eq_circumradius h₁₂ h₁₃ h₂₃).symm\n\n"}
{"name":"Affine.Triangle.circumsphere_eq_circumsphere_of_eq_of_eq_of_two_zsmul_oangle_eq","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : NormedAddCommGroup V\ninst✝³ : InnerProductSpace Real V\ninst✝² : MetricSpace P\ninst✝¹ : NormedAddTorsor V P\nhd2 : Fact (Eq (Module.finrank Real V) 2)\ninst✝ : Module.Oriented Real V (Fin 2)\nt₁ t₂ : Affine.Triangle Real P\ni₁ i₂ i₃ : Fin 3\nh₁₂ : Ne i₁ i₂\nh₁₃ : Ne i₁ i₃\nh₂₃ : Ne i₂ i₃\nh₁ : Eq (t₁.points i₁) (t₂.points i₁)\nh₃ : Eq (t₁.points i₃) (t₂.points i₃)\nh₂ : Eq (HSMul.hSMul 2 (EuclideanGeometry.oangle (t₁.points i₁) (t₁.points i₂) (t₁.points i₃))) (HSMul.hSMul 2 (EuclideanGeometry.oangle (t₂.points i₁) (t₂.points i₂) (t₂.points i₃)))\n⊢ Eq (Affine.Simplex.circumsphere t₁) (Affine.Simplex.circumsphere t₂)","decl":"/-- If two triangles have two points the same, and twice the angle at the third point the same,\nthey have the same circumsphere. -/\ntheorem circumsphere_eq_circumsphere_of_eq_of_eq_of_two_zsmul_oangle_eq {t₁ t₂ : Triangle ℝ P}\n    {i₁ i₂ i₃ : Fin 3} (h₁₂ : i₁ ≠ i₂) (h₁₃ : i₁ ≠ i₃) (h₂₃ : i₂ ≠ i₃)\n    (h₁ : t₁.points i₁ = t₂.points i₁) (h₃ : t₁.points i₃ = t₂.points i₃)\n    (h₂ : (2 : ℤ) • ∡ (t₁.points i₁) (t₁.points i₂) (t₁.points i₃) =\n      (2 : ℤ) • ∡ (t₂.points i₁) (t₂.points i₂) (t₂.points i₃)) :\n    t₁.circumsphere = t₂.circumsphere := by\n  rw [t₁.circumsphere_eq_of_dist_of_oangle h₁₂ h₁₃ h₂₃,\n    t₂.circumsphere_eq_of_dist_of_oangle h₁₂ h₁₃ h₂₃,\n    -- Porting note: was `congrm ⟨((_ : ℝ)⁻¹ / 2) • _ +ᵥ _, _ / _ / 2⟩` and five more lines\n    Real.Angle.tan_eq_of_two_zsmul_eq h₂, Real.Angle.abs_sin_eq_of_two_zsmul_eq h₂, h₁, h₃]\n\n"}
{"name":"Affine.Triangle.mem_circumsphere_of_two_zsmul_oangle_eq","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : NormedAddCommGroup V\ninst✝³ : InnerProductSpace Real V\ninst✝² : MetricSpace P\ninst✝¹ : NormedAddTorsor V P\nhd2 : Fact (Eq (Module.finrank Real V) 2)\ninst✝ : Module.Oriented Real V (Fin 2)\nt : Affine.Triangle Real P\np : P\ni₁ i₂ i₃ : Fin 3\nh₁₂ : Ne i₁ i₂\nh₁₃ : Ne i₁ i₃\nh₂₃ : Ne i₂ i₃\nh : Eq (HSMul.hSMul 2 (EuclideanGeometry.oangle (t.points i₁) p (t.points i₃))) (HSMul.hSMul 2 (EuclideanGeometry.oangle (t.points i₁) (t.points i₂) (t.points i₃)))\n⊢ Membership.mem (Affine.Simplex.circumsphere t) p","decl":"/-- Given a triangle, and a fourth point such that twice the angle between two points of the\ntriangle at that fourth point equals twice the third angle of the triangle, the fourth point\nlies in the circumsphere of the triangle. -/\ntheorem mem_circumsphere_of_two_zsmul_oangle_eq {t : Triangle ℝ P} {p : P} {i₁ i₂ i₃ : Fin 3}\n    (h₁₂ : i₁ ≠ i₂) (h₁₃ : i₁ ≠ i₃) (h₂₃ : i₂ ≠ i₃)\n    (h : (2 : ℤ) • ∡ (t.points i₁) p (t.points i₃) =\n      (2 : ℤ) • ∡ (t.points i₁) (t.points i₂) (t.points i₃)) : p ∈ t.circumsphere := by\n  let t'p : Fin 3 → P := Function.update t.points i₂ p\n  have h₁ : t'p i₁ = t.points i₁ := by simp [t'p, h₁₂]\n  have h₂ : t'p i₂ = p := by simp [t'p]\n  have h₃ : t'p i₃ = t.points i₃ := by simp [t'p, h₂₃.symm]\n  have ha : AffineIndependent ℝ t'p := by\n    rw [affineIndependent_iff_not_collinear_of_ne h₁₂ h₁₃ h₂₃, h₁, h₂, h₃,\n      collinear_iff_of_two_zsmul_oangle_eq h, ←\n      affineIndependent_iff_not_collinear_of_ne h₁₂ h₁₃ h₂₃]\n    exact t.independent\n  let t' : Triangle ℝ P := ⟨t'p, ha⟩\n  have h₁' : t'.points i₁ = t.points i₁ := h₁\n  have h₂' : t'.points i₂ = p := h₂\n  have h₃' : t'.points i₃ = t.points i₃ := h₃\n  have h' : (2 : ℤ) • ∡ (t'.points i₁) (t'.points i₂) (t'.points i₃) =\n      (2 : ℤ) • ∡ (t.points i₁) (t.points i₂) (t.points i₃) := by rwa [h₁', h₂', h₃']\n  rw [← circumsphere_eq_circumsphere_of_eq_of_eq_of_two_zsmul_oangle_eq h₁₂ h₁₃ h₂₃ h₁' h₃' h', ←\n    h₂']\n  exact Simplex.mem_circumsphere _ _\n\n"}
{"name":"EuclideanGeometry.cospherical_of_two_zsmul_oangle_eq_of_not_collinear","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : NormedAddCommGroup V\ninst✝³ : InnerProductSpace Real V\ninst✝² : MetricSpace P\ninst✝¹ : NormedAddTorsor V P\nhd2 : Fact (Eq (Module.finrank Real V) 2)\ninst✝ : Module.Oriented Real V (Fin 2)\np₁ p₂ p₃ p₄ : P\nh : Eq (HSMul.hSMul 2 (EuclideanGeometry.oangle p₁ p₂ p₄)) (HSMul.hSMul 2 (EuclideanGeometry.oangle p₁ p₃ p₄))\nhn : Not (Collinear Real (Insert.insert p₁ (Insert.insert p₂ (Singleton.singleton p₄))))\n⊢ EuclideanGeometry.Cospherical (Insert.insert p₁ (Insert.insert p₂ (Insert.insert p₃ (Singleton.singleton p₄))))","decl":"/-- Converse of \"angles in same segment are equal\" and \"opposite angles of a cyclic quadrilateral\nadd to π\", for oriented angles mod π. -/\ntheorem cospherical_of_two_zsmul_oangle_eq_of_not_collinear {p₁ p₂ p₃ p₄ : P}\n    (h : (2 : ℤ) • ∡ p₁ p₂ p₄ = (2 : ℤ) • ∡ p₁ p₃ p₄) (hn : ¬Collinear ℝ ({p₁, p₂, p₄} : Set P)) :\n    Cospherical ({p₁, p₂, p₃, p₄} : Set P) := by\n  have hn' : ¬Collinear ℝ ({p₁, p₃, p₄} : Set P) := by\n    rwa [← collinear_iff_of_two_zsmul_oangle_eq h]\n  let t₁ : Affine.Triangle ℝ P := ⟨![p₁, p₂, p₄], affineIndependent_iff_not_collinear_set.2 hn⟩\n  let t₂ : Affine.Triangle ℝ P := ⟨![p₁, p₃, p₄], affineIndependent_iff_not_collinear_set.2 hn'⟩\n  rw [cospherical_iff_exists_sphere]\n  refine ⟨t₂.circumsphere, ?_⟩\n  simp_rw [Set.insert_subset_iff, Set.singleton_subset_iff]\n  refine ⟨t₂.mem_circumsphere 0, ?_, t₂.mem_circumsphere 1, t₂.mem_circumsphere 2⟩\n  rw [Affine.Triangle.circumsphere_eq_circumsphere_of_eq_of_eq_of_two_zsmul_oangle_eq\n    (by decide : (0 : Fin 3) ≠ 1) (by decide : (0 : Fin 3) ≠ 2) (by decide)\n    (show t₂.points 0 = t₁.points 0 from rfl) rfl h.symm]\n  exact t₁.mem_circumsphere 1\n\n"}
{"name":"EuclideanGeometry.concyclic_of_two_zsmul_oangle_eq_of_not_collinear","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : NormedAddCommGroup V\ninst✝³ : InnerProductSpace Real V\ninst✝² : MetricSpace P\ninst✝¹ : NormedAddTorsor V P\nhd2 : Fact (Eq (Module.finrank Real V) 2)\ninst✝ : Module.Oriented Real V (Fin 2)\np₁ p₂ p₃ p₄ : P\nh : Eq (HSMul.hSMul 2 (EuclideanGeometry.oangle p₁ p₂ p₄)) (HSMul.hSMul 2 (EuclideanGeometry.oangle p₁ p₃ p₄))\nhn : Not (Collinear Real (Insert.insert p₁ (Insert.insert p₂ (Singleton.singleton p₄))))\n⊢ EuclideanGeometry.Concyclic (Insert.insert p₁ (Insert.insert p₂ (Insert.insert p₃ (Singleton.singleton p₄))))","decl":"/-- Converse of \"angles in same segment are equal\" and \"opposite angles of a cyclic quadrilateral\nadd to π\", for oriented angles mod π, with a \"concyclic\" conclusion. -/\ntheorem concyclic_of_two_zsmul_oangle_eq_of_not_collinear {p₁ p₂ p₃ p₄ : P}\n    (h : (2 : ℤ) • ∡ p₁ p₂ p₄ = (2 : ℤ) • ∡ p₁ p₃ p₄) (hn : ¬Collinear ℝ ({p₁, p₂, p₄} : Set P)) :\n    Concyclic ({p₁, p₂, p₃, p₄} : Set P) :=\n  ⟨cospherical_of_two_zsmul_oangle_eq_of_not_collinear h hn, coplanar_of_fact_finrank_eq_two _⟩\n\n"}
{"name":"EuclideanGeometry.cospherical_or_collinear_of_two_zsmul_oangle_eq","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : NormedAddCommGroup V\ninst✝³ : InnerProductSpace Real V\ninst✝² : MetricSpace P\ninst✝¹ : NormedAddTorsor V P\nhd2 : Fact (Eq (Module.finrank Real V) 2)\ninst✝ : Module.Oriented Real V (Fin 2)\np₁ p₂ p₃ p₄ : P\nh : Eq (HSMul.hSMul 2 (EuclideanGeometry.oangle p₁ p₂ p₄)) (HSMul.hSMul 2 (EuclideanGeometry.oangle p₁ p₃ p₄))\n⊢ Or (EuclideanGeometry.Cospherical (Insert.insert p₁ (Insert.insert p₂ (Insert.insert p₃ (Singleton.singleton p₄))))) (Collinear Real (Insert.insert p₁ (Insert.insert p₂ (Insert.insert p₃ (Singleton.singleton p₄)))))","decl":"/-- Converse of \"angles in same segment are equal\" and \"opposite angles of a cyclic quadrilateral\nadd to π\", for oriented angles mod π, with a \"cospherical or collinear\" conclusion. -/\ntheorem cospherical_or_collinear_of_two_zsmul_oangle_eq {p₁ p₂ p₃ p₄ : P}\n    (h : (2 : ℤ) • ∡ p₁ p₂ p₄ = (2 : ℤ) • ∡ p₁ p₃ p₄) :\n    Cospherical ({p₁, p₂, p₃, p₄} : Set P) ∨ Collinear ℝ ({p₁, p₂, p₃, p₄} : Set P) := by\n  by_cases hc : Collinear ℝ ({p₁, p₂, p₄} : Set P)\n  · by_cases he : p₁ = p₄\n    · rw [he, Set.insert_eq_self.2\n        (Set.mem_insert_of_mem _ (Set.mem_insert_of_mem _ (Set.mem_singleton _)))]\n      by_cases hl : Collinear ℝ ({p₂, p₃, p₄} : Set P); · exact Or.inr hl\n      rw [or_iff_left hl]\n      let t : Affine.Triangle ℝ P := ⟨![p₂, p₃, p₄], affineIndependent_iff_not_collinear_set.2 hl⟩\n      rw [cospherical_iff_exists_sphere]\n      refine ⟨t.circumsphere, ?_⟩\n      simp_rw [Set.insert_subset_iff, Set.singleton_subset_iff]\n      exact ⟨t.mem_circumsphere 0, t.mem_circumsphere 1, t.mem_circumsphere 2⟩\n    have hc' : Collinear ℝ ({p₁, p₃, p₄} : Set P) := by\n      rwa [← collinear_iff_of_two_zsmul_oangle_eq h]\n    refine Or.inr ?_\n    rw [Set.insert_comm p₁ p₂] at hc\n    rwa [Set.insert_comm p₁ p₂, hc'.collinear_insert_iff_of_ne (Set.mem_insert _ _)\n      (Set.mem_insert_of_mem _ (Set.mem_insert_of_mem _ (Set.mem_singleton _))) he]\n  · exact Or.inl (cospherical_of_two_zsmul_oangle_eq_of_not_collinear h hc)\n\n"}
{"name":"EuclideanGeometry.concyclic_or_collinear_of_two_zsmul_oangle_eq","module":"Mathlib.Geometry.Euclidean.Angle.Sphere","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : NormedAddCommGroup V\ninst✝³ : InnerProductSpace Real V\ninst✝² : MetricSpace P\ninst✝¹ : NormedAddTorsor V P\nhd2 : Fact (Eq (Module.finrank Real V) 2)\ninst✝ : Module.Oriented Real V (Fin 2)\np₁ p₂ p₃ p₄ : P\nh : Eq (HSMul.hSMul 2 (EuclideanGeometry.oangle p₁ p₂ p₄)) (HSMul.hSMul 2 (EuclideanGeometry.oangle p₁ p₃ p₄))\n⊢ Or (EuclideanGeometry.Concyclic (Insert.insert p₁ (Insert.insert p₂ (Insert.insert p₃ (Singleton.singleton p₄))))) (Collinear Real (Insert.insert p₁ (Insert.insert p₂ (Insert.insert p₃ (Singleton.singleton p₄)))))","decl":"/-- Converse of \"angles in same segment are equal\" and \"opposite angles of a cyclic quadrilateral\nadd to π\", for oriented angles mod π, with a \"concyclic or collinear\" conclusion. -/\ntheorem concyclic_or_collinear_of_two_zsmul_oangle_eq {p₁ p₂ p₃ p₄ : P}\n    (h : (2 : ℤ) • ∡ p₁ p₂ p₄ = (2 : ℤ) • ∡ p₁ p₃ p₄) :\n    Concyclic ({p₁, p₂, p₃, p₄} : Set P) ∨ Collinear ℝ ({p₁, p₂, p₃, p₄} : Set P) := by\n  rcases cospherical_or_collinear_of_two_zsmul_oangle_eq h with (hc | hc)\n  · exact Or.inl ⟨hc, coplanar_of_fact_finrank_eq_two _⟩\n  · exact Or.inr hc\n\n"}
