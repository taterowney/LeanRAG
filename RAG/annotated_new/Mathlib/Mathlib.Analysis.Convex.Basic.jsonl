{"name":"Convex.starConvex","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : SMul 𝕜 E\ns : Set E\nx : E\nhs : Convex 𝕜 s\nhx : Membership.mem s x\n⊢ StarConvex 𝕜 x s","decl":"theorem Convex.starConvex (hs : Convex 𝕜 s) (hx : x ∈ s) : StarConvex 𝕜 x s :=\n  hs hx\n\n"}
{"name":"convex_iff_segment_subset","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : SMul 𝕜 E\ns : Set E\n⊢ Iff (Convex 𝕜 s) (∀ ⦃x : E⦄, Membership.mem s x → ∀ ⦃y : E⦄, Membership.mem s y → HasSubset.Subset (segment 𝕜 x y) s)","decl":"theorem convex_iff_segment_subset : Convex 𝕜 s ↔ ∀ ⦃x⦄, x ∈ s → ∀ ⦃y⦄, y ∈ s → [x -[𝕜] y] ⊆ s :=\n  forall₂_congr fun _ _ => starConvex_iff_segment_subset\n\n"}
{"name":"Convex.segment_subset","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : SMul 𝕜 E\ns : Set E\nh : Convex 𝕜 s\nx y : E\nhx : Membership.mem s x\nhy : Membership.mem s y\n⊢ HasSubset.Subset (segment 𝕜 x y) s","decl":"theorem Convex.segment_subset (h : Convex 𝕜 s) {x y : E} (hx : x ∈ s) (hy : y ∈ s) :\n    [x -[𝕜] y] ⊆ s :=\n  convex_iff_segment_subset.1 h hx hy\n\n"}
{"name":"Convex.openSegment_subset","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : SMul 𝕜 E\ns : Set E\nh : Convex 𝕜 s\nx y : E\nhx : Membership.mem s x\nhy : Membership.mem s y\n⊢ HasSubset.Subset (openSegment 𝕜 x y) s","decl":"theorem Convex.openSegment_subset (h : Convex 𝕜 s) {x y : E} (hx : x ∈ s) (hy : y ∈ s) :\n    openSegment 𝕜 x y ⊆ s :=\n  (openSegment_subset_segment 𝕜 x y).trans (h.segment_subset hx hy)\n\n"}
{"name":"convex_iff_pointwise_add_subset","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : SMul 𝕜 E\ns : Set E\n⊢ Iff (Convex 𝕜 s) (∀ ⦃a b : 𝕜⦄, LE.le 0 a → LE.le 0 b → Eq (HAdd.hAdd a b) 1 → HasSubset.Subset (HAdd.hAdd (HSMul.hSMul a s) (HSMul.hSMul b s)) s)","decl":"/-- Alternative definition of set convexity, in terms of pointwise set operations. -/\ntheorem convex_iff_pointwise_add_subset :\n    Convex 𝕜 s ↔ ∀ ⦃a b : 𝕜⦄, 0 ≤ a → 0 ≤ b → a + b = 1 → a • s + b • s ⊆ s :=\n  Iff.intro\n    (by\n      rintro hA a b ha hb hab w ⟨au, ⟨u, hu, rfl⟩, bv, ⟨v, hv, rfl⟩, rfl⟩\n      exact hA hu hv ha hb hab)\n    fun h _ hx _ hy _ _ ha hb hab => (h ha hb hab) (Set.add_mem_add ⟨_, hx, rfl⟩ ⟨_, hy, rfl⟩)\n\n"}
{"name":"Convex.set_combo_subset","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : SMul 𝕜 E\ns : Set E\na✝³ : Convex 𝕜 s\na b : 𝕜\na✝² : LE.le 0 a\na✝¹ : LE.le 0 b\na✝ : Eq (HAdd.hAdd a b) 1\n⊢ HasSubset.Subset (HAdd.hAdd (HSMul.hSMul a s) (HSMul.hSMul b s)) s","decl":"alias ⟨Convex.set_combo_subset, _⟩ := convex_iff_pointwise_add_subset\n\n"}
{"name":"convex_empty","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : SMul 𝕜 E\n⊢ Convex 𝕜 EmptyCollection.emptyCollection","decl":"theorem convex_empty : Convex 𝕜 (∅ : Set E) := fun _ => False.elim\n\n"}
{"name":"convex_univ","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : SMul 𝕜 E\n⊢ Convex 𝕜 Set.univ","decl":"theorem convex_univ : Convex 𝕜 (Set.univ : Set E) := fun _ _ => starConvex_univ _\n\n"}
{"name":"Convex.inter","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : SMul 𝕜 E\ns t : Set E\nhs : Convex 𝕜 s\nht : Convex 𝕜 t\n⊢ Convex 𝕜 (Inter.inter s t)","decl":"theorem Convex.inter {t : Set E} (hs : Convex 𝕜 s) (ht : Convex 𝕜 t) : Convex 𝕜 (s ∩ t) :=\n  fun _ hx => (hs hx.1).inter (ht hx.2)\n\n"}
{"name":"convex_sInter","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : SMul 𝕜 E\nS : Set (Set E)\nh : ∀ (s : Set E), Membership.mem S s → Convex 𝕜 s\n⊢ Convex 𝕜 S.sInter","decl":"theorem convex_sInter {S : Set (Set E)} (h : ∀ s ∈ S, Convex 𝕜 s) : Convex 𝕜 (⋂₀ S) := fun _ hx =>\n  starConvex_sInter fun _ hs => h _ hs <| hx _ hs\n\n"}
{"name":"convex_iInter","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : SMul 𝕜 E\nι : Sort u_5\ns : ι → Set E\nh : ∀ (i : ι), Convex 𝕜 (s i)\n⊢ Convex 𝕜 (Set.iInter fun i => s i)","decl":"theorem convex_iInter {ι : Sort*} {s : ι → Set E} (h : ∀ i, Convex 𝕜 (s i)) :\n    Convex 𝕜 (⋂ i, s i) :=\n  sInter_range s ▸ convex_sInter <| forall_mem_range.2 h\n\n"}
{"name":"convex_iInter₂","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : SMul 𝕜 E\nι : Sort u_5\nκ : ι → Sort u_6\ns : (i : ι) → κ i → Set E\nh : ∀ (i : ι) (j : κ i), Convex 𝕜 (s i j)\n⊢ Convex 𝕜 (Set.iInter fun i => Set.iInter fun j => s i j)","decl":"theorem convex_iInter₂ {ι : Sort*} {κ : ι → Sort*} {s : ∀ i, κ i → Set E}\n    (h : ∀ i j, Convex 𝕜 (s i j)) : Convex 𝕜 (⋂ (i) (j), s i j) :=\n  convex_iInter fun i => convex_iInter <| h i\n\n"}
{"name":"Convex.prod","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : AddCommMonoid F\ninst✝¹ : SMul 𝕜 E\ninst✝ : SMul 𝕜 F\ns : Set E\nt : Set F\nhs : Convex 𝕜 s\nht : Convex 𝕜 t\n⊢ Convex 𝕜 (SProd.sprod s t)","decl":"theorem Convex.prod {s : Set E} {t : Set F} (hs : Convex 𝕜 s) (ht : Convex 𝕜 t) :\n    Convex 𝕜 (s ×ˢ t) := fun _ hx => (hs hx.1).prod (ht hx.2)\n\n"}
{"name":"convex_pi","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\ninst✝² : OrderedSemiring 𝕜\nι : Type u_5\nE : ι → Type u_6\ninst✝¹ : (i : ι) → AddCommMonoid (E i)\ninst✝ : (i : ι) → SMul 𝕜 (E i)\ns : Set ι\nt : (i : ι) → Set (E i)\nht : ∀ ⦃i : ι⦄, Membership.mem s i → Convex 𝕜 (t i)\n⊢ Convex 𝕜 (s.pi t)","decl":"theorem convex_pi {ι : Type*} {E : ι → Type*} [∀ i, AddCommMonoid (E i)] [∀ i, SMul 𝕜 (E i)]\n    {s : Set ι} {t : ∀ i, Set (E i)} (ht : ∀ ⦃i⦄, i ∈ s → Convex 𝕜 (t i)) : Convex 𝕜 (s.pi t) :=\n  fun _ hx => starConvex_pi fun _ hi => ht hi <| hx _ hi\n\n"}
{"name":"Directed.convex_iUnion","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : SMul 𝕜 E\nι : Sort u_5\ns : ι → Set E\nhdir : Directed (fun x1 x2 => HasSubset.Subset x1 x2) s\nhc : ∀ ⦃i : ι⦄, Convex 𝕜 (s i)\n⊢ Convex 𝕜 (Set.iUnion fun i => s i)","decl":"theorem Directed.convex_iUnion {ι : Sort*} {s : ι → Set E} (hdir : Directed (· ⊆ ·) s)\n    (hc : ∀ ⦃i : ι⦄, Convex 𝕜 (s i)) : Convex 𝕜 (⋃ i, s i) := by\n  rintro x hx y hy a b ha hb hab\n  rw [mem_iUnion] at hx hy ⊢\n  obtain ⟨i, hx⟩ := hx\n  obtain ⟨j, hy⟩ := hy\n  obtain ⟨k, hik, hjk⟩ := hdir i j\n  exact ⟨k, hc (hik hx) (hjk hy) ha hb hab⟩\n\n"}
{"name":"DirectedOn.convex_sUnion","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : SMul 𝕜 E\nc : Set (Set E)\nhdir : DirectedOn (fun x1 x2 => HasSubset.Subset x1 x2) c\nhc : ∀ ⦃A : Set E⦄, Membership.mem c A → Convex 𝕜 A\n⊢ Convex 𝕜 c.sUnion","decl":"theorem DirectedOn.convex_sUnion {c : Set (Set E)} (hdir : DirectedOn (· ⊆ ·) c)\n    (hc : ∀ ⦃A : Set E⦄, A ∈ c → Convex 𝕜 A) : Convex 𝕜 (⋃₀ c) := by\n  rw [sUnion_eq_iUnion]\n  exact (directedOn_iff_directed.1 hdir).convex_iUnion fun A => hc A.2\n\n"}
{"name":"convex_iff_openSegment_subset","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\n⊢ Iff (Convex 𝕜 s) (∀ ⦃x : E⦄, Membership.mem s x → ∀ ⦃y : E⦄, Membership.mem s y → HasSubset.Subset (openSegment 𝕜 x y) s)","decl":"theorem convex_iff_openSegment_subset :\n    Convex 𝕜 s ↔ ∀ ⦃x⦄, x ∈ s → ∀ ⦃y⦄, y ∈ s → openSegment 𝕜 x y ⊆ s :=\n  forall₂_congr fun _ => starConvex_iff_openSegment_subset\n\n"}
{"name":"convex_iff_forall_pos","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\n⊢ Iff (Convex 𝕜 s) (∀ ⦃x : E⦄, Membership.mem s x → ∀ ⦃y : E⦄, Membership.mem s y → ∀ ⦃a b : 𝕜⦄, LT.lt 0 a → LT.lt 0 b → Eq (HAdd.hAdd a b) 1 → Membership.mem s (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y)))","decl":"theorem convex_iff_forall_pos :\n    Convex 𝕜 s ↔\n      ∀ ⦃x⦄, x ∈ s → ∀ ⦃y⦄, y ∈ s → ∀ ⦃a b : 𝕜⦄, 0 < a → 0 < b → a + b = 1 → a • x + b • y ∈ s :=\n  forall₂_congr fun _ => starConvex_iff_forall_pos\n\n"}
{"name":"convex_iff_pairwise_pos","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\n⊢ Iff (Convex 𝕜 s) (s.Pairwise fun x y => ∀ ⦃a b : 𝕜⦄, LT.lt 0 a → LT.lt 0 b → Eq (HAdd.hAdd a b) 1 → Membership.mem s (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y)))","decl":"theorem convex_iff_pairwise_pos : Convex 𝕜 s ↔\n    s.Pairwise fun x y => ∀ ⦃a b : 𝕜⦄, 0 < a → 0 < b → a + b = 1 → a • x + b • y ∈ s := by\n  refine convex_iff_forall_pos.trans ⟨fun h x hx y hy _ => h hx hy, ?_⟩\n  intro h x hx y hy a b ha hb hab\n  obtain rfl | hxy := eq_or_ne x y\n  · rwa [Convex.combo_self hab]\n  · exact h hx hy hxy ha hb hab\n\n"}
{"name":"Convex.starConvex_iff","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\nx : E\nhs : Convex 𝕜 s\nh : s.Nonempty\n⊢ Iff (StarConvex 𝕜 x s) (Membership.mem s x)","decl":"theorem Convex.starConvex_iff (hs : Convex 𝕜 s) (h : s.Nonempty) : StarConvex 𝕜 x s ↔ x ∈ s :=\n  ⟨fun hxs => hxs.mem h, hs.starConvex⟩\n\n"}
{"name":"Set.Subsingleton.convex","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\nh : s.Subsingleton\n⊢ Convex 𝕜 s","decl":"protected theorem Set.Subsingleton.convex {s : Set E} (h : s.Subsingleton) : Convex 𝕜 s :=\n  convex_iff_pairwise_pos.mpr (h.pairwise _)\n\n"}
{"name":"convex_singleton","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\nc : E\n⊢ Convex 𝕜 (Singleton.singleton c)","decl":"theorem convex_singleton (c : E) : Convex 𝕜 ({c} : Set E) :=\n  subsingleton_singleton.convex\n\n"}
{"name":"convex_zero","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\n⊢ Convex 𝕜 0","decl":"theorem convex_zero : Convex 𝕜 (0 : Set E) :=\n  convex_singleton _\n\n"}
{"name":"convex_segment","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\nx y : E\n⊢ Convex 𝕜 (segment 𝕜 x y)","decl":"theorem convex_segment (x y : E) : Convex 𝕜 [x -[𝕜] y] := by\n  rintro p ⟨ap, bp, hap, hbp, habp, rfl⟩ q ⟨aq, bq, haq, hbq, habq, rfl⟩ a b ha hb hab\n  refine\n    ⟨a * ap + b * aq, a * bp + b * bq, add_nonneg (mul_nonneg ha hap) (mul_nonneg hb haq),\n      add_nonneg (mul_nonneg ha hbp) (mul_nonneg hb hbq), ?_, ?_⟩\n  · rw [add_add_add_comm, ← mul_add, ← mul_add, habp, habq, mul_one, mul_one, hab]\n  · match_scalars <;> noncomm_ring\n\n"}
{"name":"Convex.linear_image","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : AddCommMonoid F\ninst✝¹ : Module 𝕜 E\ninst✝ : Module 𝕜 F\ns : Set E\nhs : Convex 𝕜 s\nf : LinearMap (RingHom.id 𝕜) E F\n⊢ Convex 𝕜 (Set.image (⇑f) s)","decl":"theorem Convex.linear_image (hs : Convex 𝕜 s) (f : E →ₗ[𝕜] F) : Convex 𝕜 (f '' s) := by\n  rintro _ ⟨x, hx, rfl⟩ _ ⟨y, hy, rfl⟩ a b ha hb hab\n  exact ⟨a • x + b • y, hs hx hy ha hb hab, by rw [f.map_add, f.map_smul, f.map_smul]⟩\n\n"}
{"name":"Convex.is_linear_image","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : AddCommMonoid F\ninst✝¹ : Module 𝕜 E\ninst✝ : Module 𝕜 F\ns : Set E\nhs : Convex 𝕜 s\nf : E → F\nhf : IsLinearMap 𝕜 f\n⊢ Convex 𝕜 (Set.image f s)","decl":"theorem Convex.is_linear_image (hs : Convex 𝕜 s) {f : E → F} (hf : IsLinearMap 𝕜 f) :\n    Convex 𝕜 (f '' s) :=\n  hs.linear_image <| hf.mk' f\n\n"}
{"name":"Convex.linear_preimage","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : AddCommMonoid F\ninst✝¹ : Module 𝕜 E\ninst✝ : Module 𝕜 F\ns : Set F\nhs : Convex 𝕜 s\nf : LinearMap (RingHom.id 𝕜) E F\n⊢ Convex 𝕜 (Set.preimage (⇑f) s)","decl":"theorem Convex.linear_preimage {s : Set F} (hs : Convex 𝕜 s) (f : E →ₗ[𝕜] F) :\n    Convex 𝕜 (f ⁻¹' s) := by\n  intro x hx y hy a b ha hb hab\n  rw [mem_preimage, f.map_add, f.map_smul, f.map_smul]\n  exact hs hx hy ha hb hab\n\n"}
{"name":"Convex.is_linear_preimage","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : AddCommMonoid F\ninst✝¹ : Module 𝕜 E\ninst✝ : Module 𝕜 F\ns : Set F\nhs : Convex 𝕜 s\nf : E → F\nhf : IsLinearMap 𝕜 f\n⊢ Convex 𝕜 (Set.preimage f s)","decl":"theorem Convex.is_linear_preimage {s : Set F} (hs : Convex 𝕜 s) {f : E → F} (hf : IsLinearMap 𝕜 f) :\n    Convex 𝕜 (f ⁻¹' s) :=\n  hs.linear_preimage <| hf.mk' f\n\n"}
{"name":"Convex.add","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns t : Set E\nhs : Convex 𝕜 s\nht : Convex 𝕜 t\n⊢ Convex 𝕜 (HAdd.hAdd s t)","decl":"theorem Convex.add {t : Set E} (hs : Convex 𝕜 s) (ht : Convex 𝕜 t) : Convex 𝕜 (s + t) := by\n  rw [← add_image_prod]\n  exact (hs.prod ht).is_linear_image IsLinearMap.isLinearMap_add\n\n"}
{"name":"coe_convexAddSubmonoid","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\n⊢ Eq (↑(convexAddSubmonoid 𝕜 E)) (setOf fun s => Convex 𝕜 s)","decl":"@[simp, norm_cast]\ntheorem coe_convexAddSubmonoid : ↑(convexAddSubmonoid 𝕜 E) = {s : Set E | Convex 𝕜 s} :=\n  rfl\n\n"}
{"name":"mem_convexAddSubmonoid","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\n⊢ Iff (Membership.mem (convexAddSubmonoid 𝕜 E) s) (Convex 𝕜 s)","decl":"@[simp]\ntheorem mem_convexAddSubmonoid {s : Set E} : s ∈ convexAddSubmonoid 𝕜 E ↔ Convex 𝕜 s :=\n  Iff.rfl\n\n"}
{"name":"convex_list_sum","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\nl : List (Set E)\nh : ∀ (i : Set E), Membership.mem l i → Convex 𝕜 i\n⊢ Convex 𝕜 l.sum","decl":"theorem convex_list_sum {l : List (Set E)} (h : ∀ i ∈ l, Convex 𝕜 i) : Convex 𝕜 l.sum :=\n  (convexAddSubmonoid 𝕜 E).list_sum_mem h\n\n"}
{"name":"convex_multiset_sum","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Multiset (Set E)\nh : ∀ (i : Set E), Membership.mem s i → Convex 𝕜 i\n⊢ Convex 𝕜 s.sum","decl":"theorem convex_multiset_sum {s : Multiset (Set E)} (h : ∀ i ∈ s, Convex 𝕜 i) : Convex 𝕜 s.sum :=\n  (convexAddSubmonoid 𝕜 E).multiset_sum_mem _ h\n\n"}
{"name":"convex_sum","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\nι : Type u_5\ns : Finset ι\nt : ι → Set E\nh : ∀ (i : ι), Membership.mem s i → Convex 𝕜 (t i)\n⊢ Convex 𝕜 (s.sum fun i => t i)","decl":"theorem convex_sum {ι} {s : Finset ι} (t : ι → Set E) (h : ∀ i ∈ s, Convex 𝕜 (t i)) :\n    Convex 𝕜 (∑ i ∈ s, t i) :=\n  (convexAddSubmonoid 𝕜 E).sum_mem h\n\n"}
{"name":"Convex.vadd","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\nhs : Convex 𝕜 s\nz : E\n⊢ Convex 𝕜 (HVAdd.hVAdd z s)","decl":"theorem Convex.vadd (hs : Convex 𝕜 s) (z : E) : Convex 𝕜 (z +ᵥ s) := by\n  simp_rw [← image_vadd, vadd_eq_add, ← singleton_add]\n  exact (convex_singleton _).add hs\n\n"}
{"name":"Convex.translate","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\nhs : Convex 𝕜 s\nz : E\n⊢ Convex 𝕜 (Set.image (fun x => HAdd.hAdd z x) s)","decl":"theorem Convex.translate (hs : Convex 𝕜 s) (z : E) : Convex 𝕜 ((fun x => z + x) '' s) :=\n  hs.vadd _\n\n"}
{"name":"Convex.translate_preimage_right","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\nhs : Convex 𝕜 s\nz : E\n⊢ Convex 𝕜 (Set.preimage (fun x => HAdd.hAdd z x) s)","decl":"/-- The translation of a convex set is also convex. -/\ntheorem Convex.translate_preimage_right (hs : Convex 𝕜 s) (z : E) :\n    Convex 𝕜 ((fun x => z + x) ⁻¹' s) := by\n  intro x hx y hy a b ha hb hab\n  have h := hs hx hy ha hb hab\n  rwa [smul_add, smul_add, add_add_add_comm, ← add_smul, hab, one_smul] at h\n\n"}
{"name":"Convex.translate_preimage_left","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\nhs : Convex 𝕜 s\nz : E\n⊢ Convex 𝕜 (Set.preimage (fun x => HAdd.hAdd x z) s)","decl":"/-- The translation of a convex set is also convex. -/\ntheorem Convex.translate_preimage_left (hs : Convex 𝕜 s) (z : E) :\n    Convex 𝕜 ((fun x => x + z) ⁻¹' s) := by\n  simpa only [add_comm] using hs.translate_preimage_right z\n\n"}
{"name":"convex_Iic","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nβ : Type u_4\ninst✝³ : OrderedSemiring 𝕜\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nr : β\n⊢ Convex 𝕜 (Set.Iic r)","decl":"theorem convex_Iic (r : β) : Convex 𝕜 (Iic r) := fun x hx y hy a b ha hb hab =>\n  calc\n    a • x + b • y ≤ a • r + b • r :=\n      add_le_add (smul_le_smul_of_nonneg_left hx ha) (smul_le_smul_of_nonneg_left hy hb)\n    _ = r := Convex.combo_self hab _\n\n"}
{"name":"convex_Ici","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nβ : Type u_4\ninst✝³ : OrderedSemiring 𝕜\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nr : β\n⊢ Convex 𝕜 (Set.Ici r)","decl":"theorem convex_Ici (r : β) : Convex 𝕜 (Ici r) :=\n  @convex_Iic 𝕜 βᵒᵈ _ _ _ _ r\n\n"}
{"name":"convex_Icc","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nβ : Type u_4\ninst✝³ : OrderedSemiring 𝕜\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nr s : β\n⊢ Convex 𝕜 (Set.Icc r s)","decl":"theorem convex_Icc (r s : β) : Convex 𝕜 (Icc r s) :=\n  Ici_inter_Iic.subst ((convex_Ici r).inter <| convex_Iic s)\n\n"}
{"name":"convex_halfSpace_le","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_4\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : Module 𝕜 E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nf : E → β\nh : IsLinearMap 𝕜 f\nr : β\n⊢ Convex 𝕜 (setOf fun w => LE.le (f w) r)","decl":"theorem convex_halfSpace_le {f : E → β} (h : IsLinearMap 𝕜 f) (r : β) : Convex 𝕜 { w | f w ≤ r } :=\n  (convex_Iic r).is_linear_preimage h\n"}
{"name":"convex_halfspace_le","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_4\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : Module 𝕜 E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nf : E → β\nh : IsLinearMap 𝕜 f\nr : β\n⊢ Convex 𝕜 (setOf fun w => LE.le (f w) r)","decl":"@[deprecated (since := \"2024-11-12\")] alias convex_halfspace_le := convex_halfSpace_le\n\n"}
{"name":"convex_halfSpace_ge","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_4\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : Module 𝕜 E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nf : E → β\nh : IsLinearMap 𝕜 f\nr : β\n⊢ Convex 𝕜 (setOf fun w => LE.le r (f w))","decl":"theorem convex_halfSpace_ge {f : E → β} (h : IsLinearMap 𝕜 f) (r : β) : Convex 𝕜 { w | r ≤ f w } :=\n  (convex_Ici r).is_linear_preimage h\n"}
{"name":"convex_halfspace_ge","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_4\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : Module 𝕜 E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nf : E → β\nh : IsLinearMap 𝕜 f\nr : β\n⊢ Convex 𝕜 (setOf fun w => LE.le r (f w))","decl":"@[deprecated (since := \"2024-11-12\")] alias convex_halfspace_ge := convex_halfSpace_ge\n\n"}
{"name":"convex_hyperplane","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_4\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : Module 𝕜 E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nf : E → β\nh : IsLinearMap 𝕜 f\nr : β\n⊢ Convex 𝕜 (setOf fun w => Eq (f w) r)","decl":"theorem convex_hyperplane {f : E → β} (h : IsLinearMap 𝕜 f) (r : β) : Convex 𝕜 { w | f w = r } := by\n  simp_rw [le_antisymm_iff]\n  exact (convex_halfSpace_le h r).inter (convex_halfSpace_ge h r)\n\n"}
{"name":"convex_Iio","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nβ : Type u_4\ninst✝³ : OrderedSemiring 𝕜\ninst✝² : OrderedCancelAddCommMonoid β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nr : β\n⊢ Convex 𝕜 (Set.Iio r)","decl":"theorem convex_Iio (r : β) : Convex 𝕜 (Iio r) := by\n  intro x hx y hy a b ha hb hab\n  obtain rfl | ha' := ha.eq_or_lt\n  · rw [zero_add] at hab\n    rwa [zero_smul, zero_add, hab, one_smul]\n  rw [mem_Iio] at hx hy\n  calc\n    a • x + b • y < a • r + b • r := add_lt_add_of_lt_of_le\n        (smul_lt_smul_of_pos_left hx ha') (smul_le_smul_of_nonneg_left hy.le hb)\n    _ = r := Convex.combo_self hab _\n\n"}
{"name":"convex_Ioi","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nβ : Type u_4\ninst✝³ : OrderedSemiring 𝕜\ninst✝² : OrderedCancelAddCommMonoid β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nr : β\n⊢ Convex 𝕜 (Set.Ioi r)","decl":"theorem convex_Ioi (r : β) : Convex 𝕜 (Ioi r) :=\n  convex_Iio (β := βᵒᵈ) r\n\n"}
{"name":"convex_Ioo","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nβ : Type u_4\ninst✝³ : OrderedSemiring 𝕜\ninst✝² : OrderedCancelAddCommMonoid β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nr s : β\n⊢ Convex 𝕜 (Set.Ioo r s)","decl":"theorem convex_Ioo (r s : β) : Convex 𝕜 (Ioo r s) :=\n  Ioi_inter_Iio.subst ((convex_Ioi r).inter <| convex_Iio s)\n\n"}
{"name":"convex_Ico","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nβ : Type u_4\ninst✝³ : OrderedSemiring 𝕜\ninst✝² : OrderedCancelAddCommMonoid β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nr s : β\n⊢ Convex 𝕜 (Set.Ico r s)","decl":"theorem convex_Ico (r s : β) : Convex 𝕜 (Ico r s) :=\n  Ici_inter_Iio.subst ((convex_Ici r).inter <| convex_Iio s)\n\n"}
{"name":"convex_Ioc","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nβ : Type u_4\ninst✝³ : OrderedSemiring 𝕜\ninst✝² : OrderedCancelAddCommMonoid β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nr s : β\n⊢ Convex 𝕜 (Set.Ioc r s)","decl":"theorem convex_Ioc (r s : β) : Convex 𝕜 (Ioc r s) :=\n  Ioi_inter_Iic.subst ((convex_Ioi r).inter <| convex_Iic s)\n\n"}
{"name":"convex_halfSpace_lt","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_4\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : Module 𝕜 E\ninst✝² : OrderedCancelAddCommMonoid β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nf : E → β\nh : IsLinearMap 𝕜 f\nr : β\n⊢ Convex 𝕜 (setOf fun w => LT.lt (f w) r)","decl":"theorem convex_halfSpace_lt {f : E → β} (h : IsLinearMap 𝕜 f) (r : β) : Convex 𝕜 { w | f w < r } :=\n  (convex_Iio r).is_linear_preimage h\n"}
{"name":"convex_halfspace_lt","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_4\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : Module 𝕜 E\ninst✝² : OrderedCancelAddCommMonoid β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nf : E → β\nh : IsLinearMap 𝕜 f\nr : β\n⊢ Convex 𝕜 (setOf fun w => LT.lt (f w) r)","decl":"@[deprecated (since := \"2024-11-12\")] alias convex_halfspace_lt := convex_halfSpace_lt\n\n"}
{"name":"convex_halfSpace_gt","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_4\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : Module 𝕜 E\ninst✝² : OrderedCancelAddCommMonoid β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nf : E → β\nh : IsLinearMap 𝕜 f\nr : β\n⊢ Convex 𝕜 (setOf fun w => LT.lt r (f w))","decl":"theorem convex_halfSpace_gt {f : E → β} (h : IsLinearMap 𝕜 f) (r : β) : Convex 𝕜 { w | r < f w } :=\n  (convex_Ioi r).is_linear_preimage h\n"}
{"name":"convex_halfspace_gt","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_4\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : Module 𝕜 E\ninst✝² : OrderedCancelAddCommMonoid β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nf : E → β\nh : IsLinearMap 𝕜 f\nr : β\n⊢ Convex 𝕜 (setOf fun w => LT.lt r (f w))","decl":"@[deprecated (since := \"2024-11-12\")] alias convex_halfspace_gt := convex_halfSpace_gt\n\n"}
{"name":"convex_uIcc","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nβ : Type u_4\ninst✝³ : OrderedSemiring 𝕜\ninst✝² : LinearOrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nr s : β\n⊢ Convex 𝕜 (Set.uIcc r s)","decl":"theorem convex_uIcc (r s : β) : Convex 𝕜 (uIcc r s) :=\n  convex_Icc _ _\n\n"}
{"name":"MonotoneOn.convex_le","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_4\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : LinearOrderedAddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : OrderedSMul 𝕜 E\ns : Set E\nf : E → β\nhf : MonotoneOn f s\nhs : Convex 𝕜 s\nr : β\n⊢ Convex 𝕜 (setOf fun x => And (Membership.mem s x) (LE.le (f x) r))","decl":"theorem MonotoneOn.convex_le (hf : MonotoneOn f s) (hs : Convex 𝕜 s) (r : β) :\n    Convex 𝕜 ({ x ∈ s | f x ≤ r }) := fun x hx y hy _ _ ha hb hab =>\n  ⟨hs hx.1 hy.1 ha hb hab,\n    (hf (hs hx.1 hy.1 ha hb hab) (max_rec' s hx.1 hy.1) (Convex.combo_le_max x y ha hb hab)).trans\n      (max_rec' { x | f x ≤ r } hx.2 hy.2)⟩\n\n"}
{"name":"MonotoneOn.convex_lt","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_4\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : LinearOrderedAddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : OrderedSMul 𝕜 E\ns : Set E\nf : E → β\nhf : MonotoneOn f s\nhs : Convex 𝕜 s\nr : β\n⊢ Convex 𝕜 (setOf fun x => And (Membership.mem s x) (LT.lt (f x) r))","decl":"theorem MonotoneOn.convex_lt (hf : MonotoneOn f s) (hs : Convex 𝕜 s) (r : β) :\n    Convex 𝕜 ({ x ∈ s | f x < r }) := fun x hx y hy _ _ ha hb hab =>\n  ⟨hs hx.1 hy.1 ha hb hab,\n    (hf (hs hx.1 hy.1 ha hb hab) (max_rec' s hx.1 hy.1)\n          (Convex.combo_le_max x y ha hb hab)).trans_lt\n      (max_rec' { x | f x < r } hx.2 hy.2)⟩\n\n"}
{"name":"MonotoneOn.convex_ge","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_4\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : LinearOrderedAddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : OrderedSMul 𝕜 E\ns : Set E\nf : E → β\nhf : MonotoneOn f s\nhs : Convex 𝕜 s\nr : β\n⊢ Convex 𝕜 (setOf fun x => And (Membership.mem s x) (LE.le r (f x)))","decl":"theorem MonotoneOn.convex_ge (hf : MonotoneOn f s) (hs : Convex 𝕜 s) (r : β) :\n    Convex 𝕜 ({ x ∈ s | r ≤ f x }) :=\n  MonotoneOn.convex_le (E := Eᵒᵈ) (β := βᵒᵈ) hf.dual hs r\n\n"}
{"name":"MonotoneOn.convex_gt","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_4\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : LinearOrderedAddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : OrderedSMul 𝕜 E\ns : Set E\nf : E → β\nhf : MonotoneOn f s\nhs : Convex 𝕜 s\nr : β\n⊢ Convex 𝕜 (setOf fun x => And (Membership.mem s x) (LT.lt r (f x)))","decl":"theorem MonotoneOn.convex_gt (hf : MonotoneOn f s) (hs : Convex 𝕜 s) (r : β) :\n    Convex 𝕜 ({ x ∈ s | r < f x }) :=\n  MonotoneOn.convex_lt (E := Eᵒᵈ) (β := βᵒᵈ) hf.dual hs r\n\n"}
{"name":"AntitoneOn.convex_le","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_4\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : LinearOrderedAddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : OrderedSMul 𝕜 E\ns : Set E\nf : E → β\nhf : AntitoneOn f s\nhs : Convex 𝕜 s\nr : β\n⊢ Convex 𝕜 (setOf fun x => And (Membership.mem s x) (LE.le (f x) r))","decl":"theorem AntitoneOn.convex_le (hf : AntitoneOn f s) (hs : Convex 𝕜 s) (r : β) :\n    Convex 𝕜 ({ x ∈ s | f x ≤ r }) :=\n  MonotoneOn.convex_ge (β := βᵒᵈ) hf hs r\n\n"}
{"name":"AntitoneOn.convex_lt","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_4\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : LinearOrderedAddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : OrderedSMul 𝕜 E\ns : Set E\nf : E → β\nhf : AntitoneOn f s\nhs : Convex 𝕜 s\nr : β\n⊢ Convex 𝕜 (setOf fun x => And (Membership.mem s x) (LT.lt (f x) r))","decl":"theorem AntitoneOn.convex_lt (hf : AntitoneOn f s) (hs : Convex 𝕜 s) (r : β) :\n    Convex 𝕜 ({ x ∈ s | f x < r }) :=\n  MonotoneOn.convex_gt (β := βᵒᵈ) hf hs r\n\n"}
{"name":"AntitoneOn.convex_ge","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_4\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : LinearOrderedAddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : OrderedSMul 𝕜 E\ns : Set E\nf : E → β\nhf : AntitoneOn f s\nhs : Convex 𝕜 s\nr : β\n⊢ Convex 𝕜 (setOf fun x => And (Membership.mem s x) (LE.le r (f x)))","decl":"theorem AntitoneOn.convex_ge (hf : AntitoneOn f s) (hs : Convex 𝕜 s) (r : β) :\n    Convex 𝕜 ({ x ∈ s | r ≤ f x }) :=\n  MonotoneOn.convex_le (β := βᵒᵈ) hf hs r\n\n"}
{"name":"AntitoneOn.convex_gt","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_4\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : LinearOrderedAddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : OrderedSMul 𝕜 E\ns : Set E\nf : E → β\nhf : AntitoneOn f s\nhs : Convex 𝕜 s\nr : β\n⊢ Convex 𝕜 (setOf fun x => And (Membership.mem s x) (LT.lt r (f x)))","decl":"theorem AntitoneOn.convex_gt (hf : AntitoneOn f s) (hs : Convex 𝕜 s) (r : β) :\n    Convex 𝕜 ({ x ∈ s | r < f x }) :=\n  MonotoneOn.convex_lt (β := βᵒᵈ)  hf hs r\n\n"}
{"name":"Monotone.convex_le","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_4\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : LinearOrderedAddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : OrderedSMul 𝕜 E\nf : E → β\nhf : Monotone f\nr : β\n⊢ Convex 𝕜 (setOf fun x => LE.le (f x) r)","decl":"theorem Monotone.convex_le (hf : Monotone f) (r : β) : Convex 𝕜 { x | f x ≤ r } :=\n  Set.sep_univ.subst ((hf.monotoneOn univ).convex_le convex_univ r)\n\n"}
{"name":"Monotone.convex_lt","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_4\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : LinearOrderedAddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : OrderedSMul 𝕜 E\nf : E → β\nhf : Monotone f\nr : β\n⊢ Convex 𝕜 (setOf fun x => LE.le (f x) r)","decl":"theorem Monotone.convex_lt (hf : Monotone f) (r : β) : Convex 𝕜 { x | f x ≤ r } :=\n  Set.sep_univ.subst ((hf.monotoneOn univ).convex_le convex_univ r)\n\n"}
{"name":"Monotone.convex_ge","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_4\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : LinearOrderedAddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : OrderedSMul 𝕜 E\nf : E → β\nhf : Monotone f\nr : β\n⊢ Convex 𝕜 (setOf fun x => LE.le r (f x))","decl":"theorem Monotone.convex_ge (hf : Monotone f) (r : β) : Convex 𝕜 { x | r ≤ f x } :=\n  Set.sep_univ.subst ((hf.monotoneOn univ).convex_ge convex_univ r)\n\n"}
{"name":"Monotone.convex_gt","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_4\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : LinearOrderedAddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : OrderedSMul 𝕜 E\nf : E → β\nhf : Monotone f\nr : β\n⊢ Convex 𝕜 (setOf fun x => LE.le (f x) r)","decl":"theorem Monotone.convex_gt (hf : Monotone f) (r : β) : Convex 𝕜 { x | f x ≤ r } :=\n  Set.sep_univ.subst ((hf.monotoneOn univ).convex_le convex_univ r)\n\n"}
{"name":"Antitone.convex_le","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_4\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : LinearOrderedAddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : OrderedSMul 𝕜 E\nf : E → β\nhf : Antitone f\nr : β\n⊢ Convex 𝕜 (setOf fun x => LE.le (f x) r)","decl":"theorem Antitone.convex_le (hf : Antitone f) (r : β) : Convex 𝕜 { x | f x ≤ r } :=\n  Set.sep_univ.subst ((hf.antitoneOn univ).convex_le convex_univ r)\n\n"}
{"name":"Antitone.convex_lt","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_4\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : LinearOrderedAddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : OrderedSMul 𝕜 E\nf : E → β\nhf : Antitone f\nr : β\n⊢ Convex 𝕜 (setOf fun x => LT.lt (f x) r)","decl":"theorem Antitone.convex_lt (hf : Antitone f) (r : β) : Convex 𝕜 { x | f x < r } :=\n  Set.sep_univ.subst ((hf.antitoneOn univ).convex_lt convex_univ r)\n\n"}
{"name":"Antitone.convex_ge","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_4\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : LinearOrderedAddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : OrderedSMul 𝕜 E\nf : E → β\nhf : Antitone f\nr : β\n⊢ Convex 𝕜 (setOf fun x => LE.le r (f x))","decl":"theorem Antitone.convex_ge (hf : Antitone f) (r : β) : Convex 𝕜 { x | r ≤ f x } :=\n  Set.sep_univ.subst ((hf.antitoneOn univ).convex_ge convex_univ r)\n\n"}
{"name":"Antitone.convex_gt","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_4\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : LinearOrderedAddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : OrderedSMul 𝕜 E\nf : E → β\nhf : Antitone f\nr : β\n⊢ Convex 𝕜 (setOf fun x => LT.lt r (f x))","decl":"theorem Antitone.convex_gt (hf : Antitone f) (r : β) : Convex 𝕜 { x | r < f x } :=\n  Set.sep_univ.subst ((hf.antitoneOn univ).convex_gt convex_univ r)\n\n"}
{"name":"Convex.smul","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedCommSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\nhs : Convex 𝕜 s\nc : 𝕜\n⊢ Convex 𝕜 (HSMul.hSMul c s)","decl":"theorem Convex.smul (hs : Convex 𝕜 s) (c : 𝕜) : Convex 𝕜 (c • s) :=\n  hs.linear_image (LinearMap.lsmul _ _ c)\n\n"}
{"name":"Convex.smul_preimage","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedCommSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\nhs : Convex 𝕜 s\nc : 𝕜\n⊢ Convex 𝕜 (Set.preimage (fun z => HSMul.hSMul c z) s)","decl":"theorem Convex.smul_preimage (hs : Convex 𝕜 s) (c : 𝕜) : Convex 𝕜 ((fun z => c • z) ⁻¹' s) :=\n  hs.linear_preimage (LinearMap.lsmul _ _ c)\n\n"}
{"name":"Convex.affinity","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedCommSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\nhs : Convex 𝕜 s\nz : E\nc : 𝕜\n⊢ Convex 𝕜 (Set.image (fun x => HAdd.hAdd z (HSMul.hSMul c x)) s)","decl":"theorem Convex.affinity (hs : Convex 𝕜 s) (z : E) (c : 𝕜) :\n    Convex 𝕜 ((fun x => z + c • x) '' s) := by\n  simpa only [← image_smul, ← image_vadd, image_image] using (hs.smul c).vadd z\n\n"}
{"name":"convex_openSegment","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : StrictOrderedCommSemiring 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\na b : E\n⊢ Convex 𝕜 (openSegment 𝕜 a b)","decl":"theorem convex_openSegment (a b : E) : Convex 𝕜 (openSegment 𝕜 a b) := by\n  rw [convex_iff_openSegment_subset]\n  rintro p ⟨ap, bp, hap, hbp, habp, rfl⟩ q ⟨aq, bq, haq, hbq, habq, rfl⟩ z ⟨a, b, ha, hb, hab, rfl⟩\n  refine ⟨a * ap + b * aq, a * bp + b * bq, by positivity, by positivity, ?_, ?_⟩\n  · linear_combination (norm := noncomm_ring) a * habp + b * habq + hab\n  · module\n\n"}
{"name":"convex_vadd","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedRing 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns : Set E\na : E\n⊢ Iff (Convex 𝕜 (HVAdd.hVAdd a s)) (Convex 𝕜 s)","decl":"@[simp]\ntheorem convex_vadd (a : E) : Convex 𝕜 (a +ᵥ s) ↔ Convex 𝕜 s :=\n  ⟨fun h ↦ by simpa using h.vadd (-a), fun h ↦ h.vadd _⟩\n\n"}
{"name":"Convex.add_smul_mem","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedRing 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns : Set E\nhs : Convex 𝕜 s\nx y : E\nhx : Membership.mem s x\nhy : Membership.mem s (HAdd.hAdd x y)\nt : 𝕜\nht : Membership.mem (Set.Icc 0 1) t\n⊢ Membership.mem s (HAdd.hAdd x (HSMul.hSMul t y))","decl":"theorem Convex.add_smul_mem (hs : Convex 𝕜 s) {x y : E} (hx : x ∈ s) (hy : x + y ∈ s) {t : 𝕜}\n    (ht : t ∈ Icc (0 : 𝕜) 1) : x + t • y ∈ s := by\n  have h : x + t • y = (1 - t) • x + t • (x + y) := by match_scalars <;> noncomm_ring\n  rw [h]\n  exact hs hx hy (sub_nonneg_of_le ht.2) ht.1 (sub_add_cancel _ _)\n\n"}
{"name":"Convex.smul_mem_of_zero_mem","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedRing 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns : Set E\nhs : Convex 𝕜 s\nx : E\nzero_mem : Membership.mem s 0\nhx : Membership.mem s x\nt : 𝕜\nht : Membership.mem (Set.Icc 0 1) t\n⊢ Membership.mem s (HSMul.hSMul t x)","decl":"theorem Convex.smul_mem_of_zero_mem (hs : Convex 𝕜 s) {x : E} (zero_mem : (0 : E) ∈ s) (hx : x ∈ s)\n    {t : 𝕜} (ht : t ∈ Icc (0 : 𝕜) 1) : t • x ∈ s := by\n  simpa using hs.add_smul_mem zero_mem (by simpa using hx) ht\n\n"}
{"name":"Convex.mapsTo_lineMap","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedRing 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns : Set E\nh : Convex 𝕜 s\nx y : E\nhx : Membership.mem s x\nhy : Membership.mem s y\n⊢ Set.MapsTo (⇑(AffineMap.lineMap x y)) (Set.Icc 0 1) s","decl":"theorem Convex.mapsTo_lineMap (h : Convex 𝕜 s) {x y : E} (hx : x ∈ s) (hy : y ∈ s) :\n    MapsTo (AffineMap.lineMap x y) (Icc (0 : 𝕜) 1) s := by\n  simpa only [mapsTo', segment_eq_image_lineMap] using h.segment_subset hx hy\n\n"}
{"name":"Convex.lineMap_mem","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedRing 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns : Set E\nh : Convex 𝕜 s\nx y : E\nhx : Membership.mem s x\nhy : Membership.mem s y\nt : 𝕜\nht : Membership.mem (Set.Icc 0 1) t\n⊢ Membership.mem s ((AffineMap.lineMap x y) t)","decl":"theorem Convex.lineMap_mem (h : Convex 𝕜 s) {x y : E} (hx : x ∈ s) (hy : y ∈ s) {t : 𝕜}\n    (ht : t ∈ Icc 0 1) : AffineMap.lineMap x y t ∈ s :=\n  h.mapsTo_lineMap hx hy ht\n\n"}
{"name":"Convex.add_smul_sub_mem","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedRing 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns : Set E\nh : Convex 𝕜 s\nx y : E\nhx : Membership.mem s x\nhy : Membership.mem s y\nt : 𝕜\nht : Membership.mem (Set.Icc 0 1) t\n⊢ Membership.mem s (HAdd.hAdd x (HSMul.hSMul t (HSub.hSub y x)))","decl":"theorem Convex.add_smul_sub_mem (h : Convex 𝕜 s) {x y : E} (hx : x ∈ s) (hy : y ∈ s) {t : 𝕜}\n    (ht : t ∈ Icc (0 : 𝕜) 1) : x + t • (y - x) ∈ s := by\n  rw [add_comm]\n  exact h.lineMap_mem hx hy ht\n\n"}
{"name":"AffineSubspace.convex","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedRing 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\nQ : AffineSubspace 𝕜 E\n⊢ Convex 𝕜 ↑Q","decl":"/-- Affine subspaces are convex. -/\ntheorem AffineSubspace.convex (Q : AffineSubspace 𝕜 E) : Convex 𝕜 (Q : Set E) :=\n  fun x hx y hy a b _ _ hab ↦ by simpa [Convex.combo_eq_smul_sub_add hab] using Q.2 _ hy hx hx\n\n"}
{"name":"Convex.affine_preimage","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\ninst✝⁴ : OrderedRing 𝕜\ninst✝³ : AddCommGroup E\ninst✝² : AddCommGroup F\ninst✝¹ : Module 𝕜 E\ninst✝ : Module 𝕜 F\nf : AffineMap 𝕜 E F\ns : Set F\nhs : Convex 𝕜 s\n⊢ Convex 𝕜 (Set.preimage (⇑f) s)","decl":"/-- The preimage of a convex set under an affine map is convex. -/\ntheorem Convex.affine_preimage (f : E →ᵃ[𝕜] F) {s : Set F} (hs : Convex 𝕜 s) : Convex 𝕜 (f ⁻¹' s) :=\n  fun _ hx => (hs hx).affine_preimage _\n\n"}
{"name":"Convex.affine_image","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\ninst✝⁴ : OrderedRing 𝕜\ninst✝³ : AddCommGroup E\ninst✝² : AddCommGroup F\ninst✝¹ : Module 𝕜 E\ninst✝ : Module 𝕜 F\ns : Set E\nf : AffineMap 𝕜 E F\nhs : Convex 𝕜 s\n⊢ Convex 𝕜 (Set.image (⇑f) s)","decl":"/-- The image of a convex set under an affine map is convex. -/\ntheorem Convex.affine_image (f : E →ᵃ[𝕜] F) (hs : Convex 𝕜 s) : Convex 𝕜 (f '' s) := by\n  rintro _ ⟨x, hx, rfl⟩\n  exact (hs hx).affine_image _\n\n"}
{"name":"Convex.neg","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedRing 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns : Set E\nhs : Convex 𝕜 s\n⊢ Convex 𝕜 (Neg.neg s)","decl":"theorem Convex.neg (hs : Convex 𝕜 s) : Convex 𝕜 (-s) :=\n  hs.is_linear_preimage IsLinearMap.isLinearMap_neg\n\n"}
{"name":"Convex.sub","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedRing 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns t : Set E\nhs : Convex 𝕜 s\nht : Convex 𝕜 t\n⊢ Convex 𝕜 (HSub.hSub s t)","decl":"theorem Convex.sub (hs : Convex 𝕜 s) (ht : Convex 𝕜 t) : Convex 𝕜 (s - t) := by\n  rw [sub_eq_add_neg]\n  exact hs.add ht.neg\n\n"}
{"name":"Convex_subadditive_le","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : LinearOrderedRing 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : SMul 𝕜 E\nf : E → 𝕜\nhf1 : ∀ (x y : E), LE.le (f (HAdd.hAdd x y)) (HAdd.hAdd (f x) (f y))\nhf2 : ∀ ⦃c : 𝕜⦄ (x : E), LE.le 0 c → LE.le (f (HSMul.hSMul c x)) (HMul.hMul c (f x))\nB : 𝕜\n⊢ Convex 𝕜 (setOf fun x => LE.le (f x) B)","decl":"theorem Convex_subadditive_le [SMul 𝕜 E] {f : E → 𝕜} (hf1 : ∀ x y, f (x + y) ≤ (f x) + (f y))\n    (hf2 : ∀ ⦃c⦄ x, 0 ≤ c → f (c • x) ≤ c * f x) (B : 𝕜) :\n    Convex 𝕜 { x | f x ≤ B } := by\n  rw [convex_iff_segment_subset]\n  rintro x hx y hy z ⟨a, b, ha, hb, hs, rfl⟩\n  calc\n    _ ≤ a • (f x) + b • (f y) := le_trans (hf1 _ _) (add_le_add (hf2 x ha) (hf2 y hb))\n    _ ≤ a • B + b • B :=\n        add_le_add (smul_le_smul_of_nonneg_left hx ha) (smul_le_smul_of_nonneg_left hy hb)\n    _ ≤ B := by rw [← add_smul, hs, one_smul]\n\n"}
{"name":"convex_iff_div","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : LinearOrderedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns : Set E\n⊢ Iff (Convex 𝕜 s) (∀ ⦃x : E⦄, Membership.mem s x → ∀ ⦃y : E⦄, Membership.mem s y → ∀ ⦃a b : 𝕜⦄, LE.le 0 a → LE.le 0 b → LT.lt 0 (HAdd.hAdd a b) → Membership.mem s (HAdd.hAdd (HSMul.hSMul (HDiv.hDiv a (HAdd.hAdd a b)) x) (HSMul.hSMul (HDiv.hDiv b (HAdd.hAdd a b)) y)))","decl":"/-- Alternative definition of set convexity, using division. -/\ntheorem convex_iff_div :\n    Convex 𝕜 s ↔ ∀ ⦃x⦄, x ∈ s → ∀ ⦃y⦄, y ∈ s →\n      ∀ ⦃a b : 𝕜⦄, 0 ≤ a → 0 ≤ b → 0 < a + b → (a / (a + b)) • x + (b / (a + b)) • y ∈ s :=\n  forall₂_congr fun _ _ => starConvex_iff_div\n\n"}
{"name":"Convex.mem_smul_of_zero_mem","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : LinearOrderedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns : Set E\nh : Convex 𝕜 s\nx : E\nzero_mem : Membership.mem s 0\nhx : Membership.mem s x\nt : 𝕜\nht : LE.le 1 t\n⊢ Membership.mem (HSMul.hSMul t s) x","decl":"theorem Convex.mem_smul_of_zero_mem (h : Convex 𝕜 s) {x : E} (zero_mem : (0 : E) ∈ s) (hx : x ∈ s)\n    {t : 𝕜} (ht : 1 ≤ t) : x ∈ t • s := by\n  rw [mem_smul_set_iff_inv_smul_mem₀ (zero_lt_one.trans_le ht).ne']\n  exact h.smul_mem_of_zero_mem zero_mem hx\n    ⟨inv_nonneg.2 (zero_le_one.trans ht), inv_le_one_of_one_le₀ ht⟩\n\n"}
{"name":"Convex.exists_mem_add_smul_eq","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : LinearOrderedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns : Set E\nh : Convex 𝕜 s\nx y : E\np q : 𝕜\nhx : Membership.mem s x\nhy : Membership.mem s y\nhp : LE.le 0 p\nhq : LE.le 0 q\n⊢ Exists fun z => And (Membership.mem s z) (Eq (HSMul.hSMul (HAdd.hAdd p q) z) (HAdd.hAdd (HSMul.hSMul p x) (HSMul.hSMul q y)))","decl":"theorem Convex.exists_mem_add_smul_eq (h : Convex 𝕜 s) {x y : E} {p q : 𝕜} (hx : x ∈ s) (hy : y ∈ s)\n    (hp : 0 ≤ p) (hq : 0 ≤ q) : ∃ z ∈ s, (p + q) • z = p • x + q • y := by\n  rcases _root_.em (p = 0 ∧ q = 0) with (⟨rfl, rfl⟩ | hpq)\n  · use x, hx\n    simp\n  · replace hpq : 0 < p + q :=\n      (add_nonneg hp hq).lt_of_ne' (mt (add_eq_zero_iff_of_nonneg hp hq).1 hpq)\n    refine ⟨_, convex_iff_div.1 h hx hy hp hq hpq, ?_⟩\n    match_scalars <;> field_simp\n\n"}
{"name":"Convex.add_smul","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : LinearOrderedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns : Set E\nh_conv : Convex 𝕜 s\np q : 𝕜\nhp : LE.le 0 p\nhq : LE.le 0 q\n⊢ Eq (HSMul.hSMul (HAdd.hAdd p q) s) (HAdd.hAdd (HSMul.hSMul p s) (HSMul.hSMul q s))","decl":"theorem Convex.add_smul (h_conv : Convex 𝕜 s) {p q : 𝕜} (hp : 0 ≤ p) (hq : 0 ≤ q) :\n    (p + q) • s = p • s + q • s := (add_smul_subset _ _ _).antisymm <| by\n  rintro _ ⟨_, ⟨v₁, h₁, rfl⟩, _, ⟨v₂, h₂, rfl⟩, rfl⟩\n  exact h_conv.exists_mem_add_smul_eq h₁ h₂ hp hq\n\n"}
{"name":"Set.OrdConnected.convex_of_chain","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : OrderedSemiring 𝕜\ninst✝² : OrderedAddCommMonoid E\ninst✝¹ : Module 𝕜 E\ninst✝ : OrderedSMul 𝕜 E\ns : Set E\nhs : s.OrdConnected\nh : IsChain (fun x1 x2 => LE.le x1 x2) s\n⊢ Convex 𝕜 s","decl":"theorem Set.OrdConnected.convex_of_chain [OrderedSemiring 𝕜] [OrderedAddCommMonoid E] [Module 𝕜 E]\n    [OrderedSMul 𝕜 E] {s : Set E} (hs : s.OrdConnected) (h : IsChain (· ≤ ·) s) : Convex 𝕜 s := by\n  refine convex_iff_segment_subset.mpr fun x hx y hy => ?_\n  obtain hxy | hyx := h.total hx hy\n  · exact (segment_subset_Icc hxy).trans (hs.out hx hy)\n  · rw [segment_symm]\n    exact (segment_subset_Icc hyx).trans (hs.out hy hx)\n\n"}
{"name":"Set.OrdConnected.convex","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝³ : OrderedSemiring 𝕜\ninst✝² : LinearOrderedAddCommMonoid E\ninst✝¹ : Module 𝕜 E\ninst✝ : OrderedSMul 𝕜 E\ns : Set E\nhs : s.OrdConnected\n⊢ Convex 𝕜 s","decl":"theorem Set.OrdConnected.convex [OrderedSemiring 𝕜] [LinearOrderedAddCommMonoid E] [Module 𝕜 E]\n    [OrderedSMul 𝕜 E] {s : Set E} (hs : s.OrdConnected) : Convex 𝕜 s :=\n  hs.convex_of_chain <| isChain_of_trichotomous s\n\n"}
{"name":"convex_iff_ordConnected","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\ninst✝ : LinearOrderedField 𝕜\ns : Set 𝕜\n⊢ Iff (Convex 𝕜 s) s.OrdConnected","decl":"theorem convex_iff_ordConnected [LinearOrderedField 𝕜] {s : Set 𝕜} :\n    Convex 𝕜 s ↔ s.OrdConnected := by\n  simp_rw [convex_iff_segment_subset, segment_eq_uIcc, ordConnected_iff_uIcc_subset]\n\n"}
{"name":"Convex.ordConnected","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\ninst✝ : LinearOrderedField 𝕜\ns : Set 𝕜\na✝ : Convex 𝕜 s\n⊢ s.OrdConnected","decl":"alias ⟨Convex.ordConnected, _⟩ := convex_iff_ordConnected\n\n"}
{"name":"Submodule.convex","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\nK : Submodule 𝕜 E\n⊢ Convex 𝕜 ↑K","decl":"protected theorem convex (K : Submodule 𝕜 E) : Convex 𝕜 (↑K : Set E) := by\n  repeat' intro\n  refine add_mem (smul_mem _ _ ?_) (smul_mem _ _ ?_) <;> assumption\n\n"}
{"name":"Submodule.starConvex","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\nK : Submodule 𝕜 E\n⊢ StarConvex 𝕜 0 ↑K","decl":"protected theorem starConvex (K : Submodule 𝕜 E) : StarConvex 𝕜 (0 : E) K :=\n  K.convex K.zero_mem\n\n"}
{"name":"stdSimplex_eq_inter","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nι : Type u_5\ninst✝¹ : OrderedSemiring 𝕜\ninst✝ : Fintype ι\n⊢ Eq (stdSimplex 𝕜 ι) (Inter.inter (Set.iInter fun x => setOf fun f => LE.le 0 (f x)) (setOf fun f => Eq (Finset.univ.sum fun x => f x) 1))","decl":"theorem stdSimplex_eq_inter : stdSimplex 𝕜 ι = (⋂ x, { f | 0 ≤ f x }) ∩ { f | ∑ x, f x = 1 } := by\n  ext f\n  simp only [stdSimplex, Set.mem_inter_iff, Set.mem_iInter, Set.mem_setOf_eq]\n\n"}
{"name":"convex_stdSimplex","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nι : Type u_5\ninst✝¹ : OrderedSemiring 𝕜\ninst✝ : Fintype ι\n⊢ Convex 𝕜 (stdSimplex 𝕜 ι)","decl":"theorem convex_stdSimplex : Convex 𝕜 (stdSimplex 𝕜 ι) := by\n  refine fun f hf g hg a b ha hb hab => ⟨fun x => ?_, ?_⟩\n  · apply_rules [add_nonneg, mul_nonneg, hf.1, hg.1]\n  · erw [Finset.sum_add_distrib]\n    simp only [Pi.smul_apply] -- Porting note: `erw` failed to rewrite with `← Finset.smul_sum`\n    rw [← Finset.smul_sum, ← Finset.smul_sum, hf.2, hg.2, smul_eq_mul,\n      smul_eq_mul, mul_one, mul_one]\n    exact hab\n\n"}
{"name":"stdSimplex_of_subsingleton","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nι : Type u_5\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : Fintype ι\ninst✝ : Subsingleton 𝕜\n⊢ Eq (stdSimplex 𝕜 ι) Set.univ","decl":"@[nontriviality] lemma stdSimplex_of_subsingleton [Subsingleton 𝕜] : stdSimplex 𝕜 ι = univ :=\n  eq_univ_of_forall fun _ ↦ ⟨fun _ ↦ (Subsingleton.elim _ _).le, Subsingleton.elim _ _⟩\n\n"}
{"name":"stdSimplex_of_isEmpty_index","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nι : Type u_5\ninst✝³ : OrderedSemiring 𝕜\ninst✝² : Fintype ι\ninst✝¹ : IsEmpty ι\ninst✝ : Nontrivial 𝕜\n⊢ Eq (stdSimplex 𝕜 ι) EmptyCollection.emptyCollection","decl":"/-- The standard simplex in the zero-dimensional space is empty. -/\nlemma stdSimplex_of_isEmpty_index [IsEmpty ι] [Nontrivial 𝕜] : stdSimplex 𝕜 ι = ∅ :=\n  eq_empty_of_forall_not_mem <| by rintro f ⟨-, hf⟩; simp at hf\n\n"}
{"name":"stdSimplex_unique","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nι : Type u_5\ninst✝³ : OrderedSemiring 𝕜\ninst✝² : Fintype ι\ninst✝¹ : Nonempty ι\ninst✝ : Subsingleton ι\n⊢ Eq (stdSimplex 𝕜 ι) (Singleton.singleton fun x => 1)","decl":"lemma stdSimplex_unique [Nonempty ι] [Subsingleton ι] : stdSimplex 𝕜 ι = {fun _ ↦ 1} := by\n  cases nonempty_unique ι\n  refine eq_singleton_iff_unique_mem.2 ⟨⟨fun _ ↦ zero_le_one, Fintype.sum_unique _⟩, ?_⟩\n  rintro f ⟨-, hf⟩\n  rw [Fintype.sum_unique] at hf\n  exact funext (Unique.forall_iff.2 hf)\n\n"}
{"name":"single_mem_stdSimplex","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nι : Type u_5\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : Fintype ι\ninst✝ : DecidableEq ι\ni : ι\n⊢ Membership.mem (stdSimplex 𝕜 ι) (Pi.single i 1)","decl":"theorem single_mem_stdSimplex (i : ι) : Pi.single i 1 ∈ stdSimplex 𝕜 ι :=\n  ⟨le_update_iff.2 ⟨zero_le_one, fun _ _ ↦ le_rfl⟩, by simp⟩\n\n"}
{"name":"ite_eq_mem_stdSimplex","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nι : Type u_5\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : Fintype ι\ninst✝ : DecidableEq ι\ni : ι\n⊢ Membership.mem (stdSimplex 𝕜 ι) fun x => ite (Eq i x) 1 0","decl":"theorem ite_eq_mem_stdSimplex (i : ι) : (if i = · then (1 : 𝕜) else 0) ∈ stdSimplex 𝕜 ι := by\n  simpa only [@eq_comm _ i, ← Pi.single_apply] using single_mem_stdSimplex 𝕜 i\n\n"}
{"name":"segment_single_subset_stdSimplex","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\nι : Type u_5\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : Fintype ι\ninst✝ : DecidableEq ι\ni j : ι\n⊢ HasSubset.Subset (segment 𝕜 (Pi.single i 1) (Pi.single j 1)) (stdSimplex 𝕜 ι)","decl":"/-- The edges are contained in the simplex. -/\nlemma segment_single_subset_stdSimplex (i j : ι) :\n    ([Pi.single i 1 -[𝕜] Pi.single j 1] : Set (ι → 𝕜)) ⊆ stdSimplex 𝕜 ι :=\n  (convex_stdSimplex 𝕜 ι).segment_subset (single_mem_stdSimplex _ _) (single_mem_stdSimplex _ _)\n\n"}
{"name":"stdSimplex_fin_two","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\ninst✝ : OrderedSemiring 𝕜\n⊢ Eq (stdSimplex 𝕜 (Fin 2)) (segment 𝕜 (Pi.single 0 1) (Pi.single 1 1))","decl":"lemma stdSimplex_fin_two :\n    stdSimplex 𝕜 (Fin 2) = ([Pi.single 0 1 -[𝕜] Pi.single 1 1] : Set (Fin 2 → 𝕜)) := by\n  refine Subset.antisymm ?_ (segment_single_subset_stdSimplex 𝕜 (0 : Fin 2) 1)\n  rintro f ⟨hf₀, hf₁⟩\n  rw [Fin.sum_univ_two] at hf₁\n  refine ⟨f 0, f 1, hf₀ 0, hf₀ 1, hf₁, funext <| Fin.forall_fin_two.2 ?_⟩\n  simp\n\n"}
{"name":"stdSimplexEquivIcc_apply_coe","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\ninst✝ : OrderedRing 𝕜\nf : ↑(stdSimplex 𝕜 (Fin 2))\n⊢ Eq (↑((stdSimplexEquivIcc 𝕜) f)) (↑f 0)","decl":"/-- The standard one-dimensional simplex in `Fin 2 → 𝕜` is equivalent to the unit interval. -/\n@[simps (config := .asFn)]\ndef stdSimplexEquivIcc : stdSimplex 𝕜 (Fin 2) ≃ Icc (0 : 𝕜) 1 where\n  toFun f := ⟨f.1 0, f.2.1 _, f.2.2 ▸\n    Finset.single_le_sum (fun i _ ↦ f.2.1 i) (Finset.mem_univ _)⟩\n  invFun x := ⟨![x, 1 - x], Fin.forall_fin_two.2 ⟨x.2.1, sub_nonneg.2 x.2.2⟩,\n    calc\n      ∑ i : Fin 2, ![(x : 𝕜), 1 - x] i = x + (1 - x) := Fin.sum_univ_two _\n      _ = 1 := add_sub_cancel _ _⟩\n  left_inv f := Subtype.eq <| funext <| Fin.forall_fin_two.2 <| .intro rfl <|\n      calc\n        (1 : 𝕜) - f.1 0 = f.1 0 + f.1 1 - f.1 0 := by rw [← Fin.sum_univ_two f.1, f.2.2]\n        _ = f.1 1 := add_sub_cancel_left _ _\n  right_inv _ := Subtype.eq rfl\n\n"}
{"name":"stdSimplexEquivIcc_symm_apply_coe","module":"Mathlib.Analysis.Convex.Basic","initialProofState":"𝕜 : Type u_1\ninst✝ : OrderedRing 𝕜\nx : ↑(Set.Icc 0 1)\n⊢ Eq (↑((stdSimplexEquivIcc 𝕜).symm x)) (Matrix.vecCons (↑x) (Matrix.vecCons (HSub.hSub 1 ↑x) Matrix.vecEmpty))","decl":"/-- The standard one-dimensional simplex in `Fin 2 → 𝕜` is equivalent to the unit interval. -/\n@[simps (config := .asFn)]\ndef stdSimplexEquivIcc : stdSimplex 𝕜 (Fin 2) ≃ Icc (0 : 𝕜) 1 where\n  toFun f := ⟨f.1 0, f.2.1 _, f.2.2 ▸\n    Finset.single_le_sum (fun i _ ↦ f.2.1 i) (Finset.mem_univ _)⟩\n  invFun x := ⟨![x, 1 - x], Fin.forall_fin_two.2 ⟨x.2.1, sub_nonneg.2 x.2.2⟩,\n    calc\n      ∑ i : Fin 2, ![(x : 𝕜), 1 - x] i = x + (1 - x) := Fin.sum_univ_two _\n      _ = 1 := add_sub_cancel _ _⟩\n  left_inv f := Subtype.eq <| funext <| Fin.forall_fin_two.2 <| .intro rfl <|\n      calc\n        (1 : 𝕜) - f.1 0 = f.1 0 + f.1 1 - f.1 0 := by rw [← Fin.sum_univ_two f.1, f.2.2]\n        _ = f.1 1 := add_sub_cancel_left _ _\n  right_inv _ := Subtype.eq rfl\n\n"}
