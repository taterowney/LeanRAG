{"name":"BoolRing.coe_of","module":"Mathlib.Algebra.Category.BoolRing","initialProofState":"α : Type u_1\ninst✝ : BooleanRing α\n⊢ Eq (↑(BoolRing.of α)) α","decl":"theorem coe_of (α : Type*) [BooleanRing α] : ↥(of α) = α :=\n  rfl\n\n"}
{"name":"BoolRing.Hom.ext_iff","module":"Mathlib.Algebra.Category.BoolRing","initialProofState":"R : BoolRing\nS : BoolRing\nx y : R.Hom S\n⊢ Iff (Eq x y) (Eq x.hom y.hom)","decl":"variable {R} in\n/-- The type of morphisms in `BoolRing`. -/\n@[ext]\nstructure Hom (R S : BoolRing) where\n  private mk ::\n  /-- The underlying ring hom. -/\n  hom : R →+* S\n\n"}
{"name":"BoolRing.Hom.ext","module":"Mathlib.Algebra.Category.BoolRing","initialProofState":"R : BoolRing\nS : BoolRing\nx y : R.Hom S\nhom : Eq x.hom y.hom\n⊢ Eq x y","decl":"variable {R} in\n/-- The type of morphisms in `BoolRing`. -/\n@[ext]\nstructure Hom (R S : BoolRing) where\n  private mk ::\n  /-- The underlying ring hom. -/\n  hom : R →+* S\n\n"}
{"name":"BoolRing.hom_ext_iff","module":"Mathlib.Algebra.Category.BoolRing","initialProofState":"R S : BoolRing\nf g : Quiver.Hom R S\n⊢ Iff (Eq f g) (Eq f.hom g.hom)","decl":"@[ext]\nlemma hom_ext {R S : BoolRing} {f g : R ⟶ S} (hf : f.hom = g.hom) : f = g :=\n  Hom.ext hf\n\n"}
{"name":"BoolRing.hom_ext","module":"Mathlib.Algebra.Category.BoolRing","initialProofState":"R S : BoolRing\nf g : Quiver.Hom R S\nhf : Eq f.hom g.hom\n⊢ Eq f g","decl":"@[ext]\nlemma hom_ext {R S : BoolRing} {f g : R ⟶ S} (hf : f.hom = g.hom) : f = g :=\n  Hom.ext hf\n\n"}
{"name":"BoolRing.Iso.mk_inv_hom","module":"Mathlib.Algebra.Category.BoolRing","initialProofState":"α β : BoolRing\ne : RingEquiv ↑α ↑β\n⊢ Eq (BoolRing.Iso.mk e).inv.hom ↑e.symm","decl":"/-- Constructs an isomorphism of Boolean rings from a ring isomorphism between them. -/\n@[simps]\ndef Iso.mk {α β : BoolRing.{u}} (e : α ≃+* β) : α ≅ β where\n  hom := ⟨e⟩\n  inv := ⟨e.symm⟩\n  hom_inv_id := by ext; exact e.symm_apply_apply _\n  inv_hom_id := by ext; exact e.apply_symm_apply _\n\n"}
{"name":"BoolRing.Iso.mk_hom_hom","module":"Mathlib.Algebra.Category.BoolRing","initialProofState":"α β : BoolRing\ne : RingEquiv ↑α ↑β\n⊢ Eq (BoolRing.Iso.mk e).hom.hom ↑e","decl":"/-- Constructs an isomorphism of Boolean rings from a ring isomorphism between them. -/\n@[simps]\ndef Iso.mk {α β : BoolRing.{u}} (e : α ≃+* β) : α ≅ β where\n  hom := ⟨e⟩\n  inv := ⟨e.symm⟩\n  hom_inv_id := by ext; exact e.symm_apply_apply _\n  inv_hom_id := by ext; exact e.apply_symm_apply _\n\n"}
{"name":"BoolRing.hasForgetToBoolAlg_forget₂_obj","module":"Mathlib.Algebra.Category.BoolRing","initialProofState":"X : BoolRing\n⊢ Eq (CategoryTheory.HasForget₂.forget₂.obj X) (BoolAlg.of (AsBoolAlg ↑X))","decl":"@[simps]\ninstance BoolRing.hasForgetToBoolAlg : HasForget₂ BoolRing BoolAlg where\n  forget₂ :=\n    { obj := fun X ↦ BoolAlg.of (AsBoolAlg X)\n      map := fun {R S} f ↦ RingHom.asBoolAlg f.hom }\n\n"}
{"name":"BoolRing.hasForgetToBoolAlg_forget₂_map","module":"Mathlib.Algebra.Category.BoolRing","initialProofState":"R S : BoolRing\nf : Quiver.Hom R S\n⊢ Eq (CategoryTheory.HasForget₂.forget₂.map f) f.hom.asBoolAlg","decl":"@[simps]\ninstance BoolRing.hasForgetToBoolAlg : HasForget₂ BoolRing BoolAlg where\n  forget₂ :=\n    { obj := fun X ↦ BoolAlg.of (AsBoolAlg X)\n      map := fun {R S} f ↦ RingHom.asBoolAlg f.hom }\n\n"}
{"name":"BoolAlg.hasForgetToBoolRing_forget₂_obj_carrier","module":"Mathlib.Algebra.Category.BoolRing","initialProofState":"X : BoolAlg\n⊢ Eq (↑(CategoryTheory.HasForget₂.forget₂.obj X)) (AsBoolRing ↑X)","decl":"@[simps]\ninstance BoolAlg.hasForgetToBoolRing : HasForget₂ BoolAlg BoolRing where\n  forget₂ :=\n    { obj := fun X => BoolRing.of (AsBoolRing X)\n      map := fun {_ _} f => BoolRing.ofHom <| BoundedLatticeHom.asBoolRing f }\n\n"}
{"name":"BoolAlg.hasForgetToBoolRing_forget₂_map_hom","module":"Mathlib.Algebra.Category.BoolRing","initialProofState":"x✝¹ x✝ : BoolAlg\nf : Quiver.Hom x✝¹ x✝\n⊢ Eq (CategoryTheory.HasForget₂.forget₂.map f).hom (BoundedLatticeHom.asBoolRing f)","decl":"@[simps]\ninstance BoolAlg.hasForgetToBoolRing : HasForget₂ BoolAlg BoolRing where\n  forget₂ :=\n    { obj := fun X => BoolRing.of (AsBoolRing X)\n      map := fun {_ _} f => BoolRing.ofHom <| BoundedLatticeHom.asBoolRing f }\n\n"}
{"name":"boolRingCatEquivBoolAlg_functor","module":"Mathlib.Algebra.Category.BoolRing","initialProofState":"⊢ Eq boolRingCatEquivBoolAlg.functor (CategoryTheory.forget₂ BoolRing BoolAlg)","decl":"/-- The equivalence between Boolean rings and Boolean algebras. This is actually an isomorphism. -/\n@[simps functor inverse]\ndef boolRingCatEquivBoolAlg : BoolRing ≌ BoolAlg where\n  functor := forget₂ BoolRing BoolAlg\n  inverse := forget₂ BoolAlg BoolRing\n  unitIso := NatIso.ofComponents (fun X => BoolRing.Iso.mk <|\n    (RingEquiv.asBoolRingAsBoolAlg X).symm) fun {_ _} _ => rfl\n  counitIso := NatIso.ofComponents (fun X => BoolAlg.Iso.mk <|\n    OrderIso.asBoolAlgAsBoolRing X) fun {_ _} _ => rfl\n"}
{"name":"boolRingCatEquivBoolAlg_inverse","module":"Mathlib.Algebra.Category.BoolRing","initialProofState":"⊢ Eq boolRingCatEquivBoolAlg.inverse (CategoryTheory.forget₂ BoolAlg BoolRing)","decl":"/-- The equivalence between Boolean rings and Boolean algebras. This is actually an isomorphism. -/\n@[simps functor inverse]\ndef boolRingCatEquivBoolAlg : BoolRing ≌ BoolAlg where\n  functor := forget₂ BoolRing BoolAlg\n  inverse := forget₂ BoolAlg BoolRing\n  unitIso := NatIso.ofComponents (fun X => BoolRing.Iso.mk <|\n    (RingEquiv.asBoolRingAsBoolAlg X).symm) fun {_ _} _ => rfl\n  counitIso := NatIso.ofComponents (fun X => BoolAlg.Iso.mk <|\n    OrderIso.asBoolAlgAsBoolRing X) fun {_ _} _ => rfl\n"}
