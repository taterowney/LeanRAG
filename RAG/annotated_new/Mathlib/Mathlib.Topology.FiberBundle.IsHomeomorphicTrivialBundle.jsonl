{"name":"IsHomeomorphicTrivialFiberBundle.proj_eq","module":"Mathlib.Topology.FiberBundle.IsHomeomorphicTrivialBundle","initialProofState":"B : Type u_1\nF : Type u_2\nZ : Type u_3\ninst✝² : TopologicalSpace B\ninst✝¹ : TopologicalSpace F\ninst✝ : TopologicalSpace Z\nproj : Z → B\nh : IsHomeomorphicTrivialFiberBundle F proj\n⊢ Exists fun e => Eq proj (Function.comp Prod.fst ⇑e)","decl":"protected theorem proj_eq (h : IsHomeomorphicTrivialFiberBundle F proj) :\n    ∃ e : Z ≃ₜ B × F, proj = Prod.fst ∘ e :=\n  ⟨h.choose, (funext h.choose_spec).symm⟩\n\n"}
{"name":"IsHomeomorphicTrivialFiberBundle.surjective_proj","module":"Mathlib.Topology.FiberBundle.IsHomeomorphicTrivialBundle","initialProofState":"B : Type u_1\nF : Type u_2\nZ : Type u_3\ninst✝³ : TopologicalSpace B\ninst✝² : TopologicalSpace F\ninst✝¹ : TopologicalSpace Z\nproj : Z → B\ninst✝ : Nonempty F\nh : IsHomeomorphicTrivialFiberBundle F proj\n⊢ Function.Surjective proj","decl":"/-- The projection from a trivial fiber bundle to its base is surjective. -/\nprotected theorem surjective_proj [Nonempty F] (h : IsHomeomorphicTrivialFiberBundle F proj) :\n    Function.Surjective proj := by\n  obtain ⟨e, rfl⟩ := h.proj_eq\n  exact Prod.fst_surjective.comp e.surjective\n\n"}
{"name":"IsHomeomorphicTrivialFiberBundle.continuous_proj","module":"Mathlib.Topology.FiberBundle.IsHomeomorphicTrivialBundle","initialProofState":"B : Type u_1\nF : Type u_2\nZ : Type u_3\ninst✝² : TopologicalSpace B\ninst✝¹ : TopologicalSpace F\ninst✝ : TopologicalSpace Z\nproj : Z → B\nh : IsHomeomorphicTrivialFiberBundle F proj\n⊢ Continuous proj","decl":"/-- The projection from a trivial fiber bundle to its base is continuous. -/\nprotected theorem continuous_proj (h : IsHomeomorphicTrivialFiberBundle F proj) :\n    Continuous proj := by\n  obtain ⟨e, rfl⟩ := h.proj_eq; exact continuous_fst.comp e.continuous\n\n"}
{"name":"IsHomeomorphicTrivialFiberBundle.isOpenMap_proj","module":"Mathlib.Topology.FiberBundle.IsHomeomorphicTrivialBundle","initialProofState":"B : Type u_1\nF : Type u_2\nZ : Type u_3\ninst✝² : TopologicalSpace B\ninst✝¹ : TopologicalSpace F\ninst✝ : TopologicalSpace Z\nproj : Z → B\nh : IsHomeomorphicTrivialFiberBundle F proj\n⊢ IsOpenMap proj","decl":"/-- The projection from a trivial fiber bundle to its base is open. -/\nprotected theorem isOpenMap_proj (h : IsHomeomorphicTrivialFiberBundle F proj) :\n    IsOpenMap proj := by\n  obtain ⟨e, rfl⟩ := h.proj_eq; exact isOpenMap_fst.comp e.isOpenMap\n\n"}
{"name":"IsHomeomorphicTrivialFiberBundle.isQuotientMap_proj","module":"Mathlib.Topology.FiberBundle.IsHomeomorphicTrivialBundle","initialProofState":"B : Type u_1\nF : Type u_2\nZ : Type u_3\ninst✝³ : TopologicalSpace B\ninst✝² : TopologicalSpace F\ninst✝¹ : TopologicalSpace Z\nproj : Z → B\ninst✝ : Nonempty F\nh : IsHomeomorphicTrivialFiberBundle F proj\n⊢ Topology.IsQuotientMap proj","decl":"/-- The projection from a trivial fiber bundle to its base is open. -/\nprotected theorem isQuotientMap_proj [Nonempty F] (h : IsHomeomorphicTrivialFiberBundle F proj) :\n    IsQuotientMap proj :=\n  h.isOpenMap_proj.isQuotientMap h.continuous_proj h.surjective_proj\n\n"}
{"name":"IsHomeomorphicTrivialFiberBundle.quotientMap_proj","module":"Mathlib.Topology.FiberBundle.IsHomeomorphicTrivialBundle","initialProofState":"B : Type u_1\nF : Type u_2\nZ : Type u_3\ninst✝³ : TopologicalSpace B\ninst✝² : TopologicalSpace F\ninst✝¹ : TopologicalSpace Z\nproj : Z → B\ninst✝ : Nonempty F\nh : IsHomeomorphicTrivialFiberBundle F proj\n⊢ Topology.IsQuotientMap proj","decl":"@[deprecated (since := \"2024-10-22\")]\nalias quotientMap_proj := IsHomeomorphicTrivialFiberBundle.isQuotientMap_proj\n\n"}
{"name":"isHomeomorphicTrivialFiberBundle_fst","module":"Mathlib.Topology.FiberBundle.IsHomeomorphicTrivialBundle","initialProofState":"B : Type u_1\nF : Type u_2\ninst✝¹ : TopologicalSpace B\ninst✝ : TopologicalSpace F\n⊢ IsHomeomorphicTrivialFiberBundle F Prod.fst","decl":"/-- The first projection in a product is a trivial fiber bundle. -/\ntheorem isHomeomorphicTrivialFiberBundle_fst :\n    IsHomeomorphicTrivialFiberBundle F (Prod.fst : B × F → B) :=\n  ⟨Homeomorph.refl _, fun _x => rfl⟩\n\n"}
{"name":"isHomeomorphicTrivialFiberBundle_snd","module":"Mathlib.Topology.FiberBundle.IsHomeomorphicTrivialBundle","initialProofState":"B : Type u_1\nF : Type u_2\ninst✝¹ : TopologicalSpace B\ninst✝ : TopologicalSpace F\n⊢ IsHomeomorphicTrivialFiberBundle F Prod.snd","decl":"/-- The second projection in a product is a trivial fiber bundle. -/\ntheorem isHomeomorphicTrivialFiberBundle_snd :\n    IsHomeomorphicTrivialFiberBundle F (Prod.snd : F × B → B) :=\n  ⟨Homeomorph.prodComm _ _, fun _x => rfl⟩\n"}
