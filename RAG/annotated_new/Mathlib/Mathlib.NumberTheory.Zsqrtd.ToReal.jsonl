{"name":"Zsqrtd.toReal_apply","module":"Mathlib.NumberTheory.Zsqrtd.ToReal","initialProofState":"d : Int\nh : LE.le 0 d\na : Zsqrtd d\n⊢ Eq ((Zsqrtd.toReal h) a) (HAdd.hAdd (↑a.re) (HMul.hMul (↑a.im) (↑d).sqrt))","decl":"/-- The image of `Zsqrtd` in `ℝ`, using `Real.sqrt` which takes the positive root of `d`.\n\nIf the negative root is desired, use `toReal h (star a)`. -/\n@[simps!]\nnoncomputable def toReal {d : ℤ} (h : 0 ≤ d) : ℤ√d →+* ℝ :=\n  lift ⟨√↑d, Real.mul_self_sqrt (Int.cast_nonneg.mpr h)⟩\n\n"}
{"name":"Zsqrtd.toReal_injective","module":"Mathlib.NumberTheory.Zsqrtd.ToReal","initialProofState":"d : Int\nh0d : LE.le 0 d\nhd : ∀ (n : Int), Ne d (HMul.hMul n n)\n⊢ Function.Injective ⇑(Zsqrtd.toReal h0d)","decl":"theorem toReal_injective {d : ℤ} (h0d : 0 ≤ d) (hd : ∀ n : ℤ, d ≠ n * n) :\n    Function.Injective (toReal h0d) :=\n  lift_injective _ hd\n\n"}
