{"name":"HopfAlgebra.mul_antipode_lTensor_comul","module":"Mathlib.RingTheory.HopfAlgebra","initialProofState":"R : Type u\nA : Type v\ninst✝¹ : CommSemiring R\ninst✝ : Semiring A\nself : HopfAlgebra R A\n⊢ Eq ((LinearMap.mul' R A).comp ((LinearMap.lTensor A HopfAlgebra.antipode).comp CoalgebraStruct.comul)) ((Algebra.linearMap R A).comp CoalgebraStruct.counit)","decl":"/-- A Hopf algebra over a commutative (semi)ring `R` is a bialgebra over `R` equipped with an\n`R`-linear endomorphism `antipode` satisfying the antipode axioms. -/\nclass HopfAlgebra (R : Type u) (A : Type v) [CommSemiring R] [Semiring A] extends\n    Bialgebra R A where\n  /-- The antipode of the Hopf algebra. -/\n  antipode : A →ₗ[R] A\n  /-- One of the antipode axioms for a Hopf algebra. -/\n  mul_antipode_rTensor_comul :\n    LinearMap.mul' R A ∘ₗ antipode.rTensor A ∘ₗ comul = (Algebra.linearMap R A) ∘ₗ counit\n  /-- One of the antipode axioms for a Hopf algebra. -/\n  mul_antipode_lTensor_comul :\n    LinearMap.mul' R A ∘ₗ antipode.lTensor A ∘ₗ comul = (Algebra.linearMap R A) ∘ₗ counit\n\n"}
{"name":"HopfAlgebra.mul_antipode_rTensor_comul","module":"Mathlib.RingTheory.HopfAlgebra","initialProofState":"R : Type u\nA : Type v\ninst✝¹ : CommSemiring R\ninst✝ : Semiring A\nself : HopfAlgebra R A\n⊢ Eq ((LinearMap.mul' R A).comp ((LinearMap.rTensor A HopfAlgebra.antipode).comp CoalgebraStruct.comul)) ((Algebra.linearMap R A).comp CoalgebraStruct.counit)","decl":"/-- A Hopf algebra over a commutative (semi)ring `R` is a bialgebra over `R` equipped with an\n`R`-linear endomorphism `antipode` satisfying the antipode axioms. -/\nclass HopfAlgebra (R : Type u) (A : Type v) [CommSemiring R] [Semiring A] extends\n    Bialgebra R A where\n  /-- The antipode of the Hopf algebra. -/\n  antipode : A →ₗ[R] A\n  /-- One of the antipode axioms for a Hopf algebra. -/\n  mul_antipode_rTensor_comul :\n    LinearMap.mul' R A ∘ₗ antipode.rTensor A ∘ₗ comul = (Algebra.linearMap R A) ∘ₗ counit\n  /-- One of the antipode axioms for a Hopf algebra. -/\n  mul_antipode_lTensor_comul :\n    LinearMap.mul' R A ∘ₗ antipode.lTensor A ∘ₗ comul = (Algebra.linearMap R A) ∘ₗ counit\n\n"}
{"name":"HopfAlgebra.mul_antipode_rTensor_comul_apply","module":"Mathlib.RingTheory.HopfAlgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : HopfAlgebra R A\na : A\n⊢ Eq ((LinearMap.mul' R A) ((LinearMap.rTensor A HopfAlgebra.antipode) (CoalgebraStruct.comul a))) ((algebraMap R A) (CoalgebraStruct.counit a))","decl":"@[simp]\ntheorem mul_antipode_rTensor_comul_apply (a : A) :\n    LinearMap.mul' R A (antipode.rTensor A (Coalgebra.comul a)) =\n    algebraMap R A (Coalgebra.counit a) :=\n  LinearMap.congr_fun mul_antipode_rTensor_comul a\n\n"}
{"name":"HopfAlgebra.mul_antipode_lTensor_comul_apply","module":"Mathlib.RingTheory.HopfAlgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : HopfAlgebra R A\na : A\n⊢ Eq ((LinearMap.mul' R A) ((LinearMap.lTensor A HopfAlgebra.antipode) (CoalgebraStruct.comul a))) ((algebraMap R A) (CoalgebraStruct.counit a))","decl":"@[simp]\ntheorem mul_antipode_lTensor_comul_apply (a : A) :\n    LinearMap.mul' R A (antipode.lTensor A (Coalgebra.comul a)) =\n    algebraMap R A (Coalgebra.counit a) :=\n  LinearMap.congr_fun mul_antipode_lTensor_comul a\n\n"}
{"name":"HopfAlgebra.sum_antipode_mul_eq","module":"Mathlib.RingTheory.HopfAlgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : HopfAlgebra R A\na : A\nrepr : Coalgebra.Repr R a\n⊢ Eq (repr.index.sum fun i => HMul.hMul (HopfAlgebra.antipode (repr.left i)) (repr.right i)) ((algebraMap R A) (CoalgebraStruct.counit a))","decl":"@[simp]\nlemma sum_antipode_mul_eq {a : A} (repr : Repr R a) :\n    ∑ i ∈ repr.index, antipode (R := R) (repr.left i) * repr.right i =\n      algebraMap R A (counit a) := by\n  simpa [← repr.eq, map_sum] using congr($(mul_antipode_rTensor_comul (R := R)) a)\n\n"}
{"name":"HopfAlgebra.sum_mul_antipode_eq","module":"Mathlib.RingTheory.HopfAlgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : HopfAlgebra R A\na : A\nrepr : Coalgebra.Repr R a\n⊢ Eq (repr.index.sum fun i => HMul.hMul (repr.left i) (HopfAlgebra.antipode (repr.right i))) ((algebraMap R A) (CoalgebraStruct.counit a))","decl":"@[simp]\nlemma sum_mul_antipode_eq {a : A} (repr : Repr R a) :\n    ∑ i ∈ repr.index, repr.left i * antipode (R := R) (repr.right i) =\n      algebraMap R A (counit a) := by\n  simpa [← repr.eq, map_sum] using congr($(mul_antipode_lTensor_comul (R := R)) a)\n\n"}
{"name":"HopfAlgebra.sum_antipode_mul_eq_smul","module":"Mathlib.RingTheory.HopfAlgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : HopfAlgebra R A\na : A\nrepr : Coalgebra.Repr R a\n⊢ Eq (repr.index.sum fun i => HMul.hMul (HopfAlgebra.antipode (repr.left i)) (repr.right i)) (HSMul.hSMul (CoalgebraStruct.counit a) 1)","decl":"lemma sum_antipode_mul_eq_smul {a : A} (repr : Repr R a) :\n    ∑ i ∈ repr.index, antipode (R := R) (repr.left i) * repr.right i =\n      counit (R := R) a • 1 := by\n  rw [sum_antipode_mul_eq, Algebra.smul_def, mul_one]\n\n"}
{"name":"HopfAlgebra.sum_mul_antipode_eq_smul","module":"Mathlib.RingTheory.HopfAlgebra","initialProofState":"R : Type u\nA : Type v\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : HopfAlgebra R A\na : A\nrepr : Coalgebra.Repr R a\n⊢ Eq (repr.index.sum fun i => HMul.hMul (repr.left i) (HopfAlgebra.antipode (repr.right i))) (HSMul.hSMul (CoalgebraStruct.counit a) 1)","decl":"lemma sum_mul_antipode_eq_smul {a : A} (repr : Repr R a) :\n    ∑ i ∈ repr.index, repr.left i * antipode (R := R) (repr.right i) =\n      counit (R := R) a • 1 := by\n  rw [sum_mul_antipode_eq, Algebra.smul_def, mul_one]\n\n"}
{"name":"CommSemiring.antipode_eq_id","module":"Mathlib.RingTheory.HopfAlgebra","initialProofState":"R : Type u\ninst✝ : CommSemiring R\n⊢ Eq HopfAlgebra.antipode LinearMap.id","decl":"@[simp]\ntheorem antipode_eq_id : antipode (R := R) (A := R) = .id := rfl\n\n"}
