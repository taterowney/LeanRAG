{"name":"CategoryTheory.Localization.HasSmallLocalizedHom.small","module":"Mathlib.CategoryTheory.Localization.SmallHom","initialProofState":"C : Type u₁\ninst✝ : CategoryTheory.Category.{v₁, u₁} C\nW : CategoryTheory.MorphismProperty C\nX Y : C\nself : CategoryTheory.Localization.HasSmallLocalizedHom W X Y\n⊢ Small.{w, max u₁ v₁} (Quiver.Hom (W.Q.obj X) (W.Q.obj Y))","decl":"/-- This property holds if the type of morphisms between `X` and `Y`\nin the localized category with respect to `W : MorphismProperty C`\nis small. -/\nclass HasSmallLocalizedHom : Prop where\n  small : Small.{w} (W.Q.obj X ⟶ W.Q.obj Y)\n\n"}
{"name":"CategoryTheory.Localization.hasSmallLocalizedHom_iff","module":"Mathlib.CategoryTheory.Localization.SmallHom","initialProofState":"C : Type u₁\ninst✝² : CategoryTheory.Category.{v₁, u₁} C\nW : CategoryTheory.MorphismProperty C\nD : Type u₂\ninst✝¹ : CategoryTheory.Category.{v₂, u₂} D\nL : CategoryTheory.Functor C D\ninst✝ : L.IsLocalization W\nX Y : C\n⊢ Iff (CategoryTheory.Localization.HasSmallLocalizedHom W X Y) (Small.{w, v₂} (Quiver.Hom (L.obj X) (L.obj Y)))","decl":"lemma hasSmallLocalizedHom_iff :\n    HasSmallLocalizedHom.{w} W X Y ↔ Small.{w} (L.obj X ⟶ L.obj Y) := by\n  constructor\n  · intro h\n    have := h.small\n    exact small_map (homEquiv W W.Q L).symm\n  · intro h\n    exact ⟨small_map (homEquiv W W.Q L)⟩\n\n"}
{"name":"CategoryTheory.Localization.hasSmallLocalizedHom_of_isLocalization","module":"Mathlib.CategoryTheory.Localization.SmallHom","initialProofState":"C : Type u₁\ninst✝² : CategoryTheory.Category.{v₁, u₁} C\nW : CategoryTheory.MorphismProperty C\nD : Type u₂\ninst✝¹ : CategoryTheory.Category.{v₂, u₂} D\nL : CategoryTheory.Functor C D\ninst✝ : L.IsLocalization W\nX Y : C\n⊢ CategoryTheory.Localization.HasSmallLocalizedHom W X Y","decl":"include L in\nlemma hasSmallLocalizedHom_of_isLocalization :\n    HasSmallLocalizedHom.{v₂} W X Y := by\n  rw [hasSmallLocalizedHom_iff W L]\n  infer_instance\n\n"}
{"name":"CategoryTheory.Localization.small_of_hasSmallLocalizedHom","module":"Mathlib.CategoryTheory.Localization.SmallHom","initialProofState":"C : Type u₁\ninst✝³ : CategoryTheory.Category.{v₁, u₁} C\nW : CategoryTheory.MorphismProperty C\nD : Type u₂\ninst✝² : CategoryTheory.Category.{v₂, u₂} D\nL : CategoryTheory.Functor C D\ninst✝¹ : L.IsLocalization W\nX Y : C\ninst✝ : CategoryTheory.Localization.HasSmallLocalizedHom W X Y\n⊢ Small.{w, v₂} (Quiver.Hom (L.obj X) (L.obj Y))","decl":"variable (X Y) in\nlemma small_of_hasSmallLocalizedHom [HasSmallLocalizedHom.{w} W X Y] :\n    Small.{w} (L.obj X ⟶ L.obj Y) := by\n  rwa [← hasSmallLocalizedHom_iff W]\n\n"}
{"name":"CategoryTheory.Localization.hasSmallLocalizedHom_iff_of_isos","module":"Mathlib.CategoryTheory.Localization.SmallHom","initialProofState":"C : Type u₁\ninst✝ : CategoryTheory.Category.{v₁, u₁} C\nW : CategoryTheory.MorphismProperty C\nX Y X' Y' : C\ne : CategoryTheory.Iso X X'\ne' : CategoryTheory.Iso Y Y'\n⊢ Iff (CategoryTheory.Localization.HasSmallLocalizedHom W X Y) (CategoryTheory.Localization.HasSmallLocalizedHom W X' Y')","decl":"lemma hasSmallLocalizedHom_iff_of_isos {X' Y' : C} (e : X ≅ X') (e' : Y ≅ Y') :\n    HasSmallLocalizedHom.{w} W X Y ↔ HasSmallLocalizedHom.{w} W X' Y' := by\n  simp only [hasSmallLocalizedHom_iff W W.Q]\n  exact small_congr (Iso.homCongr (W.Q.mapIso e) (W.Q.mapIso e'))\n\n"}
{"name":"CategoryTheory.Localization.hasSmallLocalizedHom_iff_target","module":"Mathlib.CategoryTheory.Localization.SmallHom","initialProofState":"C : Type u₁\ninst✝ : CategoryTheory.Category.{v₁, u₁} C\nW : CategoryTheory.MorphismProperty C\nX Y Y' : C\nf : Quiver.Hom Y Y'\nhf : W f\n⊢ Iff (CategoryTheory.Localization.HasSmallLocalizedHom W X Y) (CategoryTheory.Localization.HasSmallLocalizedHom W X Y')","decl":"variable (X) in\nlemma hasSmallLocalizedHom_iff_target {Y Y' : C} (f : Y ⟶  Y') (hf : W f):\n    HasSmallLocalizedHom.{w} W X Y ↔ HasSmallLocalizedHom.{w} W X Y' := by\n  simp only [hasSmallLocalizedHom_iff W W.Q]\n  exact small_congr (Iso.homCongr (Iso.refl _) (Localization.isoOfHom W.Q W f hf))\n\n"}
{"name":"CategoryTheory.Localization.hasSmallLocalizedHom_iff_source","module":"Mathlib.CategoryTheory.Localization.SmallHom","initialProofState":"C : Type u₁\ninst✝ : CategoryTheory.Category.{v₁, u₁} C\nW : CategoryTheory.MorphismProperty C\nX X' : C\nf : Quiver.Hom X X'\nhf : W f\nY : C\n⊢ Iff (CategoryTheory.Localization.HasSmallLocalizedHom W X Y) (CategoryTheory.Localization.HasSmallLocalizedHom W X' Y)","decl":"lemma hasSmallLocalizedHom_iff_source {X' : C} (f : X ⟶  X') (hf : W f) (Y : C) :\n    HasSmallLocalizedHom.{w} W X Y ↔ HasSmallLocalizedHom.{w} W X' Y := by\n  simp only [hasSmallLocalizedHom_iff W W.Q]\n  exact small_congr (Iso.homCongr (Localization.isoOfHom W.Q W f hf) (Iso.refl _))\n\n"}
{"name":"CategoryTheory.Localization.SmallHom.equiv_equiv_symm","module":"Mathlib.CategoryTheory.Localization.SmallHom","initialProofState":"C : Type u₁\ninst✝⁵ : CategoryTheory.Category.{v₁, u₁} C\nW : CategoryTheory.MorphismProperty C\nD : Type u₂\ninst✝⁴ : CategoryTheory.Category.{v₂, u₂} D\nD' : Type u₃\ninst✝³ : CategoryTheory.Category.{v₃, u₃} D'\nL : CategoryTheory.Functor C D\ninst✝² : L.IsLocalization W\nL' : CategoryTheory.Functor C D'\ninst✝¹ : L'.IsLocalization W\nG : CategoryTheory.Functor D D'\ne : CategoryTheory.Iso (L.comp G) L'\nX Y : C\ninst✝ : CategoryTheory.Localization.HasSmallLocalizedHom W X Y\nf : Quiver.Hom (L.obj X) (L.obj Y)\n⊢ Eq ((CategoryTheory.Localization.SmallHom.equiv W L') ((CategoryTheory.Localization.SmallHom.equiv W L).symm f)) (CategoryTheory.CategoryStruct.comp (e.inv.app X) (CategoryTheory.CategoryStruct.comp (G.map f) (e.hom.app Y)))","decl":"lemma equiv_equiv_symm (L : C ⥤ D) [L.IsLocalization W]\n    (L' : C ⥤ D') [L'.IsLocalization W] (G : D ⥤ D')\n    (e : L ⋙ G ≅ L') {X Y : C} [HasSmallLocalizedHom.{w} W X Y]\n    (f : L.obj X ⟶ L.obj Y) :\n    equiv W L' ((equiv W L).symm f) =\n      e.inv.app X ≫ G.map f ≫ e.hom.app Y := by\n  dsimp [equiv]\n  rw [Equiv.symm_apply_apply, homEquiv_trans]\n  apply homEquiv_eq\n\n"}
{"name":"CategoryTheory.Localization.SmallHom.equiv_mk","module":"Mathlib.CategoryTheory.Localization.SmallHom","initialProofState":"C : Type u₁\ninst✝³ : CategoryTheory.Category.{v₁, u₁} C\nW : CategoryTheory.MorphismProperty C\nD : Type u₂\ninst✝² : CategoryTheory.Category.{v₂, u₂} D\nL : CategoryTheory.Functor C D\ninst✝¹ : L.IsLocalization W\nX Y : C\ninst✝ : CategoryTheory.Localization.HasSmallLocalizedHom W X Y\nf : Quiver.Hom X Y\n⊢ Eq ((CategoryTheory.Localization.SmallHom.equiv W L) (CategoryTheory.Localization.SmallHom.mk W f)) (L.map f)","decl":"@[simp]\nlemma equiv_mk (L : C ⥤ D) [L.IsLocalization W] {X Y : C}\n    [HasSmallLocalizedHom.{w} W X Y] (f : X ⟶ Y) :\n    equiv.{w} W L (mk W f) = L.map f := by\n  simp [equiv, mk]\n\n"}
{"name":"CategoryTheory.Localization.SmallHom.equiv_mkInv","module":"Mathlib.CategoryTheory.Localization.SmallHom","initialProofState":"C : Type u₁\ninst✝³ : CategoryTheory.Category.{v₁, u₁} C\nW : CategoryTheory.MorphismProperty C\nD : Type u₂\ninst✝² : CategoryTheory.Category.{v₂, u₂} D\nL : CategoryTheory.Functor C D\ninst✝¹ : L.IsLocalization W\nX Y : C\nf : Quiver.Hom Y X\nhf : W f\ninst✝ : CategoryTheory.Localization.HasSmallLocalizedHom W X Y\n⊢ Eq ((CategoryTheory.Localization.SmallHom.equiv W L) (CategoryTheory.Localization.SmallHom.mkInv f hf)) (CategoryTheory.Localization.isoOfHom L W f hf).inv","decl":"@[simp]\nlemma equiv_mkInv (L : C ⥤ D) [L.IsLocalization W] {X Y : C} (f : Y ⟶ X) (hf : W f)\n    [HasSmallLocalizedHom.{w} W X Y] :\n    equiv.{w} W L (mkInv f hf) = (Localization.isoOfHom L W f hf).inv := by\n  simp only [equiv, mkInv, Equiv.symm_trans_apply, Equiv.symm_symm, homEquiv_symm_apply,\n    Equiv.trans_apply, Equiv.symm_apply_apply, homEquiv_isoOfHom_inv]\n\n"}
{"name":"CategoryTheory.Localization.SmallHom.equiv_comp","module":"Mathlib.CategoryTheory.Localization.SmallHom","initialProofState":"C : Type u₁\ninst✝⁵ : CategoryTheory.Category.{v₁, u₁} C\nW : CategoryTheory.MorphismProperty C\nD : Type u₂\ninst✝⁴ : CategoryTheory.Category.{v₂, u₂} D\nL : CategoryTheory.Functor C D\ninst✝³ : L.IsLocalization W\nX Y Z : C\ninst✝² : CategoryTheory.Localization.HasSmallLocalizedHom W X Y\ninst✝¹ : CategoryTheory.Localization.HasSmallLocalizedHom W Y Z\ninst✝ : CategoryTheory.Localization.HasSmallLocalizedHom W X Z\nα : CategoryTheory.Localization.SmallHom W X Y\nβ : CategoryTheory.Localization.SmallHom W Y Z\n⊢ Eq ((CategoryTheory.Localization.SmallHom.equiv W L) (α.comp β)) (CategoryTheory.CategoryStruct.comp ((CategoryTheory.Localization.SmallHom.equiv W L) α) ((CategoryTheory.Localization.SmallHom.equiv W L) β))","decl":"lemma equiv_comp (L : C ⥤ D) [L.IsLocalization W] {X Y Z : C} [HasSmallLocalizedHom.{w} W X Y]\n    [HasSmallLocalizedHom.{w} W Y Z] [HasSmallLocalizedHom.{w} W X Z]\n    (α : SmallHom.{w} W X Y) (β : SmallHom.{w} W Y Z) :\n    equiv W L (α.comp β) = equiv W L α ≫ equiv W L β := by\n  letI := small_of_hasSmallLocalizedHom.{w} W W.Q X Y\n  letI := small_of_hasSmallLocalizedHom.{w} W W.Q Y Z\n  obtain ⟨α, rfl⟩ := (equivShrink _).surjective α\n  obtain ⟨β, rfl⟩ := (equivShrink _).surjective β\n  dsimp [equiv, comp]\n  rw [Equiv.symm_apply_apply]\n  erw [(equivShrink _).symm_apply_apply, (equivShrink _).symm_apply_apply]\n  simp only [homEquiv_refl, homEquiv_comp]\n\n"}
{"name":"CategoryTheory.Localization.SmallHom.mk_comp_mk","module":"Mathlib.CategoryTheory.Localization.SmallHom","initialProofState":"C : Type u₁\ninst✝³ : CategoryTheory.Category.{v₁, u₁} C\nW : CategoryTheory.MorphismProperty C\nX Y Z : C\ninst✝² : CategoryTheory.Localization.HasSmallLocalizedHom W X Y\ninst✝¹ : CategoryTheory.Localization.HasSmallLocalizedHom W Y Z\ninst✝ : CategoryTheory.Localization.HasSmallLocalizedHom W X Z\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\n⊢ Eq ((CategoryTheory.Localization.SmallHom.mk W f).comp (CategoryTheory.Localization.SmallHom.mk W g)) (CategoryTheory.Localization.SmallHom.mk W (CategoryTheory.CategoryStruct.comp f g))","decl":"lemma mk_comp_mk [HasSmallLocalizedHom.{w} W X Y] [HasSmallLocalizedHom.{w} W Y Z]\n    [HasSmallLocalizedHom.{w} W X Z] (f : X ⟶ Y) (g : Y ⟶ Z) :\n    (mk W f).comp (mk W g) = mk W (f ≫ g) :=\n  (equiv W W.Q).injective (by simp [equiv_comp])\n\n"}
{"name":"CategoryTheory.Localization.SmallHom.comp_mk_id","module":"Mathlib.CategoryTheory.Localization.SmallHom","initialProofState":"C : Type u₁\ninst✝² : CategoryTheory.Category.{v₁, u₁} C\nW : CategoryTheory.MorphismProperty C\nX Y : C\ninst✝¹ : CategoryTheory.Localization.HasSmallLocalizedHom W X Y\ninst✝ : CategoryTheory.Localization.HasSmallLocalizedHom W Y Y\nα : CategoryTheory.Localization.SmallHom W X Y\n⊢ Eq (α.comp (CategoryTheory.Localization.SmallHom.mk W (CategoryTheory.CategoryStruct.id Y))) α","decl":"@[simp]\nlemma comp_mk_id [HasSmallLocalizedHom.{w} W X Y] [HasSmallLocalizedHom.{w} W Y Y]\n    (α : SmallHom.{w} W X Y)  :\n    α.comp (mk W (𝟙 Y)) = α :=\n  (equiv W W.Q).injective (by simp [equiv_comp])\n\n"}
{"name":"CategoryTheory.Localization.SmallHom.mk_id_comp","module":"Mathlib.CategoryTheory.Localization.SmallHom","initialProofState":"C : Type u₁\ninst✝² : CategoryTheory.Category.{v₁, u₁} C\nW : CategoryTheory.MorphismProperty C\nX Y : C\ninst✝¹ : CategoryTheory.Localization.HasSmallLocalizedHom W X Y\ninst✝ : CategoryTheory.Localization.HasSmallLocalizedHom W X X\nα : CategoryTheory.Localization.SmallHom W X Y\n⊢ Eq ((CategoryTheory.Localization.SmallHom.mk W (CategoryTheory.CategoryStruct.id X)).comp α) α","decl":"@[simp]\nlemma mk_id_comp [HasSmallLocalizedHom.{w} W X Y] [HasSmallLocalizedHom.{w} W X X]\n    (α : SmallHom.{w} W X Y) :\n    (mk W (𝟙 X)).comp α = α :=\n  (equiv W W.Q).injective (by simp [equiv_comp])\n\n"}
{"name":"CategoryTheory.Localization.SmallHom.comp_assoc","module":"Mathlib.CategoryTheory.Localization.SmallHom","initialProofState":"C : Type u₁\ninst✝⁶ : CategoryTheory.Category.{v₁, u₁} C\nW : CategoryTheory.MorphismProperty C\nX Y Z T : C\ninst✝⁵ : CategoryTheory.Localization.HasSmallLocalizedHom W X Y\ninst✝⁴ : CategoryTheory.Localization.HasSmallLocalizedHom W X Z\ninst✝³ : CategoryTheory.Localization.HasSmallLocalizedHom W X T\ninst✝² : CategoryTheory.Localization.HasSmallLocalizedHom W Y Z\ninst✝¹ : CategoryTheory.Localization.HasSmallLocalizedHom W Y T\ninst✝ : CategoryTheory.Localization.HasSmallLocalizedHom W Z T\nα : CategoryTheory.Localization.SmallHom W X Y\nβ : CategoryTheory.Localization.SmallHom W Y Z\nγ : CategoryTheory.Localization.SmallHom W Z T\n⊢ Eq ((α.comp β).comp γ) (α.comp (β.comp γ))","decl":"@[simp]\nlemma comp_assoc [HasSmallLocalizedHom.{w} W X Y] [HasSmallLocalizedHom.{w} W X Z]\n    [HasSmallLocalizedHom.{w} W X T] [HasSmallLocalizedHom.{w} W Y Z]\n    [HasSmallLocalizedHom.{w} W Y T] [HasSmallLocalizedHom.{w} W Z T]\n    (α : SmallHom.{w} W X Y) (β : SmallHom.{w} W Y Z) (γ : SmallHom.{w} W Z T) :\n    (α.comp β).comp γ = α.comp (β.comp γ) := by\n  apply (equiv W W.Q).injective\n  simp only [equiv_comp, assoc]\n\n"}
{"name":"CategoryTheory.Localization.SmallHom.mk_comp_mkInv","module":"Mathlib.CategoryTheory.Localization.SmallHom","initialProofState":"C : Type u₁\ninst✝³ : CategoryTheory.Category.{v₁, u₁} C\nW : CategoryTheory.MorphismProperty C\nX Y : C\ninst✝² : CategoryTheory.Localization.HasSmallLocalizedHom W X Y\ninst✝¹ : CategoryTheory.Localization.HasSmallLocalizedHom W Y X\ninst✝ : CategoryTheory.Localization.HasSmallLocalizedHom W Y Y\nf : Quiver.Hom Y X\nhf : W f\n⊢ Eq ((CategoryTheory.Localization.SmallHom.mk W f).comp (CategoryTheory.Localization.SmallHom.mkInv f hf)) (CategoryTheory.Localization.SmallHom.mk W (CategoryTheory.CategoryStruct.id Y))","decl":"@[simp]\nlemma mk_comp_mkInv [HasSmallLocalizedHom.{w} W X Y] [HasSmallLocalizedHom.{w} W Y X]\n    [HasSmallLocalizedHom.{w} W Y Y] (f : Y ⟶ X) (hf : W f) :\n    (mk W f).comp (mkInv f hf) = mk W (𝟙 Y) :=\n  (equiv W W.Q).injective (by simp [equiv_comp])\n\n"}
{"name":"CategoryTheory.Localization.SmallHom.mkInv_comp_mk","module":"Mathlib.CategoryTheory.Localization.SmallHom","initialProofState":"C : Type u₁\ninst✝³ : CategoryTheory.Category.{v₁, u₁} C\nW : CategoryTheory.MorphismProperty C\nX Y : C\ninst✝² : CategoryTheory.Localization.HasSmallLocalizedHom W X X\ninst✝¹ : CategoryTheory.Localization.HasSmallLocalizedHom W X Y\ninst✝ : CategoryTheory.Localization.HasSmallLocalizedHom W Y X\nf : Quiver.Hom Y X\nhf : W f\n⊢ Eq ((CategoryTheory.Localization.SmallHom.mkInv f hf).comp (CategoryTheory.Localization.SmallHom.mk W f)) (CategoryTheory.Localization.SmallHom.mk W (CategoryTheory.CategoryStruct.id X))","decl":"@[simp]\nlemma mkInv_comp_mk [HasSmallLocalizedHom.{w} W X X] [HasSmallLocalizedHom.{w} W X Y]\n    [HasSmallLocalizedHom.{w} W Y X] (f : Y ⟶ X) (hf : W f) :\n    (mkInv f hf).comp (mk W f) = mk W (𝟙 X) :=\n  (equiv W W.Q).injective (by simp [equiv_comp])\n\n"}
{"name":"CategoryTheory.Localization.SmallHom.equiv_chgUniv","module":"Mathlib.CategoryTheory.Localization.SmallHom","initialProofState":"C : Type u₁\ninst✝⁴ : CategoryTheory.Category.{v₁, u₁} C\nW : CategoryTheory.MorphismProperty C\nD : Type u₂\ninst✝³ : CategoryTheory.Category.{v₂, u₂} D\nL : CategoryTheory.Functor C D\ninst✝² : L.IsLocalization W\nX Y : C\ninst✝¹ : CategoryTheory.Localization.HasSmallLocalizedHom W X Y\ninst✝ : CategoryTheory.Localization.HasSmallLocalizedHom W X Y\ne : CategoryTheory.Localization.SmallHom W X Y\n⊢ Eq ((CategoryTheory.Localization.SmallHom.equiv W L) (CategoryTheory.Localization.SmallHom.chgUniv e)) ((CategoryTheory.Localization.SmallHom.equiv W L) e)","decl":"lemma equiv_chgUniv (L : C ⥤ D) [L.IsLocalization W] {X Y : C}\n    [HasSmallLocalizedHom.{w} W X Y] [HasSmallLocalizedHom.{w''} W X Y]\n    (e : SmallHom.{w} W X Y) :\n    equiv W L (chgUniv.{w''} e) = equiv W L e := by\n  obtain ⟨f, rfl⟩ := (equiv W W.Q).symm.surjective e\n  dsimp [chgUniv]\n  simp only [Equiv.apply_symm_apply,\n    equiv_equiv_symm W _ _ _ (Localization.compUniqFunctor W.Q L W)]\n\n"}
{"name":"CategoryTheory.LocalizerMorphism.equiv_smallHomMap","module":"Mathlib.CategoryTheory.Localization.SmallHom","initialProofState":"C₁ : Type u₁\ninst✝⁷ : CategoryTheory.Category.{v₁, u₁} C₁\nW₁ : CategoryTheory.MorphismProperty C₁\nC₂ : Type u₂\ninst✝⁶ : CategoryTheory.Category.{v₂, u₂} C₂\nW₂ : CategoryTheory.MorphismProperty C₂\nD₁ : Type u₃\ninst✝⁵ : CategoryTheory.Category.{v₃, u₃} D₁\nD₂ : Type u₄\ninst✝⁴ : CategoryTheory.Category.{v₄, u₄} D₂\nΦ : CategoryTheory.LocalizerMorphism W₁ W₂\nL₁ : CategoryTheory.Functor C₁ D₁\ninst✝³ : L₁.IsLocalization W₁\nL₂ : CategoryTheory.Functor C₂ D₂\ninst✝² : L₂.IsLocalization W₂\nX Y : C₁\ninst✝¹ : CategoryTheory.Localization.HasSmallLocalizedHom W₁ X Y\ninst✝ : CategoryTheory.Localization.HasSmallLocalizedHom W₂ (Φ.functor.obj X) (Φ.functor.obj Y)\nG : CategoryTheory.Functor D₁ D₂\ne : CategoryTheory.Iso (Φ.functor.comp L₂) (L₁.comp G)\nf : CategoryTheory.Localization.SmallHom W₁ X Y\n⊢ Eq ((CategoryTheory.Localization.SmallHom.equiv W₂ L₂) (Φ.smallHomMap f)) (CategoryTheory.CategoryStruct.comp (e.hom.app X) (CategoryTheory.CategoryStruct.comp (G.map ((CategoryTheory.Localization.SmallHom.equiv W₁ L₁) f)) (e.inv.app Y)))","decl":"lemma equiv_smallHomMap (G : D₁ ⥤ D₂) (e : Φ.functor ⋙ L₂ ≅ L₁ ⋙ G)\n    (f : SmallHom.{w} W₁ X Y) :\n    (SmallHom.equiv W₂ L₂) (Φ.smallHomMap f) =\n      e.hom.app X ≫ G.map (SmallHom.equiv W₁ L₁ f) ≫ e.inv.app Y := by\n  obtain ⟨g, rfl⟩ := (SmallHom.equiv W₁ W₁.Q).symm.surjective f\n  simp only [smallHomMap, Equiv.apply_symm_apply]\n  let G' := Φ.localizedFunctor W₁.Q W₂.Q\n  let β := CatCommSq.iso Φ.functor W₁.Q W₂.Q G'\n  let E₁ := (uniq W₁.Q L₁ W₁).functor\n  let α₁ : W₁.Q ⋙ E₁ ≅ L₁ := compUniqFunctor W₁.Q L₁ W₁\n  let E₂ := (uniq W₂.Q L₂ W₂).functor\n  let α₂ : W₂.Q ⋙ E₂ ≅ L₂ := compUniqFunctor W₂.Q L₂ W₂\n  rw [SmallHom.equiv_equiv_symm W₁ W₁.Q L₁ E₁ α₁,\n    SmallHom.equiv_equiv_symm W₂ W₂.Q L₂ E₂ α₂]\n  change α₂.inv.app _ ≫ E₂.map (β.hom.app X ≫ G'.map g ≫ β.inv.app Y) ≫ _ = _\n  let γ : G' ⋙ E₂ ≅ E₁ ⋙ G := liftNatIso W₁.Q W₁ (W₁.Q ⋙ G' ⋙ E₂) (W₁.Q ⋙ E₁ ⋙ G) _ _\n    ((Functor.associator _ _ _).symm ≪≫ isoWhiskerRight β.symm E₂ ≪≫\n      Functor.associator _ _ _ ≪≫ isoWhiskerLeft _ α₂ ≪≫ e ≪≫\n      isoWhiskerRight α₁.symm G ≪≫ Functor.associator _ _ _)\n  have hγ : ∀ (X : C₁), γ.hom.app (W₁.Q.obj X) =\n      E₂.map (β.inv.app X) ≫ α₂.hom.app (Φ.functor.obj X) ≫\n        e.hom.app X ≫ G.map (α₁.inv.app X) := fun X ↦ by\n    simp [γ, id_comp, comp_id]\n  simp only [Functor.map_comp, assoc]\n  erw [← NatIso.naturality_1 γ]\n  simp only [Functor.comp_map, ← cancel_epi (e.inv.app X), ← cancel_epi (G.map (α₁.hom.app X)),\n    ← cancel_epi (γ.hom.app (W₁.Q.obj X)), assoc, Iso.inv_hom_id_app_assoc,\n    ← Functor.map_comp_assoc, Iso.hom_inv_id_app, Functor.map_id, id_comp,\n    Iso.hom_inv_id_app_assoc]\n  simp only [hγ, assoc, ← Functor.map_comp_assoc, Iso.inv_hom_id_app,\n    Functor.map_id, id_comp, Iso.hom_inv_id_app_assoc,\n    Iso.inv_hom_id_app_assoc, Iso.hom_inv_id_app, Functor.comp_obj, comp_id]\n\n"}
{"name":"CategoryTheory.LocalizerMorphism.smallHomMap_comp","module":"Mathlib.CategoryTheory.Localization.SmallHom","initialProofState":"C₁ : Type u₁\ninst✝⁷ : CategoryTheory.Category.{v₁, u₁} C₁\nW₁ : CategoryTheory.MorphismProperty C₁\nC₂ : Type u₂\ninst✝⁶ : CategoryTheory.Category.{v₂, u₂} C₂\nW₂ : CategoryTheory.MorphismProperty C₂\nΦ : CategoryTheory.LocalizerMorphism W₁ W₂\nX Y Z : C₁\ninst✝⁵ : CategoryTheory.Localization.HasSmallLocalizedHom W₁ X Y\ninst✝⁴ : CategoryTheory.Localization.HasSmallLocalizedHom W₁ Y Z\ninst✝³ : CategoryTheory.Localization.HasSmallLocalizedHom W₁ X Z\ninst✝² : CategoryTheory.Localization.HasSmallLocalizedHom W₂ (Φ.functor.obj X) (Φ.functor.obj Y)\ninst✝¹ : CategoryTheory.Localization.HasSmallLocalizedHom W₂ (Φ.functor.obj Y) (Φ.functor.obj Z)\ninst✝ : CategoryTheory.Localization.HasSmallLocalizedHom W₂ (Φ.functor.obj X) (Φ.functor.obj Z)\nf : CategoryTheory.Localization.SmallHom W₁ X Y\ng : CategoryTheory.Localization.SmallHom W₁ Y Z\n⊢ Eq (Φ.smallHomMap (f.comp g)) ((Φ.smallHomMap f).comp (Φ.smallHomMap g))","decl":"lemma smallHomMap_comp (f : SmallHom.{w} W₁ X Y) (g : SmallHom.{w} W₁ Y Z) :\n    Φ.smallHomMap (f.comp g) = (Φ.smallHomMap f).comp (Φ.smallHomMap g) := by\n  apply (SmallHom.equiv W₂ W₂.Q).injective\n  simp [Φ.equiv_smallHomMap W₁.Q W₂.Q (Φ.localizedFunctor W₁.Q W₂.Q) (CatCommSq.iso _ _ _ _),\n    SmallHom.equiv_comp]\n\n"}
