{"name":"NeZero.one","module":"Mathlib.Algebra.GroupWithZero.NeZero","initialProofState":"M₀ : Type u_1\ninst✝ : MulZeroOneClass M₀\n⊢ NeZero 1","decl":"/-- In a nontrivial monoid with zero, zero and one are different. -/\ninstance NeZero.one : NeZero (1 : M₀) := ⟨by\n  intro h\n  rcases exists_pair_ne M₀ with ⟨x, y, hx⟩\n  apply hx\n  calc\n    x = 1 * x := by rw [one_mul]\n    _ = 0 := by rw [h, zero_mul]\n    _ = 1 * y := by rw [h, zero_mul]\n    _ = y := by rw [one_mul]⟩\n\n"}
{"name":"domain_nontrivial","module":"Mathlib.Algebra.GroupWithZero.NeZero","initialProofState":"M₀ : Type u_1\nM₀' : Type u_2\ninst✝³ : MulZeroOneClass M₀\ninst✝² : Nontrivial M₀\ninst✝¹ : Zero M₀'\ninst✝ : One M₀'\nf : M₀' → M₀\nzero : Eq (f 0) 0\none : Eq (f 1) 1\n⊢ Nontrivial M₀'","decl":"/-- Pullback a `Nontrivial` instance along a function sending `0` to `0` and `1` to `1`. -/\ntheorem domain_nontrivial [Zero M₀'] [One M₀'] (f : M₀' → M₀) (zero : f 0 = 0) (one : f 1 = 1) :\n    Nontrivial M₀' :=\n  ⟨⟨0, 1, mt (congr_arg f) <| by\n    rw [zero, one]\n    exact zero_ne_one⟩⟩\n\n"}
{"name":"pullback_nonzero","module":"Mathlib.Algebra.GroupWithZero.NeZero","initialProofState":"M₀ : Type u_1\nM₀' : Type u_2\ninst✝³ : MulZeroOneClass M₀\ninst✝² : Nontrivial M₀\ninst✝¹ : Zero M₀'\ninst✝ : One M₀'\nf : M₀' → M₀\nzero : Eq (f 0) 0\none : Eq (f 1) 1\n⊢ Nontrivial M₀'","decl":"@[deprecated (since := \"2024-12-07\")] alias pullback_nonzero := domain_nontrivial\n\n"}
{"name":"inv_ne_zero","module":"Mathlib.Algebra.GroupWithZero.NeZero","initialProofState":"G₀ : Type u_3\ninst✝ : GroupWithZero G₀\na : G₀\nh : Ne a 0\n⊢ Ne (Inv.inv a) 0","decl":"theorem inv_ne_zero (h : a ≠ 0) : a⁻¹ ≠ 0 := fun a_eq_0 => by\n  have := mul_inv_cancel₀ h\n  simp only [a_eq_0, mul_zero, zero_ne_one] at this\n\n"}
{"name":"inv_mul_cancel₀","module":"Mathlib.Algebra.GroupWithZero.NeZero","initialProofState":"G₀ : Type u_3\ninst✝ : GroupWithZero G₀\na : G₀\nh : Ne a 0\n⊢ Eq (HMul.hMul (Inv.inv a) a) 1","decl":"@[simp]\ntheorem inv_mul_cancel₀ (h : a ≠ 0) : a⁻¹ * a = 1 :=\n  calc\n    a⁻¹ * a = a⁻¹ * a * a⁻¹ * a⁻¹⁻¹ := by simp [inv_ne_zero h]\n    _ = a⁻¹ * a⁻¹⁻¹ := by simp [h]\n    _ = 1 := by simp [inv_ne_zero h]\n\n"}
