{"name":"ConvexOn.dual","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConvexOn 𝕜 s f\n⊢ ConcaveOn 𝕜 s (Function.comp (⇑OrderDual.toDual) f)","decl":"theorem ConvexOn.dual (hf : ConvexOn 𝕜 s f) : ConcaveOn 𝕜 s (toDual ∘ f) := hf\n\n"}
{"name":"ConcaveOn.dual","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConcaveOn 𝕜 s f\n⊢ ConvexOn 𝕜 s (Function.comp (⇑OrderDual.toDual) f)","decl":"theorem ConcaveOn.dual (hf : ConcaveOn 𝕜 s f) : ConvexOn 𝕜 s (toDual ∘ f) := hf\n\n"}
{"name":"StrictConvexOn.dual","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\nhf : StrictConvexOn 𝕜 s f\n⊢ StrictConcaveOn 𝕜 s (Function.comp (⇑OrderDual.toDual) f)","decl":"theorem StrictConvexOn.dual (hf : StrictConvexOn 𝕜 s f) : StrictConcaveOn 𝕜 s (toDual ∘ f) := hf\n\n"}
{"name":"StrictConcaveOn.dual","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\nhf : StrictConcaveOn 𝕜 s f\n⊢ StrictConvexOn 𝕜 s (Function.comp (⇑OrderDual.toDual) f)","decl":"theorem StrictConcaveOn.dual (hf : StrictConcaveOn 𝕜 s f) : StrictConvexOn 𝕜 s (toDual ∘ f) := hf\n\n"}
{"name":"convexOn_id","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nβ : Type u_5\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : OrderedAddCommMonoid β\ninst✝ : SMul 𝕜 β\ns : Set β\nhs : Convex 𝕜 s\n⊢ ConvexOn 𝕜 s id","decl":"theorem convexOn_id {s : Set β} (hs : Convex 𝕜 s) : ConvexOn 𝕜 s _root_.id :=\n  ⟨hs, by\n    intros\n    rfl⟩\n\n"}
{"name":"concaveOn_id","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nβ : Type u_5\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : OrderedAddCommMonoid β\ninst✝ : SMul 𝕜 β\ns : Set β\nhs : Convex 𝕜 s\n⊢ ConcaveOn 𝕜 s id","decl":"theorem concaveOn_id {s : Set β} (hs : Convex 𝕜 s) : ConcaveOn 𝕜 s _root_.id :=\n  ⟨hs, by\n    intros\n    rfl⟩\n\n"}
{"name":"ConvexOn.congr","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : SMul 𝕜 β\ns : Set E\nf g : E → β\nhf : ConvexOn 𝕜 s f\nhfg : Set.EqOn f g s\n⊢ ConvexOn 𝕜 s g","decl":"theorem ConvexOn.congr (hf : ConvexOn 𝕜 s f) (hfg : EqOn f g s) : ConvexOn 𝕜 s g :=\n  ⟨hf.1, fun x hx y hy a b ha hb hab => by\n    simpa only [← hfg hx, ← hfg hy, ← hfg (hf.1 hx hy ha hb hab)] using hf.2 hx hy ha hb hab⟩\n\n"}
{"name":"ConcaveOn.congr","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : SMul 𝕜 β\ns : Set E\nf g : E → β\nhf : ConcaveOn 𝕜 s f\nhfg : Set.EqOn f g s\n⊢ ConcaveOn 𝕜 s g","decl":"theorem ConcaveOn.congr (hf : ConcaveOn 𝕜 s f) (hfg : EqOn f g s) : ConcaveOn 𝕜 s g :=\n  ⟨hf.1, fun x hx y hy a b ha hb hab => by\n    simpa only [← hfg hx, ← hfg hy, ← hfg (hf.1 hx hy ha hb hab)] using hf.2 hx hy ha hb hab⟩\n\n"}
{"name":"StrictConvexOn.congr","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : SMul 𝕜 β\ns : Set E\nf g : E → β\nhf : StrictConvexOn 𝕜 s f\nhfg : Set.EqOn f g s\n⊢ StrictConvexOn 𝕜 s g","decl":"theorem StrictConvexOn.congr (hf : StrictConvexOn 𝕜 s f) (hfg : EqOn f g s) :\n    StrictConvexOn 𝕜 s g :=\n  ⟨hf.1, fun x hx y hy hxy a b ha hb hab => by\n    simpa only [← hfg hx, ← hfg hy, ← hfg (hf.1 hx hy ha.le hb.le hab)] using\n      hf.2 hx hy hxy ha hb hab⟩\n\n"}
{"name":"StrictConcaveOn.congr","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : SMul 𝕜 β\ns : Set E\nf g : E → β\nhf : StrictConcaveOn 𝕜 s f\nhfg : Set.EqOn f g s\n⊢ StrictConcaveOn 𝕜 s g","decl":"theorem StrictConcaveOn.congr (hf : StrictConcaveOn 𝕜 s f) (hfg : EqOn f g s) :\n    StrictConcaveOn 𝕜 s g :=\n  ⟨hf.1, fun x hx y hy hxy a b ha hb hab => by\n    simpa only [← hfg hx, ← hfg hy, ← hfg (hf.1 hx hy ha.le hb.le hab)] using\n      hf.2 hx hy hxy ha hb hab⟩\n\n"}
{"name":"ConvexOn.subset","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\nt : Set E\nhf : ConvexOn 𝕜 t f\nhst : HasSubset.Subset s t\nhs : Convex 𝕜 s\n⊢ ConvexOn 𝕜 s f","decl":"theorem ConvexOn.subset {t : Set E} (hf : ConvexOn 𝕜 t f) (hst : s ⊆ t) (hs : Convex 𝕜 s) :\n    ConvexOn 𝕜 s f :=\n  ⟨hs, fun _ hx _ hy => hf.2 (hst hx) (hst hy)⟩\n\n"}
{"name":"ConcaveOn.subset","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\nt : Set E\nhf : ConcaveOn 𝕜 t f\nhst : HasSubset.Subset s t\nhs : Convex 𝕜 s\n⊢ ConcaveOn 𝕜 s f","decl":"theorem ConcaveOn.subset {t : Set E} (hf : ConcaveOn 𝕜 t f) (hst : s ⊆ t) (hs : Convex 𝕜 s) :\n    ConcaveOn 𝕜 s f :=\n  ⟨hs, fun _ hx _ hy => hf.2 (hst hx) (hst hy)⟩\n\n"}
{"name":"StrictConvexOn.subset","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\nt : Set E\nhf : StrictConvexOn 𝕜 t f\nhst : HasSubset.Subset s t\nhs : Convex 𝕜 s\n⊢ StrictConvexOn 𝕜 s f","decl":"theorem StrictConvexOn.subset {t : Set E} (hf : StrictConvexOn 𝕜 t f) (hst : s ⊆ t)\n    (hs : Convex 𝕜 s) : StrictConvexOn 𝕜 s f :=\n  ⟨hs, fun _ hx _ hy => hf.2 (hst hx) (hst hy)⟩\n\n"}
{"name":"StrictConcaveOn.subset","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\nt : Set E\nhf : StrictConcaveOn 𝕜 t f\nhst : HasSubset.Subset s t\nhs : Convex 𝕜 s\n⊢ StrictConcaveOn 𝕜 s f","decl":"theorem StrictConcaveOn.subset {t : Set E} (hf : StrictConcaveOn 𝕜 t f) (hst : s ⊆ t)\n    (hs : Convex 𝕜 s) : StrictConcaveOn 𝕜 s f :=\n  ⟨hs, fun _ hx _ hy => hf.2 (hst hx) (hst hy)⟩\n\n"}
{"name":"ConvexOn.comp","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nα : Type u_4\nβ : Type u_5\ninst✝⁶ : OrderedSemiring 𝕜\ninst✝⁵ : AddCommMonoid E\ninst✝⁴ : OrderedAddCommMonoid α\ninst✝³ : OrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul 𝕜 α\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\ng : β → α\nhg : ConvexOn 𝕜 (Set.image f s) g\nhf : ConvexOn 𝕜 s f\nhg' : MonotoneOn g (Set.image f s)\n⊢ ConvexOn 𝕜 s (Function.comp g f)","decl":"theorem ConvexOn.comp (hg : ConvexOn 𝕜 (f '' s) g) (hf : ConvexOn 𝕜 s f)\n    (hg' : MonotoneOn g (f '' s)) : ConvexOn 𝕜 s (g ∘ f) :=\n  ⟨hf.1, fun _ hx _ hy _ _ ha hb hab =>\n    (hg' (mem_image_of_mem f <| hf.1 hx hy ha hb hab)\n            (hg.1 (mem_image_of_mem f hx) (mem_image_of_mem f hy) ha hb hab) <|\n          hf.2 hx hy ha hb hab).trans <|\n      hg.2 (mem_image_of_mem f hx) (mem_image_of_mem f hy) ha hb hab⟩\n\n"}
{"name":"ConcaveOn.comp","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nα : Type u_4\nβ : Type u_5\ninst✝⁶ : OrderedSemiring 𝕜\ninst✝⁵ : AddCommMonoid E\ninst✝⁴ : OrderedAddCommMonoid α\ninst✝³ : OrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul 𝕜 α\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\ng : β → α\nhg : ConcaveOn 𝕜 (Set.image f s) g\nhf : ConcaveOn 𝕜 s f\nhg' : MonotoneOn g (Set.image f s)\n⊢ ConcaveOn 𝕜 s (Function.comp g f)","decl":"theorem ConcaveOn.comp (hg : ConcaveOn 𝕜 (f '' s) g) (hf : ConcaveOn 𝕜 s f)\n    (hg' : MonotoneOn g (f '' s)) : ConcaveOn 𝕜 s (g ∘ f) :=\n  ⟨hf.1, fun _ hx _ hy _ _ ha hb hab =>\n    (hg.2 (mem_image_of_mem f hx) (mem_image_of_mem f hy) ha hb hab).trans <|\n      hg' (hg.1 (mem_image_of_mem f hx) (mem_image_of_mem f hy) ha hb hab)\n          (mem_image_of_mem f <| hf.1 hx hy ha hb hab) <|\n        hf.2 hx hy ha hb hab⟩\n\n"}
{"name":"ConvexOn.comp_concaveOn","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nα : Type u_4\nβ : Type u_5\ninst✝⁶ : OrderedSemiring 𝕜\ninst✝⁵ : AddCommMonoid E\ninst✝⁴ : OrderedAddCommMonoid α\ninst✝³ : OrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul 𝕜 α\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\ng : β → α\nhg : ConvexOn 𝕜 (Set.image f s) g\nhf : ConcaveOn 𝕜 s f\nhg' : AntitoneOn g (Set.image f s)\n⊢ ConvexOn 𝕜 s (Function.comp g f)","decl":"theorem ConvexOn.comp_concaveOn (hg : ConvexOn 𝕜 (f '' s) g) (hf : ConcaveOn 𝕜 s f)\n    (hg' : AntitoneOn g (f '' s)) : ConvexOn 𝕜 s (g ∘ f) :=\n  hg.dual.comp hf hg'\n\n"}
{"name":"ConcaveOn.comp_convexOn","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nα : Type u_4\nβ : Type u_5\ninst✝⁶ : OrderedSemiring 𝕜\ninst✝⁵ : AddCommMonoid E\ninst✝⁴ : OrderedAddCommMonoid α\ninst✝³ : OrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul 𝕜 α\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\ng : β → α\nhg : ConcaveOn 𝕜 (Set.image f s) g\nhf : ConvexOn 𝕜 s f\nhg' : AntitoneOn g (Set.image f s)\n⊢ ConcaveOn 𝕜 s (Function.comp g f)","decl":"theorem ConcaveOn.comp_convexOn (hg : ConcaveOn 𝕜 (f '' s) g) (hf : ConvexOn 𝕜 s f)\n    (hg' : AntitoneOn g (f '' s)) : ConcaveOn 𝕜 s (g ∘ f) :=\n  hg.dual.comp hf hg'\n\n"}
{"name":"StrictConvexOn.comp","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nα : Type u_4\nβ : Type u_5\ninst✝⁶ : OrderedSemiring 𝕜\ninst✝⁵ : AddCommMonoid E\ninst✝⁴ : OrderedAddCommMonoid α\ninst✝³ : OrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul 𝕜 α\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\ng : β → α\nhg : StrictConvexOn 𝕜 (Set.image f s) g\nhf : StrictConvexOn 𝕜 s f\nhg' : StrictMonoOn g (Set.image f s)\nhf' : Set.InjOn f s\n⊢ StrictConvexOn 𝕜 s (Function.comp g f)","decl":"theorem StrictConvexOn.comp (hg : StrictConvexOn 𝕜 (f '' s) g) (hf : StrictConvexOn 𝕜 s f)\n    (hg' : StrictMonoOn g (f '' s)) (hf' : s.InjOn f) : StrictConvexOn 𝕜 s (g ∘ f) :=\n  ⟨hf.1, fun _ hx _ hy hxy _ _ ha hb hab =>\n    (hg' (mem_image_of_mem f <| hf.1 hx hy ha.le hb.le hab)\n            (hg.1 (mem_image_of_mem f hx) (mem_image_of_mem f hy) ha.le hb.le hab) <|\n          hf.2 hx hy hxy ha hb hab).trans <|\n      hg.2 (mem_image_of_mem f hx) (mem_image_of_mem f hy) (mt (hf' hx hy) hxy) ha hb hab⟩\n\n"}
{"name":"StrictConcaveOn.comp","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nα : Type u_4\nβ : Type u_5\ninst✝⁶ : OrderedSemiring 𝕜\ninst✝⁵ : AddCommMonoid E\ninst✝⁴ : OrderedAddCommMonoid α\ninst✝³ : OrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul 𝕜 α\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\ng : β → α\nhg : StrictConcaveOn 𝕜 (Set.image f s) g\nhf : StrictConcaveOn 𝕜 s f\nhg' : StrictMonoOn g (Set.image f s)\nhf' : Set.InjOn f s\n⊢ StrictConcaveOn 𝕜 s (Function.comp g f)","decl":"theorem StrictConcaveOn.comp (hg : StrictConcaveOn 𝕜 (f '' s) g) (hf : StrictConcaveOn 𝕜 s f)\n    (hg' : StrictMonoOn g (f '' s)) (hf' : s.InjOn f) : StrictConcaveOn 𝕜 s (g ∘ f) :=\n  ⟨hf.1, fun _ hx _ hy hxy _ _ ha hb hab =>\n    (hg.2 (mem_image_of_mem f hx) (mem_image_of_mem f hy) (mt (hf' hx hy) hxy) ha hb hab).trans <|\n      hg' (hg.1 (mem_image_of_mem f hx) (mem_image_of_mem f hy) ha.le hb.le hab)\n          (mem_image_of_mem f <| hf.1 hx hy ha.le hb.le hab) <|\n        hf.2 hx hy hxy ha hb hab⟩\n\n"}
{"name":"StrictConvexOn.comp_strictConcaveOn","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nα : Type u_4\nβ : Type u_5\ninst✝⁶ : OrderedSemiring 𝕜\ninst✝⁵ : AddCommMonoid E\ninst✝⁴ : OrderedAddCommMonoid α\ninst✝³ : OrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul 𝕜 α\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\ng : β → α\nhg : StrictConvexOn 𝕜 (Set.image f s) g\nhf : StrictConcaveOn 𝕜 s f\nhg' : StrictAntiOn g (Set.image f s)\nhf' : Set.InjOn f s\n⊢ StrictConvexOn 𝕜 s (Function.comp g f)","decl":"theorem StrictConvexOn.comp_strictConcaveOn (hg : StrictConvexOn 𝕜 (f '' s) g)\n    (hf : StrictConcaveOn 𝕜 s f) (hg' : StrictAntiOn g (f '' s)) (hf' : s.InjOn f) :\n    StrictConvexOn 𝕜 s (g ∘ f) :=\n  hg.dual.comp hf hg' hf'\n\n"}
{"name":"StrictConcaveOn.comp_strictConvexOn","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nα : Type u_4\nβ : Type u_5\ninst✝⁶ : OrderedSemiring 𝕜\ninst✝⁵ : AddCommMonoid E\ninst✝⁴ : OrderedAddCommMonoid α\ninst✝³ : OrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : SMul 𝕜 α\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\ng : β → α\nhg : StrictConcaveOn 𝕜 (Set.image f s) g\nhf : StrictConvexOn 𝕜 s f\nhg' : StrictAntiOn g (Set.image f s)\nhf' : Set.InjOn f s\n⊢ StrictConcaveOn 𝕜 s (Function.comp g f)","decl":"theorem StrictConcaveOn.comp_strictConvexOn (hg : StrictConcaveOn 𝕜 (f '' s) g)\n    (hf : StrictConvexOn 𝕜 s f) (hg' : StrictAntiOn g (f '' s)) (hf' : s.InjOn f) :\n    StrictConcaveOn 𝕜 s (g ∘ f) :=\n  hg.dual.comp hf hg' hf'\n\n"}
{"name":"ConvexOn.add","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : DistribMulAction 𝕜 β\ns : Set E\nf g : E → β\nhf : ConvexOn 𝕜 s f\nhg : ConvexOn 𝕜 s g\n⊢ ConvexOn 𝕜 s (HAdd.hAdd f g)","decl":"theorem ConvexOn.add (hf : ConvexOn 𝕜 s f) (hg : ConvexOn 𝕜 s g) : ConvexOn 𝕜 s (f + g) :=\n  ⟨hf.1, fun x hx y hy a b ha hb hab =>\n    calc\n      f (a • x + b • y) + g (a • x + b • y) ≤ a • f x + b • f y + (a • g x + b • g y) :=\n        add_le_add (hf.2 hx hy ha hb hab) (hg.2 hx hy ha hb hab)\n      _ = a • (f x + g x) + b • (f y + g y) := by rw [smul_add, smul_add, add_add_add_comm]\n      ⟩\n\n"}
{"name":"ConcaveOn.add","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : DistribMulAction 𝕜 β\ns : Set E\nf g : E → β\nhf : ConcaveOn 𝕜 s f\nhg : ConcaveOn 𝕜 s g\n⊢ ConcaveOn 𝕜 s (HAdd.hAdd f g)","decl":"theorem ConcaveOn.add (hf : ConcaveOn 𝕜 s f) (hg : ConcaveOn 𝕜 s g) : ConcaveOn 𝕜 s (f + g) :=\n  hf.dual.add hg\n\n"}
{"name":"convexOn_const","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nc : β\nhs : Convex 𝕜 s\n⊢ ConvexOn 𝕜 s fun x => c","decl":"theorem convexOn_const (c : β) (hs : Convex 𝕜 s) : ConvexOn 𝕜 s fun _ : E => c :=\n  ⟨hs, fun _ _ _ _ _ _ _ _ hab => (Convex.combo_self hab c).ge⟩\n\n"}
{"name":"concaveOn_const","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nc : β\nhs : Convex 𝕜 s\n⊢ ConcaveOn 𝕜 s fun x => c","decl":"theorem concaveOn_const (c : β) (hs : Convex 𝕜 s) : ConcaveOn 𝕜 s fun _ => c :=\n  convexOn_const (β := βᵒᵈ) _ hs\n\n"}
{"name":"ConvexOn.add_const","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf : E → β\nhf : ConvexOn 𝕜 s f\nb : β\n⊢ ConvexOn 𝕜 s (HAdd.hAdd f fun x => b)","decl":"theorem ConvexOn.add_const (hf : ConvexOn 𝕜 s f) (b : β) :\n    ConvexOn 𝕜 s (f + fun _ => b) :=\n  hf.add (convexOn_const _ hf.1)\n\n"}
{"name":"ConcaveOn.add_const","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf : E → β\nhf : ConcaveOn 𝕜 s f\nb : β\n⊢ ConcaveOn 𝕜 s (HAdd.hAdd f fun x => b)","decl":"theorem ConcaveOn.add_const (hf : ConcaveOn 𝕜 s f) (b : β) :\n    ConcaveOn 𝕜 s (f + fun _ => b) :=\n  hf.add (concaveOn_const _ hf.1)\n\n"}
{"name":"convexOn_of_convex_epigraph","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf : E → β\nh : Convex 𝕜 (setOf fun p => And (Membership.mem s p.1) (LE.le (f p.1) p.2))\n⊢ ConvexOn 𝕜 s f","decl":"theorem convexOn_of_convex_epigraph (h : Convex 𝕜 { p : E × β | p.1 ∈ s ∧ f p.1 ≤ p.2 }) :\n    ConvexOn 𝕜 s f :=\n  ⟨fun x hx y hy a b ha hb hab => (@h (x, f x) ⟨hx, le_rfl⟩ (y, f y) ⟨hy, le_rfl⟩ a b ha hb hab).1,\n    fun x hx y hy a b ha hb hab => (@h (x, f x) ⟨hx, le_rfl⟩ (y, f y) ⟨hy, le_rfl⟩ a b ha hb hab).2⟩\n\n"}
{"name":"concaveOn_of_convex_hypograph","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf : E → β\nh : Convex 𝕜 (setOf fun p => And (Membership.mem s p.1) (LE.le p.2 (f p.1)))\n⊢ ConcaveOn 𝕜 s f","decl":"theorem concaveOn_of_convex_hypograph (h : Convex 𝕜 { p : E × β | p.1 ∈ s ∧ p.2 ≤ f p.1 }) :\n    ConcaveOn 𝕜 s f :=\n  convexOn_of_convex_epigraph (β := βᵒᵈ) h\n\n"}
{"name":"ConvexOn.convex_le","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : OrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConvexOn 𝕜 s f\nr : β\n⊢ Convex 𝕜 (setOf fun x => And (Membership.mem s x) (LE.le (f x) r))","decl":"theorem ConvexOn.convex_le (hf : ConvexOn 𝕜 s f) (r : β) : Convex 𝕜 ({ x ∈ s | f x ≤ r }) :=\n  fun x hx y hy a b ha hb hab =>\n  ⟨hf.1 hx.1 hy.1 ha hb hab,\n    calc\n      f (a • x + b • y) ≤ a • f x + b • f y := hf.2 hx.1 hy.1 ha hb hab\n      _ ≤ a • r + b • r := by\n        gcongr\n        · exact hx.2\n        · exact hy.2\n      _ = r := Convex.combo_self hab r\n      ⟩\n\n"}
{"name":"ConcaveOn.convex_ge","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : OrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConcaveOn 𝕜 s f\nr : β\n⊢ Convex 𝕜 (setOf fun x => And (Membership.mem s x) (LE.le r (f x)))","decl":"theorem ConcaveOn.convex_ge (hf : ConcaveOn 𝕜 s f) (r : β) : Convex 𝕜 ({ x ∈ s | r ≤ f x }) :=\n  hf.dual.convex_le r\n\n"}
{"name":"ConvexOn.convex_epigraph","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : OrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConvexOn 𝕜 s f\n⊢ Convex 𝕜 (setOf fun p => And (Membership.mem s p.1) (LE.le (f p.1) p.2))","decl":"theorem ConvexOn.convex_epigraph (hf : ConvexOn 𝕜 s f) :\n    Convex 𝕜 { p : E × β | p.1 ∈ s ∧ f p.1 ≤ p.2 } := by\n  rintro ⟨x, r⟩ ⟨hx, hr⟩ ⟨y, t⟩ ⟨hy, ht⟩ a b ha hb hab\n  refine ⟨hf.1 hx hy ha hb hab, ?_⟩\n  calc\n    f (a • x + b • y) ≤ a • f x + b • f y := hf.2 hx hy ha hb hab\n    _ ≤ a • r + b • t := by gcongr\n\n"}
{"name":"ConcaveOn.convex_hypograph","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : OrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConcaveOn 𝕜 s f\n⊢ Convex 𝕜 (setOf fun p => And (Membership.mem s p.1) (LE.le p.2 (f p.1)))","decl":"theorem ConcaveOn.convex_hypograph (hf : ConcaveOn 𝕜 s f) :\n    Convex 𝕜 { p : E × β | p.1 ∈ s ∧ p.2 ≤ f p.1 } :=\n  hf.dual.convex_epigraph\n\n"}
{"name":"convexOn_iff_convex_epigraph","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : OrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\n⊢ Iff (ConvexOn 𝕜 s f) (Convex 𝕜 (setOf fun p => And (Membership.mem s p.1) (LE.le (f p.1) p.2)))","decl":"theorem convexOn_iff_convex_epigraph :\n    ConvexOn 𝕜 s f ↔ Convex 𝕜 { p : E × β | p.1 ∈ s ∧ f p.1 ≤ p.2 } :=\n  ⟨ConvexOn.convex_epigraph, convexOn_of_convex_epigraph⟩\n\n"}
{"name":"concaveOn_iff_convex_hypograph","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : OrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\n⊢ Iff (ConcaveOn 𝕜 s f) (Convex 𝕜 (setOf fun p => And (Membership.mem s p.1) (LE.le p.2 (f p.1))))","decl":"theorem concaveOn_iff_convex_hypograph :\n    ConcaveOn 𝕜 s f ↔ Convex 𝕜 { p : E × β | p.1 ∈ s ∧ p.2 ≤ f p.1 } :=\n  convexOn_iff_convex_epigraph (β := βᵒᵈ)\n\n"}
{"name":"ConvexOn.translate_right","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConvexOn 𝕜 s f\nc : E\n⊢ ConvexOn 𝕜 (Set.preimage (fun z => HAdd.hAdd c z) s) (Function.comp f fun z => HAdd.hAdd c z)","decl":"/-- Right translation preserves convexity. -/\ntheorem ConvexOn.translate_right (hf : ConvexOn 𝕜 s f) (c : E) :\n    ConvexOn 𝕜 ((fun z => c + z) ⁻¹' s) (f ∘ fun z => c + z) :=\n  ⟨hf.1.translate_preimage_right _, fun x hx y hy a b ha hb hab =>\n    calc\n      f (c + (a • x + b • y)) = f (a • (c + x) + b • (c + y)) := by\n        rw [smul_add, smul_add, add_add_add_comm, Convex.combo_self hab]\n      _ ≤ a • f (c + x) + b • f (c + y) := hf.2 hx hy ha hb hab\n      ⟩\n\n"}
{"name":"ConcaveOn.translate_right","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConcaveOn 𝕜 s f\nc : E\n⊢ ConcaveOn 𝕜 (Set.preimage (fun z => HAdd.hAdd c z) s) (Function.comp f fun z => HAdd.hAdd c z)","decl":"/-- Right translation preserves concavity. -/\ntheorem ConcaveOn.translate_right (hf : ConcaveOn 𝕜 s f) (c : E) :\n    ConcaveOn 𝕜 ((fun z => c + z) ⁻¹' s) (f ∘ fun z => c + z) :=\n  hf.dual.translate_right _\n\n"}
{"name":"ConvexOn.translate_left","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConvexOn 𝕜 s f\nc : E\n⊢ ConvexOn 𝕜 (Set.preimage (fun z => HAdd.hAdd c z) s) (Function.comp f fun z => HAdd.hAdd z c)","decl":"/-- Left translation preserves convexity. -/\ntheorem ConvexOn.translate_left (hf : ConvexOn 𝕜 s f) (c : E) :\n    ConvexOn 𝕜 ((fun z => c + z) ⁻¹' s) (f ∘ fun z => z + c) := by\n  simpa only [add_comm c] using hf.translate_right c\n\n"}
{"name":"ConcaveOn.translate_left","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConcaveOn 𝕜 s f\nc : E\n⊢ ConcaveOn 𝕜 (Set.preimage (fun z => HAdd.hAdd c z) s) (Function.comp f fun z => HAdd.hAdd z c)","decl":"/-- Left translation preserves concavity. -/\ntheorem ConcaveOn.translate_left (hf : ConcaveOn 𝕜 s f) (c : E) :\n    ConcaveOn 𝕜 ((fun z => c + z) ⁻¹' s) (f ∘ fun z => z + c) :=\n  hf.dual.translate_left _\n\n"}
{"name":"convexOn_iff_forall_pos","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf : E → β\n⊢ Iff (ConvexOn 𝕜 s f) (And (Convex 𝕜 s) (∀ ⦃x : E⦄, Membership.mem s x → ∀ ⦃y : E⦄, Membership.mem s y → ∀ ⦃a b : 𝕜⦄, LT.lt 0 a → LT.lt 0 b → Eq (HAdd.hAdd a b) 1 → LE.le (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y))) (HAdd.hAdd (HSMul.hSMul a (f x)) (HSMul.hSMul b (f y)))))","decl":"theorem convexOn_iff_forall_pos {s : Set E} {f : E → β} :\n    ConvexOn 𝕜 s f ↔ Convex 𝕜 s ∧ ∀ ⦃x⦄, x ∈ s → ∀ ⦃y⦄, y ∈ s → ∀ ⦃a b : 𝕜⦄, 0 < a → 0 < b →\n      a + b = 1 → f (a • x + b • y) ≤ a • f x + b • f y := by\n  refine and_congr_right'\n    ⟨fun h x hx y hy a b ha hb hab => h hx hy ha.le hb.le hab, fun h x hx y hy a b ha hb hab => ?_⟩\n  obtain rfl | ha' := ha.eq_or_lt\n  · rw [zero_add] at hab\n    subst b\n    simp_rw [zero_smul, zero_add, one_smul, le_rfl]\n  obtain rfl | hb' := hb.eq_or_lt\n  · rw [add_zero] at hab\n    subst a\n    simp_rw [zero_smul, add_zero, one_smul, le_rfl]\n  exact h hx hy ha' hb' hab\n\n"}
{"name":"concaveOn_iff_forall_pos","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf : E → β\n⊢ Iff (ConcaveOn 𝕜 s f) (And (Convex 𝕜 s) (∀ ⦃x : E⦄, Membership.mem s x → ∀ ⦃y : E⦄, Membership.mem s y → ∀ ⦃a b : 𝕜⦄, LT.lt 0 a → LT.lt 0 b → Eq (HAdd.hAdd a b) 1 → LE.le (HAdd.hAdd (HSMul.hSMul a (f x)) (HSMul.hSMul b (f y))) (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y)))))","decl":"theorem concaveOn_iff_forall_pos {s : Set E} {f : E → β} :\n    ConcaveOn 𝕜 s f ↔\n      Convex 𝕜 s ∧ ∀ ⦃x⦄, x ∈ s → ∀ ⦃y⦄, y ∈ s → ∀ ⦃a b : 𝕜⦄, 0 < a → 0 < b → a + b = 1 →\n        a • f x + b • f y ≤ f (a • x + b • y) :=\n  convexOn_iff_forall_pos (β := βᵒᵈ)\n\n"}
{"name":"convexOn_iff_pairwise_pos","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf : E → β\n⊢ Iff (ConvexOn 𝕜 s f) (And (Convex 𝕜 s) (s.Pairwise fun x y => ∀ ⦃a b : 𝕜⦄, LT.lt 0 a → LT.lt 0 b → Eq (HAdd.hAdd a b) 1 → LE.le (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y))) (HAdd.hAdd (HSMul.hSMul a (f x)) (HSMul.hSMul b (f y)))))","decl":"theorem convexOn_iff_pairwise_pos {s : Set E} {f : E → β} :\n    ConvexOn 𝕜 s f ↔\n      Convex 𝕜 s ∧\n        s.Pairwise fun x y =>\n          ∀ ⦃a b : 𝕜⦄, 0 < a → 0 < b → a + b = 1 → f (a • x + b • y) ≤ a • f x + b • f y := by\n  rw [convexOn_iff_forall_pos]\n  refine\n    and_congr_right'\n      ⟨fun h x hx y hy _ a b ha hb hab => h hx hy ha hb hab, fun h x hx y hy a b ha hb hab => ?_⟩\n  obtain rfl | hxy := eq_or_ne x y\n  · rw [Convex.combo_self hab, Convex.combo_self hab]\n  exact h hx hy hxy ha hb hab\n\n"}
{"name":"concaveOn_iff_pairwise_pos","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf : E → β\n⊢ Iff (ConcaveOn 𝕜 s f) (And (Convex 𝕜 s) (s.Pairwise fun x y => ∀ ⦃a b : 𝕜⦄, LT.lt 0 a → LT.lt 0 b → Eq (HAdd.hAdd a b) 1 → LE.le (HAdd.hAdd (HSMul.hSMul a (f x)) (HSMul.hSMul b (f y))) (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y)))))","decl":"theorem concaveOn_iff_pairwise_pos {s : Set E} {f : E → β} :\n    ConcaveOn 𝕜 s f ↔\n      Convex 𝕜 s ∧\n        s.Pairwise fun x y =>\n          ∀ ⦃a b : 𝕜⦄, 0 < a → 0 < b → a + b = 1 → a • f x + b • f y ≤ f (a • x + b • y) :=\n  convexOn_iff_pairwise_pos (β := βᵒᵈ)\n\n"}
{"name":"LinearMap.convexOn","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : Module 𝕜 β\nf : LinearMap (RingHom.id 𝕜) E β\ns : Set E\nhs : Convex 𝕜 s\n⊢ ConvexOn 𝕜 s ⇑f","decl":"/-- A linear map is convex. -/\ntheorem LinearMap.convexOn (f : E →ₗ[𝕜] β) {s : Set E} (hs : Convex 𝕜 s) : ConvexOn 𝕜 s f :=\n  ⟨hs, fun _ _ _ _ _ _ _ _ _ => by rw [f.map_add, f.map_smul, f.map_smul]⟩\n\n"}
{"name":"LinearMap.concaveOn","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : Module 𝕜 β\nf : LinearMap (RingHom.id 𝕜) E β\ns : Set E\nhs : Convex 𝕜 s\n⊢ ConcaveOn 𝕜 s ⇑f","decl":"/-- A linear map is concave. -/\ntheorem LinearMap.concaveOn (f : E →ₗ[𝕜] β) {s : Set E} (hs : Convex 𝕜 s) : ConcaveOn 𝕜 s f :=\n  ⟨hs, fun _ _ _ _ _ _ _ _ _ => by rw [f.map_add, f.map_smul, f.map_smul]⟩\n\n"}
{"name":"StrictConvexOn.convexOn","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf : E → β\nhf : StrictConvexOn 𝕜 s f\n⊢ ConvexOn 𝕜 s f","decl":"theorem StrictConvexOn.convexOn {s : Set E} {f : E → β} (hf : StrictConvexOn 𝕜 s f) :\n    ConvexOn 𝕜 s f :=\n  convexOn_iff_pairwise_pos.mpr\n    ⟨hf.1, fun _ hx _ hy hxy _ _ ha hb hab => (hf.2 hx hy hxy ha hb hab).le⟩\n\n"}
{"name":"StrictConcaveOn.concaveOn","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf : E → β\nhf : StrictConcaveOn 𝕜 s f\n⊢ ConcaveOn 𝕜 s f","decl":"theorem StrictConcaveOn.concaveOn {s : Set E} {f : E → β} (hf : StrictConcaveOn 𝕜 s f) :\n    ConcaveOn 𝕜 s f :=\n  hf.dual.convexOn\n\n"}
{"name":"StrictConvexOn.convex_lt","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : OrderedAddCommMonoid β\ninst✝² : Module 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : StrictConvexOn 𝕜 s f\nr : β\n⊢ Convex 𝕜 (setOf fun x => And (Membership.mem s x) (LT.lt (f x) r))","decl":"theorem StrictConvexOn.convex_lt (hf : StrictConvexOn 𝕜 s f) (r : β) :\n    Convex 𝕜 ({ x ∈ s | f x < r }) :=\n  convex_iff_pairwise_pos.2 fun x hx y hy hxy a b ha hb hab =>\n    ⟨hf.1 hx.1 hy.1 ha.le hb.le hab,\n      calc\n        f (a • x + b • y) < a • f x + b • f y := hf.2 hx.1 hy.1 hxy ha hb hab\n        _ ≤ a • r + b • r := by\n          gcongr\n          · exact hx.2.le\n          · exact hy.2.le\n        _ = r := Convex.combo_self hab r\n        ⟩\n\n"}
{"name":"StrictConcaveOn.convex_gt","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : OrderedAddCommMonoid β\ninst✝² : Module 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : StrictConcaveOn 𝕜 s f\nr : β\n⊢ Convex 𝕜 (setOf fun x => And (Membership.mem s x) (LT.lt r (f x)))","decl":"theorem StrictConcaveOn.convex_gt (hf : StrictConcaveOn 𝕜 s f) (r : β) :\n    Convex 𝕜 ({ x ∈ s | r < f x }) :=\n  hf.dual.convex_lt r\n\n"}
{"name":"LinearOrder.convexOn_of_lt","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : OrderedAddCommMonoid β\ninst✝² : Module 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : LinearOrder E\ns : Set E\nf : E → β\nhs : Convex 𝕜 s\nhf : ∀ ⦃x : E⦄, Membership.mem s x → ∀ ⦃y : E⦄, Membership.mem s y → LT.lt x y → ∀ ⦃a b : 𝕜⦄, LT.lt 0 a → LT.lt 0 b → Eq (HAdd.hAdd a b) 1 → LE.le (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y))) (HAdd.hAdd (HSMul.hSMul a (f x)) (HSMul.hSMul b (f y)))\n⊢ ConvexOn 𝕜 s f","decl":"/-- For a function on a convex set in a linearly ordered space (where the order and the algebraic\nstructures aren't necessarily compatible), in order to prove that it is convex, it suffices to\nverify the inequality `f (a • x + b • y) ≤ a • f x + b • f y` only for `x < y` and positive `a`,\n`b`. The main use case is `E = 𝕜` however one can apply it, e.g., to `𝕜^n` with lexicographic order.\n-/\ntheorem LinearOrder.convexOn_of_lt (hs : Convex 𝕜 s)\n    (hf : ∀ ⦃x⦄, x ∈ s → ∀ ⦃y⦄, y ∈ s → x < y → ∀ ⦃a b : 𝕜⦄, 0 < a → 0 < b → a + b = 1 →\n      f (a • x + b • y) ≤ a • f x + b • f y) :\n    ConvexOn 𝕜 s f := by\n  refine convexOn_iff_pairwise_pos.2 ⟨hs, fun x hx y hy hxy a b ha hb hab => ?_⟩\n  wlog h : x < y\n  · rw [add_comm (a • x), add_comm (a • f x)]\n    rw [add_comm] at hab\n    exact this hs hf y hy x hx hxy.symm b a hb ha hab (hxy.lt_or_lt.resolve_left h)\n  exact hf hx hy h ha hb hab\n\n"}
{"name":"LinearOrder.concaveOn_of_lt","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : OrderedAddCommMonoid β\ninst✝² : Module 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : LinearOrder E\ns : Set E\nf : E → β\nhs : Convex 𝕜 s\nhf : ∀ ⦃x : E⦄, Membership.mem s x → ∀ ⦃y : E⦄, Membership.mem s y → LT.lt x y → ∀ ⦃a b : 𝕜⦄, LT.lt 0 a → LT.lt 0 b → Eq (HAdd.hAdd a b) 1 → LE.le (HAdd.hAdd (HSMul.hSMul a (f x)) (HSMul.hSMul b (f y))) (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y)))\n⊢ ConcaveOn 𝕜 s f","decl":"/-- For a function on a convex set in a linearly ordered space (where the order and the algebraic\nstructures aren't necessarily compatible), in order to prove that it is concave it suffices to\nverify the inequality `a • f x + b • f y ≤ f (a • x + b • y)` for `x < y` and positive `a`, `b`. The\nmain use case is `E = ℝ` however one can apply it, e.g., to `ℝ^n` with lexicographic order. -/\ntheorem LinearOrder.concaveOn_of_lt (hs : Convex 𝕜 s)\n    (hf : ∀ ⦃x⦄, x ∈ s → ∀ ⦃y⦄, y ∈ s → x < y → ∀ ⦃a b : 𝕜⦄, 0 < a → 0 < b → a + b = 1 →\n      a • f x + b • f y ≤ f (a • x + b • y)) :\n    ConcaveOn 𝕜 s f :=\n  LinearOrder.convexOn_of_lt (β := βᵒᵈ) hs hf\n\n"}
{"name":"LinearOrder.strictConvexOn_of_lt","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : OrderedAddCommMonoid β\ninst✝² : Module 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : LinearOrder E\ns : Set E\nf : E → β\nhs : Convex 𝕜 s\nhf : ∀ ⦃x : E⦄, Membership.mem s x → ∀ ⦃y : E⦄, Membership.mem s y → LT.lt x y → ∀ ⦃a b : 𝕜⦄, LT.lt 0 a → LT.lt 0 b → Eq (HAdd.hAdd a b) 1 → LT.lt (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y))) (HAdd.hAdd (HSMul.hSMul a (f x)) (HSMul.hSMul b (f y)))\n⊢ StrictConvexOn 𝕜 s f","decl":"/-- For a function on a convex set in a linearly ordered space (where the order and the algebraic\nstructures aren't necessarily compatible), in order to prove that it is strictly convex, it suffices\nto verify the inequality `f (a • x + b • y) < a • f x + b • f y` for `x < y` and positive `a`, `b`.\nThe main use case is `E = 𝕜` however one can apply it, e.g., to `𝕜^n` with lexicographic order. -/\ntheorem LinearOrder.strictConvexOn_of_lt (hs : Convex 𝕜 s)\n    (hf : ∀ ⦃x⦄, x ∈ s → ∀ ⦃y⦄, y ∈ s → x < y → ∀ ⦃a b : 𝕜⦄, 0 < a → 0 < b → a + b = 1 →\n      f (a • x + b • y) < a • f x + b • f y) :\n    StrictConvexOn 𝕜 s f := by\n  refine ⟨hs, fun x hx y hy hxy a b ha hb hab => ?_⟩\n  wlog h : x < y\n  · rw [add_comm (a • x), add_comm (a • f x)]\n    rw [add_comm] at hab\n    exact this hs hf y hy x hx hxy.symm b a hb ha hab (hxy.lt_or_lt.resolve_left h)\n  exact hf hx hy h ha hb hab\n\n"}
{"name":"LinearOrder.strictConcaveOn_of_lt","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : OrderedAddCommMonoid β\ninst✝² : Module 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : LinearOrder E\ns : Set E\nf : E → β\nhs : Convex 𝕜 s\nhf : ∀ ⦃x : E⦄, Membership.mem s x → ∀ ⦃y : E⦄, Membership.mem s y → LT.lt x y → ∀ ⦃a b : 𝕜⦄, LT.lt 0 a → LT.lt 0 b → Eq (HAdd.hAdd a b) 1 → LT.lt (HAdd.hAdd (HSMul.hSMul a (f x)) (HSMul.hSMul b (f y))) (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y)))\n⊢ StrictConcaveOn 𝕜 s f","decl":"/-- For a function on a convex set in a linearly ordered space (where the order and the algebraic\nstructures aren't necessarily compatible), in order to prove that it is strictly concave it suffices\nto verify the inequality `a • f x + b • f y < f (a • x + b • y)` for `x < y` and positive `a`, `b`.\nThe main use case is `E = 𝕜` however one can apply it, e.g., to `𝕜^n` with lexicographic order. -/\ntheorem LinearOrder.strictConcaveOn_of_lt (hs : Convex 𝕜 s)\n    (hf : ∀ ⦃x⦄, x ∈ s → ∀ ⦃y⦄, y ∈ s → x < y → ∀ ⦃a b : 𝕜⦄, 0 < a → 0 < b → a + b = 1 →\n      a • f x + b • f y < f (a • x + b • y)) :\n    StrictConcaveOn 𝕜 s f :=\n  LinearOrder.strictConvexOn_of_lt (β := βᵒᵈ) hs hf\n\n"}
{"name":"ConvexOn.comp_linearMap","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\nβ : Type u_5\ninst✝⁶ : OrderedSemiring 𝕜\ninst✝⁵ : AddCommMonoid E\ninst✝⁴ : AddCommMonoid F\ninst✝³ : OrderedAddCommMonoid β\ninst✝² : Module 𝕜 E\ninst✝¹ : Module 𝕜 F\ninst✝ : SMul 𝕜 β\nf : F → β\ns : Set F\nhf : ConvexOn 𝕜 s f\ng : LinearMap (RingHom.id 𝕜) E F\n⊢ ConvexOn 𝕜 (Set.preimage (⇑g) s) (Function.comp f ⇑g)","decl":"/-- If `g` is convex on `s`, so is `(f ∘ g)` on `f ⁻¹' s` for a linear `f`. -/\ntheorem ConvexOn.comp_linearMap {f : F → β} {s : Set F} (hf : ConvexOn 𝕜 s f) (g : E →ₗ[𝕜] F) :\n    ConvexOn 𝕜 (g ⁻¹' s) (f ∘ g) :=\n  ⟨hf.1.linear_preimage _, fun x hx y hy a b ha hb hab =>\n    calc\n      f (g (a • x + b • y)) = f (a • g x + b • g y) := by rw [g.map_add, g.map_smul, g.map_smul]\n      _ ≤ a • f (g x) + b • f (g y) := hf.2 hx hy ha hb hab⟩\n\n"}
{"name":"ConcaveOn.comp_linearMap","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\nβ : Type u_5\ninst✝⁶ : OrderedSemiring 𝕜\ninst✝⁵ : AddCommMonoid E\ninst✝⁴ : AddCommMonoid F\ninst✝³ : OrderedAddCommMonoid β\ninst✝² : Module 𝕜 E\ninst✝¹ : Module 𝕜 F\ninst✝ : SMul 𝕜 β\nf : F → β\ns : Set F\nhf : ConcaveOn 𝕜 s f\ng : LinearMap (RingHom.id 𝕜) E F\n⊢ ConcaveOn 𝕜 (Set.preimage (⇑g) s) (Function.comp f ⇑g)","decl":"/-- If `g` is concave on `s`, so is `(g ∘ f)` on `f ⁻¹' s` for a linear `f`. -/\ntheorem ConcaveOn.comp_linearMap {f : F → β} {s : Set F} (hf : ConcaveOn 𝕜 s f) (g : E →ₗ[𝕜] F) :\n    ConcaveOn 𝕜 (g ⁻¹' s) (f ∘ g) :=\n  hf.dual.comp_linearMap g\n\n"}
{"name":"StrictConvexOn.add_convexOn","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedCancelAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : DistribMulAction 𝕜 β\ns : Set E\nf g : E → β\nhf : StrictConvexOn 𝕜 s f\nhg : ConvexOn 𝕜 s g\n⊢ StrictConvexOn 𝕜 s (HAdd.hAdd f g)","decl":"theorem StrictConvexOn.add_convexOn (hf : StrictConvexOn 𝕜 s f) (hg : ConvexOn 𝕜 s g) :\n    StrictConvexOn 𝕜 s (f + g) :=\n  ⟨hf.1, fun x hx y hy hxy a b ha hb hab =>\n    calc\n      f (a • x + b • y) + g (a • x + b • y) < a • f x + b • f y + (a • g x + b • g y) :=\n        add_lt_add_of_lt_of_le (hf.2 hx hy hxy ha hb hab) (hg.2 hx hy ha.le hb.le hab)\n      _ = a • (f x + g x) + b • (f y + g y) := by rw [smul_add, smul_add, add_add_add_comm]⟩\n\n"}
{"name":"ConvexOn.add_strictConvexOn","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedCancelAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : DistribMulAction 𝕜 β\ns : Set E\nf g : E → β\nhf : ConvexOn 𝕜 s f\nhg : StrictConvexOn 𝕜 s g\n⊢ StrictConvexOn 𝕜 s (HAdd.hAdd f g)","decl":"theorem ConvexOn.add_strictConvexOn (hf : ConvexOn 𝕜 s f) (hg : StrictConvexOn 𝕜 s g) :\n    StrictConvexOn 𝕜 s (f + g) :=\n  add_comm g f ▸ hg.add_convexOn hf\n\n"}
{"name":"StrictConvexOn.add","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedCancelAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : DistribMulAction 𝕜 β\ns : Set E\nf g : E → β\nhf : StrictConvexOn 𝕜 s f\nhg : StrictConvexOn 𝕜 s g\n⊢ StrictConvexOn 𝕜 s (HAdd.hAdd f g)","decl":"theorem StrictConvexOn.add (hf : StrictConvexOn 𝕜 s f) (hg : StrictConvexOn 𝕜 s g) :\n    StrictConvexOn 𝕜 s (f + g) :=\n  ⟨hf.1, fun x hx y hy hxy a b ha hb hab =>\n    calc\n      f (a • x + b • y) + g (a • x + b • y) < a • f x + b • f y + (a • g x + b • g y) :=\n        add_lt_add (hf.2 hx hy hxy ha hb hab) (hg.2 hx hy hxy ha hb hab)\n      _ = a • (f x + g x) + b • (f y + g y) := by rw [smul_add, smul_add, add_add_add_comm]⟩\n\n"}
{"name":"StrictConcaveOn.add_concaveOn","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedCancelAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : DistribMulAction 𝕜 β\ns : Set E\nf g : E → β\nhf : StrictConcaveOn 𝕜 s f\nhg : ConcaveOn 𝕜 s g\n⊢ StrictConcaveOn 𝕜 s (HAdd.hAdd f g)","decl":"theorem StrictConcaveOn.add_concaveOn (hf : StrictConcaveOn 𝕜 s f) (hg : ConcaveOn 𝕜 s g) :\n    StrictConcaveOn 𝕜 s (f + g) :=\n  hf.dual.add_convexOn hg.dual\n\n"}
{"name":"ConcaveOn.add_strictConcaveOn","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedCancelAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : DistribMulAction 𝕜 β\ns : Set E\nf g : E → β\nhf : ConcaveOn 𝕜 s f\nhg : StrictConcaveOn 𝕜 s g\n⊢ StrictConcaveOn 𝕜 s (HAdd.hAdd f g)","decl":"theorem ConcaveOn.add_strictConcaveOn (hf : ConcaveOn 𝕜 s f) (hg : StrictConcaveOn 𝕜 s g) :\n    StrictConcaveOn 𝕜 s (f + g) :=\n  hf.dual.add_strictConvexOn hg.dual\n\n"}
{"name":"StrictConcaveOn.add","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedCancelAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : DistribMulAction 𝕜 β\ns : Set E\nf g : E → β\nhf : StrictConcaveOn 𝕜 s f\nhg : StrictConcaveOn 𝕜 s g\n⊢ StrictConcaveOn 𝕜 s (HAdd.hAdd f g)","decl":"theorem StrictConcaveOn.add (hf : StrictConcaveOn 𝕜 s f) (hg : StrictConcaveOn 𝕜 s g) :\n    StrictConcaveOn 𝕜 s (f + g) :=\n  hf.dual.add hg\n\n"}
{"name":"StrictConvexOn.add_const","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : SMul 𝕜 E\ns : Set E\nγ : Type u_7\nf : E → γ\ninst✝¹ : OrderedCancelAddCommMonoid γ\ninst✝ : Module 𝕜 γ\nhf : StrictConvexOn 𝕜 s f\nb : γ\n⊢ StrictConvexOn 𝕜 s (HAdd.hAdd f fun x => b)","decl":"theorem StrictConvexOn.add_const {γ : Type*} {f : E → γ} [OrderedCancelAddCommMonoid γ]\n    [Module 𝕜 γ] (hf : StrictConvexOn 𝕜 s f) (b : γ) : StrictConvexOn 𝕜 s (f + fun _ => b) :=\n  hf.add_convexOn (convexOn_const _ hf.1)\n\n"}
{"name":"StrictConcaveOn.add_const","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : SMul 𝕜 E\ns : Set E\nγ : Type u_7\nf : E → γ\ninst✝¹ : OrderedCancelAddCommMonoid γ\ninst✝ : Module 𝕜 γ\nhf : StrictConcaveOn 𝕜 s f\nb : γ\n⊢ StrictConcaveOn 𝕜 s (HAdd.hAdd f fun x => b)","decl":"theorem StrictConcaveOn.add_const {γ : Type*} {f : E → γ} [OrderedCancelAddCommMonoid γ]\n    [Module 𝕜 γ] (hf : StrictConcaveOn 𝕜 s f) (b : γ) : StrictConcaveOn 𝕜 s (f + fun _ => b) :=\n  hf.add_concaveOn (concaveOn_const _ hf.1)\n\n"}
{"name":"ConvexOn.convex_lt","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : OrderedCancelAddCommMonoid β\ninst✝² : Module 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConvexOn 𝕜 s f\nr : β\n⊢ Convex 𝕜 (setOf fun x => And (Membership.mem s x) (LT.lt (f x) r))","decl":"theorem ConvexOn.convex_lt (hf : ConvexOn 𝕜 s f) (r : β) : Convex 𝕜 ({ x ∈ s | f x < r }) :=\n  convex_iff_forall_pos.2 fun x hx y hy a b ha hb hab =>\n    ⟨hf.1 hx.1 hy.1 ha.le hb.le hab,\n      calc\n        f (a • x + b • y) ≤ a • f x + b • f y := hf.2 hx.1 hy.1 ha.le hb.le hab\n        _ < a • r + b • r :=\n          (add_lt_add_of_lt_of_le (smul_lt_smul_of_pos_left hx.2 ha)\n            (smul_le_smul_of_nonneg_left hy.2.le hb.le))\n        _ = r := Convex.combo_self hab _⟩\n\n"}
{"name":"ConcaveOn.convex_gt","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : OrderedCancelAddCommMonoid β\ninst✝² : Module 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConcaveOn 𝕜 s f\nr : β\n⊢ Convex 𝕜 (setOf fun x => And (Membership.mem s x) (LT.lt r (f x)))","decl":"theorem ConcaveOn.convex_gt (hf : ConcaveOn 𝕜 s f) (r : β) : Convex 𝕜 ({ x ∈ s | r < f x }) :=\n  hf.dual.convex_lt r\n\n"}
{"name":"ConvexOn.openSegment_subset_strict_epigraph","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : OrderedCancelAddCommMonoid β\ninst✝² : Module 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConvexOn 𝕜 s f\np q : Prod E β\nhp : And (Membership.mem s p.1) (LT.lt (f p.1) p.2)\nhq : And (Membership.mem s q.1) (LE.le (f q.1) q.2)\n⊢ HasSubset.Subset (openSegment 𝕜 p q) (setOf fun p => And (Membership.mem s p.1) (LT.lt (f p.1) p.2))","decl":"theorem ConvexOn.openSegment_subset_strict_epigraph (hf : ConvexOn 𝕜 s f) (p q : E × β)\n    (hp : p.1 ∈ s ∧ f p.1 < p.2) (hq : q.1 ∈ s ∧ f q.1 ≤ q.2) :\n    openSegment 𝕜 p q ⊆ { p : E × β | p.1 ∈ s ∧ f p.1 < p.2 } := by\n  rintro _ ⟨a, b, ha, hb, hab, rfl⟩\n  refine ⟨hf.1 hp.1 hq.1 ha.le hb.le hab, ?_⟩\n  calc\n    f (a • p.1 + b • q.1) ≤ a • f p.1 + b • f q.1 := hf.2 hp.1 hq.1 ha.le hb.le hab\n    _ < a • p.2 + b • q.2 := add_lt_add_of_lt_of_le\n       (smul_lt_smul_of_pos_left hp.2 ha) (smul_le_smul_of_nonneg_left hq.2 hb.le)\n\n"}
{"name":"ConcaveOn.openSegment_subset_strict_hypograph","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : OrderedCancelAddCommMonoid β\ninst✝² : Module 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConcaveOn 𝕜 s f\np q : Prod E β\nhp : And (Membership.mem s p.1) (LT.lt p.2 (f p.1))\nhq : And (Membership.mem s q.1) (LE.le q.2 (f q.1))\n⊢ HasSubset.Subset (openSegment 𝕜 p q) (setOf fun p => And (Membership.mem s p.1) (LT.lt p.2 (f p.1)))","decl":"theorem ConcaveOn.openSegment_subset_strict_hypograph (hf : ConcaveOn 𝕜 s f) (p q : E × β)\n    (hp : p.1 ∈ s ∧ p.2 < f p.1) (hq : q.1 ∈ s ∧ q.2 ≤ f q.1) :\n    openSegment 𝕜 p q ⊆ { p : E × β | p.1 ∈ s ∧ p.2 < f p.1 } :=\n  hf.dual.openSegment_subset_strict_epigraph p q hp hq\n\n"}
{"name":"ConvexOn.convex_strict_epigraph","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : OrderedCancelAddCommMonoid β\ninst✝² : Module 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConvexOn 𝕜 s f\n⊢ Convex 𝕜 (setOf fun p => And (Membership.mem s p.1) (LT.lt (f p.1) p.2))","decl":"theorem ConvexOn.convex_strict_epigraph (hf : ConvexOn 𝕜 s f) :\n    Convex 𝕜 { p : E × β | p.1 ∈ s ∧ f p.1 < p.2 } :=\n  convex_iff_openSegment_subset.mpr fun p hp q hq =>\n    hf.openSegment_subset_strict_epigraph p q hp ⟨hq.1, hq.2.le⟩\n\n"}
{"name":"ConcaveOn.convex_strict_hypograph","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : OrderedCancelAddCommMonoid β\ninst✝² : Module 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConcaveOn 𝕜 s f\n⊢ Convex 𝕜 (setOf fun p => And (Membership.mem s p.1) (LT.lt p.2 (f p.1)))","decl":"theorem ConcaveOn.convex_strict_hypograph (hf : ConcaveOn 𝕜 s f) :\n    Convex 𝕜 { p : E × β | p.1 ∈ s ∧ p.2 < f p.1 } :=\n  hf.dual.convex_strict_epigraph\n\n"}
{"name":"ConvexOn.sup","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf g : E → β\nhf : ConvexOn 𝕜 s f\nhg : ConvexOn 𝕜 s g\n⊢ ConvexOn 𝕜 s (Max.max f g)","decl":"/-- The pointwise maximum of convex functions is convex. -/\ntheorem ConvexOn.sup (hf : ConvexOn 𝕜 s f) (hg : ConvexOn 𝕜 s g) : ConvexOn 𝕜 s (f ⊔ g) := by\n  refine ⟨hf.left, fun x hx y hy a b ha hb hab => sup_le ?_ ?_⟩\n  · calc\n      f (a • x + b • y) ≤ a • f x + b • f y := hf.right hx hy ha hb hab\n      _ ≤ a • (f x ⊔ g x) + b • (f y ⊔ g y) := by gcongr <;> apply le_sup_left\n  · calc\n      g (a • x + b • y) ≤ a • g x + b • g y := hg.right hx hy ha hb hab\n      _ ≤ a • (f x ⊔ g x) + b • (f y ⊔ g y) := by gcongr <;> apply le_sup_right\n\n"}
{"name":"ConcaveOn.inf","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf g : E → β\nhf : ConcaveOn 𝕜 s f\nhg : ConcaveOn 𝕜 s g\n⊢ ConcaveOn 𝕜 s (Min.min f g)","decl":"/-- The pointwise minimum of concave functions is concave. -/\ntheorem ConcaveOn.inf (hf : ConcaveOn 𝕜 s f) (hg : ConcaveOn 𝕜 s g) : ConcaveOn 𝕜 s (f ⊓ g) :=\n  hf.dual.sup hg\n\n"}
{"name":"StrictConvexOn.sup","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf g : E → β\nhf : StrictConvexOn 𝕜 s f\nhg : StrictConvexOn 𝕜 s g\n⊢ StrictConvexOn 𝕜 s (Max.max f g)","decl":"/-- The pointwise maximum of strictly convex functions is strictly convex. -/\ntheorem StrictConvexOn.sup (hf : StrictConvexOn 𝕜 s f) (hg : StrictConvexOn 𝕜 s g) :\n    StrictConvexOn 𝕜 s (f ⊔ g) :=\n  ⟨hf.left, fun x hx y hy hxy a b ha hb hab =>\n    max_lt\n      (calc\n        f (a • x + b • y) < a • f x + b • f y := hf.2 hx hy hxy ha hb hab\n        _ ≤ a • (f x ⊔ g x) + b • (f y ⊔ g y) := by gcongr <;> apply le_sup_left)\n      (calc\n        g (a • x + b • y) < a • g x + b • g y := hg.2 hx hy hxy ha hb hab\n        _ ≤ a • (f x ⊔ g x) + b • (f y ⊔ g y) := by gcongr <;> apply le_sup_right)⟩\n\n"}
{"name":"StrictConcaveOn.inf","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf g : E → β\nhf : StrictConcaveOn 𝕜 s f\nhg : StrictConcaveOn 𝕜 s g\n⊢ StrictConcaveOn 𝕜 s (Min.min f g)","decl":"/-- The pointwise minimum of strictly concave functions is strictly concave. -/\ntheorem StrictConcaveOn.inf (hf : StrictConcaveOn 𝕜 s f) (hg : StrictConcaveOn 𝕜 s g) :\n    StrictConcaveOn 𝕜 s (f ⊓ g) :=\n  hf.dual.sup hg\n\n"}
{"name":"ConvexOn.le_on_segment'","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConvexOn 𝕜 s f\nx y : E\nhx : Membership.mem s x\nhy : Membership.mem s y\na b : 𝕜\nha : LE.le 0 a\nhb : LE.le 0 b\nhab : Eq (HAdd.hAdd a b) 1\n⊢ LE.le (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y))) (Max.max (f x) (f y))","decl":"/-- A convex function on a segment is upper-bounded by the max of its endpoints. -/\ntheorem ConvexOn.le_on_segment' (hf : ConvexOn 𝕜 s f) {x y : E} (hx : x ∈ s) (hy : y ∈ s) {a b : 𝕜}\n    (ha : 0 ≤ a) (hb : 0 ≤ b) (hab : a + b = 1) : f (a • x + b • y) ≤ max (f x) (f y) :=\n  calc\n    f (a • x + b • y) ≤ a • f x + b • f y := hf.2 hx hy ha hb hab\n    _ ≤ a • max (f x) (f y) + b • max (f x) (f y) := by\n      gcongr\n      · apply le_max_left\n      · apply le_max_right\n    _ = max (f x) (f y) := Convex.combo_self hab _\n\n"}
{"name":"ConcaveOn.ge_on_segment'","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConcaveOn 𝕜 s f\nx y : E\nhx : Membership.mem s x\nhy : Membership.mem s y\na b : 𝕜\nha : LE.le 0 a\nhb : LE.le 0 b\nhab : Eq (HAdd.hAdd a b) 1\n⊢ LE.le (Min.min (f x) (f y)) (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y)))","decl":"/-- A concave function on a segment is lower-bounded by the min of its endpoints. -/\ntheorem ConcaveOn.ge_on_segment' (hf : ConcaveOn 𝕜 s f) {x y : E} (hx : x ∈ s) (hy : y ∈ s)\n    {a b : 𝕜} (ha : 0 ≤ a) (hb : 0 ≤ b) (hab : a + b = 1) : min (f x) (f y) ≤ f (a • x + b • y) :=\n  hf.dual.le_on_segment' hx hy ha hb hab\n\n"}
{"name":"ConvexOn.le_on_segment","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConvexOn 𝕜 s f\nx y z : E\nhx : Membership.mem s x\nhy : Membership.mem s y\nhz : Membership.mem (segment 𝕜 x y) z\n⊢ LE.le (f z) (Max.max (f x) (f y))","decl":"/-- A convex function on a segment is upper-bounded by the max of its endpoints. -/\ntheorem ConvexOn.le_on_segment (hf : ConvexOn 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hz : z ∈ [x -[𝕜] y]) : f z ≤ max (f x) (f y) :=\n  let ⟨_, _, ha, hb, hab, hz⟩ := hz\n  hz ▸ hf.le_on_segment' hx hy ha hb hab\n\n"}
{"name":"ConcaveOn.ge_on_segment","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConcaveOn 𝕜 s f\nx y z : E\nhx : Membership.mem s x\nhy : Membership.mem s y\nhz : Membership.mem (segment 𝕜 x y) z\n⊢ LE.le (Min.min (f x) (f y)) (f z)","decl":"/-- A concave function on a segment is lower-bounded by the min of its endpoints. -/\ntheorem ConcaveOn.ge_on_segment (hf : ConcaveOn 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hz : z ∈ [x -[𝕜] y]) : min (f x) (f y) ≤ f z :=\n  hf.dual.le_on_segment hx hy hz\n\n"}
{"name":"StrictConvexOn.lt_on_open_segment'","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : StrictConvexOn 𝕜 s f\nx y : E\nhx : Membership.mem s x\nhy : Membership.mem s y\nhxy : Ne x y\na b : 𝕜\nha : LT.lt 0 a\nhb : LT.lt 0 b\nhab : Eq (HAdd.hAdd a b) 1\n⊢ LT.lt (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y))) (Max.max (f x) (f y))","decl":"/-- A strictly convex function on an open segment is strictly upper-bounded by the max of its\nendpoints. -/\ntheorem StrictConvexOn.lt_on_open_segment' (hf : StrictConvexOn 𝕜 s f) {x y : E} (hx : x ∈ s)\n    (hy : y ∈ s) (hxy : x ≠ y) {a b : 𝕜} (ha : 0 < a) (hb : 0 < b) (hab : a + b = 1) :\n    f (a • x + b • y) < max (f x) (f y) :=\n  calc\n    f (a • x + b • y) < a • f x + b • f y := hf.2 hx hy hxy ha hb hab\n    _ ≤ a • max (f x) (f y) + b • max (f x) (f y) := by\n      gcongr\n      · apply le_max_left\n      · apply le_max_right\n    _ = max (f x) (f y) := Convex.combo_self hab _\n\n"}
{"name":"StrictConcaveOn.lt_on_open_segment'","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : StrictConcaveOn 𝕜 s f\nx y : E\nhx : Membership.mem s x\nhy : Membership.mem s y\nhxy : Ne x y\na b : 𝕜\nha : LT.lt 0 a\nhb : LT.lt 0 b\nhab : Eq (HAdd.hAdd a b) 1\n⊢ LT.lt (Min.min (f x) (f y)) (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y)))","decl":"/-- A strictly concave function on an open segment is strictly lower-bounded by the min of its\nendpoints. -/\ntheorem StrictConcaveOn.lt_on_open_segment' (hf : StrictConcaveOn 𝕜 s f) {x y : E} (hx : x ∈ s)\n    (hy : y ∈ s) (hxy : x ≠ y) {a b : 𝕜} (ha : 0 < a) (hb : 0 < b) (hab : a + b = 1) :\n    min (f x) (f y) < f (a • x + b • y) :=\n  hf.dual.lt_on_open_segment' hx hy hxy ha hb hab\n\n"}
{"name":"StrictConvexOn.lt_on_openSegment","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : StrictConvexOn 𝕜 s f\nx y z : E\nhx : Membership.mem s x\nhy : Membership.mem s y\nhxy : Ne x y\nhz : Membership.mem (openSegment 𝕜 x y) z\n⊢ LT.lt (f z) (Max.max (f x) (f y))","decl":"/-- A strictly convex function on an open segment is strictly upper-bounded by the max of its\nendpoints. -/\ntheorem StrictConvexOn.lt_on_openSegment (hf : StrictConvexOn 𝕜 s f) {x y z : E} (hx : x ∈ s)\n    (hy : y ∈ s) (hxy : x ≠ y) (hz : z ∈ openSegment 𝕜 x y) : f z < max (f x) (f y) :=\n  let ⟨_, _, ha, hb, hab, hz⟩ := hz\n  hz ▸ hf.lt_on_open_segment' hx hy hxy ha hb hab\n\n"}
{"name":"StrictConcaveOn.lt_on_openSegment","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : StrictConcaveOn 𝕜 s f\nx y z : E\nhx : Membership.mem s x\nhy : Membership.mem s y\nhxy : Ne x y\nhz : Membership.mem (openSegment 𝕜 x y) z\n⊢ LT.lt (Min.min (f x) (f y)) (f z)","decl":"/-- A strictly concave function on an open segment is strictly lower-bounded by the min of its\nendpoints. -/\ntheorem StrictConcaveOn.lt_on_openSegment (hf : StrictConcaveOn 𝕜 s f) {x y z : E} (hx : x ∈ s)\n    (hy : y ∈ s) (hxy : x ≠ y) (hz : z ∈ openSegment 𝕜 x y) : min (f x) (f y) < f z :=\n  hf.dual.lt_on_openSegment hx hy hxy hz\n\n"}
{"name":"ConvexOn.le_left_of_right_le'","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConvexOn 𝕜 s f\nx y : E\nhx : Membership.mem s x\nhy : Membership.mem s y\na b : 𝕜\nha : LT.lt 0 a\nhb : LE.le 0 b\nhab : Eq (HAdd.hAdd a b) 1\nhfy : LE.le (f y) (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y)))\n⊢ LE.le (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y))) (f x)","decl":"theorem ConvexOn.le_left_of_right_le' (hf : ConvexOn 𝕜 s f) {x y : E} (hx : x ∈ s) (hy : y ∈ s)\n    {a b : 𝕜} (ha : 0 < a) (hb : 0 ≤ b) (hab : a + b = 1) (hfy : f y ≤ f (a • x + b • y)) :\n    f (a • x + b • y) ≤ f x :=\n  le_of_not_lt fun h ↦ lt_irrefl (f (a • x + b • y)) <|\n    calc\n      f (a • x + b • y) ≤ a • f x + b • f y := hf.2 hx hy ha.le hb hab\n      _ < a • f (a • x + b • y) + b • f (a • x + b • y) := add_lt_add_of_lt_of_le\n          (smul_lt_smul_of_pos_left h ha) (smul_le_smul_of_nonneg_left hfy hb)\n      _ = f (a • x + b • y) := Convex.combo_self hab _\n\n"}
{"name":"ConcaveOn.left_le_of_le_right'","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConcaveOn 𝕜 s f\nx y : E\nhx : Membership.mem s x\nhy : Membership.mem s y\na b : 𝕜\nha : LT.lt 0 a\nhb : LE.le 0 b\nhab : Eq (HAdd.hAdd a b) 1\nhfy : LE.le (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y))) (f y)\n⊢ LE.le (f x) (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y)))","decl":"theorem ConcaveOn.left_le_of_le_right' (hf : ConcaveOn 𝕜 s f) {x y : E} (hx : x ∈ s) (hy : y ∈ s)\n    {a b : 𝕜} (ha : 0 < a) (hb : 0 ≤ b) (hab : a + b = 1) (hfy : f (a • x + b • y) ≤ f y) :\n    f x ≤ f (a • x + b • y) :=\n  hf.dual.le_left_of_right_le' hx hy ha hb hab hfy\n\n"}
{"name":"ConvexOn.le_right_of_left_le'","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConvexOn 𝕜 s f\nx y : E\na b : 𝕜\nhx : Membership.mem s x\nhy : Membership.mem s y\nha : LE.le 0 a\nhb : LT.lt 0 b\nhab : Eq (HAdd.hAdd a b) 1\nhfx : LE.le (f x) (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y)))\n⊢ LE.le (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y))) (f y)","decl":"theorem ConvexOn.le_right_of_left_le' (hf : ConvexOn 𝕜 s f) {x y : E} {a b : 𝕜} (hx : x ∈ s)\n    (hy : y ∈ s) (ha : 0 ≤ a) (hb : 0 < b) (hab : a + b = 1) (hfx : f x ≤ f (a • x + b • y)) :\n    f (a • x + b • y) ≤ f y := by\n  rw [add_comm] at hab hfx ⊢\n  exact hf.le_left_of_right_le' hy hx hb ha hab hfx\n\n"}
{"name":"ConcaveOn.right_le_of_le_left'","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConcaveOn 𝕜 s f\nx y : E\na b : 𝕜\nhx : Membership.mem s x\nhy : Membership.mem s y\nha : LE.le 0 a\nhb : LT.lt 0 b\nhab : Eq (HAdd.hAdd a b) 1\nhfx : LE.le (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y))) (f x)\n⊢ LE.le (f y) (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y)))","decl":"theorem ConcaveOn.right_le_of_le_left' (hf : ConcaveOn 𝕜 s f) {x y : E} {a b : 𝕜} (hx : x ∈ s)\n    (hy : y ∈ s) (ha : 0 ≤ a) (hb : 0 < b) (hab : a + b = 1) (hfx : f (a • x + b • y) ≤ f x) :\n    f y ≤ f (a • x + b • y) :=\n  hf.dual.le_right_of_left_le' hx hy ha hb hab hfx\n\n"}
{"name":"ConvexOn.le_left_of_right_le","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConvexOn 𝕜 s f\nx y z : E\nhx : Membership.mem s x\nhy : Membership.mem s y\nhz : Membership.mem (openSegment 𝕜 x y) z\nhyz : LE.le (f y) (f z)\n⊢ LE.le (f z) (f x)","decl":"theorem ConvexOn.le_left_of_right_le (hf : ConvexOn 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hz : z ∈ openSegment 𝕜 x y) (hyz : f y ≤ f z) : f z ≤ f x := by\n  obtain ⟨a, b, ha, hb, hab, rfl⟩ := hz\n  exact hf.le_left_of_right_le' hx hy ha hb.le hab hyz\n\n"}
{"name":"ConcaveOn.left_le_of_le_right","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConcaveOn 𝕜 s f\nx y z : E\nhx : Membership.mem s x\nhy : Membership.mem s y\nhz : Membership.mem (openSegment 𝕜 x y) z\nhyz : LE.le (f z) (f y)\n⊢ LE.le (f x) (f z)","decl":"theorem ConcaveOn.left_le_of_le_right (hf : ConcaveOn 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hz : z ∈ openSegment 𝕜 x y) (hyz : f z ≤ f y) : f x ≤ f z :=\n  hf.dual.le_left_of_right_le hx hy hz hyz\n\n"}
{"name":"ConvexOn.le_right_of_left_le","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConvexOn 𝕜 s f\nx y z : E\nhx : Membership.mem s x\nhy : Membership.mem s y\nhz : Membership.mem (openSegment 𝕜 x y) z\nhxz : LE.le (f x) (f z)\n⊢ LE.le (f z) (f y)","decl":"theorem ConvexOn.le_right_of_left_le (hf : ConvexOn 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hz : z ∈ openSegment 𝕜 x y) (hxz : f x ≤ f z) : f z ≤ f y := by\n  obtain ⟨a, b, ha, hb, hab, rfl⟩ := hz\n  exact hf.le_right_of_left_le' hx hy ha.le hb hab hxz\n\n"}
{"name":"ConcaveOn.right_le_of_le_left","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConcaveOn 𝕜 s f\nx y z : E\nhx : Membership.mem s x\nhy : Membership.mem s y\nhz : Membership.mem (openSegment 𝕜 x y) z\nhxz : LE.le (f z) (f x)\n⊢ LE.le (f y) (f z)","decl":"theorem ConcaveOn.right_le_of_le_left (hf : ConcaveOn 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hz : z ∈ openSegment 𝕜 x y) (hxz : f z ≤ f x) : f y ≤ f z :=\n  hf.dual.le_right_of_left_le hx hy hz hxz\n\n"}
{"name":"ConvexOn.lt_left_of_right_lt'","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : Module 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConvexOn 𝕜 s f\nx y : E\nhx : Membership.mem s x\nhy : Membership.mem s y\na b : 𝕜\nha : LT.lt 0 a\nhb : LT.lt 0 b\nhab : Eq (HAdd.hAdd a b) 1\nhfy : LT.lt (f y) (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y)))\n⊢ LT.lt (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y))) (f x)","decl":"theorem ConvexOn.lt_left_of_right_lt' (hf : ConvexOn 𝕜 s f) {x y : E} (hx : x ∈ s) (hy : y ∈ s)\n    {a b : 𝕜} (ha : 0 < a) (hb : 0 < b) (hab : a + b = 1) (hfy : f y < f (a • x + b • y)) :\n    f (a • x + b • y) < f x :=\n  not_le.1 fun h ↦ lt_irrefl (f (a • x + b • y)) <|\n    calc\n      f (a • x + b • y) ≤ a • f x + b • f y := hf.2 hx hy ha.le hb.le hab\n      _ < a • f (a • x + b • y) + b • f (a • x + b • y) := add_lt_add_of_le_of_lt\n          (smul_le_smul_of_nonneg_left h ha.le) (smul_lt_smul_of_pos_left hfy hb)\n      _ = f (a • x + b • y) := Convex.combo_self hab _\n\n"}
{"name":"ConcaveOn.left_lt_of_lt_right'","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : Module 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConcaveOn 𝕜 s f\nx y : E\nhx : Membership.mem s x\nhy : Membership.mem s y\na b : 𝕜\nha : LT.lt 0 a\nhb : LT.lt 0 b\nhab : Eq (HAdd.hAdd a b) 1\nhfy : LT.lt (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y))) (f y)\n⊢ LT.lt (f x) (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y)))","decl":"theorem ConcaveOn.left_lt_of_lt_right' (hf : ConcaveOn 𝕜 s f) {x y : E} (hx : x ∈ s) (hy : y ∈ s)\n    {a b : 𝕜} (ha : 0 < a) (hb : 0 < b) (hab : a + b = 1) (hfy : f (a • x + b • y) < f y) :\n    f x < f (a • x + b • y) :=\n  hf.dual.lt_left_of_right_lt' hx hy ha hb hab hfy\n\n"}
{"name":"ConvexOn.lt_right_of_left_lt'","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : Module 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConvexOn 𝕜 s f\nx y : E\na b : 𝕜\nhx : Membership.mem s x\nhy : Membership.mem s y\nha : LT.lt 0 a\nhb : LT.lt 0 b\nhab : Eq (HAdd.hAdd a b) 1\nhfx : LT.lt (f x) (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y)))\n⊢ LT.lt (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y))) (f y)","decl":"theorem ConvexOn.lt_right_of_left_lt' (hf : ConvexOn 𝕜 s f) {x y : E} {a b : 𝕜} (hx : x ∈ s)\n    (hy : y ∈ s) (ha : 0 < a) (hb : 0 < b) (hab : a + b = 1) (hfx : f x < f (a • x + b • y)) :\n    f (a • x + b • y) < f y := by\n  rw [add_comm] at hab hfx ⊢\n  exact hf.lt_left_of_right_lt' hy hx hb ha hab hfx\n\n"}
{"name":"ConcaveOn.lt_right_of_left_lt'","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : Module 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConcaveOn 𝕜 s f\nx y : E\na b : 𝕜\nhx : Membership.mem s x\nhy : Membership.mem s y\nha : LT.lt 0 a\nhb : LT.lt 0 b\nhab : Eq (HAdd.hAdd a b) 1\nhfx : LT.lt (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y))) (f x)\n⊢ LT.lt (f y) (f (HAdd.hAdd (HSMul.hSMul a x) (HSMul.hSMul b y)))","decl":"theorem ConcaveOn.lt_right_of_left_lt' (hf : ConcaveOn 𝕜 s f) {x y : E} {a b : 𝕜} (hx : x ∈ s)\n    (hy : y ∈ s) (ha : 0 < a) (hb : 0 < b) (hab : a + b = 1) (hfx : f (a • x + b • y) < f x) :\n    f y < f (a • x + b • y) :=\n  hf.dual.lt_right_of_left_lt' hx hy ha hb hab hfx\n\n"}
{"name":"ConvexOn.lt_left_of_right_lt","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : Module 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConvexOn 𝕜 s f\nx y z : E\nhx : Membership.mem s x\nhy : Membership.mem s y\nhz : Membership.mem (openSegment 𝕜 x y) z\nhyz : LT.lt (f y) (f z)\n⊢ LT.lt (f z) (f x)","decl":"theorem ConvexOn.lt_left_of_right_lt (hf : ConvexOn 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hz : z ∈ openSegment 𝕜 x y) (hyz : f y < f z) : f z < f x := by\n  obtain ⟨a, b, ha, hb, hab, rfl⟩ := hz\n  exact hf.lt_left_of_right_lt' hx hy ha hb hab hyz\n\n"}
{"name":"ConcaveOn.left_lt_of_lt_right","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : Module 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConcaveOn 𝕜 s f\nx y z : E\nhx : Membership.mem s x\nhy : Membership.mem s y\nhz : Membership.mem (openSegment 𝕜 x y) z\nhyz : LT.lt (f z) (f y)\n⊢ LT.lt (f x) (f z)","decl":"theorem ConcaveOn.left_lt_of_lt_right (hf : ConcaveOn 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hz : z ∈ openSegment 𝕜 x y) (hyz : f z < f y) : f x < f z :=\n  hf.dual.lt_left_of_right_lt hx hy hz hyz\n\n"}
{"name":"ConvexOn.lt_right_of_left_lt","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : Module 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConvexOn 𝕜 s f\nx y z : E\nhx : Membership.mem s x\nhy : Membership.mem s y\nhz : Membership.mem (openSegment 𝕜 x y) z\nhxz : LT.lt (f x) (f z)\n⊢ LT.lt (f z) (f y)","decl":"theorem ConvexOn.lt_right_of_left_lt (hf : ConvexOn 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hz : z ∈ openSegment 𝕜 x y) (hxz : f x < f z) : f z < f y := by\n  obtain ⟨a, b, ha, hb, hab, rfl⟩ := hz\n  exact hf.lt_right_of_left_lt' hx hy ha hb hab hxz\n\n"}
{"name":"ConcaveOn.lt_right_of_left_lt","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : Module 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nhf : ConcaveOn 𝕜 s f\nx y z : E\nhx : Membership.mem s x\nhy : Membership.mem s y\nhz : Membership.mem (openSegment 𝕜 x y) z\nhxz : LT.lt (f z) (f x)\n⊢ LT.lt (f y) (f z)","decl":"theorem ConcaveOn.lt_right_of_left_lt (hf : ConcaveOn 𝕜 s f) {x y z : E} (hx : x ∈ s) (hy : y ∈ s)\n    (hz : z ∈ openSegment 𝕜 x y) (hxz : f z < f x) : f y < f z :=\n  hf.dual.lt_right_of_left_lt hx hy hz hxz\n\n"}
{"name":"neg_convexOn_iff","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommGroup β\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf : E → β\n⊢ Iff (ConvexOn 𝕜 s (Neg.neg f)) (ConcaveOn 𝕜 s f)","decl":"/-- A function `-f` is convex iff `f` is concave. -/\n@[simp]\ntheorem neg_convexOn_iff : ConvexOn 𝕜 s (-f) ↔ ConcaveOn 𝕜 s f := by\n  constructor\n  · rintro ⟨hconv, h⟩\n    refine ⟨hconv, fun x hx y hy a b ha hb hab => ?_⟩\n    simp? [neg_apply, neg_le, add_comm] at h says\n      simp only [Pi.neg_apply, smul_neg, le_add_neg_iff_add_le, add_comm,\n        add_neg_le_iff_le_add] at h\n    exact h hx hy ha hb hab\n  · rintro ⟨hconv, h⟩\n    refine ⟨hconv, fun x hx y hy a b ha hb hab => ?_⟩\n    rw [← neg_le_neg_iff]\n    simp_rw [neg_add, Pi.neg_apply, smul_neg, neg_neg]\n    exact h hx hy ha hb hab\n\n"}
{"name":"neg_concaveOn_iff","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommGroup β\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf : E → β\n⊢ Iff (ConcaveOn 𝕜 s (Neg.neg f)) (ConvexOn 𝕜 s f)","decl":"/-- A function `-f` is concave iff `f` is convex. -/\n@[simp]\ntheorem neg_concaveOn_iff : ConcaveOn 𝕜 s (-f) ↔ ConvexOn 𝕜 s f := by\n  rw [← neg_convexOn_iff, neg_neg f]\n\n"}
{"name":"neg_strictConvexOn_iff","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommGroup β\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf : E → β\n⊢ Iff (StrictConvexOn 𝕜 s (Neg.neg f)) (StrictConcaveOn 𝕜 s f)","decl":"/-- A function `-f` is strictly convex iff `f` is strictly concave. -/\n@[simp]\ntheorem neg_strictConvexOn_iff : StrictConvexOn 𝕜 s (-f) ↔ StrictConcaveOn 𝕜 s f := by\n  constructor\n  · rintro ⟨hconv, h⟩\n    refine ⟨hconv, fun x hx y hy hxy a b ha hb hab => ?_⟩\n    simp only [ne_eq, Pi.neg_apply, smul_neg, lt_add_neg_iff_add_lt, add_comm,\n      add_neg_lt_iff_lt_add] at h\n    exact h hx hy hxy ha hb hab\n  · rintro ⟨hconv, h⟩\n    refine ⟨hconv, fun x hx y hy hxy a b ha hb hab => ?_⟩\n    rw [← neg_lt_neg_iff]\n    simp_rw [neg_add, Pi.neg_apply, smul_neg, neg_neg]\n    exact h hx hy hxy ha hb hab\n\n"}
{"name":"neg_strictConcaveOn_iff","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommGroup β\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf : E → β\n⊢ Iff (StrictConcaveOn 𝕜 s (Neg.neg f)) (StrictConvexOn 𝕜 s f)","decl":"/-- A function `-f` is strictly concave iff `f` is strictly convex. -/\n@[simp]\ntheorem neg_strictConcaveOn_iff : StrictConcaveOn 𝕜 s (-f) ↔ StrictConvexOn 𝕜 s f := by\n  rw [← neg_strictConvexOn_iff, neg_neg f]\n\n"}
{"name":"ConcaveOn.neg","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommGroup β\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf : E → β\na✝ : ConcaveOn 𝕜 s f\n⊢ ConvexOn 𝕜 s (Neg.neg f)","decl":"alias ⟨_, ConcaveOn.neg⟩ := neg_convexOn_iff\n\n"}
{"name":"ConvexOn.neg","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommGroup β\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf : E → β\na✝ : ConvexOn 𝕜 s f\n⊢ ConcaveOn 𝕜 s (Neg.neg f)","decl":"alias ⟨_, ConvexOn.neg⟩ := neg_concaveOn_iff\n\n"}
{"name":"StrictConcaveOn.neg","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommGroup β\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf : E → β\na✝ : StrictConcaveOn 𝕜 s f\n⊢ StrictConvexOn 𝕜 s (Neg.neg f)","decl":"alias ⟨_, StrictConcaveOn.neg⟩ := neg_strictConvexOn_iff\n\n"}
{"name":"StrictConvexOn.neg","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommGroup β\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf : E → β\na✝ : StrictConvexOn 𝕜 s f\n⊢ StrictConcaveOn 𝕜 s (Neg.neg f)","decl":"alias ⟨_, StrictConvexOn.neg⟩ := neg_strictConcaveOn_iff\n\n"}
{"name":"ConvexOn.sub","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommGroup β\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf g : E → β\nhf : ConvexOn 𝕜 s f\nhg : ConcaveOn 𝕜 s g\n⊢ ConvexOn 𝕜 s (HSub.hSub f g)","decl":"theorem ConvexOn.sub (hf : ConvexOn 𝕜 s f) (hg : ConcaveOn 𝕜 s g) : ConvexOn 𝕜 s (f - g) :=\n  (sub_eq_add_neg f g).symm ▸ hf.add hg.neg\n\n"}
{"name":"ConcaveOn.sub","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommGroup β\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf g : E → β\nhf : ConcaveOn 𝕜 s f\nhg : ConvexOn 𝕜 s g\n⊢ ConcaveOn 𝕜 s (HSub.hSub f g)","decl":"theorem ConcaveOn.sub (hf : ConcaveOn 𝕜 s f) (hg : ConvexOn 𝕜 s g) : ConcaveOn 𝕜 s (f - g) :=\n  (sub_eq_add_neg f g).symm ▸ hf.add hg.neg\n\n"}
{"name":"StrictConvexOn.sub","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommGroup β\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf g : E → β\nhf : StrictConvexOn 𝕜 s f\nhg : StrictConcaveOn 𝕜 s g\n⊢ StrictConvexOn 𝕜 s (HSub.hSub f g)","decl":"theorem StrictConvexOn.sub (hf : StrictConvexOn 𝕜 s f) (hg : StrictConcaveOn 𝕜 s g) :\n    StrictConvexOn 𝕜 s (f - g) :=\n  (sub_eq_add_neg f g).symm ▸ hf.add hg.neg\n\n"}
{"name":"StrictConcaveOn.sub","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommGroup β\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf g : E → β\nhf : StrictConcaveOn 𝕜 s f\nhg : StrictConvexOn 𝕜 s g\n⊢ StrictConcaveOn 𝕜 s (HSub.hSub f g)","decl":"theorem StrictConcaveOn.sub (hf : StrictConcaveOn 𝕜 s f) (hg : StrictConvexOn 𝕜 s g) :\n    StrictConcaveOn 𝕜 s (f - g) :=\n  (sub_eq_add_neg f g).symm ▸ hf.add hg.neg\n\n"}
{"name":"ConvexOn.sub_strictConcaveOn","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommGroup β\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf g : E → β\nhf : ConvexOn 𝕜 s f\nhg : StrictConcaveOn 𝕜 s g\n⊢ StrictConvexOn 𝕜 s (HSub.hSub f g)","decl":"theorem ConvexOn.sub_strictConcaveOn (hf : ConvexOn 𝕜 s f) (hg : StrictConcaveOn 𝕜 s g) :\n    StrictConvexOn 𝕜 s (f - g) :=\n  (sub_eq_add_neg f g).symm ▸ hf.add_strictConvexOn hg.neg\n\n"}
{"name":"ConcaveOn.sub_strictConvexOn","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommGroup β\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf g : E → β\nhf : ConcaveOn 𝕜 s f\nhg : StrictConvexOn 𝕜 s g\n⊢ StrictConcaveOn 𝕜 s (HSub.hSub f g)","decl":"theorem ConcaveOn.sub_strictConvexOn (hf : ConcaveOn 𝕜 s f) (hg : StrictConvexOn 𝕜 s g) :\n    StrictConcaveOn 𝕜 s (f - g) :=\n  (sub_eq_add_neg f g).symm ▸ hf.add_strictConcaveOn hg.neg\n\n"}
{"name":"StrictConvexOn.sub_concaveOn","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommGroup β\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf g : E → β\nhf : StrictConvexOn 𝕜 s f\nhg : ConcaveOn 𝕜 s g\n⊢ StrictConvexOn 𝕜 s (HSub.hSub f g)","decl":"theorem StrictConvexOn.sub_concaveOn (hf : StrictConvexOn 𝕜 s f) (hg : ConcaveOn 𝕜 s g) :\n    StrictConvexOn 𝕜 s (f - g) :=\n  (sub_eq_add_neg f g).symm ▸ hf.add_convexOn hg.neg\n\n"}
{"name":"StrictConcaveOn.sub_convexOn","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommGroup β\ninst✝¹ : SMul 𝕜 E\ninst✝ : Module 𝕜 β\ns : Set E\nf g : E → β\nhf : StrictConcaveOn 𝕜 s f\nhg : ConvexOn 𝕜 s g\n⊢ StrictConcaveOn 𝕜 s (HSub.hSub f g)","decl":"theorem StrictConcaveOn.sub_convexOn (hf : StrictConcaveOn 𝕜 s f) (hg : ConvexOn 𝕜 s g) :\n    StrictConcaveOn 𝕜 s (f - g) :=\n  (sub_eq_add_neg f g).symm ▸ hf.add_concaveOn hg.neg\n\n"}
{"name":"StrictConvexOn.translate_right","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCancelCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\nhf : StrictConvexOn 𝕜 s f\nc : E\n⊢ StrictConvexOn 𝕜 (Set.preimage (fun z => HAdd.hAdd c z) s) (Function.comp f fun z => HAdd.hAdd c z)","decl":"/-- Right translation preserves strict convexity. -/\ntheorem StrictConvexOn.translate_right (hf : StrictConvexOn 𝕜 s f) (c : E) :\n    StrictConvexOn 𝕜 ((fun z => c + z) ⁻¹' s) (f ∘ fun z => c + z) :=\n  ⟨hf.1.translate_preimage_right _, fun x hx y hy hxy a b ha hb hab =>\n    calc\n      f (c + (a • x + b • y)) = f (a • (c + x) + b • (c + y)) := by\n        rw [smul_add, smul_add, add_add_add_comm, Convex.combo_self hab]\n      _ < a • f (c + x) + b • f (c + y) := hf.2 hx hy ((add_right_injective c).ne hxy) ha hb hab⟩\n\n"}
{"name":"StrictConcaveOn.translate_right","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCancelCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\nhf : StrictConcaveOn 𝕜 s f\nc : E\n⊢ StrictConcaveOn 𝕜 (Set.preimage (fun z => HAdd.hAdd c z) s) (Function.comp f fun z => HAdd.hAdd c z)","decl":"/-- Right translation preserves strict concavity. -/\ntheorem StrictConcaveOn.translate_right (hf : StrictConcaveOn 𝕜 s f) (c : E) :\n    StrictConcaveOn 𝕜 ((fun z => c + z) ⁻¹' s) (f ∘ fun z => c + z) :=\n  hf.dual.translate_right _\n\n"}
{"name":"StrictConvexOn.translate_left","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCancelCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\nhf : StrictConvexOn 𝕜 s f\nc : E\n⊢ StrictConvexOn 𝕜 (Set.preimage (fun z => HAdd.hAdd c z) s) (Function.comp f fun z => HAdd.hAdd z c)","decl":"/-- Left translation preserves strict convexity. -/\ntheorem StrictConvexOn.translate_left (hf : StrictConvexOn 𝕜 s f) (c : E) :\n    StrictConvexOn 𝕜 ((fun z => c + z) ⁻¹' s) (f ∘ fun z => z + c) := by\n  simpa only [add_comm] using hf.translate_right c\n\n"}
{"name":"StrictConcaveOn.translate_left","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : AddCancelCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : Module 𝕜 E\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\nhf : StrictConcaveOn 𝕜 s f\nc : E\n⊢ StrictConcaveOn 𝕜 (Set.preimage (fun z => HAdd.hAdd c z) s) (Function.comp f fun z => HAdd.hAdd z c)","decl":"/-- Left translation preserves strict concavity. -/\ntheorem StrictConcaveOn.translate_left (hf : StrictConcaveOn 𝕜 s f) (c : E) :\n    StrictConcaveOn 𝕜 ((fun z => c + z) ⁻¹' s) (f ∘ fun z => z + c) := by\n  simpa only [add_comm] using hf.translate_right c\n\n"}
{"name":"ConvexOn.smul","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedCommSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : OrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nc : 𝕜\nhc : LE.le 0 c\nhf : ConvexOn 𝕜 s f\n⊢ ConvexOn 𝕜 s fun x => HSMul.hSMul c (f x)","decl":"theorem ConvexOn.smul {c : 𝕜} (hc : 0 ≤ c) (hf : ConvexOn 𝕜 s f) : ConvexOn 𝕜 s fun x => c • f x :=\n  ⟨hf.1, fun x hx y hy a b ha hb hab =>\n    calc\n      c • f (a • x + b • y) ≤ c • (a • f x + b • f y) :=\n        smul_le_smul_of_nonneg_left (hf.2 hx hy ha hb hab) hc\n      _ = a • c • f x + b • c • f y := by rw [smul_add, smul_comm c, smul_comm c]⟩\n\n"}
{"name":"ConcaveOn.smul","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : OrderedCommSemiring 𝕜\ninst✝⁴ : AddCommMonoid E\ninst✝³ : OrderedAddCommMonoid β\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\ns : Set E\nf : E → β\nc : 𝕜\nhc : LE.le 0 c\nhf : ConcaveOn 𝕜 s f\n⊢ ConcaveOn 𝕜 s fun x => HSMul.hSMul c (f x)","decl":"theorem ConcaveOn.smul {c : 𝕜} (hc : 0 ≤ c) (hf : ConcaveOn 𝕜 s f) :\n    ConcaveOn 𝕜 s fun x => c • f x :=\n  hf.dual.smul hc\n\n"}
{"name":"ConvexOn.comp_affineMap","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\nβ : Type u_5\ninst✝⁶ : LinearOrderedField 𝕜\ninst✝⁵ : AddCommGroup E\ninst✝⁴ : AddCommGroup F\ninst✝³ : OrderedAddCommMonoid β\ninst✝² : Module 𝕜 E\ninst✝¹ : Module 𝕜 F\ninst✝ : SMul 𝕜 β\nf : F → β\ng : AffineMap 𝕜 E F\ns : Set F\nhf : ConvexOn 𝕜 s f\n⊢ ConvexOn 𝕜 (Set.preimage (⇑g) s) (Function.comp f ⇑g)","decl":"/-- If a function is convex on `s`, it remains convex when precomposed by an affine map. -/\ntheorem ConvexOn.comp_affineMap {f : F → β} (g : E →ᵃ[𝕜] F) {s : Set F} (hf : ConvexOn 𝕜 s f) :\n    ConvexOn 𝕜 (g ⁻¹' s) (f ∘ g) :=\n  ⟨hf.1.affine_preimage _, fun x hx y hy a b ha hb hab =>\n    calc\n      (f ∘ g) (a • x + b • y) = f (g (a • x + b • y)) := rfl\n      _ = f (a • g x + b • g y) := by rw [Convex.combo_affine_apply hab]\n      _ ≤ a • f (g x) + b • f (g y) := hf.2 hx hy ha hb hab⟩\n\n"}
{"name":"ConcaveOn.comp_affineMap","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\nβ : Type u_5\ninst✝⁶ : LinearOrderedField 𝕜\ninst✝⁵ : AddCommGroup E\ninst✝⁴ : AddCommGroup F\ninst✝³ : OrderedAddCommMonoid β\ninst✝² : Module 𝕜 E\ninst✝¹ : Module 𝕜 F\ninst✝ : SMul 𝕜 β\nf : F → β\ng : AffineMap 𝕜 E F\ns : Set F\nhf : ConcaveOn 𝕜 s f\n⊢ ConcaveOn 𝕜 (Set.preimage (⇑g) s) (Function.comp f ⇑g)","decl":"/-- If a function is concave on `s`, it remains concave when precomposed by an affine map. -/\ntheorem ConcaveOn.comp_affineMap {f : F → β} (g : E →ᵃ[𝕜] F) {s : Set F} (hf : ConcaveOn 𝕜 s f) :\n    ConcaveOn 𝕜 (g ⁻¹' s) (f ∘ g) :=\n  hf.dual.comp_affineMap g\n\n"}
{"name":"convexOn_iff_div","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : LinearOrderedField 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\n⊢ Iff (ConvexOn 𝕜 s f) (And (Convex 𝕜 s) (∀ ⦃x : E⦄, Membership.mem s x → ∀ ⦃y : E⦄, Membership.mem s y → ∀ ⦃a b : 𝕜⦄, LE.le 0 a → LE.le 0 b → LT.lt 0 (HAdd.hAdd a b) → LE.le (f (HAdd.hAdd (HSMul.hSMul (HDiv.hDiv a (HAdd.hAdd a b)) x) (HSMul.hSMul (HDiv.hDiv b (HAdd.hAdd a b)) y))) (HAdd.hAdd (HSMul.hSMul (HDiv.hDiv a (HAdd.hAdd a b)) (f x)) (HSMul.hSMul (HDiv.hDiv b (HAdd.hAdd a b)) (f y)))))","decl":"theorem convexOn_iff_div {f : E → β} :\n    ConvexOn 𝕜 s f ↔\n      Convex 𝕜 s ∧ ∀ ⦃x⦄, x ∈ s → ∀ ⦃y⦄, y ∈ s → ∀ ⦃a b : 𝕜⦄, 0 ≤ a → 0 ≤ b → 0 < a + b →\n        f ((a / (a + b)) • x + (b / (a + b)) • y) ≤ (a / (a + b)) • f x + (b / (a + b)) • f y :=\n  and_congr Iff.rfl ⟨by\n    intro h x hx y hy a b ha hb hab\n    apply h hx hy (div_nonneg ha hab.le) (div_nonneg hb hab.le)\n    rw [← add_div, div_self hab.ne'], by\n    intro h x hx y hy a b ha hb hab\n    simpa [hab, zero_lt_one] using h hx hy ha hb⟩\n\n"}
{"name":"concaveOn_iff_div","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : LinearOrderedField 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\n⊢ Iff (ConcaveOn 𝕜 s f) (And (Convex 𝕜 s) (∀ ⦃x : E⦄, Membership.mem s x → ∀ ⦃y : E⦄, Membership.mem s y → ∀ ⦃a b : 𝕜⦄, LE.le 0 a → LE.le 0 b → LT.lt 0 (HAdd.hAdd a b) → LE.le (HAdd.hAdd (HSMul.hSMul (HDiv.hDiv a (HAdd.hAdd a b)) (f x)) (HSMul.hSMul (HDiv.hDiv b (HAdd.hAdd a b)) (f y))) (f (HAdd.hAdd (HSMul.hSMul (HDiv.hDiv a (HAdd.hAdd a b)) x) (HSMul.hSMul (HDiv.hDiv b (HAdd.hAdd a b)) y)))))","decl":"theorem concaveOn_iff_div {f : E → β} :\n    ConcaveOn 𝕜 s f ↔\n      Convex 𝕜 s ∧ ∀ ⦃x⦄, x ∈ s → ∀ ⦃y⦄, y ∈ s → ∀ ⦃a b : 𝕜⦄, 0 ≤ a → 0 ≤ b → 0 < a + b →\n        (a / (a + b)) • f x + (b / (a + b)) • f y ≤ f ((a / (a + b)) • x + (b / (a + b)) • y) :=\n  convexOn_iff_div (β := βᵒᵈ)\n\n"}
{"name":"strictConvexOn_iff_div","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : LinearOrderedField 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\n⊢ Iff (StrictConvexOn 𝕜 s f) (And (Convex 𝕜 s) (∀ ⦃x : E⦄, Membership.mem s x → ∀ ⦃y : E⦄, Membership.mem s y → Ne x y → ∀ ⦃a b : 𝕜⦄, LT.lt 0 a → LT.lt 0 b → LT.lt (f (HAdd.hAdd (HSMul.hSMul (HDiv.hDiv a (HAdd.hAdd a b)) x) (HSMul.hSMul (HDiv.hDiv b (HAdd.hAdd a b)) y))) (HAdd.hAdd (HSMul.hSMul (HDiv.hDiv a (HAdd.hAdd a b)) (f x)) (HSMul.hSMul (HDiv.hDiv b (HAdd.hAdd a b)) (f y)))))","decl":"theorem strictConvexOn_iff_div {f : E → β} :\n    StrictConvexOn 𝕜 s f ↔\n      Convex 𝕜 s ∧ ∀ ⦃x⦄, x ∈ s → ∀ ⦃y⦄, y ∈ s → x ≠ y → ∀ ⦃a b : 𝕜⦄, 0 < a → 0 < b →\n        f ((a / (a + b)) • x + (b / (a + b)) • y) < (a / (a + b)) • f x + (b / (a + b)) • f y :=\n  and_congr Iff.rfl ⟨by\n    intro h x hx y hy hxy a b ha hb\n    have hab := add_pos ha hb\n    apply h hx hy hxy (div_pos ha hab) (div_pos hb hab)\n    rw [← add_div, div_self hab.ne'], by\n    intro h x hx y hy hxy a b ha hb hab\n    simpa [hab, zero_lt_one] using h hx hy hxy ha hb⟩\n\n"}
{"name":"strictConcaveOn_iff_div","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁴ : LinearOrderedField 𝕜\ninst✝³ : AddCommMonoid E\ninst✝² : OrderedAddCommMonoid β\ninst✝¹ : SMul 𝕜 E\ninst✝ : SMul 𝕜 β\ns : Set E\nf : E → β\n⊢ Iff (StrictConcaveOn 𝕜 s f) (And (Convex 𝕜 s) (∀ ⦃x : E⦄, Membership.mem s x → ∀ ⦃y : E⦄, Membership.mem s y → Ne x y → ∀ ⦃a b : 𝕜⦄, LT.lt 0 a → LT.lt 0 b → LT.lt (HAdd.hAdd (HSMul.hSMul (HDiv.hDiv a (HAdd.hAdd a b)) (f x)) (HSMul.hSMul (HDiv.hDiv b (HAdd.hAdd a b)) (f y))) (f (HAdd.hAdd (HSMul.hSMul (HDiv.hDiv a (HAdd.hAdd a b)) x) (HSMul.hSMul (HDiv.hDiv b (HAdd.hAdd a b)) y)))))","decl":"theorem strictConcaveOn_iff_div {f : E → β} :\n    StrictConcaveOn 𝕜 s f ↔\n      Convex 𝕜 s ∧ ∀ ⦃x⦄, x ∈ s → ∀ ⦃y⦄, y ∈ s → x ≠ y → ∀ ⦃a b : 𝕜⦄, 0 < a → 0 < b →\n        (a / (a + b)) • f x + (b / (a + b)) • f y < f ((a / (a + b)) • x + (b / (a + b)) • y) :=\n  strictConvexOn_iff_div (β := βᵒᵈ)\n\n"}
{"name":"OrderIso.strictConvexOn_symm","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nα : Type u_4\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : OrderedAddCommMonoid α\ninst✝² : SMul 𝕜 α\ninst✝¹ : OrderedAddCommMonoid β\ninst✝ : SMul 𝕜 β\nf : OrderIso α β\nhf : StrictConcaveOn 𝕜 Set.univ ⇑f\n⊢ StrictConvexOn 𝕜 Set.univ ⇑f.symm","decl":"theorem OrderIso.strictConvexOn_symm (f : α ≃o β) (hf : StrictConcaveOn 𝕜 univ f) :\n    StrictConvexOn 𝕜 univ f.symm := by\n  refine ⟨convex_univ, fun x _ y _ hxy a b ha hb hab => ?_⟩\n  obtain ⟨x', hx''⟩ := f.surjective.exists.mp ⟨x, rfl⟩\n  obtain ⟨y', hy''⟩ := f.surjective.exists.mp ⟨y, rfl⟩\n  have hxy' : x' ≠ y' := by rw [← f.injective.ne_iff, ← hx'', ← hy'']; exact hxy\n  simp only [hx'', hy'', OrderIso.symm_apply_apply, gt_iff_lt]\n  rw [← f.lt_iff_lt, OrderIso.apply_symm_apply]\n  exact hf.2 (by simp : x' ∈ univ) (by simp : y' ∈ univ) hxy' ha hb hab\n\n"}
{"name":"OrderIso.convexOn_symm","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nα : Type u_4\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : OrderedAddCommMonoid α\ninst✝² : SMul 𝕜 α\ninst✝¹ : OrderedAddCommMonoid β\ninst✝ : SMul 𝕜 β\nf : OrderIso α β\nhf : ConcaveOn 𝕜 Set.univ ⇑f\n⊢ ConvexOn 𝕜 Set.univ ⇑f.symm","decl":"theorem OrderIso.convexOn_symm (f : α ≃o β) (hf : ConcaveOn 𝕜 univ f) :\n    ConvexOn 𝕜 univ f.symm := by\n  refine ⟨convex_univ, fun x _ y _ a b ha hb hab => ?_⟩\n  obtain ⟨x', hx''⟩ := f.surjective.exists.mp ⟨x, rfl⟩\n  obtain ⟨y', hy''⟩ := f.surjective.exists.mp ⟨y, rfl⟩\n  simp only [hx'', hy'', OrderIso.symm_apply_apply, gt_iff_lt]\n  rw [← f.le_iff_le, OrderIso.apply_symm_apply]\n  exact hf.2 (by simp : x' ∈ univ) (by simp : y' ∈ univ) ha hb hab\n\n"}
{"name":"OrderIso.strictConcaveOn_symm","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nα : Type u_4\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : OrderedAddCommMonoid α\ninst✝² : SMul 𝕜 α\ninst✝¹ : OrderedAddCommMonoid β\ninst✝ : SMul 𝕜 β\nf : OrderIso α β\nhf : StrictConvexOn 𝕜 Set.univ ⇑f\n⊢ StrictConcaveOn 𝕜 Set.univ ⇑f.symm","decl":"theorem OrderIso.strictConcaveOn_symm (f : α ≃o β) (hf : StrictConvexOn 𝕜 univ f) :\n    StrictConcaveOn 𝕜 univ f.symm := by\n  refine ⟨convex_univ, fun x _ y _ hxy a b ha hb hab => ?_⟩\n  obtain ⟨x', hx''⟩ := f.surjective.exists.mp ⟨x, rfl⟩\n  obtain ⟨y', hy''⟩ := f.surjective.exists.mp ⟨y, rfl⟩\n  have hxy' : x' ≠ y' := by rw [← f.injective.ne_iff, ← hx'', ← hy'']; exact hxy\n  simp only [hx'', hy'', OrderIso.symm_apply_apply, gt_iff_lt]\n  rw [← f.lt_iff_lt, OrderIso.apply_symm_apply]\n  exact hf.2 (by simp : x' ∈ univ) (by simp : y' ∈ univ) hxy' ha hb hab\n\n"}
{"name":"OrderIso.concaveOn_symm","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nα : Type u_4\nβ : Type u_5\ninst✝⁴ : OrderedSemiring 𝕜\ninst✝³ : OrderedAddCommMonoid α\ninst✝² : SMul 𝕜 α\ninst✝¹ : OrderedAddCommMonoid β\ninst✝ : SMul 𝕜 β\nf : OrderIso α β\nhf : ConvexOn 𝕜 Set.univ ⇑f\n⊢ ConcaveOn 𝕜 Set.univ ⇑f.symm","decl":"theorem OrderIso.concaveOn_symm (f : α ≃o β) (hf : ConvexOn 𝕜 univ f) :\n    ConcaveOn 𝕜 univ f.symm := by\n  refine ⟨convex_univ, fun x _ y _ a b ha hb hab => ?_⟩\n  obtain ⟨x', hx''⟩ := f.surjective.exists.mp ⟨x, rfl⟩\n  obtain ⟨y', hy''⟩ := f.surjective.exists.mp ⟨y, rfl⟩\n  simp only [hx'', hy'', OrderIso.symm_apply_apply, gt_iff_lt]\n  rw [← f.le_iff_le, OrderIso.apply_symm_apply]\n  exact hf.2 (by simp : x' ∈ univ) (by simp : y' ∈ univ) ha hb hab\n\n"}
{"name":"StrictConvexOn.eq_of_isMinOn","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : LinearOrderedField 𝕜\ninst✝⁴ : OrderedAddCommMonoid β\ninst✝³ : AddCommMonoid E\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nf : E → β\ns : Set E\nx y : E\nhf : StrictConvexOn 𝕜 s f\nhfx : IsMinOn f s x\nhfy : IsMinOn f s y\nhx : Membership.mem s x\nhy : Membership.mem s y\n⊢ Eq x y","decl":"/-- A strictly convex function admits at most one global minimum. -/\nlemma StrictConvexOn.eq_of_isMinOn (hf : StrictConvexOn 𝕜 s f) (hfx : IsMinOn f s x)\n    (hfy : IsMinOn f s y) (hx : x ∈ s) (hy : y ∈ s) : x = y := by\n  by_contra hxy\n  let z := (2 : 𝕜)⁻¹ • x + (2 : 𝕜)⁻¹ • y\n  have hz : z ∈ s := hf.1 hx hy (by norm_num) (by norm_num) <| by norm_num\n  refine lt_irrefl (f z) ?_\n  calc\n    f z < _ := hf.2 hx hy hxy (by norm_num) (by norm_num) <| by norm_num\n    _ ≤ (2 : 𝕜)⁻¹ • f z + (2 : 𝕜)⁻¹ • f z := by gcongr; exacts [hfx hz, hfy hz]\n    _ = f z := by rw [← _root_.add_smul]; norm_num\n\n"}
{"name":"StrictConcaveOn.eq_of_isMaxOn","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nE : Type u_2\nβ : Type u_5\ninst✝⁵ : LinearOrderedField 𝕜\ninst✝⁴ : OrderedAddCommMonoid β\ninst✝³ : AddCommMonoid E\ninst✝² : SMul 𝕜 E\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nf : E → β\ns : Set E\nx y : E\nhf : StrictConcaveOn 𝕜 s f\nhfx : IsMaxOn f s x\nhfy : IsMaxOn f s y\nhx : Membership.mem s x\nhy : Membership.mem s y\n⊢ Eq x y","decl":"/-- A strictly concave function admits at most one global maximum. -/\nlemma StrictConcaveOn.eq_of_isMaxOn (hf : StrictConcaveOn 𝕜 s f) (hfx : IsMaxOn f s x)\n    (hfy : IsMaxOn f s y) (hx : x ∈ s) (hy : y ∈ s) : x = y :=\n  hf.dual.eq_of_isMinOn hfx hfy hx hy\n\n"}
{"name":"ConvexOn.le_right_of_left_le''","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nβ : Type u_5\ninst✝³ : LinearOrderedField 𝕜\ninst✝² : LinearOrderedCancelAddCommMonoid β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nx y z : 𝕜\ns : Set 𝕜\nf : 𝕜 → β\nhf : ConvexOn 𝕜 s f\nhx : Membership.mem s x\nhz : Membership.mem s z\nhxy : LT.lt x y\nhyz : LE.le y z\nh : LE.le (f x) (f y)\n⊢ LE.le (f y) (f z)","decl":"theorem ConvexOn.le_right_of_left_le'' (hf : ConvexOn 𝕜 s f) (hx : x ∈ s) (hz : z ∈ s) (hxy : x < y)\n    (hyz : y ≤ z) (h : f x ≤ f y) : f y ≤ f z :=\n  hyz.eq_or_lt.elim (fun hyz => (congr_arg f hyz).le) fun hyz =>\n    hf.le_right_of_left_le hx hz (Ioo_subset_openSegment ⟨hxy, hyz⟩) h\n\n"}
{"name":"ConvexOn.le_left_of_right_le''","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nβ : Type u_5\ninst✝³ : LinearOrderedField 𝕜\ninst✝² : LinearOrderedCancelAddCommMonoid β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nx y z : 𝕜\ns : Set 𝕜\nf : 𝕜 → β\nhf : ConvexOn 𝕜 s f\nhx : Membership.mem s x\nhz : Membership.mem s z\nhxy : LE.le x y\nhyz : LT.lt y z\nh : LE.le (f z) (f y)\n⊢ LE.le (f y) (f x)","decl":"theorem ConvexOn.le_left_of_right_le'' (hf : ConvexOn 𝕜 s f) (hx : x ∈ s) (hz : z ∈ s) (hxy : x ≤ y)\n    (hyz : y < z) (h : f z ≤ f y) : f y ≤ f x :=\n  hxy.eq_or_lt.elim (fun hxy => (congr_arg f hxy).ge) fun hxy =>\n    hf.le_left_of_right_le hx hz (Ioo_subset_openSegment ⟨hxy, hyz⟩) h\n\n"}
{"name":"ConcaveOn.right_le_of_le_left''","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nβ : Type u_5\ninst✝³ : LinearOrderedField 𝕜\ninst✝² : LinearOrderedCancelAddCommMonoid β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nx y z : 𝕜\ns : Set 𝕜\nf : 𝕜 → β\nhf : ConcaveOn 𝕜 s f\nhx : Membership.mem s x\nhz : Membership.mem s z\nhxy : LT.lt x y\nhyz : LE.le y z\nh : LE.le (f y) (f x)\n⊢ LE.le (f z) (f y)","decl":"theorem ConcaveOn.right_le_of_le_left'' (hf : ConcaveOn 𝕜 s f) (hx : x ∈ s) (hz : z ∈ s)\n    (hxy : x < y) (hyz : y ≤ z) (h : f y ≤ f x) : f z ≤ f y :=\n  hf.dual.le_right_of_left_le'' hx hz hxy hyz h\n\n"}
{"name":"ConcaveOn.left_le_of_le_right''","module":"Mathlib.Analysis.Convex.Function","initialProofState":"𝕜 : Type u_1\nβ : Type u_5\ninst✝³ : LinearOrderedField 𝕜\ninst✝² : LinearOrderedCancelAddCommMonoid β\ninst✝¹ : Module 𝕜 β\ninst✝ : OrderedSMul 𝕜 β\nx y z : 𝕜\ns : Set 𝕜\nf : 𝕜 → β\nhf : ConcaveOn 𝕜 s f\nhx : Membership.mem s x\nhz : Membership.mem s z\nhxy : LE.le x y\nhyz : LT.lt y z\nh : LE.le (f y) (f z)\n⊢ LE.le (f x) (f y)","decl":"theorem ConcaveOn.left_le_of_le_right'' (hf : ConcaveOn 𝕜 s f) (hx : x ∈ s) (hz : z ∈ s)\n    (hxy : x ≤ y) (hyz : y < z) (h : f y ≤ f z) : f x ≤ f y :=\n  hf.dual.le_left_of_right_le'' hx hz hxy hyz h\n\n"}
