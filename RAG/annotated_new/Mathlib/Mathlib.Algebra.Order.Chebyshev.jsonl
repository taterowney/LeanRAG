{"name":"MonovaryOn.sum_smul_sum_le_card_smul_sum","module":"Mathlib.Algebra.Order.Chebyshev","initialProofState":"ι : Type u_1\nα : Type u_2\nβ : Type u_3\ninst✝⁴ : LinearOrderedSemiring α\ninst✝³ : ExistsAddOfLE α\ninst✝² : LinearOrderedCancelAddCommMonoid β\ninst✝¹ : Module α β\ninst✝ : OrderedSMul α β\ns : Finset ι\nf : ι → α\ng : ι → β\nhfg : MonovaryOn f g ↑s\n⊢ LE.le (HSMul.hSMul (s.sum fun i => f i) (s.sum fun i => g i)) (HSMul.hSMul s.card (s.sum fun i => HSMul.hSMul (f i) (g i)))","decl":"/-- **Chebyshev's Sum Inequality**: When `f` and `g` monovary together (eg they are both\nmonotone/antitone), the scalar product of their sum is less than the size of the set times their\nscalar product. -/\ntheorem MonovaryOn.sum_smul_sum_le_card_smul_sum (hfg : MonovaryOn f g s) :\n    (∑ i ∈ s, f i) • ∑ i ∈ s, g i ≤ #s • ∑ i ∈ s, f i • g i := by\n  classical\n  obtain ⟨σ, hσ, hs⟩ := s.countable_toSet.exists_cycleOn\n  rw [← card_range #s, sum_smul_sum_eq_sum_perm hσ]\n  exact sum_le_card_nsmul _ _ _ fun n _ ↦\n    hfg.sum_smul_comp_perm_le_sum_smul fun x hx ↦ hs fun h ↦ hx <| IsFixedPt.perm_pow h _\n\n"}
{"name":"AntivaryOn.card_smul_sum_le_sum_smul_sum","module":"Mathlib.Algebra.Order.Chebyshev","initialProofState":"ι : Type u_1\nα : Type u_2\nβ : Type u_3\ninst✝⁴ : LinearOrderedSemiring α\ninst✝³ : ExistsAddOfLE α\ninst✝² : LinearOrderedCancelAddCommMonoid β\ninst✝¹ : Module α β\ninst✝ : OrderedSMul α β\ns : Finset ι\nf : ι → α\ng : ι → β\nhfg : AntivaryOn f g ↑s\n⊢ LE.le (HSMul.hSMul s.card (s.sum fun i => HSMul.hSMul (f i) (g i))) (HSMul.hSMul (s.sum fun i => f i) (s.sum fun i => g i))","decl":"/-- **Chebyshev's Sum Inequality**: When `f` and `g` antivary together (eg one is monotone, the\nother is antitone), the scalar product of their sum is less than the size of the set times their\nscalar product. -/\ntheorem AntivaryOn.card_smul_sum_le_sum_smul_sum (hfg : AntivaryOn f g s) :\n    #s • ∑ i ∈ s, f i • g i ≤ (∑ i ∈ s, f i) • ∑ i ∈ s, g i :=\n  hfg.dual_right.sum_smul_sum_le_card_smul_sum\n\n"}
{"name":"Monovary.sum_smul_sum_le_card_smul_sum","module":"Mathlib.Algebra.Order.Chebyshev","initialProofState":"ι : Type u_1\nα : Type u_2\nβ : Type u_3\ninst✝⁵ : LinearOrderedSemiring α\ninst✝⁴ : ExistsAddOfLE α\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : Module α β\ninst✝¹ : OrderedSMul α β\nf : ι → α\ng : ι → β\ninst✝ : Fintype ι\nhfg : Monovary f g\n⊢ LE.le (HSMul.hSMul (Finset.univ.sum fun i => f i) (Finset.univ.sum fun i => g i)) (HSMul.hSMul (Fintype.card ι) (Finset.univ.sum fun i => HSMul.hSMul (f i) (g i)))","decl":"/-- **Chebyshev's Sum Inequality**: When `f` and `g` monovary together (eg they are both\nmonotone/antitone), the scalar product of their sum is less than the size of the set times their\nscalar product. -/\ntheorem Monovary.sum_smul_sum_le_card_smul_sum (hfg : Monovary f g) :\n    (∑ i, f i) • ∑ i, g i ≤ Fintype.card ι • ∑ i, f i • g i :=\n  (hfg.monovaryOn _).sum_smul_sum_le_card_smul_sum\n\n"}
{"name":"Antivary.card_smul_sum_le_sum_smul_sum","module":"Mathlib.Algebra.Order.Chebyshev","initialProofState":"ι : Type u_1\nα : Type u_2\nβ : Type u_3\ninst✝⁵ : LinearOrderedSemiring α\ninst✝⁴ : ExistsAddOfLE α\ninst✝³ : LinearOrderedCancelAddCommMonoid β\ninst✝² : Module α β\ninst✝¹ : OrderedSMul α β\nf : ι → α\ng : ι → β\ninst✝ : Fintype ι\nhfg : Antivary f g\n⊢ LE.le (HSMul.hSMul (Fintype.card ι) (Finset.univ.sum fun i => HSMul.hSMul (f i) (g i))) (HSMul.hSMul (Finset.univ.sum fun i => f i) (Finset.univ.sum fun i => g i))","decl":"/-- **Chebyshev's Sum Inequality**: When `f` and `g` antivary together (eg one is monotone, the\nother is antitone), the scalar product of their sum is less than the size of the set times their\nscalar product. -/\ntheorem Antivary.card_smul_sum_le_sum_smul_sum (hfg : Antivary f g) :\n    Fintype.card ι • ∑ i, f i • g i ≤ (∑ i, f i) • ∑ i, g i :=\n  (hfg.dual_right.monovaryOn _).sum_smul_sum_le_card_smul_sum\n\n"}
{"name":"MonovaryOn.sum_mul_sum_le_card_mul_sum","module":"Mathlib.Algebra.Order.Chebyshev","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝¹ : LinearOrderedSemiring α\ninst✝ : ExistsAddOfLE α\ns : Finset ι\nf g : ι → α\nhfg : MonovaryOn f g ↑s\n⊢ LE.le (HMul.hMul (s.sum fun i => f i) (s.sum fun i => g i)) (HMul.hMul (↑s.card) (s.sum fun i => HMul.hMul (f i) (g i)))","decl":"/-- **Chebyshev's Sum Inequality**: When `f` and `g` monovary together (eg they are both\nmonotone/antitone), the product of their sum is less than the size of the set times their scalar\nproduct. -/\ntheorem MonovaryOn.sum_mul_sum_le_card_mul_sum (hfg : MonovaryOn f g s) :\n    (∑ i ∈ s, f i) * ∑ i ∈ s, g i ≤ #s * ∑ i ∈ s, f i * g i := by\n  rw [← nsmul_eq_mul]\n  exact hfg.sum_smul_sum_le_card_smul_sum\n\n"}
{"name":"AntivaryOn.card_mul_sum_le_sum_mul_sum","module":"Mathlib.Algebra.Order.Chebyshev","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝¹ : LinearOrderedSemiring α\ninst✝ : ExistsAddOfLE α\ns : Finset ι\nf g : ι → α\nhfg : AntivaryOn f g ↑s\n⊢ LE.le (HMul.hMul (↑s.card) (s.sum fun i => HMul.hMul (f i) (g i))) (HMul.hMul (s.sum fun i => f i) (s.sum fun i => g i))","decl":"/-- **Chebyshev's Sum Inequality**: When `f` and `g` antivary together (eg one is monotone, the\nother is antitone), the product of their sum is greater than the size of the set times their scalar\nproduct. -/\ntheorem AntivaryOn.card_mul_sum_le_sum_mul_sum (hfg : AntivaryOn f g s) :\n    (#s : α) * ∑ i ∈ s, f i * g i ≤ (∑ i ∈ s, f i) * ∑ i ∈ s, g i := by\n  rw [← nsmul_eq_mul]\n  exact hfg.card_smul_sum_le_sum_smul_sum\n\n"}
{"name":"pow_sum_le_card_mul_sum_pow","module":"Mathlib.Algebra.Order.Chebyshev","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝¹ : LinearOrderedSemiring α\ninst✝ : ExistsAddOfLE α\ns : Finset ι\nf : ι → α\nhf : ∀ (i : ι), Membership.mem s i → LE.le 0 (f i)\nn : Nat\n⊢ LE.le (HPow.hPow (s.sum fun i => f i) (HAdd.hAdd n 1)) (HMul.hMul (HPow.hPow (↑s.card) n) (s.sum fun i => HPow.hPow (f i) (HAdd.hAdd n 1)))","decl":"/-- Special case of **Jensen's inequality** for sums of powers. -/\nlemma pow_sum_le_card_mul_sum_pow (hf : ∀ i ∈ s, 0 ≤ f i) :\n    ∀ n, (∑ i ∈ s, f i) ^ (n + 1) ≤ (#s : α) ^ n * ∑ i ∈ s, f i ^ (n + 1)\n  | 0 => by simp\n  | n + 1 =>\n    calc\n      _ = (∑ i ∈ s, f i) ^ (n + 1) * ∑ i ∈ s, f i := by rw [pow_succ]\n      _ ≤ (#s ^ n * ∑ i ∈ s, f i ^ (n + 1)) * ∑ i ∈ s, f i := by\n        gcongr\n        exacts [sum_nonneg hf, pow_sum_le_card_mul_sum_pow hf _]\n      _ = #s ^ n * ((∑ i ∈ s, f i ^ (n + 1)) * ∑ i ∈ s, f i) := by rw [mul_assoc]\n      _ ≤ #s ^ n * (#s * ∑ i ∈ s, f i ^ (n + 1) * f i) := by\n        gcongr _ * ?_\n        exact ((monovaryOn_self ..).pow_left₀ hf _).sum_mul_sum_le_card_mul_sum\n      _ = _ := by simp_rw [← mul_assoc, ← pow_succ]\n\n"}
{"name":"sq_sum_le_card_mul_sum_sq","module":"Mathlib.Algebra.Order.Chebyshev","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝¹ : LinearOrderedSemiring α\ninst✝ : ExistsAddOfLE α\ns : Finset ι\nf : ι → α\n⊢ LE.le (HPow.hPow (s.sum fun i => f i) 2) (HMul.hMul (↑s.card) (s.sum fun i => HPow.hPow (f i) 2))","decl":"/-- Special case of **Chebyshev's Sum Inequality** or the **Cauchy-Schwarz Inequality**: The square\nof the sum is less than the size of the set times the sum of the squares. -/\ntheorem sq_sum_le_card_mul_sum_sq : (∑ i ∈ s, f i) ^ 2 ≤ #s * ∑ i ∈ s, f i ^ 2 := by\n  simp_rw [sq]\n  exact (monovaryOn_self _ _).sum_mul_sum_le_card_mul_sum\n\n"}
{"name":"Monovary.sum_mul_sum_le_card_mul_sum","module":"Mathlib.Algebra.Order.Chebyshev","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝² : LinearOrderedSemiring α\ninst✝¹ : ExistsAddOfLE α\nf g : ι → α\ninst✝ : Fintype ι\nhfg : Monovary f g\n⊢ LE.le (HMul.hMul (Finset.univ.sum fun i => f i) (Finset.univ.sum fun i => g i)) (HMul.hMul (↑(Fintype.card ι)) (Finset.univ.sum fun i => HMul.hMul (f i) (g i)))","decl":"/-- **Chebyshev's Sum Inequality**: When `f` and `g` monovary together (eg they are both\nmonotone/antitone), the product of their sum is less than the size of the set times their scalar\nproduct. -/\ntheorem Monovary.sum_mul_sum_le_card_mul_sum (hfg : Monovary f g) :\n    (∑ i, f i) * ∑ i, g i ≤ Fintype.card ι * ∑ i, f i * g i :=\n  (hfg.monovaryOn _).sum_mul_sum_le_card_mul_sum\n\n"}
{"name":"Antivary.card_mul_sum_le_sum_mul_sum","module":"Mathlib.Algebra.Order.Chebyshev","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝² : LinearOrderedSemiring α\ninst✝¹ : ExistsAddOfLE α\nf g : ι → α\ninst✝ : Fintype ι\nhfg : Antivary f g\n⊢ LE.le (HMul.hMul (↑(Fintype.card ι)) (Finset.univ.sum fun i => HMul.hMul (f i) (g i))) (HMul.hMul (Finset.univ.sum fun i => f i) (Finset.univ.sum fun i => g i))","decl":"/-- **Chebyshev's Sum Inequality**: When `f` and `g` antivary together (eg one is monotone, the\nother is antitone), the product of their sum is less than the size of the set times their scalar\nproduct. -/\ntheorem Antivary.card_mul_sum_le_sum_mul_sum (hfg : Antivary f g) :\n    Fintype.card ι * ∑ i, f i * g i ≤ (∑ i, f i) * ∑ i, g i :=\n  (hfg.antivaryOn _).card_mul_sum_le_sum_mul_sum\n\n"}
{"name":"pow_sum_div_card_le_sum_pow","module":"Mathlib.Algebra.Order.Chebyshev","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝¹ : LinearOrderedSemifield α\ninst✝ : ExistsAddOfLE α\ns : Finset ι\nf : ι → α\nhf : ∀ (i : ι), Membership.mem s i → LE.le 0 (f i)\nn : Nat\n⊢ LE.le (HDiv.hDiv (HPow.hPow (s.sum fun i => f i) (HAdd.hAdd n 1)) (HPow.hPow (↑s.card) n)) (s.sum fun i => HPow.hPow (f i) (HAdd.hAdd n 1))","decl":"/-- Special case of **Jensen's inequality** for sums of powers. -/\nlemma pow_sum_div_card_le_sum_pow (hf : ∀ i ∈ s, 0 ≤ f i) (n : ℕ) :\n    (∑ i ∈ s, f i) ^ (n + 1) / #s ^ n ≤ ∑ i ∈ s, f i ^ (n + 1) := by\n  obtain rfl | hs := s.eq_empty_or_nonempty\n  · simp\n  rw [div_le_iff₀' (by positivity)]\n  exact pow_sum_le_card_mul_sum_pow hf _\n\n"}
{"name":"sum_div_card_sq_le_sum_sq_div_card","module":"Mathlib.Algebra.Order.Chebyshev","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝¹ : LinearOrderedSemifield α\ninst✝ : ExistsAddOfLE α\ns : Finset ι\nf : ι → α\n⊢ LE.le (HPow.hPow (HDiv.hDiv (s.sum fun i => f i) ↑s.card) 2) (HDiv.hDiv (s.sum fun i => HPow.hPow (f i) 2) ↑s.card)","decl":"theorem sum_div_card_sq_le_sum_sq_div_card :\n    ((∑ i ∈ s, f i) / #s) ^ 2 ≤ (∑ i ∈ s, f i ^ 2) / #s := by\n  obtain rfl | hs := s.eq_empty_or_nonempty\n  · simp\n  rw [div_pow, div_le_div_iff₀ (by positivity) (by positivity), sq (#s : α), mul_left_comm,\n    ← mul_assoc]\n  exact mul_le_mul_of_nonneg_right sq_sum_le_card_mul_sum_sq (by positivity)\n"}
