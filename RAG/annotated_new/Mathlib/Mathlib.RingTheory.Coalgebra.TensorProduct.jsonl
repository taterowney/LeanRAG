{"name":"Coalgebra.TensorProduct.map_tmul","module":"Mathlib.RingTheory.Coalgebra.TensorProduct","initialProofState":"R M N P Q : Type u\ninst✝¹² : CommRing R\ninst✝¹¹ : AddCommGroup M\ninst✝¹⁰ : AddCommGroup N\ninst✝⁹ : AddCommGroup P\ninst✝⁸ : AddCommGroup Q\ninst✝⁷ : Module R M\ninst✝⁶ : Module R N\ninst✝⁵ : Module R P\ninst✝⁴ : Module R Q\ninst✝³ : Coalgebra R M\ninst✝² : Coalgebra R N\ninst✝¹ : Coalgebra R P\ninst✝ : Coalgebra R Q\nf : CoalgHom R M N\ng : CoalgHom R P Q\nx : M\ny : P\n⊢ Eq ((Coalgebra.TensorProduct.map f g) (TensorProduct.tmul R x y)) (TensorProduct.tmul R (f x) (g y))","decl":"@[simp]\ntheorem map_tmul (f : M →ₗc[R] N) (g : P →ₗc[R] Q) (x : M) (y : P) :\n    map f g (x ⊗ₜ y) = f x ⊗ₜ g y :=\n  rfl\n\n"}
{"name":"Coalgebra.TensorProduct.map_toLinearMap","module":"Mathlib.RingTheory.Coalgebra.TensorProduct","initialProofState":"R M N P Q : Type u\ninst✝¹² : CommRing R\ninst✝¹¹ : AddCommGroup M\ninst✝¹⁰ : AddCommGroup N\ninst✝⁹ : AddCommGroup P\ninst✝⁸ : AddCommGroup Q\ninst✝⁷ : Module R M\ninst✝⁶ : Module R N\ninst✝⁵ : Module R P\ninst✝⁴ : Module R Q\ninst✝³ : Coalgebra R M\ninst✝² : Coalgebra R N\ninst✝¹ : Coalgebra R P\ninst✝ : Coalgebra R Q\nf : CoalgHom R M N\ng : CoalgHom R P Q\n⊢ Eq (↑(Coalgebra.TensorProduct.map f g)) (TensorProduct.map ↑f ↑g)","decl":"@[simp]\ntheorem map_toLinearMap (f : M →ₗc[R] N) (g : P →ₗc[R] Q) :\n    map f g = _root_.TensorProduct.map (f : M →ₗ[R] N) (g : P →ₗ[R] Q) := rfl\n\n"}
{"name":"Coalgebra.TensorProduct.assoc_tmul","module":"Mathlib.RingTheory.Coalgebra.TensorProduct","initialProofState":"R M N P : Type u\ninst✝⁹ : CommRing R\ninst✝⁸ : AddCommGroup M\ninst✝⁷ : AddCommGroup N\ninst✝⁶ : AddCommGroup P\ninst✝⁵ : Module R M\ninst✝⁴ : Module R N\ninst✝³ : Module R P\ninst✝² : Coalgebra R M\ninst✝¹ : Coalgebra R N\ninst✝ : Coalgebra R P\nx : M\ny : N\nz : P\n⊢ Eq ((Coalgebra.TensorProduct.assoc R M N P) (TensorProduct.tmul R (TensorProduct.tmul R x y) z)) (TensorProduct.tmul R x (TensorProduct.tmul R y z))","decl":"@[simp]\ntheorem assoc_tmul (x : M) (y : N) (z : P) :\n    Coalgebra.TensorProduct.assoc R M N P ((x ⊗ₜ y) ⊗ₜ z) = x ⊗ₜ (y ⊗ₜ z) :=\n  rfl\n\n"}
{"name":"Coalgebra.TensorProduct.assoc_symm_tmul","module":"Mathlib.RingTheory.Coalgebra.TensorProduct","initialProofState":"R M N P : Type u\ninst✝⁹ : CommRing R\ninst✝⁸ : AddCommGroup M\ninst✝⁷ : AddCommGroup N\ninst✝⁶ : AddCommGroup P\ninst✝⁵ : Module R M\ninst✝⁴ : Module R N\ninst✝³ : Module R P\ninst✝² : Coalgebra R M\ninst✝¹ : Coalgebra R N\ninst✝ : Coalgebra R P\nx : M\ny : N\nz : P\n⊢ Eq ((Coalgebra.TensorProduct.assoc R M N P).symm (TensorProduct.tmul R x (TensorProduct.tmul R y z))) (TensorProduct.tmul R (TensorProduct.tmul R x y) z)","decl":"@[simp]\ntheorem assoc_symm_tmul (x : M) (y : N) (z : P) :\n    (Coalgebra.TensorProduct.assoc R M N P).symm (x ⊗ₜ (y ⊗ₜ z)) = (x ⊗ₜ y) ⊗ₜ z :=\n  rfl\n\n"}
{"name":"Coalgebra.TensorProduct.assoc_toLinearEquiv","module":"Mathlib.RingTheory.Coalgebra.TensorProduct","initialProofState":"R M N P : Type u\ninst✝⁹ : CommRing R\ninst✝⁸ : AddCommGroup M\ninst✝⁷ : AddCommGroup N\ninst✝⁶ : AddCommGroup P\ninst✝⁵ : Module R M\ninst✝⁴ : Module R N\ninst✝³ : Module R P\ninst✝² : Coalgebra R M\ninst✝¹ : Coalgebra R N\ninst✝ : Coalgebra R P\n⊢ Eq (↑(Coalgebra.TensorProduct.assoc R M N P)) (TensorProduct.assoc R M N P)","decl":"@[simp]\ntheorem assoc_toLinearEquiv :\n    Coalgebra.TensorProduct.assoc R M N P = _root_.TensorProduct.assoc R M N P := rfl\n\n"}
{"name":"Coalgebra.TensorProduct.lid_toLinearEquiv","module":"Mathlib.RingTheory.Coalgebra.TensorProduct","initialProofState":"R M : Type u\ninst✝³ : CommRing R\ninst✝² : AddCommGroup M\ninst✝¹ : Module R M\ninst✝ : Coalgebra R M\n⊢ Eq (↑(Coalgebra.TensorProduct.lid R M)) (TensorProduct.lid R M)","decl":"@[simp]\ntheorem lid_toLinearEquiv :\n    (Coalgebra.TensorProduct.lid R M) = _root_.TensorProduct.lid R M := rfl\n\n"}
{"name":"Coalgebra.TensorProduct.lid_tmul","module":"Mathlib.RingTheory.Coalgebra.TensorProduct","initialProofState":"R M : Type u\ninst✝³ : CommRing R\ninst✝² : AddCommGroup M\ninst✝¹ : Module R M\ninst✝ : Coalgebra R M\nr : R\na : M\n⊢ Eq ((Coalgebra.TensorProduct.lid R M) (TensorProduct.tmul R r a)) (HSMul.hSMul r a)","decl":"@[simp]\ntheorem lid_tmul (r : R) (a : M) : Coalgebra.TensorProduct.lid R M (r ⊗ₜ a) = r • a := rfl\n\n"}
{"name":"Coalgebra.TensorProduct.lid_symm_apply","module":"Mathlib.RingTheory.Coalgebra.TensorProduct","initialProofState":"R M : Type u\ninst✝³ : CommRing R\ninst✝² : AddCommGroup M\ninst✝¹ : Module R M\ninst✝ : Coalgebra R M\na : M\n⊢ Eq ((Coalgebra.TensorProduct.lid R M).symm a) (TensorProduct.tmul R 1 a)","decl":"@[simp]\ntheorem lid_symm_apply (a : M) : (Coalgebra.TensorProduct.lid R M).symm a = 1 ⊗ₜ a := rfl\n\n"}
{"name":"Coalgebra.TensorProduct.rid_toLinearEquiv","module":"Mathlib.RingTheory.Coalgebra.TensorProduct","initialProofState":"R M : Type u\ninst✝³ : CommRing R\ninst✝² : AddCommGroup M\ninst✝¹ : Module R M\ninst✝ : Coalgebra R M\n⊢ Eq (↑(Coalgebra.TensorProduct.rid R M)) (TensorProduct.rid R M)","decl":"@[simp]\ntheorem rid_toLinearEquiv :\n    (Coalgebra.TensorProduct.rid R M) = _root_.TensorProduct.rid R M := rfl\n\n"}
{"name":"Coalgebra.TensorProduct.rid_tmul","module":"Mathlib.RingTheory.Coalgebra.TensorProduct","initialProofState":"R M : Type u\ninst✝³ : CommRing R\ninst✝² : AddCommGroup M\ninst✝¹ : Module R M\ninst✝ : Coalgebra R M\nr : R\na : M\n⊢ Eq ((Coalgebra.TensorProduct.rid R M) (TensorProduct.tmul R a r)) (HSMul.hSMul r a)","decl":"@[simp]\ntheorem rid_tmul (r : R) (a : M) : Coalgebra.TensorProduct.rid R M (a ⊗ₜ r) = r • a := rfl\n\n"}
{"name":"Coalgebra.TensorProduct.rid_symm_apply","module":"Mathlib.RingTheory.Coalgebra.TensorProduct","initialProofState":"R M : Type u\ninst✝³ : CommRing R\ninst✝² : AddCommGroup M\ninst✝¹ : Module R M\ninst✝ : Coalgebra R M\na : M\n⊢ Eq ((Coalgebra.TensorProduct.rid R M).symm a) (TensorProduct.tmul R a 1)","decl":"@[simp]\ntheorem rid_symm_apply (a : M) : (Coalgebra.TensorProduct.rid R M).symm a = a ⊗ₜ 1 := rfl\n\n"}
