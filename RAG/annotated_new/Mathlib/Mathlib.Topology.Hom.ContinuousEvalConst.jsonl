{"name":"ContinuousEvalConst.continuous_eval_const","module":"Mathlib.Topology.Hom.ContinuousEvalConst","initialProofState":"F : Type u_1\nα : outParam (Type u_2)\nX : outParam (Type u_3)\ninst✝² : FunLike F α X\ninst✝¹ : TopologicalSpace F\ninst✝ : TopologicalSpace X\nself : ContinuousEvalConst F α X\nx : α\n⊢ Continuous fun f => f x","decl":"/-- A typeclass saying that `F` is a type of bundled morphisms (in the sense of `DFunLike`)\nwith a topology on `F` such that evaluation at a point is continuous in `f : F`. -/\nclass ContinuousEvalConst (F : Type*) (α X : outParam Type*) [FunLike F α X]\n    [TopologicalSpace F] [TopologicalSpace X] : Prop where\n  continuous_eval_const (x : α) : Continuous fun f : F ↦ f x\n\n"}
{"name":"ContinuousEvalConst.of_continuous_forget","module":"Mathlib.Topology.Hom.ContinuousEvalConst","initialProofState":"F : Type u_1\nα : Type u_2\nX : Type u_3\ninst✝⁵ : FunLike F α X\ninst✝⁴ : TopologicalSpace F\ninst✝³ : TopologicalSpace X\ninst✝² : ContinuousEvalConst F α X\nF' : Type u_5\ninst✝¹ : FunLike F' α X\ninst✝ : TopologicalSpace F'\nf : F' → F\nhc : Continuous f\nhf : autoParam (∀ (g : F'), Eq ⇑(f g) ⇑g) _auto✝\n⊢ ContinuousEvalConst F' α X","decl":"/-- If a type `F'` of bundled morphisms admits a continuous projection\nto a type satisfying `ContinuousEvalConst`,\nthen `F'` satisfies this predicate too.\n\nThe word \"forget\" in the name is motivated by the term \"forgetful functor\". -/\ntheorem ContinuousEvalConst.of_continuous_forget {F' : Type*} [FunLike F' α X] [TopologicalSpace F']\n    {f : F' → F} (hc : Continuous f) (hf : ∀ g, ⇑(f g) = g := by intro; rfl) :\n    ContinuousEvalConst F' α X where\n  continuous_eval_const x := by simpa only [← hf] using (continuous_eval_const x).comp hc\n\n"}
{"name":"Continuous.eval_const","module":"Mathlib.Topology.Hom.ContinuousEvalConst","initialProofState":"F : Type u_1\nα : Type u_2\nX : Type u_3\nZ : Type u_4\ninst✝⁴ : FunLike F α X\ninst✝³ : TopologicalSpace F\ninst✝² : TopologicalSpace X\ninst✝¹ : ContinuousEvalConst F α X\ninst✝ : TopologicalSpace Z\nf : Z → F\nhf : Continuous f\nx : α\n⊢ Continuous fun x_1 => (f x_1) x","decl":"@[continuity, fun_prop]\nprotected theorem Continuous.eval_const (hf : Continuous f) (x : α) : Continuous (f · x) :=\n  (continuous_eval_const x).comp hf\n\n"}
{"name":"continuous_coeFun","module":"Mathlib.Topology.Hom.ContinuousEvalConst","initialProofState":"F : Type u_1\nα : Type u_2\nX : Type u_3\ninst✝³ : FunLike F α X\ninst✝² : TopologicalSpace F\ninst✝¹ : TopologicalSpace X\ninst✝ : ContinuousEvalConst F α X\n⊢ Continuous DFunLike.coe","decl":"theorem continuous_coeFun : Continuous (DFunLike.coe : F → α → X) :=\n  continuous_pi continuous_eval_const\n\n"}
{"name":"Continuous.coeFun","module":"Mathlib.Topology.Hom.ContinuousEvalConst","initialProofState":"F : Type u_1\nα : Type u_2\nX : Type u_3\nZ : Type u_4\ninst✝⁴ : FunLike F α X\ninst✝³ : TopologicalSpace F\ninst✝² : TopologicalSpace X\ninst✝¹ : ContinuousEvalConst F α X\ninst✝ : TopologicalSpace Z\nf : Z → F\nhf : Continuous f\n⊢ Continuous fun z => ⇑(f z)","decl":"protected theorem Continuous.coeFun (hf : Continuous f) : Continuous fun z ↦ ⇑(f z) :=\n  continuous_pi hf.eval_const\n\n"}
{"name":"Filter.Tendsto.eval_const","module":"Mathlib.Topology.Hom.ContinuousEvalConst","initialProofState":"F : Type u_1\nα : Type u_2\nX : Type u_3\ninst✝³ : FunLike F α X\ninst✝² : TopologicalSpace F\ninst✝¹ : TopologicalSpace X\ninst✝ : ContinuousEvalConst F α X\nι : Type u_5\nl : Filter ι\nf : ι → F\ng : F\nhf : Filter.Tendsto f l (nhds g)\na : α\n⊢ Filter.Tendsto (fun x => (f x) a) l (nhds (g a))","decl":"protected theorem Filter.Tendsto.eval_const {ι : Type*} {l : Filter ι} {f : ι → F} {g : F}\n    (hf : Tendsto f l (𝓝 g)) (a : α) : Tendsto (f · a) l (𝓝 (g a)) :=\n  ((continuous_id.eval_const a).tendsto _).comp hf\n\n"}
{"name":"Filter.Tendsto.coeFun","module":"Mathlib.Topology.Hom.ContinuousEvalConst","initialProofState":"F : Type u_1\nα : Type u_2\nX : Type u_3\ninst✝³ : FunLike F α X\ninst✝² : TopologicalSpace F\ninst✝¹ : TopologicalSpace X\ninst✝ : ContinuousEvalConst F α X\nι : Type u_5\nl : Filter ι\nf : ι → F\ng : F\nhf : Filter.Tendsto f l (nhds g)\n⊢ Filter.Tendsto (fun i => ⇑(f i)) l (nhds ⇑g)","decl":"protected theorem Filter.Tendsto.coeFun {ι : Type*} {l : Filter ι} {f : ι → F} {g : F}\n    (hf : Tendsto f l (𝓝 g)) : Tendsto (fun i ↦ ⇑(f i)) l (𝓝 ⇑g) :=\n  (continuous_id.coeFun.tendsto _).comp hf\n\n"}
{"name":"ContinuousAt.eval_const","module":"Mathlib.Topology.Hom.ContinuousEvalConst","initialProofState":"F : Type u_1\nα : Type u_2\nX : Type u_3\nZ : Type u_4\ninst✝⁴ : FunLike F α X\ninst✝³ : TopologicalSpace F\ninst✝² : TopologicalSpace X\ninst✝¹ : ContinuousEvalConst F α X\ninst✝ : TopologicalSpace Z\nf : Z → F\nz : Z\nhf : ContinuousAt f z\nx : α\n⊢ ContinuousAt (fun x_1 => (f x_1) x) z","decl":"protected nonrec theorem ContinuousAt.eval_const (hf : ContinuousAt f z) (x : α) :\n    ContinuousAt (f · x) z :=\n  hf.eval_const x\n\n"}
{"name":"ContinuousAt.coeFun","module":"Mathlib.Topology.Hom.ContinuousEvalConst","initialProofState":"F : Type u_1\nα : Type u_2\nX : Type u_3\nZ : Type u_4\ninst✝⁴ : FunLike F α X\ninst✝³ : TopologicalSpace F\ninst✝² : TopologicalSpace X\ninst✝¹ : ContinuousEvalConst F α X\ninst✝ : TopologicalSpace Z\nf : Z → F\nz : Z\nhf : ContinuousAt f z\n⊢ ContinuousAt (fun z => ⇑(f z)) z","decl":"protected nonrec theorem ContinuousAt.coeFun (hf : ContinuousAt f z) :\n    ContinuousAt (fun z ↦ ⇑(f z)) z :=\n  hf.coeFun\n\n"}
{"name":"ContinuousWithinAt.eval_const","module":"Mathlib.Topology.Hom.ContinuousEvalConst","initialProofState":"F : Type u_1\nα : Type u_2\nX : Type u_3\nZ : Type u_4\ninst✝⁴ : FunLike F α X\ninst✝³ : TopologicalSpace F\ninst✝² : TopologicalSpace X\ninst✝¹ : ContinuousEvalConst F α X\ninst✝ : TopologicalSpace Z\nf : Z → F\ns : Set Z\nz : Z\nhf : ContinuousWithinAt f s z\nx : α\n⊢ ContinuousWithinAt (fun x_1 => (f x_1) x) s z","decl":"protected nonrec theorem ContinuousWithinAt.eval_const (hf : ContinuousWithinAt f s z) (x : α) :\n    ContinuousWithinAt (f · x) s z :=\n  hf.eval_const x\n\n"}
{"name":"ContinuousWithinAt.coeFun","module":"Mathlib.Topology.Hom.ContinuousEvalConst","initialProofState":"F : Type u_1\nα : Type u_2\nX : Type u_3\nZ : Type u_4\ninst✝⁴ : FunLike F α X\ninst✝³ : TopologicalSpace F\ninst✝² : TopologicalSpace X\ninst✝¹ : ContinuousEvalConst F α X\ninst✝ : TopologicalSpace Z\nf : Z → F\ns : Set Z\nz : Z\nhf : ContinuousWithinAt f s z\n⊢ ContinuousWithinAt (fun z => ⇑(f z)) s z","decl":"protected nonrec theorem ContinuousWithinAt.coeFun (hf : ContinuousWithinAt f s z) :\n    ContinuousWithinAt (fun z ↦ ⇑(f z)) s z :=\n  hf.coeFun\n\n"}
{"name":"ContinuousOn.eval_const","module":"Mathlib.Topology.Hom.ContinuousEvalConst","initialProofState":"F : Type u_1\nα : Type u_2\nX : Type u_3\nZ : Type u_4\ninst✝⁴ : FunLike F α X\ninst✝³ : TopologicalSpace F\ninst✝² : TopologicalSpace X\ninst✝¹ : ContinuousEvalConst F α X\ninst✝ : TopologicalSpace Z\nf : Z → F\ns : Set Z\nhf : ContinuousOn f s\nx : α\n⊢ ContinuousOn (fun x_1 => (f x_1) x) s","decl":"protected theorem ContinuousOn.eval_const (hf : ContinuousOn f s) (x : α) :\n    ContinuousOn (f · x) s :=\n  fun z hz ↦ (hf z hz).eval_const x\n\n"}
{"name":"ContinuousOn.coeFun","module":"Mathlib.Topology.Hom.ContinuousEvalConst","initialProofState":"F : Type u_1\nα : Type u_2\nX : Type u_3\nZ : Type u_4\ninst✝⁴ : FunLike F α X\ninst✝³ : TopologicalSpace F\ninst✝² : TopologicalSpace X\ninst✝¹ : ContinuousEvalConst F α X\ninst✝ : TopologicalSpace Z\nf : Z → F\ns : Set Z\nhf : ContinuousOn f s\nx : α\n⊢ ContinuousOn (fun x_1 => (f x_1) x) s","decl":"protected theorem ContinuousOn.coeFun (hf : ContinuousOn f s) (x : α) : ContinuousOn (f · x) s :=\n  fun z hz ↦ (hf z hz).eval_const x\n\n"}
