{"name":"RingHom.formallyUnramified_algebraMap","module":"Mathlib.RingTheory.RingHom.Unramified","initialProofState":"R : Type u_1\nS : Type u_2\ninst✝² : CommRing R\ninst✝¹ : CommRing S\ninst✝ : Algebra R S\n⊢ Iff (algebraMap R S).FormallyUnramified (Algebra.FormallyUnramified R S)","decl":"lemma formallyUnramified_algebraMap [Algebra R S] :\n    (algebraMap R S).FormallyUnramified ↔ Algebra.FormallyUnramified R S := by\n  delta FormallyUnramified\n  congr!\n  exact Algebra.algebra_ext _ _ fun _ ↦ rfl\n\n"}
{"name":"RingHom.FormallyUnramified.stableUnderComposition","module":"Mathlib.RingTheory.RingHom.Unramified","initialProofState":"⊢ RingHom.StableUnderComposition fun {R S} [CommRing R] [CommRing S] => RingHom.FormallyUnramified","decl":"lemma stableUnderComposition :\n    StableUnderComposition FormallyUnramified := by\n  intros R S T _ _ _ f g _ _\n  algebraize [f, g, g.comp f]\n  exact .comp R S T\n\n"}
{"name":"RingHom.FormallyUnramified.respectsIso","module":"Mathlib.RingTheory.RingHom.Unramified","initialProofState":"⊢ RingHom.RespectsIso fun {R S} [CommRing R] [CommRing S] => RingHom.FormallyUnramified","decl":"lemma respectsIso :\n    RespectsIso FormallyUnramified := by\n  refine stableUnderComposition.respectsIso ?_\n  intros R S _ _ e\n  letI := e.toRingHom.toAlgebra\n  exact Algebra.FormallyUnramified.of_surjective (Algebra.ofId R S) e.surjective\n\n"}
{"name":"RingHom.FormallyUnramified.isStableUnderBaseChange","module":"Mathlib.RingTheory.RingHom.Unramified","initialProofState":"⊢ RingHom.IsStableUnderBaseChange fun {R S} [CommRing R] [CommRing S] => RingHom.FormallyUnramified","decl":"lemma isStableUnderBaseChange :\n    IsStableUnderBaseChange FormallyUnramified := by\n  refine .mk _ respectsIso ?_\n  intros R S T _ _ _ _ _ h\n  show (algebraMap _ _).FormallyUnramified\n  rw [formallyUnramified_algebraMap] at h ⊢\n  infer_instance\n\n"}
{"name":"RingHom.FormallyUnramified.holdsForLocalizationAway","module":"Mathlib.RingTheory.RingHom.Unramified","initialProofState":"⊢ RingHom.HoldsForLocalizationAway fun {R S} [CommRing R] [CommRing S] => RingHom.FormallyUnramified","decl":"lemma holdsForLocalizationAway :\n    HoldsForLocalizationAway FormallyUnramified := by\n  intros R S _ _ _ r _\n  rw [formallyUnramified_algebraMap]\n  exact .of_isLocalization (.powers r)\n\n"}
{"name":"RingHom.FormallyUnramified.ofLocalizationPrime","module":"Mathlib.RingTheory.RingHom.Unramified","initialProofState":"⊢ RingHom.OfLocalizationPrime fun {R S} [CommRing R] [CommRing S] => RingHom.FormallyUnramified","decl":"lemma ofLocalizationPrime :\n    OfLocalizationPrime FormallyUnramified := by\n  intros R S _ _ f H\n  algebraize [f]\n  rw [FormallyUnramified, ← Algebra.unramifiedLocus_eq_univ_iff, Set.eq_univ_iff_forall]\n  intro x\n  let Rₓ := Localization.AtPrime (x.asIdeal.comap f)\n  let Sₓ := Localization.AtPrime x.asIdeal\n  have := Algebra.FormallyUnramified.of_isLocalization (Rₘ := Rₓ) (x.asIdeal.comap f).primeCompl\n  letI : Algebra Rₓ Sₓ := (Localization.localRingHom _ _ _ rfl).toAlgebra\n  have : IsScalarTower R Rₓ Sₓ := .of_algebraMap_eq\n    fun x ↦ (Localization.localRingHom_to_map _ _ _ rfl x).symm\n  have : Algebra.FormallyUnramified Rₓ Sₓ := H _ _\n  exact Algebra.FormallyUnramified.comp R Rₓ Sₓ\n\n"}
{"name":"RingHom.FormallyUnramified.ofLocalizationSpanTarget","module":"Mathlib.RingTheory.RingHom.Unramified","initialProofState":"⊢ RingHom.OfLocalizationSpanTarget fun {R S} [CommRing R] [CommRing S] => RingHom.FormallyUnramified","decl":"lemma ofLocalizationSpanTarget :\n    OfLocalizationSpanTarget FormallyUnramified := by\n  intros R S _ _ f s hs H\n  algebraize [f]\n  rw [FormallyUnramified, ← Algebra.unramifiedLocus_eq_univ_iff, Set.eq_univ_iff_forall]\n  intro x\n  obtain ⟨r, hr, hrx⟩ : ∃ r ∈ s, x ∈ PrimeSpectrum.basicOpen r := by\n    simpa using (PrimeSpectrum.iSup_basicOpen_eq_top_iff'.mpr hs).ge\n      (TopologicalSpace.Opens.mem_top x)\n  refine Algebra.basicOpen_subset_unramifiedLocus_iff.mpr ?_ hrx\n  convert H ⟨r, hr⟩\n  dsimp\n  rw [← algebraMap_toAlgebra f, ← IsScalarTower.algebraMap_eq,\n    formallyUnramified_algebraMap]\n\n"}
{"name":"RingHom.FormallyUnramified.propertyIsLocal","module":"Mathlib.RingTheory.RingHom.Unramified","initialProofState":"⊢ RingHom.PropertyIsLocal fun {R S} [CommRing R] [CommRing S] => RingHom.FormallyUnramified","decl":"lemma propertyIsLocal :\n    PropertyIsLocal FormallyUnramified := by\n  constructor\n  · intro R S _ _ f r R' S' _ _ _ _ _ _ H\n    algebraize [f, (algebraMap S S').comp f, IsLocalization.Away.map R' S' f r]\n    have := Algebra.FormallyUnramified.of_isLocalization (Rₘ := S') (.powers (f r))\n    have := Algebra.FormallyUnramified.comp R S S'\n    have H : Submonoid.powers r ≤ (Submonoid.powers (f r)).comap f := by\n      rintro x ⟨n, rfl⟩; exact ⟨n, by simp⟩\n    have : IsScalarTower R R' S' := .of_algebraMap_eq' (IsLocalization.map_comp H).symm\n    exact Algebra.FormallyUnramified.of_comp R R' S'\n  · exact ofLocalizationSpanTarget\n  · exact ofLocalizationSpanTarget.ofLocalizationSpan\n      (stableUnderComposition.stableUnderCompositionWithLocalizationAway\n          holdsForLocalizationAway).1\n  · exact (stableUnderComposition.stableUnderCompositionWithLocalizationAway\n        holdsForLocalizationAway).2\n\n"}
