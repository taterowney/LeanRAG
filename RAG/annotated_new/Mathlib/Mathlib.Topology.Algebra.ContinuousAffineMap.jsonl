{"name":"ContinuousAffineMap.cont","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\nQ : Type u_5\ninst✝⁸ : Ring R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : TopologicalSpace P\ninst✝⁴ : AddTorsor V P\ninst✝³ : AddCommGroup W\ninst✝² : Module R W\ninst✝¹ : TopologicalSpace Q\ninst✝ : AddTorsor W Q\nself : ContinuousAffineMap R P Q\n⊢ Continuous self.toFun","decl":"/-- A continuous map of affine spaces. -/\nstructure ContinuousAffineMap (R : Type*) {V W : Type*} (P Q : Type*) [Ring R] [AddCommGroup V]\n  [Module R V] [TopologicalSpace P] [AddTorsor V P] [AddCommGroup W] [Module R W]\n  [TopologicalSpace Q] [AddTorsor W Q] extends P →ᵃ[R] Q where\n  cont : Continuous toFun\n\n"}
{"name":"ContinuousAffineMap.mk.injEq","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\nQ : Type u_5\ninst✝⁸ : Ring R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : TopologicalSpace P\ninst✝⁴ : AddTorsor V P\ninst✝³ : AddCommGroup W\ninst✝² : Module R W\ninst✝¹ : TopologicalSpace Q\ninst✝ : AddTorsor W Q\ntoAffineMap✝ : AffineMap R P Q\ncont✝ : Continuous toAffineMap✝.toFun\ntoAffineMap : AffineMap R P Q\ncont : Continuous toAffineMap.toFun\n⊢ Eq (Eq { toAffineMap := toAffineMap✝, cont := cont✝ } { toAffineMap := toAffineMap, cont := cont }) (Eq toAffineMap✝ toAffineMap)","decl":"/-- A continuous map of affine spaces. -/\nstructure ContinuousAffineMap (R : Type*) {V W : Type*} (P Q : Type*) [Ring R] [AddCommGroup V]\n  [Module R V] [TopologicalSpace P] [AddTorsor V P] [AddCommGroup W] [Module R W]\n  [TopologicalSpace Q] [AddTorsor W Q] extends P →ᵃ[R] Q where\n  cont : Continuous toFun\n\n"}
{"name":"ContinuousAffineMap.mk.sizeOf_spec","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\nQ : Type u_5\ninst✝¹³ : Ring R\ninst✝¹² : AddCommGroup V\ninst✝¹¹ : Module R V\ninst✝¹⁰ : TopologicalSpace P\ninst✝⁹ : AddTorsor V P\ninst✝⁸ : AddCommGroup W\ninst✝⁷ : Module R W\ninst✝⁶ : TopologicalSpace Q\ninst✝⁵ : AddTorsor W Q\ninst✝⁴ : SizeOf R\ninst✝³ : SizeOf V\ninst✝² : SizeOf W\ninst✝¹ : SizeOf P\ninst✝ : SizeOf Q\ntoAffineMap : AffineMap R P Q\ncont : Continuous toAffineMap.toFun\n⊢ Eq (SizeOf.sizeOf { toAffineMap := toAffineMap, cont := cont }) (HAdd.hAdd (HAdd.hAdd 1 (SizeOf.sizeOf toAffineMap)) (SizeOf.sizeOf cont))","decl":"/-- A continuous map of affine spaces. -/\nstructure ContinuousAffineMap (R : Type*) {V W : Type*} (P Q : Type*) [Ring R] [AddCommGroup V]\n  [Module R V] [TopologicalSpace P] [AddTorsor V P] [AddCommGroup W] [Module R W]\n  [TopologicalSpace Q] [AddTorsor W Q] extends P →ᵃ[R] Q where\n  cont : Continuous toFun\n\n"}
{"name":"ContinuousAffineMap.mk.inj","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\nQ : Type u_5\ninst✝⁸ : Ring R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : TopologicalSpace P\ninst✝⁴ : AddTorsor V P\ninst✝³ : AddCommGroup W\ninst✝² : Module R W\ninst✝¹ : TopologicalSpace Q\ninst✝ : AddTorsor W Q\ntoAffineMap✝ : AffineMap R P Q\ncont✝ : Continuous toAffineMap✝.toFun\ntoAffineMap : AffineMap R P Q\ncont : Continuous toAffineMap.toFun\nx✝ : Eq { toAffineMap := toAffineMap✝, cont := cont✝ } { toAffineMap := toAffineMap, cont := cont }\n⊢ Eq toAffineMap✝ toAffineMap","decl":"/-- A continuous map of affine spaces. -/\nstructure ContinuousAffineMap (R : Type*) {V W : Type*} (P Q : Type*) [Ring R] [AddCommGroup V]\n  [Module R V] [TopologicalSpace P] [AddTorsor V P] [AddCommGroup W] [Module R W]\n  [TopologicalSpace Q] [AddTorsor W Q] extends P →ᵃ[R] Q where\n  cont : Continuous toFun\n\n"}
{"name":"ContinuousAffineMap.to_affineMap_injective","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\nQ : Type u_5\ninst✝⁸ : Ring R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : TopologicalSpace P\ninst✝⁴ : AddTorsor V P\ninst✝³ : AddCommGroup W\ninst✝² : Module R W\ninst✝¹ : TopologicalSpace Q\ninst✝ : AddTorsor W Q\nf g : ContinuousAffineMap R P Q\nh : Eq f.toAffineMap g.toAffineMap\n⊢ Eq f g","decl":"theorem to_affineMap_injective {f g : P →ᴬ[R] Q} (h : (f : P →ᵃ[R] Q) = (g : P →ᵃ[R] Q)) :\n    f = g := by\n  cases f\n  cases g\n  congr\n\n"}
{"name":"ContinuousAffineMap.instContinuousMapClass","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\nQ : Type u_5\ninst✝⁸ : Ring R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : TopologicalSpace P\ninst✝⁴ : AddTorsor V P\ninst✝³ : AddCommGroup W\ninst✝² : Module R W\ninst✝¹ : TopologicalSpace Q\ninst✝ : AddTorsor W Q\n⊢ ContinuousMapClass (ContinuousAffineMap R P Q) P Q","decl":"instance : ContinuousMapClass (P →ᴬ[R] Q) P Q where\n  map_continuous := cont\n\n"}
{"name":"ContinuousAffineMap.toFun_eq_coe","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\nQ : Type u_5\ninst✝⁸ : Ring R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : TopologicalSpace P\ninst✝⁴ : AddTorsor V P\ninst✝³ : AddCommGroup W\ninst✝² : Module R W\ninst✝¹ : TopologicalSpace Q\ninst✝ : AddTorsor W Q\nf : ContinuousAffineMap R P Q\n⊢ Eq f.toFun ⇑f","decl":"theorem toFun_eq_coe (f : P →ᴬ[R] Q) : f.toFun = ⇑f := rfl\n\n"}
{"name":"ContinuousAffineMap.coe_injective","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\nQ : Type u_5\ninst✝⁸ : Ring R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : TopologicalSpace P\ninst✝⁴ : AddTorsor V P\ninst✝³ : AddCommGroup W\ninst✝² : Module R W\ninst✝¹ : TopologicalSpace Q\ninst✝ : AddTorsor W Q\n⊢ Function.Injective DFunLike.coe","decl":"theorem coe_injective : @Function.Injective (P →ᴬ[R] Q) (P → Q) (⇑) :=\n  DFunLike.coe_injective\n\n"}
{"name":"ContinuousAffineMap.ext_iff","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\nQ : Type u_5\ninst✝⁸ : Ring R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : TopologicalSpace P\ninst✝⁴ : AddTorsor V P\ninst✝³ : AddCommGroup W\ninst✝² : Module R W\ninst✝¹ : TopologicalSpace Q\ninst✝ : AddTorsor W Q\nf g : ContinuousAffineMap R P Q\n⊢ Iff (Eq f g) (∀ (x : P), Eq (f x) (g x))","decl":"@[ext]\ntheorem ext {f g : P →ᴬ[R] Q} (h : ∀ x, f x = g x) : f = g :=\n  DFunLike.ext _ _ h\n\n"}
{"name":"ContinuousAffineMap.ext","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\nQ : Type u_5\ninst✝⁸ : Ring R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : TopologicalSpace P\ninst✝⁴ : AddTorsor V P\ninst✝³ : AddCommGroup W\ninst✝² : Module R W\ninst✝¹ : TopologicalSpace Q\ninst✝ : AddTorsor W Q\nf g : ContinuousAffineMap R P Q\nh : ∀ (x : P), Eq (f x) (g x)\n⊢ Eq f g","decl":"@[ext]\ntheorem ext {f g : P →ᴬ[R] Q} (h : ∀ x, f x = g x) : f = g :=\n  DFunLike.ext _ _ h\n\n"}
{"name":"ContinuousAffineMap.congr_fun","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\nQ : Type u_5\ninst✝⁸ : Ring R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : TopologicalSpace P\ninst✝⁴ : AddTorsor V P\ninst✝³ : AddCommGroup W\ninst✝² : Module R W\ninst✝¹ : TopologicalSpace Q\ninst✝ : AddTorsor W Q\nf g : ContinuousAffineMap R P Q\nh : Eq f g\nx : P\n⊢ Eq (f x) (g x)","decl":"theorem congr_fun {f g : P →ᴬ[R] Q} (h : f = g) (x : P) : f x = g x :=\n  DFunLike.congr_fun h _\n\n"}
{"name":"ContinuousAffineMap.toContinuousMap_coe","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\nQ : Type u_5\ninst✝⁸ : Ring R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : TopologicalSpace P\ninst✝⁴ : AddTorsor V P\ninst✝³ : AddCommGroup W\ninst✝² : Module R W\ninst✝¹ : TopologicalSpace Q\ninst✝ : AddTorsor W Q\nf : ContinuousAffineMap R P Q\n⊢ Eq f.toContinuousMap ↑f","decl":"@[simp]\ntheorem toContinuousMap_coe (f : P →ᴬ[R] Q) : f.toContinuousMap = ↑f := rfl\n\n"}
{"name":"ContinuousAffineMap.coe_to_affineMap","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\nQ : Type u_5\ninst✝⁸ : Ring R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : TopologicalSpace P\ninst✝⁴ : AddTorsor V P\ninst✝³ : AddCommGroup W\ninst✝² : Module R W\ninst✝¹ : TopologicalSpace Q\ninst✝ : AddTorsor W Q\nf : ContinuousAffineMap R P Q\n⊢ Eq ⇑f.toAffineMap ⇑f","decl":"@[simp] -- Porting note: removed `norm_cast`\ntheorem coe_to_affineMap (f : P →ᴬ[R] Q) : ((f : P →ᵃ[R] Q) : P → Q) = f := rfl\n\n-- Porting note: removed `norm_cast` and `simp` since proof is `simp only [ContinuousMap.coe_mk]`\n"}
{"name":"ContinuousAffineMap.coe_to_continuousMap","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\nQ : Type u_5\ninst✝⁸ : Ring R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : TopologicalSpace P\ninst✝⁴ : AddTorsor V P\ninst✝³ : AddCommGroup W\ninst✝² : Module R W\ninst✝¹ : TopologicalSpace Q\ninst✝ : AddTorsor W Q\nf : ContinuousAffineMap R P Q\n⊢ Eq ⇑↑f ⇑f","decl":"theorem coe_to_continuousMap (f : P →ᴬ[R] Q) : ((f : C(P, Q)) : P → Q) = f := rfl\n\n"}
{"name":"ContinuousAffineMap.to_continuousMap_injective","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\nQ : Type u_5\ninst✝⁸ : Ring R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : TopologicalSpace P\ninst✝⁴ : AddTorsor V P\ninst✝³ : AddCommGroup W\ninst✝² : Module R W\ninst✝¹ : TopologicalSpace Q\ninst✝ : AddTorsor W Q\nf g : ContinuousAffineMap R P Q\nh : Eq ↑f ↑g\n⊢ Eq f g","decl":"theorem to_continuousMap_injective {f g : P →ᴬ[R] Q} (h : (f : C(P, Q)) = (g : C(P, Q))) :\n    f = g := by\n  ext a\n  exact ContinuousMap.congr_fun h a\n\n-- Porting note: removed `norm_cast`\n"}
{"name":"ContinuousAffineMap.coe_affineMap_mk","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\nQ : Type u_5\ninst✝⁸ : Ring R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : TopologicalSpace P\ninst✝⁴ : AddTorsor V P\ninst✝³ : AddCommGroup W\ninst✝² : Module R W\ninst✝¹ : TopologicalSpace Q\ninst✝ : AddTorsor W Q\nf : AffineMap R P Q\nh : Continuous f.toFun\n⊢ Eq { toAffineMap := f, cont := h }.toAffineMap f","decl":"theorem coe_affineMap_mk (f : P →ᵃ[R] Q) (h) : ((⟨f, h⟩ : P →ᴬ[R] Q) : P →ᵃ[R] Q) = f := rfl\n\n"}
{"name":"ContinuousAffineMap.coe_continuousMap_mk","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\nQ : Type u_5\ninst✝⁸ : Ring R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : TopologicalSpace P\ninst✝⁴ : AddTorsor V P\ninst✝³ : AddCommGroup W\ninst✝² : Module R W\ninst✝¹ : TopologicalSpace Q\ninst✝ : AddTorsor W Q\nf : AffineMap R P Q\nh : Continuous f.toFun\n⊢ Eq ↑{ toAffineMap := f, cont := h } { toFun := ⇑f, continuous_toFun := h }","decl":"@[norm_cast]\ntheorem coe_continuousMap_mk (f : P →ᵃ[R] Q) (h) : ((⟨f, h⟩ : P →ᴬ[R] Q) : C(P, Q)) = ⟨f, h⟩ := rfl\n\n"}
{"name":"ContinuousAffineMap.coe_mk","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\nQ : Type u_5\ninst✝⁸ : Ring R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : TopologicalSpace P\ninst✝⁴ : AddTorsor V P\ninst✝³ : AddCommGroup W\ninst✝² : Module R W\ninst✝¹ : TopologicalSpace Q\ninst✝ : AddTorsor W Q\nf : AffineMap R P Q\nh : Continuous f.toFun\n⊢ Eq ⇑{ toAffineMap := f, cont := h } ⇑f","decl":"@[simp]\ntheorem coe_mk (f : P →ᵃ[R] Q) (h) : ((⟨f, h⟩ : P →ᴬ[R] Q) : P → Q) = f := rfl\n\n"}
{"name":"ContinuousAffineMap.mk_coe","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\nQ : Type u_5\ninst✝⁸ : Ring R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : TopologicalSpace P\ninst✝⁴ : AddTorsor V P\ninst✝³ : AddCommGroup W\ninst✝² : Module R W\ninst✝¹ : TopologicalSpace Q\ninst✝ : AddTorsor W Q\nf : ContinuousAffineMap R P Q\nh : Continuous f.toFun\n⊢ Eq { toAffineMap := f.toAffineMap, cont := h } f","decl":"@[simp]\ntheorem mk_coe (f : P →ᴬ[R] Q) (h) : (⟨(f : P →ᵃ[R] Q), h⟩ : P →ᴬ[R] Q) = f := by\n  ext\n  rfl\n\n"}
{"name":"ContinuousAffineMap.continuous","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\nQ : Type u_5\ninst✝⁸ : Ring R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : TopologicalSpace P\ninst✝⁴ : AddTorsor V P\ninst✝³ : AddCommGroup W\ninst✝² : Module R W\ninst✝¹ : TopologicalSpace Q\ninst✝ : AddTorsor W Q\nf : ContinuousAffineMap R P Q\n⊢ Continuous ⇑f","decl":"@[continuity]\nprotected theorem continuous (f : P →ᴬ[R] Q) : Continuous f := f.2\n\n"}
{"name":"ContinuousAffineMap.coe_const","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\nQ : Type u_5\ninst✝⁸ : Ring R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : TopologicalSpace P\ninst✝⁴ : AddTorsor V P\ninst✝³ : AddCommGroup W\ninst✝² : Module R W\ninst✝¹ : TopologicalSpace Q\ninst✝ : AddTorsor W Q\nq : Q\n⊢ Eq (⇑(ContinuousAffineMap.const R P q)) (Function.const P q)","decl":"@[simp]\ntheorem coe_const (q : Q) : (const R P q : P → Q) = Function.const P q := rfl\n\n"}
{"name":"ContinuousAffineMap.coe_comp","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\nQ : Type u_5\ninst✝¹² : Ring R\ninst✝¹¹ : AddCommGroup V\ninst✝¹⁰ : Module R V\ninst✝⁹ : TopologicalSpace P\ninst✝⁸ : AddTorsor V P\ninst✝⁷ : AddCommGroup W\ninst✝⁶ : Module R W\ninst✝⁵ : TopologicalSpace Q\ninst✝⁴ : AddTorsor W Q\nW₂ : Type u_6\nQ₂ : Type u_7\ninst✝³ : AddCommGroup W₂\ninst✝² : Module R W₂\ninst✝¹ : TopologicalSpace Q₂\ninst✝ : AddTorsor W₂ Q₂\nf : ContinuousAffineMap R Q Q₂\ng : ContinuousAffineMap R P Q\n⊢ Eq (⇑(f.comp g)) (Function.comp ⇑f ⇑g)","decl":"@[simp, norm_cast]\ntheorem coe_comp (f : Q →ᴬ[R] Q₂) (g : P →ᴬ[R] Q) :\n    (f.comp g : P → Q₂) = (f : Q → Q₂) ∘ (g : P → Q) := rfl\n\n"}
{"name":"ContinuousAffineMap.comp_apply","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\nQ : Type u_5\ninst✝¹² : Ring R\ninst✝¹¹ : AddCommGroup V\ninst✝¹⁰ : Module R V\ninst✝⁹ : TopologicalSpace P\ninst✝⁸ : AddTorsor V P\ninst✝⁷ : AddCommGroup W\ninst✝⁶ : Module R W\ninst✝⁵ : TopologicalSpace Q\ninst✝⁴ : AddTorsor W Q\nW₂ : Type u_6\nQ₂ : Type u_7\ninst✝³ : AddCommGroup W₂\ninst✝² : Module R W₂\ninst✝¹ : TopologicalSpace Q₂\ninst✝ : AddTorsor W₂ Q₂\nf : ContinuousAffineMap R Q Q₂\ng : ContinuousAffineMap R P Q\nx : P\n⊢ Eq ((f.comp g) x) (f (g x))","decl":"theorem comp_apply (f : Q →ᴬ[R] Q₂) (g : P →ᴬ[R] Q) (x : P) : f.comp g x = f (g x) := rfl\n\n"}
{"name":"ContinuousAffineMap.coe_zero","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\ninst✝⁷ : Ring R\ninst✝⁶ : AddCommGroup V\ninst✝⁵ : Module R V\ninst✝⁴ : TopologicalSpace P\ninst✝³ : AddTorsor V P\ninst✝² : AddCommGroup W\ninst✝¹ : Module R W\ninst✝ : TopologicalSpace W\n⊢ Eq (⇑0) 0","decl":"@[norm_cast, simp]\ntheorem coe_zero : ((0 : P →ᴬ[R] W) : P → W) = 0 := rfl\n\n"}
{"name":"ContinuousAffineMap.zero_apply","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\ninst✝⁷ : Ring R\ninst✝⁶ : AddCommGroup V\ninst✝⁵ : Module R V\ninst✝⁴ : TopologicalSpace P\ninst✝³ : AddTorsor V P\ninst✝² : AddCommGroup W\ninst✝¹ : Module R W\ninst✝ : TopologicalSpace W\nx : P\n⊢ Eq (0 x) 0","decl":"theorem zero_apply (x : P) : (0 : P →ᴬ[R] W) x = 0 := rfl\n\n"}
{"name":"ContinuousAffineMap.coe_smul","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\ninst✝¹¹ : Ring R\ninst✝¹⁰ : AddCommGroup V\ninst✝⁹ : Module R V\ninst✝⁸ : TopologicalSpace P\ninst✝⁷ : AddTorsor V P\ninst✝⁶ : AddCommGroup W\ninst✝⁵ : Module R W\nS : Type u_8\ninst✝⁴ : TopologicalSpace W\ninst✝³ : Monoid S\ninst✝² : DistribMulAction S W\ninst✝¹ : SMulCommClass R S W\ninst✝ : ContinuousConstSMul S W\nt : S\nf : ContinuousAffineMap R P W\n⊢ Eq (⇑(HSMul.hSMul t f)) (HSMul.hSMul t ⇑f)","decl":"@[norm_cast, simp]\ntheorem coe_smul (t : S) (f : P →ᴬ[R] W) : ⇑(t • f) = t • ⇑f := rfl\n\n"}
{"name":"ContinuousAffineMap.smul_apply","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\ninst✝¹¹ : Ring R\ninst✝¹⁰ : AddCommGroup V\ninst✝⁹ : Module R V\ninst✝⁸ : TopologicalSpace P\ninst✝⁷ : AddTorsor V P\ninst✝⁶ : AddCommGroup W\ninst✝⁵ : Module R W\nS : Type u_8\ninst✝⁴ : TopologicalSpace W\ninst✝³ : Monoid S\ninst✝² : DistribMulAction S W\ninst✝¹ : SMulCommClass R S W\ninst✝ : ContinuousConstSMul S W\nt : S\nf : ContinuousAffineMap R P W\nx : P\n⊢ Eq ((HSMul.hSMul t f) x) (HSMul.hSMul t (f x))","decl":"theorem smul_apply (t : S) (f : P →ᴬ[R] W) (x : P) : (t • f) x = t • f x := rfl\n\n"}
{"name":"ContinuousAffineMap.instIsCentralScalar","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\ninst✝¹³ : Ring R\ninst✝¹² : AddCommGroup V\ninst✝¹¹ : Module R V\ninst✝¹⁰ : TopologicalSpace P\ninst✝⁹ : AddTorsor V P\ninst✝⁸ : AddCommGroup W\ninst✝⁷ : Module R W\nS : Type u_8\ninst✝⁶ : TopologicalSpace W\ninst✝⁵ : Monoid S\ninst✝⁴ : DistribMulAction S W\ninst✝³ : SMulCommClass R S W\ninst✝² : ContinuousConstSMul S W\ninst✝¹ : DistribMulAction (MulOpposite S) W\ninst✝ : IsCentralScalar S W\n⊢ IsCentralScalar S (ContinuousAffineMap R P W)","decl":"instance [DistribMulAction Sᵐᵒᵖ W] [IsCentralScalar S W] : IsCentralScalar S (P →ᴬ[R] W) where\n  op_smul_eq_smul _ _ := ext fun _ ↦ op_smul_eq_smul _ _\n\n"}
{"name":"ContinuousAffineMap.coe_add","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\ninst✝⁸ : Ring R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : TopologicalSpace P\ninst✝⁴ : AddTorsor V P\ninst✝³ : AddCommGroup W\ninst✝² : Module R W\ninst✝¹ : TopologicalSpace W\ninst✝ : TopologicalAddGroup W\nf g : ContinuousAffineMap R P W\n⊢ Eq (⇑(HAdd.hAdd f g)) (HAdd.hAdd ⇑f ⇑g)","decl":"@[norm_cast, simp]\ntheorem coe_add (f g : P →ᴬ[R] W) : ⇑(f + g) = f + g := rfl\n\n"}
{"name":"ContinuousAffineMap.add_apply","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\ninst✝⁸ : Ring R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : TopologicalSpace P\ninst✝⁴ : AddTorsor V P\ninst✝³ : AddCommGroup W\ninst✝² : Module R W\ninst✝¹ : TopologicalSpace W\ninst✝ : TopologicalAddGroup W\nf g : ContinuousAffineMap R P W\nx : P\n⊢ Eq ((HAdd.hAdd f g) x) (HAdd.hAdd (f x) (g x))","decl":"theorem add_apply (f g : P →ᴬ[R] W) (x : P) : (f + g) x = f x + g x := rfl\n\n"}
{"name":"ContinuousAffineMap.coe_sub","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\ninst✝⁸ : Ring R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : TopologicalSpace P\ninst✝⁴ : AddTorsor V P\ninst✝³ : AddCommGroup W\ninst✝² : Module R W\ninst✝¹ : TopologicalSpace W\ninst✝ : TopologicalAddGroup W\nf g : ContinuousAffineMap R P W\n⊢ Eq (⇑(HSub.hSub f g)) (HSub.hSub ⇑f ⇑g)","decl":"@[norm_cast, simp]\ntheorem coe_sub (f g : P →ᴬ[R] W) : ⇑(f - g) = f - g := rfl\n\n"}
{"name":"ContinuousAffineMap.sub_apply","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\ninst✝⁸ : Ring R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : TopologicalSpace P\ninst✝⁴ : AddTorsor V P\ninst✝³ : AddCommGroup W\ninst✝² : Module R W\ninst✝¹ : TopologicalSpace W\ninst✝ : TopologicalAddGroup W\nf g : ContinuousAffineMap R P W\nx : P\n⊢ Eq ((HSub.hSub f g) x) (HSub.hSub (f x) (g x))","decl":"theorem sub_apply (f g : P →ᴬ[R] W) (x : P) : (f - g) x = f x - g x := rfl\n\n"}
{"name":"ContinuousAffineMap.coe_neg","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\ninst✝⁸ : Ring R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : TopologicalSpace P\ninst✝⁴ : AddTorsor V P\ninst✝³ : AddCommGroup W\ninst✝² : Module R W\ninst✝¹ : TopologicalSpace W\ninst✝ : TopologicalAddGroup W\nf : ContinuousAffineMap R P W\n⊢ Eq (⇑(Neg.neg f)) (Neg.neg ⇑f)","decl":"@[norm_cast, simp]\ntheorem coe_neg (f : P →ᴬ[R] W) : ⇑(-f) = -f := rfl\n\n"}
{"name":"ContinuousAffineMap.neg_apply","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\nP : Type u_4\ninst✝⁸ : Ring R\ninst✝⁷ : AddCommGroup V\ninst✝⁶ : Module R V\ninst✝⁵ : TopologicalSpace P\ninst✝⁴ : AddTorsor V P\ninst✝³ : AddCommGroup W\ninst✝² : Module R W\ninst✝¹ : TopologicalSpace W\ninst✝ : TopologicalAddGroup W\nf : ContinuousAffineMap R P W\nx : P\n⊢ Eq ((Neg.neg f) x) (Neg.neg (f x))","decl":"theorem neg_apply (f : P →ᴬ[R] W) (x : P) : (-f) x = -f x := rfl\n\n"}
{"name":"ContinuousLinearMap.coe_toContinuousAffineMap","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\ninst✝⁶ : Ring R\ninst✝⁵ : AddCommGroup V\ninst✝⁴ : Module R V\ninst✝³ : TopologicalSpace V\ninst✝² : AddCommGroup W\ninst✝¹ : Module R W\ninst✝ : TopologicalSpace W\nf : ContinuousLinearMap (RingHom.id R) V W\n⊢ Eq ⇑f.toContinuousAffineMap ⇑f","decl":"@[simp]\ntheorem coe_toContinuousAffineMap (f : V →L[R] W) : ⇑f.toContinuousAffineMap = f := rfl\n\n"}
{"name":"ContinuousLinearMap.toContinuousAffineMap_map_zero","module":"Mathlib.Topology.Algebra.ContinuousAffineMap","initialProofState":"R : Type u_1\nV : Type u_2\nW : Type u_3\ninst✝⁶ : Ring R\ninst✝⁵ : AddCommGroup V\ninst✝⁴ : Module R V\ninst✝³ : TopologicalSpace V\ninst✝² : AddCommGroup W\ninst✝¹ : Module R W\ninst✝ : TopologicalSpace W\nf : ContinuousLinearMap (RingHom.id R) V W\n⊢ Eq (f.toContinuousAffineMap 0) 0","decl":"@[simp]\ntheorem toContinuousAffineMap_map_zero (f : V →L[R] W) : f.toContinuousAffineMap 0 = 0 := by simp\n\n"}
