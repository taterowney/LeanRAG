{"name":"CategoryTheory.Pretriangulated.Triangle.shiftFunctor_map_hom₂","module":"Mathlib.CategoryTheory.Triangulated.TriangleShift","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.HasShift C Int\nn : Int\nX✝ Y✝ : CategoryTheory.Pretriangulated.Triangle C\nf : Quiver.Hom X✝ Y✝\n⊢ Eq ((CategoryTheory.Pretriangulated.Triangle.shiftFunctor C n).map f).hom₂ ((CategoryTheory.shiftFunctor C n).map f.hom₂)","decl":"/-- The shift functor `Triangle C ⥤ Triangle C` by `n : ℤ` sends a triangle\nto the triangle obtained by shifting the objects by `n` in `C` and by\nmultiplying the three morphisms by `(-1)^n`. -/\n@[simps]\nnoncomputable def Triangle.shiftFunctor (n : ℤ) : Triangle C ⥤ Triangle C where\n  obj T := Triangle.mk (n.negOnePow • T.mor₁⟦n⟧') (n.negOnePow • T.mor₂⟦n⟧')\n    (n.negOnePow • T.mor₃⟦n⟧' ≫ (shiftFunctorComm C 1 n).hom.app T.obj₁)\n  map f :=\n    { hom₁ := f.hom₁⟦n⟧'\n      hom₂ := f.hom₂⟦n⟧'\n      hom₃ := f.hom₃⟦n⟧'\n      comm₁ := by\n        dsimp\n        simp only [Linear.units_smul_comp, Linear.comp_units_smul, ← Functor.map_comp, f.comm₁]\n      comm₂ := by\n        dsimp\n        simp only [Linear.units_smul_comp, Linear.comp_units_smul, ← Functor.map_comp, f.comm₂]\n      comm₃ := by\n        dsimp\n        rw [Linear.units_smul_comp, Linear.comp_units_smul, ← Functor.map_comp_assoc, ← f.comm₃,\n          Functor.map_comp, assoc, assoc]\n        erw [(shiftFunctorComm C 1 n).hom.naturality]\n        rfl }\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.shiftFunctor_map_hom₁","module":"Mathlib.CategoryTheory.Triangulated.TriangleShift","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.HasShift C Int\nn : Int\nX✝ Y✝ : CategoryTheory.Pretriangulated.Triangle C\nf : Quiver.Hom X✝ Y✝\n⊢ Eq ((CategoryTheory.Pretriangulated.Triangle.shiftFunctor C n).map f).hom₁ ((CategoryTheory.shiftFunctor C n).map f.hom₁)","decl":"/-- The shift functor `Triangle C ⥤ Triangle C` by `n : ℤ` sends a triangle\nto the triangle obtained by shifting the objects by `n` in `C` and by\nmultiplying the three morphisms by `(-1)^n`. -/\n@[simps]\nnoncomputable def Triangle.shiftFunctor (n : ℤ) : Triangle C ⥤ Triangle C where\n  obj T := Triangle.mk (n.negOnePow • T.mor₁⟦n⟧') (n.negOnePow • T.mor₂⟦n⟧')\n    (n.negOnePow • T.mor₃⟦n⟧' ≫ (shiftFunctorComm C 1 n).hom.app T.obj₁)\n  map f :=\n    { hom₁ := f.hom₁⟦n⟧'\n      hom₂ := f.hom₂⟦n⟧'\n      hom₃ := f.hom₃⟦n⟧'\n      comm₁ := by\n        dsimp\n        simp only [Linear.units_smul_comp, Linear.comp_units_smul, ← Functor.map_comp, f.comm₁]\n      comm₂ := by\n        dsimp\n        simp only [Linear.units_smul_comp, Linear.comp_units_smul, ← Functor.map_comp, f.comm₂]\n      comm₃ := by\n        dsimp\n        rw [Linear.units_smul_comp, Linear.comp_units_smul, ← Functor.map_comp_assoc, ← f.comm₃,\n          Functor.map_comp, assoc, assoc]\n        erw [(shiftFunctorComm C 1 n).hom.naturality]\n        rfl }\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.shiftFunctor_map_hom₃","module":"Mathlib.CategoryTheory.Triangulated.TriangleShift","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.HasShift C Int\nn : Int\nX✝ Y✝ : CategoryTheory.Pretriangulated.Triangle C\nf : Quiver.Hom X✝ Y✝\n⊢ Eq ((CategoryTheory.Pretriangulated.Triangle.shiftFunctor C n).map f).hom₃ ((CategoryTheory.shiftFunctor C n).map f.hom₃)","decl":"/-- The shift functor `Triangle C ⥤ Triangle C` by `n : ℤ` sends a triangle\nto the triangle obtained by shifting the objects by `n` in `C` and by\nmultiplying the three morphisms by `(-1)^n`. -/\n@[simps]\nnoncomputable def Triangle.shiftFunctor (n : ℤ) : Triangle C ⥤ Triangle C where\n  obj T := Triangle.mk (n.negOnePow • T.mor₁⟦n⟧') (n.negOnePow • T.mor₂⟦n⟧')\n    (n.negOnePow • T.mor₃⟦n⟧' ≫ (shiftFunctorComm C 1 n).hom.app T.obj₁)\n  map f :=\n    { hom₁ := f.hom₁⟦n⟧'\n      hom₂ := f.hom₂⟦n⟧'\n      hom₃ := f.hom₃⟦n⟧'\n      comm₁ := by\n        dsimp\n        simp only [Linear.units_smul_comp, Linear.comp_units_smul, ← Functor.map_comp, f.comm₁]\n      comm₂ := by\n        dsimp\n        simp only [Linear.units_smul_comp, Linear.comp_units_smul, ← Functor.map_comp, f.comm₂]\n      comm₃ := by\n        dsimp\n        rw [Linear.units_smul_comp, Linear.comp_units_smul, ← Functor.map_comp_assoc, ← f.comm₃,\n          Functor.map_comp, assoc, assoc]\n        erw [(shiftFunctorComm C 1 n).hom.naturality]\n        rfl }\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.shiftFunctor_obj","module":"Mathlib.CategoryTheory.Triangulated.TriangleShift","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.HasShift C Int\nn : Int\nT : CategoryTheory.Pretriangulated.Triangle C\n⊢ Eq ((CategoryTheory.Pretriangulated.Triangle.shiftFunctor C n).obj T) (CategoryTheory.Pretriangulated.Triangle.mk (HSMul.hSMul n.negOnePow ((CategoryTheory.shiftFunctor C n).map T.mor₁)) (HSMul.hSMul n.negOnePow ((CategoryTheory.shiftFunctor C n).map T.mor₂)) (HSMul.hSMul n.negOnePow (CategoryTheory.CategoryStruct.comp ((CategoryTheory.shiftFunctor C n).map T.mor₃) ((CategoryTheory.shiftFunctorComm C 1 n).hom.app T.obj₁))))","decl":"/-- The shift functor `Triangle C ⥤ Triangle C` by `n : ℤ` sends a triangle\nto the triangle obtained by shifting the objects by `n` in `C` and by\nmultiplying the three morphisms by `(-1)^n`. -/\n@[simps]\nnoncomputable def Triangle.shiftFunctor (n : ℤ) : Triangle C ⥤ Triangle C where\n  obj T := Triangle.mk (n.negOnePow • T.mor₁⟦n⟧') (n.negOnePow • T.mor₂⟦n⟧')\n    (n.negOnePow • T.mor₃⟦n⟧' ≫ (shiftFunctorComm C 1 n).hom.app T.obj₁)\n  map f :=\n    { hom₁ := f.hom₁⟦n⟧'\n      hom₂ := f.hom₂⟦n⟧'\n      hom₃ := f.hom₃⟦n⟧'\n      comm₁ := by\n        dsimp\n        simp only [Linear.units_smul_comp, Linear.comp_units_smul, ← Functor.map_comp, f.comm₁]\n      comm₂ := by\n        dsimp\n        simp only [Linear.units_smul_comp, Linear.comp_units_smul, ← Functor.map_comp, f.comm₂]\n      comm₃ := by\n        dsimp\n        rw [Linear.units_smul_comp, Linear.comp_units_smul, ← Functor.map_comp_assoc, ← f.comm₃,\n          Functor.map_comp, assoc, assoc]\n        erw [(shiftFunctorComm C 1 n).hom.naturality]\n        rfl }\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.shiftFunctorZero_inv_app_hom₂","module":"Mathlib.CategoryTheory.Triangulated.TriangleShift","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.HasShift C Int\nX : CategoryTheory.Pretriangulated.Triangle C\n⊢ Eq ((CategoryTheory.Pretriangulated.Triangle.shiftFunctorZero C).inv.app X).hom₂ ((CategoryTheory.shiftFunctorZero C Int).inv.app X.obj₂)","decl":"/-- The canonical isomorphism `Triangle.shiftFunctor C 0 ≅ 𝟭 (Triangle C)`. -/\n@[simps!]\nnoncomputable def Triangle.shiftFunctorZero : Triangle.shiftFunctor C 0 ≅ 𝟭 _ :=\n  NatIso.ofComponents\n    (fun T => Triangle.isoMk _ _ ((CategoryTheory.shiftFunctorZero C ℤ).app _)\n      ((CategoryTheory.shiftFunctorZero C ℤ).app _) ((CategoryTheory.shiftFunctorZero C ℤ).app _)\n      (by simp) (by simp) (by\n        dsimp\n        simp only [one_smul, assoc, shiftFunctorComm_zero_hom_app,\n          ← Functor.map_comp, Iso.inv_hom_id_app, Functor.id_obj, Functor.map_id,\n          comp_id, NatTrans.naturality, Functor.id_map]))\n    (by aesop_cat)\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.shiftFunctorZero_hom_app_hom₁","module":"Mathlib.CategoryTheory.Triangulated.TriangleShift","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.HasShift C Int\nX : CategoryTheory.Pretriangulated.Triangle C\n⊢ Eq ((CategoryTheory.Pretriangulated.Triangle.shiftFunctorZero C).hom.app X).hom₁ ((CategoryTheory.shiftFunctorZero C Int).hom.app X.obj₁)","decl":"/-- The canonical isomorphism `Triangle.shiftFunctor C 0 ≅ 𝟭 (Triangle C)`. -/\n@[simps!]\nnoncomputable def Triangle.shiftFunctorZero : Triangle.shiftFunctor C 0 ≅ 𝟭 _ :=\n  NatIso.ofComponents\n    (fun T => Triangle.isoMk _ _ ((CategoryTheory.shiftFunctorZero C ℤ).app _)\n      ((CategoryTheory.shiftFunctorZero C ℤ).app _) ((CategoryTheory.shiftFunctorZero C ℤ).app _)\n      (by simp) (by simp) (by\n        dsimp\n        simp only [one_smul, assoc, shiftFunctorComm_zero_hom_app,\n          ← Functor.map_comp, Iso.inv_hom_id_app, Functor.id_obj, Functor.map_id,\n          comp_id, NatTrans.naturality, Functor.id_map]))\n    (by aesop_cat)\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.shiftFunctorZero_hom_app_hom₂","module":"Mathlib.CategoryTheory.Triangulated.TriangleShift","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.HasShift C Int\nX : CategoryTheory.Pretriangulated.Triangle C\n⊢ Eq ((CategoryTheory.Pretriangulated.Triangle.shiftFunctorZero C).hom.app X).hom₂ ((CategoryTheory.shiftFunctorZero C Int).hom.app X.obj₂)","decl":"/-- The canonical isomorphism `Triangle.shiftFunctor C 0 ≅ 𝟭 (Triangle C)`. -/\n@[simps!]\nnoncomputable def Triangle.shiftFunctorZero : Triangle.shiftFunctor C 0 ≅ 𝟭 _ :=\n  NatIso.ofComponents\n    (fun T => Triangle.isoMk _ _ ((CategoryTheory.shiftFunctorZero C ℤ).app _)\n      ((CategoryTheory.shiftFunctorZero C ℤ).app _) ((CategoryTheory.shiftFunctorZero C ℤ).app _)\n      (by simp) (by simp) (by\n        dsimp\n        simp only [one_smul, assoc, shiftFunctorComm_zero_hom_app,\n          ← Functor.map_comp, Iso.inv_hom_id_app, Functor.id_obj, Functor.map_id,\n          comp_id, NatTrans.naturality, Functor.id_map]))\n    (by aesop_cat)\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.shiftFunctorZero_inv_app_hom₁","module":"Mathlib.CategoryTheory.Triangulated.TriangleShift","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.HasShift C Int\nX : CategoryTheory.Pretriangulated.Triangle C\n⊢ Eq ((CategoryTheory.Pretriangulated.Triangle.shiftFunctorZero C).inv.app X).hom₁ ((CategoryTheory.shiftFunctorZero C Int).inv.app X.obj₁)","decl":"/-- The canonical isomorphism `Triangle.shiftFunctor C 0 ≅ 𝟭 (Triangle C)`. -/\n@[simps!]\nnoncomputable def Triangle.shiftFunctorZero : Triangle.shiftFunctor C 0 ≅ 𝟭 _ :=\n  NatIso.ofComponents\n    (fun T => Triangle.isoMk _ _ ((CategoryTheory.shiftFunctorZero C ℤ).app _)\n      ((CategoryTheory.shiftFunctorZero C ℤ).app _) ((CategoryTheory.shiftFunctorZero C ℤ).app _)\n      (by simp) (by simp) (by\n        dsimp\n        simp only [one_smul, assoc, shiftFunctorComm_zero_hom_app,\n          ← Functor.map_comp, Iso.inv_hom_id_app, Functor.id_obj, Functor.map_id,\n          comp_id, NatTrans.naturality, Functor.id_map]))\n    (by aesop_cat)\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.shiftFunctorZero_inv_app_hom₃","module":"Mathlib.CategoryTheory.Triangulated.TriangleShift","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.HasShift C Int\nX : CategoryTheory.Pretriangulated.Triangle C\n⊢ Eq ((CategoryTheory.Pretriangulated.Triangle.shiftFunctorZero C).inv.app X).hom₃ ((CategoryTheory.shiftFunctorZero C Int).inv.app X.obj₃)","decl":"/-- The canonical isomorphism `Triangle.shiftFunctor C 0 ≅ 𝟭 (Triangle C)`. -/\n@[simps!]\nnoncomputable def Triangle.shiftFunctorZero : Triangle.shiftFunctor C 0 ≅ 𝟭 _ :=\n  NatIso.ofComponents\n    (fun T => Triangle.isoMk _ _ ((CategoryTheory.shiftFunctorZero C ℤ).app _)\n      ((CategoryTheory.shiftFunctorZero C ℤ).app _) ((CategoryTheory.shiftFunctorZero C ℤ).app _)\n      (by simp) (by simp) (by\n        dsimp\n        simp only [one_smul, assoc, shiftFunctorComm_zero_hom_app,\n          ← Functor.map_comp, Iso.inv_hom_id_app, Functor.id_obj, Functor.map_id,\n          comp_id, NatTrans.naturality, Functor.id_map]))\n    (by aesop_cat)\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.shiftFunctorZero_hom_app_hom₃","module":"Mathlib.CategoryTheory.Triangulated.TriangleShift","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.HasShift C Int\nX : CategoryTheory.Pretriangulated.Triangle C\n⊢ Eq ((CategoryTheory.Pretriangulated.Triangle.shiftFunctorZero C).hom.app X).hom₃ ((CategoryTheory.shiftFunctorZero C Int).hom.app X.obj₃)","decl":"/-- The canonical isomorphism `Triangle.shiftFunctor C 0 ≅ 𝟭 (Triangle C)`. -/\n@[simps!]\nnoncomputable def Triangle.shiftFunctorZero : Triangle.shiftFunctor C 0 ≅ 𝟭 _ :=\n  NatIso.ofComponents\n    (fun T => Triangle.isoMk _ _ ((CategoryTheory.shiftFunctorZero C ℤ).app _)\n      ((CategoryTheory.shiftFunctorZero C ℤ).app _) ((CategoryTheory.shiftFunctorZero C ℤ).app _)\n      (by simp) (by simp) (by\n        dsimp\n        simp only [one_smul, assoc, shiftFunctorComm_zero_hom_app,\n          ← Functor.map_comp, Iso.inv_hom_id_app, Functor.id_obj, Functor.map_id,\n          comp_id, NatTrans.naturality, Functor.id_map]))\n    (by aesop_cat)\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.shiftFunctorAdd'_hom_app_hom₂","module":"Mathlib.CategoryTheory.Triangulated.TriangleShift","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.HasShift C Int\na b n : Int\nh : Eq (HAdd.hAdd a b) n\nX : CategoryTheory.Pretriangulated.Triangle C\n⊢ Eq ((CategoryTheory.Pretriangulated.Triangle.shiftFunctorAdd' C a b n h).hom.app X).hom₂ ((CategoryTheory.shiftFunctorAdd' C a b n h).hom.app X.obj₂)","decl":"/-- The canonical isomorphism\n`Triangle.shiftFunctor C n ≅ Triangle.shiftFunctor C a ⋙ Triangle.shiftFunctor C b`\nwhen `a + b = n`. -/\n@[simps!]\nnoncomputable def Triangle.shiftFunctorAdd' (a b n : ℤ) (h : a + b = n) :\n    Triangle.shiftFunctor C n ≅ Triangle.shiftFunctor C a ⋙ Triangle.shiftFunctor C b :=\n  NatIso.ofComponents\n    (fun T => Triangle.isoMk _ _\n      ((CategoryTheory.shiftFunctorAdd' C a b n h).app _)\n      ((CategoryTheory.shiftFunctorAdd' C a b n h).app _)\n      ((CategoryTheory.shiftFunctorAdd' C a b n h).app _)\n      (by\n        subst h\n        dsimp\n        rw [Linear.units_smul_comp, NatTrans.naturality, Linear.comp_units_smul, Functor.comp_map,\n          Functor.map_units_smul, Linear.comp_units_smul, smul_smul, Int.negOnePow_add, mul_comm])\n      (by\n        subst h\n        dsimp\n        rw [Linear.units_smul_comp, NatTrans.naturality, Linear.comp_units_smul, Functor.comp_map,\n          Functor.map_units_smul, Linear.comp_units_smul, smul_smul, Int.negOnePow_add, mul_comm])\n      (by\n        subst h\n        dsimp\n        rw [Linear.units_smul_comp, Linear.comp_units_smul, Functor.map_units_smul,\n          Linear.units_smul_comp, Linear.comp_units_smul, smul_smul, assoc,\n          Functor.map_comp, assoc]\n        erw [← NatTrans.naturality_assoc]\n        simp only [shiftFunctorAdd'_eq_shiftFunctorAdd, Int.negOnePow_add,\n          shiftFunctorComm_hom_app_comp_shift_shiftFunctorAdd_hom_app, add_comm a]))\n    (by aesop_cat)\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.shiftFunctorAdd'_hom_app_hom₃","module":"Mathlib.CategoryTheory.Triangulated.TriangleShift","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.HasShift C Int\na b n : Int\nh : Eq (HAdd.hAdd a b) n\nX : CategoryTheory.Pretriangulated.Triangle C\n⊢ Eq ((CategoryTheory.Pretriangulated.Triangle.shiftFunctorAdd' C a b n h).hom.app X).hom₃ ((CategoryTheory.shiftFunctorAdd' C a b n h).hom.app X.obj₃)","decl":"/-- The canonical isomorphism\n`Triangle.shiftFunctor C n ≅ Triangle.shiftFunctor C a ⋙ Triangle.shiftFunctor C b`\nwhen `a + b = n`. -/\n@[simps!]\nnoncomputable def Triangle.shiftFunctorAdd' (a b n : ℤ) (h : a + b = n) :\n    Triangle.shiftFunctor C n ≅ Triangle.shiftFunctor C a ⋙ Triangle.shiftFunctor C b :=\n  NatIso.ofComponents\n    (fun T => Triangle.isoMk _ _\n      ((CategoryTheory.shiftFunctorAdd' C a b n h).app _)\n      ((CategoryTheory.shiftFunctorAdd' C a b n h).app _)\n      ((CategoryTheory.shiftFunctorAdd' C a b n h).app _)\n      (by\n        subst h\n        dsimp\n        rw [Linear.units_smul_comp, NatTrans.naturality, Linear.comp_units_smul, Functor.comp_map,\n          Functor.map_units_smul, Linear.comp_units_smul, smul_smul, Int.negOnePow_add, mul_comm])\n      (by\n        subst h\n        dsimp\n        rw [Linear.units_smul_comp, NatTrans.naturality, Linear.comp_units_smul, Functor.comp_map,\n          Functor.map_units_smul, Linear.comp_units_smul, smul_smul, Int.negOnePow_add, mul_comm])\n      (by\n        subst h\n        dsimp\n        rw [Linear.units_smul_comp, Linear.comp_units_smul, Functor.map_units_smul,\n          Linear.units_smul_comp, Linear.comp_units_smul, smul_smul, assoc,\n          Functor.map_comp, assoc]\n        erw [← NatTrans.naturality_assoc]\n        simp only [shiftFunctorAdd'_eq_shiftFunctorAdd, Int.negOnePow_add,\n          shiftFunctorComm_hom_app_comp_shift_shiftFunctorAdd_hom_app, add_comm a]))\n    (by aesop_cat)\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.shiftFunctorAdd'_inv_app_hom₁","module":"Mathlib.CategoryTheory.Triangulated.TriangleShift","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.HasShift C Int\na b n : Int\nh : Eq (HAdd.hAdd a b) n\nX : CategoryTheory.Pretriangulated.Triangle C\n⊢ Eq ((CategoryTheory.Pretriangulated.Triangle.shiftFunctorAdd' C a b n h).inv.app X).hom₁ ((CategoryTheory.shiftFunctorAdd' C a b n h).inv.app X.obj₁)","decl":"/-- The canonical isomorphism\n`Triangle.shiftFunctor C n ≅ Triangle.shiftFunctor C a ⋙ Triangle.shiftFunctor C b`\nwhen `a + b = n`. -/\n@[simps!]\nnoncomputable def Triangle.shiftFunctorAdd' (a b n : ℤ) (h : a + b = n) :\n    Triangle.shiftFunctor C n ≅ Triangle.shiftFunctor C a ⋙ Triangle.shiftFunctor C b :=\n  NatIso.ofComponents\n    (fun T => Triangle.isoMk _ _\n      ((CategoryTheory.shiftFunctorAdd' C a b n h).app _)\n      ((CategoryTheory.shiftFunctorAdd' C a b n h).app _)\n      ((CategoryTheory.shiftFunctorAdd' C a b n h).app _)\n      (by\n        subst h\n        dsimp\n        rw [Linear.units_smul_comp, NatTrans.naturality, Linear.comp_units_smul, Functor.comp_map,\n          Functor.map_units_smul, Linear.comp_units_smul, smul_smul, Int.negOnePow_add, mul_comm])\n      (by\n        subst h\n        dsimp\n        rw [Linear.units_smul_comp, NatTrans.naturality, Linear.comp_units_smul, Functor.comp_map,\n          Functor.map_units_smul, Linear.comp_units_smul, smul_smul, Int.negOnePow_add, mul_comm])\n      (by\n        subst h\n        dsimp\n        rw [Linear.units_smul_comp, Linear.comp_units_smul, Functor.map_units_smul,\n          Linear.units_smul_comp, Linear.comp_units_smul, smul_smul, assoc,\n          Functor.map_comp, assoc]\n        erw [← NatTrans.naturality_assoc]\n        simp only [shiftFunctorAdd'_eq_shiftFunctorAdd, Int.negOnePow_add,\n          shiftFunctorComm_hom_app_comp_shift_shiftFunctorAdd_hom_app, add_comm a]))\n    (by aesop_cat)\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.shiftFunctorAdd'_inv_app_hom₃","module":"Mathlib.CategoryTheory.Triangulated.TriangleShift","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.HasShift C Int\na b n : Int\nh : Eq (HAdd.hAdd a b) n\nX : CategoryTheory.Pretriangulated.Triangle C\n⊢ Eq ((CategoryTheory.Pretriangulated.Triangle.shiftFunctorAdd' C a b n h).inv.app X).hom₃ ((CategoryTheory.shiftFunctorAdd' C a b n h).inv.app X.obj₃)","decl":"/-- The canonical isomorphism\n`Triangle.shiftFunctor C n ≅ Triangle.shiftFunctor C a ⋙ Triangle.shiftFunctor C b`\nwhen `a + b = n`. -/\n@[simps!]\nnoncomputable def Triangle.shiftFunctorAdd' (a b n : ℤ) (h : a + b = n) :\n    Triangle.shiftFunctor C n ≅ Triangle.shiftFunctor C a ⋙ Triangle.shiftFunctor C b :=\n  NatIso.ofComponents\n    (fun T => Triangle.isoMk _ _\n      ((CategoryTheory.shiftFunctorAdd' C a b n h).app _)\n      ((CategoryTheory.shiftFunctorAdd' C a b n h).app _)\n      ((CategoryTheory.shiftFunctorAdd' C a b n h).app _)\n      (by\n        subst h\n        dsimp\n        rw [Linear.units_smul_comp, NatTrans.naturality, Linear.comp_units_smul, Functor.comp_map,\n          Functor.map_units_smul, Linear.comp_units_smul, smul_smul, Int.negOnePow_add, mul_comm])\n      (by\n        subst h\n        dsimp\n        rw [Linear.units_smul_comp, NatTrans.naturality, Linear.comp_units_smul, Functor.comp_map,\n          Functor.map_units_smul, Linear.comp_units_smul, smul_smul, Int.negOnePow_add, mul_comm])\n      (by\n        subst h\n        dsimp\n        rw [Linear.units_smul_comp, Linear.comp_units_smul, Functor.map_units_smul,\n          Linear.units_smul_comp, Linear.comp_units_smul, smul_smul, assoc,\n          Functor.map_comp, assoc]\n        erw [← NatTrans.naturality_assoc]\n        simp only [shiftFunctorAdd'_eq_shiftFunctorAdd, Int.negOnePow_add,\n          shiftFunctorComm_hom_app_comp_shift_shiftFunctorAdd_hom_app, add_comm a]))\n    (by aesop_cat)\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.shiftFunctorAdd'_hom_app_hom₁","module":"Mathlib.CategoryTheory.Triangulated.TriangleShift","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.HasShift C Int\na b n : Int\nh : Eq (HAdd.hAdd a b) n\nX : CategoryTheory.Pretriangulated.Triangle C\n⊢ Eq ((CategoryTheory.Pretriangulated.Triangle.shiftFunctorAdd' C a b n h).hom.app X).hom₁ ((CategoryTheory.shiftFunctorAdd' C a b n h).hom.app X.obj₁)","decl":"/-- The canonical isomorphism\n`Triangle.shiftFunctor C n ≅ Triangle.shiftFunctor C a ⋙ Triangle.shiftFunctor C b`\nwhen `a + b = n`. -/\n@[simps!]\nnoncomputable def Triangle.shiftFunctorAdd' (a b n : ℤ) (h : a + b = n) :\n    Triangle.shiftFunctor C n ≅ Triangle.shiftFunctor C a ⋙ Triangle.shiftFunctor C b :=\n  NatIso.ofComponents\n    (fun T => Triangle.isoMk _ _\n      ((CategoryTheory.shiftFunctorAdd' C a b n h).app _)\n      ((CategoryTheory.shiftFunctorAdd' C a b n h).app _)\n      ((CategoryTheory.shiftFunctorAdd' C a b n h).app _)\n      (by\n        subst h\n        dsimp\n        rw [Linear.units_smul_comp, NatTrans.naturality, Linear.comp_units_smul, Functor.comp_map,\n          Functor.map_units_smul, Linear.comp_units_smul, smul_smul, Int.negOnePow_add, mul_comm])\n      (by\n        subst h\n        dsimp\n        rw [Linear.units_smul_comp, NatTrans.naturality, Linear.comp_units_smul, Functor.comp_map,\n          Functor.map_units_smul, Linear.comp_units_smul, smul_smul, Int.negOnePow_add, mul_comm])\n      (by\n        subst h\n        dsimp\n        rw [Linear.units_smul_comp, Linear.comp_units_smul, Functor.map_units_smul,\n          Linear.units_smul_comp, Linear.comp_units_smul, smul_smul, assoc,\n          Functor.map_comp, assoc]\n        erw [← NatTrans.naturality_assoc]\n        simp only [shiftFunctorAdd'_eq_shiftFunctorAdd, Int.negOnePow_add,\n          shiftFunctorComm_hom_app_comp_shift_shiftFunctorAdd_hom_app, add_comm a]))\n    (by aesop_cat)\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.shiftFunctorAdd'_inv_app_hom₂","module":"Mathlib.CategoryTheory.Triangulated.TriangleShift","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.HasShift C Int\na b n : Int\nh : Eq (HAdd.hAdd a b) n\nX : CategoryTheory.Pretriangulated.Triangle C\n⊢ Eq ((CategoryTheory.Pretriangulated.Triangle.shiftFunctorAdd' C a b n h).inv.app X).hom₂ ((CategoryTheory.shiftFunctorAdd' C a b n h).inv.app X.obj₂)","decl":"/-- The canonical isomorphism\n`Triangle.shiftFunctor C n ≅ Triangle.shiftFunctor C a ⋙ Triangle.shiftFunctor C b`\nwhen `a + b = n`. -/\n@[simps!]\nnoncomputable def Triangle.shiftFunctorAdd' (a b n : ℤ) (h : a + b = n) :\n    Triangle.shiftFunctor C n ≅ Triangle.shiftFunctor C a ⋙ Triangle.shiftFunctor C b :=\n  NatIso.ofComponents\n    (fun T => Triangle.isoMk _ _\n      ((CategoryTheory.shiftFunctorAdd' C a b n h).app _)\n      ((CategoryTheory.shiftFunctorAdd' C a b n h).app _)\n      ((CategoryTheory.shiftFunctorAdd' C a b n h).app _)\n      (by\n        subst h\n        dsimp\n        rw [Linear.units_smul_comp, NatTrans.naturality, Linear.comp_units_smul, Functor.comp_map,\n          Functor.map_units_smul, Linear.comp_units_smul, smul_smul, Int.negOnePow_add, mul_comm])\n      (by\n        subst h\n        dsimp\n        rw [Linear.units_smul_comp, NatTrans.naturality, Linear.comp_units_smul, Functor.comp_map,\n          Functor.map_units_smul, Linear.comp_units_smul, smul_smul, Int.negOnePow_add, mul_comm])\n      (by\n        subst h\n        dsimp\n        rw [Linear.units_smul_comp, Linear.comp_units_smul, Functor.map_units_smul,\n          Linear.units_smul_comp, Linear.comp_units_smul, smul_smul, assoc,\n          Functor.map_comp, assoc]\n        erw [← NatTrans.naturality_assoc]\n        simp only [shiftFunctorAdd'_eq_shiftFunctorAdd, Int.negOnePow_add,\n          shiftFunctorComm_hom_app_comp_shift_shiftFunctorAdd_hom_app, add_comm a]))\n    (by aesop_cat)\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.shiftFunctor_eq","module":"Mathlib.CategoryTheory.Triangulated.TriangleShift","initialProofState":"C : Type u\ninst✝³ : CategoryTheory.Category.{v, u} C\ninst✝² : CategoryTheory.Preadditive C\ninst✝¹ : CategoryTheory.HasShift C Int\ninst✝ : ∀ (n : Int), (CategoryTheory.shiftFunctor C n).Additive\nn : Int\n⊢ Eq (CategoryTheory.shiftFunctor (CategoryTheory.Pretriangulated.Triangle C) n) (CategoryTheory.Pretriangulated.Triangle.shiftFunctor C n)","decl":"@[simp]\nlemma shiftFunctor_eq (n : ℤ) :\n    CategoryTheory.shiftFunctor (Triangle C) n = Triangle.shiftFunctor C n := rfl\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.shiftFunctorZero_eq","module":"Mathlib.CategoryTheory.Triangulated.TriangleShift","initialProofState":"C : Type u\ninst✝³ : CategoryTheory.Category.{v, u} C\ninst✝² : CategoryTheory.Preadditive C\ninst✝¹ : CategoryTheory.HasShift C Int\ninst✝ : ∀ (n : Int), (CategoryTheory.shiftFunctor C n).Additive\n⊢ Eq (CategoryTheory.shiftFunctorZero (CategoryTheory.Pretriangulated.Triangle C) Int) (CategoryTheory.Pretriangulated.Triangle.shiftFunctorZero C)","decl":"@[simp]\nlemma shiftFunctorZero_eq :\n    CategoryTheory.shiftFunctorZero (Triangle C) ℤ = Triangle.shiftFunctorZero C :=\n  ShiftMkCore.shiftFunctorZero_eq _\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.shiftFunctorAdd_eq","module":"Mathlib.CategoryTheory.Triangulated.TriangleShift","initialProofState":"C : Type u\ninst✝³ : CategoryTheory.Category.{v, u} C\ninst✝² : CategoryTheory.Preadditive C\ninst✝¹ : CategoryTheory.HasShift C Int\ninst✝ : ∀ (n : Int), (CategoryTheory.shiftFunctor C n).Additive\na b : Int\n⊢ Eq (CategoryTheory.shiftFunctorAdd (CategoryTheory.Pretriangulated.Triangle C) a b) (CategoryTheory.Pretriangulated.Triangle.shiftFunctorAdd' C a b (HAdd.hAdd a b) ⋯)","decl":"@[simp]\nlemma shiftFunctorAdd_eq (a b : ℤ) :\n    CategoryTheory.shiftFunctorAdd (Triangle C) a b =\n      Triangle.shiftFunctorAdd' C a b _ rfl :=\n  ShiftMkCore.shiftFunctorAdd_eq _ _ _\n\n"}
{"name":"CategoryTheory.Pretriangulated.Triangle.shiftFunctorAdd'_eq","module":"Mathlib.CategoryTheory.Triangulated.TriangleShift","initialProofState":"C : Type u\ninst✝³ : CategoryTheory.Category.{v, u} C\ninst✝² : CategoryTheory.Preadditive C\ninst✝¹ : CategoryTheory.HasShift C Int\ninst✝ : ∀ (n : Int), (CategoryTheory.shiftFunctor C n).Additive\na b c : Int\nh : Eq (HAdd.hAdd a b) c\n⊢ Eq (CategoryTheory.shiftFunctorAdd' (CategoryTheory.Pretriangulated.Triangle C) a b c h) (CategoryTheory.Pretriangulated.Triangle.shiftFunctorAdd' C a b c h)","decl":"@[simp]\nlemma shiftFunctorAdd'_eq (a b c : ℤ) (h : a + b = c) :\n    CategoryTheory.shiftFunctorAdd' (Triangle C) a b c h =\n      Triangle.shiftFunctorAdd' C a b c h := by\n  subst h\n  rw [shiftFunctorAdd'_eq_shiftFunctorAdd]\n  apply shiftFunctorAdd_eq\n\n"}
