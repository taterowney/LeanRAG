{"name":"PMF.integral_eq_tsum","module":"Mathlib.Probability.ProbabilityMassFunction.Integrals","initialProofState":"α : Type u_1\ninst✝⁴ : MeasurableSpace α\ninst✝³ : MeasurableSingletonClass α\nE : Type u_2\ninst✝² : NormedAddCommGroup E\ninst✝¹ : NormedSpace Real E\ninst✝ : CompleteSpace E\np : PMF α\nf : α → E\nhf : MeasureTheory.Integrable f p.toMeasure\n⊢ Eq (MeasureTheory.integral p.toMeasure fun a => f a) (tsum fun a => HSMul.hSMul (p a).toReal (f a))","decl":"theorem integral_eq_tsum (p : PMF α) (f : α → E) (hf : Integrable f p.toMeasure) :\n    ∫ a, f a ∂(p.toMeasure) = ∑' a, (p a).toReal • f a := calc\n  _ = ∫ a in p.support, f a ∂(p.toMeasure) := by rw [restrict_toMeasure_support p]\n  _ = ∑' (a : support p), (p.toMeasure {a.val}).toReal • f a := by\n    apply integral_countable f p.support_countable\n    rwa [IntegrableOn, restrict_toMeasure_support p]\n  _ = ∑' (a : support p), (p a).toReal • f a := by\n    congr with x; congr 2\n    apply PMF.toMeasure_apply_singleton p x (MeasurableSet.singleton _)\n  _ = ∑' a, (p a).toReal • f a :=\n    tsum_subtype_eq_of_support_subset <| calc\n      (fun a ↦ (p a).toReal • f a).support ⊆ (fun a ↦ (p a).toReal).support :=\n        Function.support_smul_subset_left _ _\n      _ ⊆ support p := fun x h1 h2 => h1 (by simp [h2])\n\n"}
{"name":"PMF.integral_eq_sum","module":"Mathlib.Probability.ProbabilityMassFunction.Integrals","initialProofState":"α : Type u_1\ninst✝⁵ : MeasurableSpace α\ninst✝⁴ : MeasurableSingletonClass α\nE : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace Real E\ninst✝¹ : CompleteSpace E\ninst✝ : Fintype α\np : PMF α\nf : α → E\n⊢ Eq (MeasureTheory.integral p.toMeasure fun a => f a) (Finset.univ.sum fun a => HSMul.hSMul (p a).toReal (f a))","decl":"theorem integral_eq_sum [Fintype α] (p : PMF α) (f : α → E) :\n    ∫ a, f a ∂(p.toMeasure) = ∑ a, (p a).toReal • f a := by\n  rw [integral_fintype _ .of_finite]\n  congr with x; congr 2\n  exact PMF.toMeasure_apply_singleton p x (MeasurableSet.singleton _)\n\n"}
{"name":"PMF.bernoulli_expectation","module":"Mathlib.Probability.ProbabilityMassFunction.Integrals","initialProofState":"p : ENNReal\nh : LE.le p 1\n⊢ Eq (MeasureTheory.integral (PMF.bernoulli p h).toMeasure fun b => cond b 1 0) p.toReal","decl":"theorem bernoulli_expectation {p : ℝ≥0∞} (h : p ≤ 1) :\n    ∫ b, cond b 1 0 ∂((bernoulli p h).toMeasure) = p.toReal := by simp [integral_eq_sum]\n\n"}
