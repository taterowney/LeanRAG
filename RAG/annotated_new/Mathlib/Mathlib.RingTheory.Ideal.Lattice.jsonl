{"name":"Ideal.eq_top_of_unit_mem","module":"Mathlib.RingTheory.Ideal.Lattice","initialProofState":"α : Type u\ninst✝ : Semiring α\nI : Ideal α\nx y : α\nhx : Membership.mem I x\nh : Eq (HMul.hMul y x) 1\n⊢ Eq I Top.top","decl":"theorem eq_top_of_unit_mem (x y : α) (hx : x ∈ I) (h : y * x = 1) : I = ⊤ :=\n  eq_top_iff.2 fun z _ =>\n    calc\n      z * y * x ∈ I := I.mul_mem_left _ hx\n      _ = z * (y * x) := mul_assoc z y x\n      _ = z := by rw [h, mul_one]\n\n"}
{"name":"Ideal.eq_top_of_isUnit_mem","module":"Mathlib.RingTheory.Ideal.Lattice","initialProofState":"α : Type u\ninst✝ : Semiring α\nI : Ideal α\nx : α\nhx : Membership.mem I x\nh : IsUnit x\n⊢ Eq I Top.top","decl":"theorem eq_top_of_isUnit_mem {x} (hx : x ∈ I) (h : IsUnit x) : I = ⊤ :=\n  let ⟨y, hy⟩ := h.exists_left_inv\n  eq_top_of_unit_mem I x y hx hy\n\n"}
{"name":"Ideal.eq_top_iff_one","module":"Mathlib.RingTheory.Ideal.Lattice","initialProofState":"α : Type u\ninst✝ : Semiring α\nI : Ideal α\n⊢ Iff (Eq I Top.top) (Membership.mem I 1)","decl":"theorem eq_top_iff_one : I = ⊤ ↔ (1 : α) ∈ I :=\n  ⟨by rintro rfl; trivial, fun h => eq_top_of_unit_mem _ _ 1 h (by simp)⟩\n\n"}
{"name":"Ideal.ne_top_iff_one","module":"Mathlib.RingTheory.Ideal.Lattice","initialProofState":"α : Type u\ninst✝ : Semiring α\nI : Ideal α\n⊢ Iff (Ne I Top.top) (Not (Membership.mem I 1))","decl":"theorem ne_top_iff_one : I ≠ ⊤ ↔ (1 : α) ∉ I :=\n  not_congr I.eq_top_iff_one\n\n"}
{"name":"Ideal.mem_sup_left","module":"Mathlib.RingTheory.Ideal.Lattice","initialProofState":"R : Type u\ninst✝ : Semiring R\nS T : Ideal R\nx : R\na✝ : Membership.mem S x\n⊢ Membership.mem (Max.max S T) x","decl":"theorem mem_sup_left {S T : Ideal R} : ∀ {x : R}, x ∈ S → x ∈ S ⊔ T :=\n  @le_sup_left _ _ S T\n\n"}
{"name":"Ideal.mem_sup_right","module":"Mathlib.RingTheory.Ideal.Lattice","initialProofState":"R : Type u\ninst✝ : Semiring R\nS T : Ideal R\nx : R\na✝ : Membership.mem T x\n⊢ Membership.mem (Max.max S T) x","decl":"theorem mem_sup_right {S T : Ideal R} : ∀ {x : R}, x ∈ T → x ∈ S ⊔ T :=\n  @le_sup_right _ _ S T\n\n"}
{"name":"Ideal.mem_iSup_of_mem","module":"Mathlib.RingTheory.Ideal.Lattice","initialProofState":"R : Type u\ninst✝ : Semiring R\nι : Sort u_1\nS : ι → Ideal R\ni : ι\nx : R\na✝ : Membership.mem (S i) x\n⊢ Membership.mem (iSup S) x","decl":"theorem mem_iSup_of_mem {ι : Sort*} {S : ι → Ideal R} (i : ι) : ∀ {x : R}, x ∈ S i → x ∈ iSup S :=\n  @le_iSup _ _ _ S _\n\n"}
{"name":"Ideal.mem_sSup_of_mem","module":"Mathlib.RingTheory.Ideal.Lattice","initialProofState":"R : Type u\ninst✝ : Semiring R\nS : Set (Ideal R)\ns : Ideal R\nhs : Membership.mem S s\nx : R\na✝ : Membership.mem s x\n⊢ Membership.mem (SupSet.sSup S) x","decl":"theorem mem_sSup_of_mem {S : Set (Ideal R)} {s : Ideal R} (hs : s ∈ S) :\n    ∀ {x : R}, x ∈ s → x ∈ sSup S :=\n  @le_sSup _ _ _ _ hs\n\n"}
{"name":"Ideal.mem_sInf","module":"Mathlib.RingTheory.Ideal.Lattice","initialProofState":"R : Type u\ninst✝ : Semiring R\ns : Set (Ideal R)\nx : R\n⊢ Iff (Membership.mem (InfSet.sInf s) x) (∀ ⦃I : Ideal R⦄, Membership.mem s I → Membership.mem I x)","decl":"theorem mem_sInf {s : Set (Ideal R)} {x : R} : x ∈ sInf s ↔ ∀ ⦃I⦄, I ∈ s → x ∈ I :=\n  ⟨fun hx I his => hx I ⟨I, iInf_pos his⟩, fun H _I ⟨_J, hij⟩ => hij ▸ fun _S ⟨hj, hS⟩ => hS ▸ H hj⟩\n\n"}
{"name":"Ideal.mem_inf","module":"Mathlib.RingTheory.Ideal.Lattice","initialProofState":"R : Type u\ninst✝ : Semiring R\nI J : Ideal R\nx : R\n⊢ Iff (Membership.mem (Min.min I J) x) (And (Membership.mem I x) (Membership.mem J x))","decl":"@[simp 1001] -- Porting note: increased priority to appease `simpNF`\ntheorem mem_inf {I J : Ideal R} {x : R} : x ∈ I ⊓ J ↔ x ∈ I ∧ x ∈ J :=\n  Iff.rfl\n\n"}
{"name":"Ideal.mem_iInf","module":"Mathlib.RingTheory.Ideal.Lattice","initialProofState":"R : Type u\ninst✝ : Semiring R\nι : Sort u_1\nI : ι → Ideal R\nx : R\n⊢ Iff (Membership.mem (iInf I) x) (∀ (i : ι), Membership.mem (I i) x)","decl":"@[simp 1001] -- Porting note: increased priority to appease `simpNF`\ntheorem mem_iInf {ι : Sort*} {I : ι → Ideal R} {x : R} : x ∈ iInf I ↔ ∀ i, x ∈ I i :=\n  Submodule.mem_iInf _\n\n"}
{"name":"Ideal.mem_bot","module":"Mathlib.RingTheory.Ideal.Lattice","initialProofState":"R : Type u\ninst✝ : Semiring R\nx : R\n⊢ Iff (Membership.mem Bot.bot x) (Eq x 0)","decl":"@[simp 1001] -- Porting note: increased priority to appease `simpNF`\ntheorem mem_bot {x : R} : x ∈ (⊥ : Ideal R) ↔ x = 0 :=\n  Submodule.mem_bot _\n\n"}
{"name":"Ideal.eq_bot_or_top","module":"Mathlib.RingTheory.Ideal.Lattice","initialProofState":"K : Type u\ninst✝ : DivisionSemiring K\nI : Ideal K\n⊢ Or (Eq I Bot.bot) (Eq I Top.top)","decl":"/-- All ideals in a division (semi)ring are trivial. -/\ntheorem eq_bot_or_top : I = ⊥ ∨ I = ⊤ := by\n  rw [or_iff_not_imp_right]\n  change _ ≠ _ → _\n  rw [Ideal.ne_top_iff_one]\n  intro h1\n  rw [eq_bot_iff]\n  intro r hr\n  by_cases H : r = 0; · simpa\n  simpa [H, h1] using I.mul_mem_left r⁻¹ hr\n\n"}
