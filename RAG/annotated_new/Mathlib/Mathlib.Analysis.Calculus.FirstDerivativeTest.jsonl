{"name":"isLocalMax_of_deriv_Ioo","module":"Mathlib.Analysis.Calculus.FirstDerivativeTest","initialProofState":"f : Real → Real\na b c : Real\ng₀ : LT.lt a b\ng₁ : LT.lt b c\nh : ContinuousAt f b\nhd₀ : DifferentiableOn Real f (Set.Ioo a b)\nhd₁ : DifferentiableOn Real f (Set.Ioo b c)\nh₀ : ∀ (x : Real), Membership.mem (Set.Ioo a b) x → LE.le 0 (deriv f x)\nh₁ : ∀ (x : Real), Membership.mem (Set.Ioo b c) x → LE.le (deriv f x) 0\n⊢ IsLocalMax f b","decl":"/-- The First-Derivative Test from calculus, maxima version.\n  Suppose `a < b < c`, `f : ℝ → ℝ` is continuous at `b`,\n  the derivative `f'` is nonnegative on `(a,b)`, and\n  the derivative `f'` is nonpositive on `(b,c)`. Then `f` has a local maximum at `a`. -/\nlemma isLocalMax_of_deriv_Ioo {f : ℝ → ℝ} {a b c : ℝ} (g₀ : a < b) (g₁ : b < c)\n    (h : ContinuousAt f b)\n    (hd₀ : DifferentiableOn ℝ f (Ioo a b))\n    (hd₁ : DifferentiableOn ℝ f (Ioo b c))\n    (h₀ : ∀ x ∈ Ioo a b, 0 ≤ deriv f x)\n    (h₁ : ∀ x ∈ Ioo b c, deriv f x ≤ 0) : IsLocalMax f b :=\n  have hIoc : ContinuousOn f (Ioc a b) :=\n    Ioo_union_right g₀ ▸ hd₀.continuousOn.union_continuousAt (isOpen_Ioo (a := a) (b := b))\n      (by simp_all)\n  have hIco : ContinuousOn f (Ico b c) :=\n    Ioo_union_left g₁ ▸ hd₁.continuousOn.union_continuousAt (isOpen_Ioo (a := b) (b := c))\n      (by simp_all)\n  isLocalMax_of_mono_anti g₀ g₁\n    (monotoneOn_of_deriv_nonneg (convex_Ioc a b) hIoc (by simp_all) (by simp_all))\n    (antitoneOn_of_deriv_nonpos (convex_Ico b c) hIco (by simp_all) (by simp_all))\n\n\n"}
{"name":"isLocalMin_of_deriv_Ioo","module":"Mathlib.Analysis.Calculus.FirstDerivativeTest","initialProofState":"f : Real → Real\na b c : Real\ng₀ : LT.lt a b\ng₁ : LT.lt b c\nh : ContinuousAt f b\nhd₀ : DifferentiableOn Real f (Set.Ioo a b)\nhd₁ : DifferentiableOn Real f (Set.Ioo b c)\nh₀ : ∀ (x : Real), Membership.mem (Set.Ioo a b) x → LE.le (deriv f x) 0\nh₁ : ∀ (x : Real), Membership.mem (Set.Ioo b c) x → LE.le 0 (deriv f x)\n⊢ IsLocalMin f b","decl":"/-- The First-Derivative Test from calculus, minima version. -/\nlemma isLocalMin_of_deriv_Ioo {f : ℝ → ℝ} {a b c : ℝ}\n    (g₀ : a < b) (g₁ : b < c) (h : ContinuousAt f b)\n    (hd₀ : DifferentiableOn ℝ f (Ioo a b)) (hd₁ : DifferentiableOn ℝ f (Ioo b c))\n    (h₀ : ∀ x ∈ Ioo a b, deriv f x ≤ 0)\n    (h₁ : ∀ x ∈ Ioo b c, 0 ≤ deriv f x) : IsLocalMin f b := by\n  have := isLocalMax_of_deriv_Ioo (f := -f) g₀ g₁\n    (by simp_all) hd₀.neg hd₁.neg\n    (fun x hx => deriv.neg (f := f) ▸ Left.nonneg_neg_iff.mpr <|h₀ x hx)\n    (fun x hx => deriv.neg (f := f) ▸ Left.neg_nonpos_iff.mpr <|h₁ x hx)\n  exact (neg_neg f) ▸ IsLocalMax.neg this\n\n "}
{"name":"isLocalMax_of_deriv'","module":"Mathlib.Analysis.Calculus.FirstDerivativeTest","initialProofState":"f : Real → Real\nb : Real\nh : ContinuousAt f b\nhd₀ : Filter.Eventually (fun x => DifferentiableAt Real f x) (nhdsWithin b (Set.Iio b))\nhd₁ : Filter.Eventually (fun x => DifferentiableAt Real f x) (nhdsWithin b (Set.Ioi b))\nh₀ : Filter.Eventually (fun x => LE.le 0 (deriv f x)) (nhdsWithin b (Set.Iio b))\nh₁ : Filter.Eventually (fun x => LE.le (deriv f x) 0) (nhdsWithin b (Set.Ioi b))\n⊢ IsLocalMax f b","decl":"/-- The First-Derivative Test from calculus, maxima version,\n expressed in terms of left and right filters. -/\nlemma isLocalMax_of_deriv' {f : ℝ → ℝ} {b : ℝ} (h : ContinuousAt f b)\n    (hd₀ : ∀ᶠ x in 𝓝[<] b, DifferentiableAt ℝ f x) (hd₁ : ∀ᶠ x in 𝓝[>] b, DifferentiableAt ℝ f x)\n    (h₀ : ∀ᶠ x in 𝓝[<] b, 0 ≤ deriv f x) (h₁ : ∀ᶠ x in 𝓝[>] b, deriv f x ≤ 0) :\n    IsLocalMax f b := by\n  obtain ⟨a, ha⟩ := (nhdsLT_basis b).eventually_iff.mp <| hd₀.and h₀\n  obtain ⟨c, hc⟩ := (nhdsGT_basis b).eventually_iff.mp <| hd₁.and h₁\n  exact isLocalMax_of_deriv_Ioo ha.1 hc.1 h\n    (fun _ hx => (ha.2 hx).1.differentiableWithinAt)\n    (fun _ hx => (hc.2 hx).1.differentiableWithinAt)\n    (fun _ hx => (ha.2 hx).2) (fun x hx => (hc.2 hx).2)\n\n "}
{"name":"isLocalMin_of_deriv'","module":"Mathlib.Analysis.Calculus.FirstDerivativeTest","initialProofState":"f : Real → Real\nb : Real\nh : ContinuousAt f b\nhd₀ : Filter.Eventually (fun x => DifferentiableAt Real f x) (nhdsWithin b (Set.Iio b))\nhd₁ : Filter.Eventually (fun x => DifferentiableAt Real f x) (nhdsWithin b (Set.Ioi b))\nh₀ : Filter.Eventually (fun x => LE.le (deriv f x) 0) (nhdsWithin b (Set.Iio b))\nh₁ : Filter.Eventually (fun x => GE.ge (deriv f x) 0) (nhdsWithin b (Set.Ioi b))\n⊢ IsLocalMin f b","decl":"/-- The First-Derivative Test from calculus, minima version,\n expressed in terms of left and right filters. -/\nlemma isLocalMin_of_deriv' {f : ℝ → ℝ} {b : ℝ} (h : ContinuousAt f b)\n    (hd₀ : ∀ᶠ x in 𝓝[<] b, DifferentiableAt ℝ f x) (hd₁ : ∀ᶠ x in 𝓝[>] b, DifferentiableAt ℝ f x)\n    (h₀ : ∀ᶠ x in 𝓝[<] b, deriv f x ≤ 0) (h₁ : ∀ᶠ x in 𝓝[>] b, deriv f x ≥ 0) :\n    IsLocalMin f b := by\n  obtain ⟨a, ha⟩ := (nhdsLT_basis b).eventually_iff.mp <| hd₀.and h₀\n  obtain ⟨c, hc⟩ := (nhdsGT_basis b).eventually_iff.mp <| hd₁.and h₁\n  exact isLocalMin_of_deriv_Ioo ha.1 hc.1 h\n    (fun _ hx => (ha.2 hx).1.differentiableWithinAt)\n    (fun _ hx => (hc.2 hx).1.differentiableWithinAt)\n    (fun _ hx => (ha.2 hx).2) (fun x hx => (hc.2 hx).2)\n\n"}
{"name":"isLocalMax_of_deriv","module":"Mathlib.Analysis.Calculus.FirstDerivativeTest","initialProofState":"f : Real → Real\nb : Real\nh : ContinuousAt f b\nhd : Filter.Eventually (fun x => DifferentiableAt Real f x) (nhdsWithin b (HasCompl.compl (Singleton.singleton b)))\nh₀ : Filter.Eventually (fun x => LE.le 0 (deriv f x)) (nhdsWithin b (Set.Iio b))\nh₁ : Filter.Eventually (fun x => LE.le (deriv f x) 0) (nhdsWithin b (Set.Ioi b))\n⊢ IsLocalMax f b","decl":"/-- The First Derivative test, maximum version. -/\ntheorem isLocalMax_of_deriv {f : ℝ → ℝ} {b : ℝ} (h : ContinuousAt f b)\n    (hd : ∀ᶠ x in 𝓝[≠] b, DifferentiableAt ℝ f x)\n    (h₀ : ∀ᶠ x in 𝓝[<] b, 0 ≤ deriv f x) (h₁ : ∀ᶠ x in 𝓝[>] b, deriv f x ≤ 0) :\n    IsLocalMax f b :=\n  isLocalMax_of_deriv' h (nhdsLT_le_nhdsNE _ (by tauto)) (nhdsGT_le_nhdsNE _ (by tauto)) h₀ h₁\n\n"}
{"name":"isLocalMin_of_deriv","module":"Mathlib.Analysis.Calculus.FirstDerivativeTest","initialProofState":"f : Real → Real\nb : Real\nh : ContinuousAt f b\nhd : Filter.Eventually (fun x => DifferentiableAt Real f x) (nhdsWithin b (HasCompl.compl (Singleton.singleton b)))\nh₀ : Filter.Eventually (fun x => LE.le (deriv f x) 0) (nhdsWithin b (Set.Iio b))\nh₁ : Filter.Eventually (fun x => LE.le 0 (deriv f x)) (nhdsWithin b (Set.Ioi b))\n⊢ IsLocalMin f b","decl":"/-- The First Derivative test, minimum version. -/\ntheorem isLocalMin_of_deriv {f : ℝ → ℝ} {b : ℝ} (h : ContinuousAt f b)\n    (hd : ∀ᶠ x in 𝓝[≠] b, DifferentiableAt ℝ f x)\n    (h₀ : ∀ᶠ x in 𝓝[<] b, deriv f x ≤ 0) (h₁ : ∀ᶠ x in 𝓝[>] b, 0 ≤ deriv f x) :\n    IsLocalMin f b :=\n  isLocalMin_of_deriv' h (nhdsLT_le_nhdsNE _ (by tauto)) (nhdsGT_le_nhdsNE _ (by tauto)) h₀ h₁\n"}
