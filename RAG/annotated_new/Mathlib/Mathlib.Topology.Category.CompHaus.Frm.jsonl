{"name":"topCatOpToFrm_obj","module":"Mathlib.Topology.Category.CompHaus.Frm","initialProofState":"X : Opposite TopCat\n⊢ Eq (topCatOpToFrm.obj X) (Frm.of (TopologicalSpace.Opens ↑(Opposite.unop X)))","decl":"/-- The forgetful functor from `TopCatᵒᵖ` to `Frm`. -/\n@[simps]\ndef topCatOpToFrm : TopCatᵒᵖ ⥤ Frm where\n  obj X := Frm.of (Opens (unop X : TopCat))\n  map f := Opens.comap <| Quiver.Hom.unop f\n  map_id _ := Opens.comap_id\n\n-- Note, `CompHaus` is too strong. We only need `T0Space`.\n"}
{"name":"topCatOpToFrm_map","module":"Mathlib.Topology.Category.CompHaus.Frm","initialProofState":"X✝ Y✝ : Opposite TopCat\nf : Quiver.Hom X✝ Y✝\n⊢ Eq (topCatOpToFrm.map f) (TopologicalSpace.Opens.comap f.unop)","decl":"/-- The forgetful functor from `TopCatᵒᵖ` to `Frm`. -/\n@[simps]\ndef topCatOpToFrm : TopCatᵒᵖ ⥤ Frm where\n  obj X := Frm.of (Opens (unop X : TopCat))\n  map f := Opens.comap <| Quiver.Hom.unop f\n  map_id _ := Opens.comap_id\n\n-- Note, `CompHaus` is too strong. We only need `T0Space`.\n"}
{"name":"CompHausOpToFrame.faithful","module":"Mathlib.Topology.Category.CompHaus.Frm","initialProofState":"⊢ (compHausToTop.op.comp topCatOpToFrm).Faithful","decl":"instance CompHausOpToFrame.faithful : (compHausToTop.op ⋙ topCatOpToFrm.{u}).Faithful :=\n  ⟨fun h => Quiver.Hom.unop_inj <| Opens.comap_injective h⟩\n"}
