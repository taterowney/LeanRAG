{"name":"sq_add_sq_mul_sq_add_sq","module":"Mathlib.Algebra.Ring.Identities","initialProofState":"R : Type u_1\ninst✝ : CommRing R\nx₁ x₂ y₁ y₂ : R\n⊢ Eq (HMul.hMul (HAdd.hAdd (HPow.hPow x₁ 2) (HPow.hPow x₂ 2)) (HAdd.hAdd (HPow.hPow y₁ 2) (HPow.hPow y₂ 2))) (HAdd.hAdd (HPow.hPow (HSub.hSub (HMul.hMul x₁ y₁) (HMul.hMul x₂ y₂)) 2) (HPow.hPow (HAdd.hAdd (HMul.hMul x₁ y₂) (HMul.hMul x₂ y₁)) 2))","decl":"/-- Brahmagupta-Fibonacci identity or Diophantus identity, see\n<https://en.wikipedia.org/wiki/Brahmagupta%E2%80%93Fibonacci_identity>.\n\nThis sign choice here corresponds to the signs obtained by multiplying two complex numbers.\n-/\ntheorem sq_add_sq_mul_sq_add_sq :\n    (x₁ ^ 2 + x₂ ^ 2) * (y₁ ^ 2 + y₂ ^ 2) = (x₁ * y₁ - x₂ * y₂) ^ 2 + (x₁ * y₂ + x₂ * y₁) ^ 2 := by\n  ring\n\n"}
{"name":"sq_add_mul_sq_mul_sq_add_mul_sq","module":"Mathlib.Algebra.Ring.Identities","initialProofState":"R : Type u_1\ninst✝ : CommRing R\nx₁ x₂ y₁ y₂ n : R\n⊢ Eq (HMul.hMul (HAdd.hAdd (HPow.hPow x₁ 2) (HMul.hMul n (HPow.hPow x₂ 2))) (HAdd.hAdd (HPow.hPow y₁ 2) (HMul.hMul n (HPow.hPow y₂ 2)))) (HAdd.hAdd (HPow.hPow (HSub.hSub (HMul.hMul x₁ y₁) (HMul.hMul (HMul.hMul n x₂) y₂)) 2) (HMul.hMul n (HPow.hPow (HAdd.hAdd (HMul.hMul x₁ y₂) (HMul.hMul x₂ y₁)) 2)))","decl":"/-- Brahmagupta's identity, see <https://en.wikipedia.org/wiki/Brahmagupta%27s_identity>\n-/\ntheorem sq_add_mul_sq_mul_sq_add_mul_sq :\n    (x₁ ^ 2 + n * x₂ ^ 2) * (y₁ ^ 2 + n * y₂ ^ 2) =\n    (x₁ * y₁ - n * x₂ * y₂) ^ 2 + n * (x₁ * y₂ + x₂ * y₁) ^ 2 := by\n  ring\n\n"}
{"name":"pow_four_add_four_mul_pow_four","module":"Mathlib.Algebra.Ring.Identities","initialProofState":"R : Type u_1\ninst✝ : CommRing R\na b : R\n⊢ Eq (HAdd.hAdd (HPow.hPow a 4) (HMul.hMul 4 (HPow.hPow b 4))) (HMul.hMul (HAdd.hAdd (HPow.hPow (HSub.hSub a b) 2) (HPow.hPow b 2)) (HAdd.hAdd (HPow.hPow (HAdd.hAdd a b) 2) (HPow.hPow b 2)))","decl":"/-- Sophie Germain's identity, see <https://www.cut-the-knot.org/blue/SophieGermainIdentity.shtml>.\n-/\ntheorem pow_four_add_four_mul_pow_four :\n    a ^ 4 + 4 * b ^ 4 = ((a - b) ^ 2 + b ^ 2) * ((a + b) ^ 2 + b ^ 2) := by\n  ring\n\n"}
{"name":"pow_four_add_four_mul_pow_four'","module":"Mathlib.Algebra.Ring.Identities","initialProofState":"R : Type u_1\ninst✝ : CommRing R\na b : R\n⊢ Eq (HAdd.hAdd (HPow.hPow a 4) (HMul.hMul 4 (HPow.hPow b 4))) (HMul.hMul (HAdd.hAdd (HSub.hSub (HPow.hPow a 2) (HMul.hMul (HMul.hMul 2 a) b)) (HMul.hMul 2 (HPow.hPow b 2))) (HAdd.hAdd (HAdd.hAdd (HPow.hPow a 2) (HMul.hMul (HMul.hMul 2 a) b)) (HMul.hMul 2 (HPow.hPow b 2))))","decl":"/-- Sophie Germain's identity, see <https://www.cut-the-knot.org/blue/SophieGermainIdentity.shtml>.\n-/\ntheorem pow_four_add_four_mul_pow_four' :\n    a ^ 4 + 4 * b ^ 4 = (a ^ 2 - 2 * a * b + 2 * b ^ 2) * (a ^ 2 + 2 * a * b + 2 * b ^ 2) := by\n  ring\n\n"}
{"name":"sum_four_sq_mul_sum_four_sq","module":"Mathlib.Algebra.Ring.Identities","initialProofState":"R : Type u_1\ninst✝ : CommRing R\nx₁ x₂ x₃ x₄ y₁ y₂ y₃ y₄ : R\n⊢ Eq (HMul.hMul (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HPow.hPow x₁ 2) (HPow.hPow x₂ 2)) (HPow.hPow x₃ 2)) (HPow.hPow x₄ 2)) (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HPow.hPow y₁ 2) (HPow.hPow y₂ 2)) (HPow.hPow y₃ 2)) (HPow.hPow y₄ 2))) (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HPow.hPow (HSub.hSub (HSub.hSub (HSub.hSub (HMul.hMul x₁ y₁) (HMul.hMul x₂ y₂)) (HMul.hMul x₃ y₃)) (HMul.hMul x₄ y₄)) 2) (HPow.hPow (HSub.hSub (HAdd.hAdd (HAdd.hAdd (HMul.hMul x₁ y₂) (HMul.hMul x₂ y₁)) (HMul.hMul x₃ y₄)) (HMul.hMul x₄ y₃)) 2)) (HPow.hPow (HAdd.hAdd (HAdd.hAdd (HSub.hSub (HMul.hMul x₁ y₃) (HMul.hMul x₂ y₄)) (HMul.hMul x₃ y₁)) (HMul.hMul x₄ y₂)) 2)) (HPow.hPow (HAdd.hAdd (HSub.hSub (HAdd.hAdd (HMul.hMul x₁ y₄) (HMul.hMul x₂ y₃)) (HMul.hMul x₃ y₂)) (HMul.hMul x₄ y₁)) 2))","decl":"/-- Euler's four-square identity, see <https://en.wikipedia.org/wiki/Euler%27s_four-square_identity>.\n\nThis sign choice here corresponds to the signs obtained by multiplying two quaternions.\n-/\ntheorem sum_four_sq_mul_sum_four_sq :\n    (x₁ ^ 2 + x₂ ^ 2 + x₃ ^ 2 + x₄ ^ 2) * (y₁ ^ 2 + y₂ ^ 2 + y₃ ^ 2 + y₄ ^ 2) =\n      (x₁ * y₁ - x₂ * y₂ - x₃ * y₃ - x₄ * y₄) ^ 2 + (x₁ * y₂ + x₂ * y₁ + x₃ * y₄ - x₄ * y₃) ^ 2 +\n          (x₁ * y₃ - x₂ * y₄ + x₃ * y₁ + x₄ * y₂) ^ 2 +\n        (x₁ * y₄ + x₂ * y₃ - x₃ * y₂ + x₄ * y₁) ^ 2 := by\n  ring\n\n"}
{"name":"sum_eight_sq_mul_sum_eight_sq","module":"Mathlib.Algebra.Ring.Identities","initialProofState":"R : Type u_1\ninst✝ : CommRing R\nx₁ x₂ x₃ x₄ x₅ x₆ x₇ x₈ y₁ y₂ y₃ y₄ y₅ y₆ y₇ y₈ : R\n⊢ Eq (HMul.hMul (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HPow.hPow x₁ 2) (HPow.hPow x₂ 2)) (HPow.hPow x₃ 2)) (HPow.hPow x₄ 2)) (HPow.hPow x₅ 2)) (HPow.hPow x₆ 2)) (HPow.hPow x₇ 2)) (HPow.hPow x₈ 2)) (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HPow.hPow y₁ 2) (HPow.hPow y₂ 2)) (HPow.hPow y₃ 2)) (HPow.hPow y₄ 2)) (HPow.hPow y₅ 2)) (HPow.hPow y₆ 2)) (HPow.hPow y₇ 2)) (HPow.hPow y₈ 2))) (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HPow.hPow (HSub.hSub (HSub.hSub (HSub.hSub (HSub.hSub (HSub.hSub (HSub.hSub (HSub.hSub (HMul.hMul x₁ y₁) (HMul.hMul x₂ y₂)) (HMul.hMul x₃ y₃)) (HMul.hMul x₄ y₄)) (HMul.hMul x₅ y₅)) (HMul.hMul x₆ y₆)) (HMul.hMul x₇ y₇)) (HMul.hMul x₈ y₈)) 2) (HPow.hPow (HAdd.hAdd (HSub.hSub (HSub.hSub (HAdd.hAdd (HSub.hSub (HAdd.hAdd (HAdd.hAdd (HMul.hMul x₁ y₂) (HMul.hMul x₂ y₁)) (HMul.hMul x₃ y₄)) (HMul.hMul x₄ y₃)) (HMul.hMul x₅ y₆)) (HMul.hMul x₆ y₅)) (HMul.hMul x₇ y₈)) (HMul.hMul x₈ y₇)) 2)) (HPow.hPow (HSub.hSub (HSub.hSub (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HSub.hSub (HMul.hMul x₁ y₃) (HMul.hMul x₂ y₄)) (HMul.hMul x₃ y₁)) (HMul.hMul x₄ y₂)) (HMul.hMul x₅ y₇)) (HMul.hMul x₆ y₈)) (HMul.hMul x₇ y₅)) (HMul.hMul x₈ y₆)) 2)) (HPow.hPow (HSub.hSub (HAdd.hAdd (HSub.hSub (HAdd.hAdd (HAdd.hAdd (HSub.hSub (HAdd.hAdd (HMul.hMul x₁ y₄) (HMul.hMul x₂ y₃)) (HMul.hMul x₃ y₂)) (HMul.hMul x₄ y₁)) (HMul.hMul x₅ y₈)) (HMul.hMul x₆ y₇)) (HMul.hMul x₇ y₆)) (HMul.hMul x₈ y₅)) 2)) (HPow.hPow (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HSub.hSub (HSub.hSub (HSub.hSub (HMul.hMul x₁ y₅) (HMul.hMul x₂ y₆)) (HMul.hMul x₃ y₇)) (HMul.hMul x₄ y₈)) (HMul.hMul x₅ y₁)) (HMul.hMul x₆ y₂)) (HMul.hMul x₇ y₃)) (HMul.hMul x₈ y₄)) 2)) (HPow.hPow (HAdd.hAdd (HSub.hSub (HAdd.hAdd (HSub.hSub (HAdd.hAdd (HSub.hSub (HAdd.hAdd (HMul.hMul x₁ y₆) (HMul.hMul x₂ y₅)) (HMul.hMul x₃ y₈)) (HMul.hMul x₄ y₇)) (HMul.hMul x₅ y₂)) (HMul.hMul x₆ y₁)) (HMul.hMul x₇ y₄)) (HMul.hMul x₈ y₃)) 2)) (HPow.hPow (HSub.hSub (HAdd.hAdd (HAdd.hAdd (HSub.hSub (HSub.hSub (HAdd.hAdd (HAdd.hAdd (HMul.hMul x₁ y₇) (HMul.hMul x₂ y₈)) (HMul.hMul x₃ y₅)) (HMul.hMul x₄ y₆)) (HMul.hMul x₅ y₃)) (HMul.hMul x₆ y₄)) (HMul.hMul x₇ y₁)) (HMul.hMul x₈ y₂)) 2)) (HPow.hPow (HAdd.hAdd (HAdd.hAdd (HSub.hSub (HSub.hSub (HAdd.hAdd (HAdd.hAdd (HSub.hSub (HMul.hMul x₁ y₈) (HMul.hMul x₂ y₇)) (HMul.hMul x₃ y₆)) (HMul.hMul x₄ y₅)) (HMul.hMul x₅ y₄)) (HMul.hMul x₆ y₃)) (HMul.hMul x₇ y₂)) (HMul.hMul x₈ y₁)) 2))","decl":"/-- Degen's eight squares identity, see <https://en.wikipedia.org/wiki/Degen%27s_eight-square_identity>.\n\nThis sign choice here corresponds to the signs obtained by multiplying two octonions.\n-/\ntheorem sum_eight_sq_mul_sum_eight_sq :\n    (x₁ ^ 2 + x₂ ^ 2 + x₃ ^ 2 + x₄ ^ 2 + x₅ ^ 2 + x₆ ^ 2 + x₇ ^ 2 + x₈ ^ 2) *\n      (y₁ ^ 2 + y₂ ^ 2 + y₃ ^ 2 + y₄ ^ 2 + y₅ ^ 2 + y₆ ^ 2 + y₇ ^ 2 + y₈ ^ 2) =\n    (x₁ * y₁ - x₂ * y₂ - x₃ * y₃ - x₄ * y₄ - x₅ * y₅ - x₆ * y₆ - x₇ * y₇ - x₈ * y₈) ^ 2 +\n      (x₁ * y₂ + x₂ * y₁ + x₃ * y₄ - x₄ * y₃ + x₅ * y₆ - x₆ * y₅ - x₇ * y₈ + x₈ * y₇) ^ 2 +\n      (x₁ * y₃ - x₂ * y₄ + x₃ * y₁ + x₄ * y₂ + x₅ * y₇ + x₆ * y₈ - x₇ * y₅ - x₈ * y₆) ^ 2 +\n      (x₁ * y₄ + x₂ * y₃ - x₃ * y₂ + x₄ * y₁ + x₅ * y₈ - x₆ * y₇ + x₇ * y₆ - x₈ * y₅) ^ 2 +\n      (x₁ * y₅ - x₂ * y₆ - x₃ * y₇ - x₄ * y₈ + x₅ * y₁ + x₆ * y₂ + x₇ * y₃ + x₈ * y₄) ^ 2 +\n      (x₁ * y₆ + x₂ * y₅ - x₃ * y₈ + x₄ * y₇ - x₅ * y₂ + x₆ * y₁ - x₇ * y₄ + x₈ * y₃) ^ 2 +\n      (x₁ * y₇ + x₂ * y₈ + x₃ * y₅ - x₄ * y₆ - x₅ * y₃ + x₆ * y₄ + x₇ * y₁ - x₈ * y₂) ^ 2 +\n      (x₁ * y₈ - x₂ * y₇ + x₃ * y₆ + x₄ * y₅ - x₅ * y₄ - x₆ * y₃ + x₇ * y₂ + x₈ * y₁) ^ 2 := by\n  ring\n"}
