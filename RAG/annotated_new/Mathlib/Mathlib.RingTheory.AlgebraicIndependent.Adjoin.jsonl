{"name":"AlgebraicIndependent.aevalEquivField_apply_coe","module":"Mathlib.RingTheory.AlgebraicIndependent.Adjoin","initialProofState":"ι : Type u_1\nF : Type u_2\nE : Type u_3\nx : ι → E\ninst✝² : Field F\ninst✝¹ : Field E\ninst✝ : Algebra F E\nhx : AlgebraicIndependent F x\na : FractionRing (MvPolynomial ι F)\n⊢ Eq (↑(hx.aevalEquivField a)) ((IsFractionRing.lift ⋯) a)","decl":"@[simp]\ntheorem aevalEquivField_apply_coe (a : FractionRing (MvPolynomial ι F)) :\n    hx.aevalEquivField a =\n      IsFractionRing.lift (algebraicIndependent_iff_injective_aeval.2 hx) a := rfl\n\n"}
{"name":"AlgebraicIndependent.aevalEquivField_algebraMap_apply_coe","module":"Mathlib.RingTheory.AlgebraicIndependent.Adjoin","initialProofState":"ι : Type u_1\nF : Type u_2\nE : Type u_3\nx : ι → E\ninst✝² : Field F\ninst✝¹ : Field E\ninst✝ : Algebra F E\nhx : AlgebraicIndependent F x\na : MvPolynomial ι F\n⊢ Eq (↑(hx.aevalEquivField ((algebraMap (MvPolynomial ι F) (FractionRing (MvPolynomial ι F))) a))) ((MvPolynomial.aeval x) a)","decl":"theorem aevalEquivField_algebraMap_apply_coe (a : MvPolynomial ι F) :\n    hx.aevalEquivField (algebraMap _ _ a) = aeval x a := by\n  simp\n\n"}
{"name":"AlgebraicIndependent.lift_reprField","module":"Mathlib.RingTheory.AlgebraicIndependent.Adjoin","initialProofState":"ι : Type u_1\nF : Type u_2\nE : Type u_3\nx : ι → E\ninst✝² : Field F\ninst✝¹ : Field E\ninst✝ : Algebra F E\nhx : AlgebraicIndependent F x\np : Subtype fun x_1 => Membership.mem (IntermediateField.adjoin F (Set.range x)) x_1\n⊢ Eq ((IsFractionRing.lift ⋯) (hx.reprField p)) ↑p","decl":"@[simp]\ntheorem lift_reprField (p) :\n    IsFractionRing.lift (algebraicIndependent_iff_injective_aeval.2 hx) (hx.reprField p) = p :=\n  Subtype.ext_iff.1 (AlgEquiv.apply_symm_apply hx.aevalEquivField p)\n\n"}
{"name":"AlgebraicIndependent.liftAlgHom_comp_reprField","module":"Mathlib.RingTheory.AlgebraicIndependent.Adjoin","initialProofState":"ι : Type u_1\nF : Type u_2\nE : Type u_3\nx : ι → E\ninst✝² : Field F\ninst✝¹ : Field E\ninst✝ : Algebra F E\nhx : AlgebraicIndependent F x\n⊢ Eq ((IsFractionRing.liftAlgHom ⋯).comp hx.reprField) (IntermediateField.adjoin F (Set.range x)).val","decl":"theorem liftAlgHom_comp_reprField :\n    (IsFractionRing.liftAlgHom (algebraicIndependent_iff_injective_aeval.2 hx)).comp hx.reprField =\n      IntermediateField.val _ :=\n  AlgHom.ext <| hx.lift_reprField\n\n"}
