{"name":"Filter.tendsto_atTop_add_left_of_le'","module":"Mathlib.Order.Filter.AtTopBot.Group","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedAddCommGroup β\nl : Filter α\nf g : α → β\nC : β\nhf : Filter.Eventually (fun x => LE.le C (f x)) l\nhg : Filter.Tendsto g l Filter.atTop\n⊢ Filter.Tendsto (fun x => HAdd.hAdd (f x) (g x)) l Filter.atTop","decl":"theorem tendsto_atTop_add_left_of_le' (C : β) (hf : ∀ᶠ x in l, C ≤ f x) (hg : Tendsto g l atTop) :\n    Tendsto (fun x => f x + g x) l atTop :=\n  @tendsto_atTop_of_add_bdd_above_left' _ _ _ l (fun x => -f x) (fun x => f x + g x) (-C) (by simpa)\n    (by simpa)\n\n"}
{"name":"Filter.tendsto_atBot_add_left_of_ge'","module":"Mathlib.Order.Filter.AtTopBot.Group","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedAddCommGroup β\nl : Filter α\nf g : α → β\nC : β\nhf : Filter.Eventually (fun x => LE.le (f x) C) l\nhg : Filter.Tendsto g l Filter.atBot\n⊢ Filter.Tendsto (fun x => HAdd.hAdd (f x) (g x)) l Filter.atBot","decl":"theorem tendsto_atBot_add_left_of_ge' (C : β) (hf : ∀ᶠ x in l, f x ≤ C) (hg : Tendsto g l atBot) :\n    Tendsto (fun x => f x + g x) l atBot :=\n  @tendsto_atTop_add_left_of_le' _ βᵒᵈ _ _ _ _ C hf hg\n\n"}
{"name":"Filter.tendsto_atTop_add_left_of_le","module":"Mathlib.Order.Filter.AtTopBot.Group","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedAddCommGroup β\nl : Filter α\nf g : α → β\nC : β\nhf : ∀ (x : α), LE.le C (f x)\nhg : Filter.Tendsto g l Filter.atTop\n⊢ Filter.Tendsto (fun x => HAdd.hAdd (f x) (g x)) l Filter.atTop","decl":"theorem tendsto_atTop_add_left_of_le (C : β) (hf : ∀ x, C ≤ f x) (hg : Tendsto g l atTop) :\n    Tendsto (fun x => f x + g x) l atTop :=\n  tendsto_atTop_add_left_of_le' l C (univ_mem' hf) hg\n\n"}
{"name":"Filter.tendsto_atBot_add_left_of_ge","module":"Mathlib.Order.Filter.AtTopBot.Group","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedAddCommGroup β\nl : Filter α\nf g : α → β\nC : β\nhf : ∀ (x : α), LE.le (f x) C\nhg : Filter.Tendsto g l Filter.atBot\n⊢ Filter.Tendsto (fun x => HAdd.hAdd (f x) (g x)) l Filter.atBot","decl":"theorem tendsto_atBot_add_left_of_ge (C : β) (hf : ∀ x, f x ≤ C) (hg : Tendsto g l atBot) :\n    Tendsto (fun x => f x + g x) l atBot :=\n  @tendsto_atTop_add_left_of_le _ βᵒᵈ _ _ _ _ C hf hg\n\n"}
{"name":"Filter.tendsto_atTop_add_right_of_le'","module":"Mathlib.Order.Filter.AtTopBot.Group","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedAddCommGroup β\nl : Filter α\nf g : α → β\nC : β\nhf : Filter.Tendsto f l Filter.atTop\nhg : Filter.Eventually (fun x => LE.le C (g x)) l\n⊢ Filter.Tendsto (fun x => HAdd.hAdd (f x) (g x)) l Filter.atTop","decl":"theorem tendsto_atTop_add_right_of_le' (C : β) (hf : Tendsto f l atTop) (hg : ∀ᶠ x in l, C ≤ g x) :\n    Tendsto (fun x => f x + g x) l atTop :=\n  @tendsto_atTop_of_add_bdd_above_right' _ _ _ l (fun x => f x + g x) (fun x => -g x) (-C)\n    (by simp [hg]) (by simp [hf])\n\n"}
{"name":"Filter.tendsto_atBot_add_right_of_ge'","module":"Mathlib.Order.Filter.AtTopBot.Group","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedAddCommGroup β\nl : Filter α\nf g : α → β\nC : β\nhf : Filter.Tendsto f l Filter.atBot\nhg : Filter.Eventually (fun x => LE.le (g x) C) l\n⊢ Filter.Tendsto (fun x => HAdd.hAdd (f x) (g x)) l Filter.atBot","decl":"theorem tendsto_atBot_add_right_of_ge' (C : β) (hf : Tendsto f l atBot) (hg : ∀ᶠ x in l, g x ≤ C) :\n    Tendsto (fun x => f x + g x) l atBot :=\n  @tendsto_atTop_add_right_of_le' _ βᵒᵈ _ _ _ _ C hf hg\n\n"}
{"name":"Filter.tendsto_atTop_add_right_of_le","module":"Mathlib.Order.Filter.AtTopBot.Group","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedAddCommGroup β\nl : Filter α\nf g : α → β\nC : β\nhf : Filter.Tendsto f l Filter.atTop\nhg : ∀ (x : α), LE.le C (g x)\n⊢ Filter.Tendsto (fun x => HAdd.hAdd (f x) (g x)) l Filter.atTop","decl":"theorem tendsto_atTop_add_right_of_le (C : β) (hf : Tendsto f l atTop) (hg : ∀ x, C ≤ g x) :\n    Tendsto (fun x => f x + g x) l atTop :=\n  tendsto_atTop_add_right_of_le' l C hf (univ_mem' hg)\n\n"}
{"name":"Filter.tendsto_atBot_add_right_of_ge","module":"Mathlib.Order.Filter.AtTopBot.Group","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedAddCommGroup β\nl : Filter α\nf g : α → β\nC : β\nhf : Filter.Tendsto f l Filter.atBot\nhg : ∀ (x : α), LE.le (g x) C\n⊢ Filter.Tendsto (fun x => HAdd.hAdd (f x) (g x)) l Filter.atBot","decl":"theorem tendsto_atBot_add_right_of_ge (C : β) (hf : Tendsto f l atBot) (hg : ∀ x, g x ≤ C) :\n    Tendsto (fun x => f x + g x) l atBot :=\n  @tendsto_atTop_add_right_of_le _ βᵒᵈ _ _ _ _ C hf hg\n\n"}
{"name":"Filter.tendsto_atTop_add_const_left","module":"Mathlib.Order.Filter.AtTopBot.Group","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedAddCommGroup β\nl : Filter α\nf : α → β\nC : β\nhf : Filter.Tendsto f l Filter.atTop\n⊢ Filter.Tendsto (fun x => HAdd.hAdd C (f x)) l Filter.atTop","decl":"theorem tendsto_atTop_add_const_left (C : β) (hf : Tendsto f l atTop) :\n    Tendsto (fun x => C + f x) l atTop :=\n  tendsto_atTop_add_left_of_le' l C (univ_mem' fun _ => le_refl C) hf\n\n"}
{"name":"Filter.tendsto_atBot_add_const_left","module":"Mathlib.Order.Filter.AtTopBot.Group","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedAddCommGroup β\nl : Filter α\nf : α → β\nC : β\nhf : Filter.Tendsto f l Filter.atBot\n⊢ Filter.Tendsto (fun x => HAdd.hAdd C (f x)) l Filter.atBot","decl":"theorem tendsto_atBot_add_const_left (C : β) (hf : Tendsto f l atBot) :\n    Tendsto (fun x => C + f x) l atBot :=\n  @tendsto_atTop_add_const_left _ βᵒᵈ _ _ _ C hf\n\n"}
{"name":"Filter.tendsto_atTop_add_const_right","module":"Mathlib.Order.Filter.AtTopBot.Group","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedAddCommGroup β\nl : Filter α\nf : α → β\nC : β\nhf : Filter.Tendsto f l Filter.atTop\n⊢ Filter.Tendsto (fun x => HAdd.hAdd (f x) C) l Filter.atTop","decl":"theorem tendsto_atTop_add_const_right (C : β) (hf : Tendsto f l atTop) :\n    Tendsto (fun x => f x + C) l atTop :=\n  tendsto_atTop_add_right_of_le' l C hf (univ_mem' fun _ => le_refl C)\n\n"}
{"name":"Filter.tendsto_atBot_add_const_right","module":"Mathlib.Order.Filter.AtTopBot.Group","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedAddCommGroup β\nl : Filter α\nf : α → β\nC : β\nhf : Filter.Tendsto f l Filter.atBot\n⊢ Filter.Tendsto (fun x => HAdd.hAdd (f x) C) l Filter.atBot","decl":"theorem tendsto_atBot_add_const_right (C : β) (hf : Tendsto f l atBot) :\n    Tendsto (fun x => f x + C) l atBot :=\n  @tendsto_atTop_add_const_right _ βᵒᵈ _ _ _ C hf\n\n"}
{"name":"Filter.map_neg_atBot","module":"Mathlib.Order.Filter.AtTopBot.Group","initialProofState":"β : Type u_2\ninst✝ : OrderedAddCommGroup β\n⊢ Eq (Filter.map Neg.neg Filter.atBot) Filter.atTop","decl":"theorem map_neg_atBot : map (Neg.neg : β → β) atBot = atTop :=\n  (OrderIso.neg β).map_atBot\n\n"}
{"name":"Filter.map_neg_atTop","module":"Mathlib.Order.Filter.AtTopBot.Group","initialProofState":"β : Type u_2\ninst✝ : OrderedAddCommGroup β\n⊢ Eq (Filter.map Neg.neg Filter.atTop) Filter.atBot","decl":"theorem map_neg_atTop : map (Neg.neg : β → β) atTop = atBot :=\n  (OrderIso.neg β).map_atTop\n\n"}
{"name":"Filter.comap_neg_atBot","module":"Mathlib.Order.Filter.AtTopBot.Group","initialProofState":"β : Type u_2\ninst✝ : OrderedAddCommGroup β\n⊢ Eq (Filter.comap Neg.neg Filter.atBot) Filter.atTop","decl":"theorem comap_neg_atBot : comap (Neg.neg : β → β) atBot = atTop :=\n  (OrderIso.neg β).comap_atTop\n\n"}
{"name":"Filter.comap_neg_atTop","module":"Mathlib.Order.Filter.AtTopBot.Group","initialProofState":"β : Type u_2\ninst✝ : OrderedAddCommGroup β\n⊢ Eq (Filter.comap Neg.neg Filter.atTop) Filter.atBot","decl":"theorem comap_neg_atTop : comap (Neg.neg : β → β) atTop = atBot :=\n  (OrderIso.neg β).comap_atBot\n\n"}
{"name":"Filter.tendsto_neg_atTop_atBot","module":"Mathlib.Order.Filter.AtTopBot.Group","initialProofState":"β : Type u_2\ninst✝ : OrderedAddCommGroup β\n⊢ Filter.Tendsto Neg.neg Filter.atTop Filter.atBot","decl":"theorem tendsto_neg_atTop_atBot : Tendsto (Neg.neg : β → β) atTop atBot :=\n  (OrderIso.neg β).tendsto_atTop\n\n"}
{"name":"Filter.tendsto_neg_atBot_atTop","module":"Mathlib.Order.Filter.AtTopBot.Group","initialProofState":"β : Type u_2\ninst✝ : OrderedAddCommGroup β\n⊢ Filter.Tendsto Neg.neg Filter.atBot Filter.atTop","decl":"theorem tendsto_neg_atBot_atTop : Tendsto (Neg.neg : β → β) atBot atTop :=\n  @tendsto_neg_atTop_atBot βᵒᵈ _\n\n"}
{"name":"Filter.tendsto_neg_atTop_iff","module":"Mathlib.Order.Filter.AtTopBot.Group","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedAddCommGroup β\nl : Filter α\nf : α → β\n⊢ Iff (Filter.Tendsto (fun x => Neg.neg (f x)) l Filter.atTop) (Filter.Tendsto f l Filter.atBot)","decl":"@[simp]\ntheorem tendsto_neg_atTop_iff : Tendsto (fun x => -f x) l atTop ↔ Tendsto f l atBot :=\n  (OrderIso.neg β).tendsto_atBot_iff\n\n"}
{"name":"Filter.tendsto_neg_atBot_iff","module":"Mathlib.Order.Filter.AtTopBot.Group","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝ : OrderedAddCommGroup β\nl : Filter α\nf : α → β\n⊢ Iff (Filter.Tendsto (fun x => Neg.neg (f x)) l Filter.atBot) (Filter.Tendsto f l Filter.atTop)","decl":"@[simp]\ntheorem tendsto_neg_atBot_iff : Tendsto (fun x => -f x) l atBot ↔ Tendsto f l atTop :=\n  (OrderIso.neg β).tendsto_atTop_iff\n\n"}
{"name":"Filter.tendsto_abs_atTop_atTop","module":"Mathlib.Order.Filter.AtTopBot.Group","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedAddCommGroup α\n⊢ Filter.Tendsto abs Filter.atTop Filter.atTop","decl":"/-- $\\lim_{x\\to+\\infty}|x|=+\\infty$ -/\ntheorem tendsto_abs_atTop_atTop : Tendsto (abs : α → α) atTop atTop :=\n  tendsto_atTop_mono le_abs_self tendsto_id\n\n"}
{"name":"Filter.tendsto_abs_atBot_atTop","module":"Mathlib.Order.Filter.AtTopBot.Group","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedAddCommGroup α\n⊢ Filter.Tendsto abs Filter.atBot Filter.atTop","decl":"/-- $\\lim_{x\\to-\\infty}|x|=+\\infty$ -/\ntheorem tendsto_abs_atBot_atTop : Tendsto (abs : α → α) atBot atTop :=\n  tendsto_atTop_mono neg_le_abs tendsto_neg_atBot_atTop\n\n"}
{"name":"Filter.comap_abs_atTop","module":"Mathlib.Order.Filter.AtTopBot.Group","initialProofState":"α : Type u_1\ninst✝ : LinearOrderedAddCommGroup α\n⊢ Eq (Filter.comap abs Filter.atTop) (Max.max Filter.atBot Filter.atTop)","decl":"@[simp]\ntheorem comap_abs_atTop : comap (abs : α → α) atTop = atBot ⊔ atTop := by\n  refine\n    le_antisymm (((atTop_basis.comap _).le_basis_iff (atBot_basis.sup atTop_basis)).2 ?_)\n      (sup_le tendsto_abs_atBot_atTop.le_comap tendsto_abs_atTop_atTop.le_comap)\n  rintro ⟨a, b⟩ -\n  refine ⟨max (-a) b, trivial, fun x hx => ?_⟩\n  rw [mem_preimage, mem_Ici, le_abs', max_le_iff, ← min_neg_neg, le_min_iff, neg_neg] at hx\n  exact hx.imp And.left And.right\n\n"}
