{"name":"Complex.hasSum_cos'","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Series","initialProofState":"z : Complex\n⊢ HasSum (fun n => HDiv.hDiv (HPow.hPow (HMul.hMul z Complex.I) (HMul.hMul 2 n)) ↑(HMul.hMul 2 n).factorial) (Complex.cos z)","decl":"theorem Complex.hasSum_cos' (z : ℂ) :\n    HasSum (fun n : ℕ => (z * Complex.I) ^ (2 * n) / ↑(2 * n)!) (Complex.cos z) := by\n  rw [Complex.cos, Complex.exp_eq_exp_ℂ]\n  have := ((expSeries_div_hasSum_exp ℂ (z * Complex.I)).add\n    (expSeries_div_hasSum_exp ℂ (-z * Complex.I))).div_const 2\n  replace := (Nat.divModEquiv 2).symm.hasSum_iff.mpr this\n  dsimp [Function.comp_def] at this\n  simp_rw [← mul_comm 2 _] at this\n  refine this.prod_fiberwise fun k => ?_\n  dsimp only\n  convert hasSum_fintype (_ : Fin 2 → ℂ) using 1\n  rw [Fin.sum_univ_two]\n  simp_rw [Fin.val_zero, Fin.val_one, add_zero, pow_succ, pow_mul, mul_pow, neg_sq, ← two_mul,\n    neg_mul, mul_neg, neg_div, add_neg_cancel, zero_div, add_zero,\n    mul_div_cancel_left₀ _ (two_ne_zero : (2 : ℂ) ≠ 0)]\n\n"}
{"name":"Complex.hasSum_sin'","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Series","initialProofState":"z : Complex\n⊢ HasSum (fun n => HDiv.hDiv (HDiv.hDiv (HPow.hPow (HMul.hMul z Complex.I) (HAdd.hAdd (HMul.hMul 2 n) 1)) ↑(HAdd.hAdd (HMul.hMul 2 n) 1).factorial) Complex.I) (Complex.sin z)","decl":"theorem Complex.hasSum_sin' (z : ℂ) :\n    HasSum (fun n : ℕ => (z * Complex.I) ^ (2 * n + 1) / ↑(2 * n + 1)! / Complex.I)\n      (Complex.sin z) := by\n  rw [Complex.sin, Complex.exp_eq_exp_ℂ]\n  have := (((expSeries_div_hasSum_exp ℂ (-z * Complex.I)).sub\n    (expSeries_div_hasSum_exp ℂ (z * Complex.I))).mul_right Complex.I).div_const 2\n  replace := (Nat.divModEquiv 2).symm.hasSum_iff.mpr this\n  dsimp [Function.comp_def] at this\n  simp_rw [← mul_comm 2 _] at this\n  refine this.prod_fiberwise fun k => ?_\n  dsimp only\n  convert hasSum_fintype (_ : Fin 2 → ℂ) using 1\n  rw [Fin.sum_univ_two]\n  simp_rw [Fin.val_zero, Fin.val_one, add_zero, pow_succ, pow_mul, mul_pow, neg_sq, sub_self,\n    zero_mul, zero_div, zero_add, neg_mul, mul_neg, neg_div, ← neg_add', ← two_mul,\n    neg_mul, neg_div, mul_assoc, mul_div_cancel_left₀ _ (two_ne_zero : (2 : ℂ) ≠ 0), Complex.div_I]\n\n"}
{"name":"Complex.hasSum_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Series","initialProofState":"z : Complex\n⊢ HasSum (fun n => HDiv.hDiv (HMul.hMul (HPow.hPow (-1) n) (HPow.hPow z (HMul.hMul 2 n))) ↑(HMul.hMul 2 n).factorial) (Complex.cos z)","decl":"/-- The power series expansion of `Complex.cos`. -/\ntheorem Complex.hasSum_cos (z : ℂ) :\n    HasSum (fun n : ℕ => (-1) ^ n * z ^ (2 * n) / ↑(2 * n)!) (Complex.cos z) := by\n  convert Complex.hasSum_cos' z using 1\n  simp_rw [mul_pow, pow_mul, Complex.I_sq, mul_comm]\n\n"}
{"name":"Complex.hasSum_sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Series","initialProofState":"z : Complex\n⊢ HasSum (fun n => HDiv.hDiv (HMul.hMul (HPow.hPow (-1) n) (HPow.hPow z (HAdd.hAdd (HMul.hMul 2 n) 1))) ↑(HAdd.hAdd (HMul.hMul 2 n) 1).factorial) (Complex.sin z)","decl":"/-- The power series expansion of `Complex.sin`. -/\ntheorem Complex.hasSum_sin (z : ℂ) :\n    HasSum (fun n : ℕ => (-1) ^ n * z ^ (2 * n + 1) / ↑(2 * n + 1)!) (Complex.sin z) := by\n  convert Complex.hasSum_sin' z using 1\n  simp_rw [mul_pow, pow_succ, pow_mul, Complex.I_sq, ← mul_assoc, mul_div_assoc, div_right_comm,\n    div_self Complex.I_ne_zero, mul_comm _ ((-1 : ℂ) ^ _), mul_one_div, mul_div_assoc, mul_assoc]\n\n"}
{"name":"Complex.cos_eq_tsum'","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Series","initialProofState":"z : Complex\n⊢ Eq (Complex.cos z) (tsum fun n => HDiv.hDiv (HPow.hPow (HMul.hMul z Complex.I) (HMul.hMul 2 n)) ↑(HMul.hMul 2 n).factorial)","decl":"theorem Complex.cos_eq_tsum' (z : ℂ) :\n    Complex.cos z = ∑' n : ℕ, (z * Complex.I) ^ (2 * n) / ↑(2 * n)! :=\n  (Complex.hasSum_cos' z).tsum_eq.symm\n\n"}
{"name":"Complex.sin_eq_tsum'","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Series","initialProofState":"z : Complex\n⊢ Eq (Complex.sin z) (tsum fun n => HDiv.hDiv (HDiv.hDiv (HPow.hPow (HMul.hMul z Complex.I) (HAdd.hAdd (HMul.hMul 2 n) 1)) ↑(HAdd.hAdd (HMul.hMul 2 n) 1).factorial) Complex.I)","decl":"theorem Complex.sin_eq_tsum' (z : ℂ) :\n    Complex.sin z = ∑' n : ℕ, (z * Complex.I) ^ (2 * n + 1) / ↑(2 * n + 1)! / Complex.I :=\n  (Complex.hasSum_sin' z).tsum_eq.symm\n\n"}
{"name":"Complex.cos_eq_tsum","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Series","initialProofState":"z : Complex\n⊢ Eq (Complex.cos z) (tsum fun n => HDiv.hDiv (HMul.hMul (HPow.hPow (-1) n) (HPow.hPow z (HMul.hMul 2 n))) ↑(HMul.hMul 2 n).factorial)","decl":"theorem Complex.cos_eq_tsum (z : ℂ) :\n    Complex.cos z = ∑' n : ℕ, (-1) ^ n * z ^ (2 * n) / ↑(2 * n)! :=\n  (Complex.hasSum_cos z).tsum_eq.symm\n\n"}
{"name":"Complex.sin_eq_tsum","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Series","initialProofState":"z : Complex\n⊢ Eq (Complex.sin z) (tsum fun n => HDiv.hDiv (HMul.hMul (HPow.hPow (-1) n) (HPow.hPow z (HAdd.hAdd (HMul.hMul 2 n) 1))) ↑(HAdd.hAdd (HMul.hMul 2 n) 1).factorial)","decl":"theorem Complex.sin_eq_tsum (z : ℂ) :\n    Complex.sin z = ∑' n : ℕ, (-1) ^ n * z ^ (2 * n + 1) / ↑(2 * n + 1)! :=\n  (Complex.hasSum_sin z).tsum_eq.symm\n\n"}
{"name":"Real.hasSum_cos","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Series","initialProofState":"r : Real\n⊢ HasSum (fun n => HDiv.hDiv (HMul.hMul (HPow.hPow (-1) n) (HPow.hPow r (HMul.hMul 2 n))) ↑(HMul.hMul 2 n).factorial) (Real.cos r)","decl":"/-- The power series expansion of `Real.cos`. -/\ntheorem Real.hasSum_cos (r : ℝ) :\n    HasSum (fun n : ℕ => (-1) ^ n * r ^ (2 * n) / ↑(2 * n)!) (Real.cos r) :=\n  mod_cast Complex.hasSum_cos r\n\n"}
{"name":"Real.hasSum_sin","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Series","initialProofState":"r : Real\n⊢ HasSum (fun n => HDiv.hDiv (HMul.hMul (HPow.hPow (-1) n) (HPow.hPow r (HAdd.hAdd (HMul.hMul 2 n) 1))) ↑(HAdd.hAdd (HMul.hMul 2 n) 1).factorial) (Real.sin r)","decl":"/-- The power series expansion of `Real.sin`. -/\ntheorem Real.hasSum_sin (r : ℝ) :\n    HasSum (fun n : ℕ => (-1) ^ n * r ^ (2 * n + 1) / ↑(2 * n + 1)!) (Real.sin r) :=\n  mod_cast Complex.hasSum_sin r\n\n"}
{"name":"Real.cos_eq_tsum","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Series","initialProofState":"r : Real\n⊢ Eq (Real.cos r) (tsum fun n => HDiv.hDiv (HMul.hMul (HPow.hPow (-1) n) (HPow.hPow r (HMul.hMul 2 n))) ↑(HMul.hMul 2 n).factorial)","decl":"theorem Real.cos_eq_tsum (r : ℝ) : Real.cos r = ∑' n : ℕ, (-1) ^ n * r ^ (2 * n) / ↑(2 * n)! :=\n  (Real.hasSum_cos r).tsum_eq.symm\n\n"}
{"name":"Real.sin_eq_tsum","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Series","initialProofState":"r : Real\n⊢ Eq (Real.sin r) (tsum fun n => HDiv.hDiv (HMul.hMul (HPow.hPow (-1) n) (HPow.hPow r (HAdd.hAdd (HMul.hMul 2 n) 1))) ↑(HAdd.hAdd (HMul.hMul 2 n) 1).factorial)","decl":"theorem Real.sin_eq_tsum (r : ℝ) :\n    Real.sin r = ∑' n : ℕ, (-1) ^ n * r ^ (2 * n + 1) / ↑(2 * n + 1)! :=\n  (Real.hasSum_sin r).tsum_eq.symm\n\n"}
{"name":"Complex.hasSum_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Series","initialProofState":"z : Complex\n⊢ HasSum (fun n => HDiv.hDiv (HPow.hPow z (HMul.hMul 2 n)) ↑(HMul.hMul 2 n).factorial) (Complex.cosh z)","decl":"/-- The power series expansion of `Complex.cosh`. -/\nlemma hasSum_cosh (z : ℂ) : HasSum (fun n ↦ z ^ (2 * n) / ↑(2 * n)!) (cosh z) := by\n  simpa [mul_assoc, cos_mul_I] using hasSum_cos' (z * I)\n\n"}
{"name":"Complex.hasSum_sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Series","initialProofState":"z : Complex\n⊢ HasSum (fun n => HDiv.hDiv (HPow.hPow z (HAdd.hAdd (HMul.hMul 2 n) 1)) ↑(HAdd.hAdd (HMul.hMul 2 n) 1).factorial) (Complex.sinh z)","decl":"/-- The power series expansion of `Complex.sinh`. -/\nlemma hasSum_sinh (z : ℂ) : HasSum (fun n ↦ z ^ (2 * n + 1) / ↑(2 * n + 1)!) (sinh z) := by\n  simpa [mul_assoc, sin_mul_I, neg_pow z, pow_add, pow_mul, neg_mul, neg_div]\n    using (hasSum_sin' (z * I)).mul_right (-I)\n\n"}
{"name":"Complex.cosh_eq_tsum","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Series","initialProofState":"z : Complex\n⊢ Eq (Complex.cosh z) (tsum fun n => HDiv.hDiv (HPow.hPow z (HMul.hMul 2 n)) ↑(HMul.hMul 2 n).factorial)","decl":"lemma cosh_eq_tsum (z : ℂ) : cosh z = ∑' n, z ^ (2 * n) / ↑(2 * n)! := z.hasSum_cosh.tsum_eq.symm\n\n"}
{"name":"Complex.sinh_eq_tsum","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Series","initialProofState":"z : Complex\n⊢ Eq (Complex.sinh z) (tsum fun n => HDiv.hDiv (HPow.hPow z (HAdd.hAdd (HMul.hMul 2 n) 1)) ↑(HAdd.hAdd (HMul.hMul 2 n) 1).factorial)","decl":"lemma sinh_eq_tsum (z : ℂ) : sinh z = ∑' n, z ^ (2 * n + 1) / ↑(2 * n + 1)! :=\n  z.hasSum_sinh.tsum_eq.symm\n\n"}
{"name":"Real.hasSum_cosh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Series","initialProofState":"r : Real\n⊢ HasSum (fun n => HDiv.hDiv (HPow.hPow r (HMul.hMul 2 n)) ↑(HMul.hMul 2 n).factorial) (Real.cosh r)","decl":"/-- The power series expansion of `Real.cosh`. -/\nlemma hasSum_cosh (r : ℝ) : HasSum (fun n  ↦ r ^ (2 * n) / ↑(2 * n)!) (cosh r) :=\n  mod_cast Complex.hasSum_cosh r\n\n"}
{"name":"Real.hasSum_sinh","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Series","initialProofState":"r : Real\n⊢ HasSum (fun n => HDiv.hDiv (HPow.hPow r (HAdd.hAdd (HMul.hMul 2 n) 1)) ↑(HAdd.hAdd (HMul.hMul 2 n) 1).factorial) (Real.sinh r)","decl":"/-- The power series expansion of `Real.sinh`. -/\nlemma hasSum_sinh (r : ℝ) : HasSum (fun n ↦ r ^ (2 * n + 1) / ↑(2 * n + 1)!) (sinh r) :=\n  mod_cast Complex.hasSum_sinh r\n\n"}
{"name":"Real.cosh_eq_tsum","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Series","initialProofState":"r : Real\n⊢ Eq (Real.cosh r) (tsum fun n => HDiv.hDiv (HPow.hPow r (HMul.hMul 2 n)) ↑(HMul.hMul 2 n).factorial)","decl":"lemma cosh_eq_tsum (r : ℝ) : cosh r = ∑' n, r ^ (2 * n) / ↑(2 * n)! := r.hasSum_cosh.tsum_eq.symm\n\n"}
{"name":"Real.sinh_eq_tsum","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Series","initialProofState":"r : Real\n⊢ Eq (Real.sinh r) (tsum fun n => HDiv.hDiv (HPow.hPow r (HAdd.hAdd (HMul.hMul 2 n) 1)) ↑(HAdd.hAdd (HMul.hMul 2 n) 1).factorial)","decl":"lemma sinh_eq_tsum (r : ℝ) : sinh r = ∑' n, r ^ (2 * n + 1) / ↑(2 * n + 1)! :=\n  r.hasSum_sinh.tsum_eq.symm\n\n"}
{"name":"Real.cosh_le_exp_half_sq","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.Series","initialProofState":"x : Real\n⊢ LE.le (Real.cosh x) (Real.exp (HDiv.hDiv (HPow.hPow x 2) 2))","decl":"lemma cosh_le_exp_half_sq (x : ℝ) : cosh x ≤ exp (x ^ 2 / 2) := by\n  rw [cosh_eq_tsum, exp_eq_exp_ℝ, exp_eq_tsum]\n  refine tsum_le_tsum (fun i ↦ ?_) x.hasSum_cosh.summable <| expSeries_summable' (x ^ 2 / 2)\n  simp only [div_pow, pow_mul, smul_eq_mul, inv_mul_eq_div, div_div]\n  gcongr\n  norm_cast\n  exact Nat.two_pow_mul_factorial_le_factorial_two_mul _\n\n"}
