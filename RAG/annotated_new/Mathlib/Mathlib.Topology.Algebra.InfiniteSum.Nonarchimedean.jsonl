{"name":"NonarchimedeanGroup.cauchySeq_prod_of_tendsto_cofinite_one","module":"Mathlib.Topology.Algebra.InfiniteSum.Nonarchimedean","initialProofState":"α : Type u_1\nG : Type u_2\ninst✝³ : CommGroup G\ninst✝² : UniformSpace G\ninst✝¹ : UniformGroup G\ninst✝ : NonarchimedeanGroup G\nf : α → G\nhf : Filter.Tendsto f Filter.cofinite (nhds 1)\n⊢ CauchySeq fun s => s.prod fun i => f i","decl":"/-- Let `G` be a nonarchimedean multiplicative abelian group, and let `f : α → G` be a function that\ntends to one on the filter of cofinite sets. For each finite subset of `α`, consider the partial\nproduct of `f` on that subset. These partial products form a Cauchy filter. -/\n@[to_additive \"Let `G` be a nonarchimedean additive abelian group, and let `f : α → G` be a function\nthat tends to zero on the filter of cofinite sets. For each finite subset of `α`, consider the\npartial sum of `f` on that subset. These partial sums form a Cauchy filter.\"]\ntheorem cauchySeq_prod_of_tendsto_cofinite_one {f : α → G} (hf : Tendsto f cofinite (𝓝 1)) :\n    CauchySeq (fun s ↦ ∏ i ∈ s, f i) := by\n  /- Let `U` be a neighborhood of `1`. It suffices to show that there exists `s : Finset α` such\n  that for any `t : Finset α` disjoint from `s`, we have `∏ i ∈ t, f i ∈ U`. -/\n  apply cauchySeq_finset_iff_prod_vanishing.mpr\n  intro U hU\n  -- Since `G` is nonarchimedean, `U` contains an open subgroup `V`.\n  rcases is_nonarchimedean U hU with ⟨V, hV⟩\n  /- Let `s` be the set of all indices `i : α` such that `f i ∉ V`. By our assumption `hf`, this is\n  finite. -/\n  use (tendsto_def.mp hf V V.mem_nhds_one).toFinset\n  /- For any `t : Finset α` disjoint from `s`, the product `∏ i ∈ t, f i` is a product of elements\n  of `V`, so it is an element of `V` too. Thus, `∏ i ∈ t, f i ∈ U`, as desired. -/\n  intro t ht\n  apply hV\n  apply Subgroup.prod_mem\n  intro i hi\n  simpa using Finset.disjoint_left.mp ht hi\n\n"}
{"name":"NonarchimedeanAddGroup.cauchySeq_sum_of_tendsto_cofinite_zero","module":"Mathlib.Topology.Algebra.InfiniteSum.Nonarchimedean","initialProofState":"α : Type u_1\nG : Type u_2\ninst✝³ : AddCommGroup G\ninst✝² : UniformSpace G\ninst✝¹ : UniformAddGroup G\ninst✝ : NonarchimedeanAddGroup G\nf : α → G\nhf : Filter.Tendsto f Filter.cofinite (nhds 0)\n⊢ CauchySeq fun s => s.sum fun i => f i","decl":"/-- Let `G` be a nonarchimedean multiplicative abelian group, and let `f : α → G` be a function that\ntends to one on the filter of cofinite sets. For each finite subset of `α`, consider the partial\nproduct of `f` on that subset. These partial products form a Cauchy filter. -/\n@[to_additive \"Let `G` be a nonarchimedean additive abelian group, and let `f : α → G` be a function\nthat tends to zero on the filter of cofinite sets. For each finite subset of `α`, consider the\npartial sum of `f` on that subset. These partial sums form a Cauchy filter.\"]\ntheorem cauchySeq_prod_of_tendsto_cofinite_one {f : α → G} (hf : Tendsto f cofinite (𝓝 1)) :\n    CauchySeq (fun s ↦ ∏ i ∈ s, f i) := by\n  /- Let `U` be a neighborhood of `1`. It suffices to show that there exists `s : Finset α` such\n  that for any `t : Finset α` disjoint from `s`, we have `∏ i ∈ t, f i ∈ U`. -/\n  apply cauchySeq_finset_iff_prod_vanishing.mpr\n  intro U hU\n  -- Since `G` is nonarchimedean, `U` contains an open subgroup `V`.\n  rcases is_nonarchimedean U hU with ⟨V, hV⟩\n  /- Let `s` be the set of all indices `i : α` such that `f i ∉ V`. By our assumption `hf`, this is\n  finite. -/\n  use (tendsto_def.mp hf V V.mem_nhds_one).toFinset\n  /- For any `t : Finset α` disjoint from `s`, the product `∏ i ∈ t, f i` is a product of elements\n  of `V`, so it is an element of `V` too. Thus, `∏ i ∈ t, f i ∈ U`, as desired. -/\n  intro t ht\n  apply hV\n  apply Subgroup.prod_mem\n  intro i hi\n  simpa using Finset.disjoint_left.mp ht hi\n\n"}
{"name":"NonarchimedeanAddGroup.cauchySeq_of_tendsto_sub_nhds_zero","module":"Mathlib.Topology.Algebra.InfiniteSum.Nonarchimedean","initialProofState":"G : Type u_2\ninst✝³ : AddCommGroup G\ninst✝² : UniformSpace G\ninst✝¹ : UniformAddGroup G\ninst✝ : NonarchimedeanAddGroup G\nf : Nat → G\nhf : Filter.Tendsto (fun n => HSub.hSub (f (HAdd.hAdd n 1)) (f n)) Filter.atTop (nhds 0)\n⊢ CauchySeq f","decl":"/-- Let `G` be a nonarchimedean abelian group, and let `f : ℕ → G` be a function\nsuch that the quotients `f (n + 1) / f n` tend to one. Then the function is a Cauchy sequence. -/\n@[to_additive \"Let `G` be a nonarchimedean additive abelian group, and let `f : ℕ → G` be a\nfunction such that the differences `f (n + 1) - f n` tend to zero.\nThen the function is a Cauchy sequence.\"]\nlemma cauchySeq_of_tendsto_div_nhds_one {f : ℕ → G}\n    (hf : Tendsto (fun n ↦ f (n + 1) / f n) atTop (𝓝 1)) :\n    CauchySeq f := by\n  suffices Tendsto (fun p : ℕ × ℕ ↦ f p.2 / f p.1) atTop (𝓝 1) by simpa [CauchySeq,\n      cauchy_map_iff, prod_atTop_atTop_eq, uniformity_eq_comap_nhds_one G, atTop_neBot]\n  rw [tendsto_atTop']\n  intro s hs\n  obtain ⟨t, ht⟩ := is_nonarchimedean s hs\n  obtain ⟨N, hN⟩ : ∃ N : ℕ, ∀ b, N ≤ b → f (b + 1) / f b ∈ t := by\n      simpa using tendsto_def.mp hf t t.mem_nhds_one\n  refine ⟨(N, N), ?_⟩\n  rintro ⟨M, M'⟩ ⟨(hMN : N ≤ M), (hMN' : N ≤ M')⟩\n  apply ht\n  wlog h : M ≤ M' generalizing M M'\n  · simpa [inv_div] using t.inv_mem <| this _ _ hMN' hMN (le_of_not_ge h)\n  obtain ⟨k, rfl⟩ := Nat.exists_eq_add_of_le h\n  clear h hMN'\n  induction k with\n  | zero => simpa using one_mem t\n  | succ k ih => simpa using t.mul_mem (hN _ (by omega : N ≤ M + k)) ih\n\n"}
{"name":"NonarchimedeanGroup.cauchySeq_of_tendsto_div_nhds_one","module":"Mathlib.Topology.Algebra.InfiniteSum.Nonarchimedean","initialProofState":"G : Type u_2\ninst✝³ : CommGroup G\ninst✝² : UniformSpace G\ninst✝¹ : UniformGroup G\ninst✝ : NonarchimedeanGroup G\nf : Nat → G\nhf : Filter.Tendsto (fun n => HDiv.hDiv (f (HAdd.hAdd n 1)) (f n)) Filter.atTop (nhds 1)\n⊢ CauchySeq f","decl":"/-- Let `G` be a nonarchimedean abelian group, and let `f : ℕ → G` be a function\nsuch that the quotients `f (n + 1) / f n` tend to one. Then the function is a Cauchy sequence. -/\n@[to_additive \"Let `G` be a nonarchimedean additive abelian group, and let `f : ℕ → G` be a\nfunction such that the differences `f (n + 1) - f n` tend to zero.\nThen the function is a Cauchy sequence.\"]\nlemma cauchySeq_of_tendsto_div_nhds_one {f : ℕ → G}\n    (hf : Tendsto (fun n ↦ f (n + 1) / f n) atTop (𝓝 1)) :\n    CauchySeq f := by\n  suffices Tendsto (fun p : ℕ × ℕ ↦ f p.2 / f p.1) atTop (𝓝 1) by simpa [CauchySeq,\n      cauchy_map_iff, prod_atTop_atTop_eq, uniformity_eq_comap_nhds_one G, atTop_neBot]\n  rw [tendsto_atTop']\n  intro s hs\n  obtain ⟨t, ht⟩ := is_nonarchimedean s hs\n  obtain ⟨N, hN⟩ : ∃ N : ℕ, ∀ b, N ≤ b → f (b + 1) / f b ∈ t := by\n      simpa using tendsto_def.mp hf t t.mem_nhds_one\n  refine ⟨(N, N), ?_⟩\n  rintro ⟨M, M'⟩ ⟨(hMN : N ≤ M), (hMN' : N ≤ M')⟩\n  apply ht\n  wlog h : M ≤ M' generalizing M M'\n  · simpa [inv_div] using t.inv_mem <| this _ _ hMN' hMN (le_of_not_ge h)\n  obtain ⟨k, rfl⟩ := Nat.exists_eq_add_of_le h\n  clear h hMN'\n  induction k with\n  | zero => simpa using one_mem t\n  | succ k ih => simpa using t.mul_mem (hN _ (by omega : N ≤ M + k)) ih\n\n"}
{"name":"NonarchimedeanAddGroup.summable_of_tendsto_cofinite_zero","module":"Mathlib.Topology.Algebra.InfiniteSum.Nonarchimedean","initialProofState":"α : Type u_1\nG : Type u_2\ninst✝⁴ : AddCommGroup G\ninst✝³ : UniformSpace G\ninst✝² : UniformAddGroup G\ninst✝¹ : NonarchimedeanAddGroup G\ninst✝ : CompleteSpace G\nf : α → G\nhf : Filter.Tendsto f Filter.cofinite (nhds 0)\n⊢ Summable f","decl":"/-- Let `G` be a complete nonarchimedean multiplicative abelian group, and let `f : α → G` be a\nfunction that tends to one on the filter of cofinite sets. Then `f` is unconditionally\nmultipliable. -/\n@[to_additive \"Let `G` be a complete nonarchimedean additive abelian group, and let `f : α → G` be a\nfunction that tends to zero on the filter of cofinite sets. Then `f` is unconditionally summable.\"]\ntheorem multipliable_of_tendsto_cofinite_one [CompleteSpace G] {f : α → G}\n    (hf : Tendsto f cofinite (𝓝 1)) : Multipliable f :=\n  CompleteSpace.complete (cauchySeq_prod_of_tendsto_cofinite_one hf)\n\n"}
{"name":"NonarchimedeanGroup.multipliable_of_tendsto_cofinite_one","module":"Mathlib.Topology.Algebra.InfiniteSum.Nonarchimedean","initialProofState":"α : Type u_1\nG : Type u_2\ninst✝⁴ : CommGroup G\ninst✝³ : UniformSpace G\ninst✝² : UniformGroup G\ninst✝¹ : NonarchimedeanGroup G\ninst✝ : CompleteSpace G\nf : α → G\nhf : Filter.Tendsto f Filter.cofinite (nhds 1)\n⊢ Multipliable f","decl":"/-- Let `G` be a complete nonarchimedean multiplicative abelian group, and let `f : α → G` be a\nfunction that tends to one on the filter of cofinite sets. Then `f` is unconditionally\nmultipliable. -/\n@[to_additive \"Let `G` be a complete nonarchimedean additive abelian group, and let `f : α → G` be a\nfunction that tends to zero on the filter of cofinite sets. Then `f` is unconditionally summable.\"]\ntheorem multipliable_of_tendsto_cofinite_one [CompleteSpace G] {f : α → G}\n    (hf : Tendsto f cofinite (𝓝 1)) : Multipliable f :=\n  CompleteSpace.complete (cauchySeq_prod_of_tendsto_cofinite_one hf)\n\n"}
{"name":"NonarchimedeanAddGroup.summable_iff_tendsto_cofinite_zero","module":"Mathlib.Topology.Algebra.InfiniteSum.Nonarchimedean","initialProofState":"α : Type u_1\nG : Type u_2\ninst✝⁴ : AddCommGroup G\ninst✝³ : UniformSpace G\ninst✝² : UniformAddGroup G\ninst✝¹ : NonarchimedeanAddGroup G\ninst✝ : CompleteSpace G\nf : α → G\n⊢ Iff (Summable f) (Filter.Tendsto f Filter.cofinite (nhds 0))","decl":"/-- Let `G` be a complete nonarchimedean multiplicative abelian group. Then a function `f : α → G`\nis unconditionally multipliable if and only if it tends to one on the filter of cofinite sets. -/\n@[to_additive \"Let `G` be a complete nonarchimedean additive abelian group. Then a function\n`f : α → G` is unconditionally summable if and only if it tends to zero on the filter of cofinite\nsets.\"]\ntheorem multipliable_iff_tendsto_cofinite_one [CompleteSpace G] (f : α → G) :\n    Multipliable f ↔ Tendsto f cofinite (𝓝 1) :=\n  ⟨Multipliable.tendsto_cofinite_one, multipliable_of_tendsto_cofinite_one⟩\n\n"}
{"name":"NonarchimedeanGroup.multipliable_iff_tendsto_cofinite_one","module":"Mathlib.Topology.Algebra.InfiniteSum.Nonarchimedean","initialProofState":"α : Type u_1\nG : Type u_2\ninst✝⁴ : CommGroup G\ninst✝³ : UniformSpace G\ninst✝² : UniformGroup G\ninst✝¹ : NonarchimedeanGroup G\ninst✝ : CompleteSpace G\nf : α → G\n⊢ Iff (Multipliable f) (Filter.Tendsto f Filter.cofinite (nhds 1))","decl":"/-- Let `G` be a complete nonarchimedean multiplicative abelian group. Then a function `f : α → G`\nis unconditionally multipliable if and only if it tends to one on the filter of cofinite sets. -/\n@[to_additive \"Let `G` be a complete nonarchimedean additive abelian group. Then a function\n`f : α → G` is unconditionally summable if and only if it tends to zero on the filter of cofinite\nsets.\"]\ntheorem multipliable_iff_tendsto_cofinite_one [CompleteSpace G] (f : α → G) :\n    Multipliable f ↔ Tendsto f cofinite (𝓝 1) :=\n  ⟨Multipliable.tendsto_cofinite_one, multipliable_of_tendsto_cofinite_one⟩\n\n"}
{"name":"HasSum.mul_of_nonarchimedean","module":"Mathlib.Topology.Algebra.InfiniteSum.Nonarchimedean","initialProofState":"α : Type u_1\nβ : Type u_2\nR : Type u_3\ninst✝³ : Ring R\ninst✝² : UniformSpace R\ninst✝¹ : UniformAddGroup R\ninst✝ : NonarchimedeanRing R\nf : α → R\ng : β → R\na b : R\nhf : HasSum f a\nhg : HasSum g b\n⊢ HasSum (fun i => HMul.hMul (f i.1) (g i.2)) (HMul.hMul a b)","decl":"/-- Let `R` be a nonarchimedean ring, let `f : α → R` be a function that sums to `a : R`,\nand let `g : β → R` be a function that sums to `b : R`. Then `fun i : α × β ↦ f i.1 * g i.2`\nsums to `a * b`. -/\ntheorem HasSum.mul_of_nonarchimedean {f : α → R} {g : β → R} {a b : R} (hf : HasSum f a)\n    (hg : HasSum g b) : HasSum (fun i : α × β ↦ f i.1 * g i.2) (a * b) := by\n  rw [← hasSum_iff_hasSum_compl] at *\n  simp only [Function.comp_def, UniformSpace.Completion.toCompl_apply,\n    UniformSpace.Completion.coe_mul]\n  exact (hf.mul hg) (hf.summable.mul_of_complete_nonarchimedean hg.summable :)\n\n"}
{"name":"Summable.mul_of_nonarchimedean","module":"Mathlib.Topology.Algebra.InfiniteSum.Nonarchimedean","initialProofState":"α : Type u_1\nβ : Type u_2\nR : Type u_3\ninst✝³ : Ring R\ninst✝² : UniformSpace R\ninst✝¹ : UniformAddGroup R\ninst✝ : NonarchimedeanRing R\nf : α → R\ng : β → R\nhf : Summable f\nhg : Summable g\n⊢ Summable fun i => HMul.hMul (f i.1) (g i.2)","decl":"/-- Let `R` be a nonarchimedean ring. If functions `f : α → R` and `g : β → R` are summable, then\nso is `fun i : α × β ↦ f i.1 * g i.2`. -/\ntheorem Summable.mul_of_nonarchimedean {f : α → R} {g : β → R} (hf : Summable f)\n    (hg : Summable g) : Summable (fun i : α × β ↦ f i.1 * g i.2) :=\n  (hf.hasSum.mul_of_nonarchimedean hg.hasSum).summable\n\n"}
{"name":"tsum_mul_tsum_of_nonarchimedean","module":"Mathlib.Topology.Algebra.InfiniteSum.Nonarchimedean","initialProofState":"α : Type u_1\nβ : Type u_2\nR : Type u_3\ninst✝⁴ : Ring R\ninst✝³ : UniformSpace R\ninst✝² : UniformAddGroup R\ninst✝¹ : NonarchimedeanRing R\ninst✝ : T0Space R\nf : α → R\ng : β → R\nhf : Summable f\nhg : Summable g\n⊢ Eq (HMul.hMul (tsum fun i => f i) (tsum fun i => g i)) (tsum fun i => HMul.hMul (f i.1) (g i.2))","decl":"theorem tsum_mul_tsum_of_nonarchimedean [T0Space R] {f : α → R} {g : β → R} (hf : Summable f)\n    (hg : Summable g) : (∑' i, f i) * (∑' i, g i) = ∑' i : α × β, f i.1 * g i.2 :=\n  (hf.hasSum.mul_of_nonarchimedean hg.hasSum).tsum_eq.symm\n\n"}
