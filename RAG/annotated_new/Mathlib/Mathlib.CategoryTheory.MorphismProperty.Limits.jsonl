{"name":"CategoryTheory.MorphismProperty.pullbacks_mk","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\nA B X Y : C\nf : Quiver.Hom A X\nq : Quiver.Hom A B\np : Quiver.Hom X Y\ng : Quiver.Hom B Y\nsq : CategoryTheory.IsPullback f q p g\nhp : P p\n⊢ P.pullbacks q","decl":"lemma pullbacks_mk {A B X Y : C} {f : A ⟶ X} {q : A ⟶ B} {p : X ⟶ Y} {g : B ⟶ Y}\n    (sq : IsPullback f q p g) (hp : P p) :\n    P.pullbacks q :=\n  ⟨_, _, _, _, _, hp, sq⟩\n\n"}
{"name":"CategoryTheory.MorphismProperty.le_pullbacks","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\n⊢ LE.le P P.pullbacks","decl":"lemma le_pullbacks : P ≤ P.pullbacks := by\n  intro A B q hq\n  exact P.pullbacks_mk IsPullback.of_id_fst hq\n\n"}
{"name":"CategoryTheory.MorphismProperty.pushouts_mk","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\nA B X Y : C\nf : Quiver.Hom A X\nq : Quiver.Hom A B\np : Quiver.Hom X Y\ng : Quiver.Hom B Y\nsq : CategoryTheory.IsPushout f q p g\nhq : P q\n⊢ P.pushouts p","decl":"lemma pushouts_mk {A B X Y : C} {f : A ⟶ X} {q : A ⟶ B} {p : X ⟶ Y} {g : B ⟶ Y}\n    (sq : IsPushout f q p g) (hq : P q) :\n    P.pushouts p :=\n  ⟨_, _, _, _, _, hq, sq⟩\n\n"}
{"name":"CategoryTheory.MorphismProperty.le_pushouts","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\n⊢ LE.le P P.pushouts","decl":"lemma le_pushouts : P ≤ P.pushouts := by\n  intro X Y p hp\n  exact P.pushouts_mk IsPushout.of_id_fst hp\n\n"}
{"name":"CategoryTheory.MorphismProperty.instRespectsIsoPushouts","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\n⊢ P.pushouts.RespectsIso","decl":"instance : P.pushouts.RespectsIso :=\n  RespectsIso.of_respects_arrow_iso _ (by\n    rintro q q' e ⟨A, B, p, f, g, hp, h⟩\n    exact ⟨A, B, p, f ≫ e.hom.left, g ≫ e.hom.right, hp,\n      IsPushout.paste_horiz h (IsPushout.of_horiz_isIso ⟨e.hom.w⟩)⟩)\n\n"}
{"name":"CategoryTheory.MorphismProperty.instRespectsIsoPullbacks","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\n⊢ P.pullbacks.RespectsIso","decl":"instance : P.pullbacks.RespectsIso :=\n  RespectsIso.of_respects_arrow_iso _ (by\n    rintro q q' e ⟨X, Y, p, f, g, hp, h⟩\n    exact ⟨X, Y, p, e.inv.left ≫ f, e.inv.right ≫ g, hp,\n      IsPullback.paste_horiz (IsPullback.of_horiz_isIso ⟨e.inv.w⟩) h⟩)\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderBaseChange.of_isPullback","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\nself : P.IsStableUnderBaseChange\nX Y Y' S : C\nf : Quiver.Hom X S\ng : Quiver.Hom Y S\nf' : Quiver.Hom Y' Y\ng' : Quiver.Hom Y' X\nsq : CategoryTheory.IsPullback f' g' g f\nhg : P g\n⊢ P g'","decl":"/-- A morphism property is `IsStableUnderBaseChange` if the base change of such a morphism\nstill falls in the class. -/\nclass IsStableUnderBaseChange : Prop where\n  of_isPullback {X Y Y' S : C} {f : X ⟶ S} {g : Y ⟶ S} {f' : Y' ⟶ Y} {g' : Y' ⟶ X}\n    (sq : IsPullback f' g' g f) (hg : P g) : P g'\n\n"}
{"name":"CategoryTheory.MorphismProperty.instIsStableUnderBaseChangePullbacks","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\n⊢ P.pullbacks.IsStableUnderBaseChange","decl":"instance : P.pullbacks.IsStableUnderBaseChange where\n  of_isPullback := by\n    rintro _ _ _ _ _ _ _ _ h ⟨_, _, _, _, _, hp, hq⟩\n    exact P.pullbacks_mk (h.paste_horiz hq) hp\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderCobaseChange.of_isPushout","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\nself : P.IsStableUnderCobaseChange\nA A' B B' : C\nf : Quiver.Hom A A'\ng : Quiver.Hom A B\nf' : Quiver.Hom B B'\ng' : Quiver.Hom A' B'\nsq : CategoryTheory.IsPushout g f f' g'\nhf : P f\n⊢ P f'","decl":"/-- A morphism property is `IsStableUnderCobaseChange` if the cobase change of such a morphism\nstill falls in the class. -/\nclass IsStableUnderCobaseChange : Prop where\n  of_isPushout {A A' B B' : C} {f : A ⟶ A'} {g : A ⟶ B} {f' : B ⟶ B'} {g' : A' ⟶ B'}\n    (sq : IsPushout g f f' g') (hf : P f) : P f'\n\n"}
{"name":"CategoryTheory.MorphismProperty.instIsStableUnderCobaseChangePushouts","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\n⊢ P.pushouts.IsStableUnderCobaseChange","decl":"instance : P.pushouts.IsStableUnderCobaseChange where\n  of_isPushout := by\n    rintro _ _ _ _ _ _ _ _ h ⟨_, _, _, _, _, hp, hq⟩\n    exact P.pushouts_mk (hq.paste_horiz h) hp\n\n"}
{"name":"CategoryTheory.MorphismProperty.of_isPullback","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\ninst✝ : P.IsStableUnderBaseChange\nX Y Y' S : C\nf : Quiver.Hom X S\ng : Quiver.Hom Y S\nf' : Quiver.Hom Y' Y\ng' : Quiver.Hom Y' X\nsq : CategoryTheory.IsPullback f' g' g f\nhg : P g\n⊢ P g'","decl":"variable {P} in\nlemma of_isPullback [P.IsStableUnderBaseChange]\n    {X Y Y' S : C} {f : X ⟶ S} {g : Y ⟶ S} {f' : Y' ⟶ Y} {g' : Y' ⟶ X}\n    (sq : IsPullback f' g' g f) (hg : P g) : P g' :=\n  IsStableUnderBaseChange.of_isPullback sq hg\n\n"}
{"name":"CategoryTheory.MorphismProperty.isStableUnderBaseChange_iff_pullbacks_le","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\n⊢ Iff P.IsStableUnderBaseChange (LE.le P.pullbacks P)","decl":"lemma isStableUnderBaseChange_iff_pullbacks_le :\n    P.IsStableUnderBaseChange ↔ P.pullbacks ≤ P := by\n  constructor\n  · intro h _ _ _ ⟨_, _, _, _, _, h₁, h₂⟩\n    exact of_isPullback h₂ h₁\n  · intro h\n    constructor\n    intro _ _ _ _ _ _ _ _ h₁ h₂\n    exact h _ ⟨_, _, _, _, _, h₂, h₁⟩\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderBaseChange.mk'","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\ninst✝ : P.RespectsIso\nhP₂ : ∀ (X Y S : C) (f : Quiver.Hom X S) (g : Quiver.Hom Y S) [inst : CategoryTheory.Limits.HasPullback f g], P g → P (CategoryTheory.Limits.pullback.fst f g)\n⊢ P.IsStableUnderBaseChange","decl":"variable {P} in\n/-- Alternative constructor for `IsStableUnderBaseChange`. -/\ntheorem IsStableUnderBaseChange.mk' [RespectsIso P]\n    (hP₂ : ∀ (X Y S : C) (f : X ⟶ S) (g : Y ⟶ S) [HasPullback f g] (_ : P g),\n      P (pullback.fst f g)) :\n    IsStableUnderBaseChange P where\n  of_isPullback {X Y Y' S f g f' g'} sq hg := by\n    haveI : HasPullback f g := sq.flip.hasPullback\n    let e := sq.flip.isoPullback\n    rw [← P.cancel_left_of_respectsIso e.inv, sq.flip.isoPullback_inv_fst]\n    exact hP₂ _ _ _ f g hg\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderBaseChange.isomorphisms","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\n⊢ (CategoryTheory.MorphismProperty.isomorphisms C).IsStableUnderBaseChange","decl":"instance IsStableUnderBaseChange.isomorphisms :\n    (isomorphisms C).IsStableUnderBaseChange where\n  of_isPullback {_ _ _ _ f g _ _} h hg :=\n    have : IsIso g := hg\n    have := hasPullback_of_left_iso g f\n    h.isoPullback_hom_snd ▸ inferInstanceAs (IsIso _)\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderBaseChange.monomorphisms","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\n⊢ (CategoryTheory.MorphismProperty.monomorphisms C).IsStableUnderBaseChange","decl":"instance IsStableUnderBaseChange.monomorphisms :\n    (monomorphisms C).IsStableUnderBaseChange where\n  of_isPullback {X Y Y' S f g f' g'} h hg := by\n    have : Mono g := hg\n    constructor\n    intro Z f₁ f₂ h₁₂\n    apply PullbackCone.IsLimit.hom_ext h.isLimit\n    · rw [← cancel_mono g]\n      dsimp\n      simp only [Category.assoc, h.w, reassoc_of% h₁₂]\n    · exact h₁₂\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderBaseChange.respectsIso","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\ninst✝ : P.IsStableUnderBaseChange\n⊢ P.RespectsIso","decl":"instance (priority := 900) IsStableUnderBaseChange.respectsIso\n    [IsStableUnderBaseChange P] : RespectsIso P := by\n  apply RespectsIso.of_respects_arrow_iso\n  intro f g e\n  exact of_isPullback (IsPullback.of_horiz_isIso (CommSq.mk e.inv.w))\n\n"}
{"name":"CategoryTheory.MorphismProperty.pullback_fst","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\ninst✝¹ : P.IsStableUnderBaseChange\nX Y S : C\nf : Quiver.Hom X S\ng : Quiver.Hom Y S\ninst✝ : CategoryTheory.Limits.HasPullback f g\nH : P g\n⊢ P (CategoryTheory.Limits.pullback.fst f g)","decl":"theorem pullback_fst [IsStableUnderBaseChange P]\n    {X Y S : C} (f : X ⟶ S) (g : Y ⟶ S) [HasPullback f g] (H : P g) :\n    P (pullback.fst f g) :=\n  of_isPullback (IsPullback.of_hasPullback f g).flip H\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderBaseChange.fst","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\ninst✝¹ : P.IsStableUnderBaseChange\nX Y S : C\nf : Quiver.Hom X S\ng : Quiver.Hom Y S\ninst✝ : CategoryTheory.Limits.HasPullback f g\nH : P g\n⊢ P (CategoryTheory.Limits.pullback.fst f g)","decl":"@[deprecated (since := \"2024-11-06\")] alias IsStableUnderBaseChange.fst := pullback_fst\n\n"}
{"name":"CategoryTheory.MorphismProperty.pullback_snd","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\ninst✝¹ : P.IsStableUnderBaseChange\nX Y S : C\nf : Quiver.Hom X S\ng : Quiver.Hom Y S\ninst✝ : CategoryTheory.Limits.HasPullback f g\nH : P f\n⊢ P (CategoryTheory.Limits.pullback.snd f g)","decl":"theorem pullback_snd [IsStableUnderBaseChange P]\n    {X Y S : C} (f : X ⟶ S) (g : Y ⟶ S) [HasPullback f g] (H : P f) :\n    P (pullback.snd f g) :=\n  of_isPullback (IsPullback.of_hasPullback f g) H\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderBaseChange.snd","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\ninst✝¹ : P.IsStableUnderBaseChange\nX Y S : C\nf : Quiver.Hom X S\ng : Quiver.Hom Y S\ninst✝ : CategoryTheory.Limits.HasPullback f g\nH : P f\n⊢ P (CategoryTheory.Limits.pullback.snd f g)","decl":"@[deprecated (since := \"2024-11-06\")] alias IsStableUnderBaseChange.snd := pullback_snd\n\n"}
{"name":"CategoryTheory.MorphismProperty.baseChange_obj","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\ninst✝¹ : CategoryTheory.Limits.HasPullbacks C\ninst✝ : P.IsStableUnderBaseChange\nS S' : C\nf : Quiver.Hom S' S\nX : CategoryTheory.Over S\nH : P X.hom\n⊢ P ((CategoryTheory.Over.pullback f).obj X).hom","decl":"theorem baseChange_obj [HasPullbacks C]\n    [IsStableUnderBaseChange P] {S S' : C} (f : S' ⟶ S) (X : Over S) (H : P X.hom) :\n    P ((Over.pullback f).obj X).hom :=\n  pullback_snd X.hom f H\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderBaseChange.baseChange_obj","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\ninst✝¹ : CategoryTheory.Limits.HasPullbacks C\ninst✝ : P.IsStableUnderBaseChange\nS S' : C\nf : Quiver.Hom S' S\nX : CategoryTheory.Over S\nH : P X.hom\n⊢ P ((CategoryTheory.Over.pullback f).obj X).hom","decl":"@[deprecated (since := \"2024-11-06\")] alias IsStableUnderBaseChange.baseChange_obj := baseChange_obj\n\n"}
{"name":"CategoryTheory.MorphismProperty.baseChange_map","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\ninst✝¹ : CategoryTheory.Limits.HasPullbacks C\ninst✝ : P.IsStableUnderBaseChange\nS S' : C\nf : Quiver.Hom S' S\nX Y : CategoryTheory.Over S\ng : Quiver.Hom X Y\nH : P g.left\n⊢ P ((CategoryTheory.Over.pullback f).map g).left","decl":"theorem baseChange_map [HasPullbacks C]\n    [IsStableUnderBaseChange P] {S S' : C} (f : S' ⟶ S) {X Y : Over S} (g : X ⟶ Y)\n    (H : P g.left) : P ((Over.pullback f).map g).left := by\n  let e :=\n    pullbackRightPullbackFstIso Y.hom f g.left ≪≫\n      pullback.congrHom (g.w.trans (Category.comp_id _)) rfl\n  have : e.inv ≫ (pullback.snd _ _) = ((Over.pullback f).map g).left := by\n    ext <;> dsimp [e] <;> simp\n  rw [← this, P.cancel_left_of_respectsIso]\n  exact pullback_snd _ _ H\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderBaseChange.baseChange_map","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\ninst✝¹ : CategoryTheory.Limits.HasPullbacks C\ninst✝ : P.IsStableUnderBaseChange\nS S' : C\nf : Quiver.Hom S' S\nX Y : CategoryTheory.Over S\ng : Quiver.Hom X Y\nH : P g.left\n⊢ P ((CategoryTheory.Over.pullback f).map g).left","decl":"@[deprecated (since := \"2024-11-06\")] alias IsStableUnderBaseChange.baseChange_map := baseChange_map\n\n"}
{"name":"CategoryTheory.MorphismProperty.pullback_map","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝³ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\ninst✝² : CategoryTheory.Limits.HasPullbacks C\ninst✝¹ : P.IsStableUnderBaseChange\ninst✝ : P.IsStableUnderComposition\nS X X' Y Y' : C\nf : Quiver.Hom X S\ng : Quiver.Hom Y S\nf' : Quiver.Hom X' S\ng' : Quiver.Hom Y' S\ni₁ : Quiver.Hom X X'\ni₂ : Quiver.Hom Y Y'\nh₁ : P i₁\nh₂ : P i₂\ne₁ : Eq f (CategoryTheory.CategoryStruct.comp i₁ f')\ne₂ : Eq g (CategoryTheory.CategoryStruct.comp i₂ g')\n⊢ P (CategoryTheory.Limits.pullback.map f g f' g' i₁ i₂ (CategoryTheory.CategoryStruct.id S) ⋯ ⋯)","decl":"theorem pullback_map [HasPullbacks C]\n    [IsStableUnderBaseChange P] [P.IsStableUnderComposition] {S X X' Y Y' : C} {f : X ⟶ S}\n    {g : Y ⟶ S} {f' : X' ⟶ S} {g' : Y' ⟶ S} {i₁ : X ⟶ X'} {i₂ : Y ⟶ Y'} (h₁ : P i₁) (h₂ : P i₂)\n    (e₁ : f = i₁ ≫ f') (e₂ : g = i₂ ≫ g') :\n    P (pullback.map f g f' g' i₁ i₂ (𝟙 _) ((Category.comp_id _).trans e₁)\n        ((Category.comp_id _).trans e₂)) := by\n  have :\n    pullback.map f g f' g' i₁ i₂ (𝟙 _) ((Category.comp_id _).trans e₁)\n        ((Category.comp_id _).trans e₂) =\n      ((pullbackSymmetry _ _).hom ≫\n          ((Over.pullback _).map (Over.homMk _ e₂.symm : Over.mk g ⟶ Over.mk g')).left) ≫\n        (pullbackSymmetry _ _).hom ≫\n          ((Over.pullback g').map (Over.homMk _ e₁.symm : Over.mk f ⟶ Over.mk f')).left := by\n    ext <;> dsimp <;> simp\n  rw [this]\n  apply P.comp_mem <;> rw [P.cancel_left_of_respectsIso]\n  exacts [baseChange_map _ (Over.homMk _ e₂.symm : Over.mk g ⟶ Over.mk g') h₂,\n    baseChange_map _ (Over.homMk _ e₁.symm : Over.mk f ⟶ Over.mk f') h₁]\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderBaseChange.pullback_map","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝³ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\ninst✝² : CategoryTheory.Limits.HasPullbacks C\ninst✝¹ : P.IsStableUnderBaseChange\ninst✝ : P.IsStableUnderComposition\nS X X' Y Y' : C\nf : Quiver.Hom X S\ng : Quiver.Hom Y S\nf' : Quiver.Hom X' S\ng' : Quiver.Hom Y' S\ni₁ : Quiver.Hom X X'\ni₂ : Quiver.Hom Y Y'\nh₁ : P i₁\nh₂ : P i₂\ne₁ : Eq f (CategoryTheory.CategoryStruct.comp i₁ f')\ne₂ : Eq g (CategoryTheory.CategoryStruct.comp i₂ g')\n⊢ P (CategoryTheory.Limits.pullback.map f g f' g' i₁ i₂ (CategoryTheory.CategoryStruct.id S) ⋯ ⋯)","decl":"@[deprecated (since := \"2024-11-06\")] alias IsStableUnderBaseChange.pullback_map := pullback_map\n\n"}
{"name":"CategoryTheory.MorphismProperty.of_isPushout","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\ninst✝ : P.IsStableUnderCobaseChange\nA A' B B' : C\nf : Quiver.Hom A A'\ng : Quiver.Hom A B\nf' : Quiver.Hom B B'\ng' : Quiver.Hom A' B'\nsq : CategoryTheory.IsPushout g f f' g'\nhf : P f\n⊢ P f'","decl":"lemma of_isPushout [P.IsStableUnderCobaseChange]\n    {A A' B B' : C} {f : A ⟶ A'} {g : A ⟶ B} {f' : B ⟶ B'} {g' : A' ⟶ B'}\n    (sq : IsPushout g f f' g') (hf : P f) : P f' :=\n  IsStableUnderCobaseChange.of_isPushout sq hf\n\n"}
{"name":"CategoryTheory.MorphismProperty.isStableUnderCobaseChange_iff_pushouts_le","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\n⊢ Iff P.IsStableUnderCobaseChange (LE.le P.pushouts P)","decl":"lemma isStableUnderCobaseChange_iff_pushouts_le :\n    P.IsStableUnderCobaseChange ↔ P.pushouts ≤ P := by\n  constructor\n  · intro h _ _ _ ⟨_, _, _, _, _, h₁, h₂⟩\n    exact of_isPushout h₂ h₁\n  · intro h\n    constructor\n    intro _ _ _ _ _ _ _ _ h₁ h₂\n    exact h _ ⟨_, _, _, _, _, h₂, h₁⟩\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderCobaseChange.mk'","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\ninst✝ : P.RespectsIso\nhP₂ : ∀ (A B A' : C) (f : Quiver.Hom A A') (g : Quiver.Hom A B) [inst : CategoryTheory.Limits.HasPushout f g], P f → P (CategoryTheory.Limits.pushout.inr f g)\n⊢ P.IsStableUnderCobaseChange","decl":"/-- An alternative constructor for `IsStableUnderCobaseChange`. -/\ntheorem IsStableUnderCobaseChange.mk' [RespectsIso P]\n    (hP₂ : ∀ (A B A' : C) (f : A ⟶ A') (g : A ⟶ B) [HasPushout f g] (_ : P f),\n      P (pushout.inr f g)) :\n    IsStableUnderCobaseChange P where\n  of_isPushout {A A' B B' f g f' g'} sq hf := by\n    haveI : HasPushout f g := sq.flip.hasPushout\n    let e := sq.flip.isoPushout\n    rw [← P.cancel_right_of_respectsIso _ e.hom, sq.flip.inr_isoPushout_hom]\n    exact hP₂ _ _ _ f g hf\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderCobaseChange.isomorphisms","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\n⊢ (CategoryTheory.MorphismProperty.isomorphisms C).IsStableUnderCobaseChange","decl":"instance IsStableUnderCobaseChange.isomorphisms :\n    (isomorphisms C).IsStableUnderCobaseChange where\n  of_isPushout {_ _ _ _ f g _ _} h (_ : IsIso f) :=\n    have := hasPushout_of_right_iso g f\n    h.inl_isoPushout_inv ▸ inferInstanceAs (IsIso _)\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderCobaseChange.epimorphisms","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\n⊢ (CategoryTheory.MorphismProperty.epimorphisms C).IsStableUnderCobaseChange","decl":"variable (C) in\ninstance IsStableUnderCobaseChange.epimorphisms :\n    (epimorphisms C).IsStableUnderCobaseChange where\n  of_isPushout {X Y Y' S f g f' g'} h hf := by\n    have : Epi f := hf\n    constructor\n    intro Z f₁ f₂ h₁₂\n    apply PushoutCocone.IsColimit.hom_ext h.isColimit\n    · exact h₁₂\n    · rw [← cancel_epi f]\n      dsimp\n      simp only [← reassoc_of% h.w, h₁₂]\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderCobaseChange.respectsIso","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\ninst✝ : P.IsStableUnderCobaseChange\n⊢ P.RespectsIso","decl":"instance IsStableUnderCobaseChange.respectsIso\n    [IsStableUnderCobaseChange P] : RespectsIso P :=\n  RespectsIso.of_respects_arrow_iso _ fun _ _ e ↦\n    of_isPushout (IsPushout.of_horiz_isIso (CommSq.mk e.hom.w))\n\n"}
{"name":"CategoryTheory.MorphismProperty.pushout_inl","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\ninst✝¹ : P.IsStableUnderCobaseChange\nA B A' : C\nf : Quiver.Hom A A'\ng : Quiver.Hom A B\ninst✝ : CategoryTheory.Limits.HasPushout f g\nH : P g\n⊢ P (CategoryTheory.Limits.pushout.inl f g)","decl":"theorem pushout_inl [IsStableUnderCobaseChange P]\n    {A B A' : C} (f : A ⟶ A') (g : A ⟶ B) [HasPushout f g] (H : P g) :\n    P (pushout.inl f g) :=\n  of_isPushout (IsPushout.of_hasPushout f g) H\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderBaseChange.inl","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\ninst✝¹ : P.IsStableUnderCobaseChange\nA B A' : C\nf : Quiver.Hom A A'\ng : Quiver.Hom A B\ninst✝ : CategoryTheory.Limits.HasPushout f g\nH : P g\n⊢ P (CategoryTheory.Limits.pushout.inl f g)","decl":"@[deprecated (since := \"2024-11-06\")] alias IsStableUnderBaseChange.inl := pushout_inl\n\n"}
{"name":"CategoryTheory.MorphismProperty.pushout_inr","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\ninst✝¹ : P.IsStableUnderCobaseChange\nA B A' : C\nf : Quiver.Hom A A'\ng : Quiver.Hom A B\ninst✝ : CategoryTheory.Limits.HasPushout f g\nH : P f\n⊢ P (CategoryTheory.Limits.pushout.inr f g)","decl":"theorem pushout_inr [IsStableUnderCobaseChange P]\n    {A B A' : C} (f : A ⟶ A') (g : A ⟶ B) [HasPushout f g] (H : P f) : P (pushout.inr f g) :=\n  of_isPushout (IsPushout.of_hasPushout f g).flip H\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderBaseChange.inr","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\ninst✝¹ : P.IsStableUnderCobaseChange\nA B A' : C\nf : Quiver.Hom A A'\ng : Quiver.Hom A B\ninst✝ : CategoryTheory.Limits.HasPushout f g\nH : P f\n⊢ P (CategoryTheory.Limits.pushout.inr f g)","decl":"@[deprecated (since := \"2024-11-06\")] alias IsStableUnderBaseChange.inr := pushout_inr\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderCobaseChange.op","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\ninst✝ : P.IsStableUnderCobaseChange\n⊢ P.op.IsStableUnderBaseChange","decl":"instance IsStableUnderCobaseChange.op [IsStableUnderCobaseChange P] :\n    IsStableUnderBaseChange P.op where\n  of_isPullback sq hg := P.of_isPushout sq.unop hg\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderCobaseChange.unop","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty (Opposite C)\ninst✝ : P.IsStableUnderCobaseChange\n⊢ P.unop.IsStableUnderBaseChange","decl":"instance IsStableUnderCobaseChange.unop {P : MorphismProperty Cᵒᵖ} [IsStableUnderCobaseChange P] :\n    IsStableUnderBaseChange P.unop where\n  of_isPullback sq hg := P.of_isPushout sq.op hg\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderBaseChange.op","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\ninst✝ : P.IsStableUnderBaseChange\n⊢ P.op.IsStableUnderCobaseChange","decl":"instance IsStableUnderBaseChange.op [IsStableUnderBaseChange P] :\n    IsStableUnderCobaseChange P.op where\n  of_isPushout sq hf := P.of_isPullback sq.unop hf\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderBaseChange.unop","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty (Opposite C)\ninst✝ : P.IsStableUnderBaseChange\n⊢ P.unop.IsStableUnderCobaseChange","decl":"instance IsStableUnderBaseChange.unop {P : MorphismProperty Cᵒᵖ} [IsStableUnderBaseChange P] :\n    IsStableUnderCobaseChange P.unop where\n  of_isPushout sq hf := P.of_isPullback sq.op hf\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderBaseChange.inf","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\nP Q : CategoryTheory.MorphismProperty C\ninst✝¹ : P.IsStableUnderBaseChange\ninst✝ : Q.IsStableUnderBaseChange\n⊢ (Min.min P Q).IsStableUnderBaseChange","decl":"instance IsStableUnderBaseChange.inf {P Q : MorphismProperty C} [IsStableUnderBaseChange P]\n    [IsStableUnderBaseChange Q] :\n    IsStableUnderBaseChange (P ⊓ Q) where\n  of_isPullback hp hg := ⟨of_isPullback hp hg.left, of_isPullback hp hg.right⟩\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderCobaseChange.inf","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\nP Q : CategoryTheory.MorphismProperty C\ninst✝¹ : P.IsStableUnderCobaseChange\ninst✝ : Q.IsStableUnderCobaseChange\n⊢ (Min.min P Q).IsStableUnderCobaseChange","decl":"instance IsStableUnderCobaseChange.inf {P Q : MorphismProperty C} [IsStableUnderCobaseChange P]\n    [IsStableUnderCobaseChange Q] :\n    IsStableUnderCobaseChange (P ⊓ Q) where\n  of_isPushout hp hg := ⟨of_isPushout hp hg.left, of_isPushout hp hg.right⟩\n\n"}
{"name":"CategoryTheory.MorphismProperty.instRespectsIsoLimitsOfShape","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nW : CategoryTheory.MorphismProperty C\nJ : Type u_1\ninst✝ : CategoryTheory.Category.{u_2, u_1} J\n⊢ (W.limitsOfShape J).RespectsIso","decl":"instance : (W.limitsOfShape J).RespectsIso :=\n  RespectsIso.of_respects_arrow_iso _ (by\n    rintro ⟨_, _, f⟩ ⟨Y₁, Y₂, g⟩ e ⟨X₁, X₂, c₁, c₂, h₁, h₂, f, hf⟩\n    let e₁ := Arrow.leftFunc.mapIso e\n    let e₂ := Arrow.rightFunc.mapIso e\n    have fac : g ≫ e₂.inv = e₁.inv ≫ h₂.lift (Cone.mk _ (c₁.π ≫ f)) :=\n      e.inv.w.symm\n    let c₁' : Cone X₁ := { pt := Y₁, π := (Functor.const _).map e₁.inv ≫ c₁.π }\n    let c₂' : Cone X₂ := { pt := Y₂, π := (Functor.const _).map e₂.inv ≫ c₂.π }\n    have h₁' : IsLimit c₁' := IsLimit.ofIsoLimit h₁ (Cones.ext e₁)\n    have h₂' : IsLimit c₂' := IsLimit.ofIsoLimit h₂ (Cones.ext e₂)\n    obtain hg : h₂'.lift (Cone.mk _ (c₁'.π ≫ f)) = g :=\n      h₂'.hom_ext (fun j ↦ by\n        rw [h₂'.fac]\n        simp [reassoc_of% fac, c₁', c₂'])\n    rw [← hg]\n    exact ⟨_, _, _, _, h₁', _, _, hf⟩)\n\n"}
{"name":"CategoryTheory.MorphismProperty.limitsOfShape_limMap","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝³ : CategoryTheory.Category.{v, u} C\nW : CategoryTheory.MorphismProperty C\nJ : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} J\nX Y : CategoryTheory.Functor J C\nf : Quiver.Hom X Y\ninst✝¹ : CategoryTheory.Limits.HasLimit X\ninst✝ : CategoryTheory.Limits.HasLimit Y\nhf : W.functorCategory J f\n⊢ W.limitsOfShape J (CategoryTheory.Limits.limMap f)","decl":"variable {J} in\nlemma limitsOfShape_limMap {X Y : J ⥤ C}\n    (f : X ⟶ Y) [HasLimit X] [HasLimit Y] (hf : W.functorCategory _ f) :\n    W.limitsOfShape J (limMap f) :=\n  ⟨_, _, _, _, limit.isLimit X, _, _, hf⟩\n\n"}
{"name":"CategoryTheory.MorphismProperty.isStableUnderLimitsOfShape_iff_limitsOfShape_le","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nW : CategoryTheory.MorphismProperty C\nJ : Type u_1\ninst✝ : CategoryTheory.Category.{u_2, u_1} J\n⊢ Iff (W.IsStableUnderLimitsOfShape J) (LE.le (W.limitsOfShape J) W)","decl":"lemma isStableUnderLimitsOfShape_iff_limitsOfShape_le :\n    W.IsStableUnderLimitsOfShape J ↔ W.limitsOfShape J ≤ W := by\n  constructor\n  · rintro h _ _ _ ⟨_, _, _, _, h₁, h₂, f, hf⟩\n    exact h _ _ _ _ h₁ h₂ f hf\n  · intro h _ _ _ _ h₁ h₂ f hf\n    exact h _ ⟨_, _, _, _, h₁, _, _, hf⟩\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderLimitsOfShape.limitsOfShape_le","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nW : CategoryTheory.MorphismProperty C\nJ : Type u_1\ninst✝ : CategoryTheory.Category.{u_2, u_1} J\nhW : W.IsStableUnderLimitsOfShape J\n⊢ LE.le (W.limitsOfShape J) W","decl":"lemma IsStableUnderLimitsOfShape.limitsOfShape_le\n    (hW : W.IsStableUnderLimitsOfShape J) : W.limitsOfShape J ≤ W :=\n  (W.isStableUnderLimitsOfShape_iff_limitsOfShape_le J).1 hW\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderLimitsOfShape.limMap","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝³ : CategoryTheory.Category.{v, u} C\nW : CategoryTheory.MorphismProperty C\nJ : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} J\nhW : W.IsStableUnderLimitsOfShape J\nX Y : CategoryTheory.Functor J C\nf : Quiver.Hom X Y\ninst✝¹ : CategoryTheory.Limits.HasLimit X\ninst✝ : CategoryTheory.Limits.HasLimit Y\nhf : W.functorCategory J f\n⊢ W (CategoryTheory.Limits.limMap f)","decl":"lemma IsStableUnderLimitsOfShape.limMap\n    (hW : W.IsStableUnderLimitsOfShape J) {X Y : J ⥤ C}\n    (f : X ⟶ Y) [HasLimit X] [HasLimit Y] (hf : W.functorCategory _ f) :\n    W (limMap f) :=\n  hW.limitsOfShape_le _ (limitsOfShape_limMap _ _ hf)\n\n"}
{"name":"CategoryTheory.MorphismProperty.instRespectsIsoColimitsOfShape","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nW : CategoryTheory.MorphismProperty C\nJ : Type u_1\ninst✝ : CategoryTheory.Category.{u_2, u_1} J\n⊢ (W.colimitsOfShape J).RespectsIso","decl":"instance : (W.colimitsOfShape J).RespectsIso :=\n  RespectsIso.of_respects_arrow_iso _ (by\n    rintro ⟨_, _, f⟩ ⟨Y₁, Y₂, g⟩ e ⟨X₁, X₂, c₁, c₂, h₁, h₂, f, hf⟩\n    let e₁ := Arrow.leftFunc.mapIso e\n    let e₂ := Arrow.rightFunc.mapIso e\n    have fac : e₁.hom ≫ g = h₁.desc (Cocone.mk _ (f ≫ c₂.ι)) ≫ e₂.hom := e.hom.w\n    let c₁' : Cocone X₁ := { pt := Y₁, ι := c₁.ι ≫ (Functor.const _).map e₁.hom}\n    let c₂' : Cocone X₂ := { pt := Y₂, ι := c₂.ι ≫ (Functor.const _).map e₂.hom}\n    have h₁' : IsColimit c₁' := IsColimit.ofIsoColimit h₁ (Cocones.ext e₁)\n    have h₂' : IsColimit c₂' := IsColimit.ofIsoColimit h₂ (Cocones.ext e₂)\n    obtain hg : h₁'.desc (Cocone.mk _ (f ≫ c₂'.ι)) = g :=\n      h₁'.hom_ext (fun j ↦ by\n        rw [h₁'.fac]\n        simp [fac, c₁', c₂'])\n    rw [← hg]\n    exact ⟨_, _, _, _, _, h₂', _, hf⟩)\n\n"}
{"name":"CategoryTheory.MorphismProperty.colimitsOfShape_colimMap","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝³ : CategoryTheory.Category.{v, u} C\nW : CategoryTheory.MorphismProperty C\nJ : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} J\nX Y : CategoryTheory.Functor J C\nf : Quiver.Hom X Y\ninst✝¹ : CategoryTheory.Limits.HasColimit X\ninst✝ : CategoryTheory.Limits.HasColimit Y\nhf : W.functorCategory J f\n⊢ W.colimitsOfShape J (CategoryTheory.Limits.colimMap f)","decl":"variable {J} in\nlemma colimitsOfShape_colimMap {X Y : J ⥤ C}\n    (f : X ⟶ Y) [HasColimit X] [HasColimit Y] (hf : W.functorCategory _ f) :\n    W.colimitsOfShape J (colimMap f) :=\n  ⟨_, _, _, _, _, colimit.isColimit Y, _, hf⟩\n\n"}
{"name":"CategoryTheory.MorphismProperty.isStableUnderColimitsOfShape_iff_colimitsOfShape_le","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nW : CategoryTheory.MorphismProperty C\nJ : Type u_1\ninst✝ : CategoryTheory.Category.{u_2, u_1} J\n⊢ Iff (W.IsStableUnderColimitsOfShape J) (LE.le (W.colimitsOfShape J) W)","decl":"lemma isStableUnderColimitsOfShape_iff_colimitsOfShape_le :\n    W.IsStableUnderColimitsOfShape J ↔ W.colimitsOfShape J ≤ W := by\n  constructor\n  · rintro h _ _ _ ⟨_, _, _, _, h₁, h₂, f, hf⟩\n    exact h _ _ _ _ h₁ h₂ f hf\n  · intro h _ _ _ _ h₁ h₂ f hf\n    exact h _ ⟨_, _, _, _, _, h₂, _, hf⟩\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderColimitsOfShape.colimitsOfShape_le","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nW : CategoryTheory.MorphismProperty C\nJ : Type u_1\ninst✝ : CategoryTheory.Category.{u_2, u_1} J\nhW : W.IsStableUnderColimitsOfShape J\n⊢ LE.le (W.colimitsOfShape J) W","decl":"lemma IsStableUnderColimitsOfShape.colimitsOfShape_le\n    (hW : W.IsStableUnderColimitsOfShape J) : W.colimitsOfShape J ≤ W :=\n  (W.isStableUnderColimitsOfShape_iff_colimitsOfShape_le J).1 hW\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderColimitsOfShape.colimMap","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝³ : CategoryTheory.Category.{v, u} C\nW : CategoryTheory.MorphismProperty C\nJ : Type u_1\ninst✝² : CategoryTheory.Category.{u_2, u_1} J\nhW : W.IsStableUnderColimitsOfShape J\nX Y : CategoryTheory.Functor J C\nf : Quiver.Hom X Y\ninst✝¹ : CategoryTheory.Limits.HasColimit X\ninst✝ : CategoryTheory.Limits.HasColimit Y\nhf : W.functorCategory J f\n⊢ W (CategoryTheory.Limits.colimMap f)","decl":"lemma IsStableUnderColimitsOfShape.colimMap\n    (hW : W.IsStableUnderColimitsOfShape J) {X Y : J ⥤ C}\n    (f : X ⟶ Y) [HasColimit X] [HasColimit Y] (hf : W.functorCategory _ f) :\n    W (colimMap f) :=\n  hW.colimitsOfShape_le _ (colimitsOfShape_colimMap _ _ hf)\n\n"}
{"name":"CategoryTheory.MorphismProperty.colimitsOfShape_le_coproducts","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nW : CategoryTheory.MorphismProperty C\nJ : Type w\n⊢ LE.le (W.colimitsOfShape (CategoryTheory.Discrete J)) W.coproducts","decl":"lemma colimitsOfShape_le_coproducts (J : Type w) :\n    W.colimitsOfShape (Discrete J) ≤ coproducts.{w} W :=\n  le_iSup (f := fun (J : Type w) ↦ W.colimitsOfShape (Discrete J)) J\n\n"}
{"name":"CategoryTheory.MorphismProperty.coproducts_iff","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nW : CategoryTheory.MorphismProperty C\nX Y : C\nf : Quiver.Hom X Y\n⊢ Iff (W.coproducts f) (Exists fun J => W.colimitsOfShape (CategoryTheory.Discrete J) f)","decl":"lemma coproducts_iff {X Y : C} (f : X ⟶ Y) :\n    coproducts.{w} W f ↔ ∃ (J : Type w), W.colimitsOfShape (Discrete J) f := by\n  simp only [coproducts, iSup_iff]\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderProductsOfShape.mk","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nW : CategoryTheory.MorphismProperty C\nJ : Type u_1\ninst✝ : W.RespectsIso\nhW : ∀ (X₁ X₂ : J → C) [inst : CategoryTheory.Limits.HasProduct X₁] [inst_1 : CategoryTheory.Limits.HasProduct X₂] (f : (j : J) → Quiver.Hom (X₁ j) (X₂ j)), (∀ (j : J), W (f j)) → W (CategoryTheory.Limits.Pi.map f)\n⊢ W.IsStableUnderProductsOfShape J","decl":"lemma IsStableUnderProductsOfShape.mk (J : Type*) [W.RespectsIso]\n    (hW : ∀ (X₁ X₂ : J → C) [HasProduct X₁] [HasProduct X₂]\n      (f : ∀ j, X₁ j ⟶ X₂ j) (_ : ∀ (j : J), W (f j)),\n      W (Limits.Pi.map f)) : W.IsStableUnderProductsOfShape J := by\n  intro X₁ X₂ c₁ c₂ hc₁ hc₂ f hf\n  let φ := fun j => f.app (Discrete.mk j)\n  have : HasLimit X₁ := ⟨c₁, hc₁⟩\n  have : HasLimit X₂ := ⟨c₂, hc₂⟩\n  have : HasProduct fun j ↦ X₁.obj (Discrete.mk j) :=\n    hasLimitOfIso (Discrete.natIso (fun j ↦ Iso.refl (X₁.obj j)))\n  have : HasProduct fun j ↦ X₂.obj (Discrete.mk j) :=\n    hasLimitOfIso (Discrete.natIso (fun j ↦ Iso.refl (X₂.obj j)))\n  have hf' := hW _ _ φ (fun j => hf (Discrete.mk j))\n  refine (W.arrow_mk_iso_iff ?_).2 hf'\n  refine Arrow.isoMk\n    (IsLimit.conePointUniqueUpToIso hc₁ (limit.isLimit X₁) ≪≫ (Pi.isoLimit X₁).symm)\n    (IsLimit.conePointUniqueUpToIso hc₂ (limit.isLimit X₂) ≪≫ (Pi.isoLimit _).symm) ?_\n  apply limit.hom_ext\n  rintro ⟨j⟩\n  simp [φ]\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderCoproductsOfShape.mk","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nW : CategoryTheory.MorphismProperty C\nJ : Type u_1\ninst✝ : W.RespectsIso\nhW : ∀ (X₁ X₂ : J → C) [inst : CategoryTheory.Limits.HasCoproduct X₁] [inst_1 : CategoryTheory.Limits.HasCoproduct X₂] (f : (j : J) → Quiver.Hom (X₁ j) (X₂ j)), (∀ (j : J), W (f j)) → W (CategoryTheory.Limits.Sigma.map f)\n⊢ W.IsStableUnderCoproductsOfShape J","decl":"lemma IsStableUnderCoproductsOfShape.mk (J : Type*) [W.RespectsIso]\n    (hW : ∀ (X₁ X₂ : J → C) [HasCoproduct X₁] [HasCoproduct X₂]\n      (f : ∀ j, X₁ j ⟶ X₂ j) (_ : ∀ (j : J), W (f j)),\n      W (Limits.Sigma.map f)) : W.IsStableUnderCoproductsOfShape J := by\n  intro X₁ X₂ c₁ c₂ hc₁ hc₂ f hf\n  let φ := fun j => f.app (Discrete.mk j)\n  have : HasColimit X₁ := ⟨c₁, hc₁⟩\n  have : HasColimit X₂ := ⟨c₂, hc₂⟩\n  have : HasCoproduct fun j ↦ X₁.obj (Discrete.mk j) :=\n    hasColimitOfIso (Discrete.natIso (fun j ↦ Iso.refl (X₁.obj j)))\n  have : HasCoproduct fun j ↦ X₂.obj (Discrete.mk j) :=\n    hasColimitOfIso (Discrete.natIso (fun j ↦ Iso.refl (X₂.obj j)))\n  have hf' := hW _ _ φ (fun j => hf (Discrete.mk j))\n  refine (W.arrow_mk_iso_iff ?_).1 hf'\n  refine Arrow.isoMk\n    ((Sigma.isoColimit _) ≪≫ IsColimit.coconePointUniqueUpToIso (colimit.isColimit X₁) hc₁)\n    ((Sigma.isoColimit _) ≪≫ IsColimit.coconePointUniqueUpToIso (colimit.isColimit X₂) hc₂) ?_\n  apply colimit.hom_ext\n  rintro ⟨j⟩\n  simp [φ]\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderFiniteProducts.isStableUnderProductsOfShape","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nW : CategoryTheory.MorphismProperty C\nself : W.IsStableUnderFiniteProducts\nJ : Type\ninst✝ : Finite J\n⊢ W.IsStableUnderProductsOfShape J","decl":"/-- The condition that a property of morphisms is stable by finite products. -/\nclass IsStableUnderFiniteProducts : Prop where\n  isStableUnderProductsOfShape (J : Type) [Finite J] : W.IsStableUnderProductsOfShape J\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderFiniteCoproducts.isStableUnderCoproductsOfShape","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\nW : CategoryTheory.MorphismProperty C\nself : W.IsStableUnderFiniteCoproducts\nJ : Type\ninst✝ : Finite J\n⊢ W.IsStableUnderCoproductsOfShape J","decl":"/-- The condition that a property of morphisms is stable by finite coproducts. -/\nclass IsStableUnderFiniteCoproducts : Prop where\n  isStableUnderCoproductsOfShape (J : Type) [Finite J] : W.IsStableUnderCoproductsOfShape J\n\n"}
{"name":"CategoryTheory.MorphismProperty.isStableUnderProductsOfShape_of_isStableUnderFiniteProducts","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\nW : CategoryTheory.MorphismProperty C\nJ : Type\ninst✝¹ : Finite J\ninst✝ : W.IsStableUnderFiniteProducts\n⊢ W.IsStableUnderProductsOfShape J","decl":"lemma isStableUnderProductsOfShape_of_isStableUnderFiniteProducts\n    (J : Type) [Finite J] [W.IsStableUnderFiniteProducts] :\n    W.IsStableUnderProductsOfShape J :=\n  IsStableUnderFiniteProducts.isStableUnderProductsOfShape J\n\n"}
{"name":"CategoryTheory.MorphismProperty.isStableUnderCoproductsOfShape_of_isStableUnderFiniteCoproducts","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\nW : CategoryTheory.MorphismProperty C\nJ : Type\ninst✝¹ : Finite J\ninst✝ : W.IsStableUnderFiniteCoproducts\n⊢ W.IsStableUnderCoproductsOfShape J","decl":"lemma isStableUnderCoproductsOfShape_of_isStableUnderFiniteCoproducts\n    (J : Type) [Finite J] [W.IsStableUnderFiniteCoproducts] :\n    W.IsStableUnderCoproductsOfShape J :=\n  IsStableUnderFiniteCoproducts.isStableUnderCoproductsOfShape J\n\n"}
{"name":"CategoryTheory.MorphismProperty.diagonal_iff","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Limits.HasPullbacks C\nP : CategoryTheory.MorphismProperty C\nX Y : C\nf : Quiver.Hom X Y\n⊢ Iff (P.diagonal f) (P (CategoryTheory.Limits.pullback.diagonal f))","decl":"theorem diagonal_iff {X Y : C} {f : X ⟶ Y} : P.diagonal f ↔ P (pullback.diagonal f) :=\n  Iff.rfl\n\n"}
{"name":"CategoryTheory.MorphismProperty.RespectsIso.diagonal","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Limits.HasPullbacks C\nP : CategoryTheory.MorphismProperty C\ninst✝ : P.RespectsIso\n⊢ P.diagonal.RespectsIso","decl":"instance RespectsIso.diagonal [P.RespectsIso] : P.diagonal.RespectsIso := by\n  apply RespectsIso.mk\n  · introv H\n    rwa [diagonal_iff, pullback.diagonal_comp, P.cancel_left_of_respectsIso,\n      P.cancel_left_of_respectsIso, ← P.cancel_right_of_respectsIso _\n        (pullback.map (e.hom ≫ f) (e.hom ≫ f) f f e.hom e.hom (𝟙 Z) (by simp) (by simp)),\n      ← pullback.condition, P.cancel_left_of_respectsIso]\n  · introv H\n    delta diagonal\n    rwa [pullback.diagonal_comp, P.cancel_right_of_respectsIso]\n\n"}
{"name":"CategoryTheory.MorphismProperty.diagonal_isStableUnderComposition","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝⁴ : CategoryTheory.Category.{v, u} C\ninst✝³ : CategoryTheory.Limits.HasPullbacks C\nP : CategoryTheory.MorphismProperty C\ninst✝² : P.IsStableUnderComposition\ninst✝¹ : P.RespectsIso\ninst✝ : P.IsStableUnderBaseChange\n⊢ P.diagonal.IsStableUnderComposition","decl":"instance diagonal_isStableUnderComposition [P.IsStableUnderComposition] [RespectsIso P]\n    [IsStableUnderBaseChange P] : P.diagonal.IsStableUnderComposition where\n  comp_mem _ _ h₁ h₂ := by\n    rw [diagonal_iff, pullback.diagonal_comp]\n    exact P.comp_mem _ _ h₁\n      (by simpa only [cancel_left_of_respectsIso] using P.pullback_snd _ _ h₂)\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderBaseChange.diagonal","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝³ : CategoryTheory.Category.{v, u} C\ninst✝² : CategoryTheory.Limits.HasPullbacks C\nP : CategoryTheory.MorphismProperty C\ninst✝¹ : P.IsStableUnderBaseChange\ninst✝ : P.RespectsIso\n⊢ P.diagonal.IsStableUnderBaseChange","decl":"instance IsStableUnderBaseChange.diagonal [IsStableUnderBaseChange P] [P.RespectsIso] :\n    P.diagonal.IsStableUnderBaseChange :=\n  IsStableUnderBaseChange.mk'\n    (by\n      introv h\n      rw [diagonal_iff, diagonal_pullback_fst, P.cancel_left_of_respectsIso,\n        P.cancel_right_of_respectsIso]\n      exact P.baseChange_map f _ (by simpa))\n\n"}
{"name":"CategoryTheory.MorphismProperty.diagonal_isomorphisms","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Limits.HasPullbacks C\n⊢ Eq (CategoryTheory.MorphismProperty.isomorphisms C).diagonal (CategoryTheory.MorphismProperty.monomorphisms C)","decl":"lemma diagonal_isomorphisms : (isomorphisms C).diagonal = monomorphisms C :=\n  ext _ _ fun _ _ _ ↦ pullback.isIso_diagonal_iff _\n\n"}
{"name":"CategoryTheory.MorphismProperty.hasOfPostcompProperty_iff_le_diagonal","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝⁴ : CategoryTheory.Category.{v, u} C\ninst✝³ : CategoryTheory.Limits.HasPullbacks C\nP : CategoryTheory.MorphismProperty C\ninst✝² : P.IsStableUnderBaseChange\ninst✝¹ : P.IsMultiplicative\nQ : CategoryTheory.MorphismProperty C\ninst✝ : Q.IsStableUnderBaseChange\n⊢ Iff (P.HasOfPostcompProperty Q) (LE.le Q P.diagonal)","decl":"/-- If `P` is multiplicative and stable under base change, having the of-postcomp property\nwrt. `Q` is equivalent to `Q` implying `P` on the diagonal. -/\nlemma hasOfPostcompProperty_iff_le_diagonal [P.IsStableUnderBaseChange]\n    [P.IsMultiplicative] {Q : MorphismProperty C} [Q.IsStableUnderBaseChange] :\n    P.HasOfPostcompProperty Q ↔ Q ≤ P.diagonal := by\n  refine ⟨fun hP X Y f hf ↦ ?_, fun hP ↦ ⟨fun {Y X S} g f hf hcomp ↦ ?_⟩⟩\n  · exact hP.of_postcomp _ _ (Q.pullback_fst _ _ hf) (by simpa using P.id_mem X)\n  · set gr : Y ⟶ pullback (g ≫ f) f := pullback.lift (𝟙 Y) g (by simp)\n    have : g = gr ≫ pullback.snd _ _ := by simp [gr]\n    rw [this]\n    apply P.comp_mem\n    · exact P.of_isPullback (pullback_lift_diagonal_isPullback g f) (hP _ hf)\n    · exact P.pullback_snd _ _ hcomp\n\n"}
{"name":"CategoryTheory.MorphismProperty.universally_respectsIso","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\n⊢ P.universally.RespectsIso","decl":"instance universally_respectsIso (P : MorphismProperty C) : P.universally.RespectsIso := by\n  apply RespectsIso.mk\n  · intro X Y Z e f hf X' Z' i₁ i₂ f' H\n    have : IsPullback (𝟙 _) (i₁ ≫ e.hom) i₁ e.inv :=\n      IsPullback.of_horiz_isIso\n        ⟨by rw [Category.id_comp, Category.assoc, e.hom_inv_id, Category.comp_id]⟩\n    exact hf _ _ _\n      (by simpa only [Iso.inv_hom_id_assoc, Category.id_comp] using this.paste_horiz H)\n  · intro X Y Z e f hf X' Z' i₁ i₂ f' H\n    have : IsPullback (𝟙 _) i₂ (i₂ ≫ e.inv) e.inv :=\n      IsPullback.of_horiz_isIso ⟨Category.id_comp _⟩\n    exact hf _ _ _ (by simpa only [Category.assoc, Iso.hom_inv_id,\n      Category.comp_id, Category.comp_id] using H.paste_horiz this)\n\n"}
{"name":"CategoryTheory.MorphismProperty.universally_isStableUnderBaseChange","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\n⊢ P.universally.IsStableUnderBaseChange","decl":"instance universally_isStableUnderBaseChange (P : MorphismProperty C) :\n    P.universally.IsStableUnderBaseChange where\n  of_isPullback H h₁ _ _ _ _ _ H' := h₁ _ _ _ (H'.paste_vert H.flip)\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderComposition.universally","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Limits.HasPullbacks C\nP : CategoryTheory.MorphismProperty C\nhP : P.IsStableUnderComposition\n⊢ P.universally.IsStableUnderComposition","decl":"instance IsStableUnderComposition.universally [HasPullbacks C] (P : MorphismProperty C)\n    [hP : P.IsStableUnderComposition] : P.universally.IsStableUnderComposition where\n  comp_mem {X Y Z} f g hf hg X' Z' i₁ i₂ f' H := by\n    have := pullback.lift_fst _ _ (H.w.trans (Category.assoc _ _ _).symm)\n    rw [← this] at H ⊢\n    apply P.comp_mem _ _ _ (hg _ _ _ <| IsPullback.of_hasPullback _ _)\n    exact hf _ _ _ (H.of_right (pullback.lift_snd _ _ _) (IsPullback.of_hasPullback i₂ g))\n\n"}
{"name":"CategoryTheory.MorphismProperty.universally_le","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\n⊢ LE.le P.universally P","decl":"theorem universally_le (P : MorphismProperty C) : P.universally ≤ P := by\n  intro X Y f hf\n  exact hf (𝟙 _) (𝟙 _) _ (IsPullback.of_vert_isIso ⟨by rw [Category.comp_id, Category.id_comp]⟩)\n\n"}
{"name":"CategoryTheory.MorphismProperty.universally_inf","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nP Q : CategoryTheory.MorphismProperty C\n⊢ Eq (Min.min P Q).universally (Min.min P.universally Q.universally)","decl":"theorem universally_inf (P Q : MorphismProperty C) :\n    (P ⊓ Q).universally = P.universally ⊓ Q.universally := by\n  ext X Y f\n  show _ ↔ _ ∧ _\n  simp_rw [universally, ← forall_and]\n  rfl\n\n"}
{"name":"CategoryTheory.MorphismProperty.universally_eq_iff","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\n⊢ Iff (Eq P.universally P) P.IsStableUnderBaseChange","decl":"theorem universally_eq_iff {P : MorphismProperty C} :\n    P.universally = P ↔ P.IsStableUnderBaseChange :=\n  ⟨(· ▸ P.universally_isStableUnderBaseChange),\n    fun hP ↦ P.universally_le.antisymm fun _ _ _ hf _ _ _ _ _ H => hP.of_isPullback H.flip hf⟩\n\n"}
{"name":"CategoryTheory.MorphismProperty.IsStableUnderBaseChange.universally_eq","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\nP : CategoryTheory.MorphismProperty C\nhP : P.IsStableUnderBaseChange\n⊢ Eq P.universally P","decl":"theorem IsStableUnderBaseChange.universally_eq {P : MorphismProperty C}\n    [hP : P.IsStableUnderBaseChange] : P.universally = P := universally_eq_iff.mpr hP\n\n"}
{"name":"CategoryTheory.MorphismProperty.universally_mono","module":"Mathlib.CategoryTheory.MorphismProperty.Limits","initialProofState":"C : Type u\ninst✝ : CategoryTheory.Category.{v, u} C\n⊢ Monotone CategoryTheory.MorphismProperty.universally","decl":"theorem universally_mono : Monotone (universally : MorphismProperty C → MorphismProperty C) :=\n  fun _ _ h _ _ _ h₁ _ _ _ _ _ H => h _ (h₁ _ _ _ H)\n\n"}
