{"name":"CategoryTheory.FreeMonoidalCategory.Hom.α_hom.sizeOf_spec","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\ninst✝ : SizeOf C\nX Y Z : CategoryTheory.FreeMonoidalCategory C\n⊢ Eq (SizeOf.sizeOf (CategoryTheory.FreeMonoidalCategory.Hom.α_hom X Y Z)) (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd 1 (SizeOf.sizeOf X)) (SizeOf.sizeOf Y)) (SizeOf.sizeOf Z))","decl":"/-- Formal compositions and tensor products of identities, unitors and associators. The morphisms\n    of the free monoidal category are obtained as a quotient of these formal morphisms by the\n    relations defining a monoidal category. -/\ninductive Hom : F C → F C → Type u\n  | id (X) : Hom X X\n  | α_hom (X Y Z : F C) : Hom ((X.tensor Y).tensor Z) (X.tensor (Y.tensor Z))\n  | α_inv (X Y Z : F C) : Hom (X.tensor (Y.tensor Z)) ((X.tensor Y).tensor Z)\n  | l_hom (X) : Hom (unit.tensor X) X\n  | l_inv (X) : Hom X (unit.tensor X)\n  | ρ_hom (X : F C) : Hom (X.tensor unit) X\n  | ρ_inv (X : F C) : Hom X (X.tensor unit)\n  | comp {X Y Z} (f : Hom X Y) (g : Hom Y Z) : Hom X Z\n  | whiskerLeft (X : F C) {Y₁ Y₂} (f : Hom Y₁ Y₂) : Hom (X.tensor Y₁) (X.tensor Y₂)\n  | whiskerRight {X₁ X₂} (f : Hom X₁ X₂) (Y : F C) : Hom (X₁.tensor Y) (X₂.tensor Y)\n  | tensor {W X Y Z} (f : Hom W Y) (g : Hom X Z) : Hom (W.tensor X) (Y.tensor Z)\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.Hom.ρ_hom.sizeOf_spec","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\ninst✝ : SizeOf C\nX : CategoryTheory.FreeMonoidalCategory C\n⊢ Eq (SizeOf.sizeOf (CategoryTheory.FreeMonoidalCategory.Hom.ρ_hom X)) (HAdd.hAdd 1 (SizeOf.sizeOf X))","decl":"/-- Formal compositions and tensor products of identities, unitors and associators. The morphisms\n    of the free monoidal category are obtained as a quotient of these formal morphisms by the\n    relations defining a monoidal category. -/\ninductive Hom : F C → F C → Type u\n  | id (X) : Hom X X\n  | α_hom (X Y Z : F C) : Hom ((X.tensor Y).tensor Z) (X.tensor (Y.tensor Z))\n  | α_inv (X Y Z : F C) : Hom (X.tensor (Y.tensor Z)) ((X.tensor Y).tensor Z)\n  | l_hom (X) : Hom (unit.tensor X) X\n  | l_inv (X) : Hom X (unit.tensor X)\n  | ρ_hom (X : F C) : Hom (X.tensor unit) X\n  | ρ_inv (X : F C) : Hom X (X.tensor unit)\n  | comp {X Y Z} (f : Hom X Y) (g : Hom Y Z) : Hom X Z\n  | whiskerLeft (X : F C) {Y₁ Y₂} (f : Hom Y₁ Y₂) : Hom (X.tensor Y₁) (X.tensor Y₂)\n  | whiskerRight {X₁ X₂} (f : Hom X₁ X₂) (Y : F C) : Hom (X₁.tensor Y) (X₂.tensor Y)\n  | tensor {W X Y Z} (f : Hom W Y) (g : Hom X Z) : Hom (W.tensor X) (Y.tensor Z)\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.Hom.whiskerLeft.inj","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\nX Y₁ Y₂ : CategoryTheory.FreeMonoidalCategory C\nf✝ f : Y₁.Hom Y₂\nx✝ : Eq (CategoryTheory.FreeMonoidalCategory.Hom.whiskerLeft X f✝) (CategoryTheory.FreeMonoidalCategory.Hom.whiskerLeft X f)\n⊢ Eq f✝ f","decl":"/-- Formal compositions and tensor products of identities, unitors and associators. The morphisms\n    of the free monoidal category are obtained as a quotient of these formal morphisms by the\n    relations defining a monoidal category. -/\ninductive Hom : F C → F C → Type u\n  | id (X) : Hom X X\n  | α_hom (X Y Z : F C) : Hom ((X.tensor Y).tensor Z) (X.tensor (Y.tensor Z))\n  | α_inv (X Y Z : F C) : Hom (X.tensor (Y.tensor Z)) ((X.tensor Y).tensor Z)\n  | l_hom (X) : Hom (unit.tensor X) X\n  | l_inv (X) : Hom X (unit.tensor X)\n  | ρ_hom (X : F C) : Hom (X.tensor unit) X\n  | ρ_inv (X : F C) : Hom X (X.tensor unit)\n  | comp {X Y Z} (f : Hom X Y) (g : Hom Y Z) : Hom X Z\n  | whiskerLeft (X : F C) {Y₁ Y₂} (f : Hom Y₁ Y₂) : Hom (X.tensor Y₁) (X.tensor Y₂)\n  | whiskerRight {X₁ X₂} (f : Hom X₁ X₂) (Y : F C) : Hom (X₁.tensor Y) (X₂.tensor Y)\n  | tensor {W X Y Z} (f : Hom W Y) (g : Hom X Z) : Hom (W.tensor X) (Y.tensor Z)\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.Hom.l_inv.sizeOf_spec","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\ninst✝ : SizeOf C\nX : CategoryTheory.FreeMonoidalCategory C\n⊢ Eq (SizeOf.sizeOf (CategoryTheory.FreeMonoidalCategory.Hom.l_inv X)) (HAdd.hAdd 1 (SizeOf.sizeOf X))","decl":"/-- Formal compositions and tensor products of identities, unitors and associators. The morphisms\n    of the free monoidal category are obtained as a quotient of these formal morphisms by the\n    relations defining a monoidal category. -/\ninductive Hom : F C → F C → Type u\n  | id (X) : Hom X X\n  | α_hom (X Y Z : F C) : Hom ((X.tensor Y).tensor Z) (X.tensor (Y.tensor Z))\n  | α_inv (X Y Z : F C) : Hom (X.tensor (Y.tensor Z)) ((X.tensor Y).tensor Z)\n  | l_hom (X) : Hom (unit.tensor X) X\n  | l_inv (X) : Hom X (unit.tensor X)\n  | ρ_hom (X : F C) : Hom (X.tensor unit) X\n  | ρ_inv (X : F C) : Hom X (X.tensor unit)\n  | comp {X Y Z} (f : Hom X Y) (g : Hom Y Z) : Hom X Z\n  | whiskerLeft (X : F C) {Y₁ Y₂} (f : Hom Y₁ Y₂) : Hom (X.tensor Y₁) (X.tensor Y₂)\n  | whiskerRight {X₁ X₂} (f : Hom X₁ X₂) (Y : F C) : Hom (X₁.tensor Y) (X₂.tensor Y)\n  | tensor {W X Y Z} (f : Hom W Y) (g : Hom X Z) : Hom (W.tensor X) (Y.tensor Z)\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.Hom.whiskerLeft.injEq","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\nX Y₁ Y₂ : CategoryTheory.FreeMonoidalCategory C\nf✝ f : Y₁.Hom Y₂\n⊢ Eq (Eq (CategoryTheory.FreeMonoidalCategory.Hom.whiskerLeft X f✝) (CategoryTheory.FreeMonoidalCategory.Hom.whiskerLeft X f)) (Eq f✝ f)","decl":"/-- Formal compositions and tensor products of identities, unitors and associators. The morphisms\n    of the free monoidal category are obtained as a quotient of these formal morphisms by the\n    relations defining a monoidal category. -/\ninductive Hom : F C → F C → Type u\n  | id (X) : Hom X X\n  | α_hom (X Y Z : F C) : Hom ((X.tensor Y).tensor Z) (X.tensor (Y.tensor Z))\n  | α_inv (X Y Z : F C) : Hom (X.tensor (Y.tensor Z)) ((X.tensor Y).tensor Z)\n  | l_hom (X) : Hom (unit.tensor X) X\n  | l_inv (X) : Hom X (unit.tensor X)\n  | ρ_hom (X : F C) : Hom (X.tensor unit) X\n  | ρ_inv (X : F C) : Hom X (X.tensor unit)\n  | comp {X Y Z} (f : Hom X Y) (g : Hom Y Z) : Hom X Z\n  | whiskerLeft (X : F C) {Y₁ Y₂} (f : Hom Y₁ Y₂) : Hom (X.tensor Y₁) (X.tensor Y₂)\n  | whiskerRight {X₁ X₂} (f : Hom X₁ X₂) (Y : F C) : Hom (X₁.tensor Y) (X₂.tensor Y)\n  | tensor {W X Y Z} (f : Hom W Y) (g : Hom X Z) : Hom (W.tensor X) (Y.tensor Z)\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.Hom.l_hom.sizeOf_spec","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\ninst✝ : SizeOf C\nX : CategoryTheory.FreeMonoidalCategory C\n⊢ Eq (SizeOf.sizeOf (CategoryTheory.FreeMonoidalCategory.Hom.l_hom X)) (HAdd.hAdd 1 (SizeOf.sizeOf X))","decl":"/-- Formal compositions and tensor products of identities, unitors and associators. The morphisms\n    of the free monoidal category are obtained as a quotient of these formal morphisms by the\n    relations defining a monoidal category. -/\ninductive Hom : F C → F C → Type u\n  | id (X) : Hom X X\n  | α_hom (X Y Z : F C) : Hom ((X.tensor Y).tensor Z) (X.tensor (Y.tensor Z))\n  | α_inv (X Y Z : F C) : Hom (X.tensor (Y.tensor Z)) ((X.tensor Y).tensor Z)\n  | l_hom (X) : Hom (unit.tensor X) X\n  | l_inv (X) : Hom X (unit.tensor X)\n  | ρ_hom (X : F C) : Hom (X.tensor unit) X\n  | ρ_inv (X : F C) : Hom X (X.tensor unit)\n  | comp {X Y Z} (f : Hom X Y) (g : Hom Y Z) : Hom X Z\n  | whiskerLeft (X : F C) {Y₁ Y₂} (f : Hom Y₁ Y₂) : Hom (X.tensor Y₁) (X.tensor Y₂)\n  | whiskerRight {X₁ X₂} (f : Hom X₁ X₂) (Y : F C) : Hom (X₁.tensor Y) (X₂.tensor Y)\n  | tensor {W X Y Z} (f : Hom W Y) (g : Hom X Z) : Hom (W.tensor X) (Y.tensor Z)\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.Hom.tensor.inj","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\nW X Y Z : CategoryTheory.FreeMonoidalCategory C\nf✝ : W.Hom Y\ng✝ : X.Hom Z\nf : W.Hom Y\ng : X.Hom Z\nx✝ : Eq (f✝.tensor g✝) (f.tensor g)\n⊢ And (Eq f✝ f) (Eq g✝ g)","decl":"/-- Formal compositions and tensor products of identities, unitors and associators. The morphisms\n    of the free monoidal category are obtained as a quotient of these formal morphisms by the\n    relations defining a monoidal category. -/\ninductive Hom : F C → F C → Type u\n  | id (X) : Hom X X\n  | α_hom (X Y Z : F C) : Hom ((X.tensor Y).tensor Z) (X.tensor (Y.tensor Z))\n  | α_inv (X Y Z : F C) : Hom (X.tensor (Y.tensor Z)) ((X.tensor Y).tensor Z)\n  | l_hom (X) : Hom (unit.tensor X) X\n  | l_inv (X) : Hom X (unit.tensor X)\n  | ρ_hom (X : F C) : Hom (X.tensor unit) X\n  | ρ_inv (X : F C) : Hom X (X.tensor unit)\n  | comp {X Y Z} (f : Hom X Y) (g : Hom Y Z) : Hom X Z\n  | whiskerLeft (X : F C) {Y₁ Y₂} (f : Hom Y₁ Y₂) : Hom (X.tensor Y₁) (X.tensor Y₂)\n  | whiskerRight {X₁ X₂} (f : Hom X₁ X₂) (Y : F C) : Hom (X₁.tensor Y) (X₂.tensor Y)\n  | tensor {W X Y Z} (f : Hom W Y) (g : Hom X Z) : Hom (W.tensor X) (Y.tensor Z)\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.Hom.whiskerRight.sizeOf_spec","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\ninst✝ : SizeOf C\nX₁ X₂ : CategoryTheory.FreeMonoidalCategory C\nf : X₁.Hom X₂\nY : CategoryTheory.FreeMonoidalCategory C\n⊢ Eq (SizeOf.sizeOf (f.whiskerRight Y)) (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd 1 (SizeOf.sizeOf X₁)) (SizeOf.sizeOf X₂)) (SizeOf.sizeOf f)) (SizeOf.sizeOf Y))","decl":"/-- Formal compositions and tensor products of identities, unitors and associators. The morphisms\n    of the free monoidal category are obtained as a quotient of these formal morphisms by the\n    relations defining a monoidal category. -/\ninductive Hom : F C → F C → Type u\n  | id (X) : Hom X X\n  | α_hom (X Y Z : F C) : Hom ((X.tensor Y).tensor Z) (X.tensor (Y.tensor Z))\n  | α_inv (X Y Z : F C) : Hom (X.tensor (Y.tensor Z)) ((X.tensor Y).tensor Z)\n  | l_hom (X) : Hom (unit.tensor X) X\n  | l_inv (X) : Hom X (unit.tensor X)\n  | ρ_hom (X : F C) : Hom (X.tensor unit) X\n  | ρ_inv (X : F C) : Hom X (X.tensor unit)\n  | comp {X Y Z} (f : Hom X Y) (g : Hom Y Z) : Hom X Z\n  | whiskerLeft (X : F C) {Y₁ Y₂} (f : Hom Y₁ Y₂) : Hom (X.tensor Y₁) (X.tensor Y₂)\n  | whiskerRight {X₁ X₂} (f : Hom X₁ X₂) (Y : F C) : Hom (X₁.tensor Y) (X₂.tensor Y)\n  | tensor {W X Y Z} (f : Hom W Y) (g : Hom X Z) : Hom (W.tensor X) (Y.tensor Z)\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.Hom.comp.inj","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\nX Y✝ Z : CategoryTheory.FreeMonoidalCategory C\nf✝ : X.Hom Y✝\ng✝ : Y✝.Hom Z\nY : CategoryTheory.FreeMonoidalCategory C\nf : X.Hom Y\ng : Y.Hom Z\nx✝ : Eq (f✝.comp g✝) (f.comp g)\n⊢ And (Eq Y✝ Y) (And (HEq f✝ f) (HEq g✝ g))","decl":"/-- Formal compositions and tensor products of identities, unitors and associators. The morphisms\n    of the free monoidal category are obtained as a quotient of these formal morphisms by the\n    relations defining a monoidal category. -/\ninductive Hom : F C → F C → Type u\n  | id (X) : Hom X X\n  | α_hom (X Y Z : F C) : Hom ((X.tensor Y).tensor Z) (X.tensor (Y.tensor Z))\n  | α_inv (X Y Z : F C) : Hom (X.tensor (Y.tensor Z)) ((X.tensor Y).tensor Z)\n  | l_hom (X) : Hom (unit.tensor X) X\n  | l_inv (X) : Hom X (unit.tensor X)\n  | ρ_hom (X : F C) : Hom (X.tensor unit) X\n  | ρ_inv (X : F C) : Hom X (X.tensor unit)\n  | comp {X Y Z} (f : Hom X Y) (g : Hom Y Z) : Hom X Z\n  | whiskerLeft (X : F C) {Y₁ Y₂} (f : Hom Y₁ Y₂) : Hom (X.tensor Y₁) (X.tensor Y₂)\n  | whiskerRight {X₁ X₂} (f : Hom X₁ X₂) (Y : F C) : Hom (X₁.tensor Y) (X₂.tensor Y)\n  | tensor {W X Y Z} (f : Hom W Y) (g : Hom X Z) : Hom (W.tensor X) (Y.tensor Z)\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.Hom.whiskerRight.inj","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\nX₁ X₂ : CategoryTheory.FreeMonoidalCategory C\nf✝ : X₁.Hom X₂\nY : CategoryTheory.FreeMonoidalCategory C\nf : X₁.Hom X₂\nx✝ : Eq (f✝.whiskerRight Y) (f.whiskerRight Y)\n⊢ Eq f✝ f","decl":"/-- Formal compositions and tensor products of identities, unitors and associators. The morphisms\n    of the free monoidal category are obtained as a quotient of these formal morphisms by the\n    relations defining a monoidal category. -/\ninductive Hom : F C → F C → Type u\n  | id (X) : Hom X X\n  | α_hom (X Y Z : F C) : Hom ((X.tensor Y).tensor Z) (X.tensor (Y.tensor Z))\n  | α_inv (X Y Z : F C) : Hom (X.tensor (Y.tensor Z)) ((X.tensor Y).tensor Z)\n  | l_hom (X) : Hom (unit.tensor X) X\n  | l_inv (X) : Hom X (unit.tensor X)\n  | ρ_hom (X : F C) : Hom (X.tensor unit) X\n  | ρ_inv (X : F C) : Hom X (X.tensor unit)\n  | comp {X Y Z} (f : Hom X Y) (g : Hom Y Z) : Hom X Z\n  | whiskerLeft (X : F C) {Y₁ Y₂} (f : Hom Y₁ Y₂) : Hom (X.tensor Y₁) (X.tensor Y₂)\n  | whiskerRight {X₁ X₂} (f : Hom X₁ X₂) (Y : F C) : Hom (X₁.tensor Y) (X₂.tensor Y)\n  | tensor {W X Y Z} (f : Hom W Y) (g : Hom X Z) : Hom (W.tensor X) (Y.tensor Z)\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.Hom.tensor.sizeOf_spec","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\ninst✝ : SizeOf C\nW X Y Z : CategoryTheory.FreeMonoidalCategory C\nf : W.Hom Y\ng : X.Hom Z\n⊢ Eq (SizeOf.sizeOf (f.tensor g)) (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd 1 (SizeOf.sizeOf W)) (SizeOf.sizeOf X)) (SizeOf.sizeOf Y)) (SizeOf.sizeOf Z)) (SizeOf.sizeOf f)) (SizeOf.sizeOf g))","decl":"/-- Formal compositions and tensor products of identities, unitors and associators. The morphisms\n    of the free monoidal category are obtained as a quotient of these formal morphisms by the\n    relations defining a monoidal category. -/\ninductive Hom : F C → F C → Type u\n  | id (X) : Hom X X\n  | α_hom (X Y Z : F C) : Hom ((X.tensor Y).tensor Z) (X.tensor (Y.tensor Z))\n  | α_inv (X Y Z : F C) : Hom (X.tensor (Y.tensor Z)) ((X.tensor Y).tensor Z)\n  | l_hom (X) : Hom (unit.tensor X) X\n  | l_inv (X) : Hom X (unit.tensor X)\n  | ρ_hom (X : F C) : Hom (X.tensor unit) X\n  | ρ_inv (X : F C) : Hom X (X.tensor unit)\n  | comp {X Y Z} (f : Hom X Y) (g : Hom Y Z) : Hom X Z\n  | whiskerLeft (X : F C) {Y₁ Y₂} (f : Hom Y₁ Y₂) : Hom (X.tensor Y₁) (X.tensor Y₂)\n  | whiskerRight {X₁ X₂} (f : Hom X₁ X₂) (Y : F C) : Hom (X₁.tensor Y) (X₂.tensor Y)\n  | tensor {W X Y Z} (f : Hom W Y) (g : Hom X Z) : Hom (W.tensor X) (Y.tensor Z)\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.Hom.comp.sizeOf_spec","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\ninst✝ : SizeOf C\nX Y Z : CategoryTheory.FreeMonoidalCategory C\nf : X.Hom Y\ng : Y.Hom Z\n⊢ Eq (SizeOf.sizeOf (f.comp g)) (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd 1 (SizeOf.sizeOf X)) (SizeOf.sizeOf Y)) (SizeOf.sizeOf Z)) (SizeOf.sizeOf f)) (SizeOf.sizeOf g))","decl":"/-- Formal compositions and tensor products of identities, unitors and associators. The morphisms\n    of the free monoidal category are obtained as a quotient of these formal morphisms by the\n    relations defining a monoidal category. -/\ninductive Hom : F C → F C → Type u\n  | id (X) : Hom X X\n  | α_hom (X Y Z : F C) : Hom ((X.tensor Y).tensor Z) (X.tensor (Y.tensor Z))\n  | α_inv (X Y Z : F C) : Hom (X.tensor (Y.tensor Z)) ((X.tensor Y).tensor Z)\n  | l_hom (X) : Hom (unit.tensor X) X\n  | l_inv (X) : Hom X (unit.tensor X)\n  | ρ_hom (X : F C) : Hom (X.tensor unit) X\n  | ρ_inv (X : F C) : Hom X (X.tensor unit)\n  | comp {X Y Z} (f : Hom X Y) (g : Hom Y Z) : Hom X Z\n  | whiskerLeft (X : F C) {Y₁ Y₂} (f : Hom Y₁ Y₂) : Hom (X.tensor Y₁) (X.tensor Y₂)\n  | whiskerRight {X₁ X₂} (f : Hom X₁ X₂) (Y : F C) : Hom (X₁.tensor Y) (X₂.tensor Y)\n  | tensor {W X Y Z} (f : Hom W Y) (g : Hom X Z) : Hom (W.tensor X) (Y.tensor Z)\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.Hom.tensor.injEq","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\nW X Y Z : CategoryTheory.FreeMonoidalCategory C\nf✝ : W.Hom Y\ng✝ : X.Hom Z\nf : W.Hom Y\ng : X.Hom Z\n⊢ Eq (Eq (f✝.tensor g✝) (f.tensor g)) (And (Eq f✝ f) (Eq g✝ g))","decl":"/-- Formal compositions and tensor products of identities, unitors and associators. The morphisms\n    of the free monoidal category are obtained as a quotient of these formal morphisms by the\n    relations defining a monoidal category. -/\ninductive Hom : F C → F C → Type u\n  | id (X) : Hom X X\n  | α_hom (X Y Z : F C) : Hom ((X.tensor Y).tensor Z) (X.tensor (Y.tensor Z))\n  | α_inv (X Y Z : F C) : Hom (X.tensor (Y.tensor Z)) ((X.tensor Y).tensor Z)\n  | l_hom (X) : Hom (unit.tensor X) X\n  | l_inv (X) : Hom X (unit.tensor X)\n  | ρ_hom (X : F C) : Hom (X.tensor unit) X\n  | ρ_inv (X : F C) : Hom X (X.tensor unit)\n  | comp {X Y Z} (f : Hom X Y) (g : Hom Y Z) : Hom X Z\n  | whiskerLeft (X : F C) {Y₁ Y₂} (f : Hom Y₁ Y₂) : Hom (X.tensor Y₁) (X.tensor Y₂)\n  | whiskerRight {X₁ X₂} (f : Hom X₁ X₂) (Y : F C) : Hom (X₁.tensor Y) (X₂.tensor Y)\n  | tensor {W X Y Z} (f : Hom W Y) (g : Hom X Z) : Hom (W.tensor X) (Y.tensor Z)\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.Hom.comp.injEq","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\nX Y✝ Z : CategoryTheory.FreeMonoidalCategory C\nf✝ : X.Hom Y✝\ng✝ : Y✝.Hom Z\nY : CategoryTheory.FreeMonoidalCategory C\nf : X.Hom Y\ng : Y.Hom Z\n⊢ Eq (Eq (f✝.comp g✝) (f.comp g)) (And (Eq Y✝ Y) (And (HEq f✝ f) (HEq g✝ g)))","decl":"/-- Formal compositions and tensor products of identities, unitors and associators. The morphisms\n    of the free monoidal category are obtained as a quotient of these formal morphisms by the\n    relations defining a monoidal category. -/\ninductive Hom : F C → F C → Type u\n  | id (X) : Hom X X\n  | α_hom (X Y Z : F C) : Hom ((X.tensor Y).tensor Z) (X.tensor (Y.tensor Z))\n  | α_inv (X Y Z : F C) : Hom (X.tensor (Y.tensor Z)) ((X.tensor Y).tensor Z)\n  | l_hom (X) : Hom (unit.tensor X) X\n  | l_inv (X) : Hom X (unit.tensor X)\n  | ρ_hom (X : F C) : Hom (X.tensor unit) X\n  | ρ_inv (X : F C) : Hom X (X.tensor unit)\n  | comp {X Y Z} (f : Hom X Y) (g : Hom Y Z) : Hom X Z\n  | whiskerLeft (X : F C) {Y₁ Y₂} (f : Hom Y₁ Y₂) : Hom (X.tensor Y₁) (X.tensor Y₂)\n  | whiskerRight {X₁ X₂} (f : Hom X₁ X₂) (Y : F C) : Hom (X₁.tensor Y) (X₂.tensor Y)\n  | tensor {W X Y Z} (f : Hom W Y) (g : Hom X Z) : Hom (W.tensor X) (Y.tensor Z)\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.Hom.id.sizeOf_spec","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\ninst✝ : SizeOf C\nX : CategoryTheory.FreeMonoidalCategory C\n⊢ Eq (SizeOf.sizeOf (CategoryTheory.FreeMonoidalCategory.Hom.id X)) (HAdd.hAdd 1 (SizeOf.sizeOf X))","decl":"/-- Formal compositions and tensor products of identities, unitors and associators. The morphisms\n    of the free monoidal category are obtained as a quotient of these formal morphisms by the\n    relations defining a monoidal category. -/\ninductive Hom : F C → F C → Type u\n  | id (X) : Hom X X\n  | α_hom (X Y Z : F C) : Hom ((X.tensor Y).tensor Z) (X.tensor (Y.tensor Z))\n  | α_inv (X Y Z : F C) : Hom (X.tensor (Y.tensor Z)) ((X.tensor Y).tensor Z)\n  | l_hom (X) : Hom (unit.tensor X) X\n  | l_inv (X) : Hom X (unit.tensor X)\n  | ρ_hom (X : F C) : Hom (X.tensor unit) X\n  | ρ_inv (X : F C) : Hom X (X.tensor unit)\n  | comp {X Y Z} (f : Hom X Y) (g : Hom Y Z) : Hom X Z\n  | whiskerLeft (X : F C) {Y₁ Y₂} (f : Hom Y₁ Y₂) : Hom (X.tensor Y₁) (X.tensor Y₂)\n  | whiskerRight {X₁ X₂} (f : Hom X₁ X₂) (Y : F C) : Hom (X₁.tensor Y) (X₂.tensor Y)\n  | tensor {W X Y Z} (f : Hom W Y) (g : Hom X Z) : Hom (W.tensor X) (Y.tensor Z)\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.Hom.ρ_inv.sizeOf_spec","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\ninst✝ : SizeOf C\nX : CategoryTheory.FreeMonoidalCategory C\n⊢ Eq (SizeOf.sizeOf (CategoryTheory.FreeMonoidalCategory.Hom.ρ_inv X)) (HAdd.hAdd 1 (SizeOf.sizeOf X))","decl":"/-- Formal compositions and tensor products of identities, unitors and associators. The morphisms\n    of the free monoidal category are obtained as a quotient of these formal morphisms by the\n    relations defining a monoidal category. -/\ninductive Hom : F C → F C → Type u\n  | id (X) : Hom X X\n  | α_hom (X Y Z : F C) : Hom ((X.tensor Y).tensor Z) (X.tensor (Y.tensor Z))\n  | α_inv (X Y Z : F C) : Hom (X.tensor (Y.tensor Z)) ((X.tensor Y).tensor Z)\n  | l_hom (X) : Hom (unit.tensor X) X\n  | l_inv (X) : Hom X (unit.tensor X)\n  | ρ_hom (X : F C) : Hom (X.tensor unit) X\n  | ρ_inv (X : F C) : Hom X (X.tensor unit)\n  | comp {X Y Z} (f : Hom X Y) (g : Hom Y Z) : Hom X Z\n  | whiskerLeft (X : F C) {Y₁ Y₂} (f : Hom Y₁ Y₂) : Hom (X.tensor Y₁) (X.tensor Y₂)\n  | whiskerRight {X₁ X₂} (f : Hom X₁ X₂) (Y : F C) : Hom (X₁.tensor Y) (X₂.tensor Y)\n  | tensor {W X Y Z} (f : Hom W Y) (g : Hom X Z) : Hom (W.tensor X) (Y.tensor Z)\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.Hom.whiskerRight.injEq","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\nX₁ X₂ : CategoryTheory.FreeMonoidalCategory C\nf✝ : X₁.Hom X₂\nY : CategoryTheory.FreeMonoidalCategory C\nf : X₁.Hom X₂\n⊢ Eq (Eq (f✝.whiskerRight Y) (f.whiskerRight Y)) (Eq f✝ f)","decl":"/-- Formal compositions and tensor products of identities, unitors and associators. The morphisms\n    of the free monoidal category are obtained as a quotient of these formal morphisms by the\n    relations defining a monoidal category. -/\ninductive Hom : F C → F C → Type u\n  | id (X) : Hom X X\n  | α_hom (X Y Z : F C) : Hom ((X.tensor Y).tensor Z) (X.tensor (Y.tensor Z))\n  | α_inv (X Y Z : F C) : Hom (X.tensor (Y.tensor Z)) ((X.tensor Y).tensor Z)\n  | l_hom (X) : Hom (unit.tensor X) X\n  | l_inv (X) : Hom X (unit.tensor X)\n  | ρ_hom (X : F C) : Hom (X.tensor unit) X\n  | ρ_inv (X : F C) : Hom X (X.tensor unit)\n  | comp {X Y Z} (f : Hom X Y) (g : Hom Y Z) : Hom X Z\n  | whiskerLeft (X : F C) {Y₁ Y₂} (f : Hom Y₁ Y₂) : Hom (X.tensor Y₁) (X.tensor Y₂)\n  | whiskerRight {X₁ X₂} (f : Hom X₁ X₂) (Y : F C) : Hom (X₁.tensor Y) (X₂.tensor Y)\n  | tensor {W X Y Z} (f : Hom W Y) (g : Hom X Z) : Hom (W.tensor X) (Y.tensor Z)\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.Hom.α_inv.sizeOf_spec","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\ninst✝ : SizeOf C\nX Y Z : CategoryTheory.FreeMonoidalCategory C\n⊢ Eq (SizeOf.sizeOf (CategoryTheory.FreeMonoidalCategory.Hom.α_inv X Y Z)) (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd 1 (SizeOf.sizeOf X)) (SizeOf.sizeOf Y)) (SizeOf.sizeOf Z))","decl":"/-- Formal compositions and tensor products of identities, unitors and associators. The morphisms\n    of the free monoidal category are obtained as a quotient of these formal morphisms by the\n    relations defining a monoidal category. -/\ninductive Hom : F C → F C → Type u\n  | id (X) : Hom X X\n  | α_hom (X Y Z : F C) : Hom ((X.tensor Y).tensor Z) (X.tensor (Y.tensor Z))\n  | α_inv (X Y Z : F C) : Hom (X.tensor (Y.tensor Z)) ((X.tensor Y).tensor Z)\n  | l_hom (X) : Hom (unit.tensor X) X\n  | l_inv (X) : Hom X (unit.tensor X)\n  | ρ_hom (X : F C) : Hom (X.tensor unit) X\n  | ρ_inv (X : F C) : Hom X (X.tensor unit)\n  | comp {X Y Z} (f : Hom X Y) (g : Hom Y Z) : Hom X Z\n  | whiskerLeft (X : F C) {Y₁ Y₂} (f : Hom Y₁ Y₂) : Hom (X.tensor Y₁) (X.tensor Y₂)\n  | whiskerRight {X₁ X₂} (f : Hom X₁ X₂) (Y : F C) : Hom (X₁.tensor Y) (X₂.tensor Y)\n  | tensor {W X Y Z} (f : Hom W Y) (g : Hom X Z) : Hom (W.tensor X) (Y.tensor Z)\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.Hom.whiskerLeft.sizeOf_spec","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\ninst✝ : SizeOf C\nX Y₁ Y₂ : CategoryTheory.FreeMonoidalCategory C\nf : Y₁.Hom Y₂\n⊢ Eq (SizeOf.sizeOf (CategoryTheory.FreeMonoidalCategory.Hom.whiskerLeft X f)) (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd 1 (SizeOf.sizeOf X)) (SizeOf.sizeOf Y₁)) (SizeOf.sizeOf Y₂)) (SizeOf.sizeOf f))","decl":"/-- Formal compositions and tensor products of identities, unitors and associators. The morphisms\n    of the free monoidal category are obtained as a quotient of these formal morphisms by the\n    relations defining a monoidal category. -/\ninductive Hom : F C → F C → Type u\n  | id (X) : Hom X X\n  | α_hom (X Y Z : F C) : Hom ((X.tensor Y).tensor Z) (X.tensor (Y.tensor Z))\n  | α_inv (X Y Z : F C) : Hom (X.tensor (Y.tensor Z)) ((X.tensor Y).tensor Z)\n  | l_hom (X) : Hom (unit.tensor X) X\n  | l_inv (X) : Hom X (unit.tensor X)\n  | ρ_hom (X : F C) : Hom (X.tensor unit) X\n  | ρ_inv (X : F C) : Hom X (X.tensor unit)\n  | comp {X Y Z} (f : Hom X Y) (g : Hom Y Z) : Hom X Z\n  | whiskerLeft (X : F C) {Y₁ Y₂} (f : Hom Y₁ Y₂) : Hom (X.tensor Y₁) (X.tensor Y₂)\n  | whiskerRight {X₁ X₂} (f : Hom X₁ X₂) (Y : F C) : Hom (X₁.tensor Y) (X₂.tensor Y)\n  | tensor {W X Y Z} (f : Hom W Y) (g : Hom X Z) : Hom (W.tensor X) (Y.tensor Z)\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.mk_comp","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\nX Y Z : CategoryTheory.FreeMonoidalCategory C\nf : X.Hom Y\ng : Y.Hom Z\n⊢ Eq (Quotient.mk (X.setoidHom Z) (f.comp g)) (CategoryTheory.CategoryStruct.comp (Quotient.mk (X.setoidHom Y) f) (Quotient.mk (Y.setoidHom Z) g))","decl":"@[simp]\ntheorem mk_comp {X Y Z : F C} (f : X ⟶ᵐ Y) (g : Y ⟶ᵐ Z) :\n    ⟦f.comp g⟧ = @CategoryStruct.comp (F C) _ _ _ _ ⟦f⟧ ⟦g⟧ :=\n  rfl\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.mk_tensor","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\nX₁ Y₁ X₂ Y₂ : CategoryTheory.FreeMonoidalCategory C\nf : X₁.Hom Y₁\ng : X₂.Hom Y₂\n⊢ Eq (Quotient.mk ((CategoryTheory.MonoidalCategoryStruct.tensorObj X₁ X₂).setoidHom (CategoryTheory.MonoidalCategoryStruct.tensorObj Y₁ Y₂)) (f.tensor g)) (CategoryTheory.MonoidalCategoryStruct.tensorHom (Quotient.mk (X₁.setoidHom Y₁) f) (Quotient.mk (X₂.setoidHom Y₂) g))","decl":"@[simp]\ntheorem mk_tensor {X₁ Y₁ X₂ Y₂ : F C} (f : X₁ ⟶ᵐ Y₁) (g : X₂ ⟶ᵐ Y₂) :\n    ⟦f.tensor g⟧ = @MonoidalCategory.tensorHom (F C) _ _ _ _ _ _ ⟦f⟧ ⟦g⟧ :=\n  rfl\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.mk_whiskerLeft","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\nX Y₁ Y₂ : CategoryTheory.FreeMonoidalCategory C\nf : Y₁.Hom Y₂\n⊢ Eq (Quotient.mk ((CategoryTheory.MonoidalCategoryStruct.tensorObj X Y₁).setoidHom (CategoryTheory.MonoidalCategoryStruct.tensorObj X Y₂)) (CategoryTheory.FreeMonoidalCategory.Hom.whiskerLeft X f)) (CategoryTheory.MonoidalCategoryStruct.whiskerLeft X (Quotient.mk (Y₁.setoidHom Y₂) f))","decl":"@[simp]\ntheorem mk_whiskerLeft (X : F C) {Y₁ Y₂ : F C} (f : Y₁ ⟶ᵐ Y₂) :\n    ⟦f.whiskerLeft X⟧ = MonoidalCategory.whiskerLeft (C := F C) (X := X) (f := ⟦f⟧) :=\n  rfl\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.mk_whiskerRight","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\nX₁ X₂ : CategoryTheory.FreeMonoidalCategory C\nf : X₁.Hom X₂\nY : CategoryTheory.FreeMonoidalCategory C\n⊢ Eq (Quotient.mk ((CategoryTheory.MonoidalCategoryStruct.tensorObj X₁ Y).setoidHom (CategoryTheory.MonoidalCategoryStruct.tensorObj X₂ Y)) (f.whiskerRight Y)) (CategoryTheory.MonoidalCategoryStruct.whiskerRight (Quotient.mk (X₁.setoidHom X₂) f) Y)","decl":"@[simp]\ntheorem mk_whiskerRight {X₁ X₂ : F C} (f : X₁ ⟶ᵐ X₂) (Y : F C) :\n    ⟦f.whiskerRight Y⟧ = MonoidalCategory.whiskerRight (C := F C) (f := ⟦f⟧) (Y := Y) :=\n  rfl\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.mk_id","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\nX : CategoryTheory.FreeMonoidalCategory C\n⊢ Eq (Quotient.mk (X.setoidHom X) (CategoryTheory.FreeMonoidalCategory.Hom.id X)) (CategoryTheory.CategoryStruct.id X)","decl":"@[simp]\ntheorem mk_id {X : F C} : ⟦Hom.id X⟧ = 𝟙 X :=\n  rfl\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.mk_α_hom","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\nX Y Z : CategoryTheory.FreeMonoidalCategory C\n⊢ Eq (Quotient.mk ((CategoryTheory.MonoidalCategoryStruct.tensorObj (CategoryTheory.MonoidalCategoryStruct.tensorObj X Y) Z).setoidHom (CategoryTheory.MonoidalCategoryStruct.tensorObj X (CategoryTheory.MonoidalCategoryStruct.tensorObj Y Z))) (CategoryTheory.FreeMonoidalCategory.Hom.α_hom X Y Z)) (CategoryTheory.MonoidalCategoryStruct.associator X Y Z).hom","decl":"@[simp]\ntheorem mk_α_hom {X Y Z : F C} : ⟦Hom.α_hom X Y Z⟧ = (α_ X Y Z).hom :=\n  rfl\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.mk_α_inv","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\nX Y Z : CategoryTheory.FreeMonoidalCategory C\n⊢ Eq (Quotient.mk ((CategoryTheory.MonoidalCategoryStruct.tensorObj X (CategoryTheory.MonoidalCategoryStruct.tensorObj Y Z)).setoidHom (CategoryTheory.MonoidalCategoryStruct.tensorObj (CategoryTheory.MonoidalCategoryStruct.tensorObj X Y) Z)) (CategoryTheory.FreeMonoidalCategory.Hom.α_inv X Y Z)) (CategoryTheory.MonoidalCategoryStruct.associator X Y Z).inv","decl":"@[simp]\ntheorem mk_α_inv {X Y Z : F C} : ⟦Hom.α_inv X Y Z⟧ = (α_ X Y Z).inv :=\n  rfl\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.mk_ρ_hom","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\nX : CategoryTheory.FreeMonoidalCategory C\n⊢ Eq (Quotient.mk ((CategoryTheory.MonoidalCategoryStruct.tensorObj X CategoryTheory.MonoidalCategoryStruct.tensorUnit).setoidHom X) (CategoryTheory.FreeMonoidalCategory.Hom.ρ_hom X)) (CategoryTheory.MonoidalCategoryStruct.rightUnitor X).hom","decl":"@[simp]\ntheorem mk_ρ_hom {X : F C} : ⟦Hom.ρ_hom X⟧ = (ρ_ X).hom :=\n  rfl\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.mk_ρ_inv","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\nX : CategoryTheory.FreeMonoidalCategory C\n⊢ Eq (Quotient.mk (X.setoidHom (CategoryTheory.MonoidalCategoryStruct.tensorObj X CategoryTheory.MonoidalCategoryStruct.tensorUnit)) (CategoryTheory.FreeMonoidalCategory.Hom.ρ_inv X)) (CategoryTheory.MonoidalCategoryStruct.rightUnitor X).inv","decl":"@[simp]\ntheorem mk_ρ_inv {X : F C} : ⟦Hom.ρ_inv X⟧ = (ρ_ X).inv :=\n  rfl\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.mk_l_hom","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\nX : CategoryTheory.FreeMonoidalCategory C\n⊢ Eq (Quotient.mk ((CategoryTheory.MonoidalCategoryStruct.tensorObj CategoryTheory.MonoidalCategoryStruct.tensorUnit X).setoidHom X) (CategoryTheory.FreeMonoidalCategory.Hom.l_hom X)) (CategoryTheory.MonoidalCategoryStruct.leftUnitor X).hom","decl":"@[simp]\ntheorem mk_l_hom {X : F C} : ⟦Hom.l_hom X⟧ = (λ_ X).hom :=\n  rfl\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.mk_l_inv","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\nX : CategoryTheory.FreeMonoidalCategory C\n⊢ Eq (Quotient.mk (X.setoidHom (CategoryTheory.MonoidalCategoryStruct.tensorObj CategoryTheory.MonoidalCategoryStruct.tensorUnit X)) (CategoryTheory.FreeMonoidalCategory.Hom.l_inv X)) (CategoryTheory.MonoidalCategoryStruct.leftUnitor X).inv","decl":"@[simp]\ntheorem mk_l_inv {X : F C} : ⟦Hom.l_inv X⟧ = (λ_ X).inv :=\n  rfl\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.tensor_eq_tensor","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\nX Y : CategoryTheory.FreeMonoidalCategory C\n⊢ Eq (X.tensor Y) (CategoryTheory.MonoidalCategoryStruct.tensorObj X Y)","decl":"@[simp]\ntheorem tensor_eq_tensor {X Y : F C} : X.tensor Y = X ⊗ Y :=\n  rfl\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.unit_eq_unit","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\n⊢ Eq CategoryTheory.FreeMonoidalCategory.unit CategoryTheory.MonoidalCategoryStruct.tensorUnit","decl":"@[simp]\ntheorem unit_eq_unit : FreeMonoidalCategory.unit = 𝟙_ (F C) :=\n  rfl\n\n"}
{"name":"CategoryTheory.FreeMonoidalCategory.Hom.inductionOn","module":"Mathlib.CategoryTheory.Monoidal.Free.Basic","initialProofState":"C : Type u\nmotive : {X Y : CategoryTheory.FreeMonoidalCategory C} → Quiver.Hom X Y → Prop\nX Y : CategoryTheory.FreeMonoidalCategory C\nt : Quiver.Hom X Y\nid : ∀ (X : CategoryTheory.FreeMonoidalCategory C), motive (CategoryTheory.CategoryStruct.id X)\nα_hom : ∀ (X Y Z : CategoryTheory.FreeMonoidalCategory C), motive (CategoryTheory.MonoidalCategoryStruct.associator X Y Z).hom\nα_inv : ∀ (X Y Z : CategoryTheory.FreeMonoidalCategory C), motive (CategoryTheory.MonoidalCategoryStruct.associator X Y Z).inv\nl_hom : ∀ (X : CategoryTheory.FreeMonoidalCategory C), motive (CategoryTheory.MonoidalCategoryStruct.leftUnitor X).hom\nl_inv : ∀ (X : CategoryTheory.FreeMonoidalCategory C), motive (CategoryTheory.MonoidalCategoryStruct.leftUnitor X).inv\nρ_hom : ∀ (X : CategoryTheory.FreeMonoidalCategory C), motive (CategoryTheory.MonoidalCategoryStruct.rightUnitor X).hom\nρ_inv : ∀ (X : CategoryTheory.FreeMonoidalCategory C), motive (CategoryTheory.MonoidalCategoryStruct.rightUnitor X).inv\ncomp : ∀ {X Y Z : CategoryTheory.FreeMonoidalCategory C} (f : Quiver.Hom X Y) (g : Quiver.Hom Y Z), motive f → motive g → motive (CategoryTheory.CategoryStruct.comp f g)\nwhiskerLeft : ∀ (X : CategoryTheory.FreeMonoidalCategory C) {Y Z : CategoryTheory.FreeMonoidalCategory C} (f : Quiver.Hom Y Z), motive f → motive (CategoryTheory.MonoidalCategoryStruct.whiskerLeft X f)\nwhiskerRight : ∀ {X Y : CategoryTheory.FreeMonoidalCategory C} (f : Quiver.Hom X Y) (Z : CategoryTheory.FreeMonoidalCategory C), motive f → motive (CategoryTheory.MonoidalCategoryStruct.whiskerRight f Z)\n⊢ motive t","decl":"theorem Hom.inductionOn {motive : {X Y : F C} → (X ⟶ Y) → Prop} {X Y : F C} (t : X ⟶ Y)\n    (id : (X : F C) → motive (𝟙 X))\n    (α_hom : (X Y Z : F C) → motive (α_ X Y Z).hom)\n    (α_inv : (X Y Z : F C) → motive (α_ X Y Z).inv)\n    (l_hom : (X : F C) → motive (λ_ X).hom)\n    (l_inv : (X : F C) → motive (λ_ X).inv)\n    (ρ_hom : (X : F C) → motive (ρ_ X).hom)\n    (ρ_inv : (X : F C) → motive (ρ_ X).inv)\n    (comp : {X Y Z : F C} → (f : X ⟶ Y) → (g : Y ⟶ Z) → motive f → motive g → motive (f ≫ g))\n    (whiskerLeft : (X : F C) → {Y Z : F C} → (f : Y ⟶ Z) → motive f → motive (X ◁ f))\n    (whiskerRight : {X Y : F C} → (f : X ⟶ Y) → (Z : F C) → motive f → motive (f ▷ Z)) :\n    motive t := by\n  apply Quotient.inductionOn\n  intro f\n  induction f with\n  | id X => exact id X\n  | α_hom X Y Z => exact α_hom X Y Z\n  | α_inv X Y Z => exact α_inv X Y Z\n  | l_hom X => exact l_hom X\n  | l_inv X => exact l_inv X\n  | ρ_hom X => exact ρ_hom X\n  | ρ_inv X => exact ρ_inv X\n  | comp f g hf hg => exact comp _ _ (hf ⟦f⟧) (hg ⟦g⟧)\n  | whiskerLeft X f hf => exact whiskerLeft X _ (hf ⟦f⟧)\n  | whiskerRight f X hf => exact whiskerRight _ X (hf ⟦f⟧)\n  | @tensor W X Y Z f g hf hg =>\n      have : homMk f ⊗ homMk g = homMk f ▷ X ≫ Y ◁ homMk g :=\n        Quotient.sound (HomEquiv.tensorHom_def f g)\n      change motive (homMk f ⊗ homMk g)\n      rw [this]\n      exact comp _ _ (whiskerRight _ _ (hf ⟦f⟧)) (whiskerLeft _ _ (hg ⟦g⟧))\n\n"}
