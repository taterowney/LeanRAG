{"name":"CategoryTheory.ShortComplex.smul_τ₁","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝³ : Semiring R\ninst✝² : CategoryTheory.Category.{u_3, u_2} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Linear R C\nS₁ S₂ : CategoryTheory.ShortComplex C\na : R\nφ : Quiver.Hom S₁ S₂\n⊢ Eq (HSMul.hSMul a φ).τ₁ (HSMul.hSMul a φ.τ₁)","decl":"@[simp] lemma smul_τ₁ (a : R) (φ : S₁ ⟶ S₂) : (a • φ).τ₁ = a • φ.τ₁ := rfl\n"}
{"name":"CategoryTheory.ShortComplex.smul_τ₂","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝³ : Semiring R\ninst✝² : CategoryTheory.Category.{u_3, u_2} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Linear R C\nS₁ S₂ : CategoryTheory.ShortComplex C\na : R\nφ : Quiver.Hom S₁ S₂\n⊢ Eq (HSMul.hSMul a φ).τ₂ (HSMul.hSMul a φ.τ₂)","decl":"@[simp] lemma smul_τ₂ (a : R) (φ : S₁ ⟶ S₂) : (a • φ).τ₂ = a • φ.τ₂ := rfl\n"}
{"name":"CategoryTheory.ShortComplex.smul_τ₃","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝³ : Semiring R\ninst✝² : CategoryTheory.Category.{u_3, u_2} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Linear R C\nS₁ S₂ : CategoryTheory.ShortComplex C\na : R\nφ : Quiver.Hom S₁ S₂\n⊢ Eq (HSMul.hSMul a φ).τ₃ (HSMul.hSMul a φ.τ₃)","decl":"@[simp] lemma smul_τ₃ (a : R) (φ : S₁ ⟶ S₂) : (a • φ).τ₃ = a • φ.τ₃ := rfl\n\n"}
{"name":"CategoryTheory.ShortComplex.LeftHomologyMapData.smul_φK","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝³ : Semiring R\ninst✝² : CategoryTheory.Category.{u_3, u_2} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Linear R C\nS₁ S₂ : CategoryTheory.ShortComplex C\nφ : Quiver.Hom S₁ S₂\nh₁ : S₁.LeftHomologyData\nh₂ : S₂.LeftHomologyData\nγ : CategoryTheory.ShortComplex.LeftHomologyMapData φ h₁ h₂\na : R\n⊢ Eq (γ.smul a).φK (HSMul.hSMul a γ.φK)","decl":"/-- Given a left homology map data for morphism `φ`, this is the induced left homology\nmap data for `a • φ`. -/\n@[simps]\ndef smul (a : R) : LeftHomologyMapData (a • φ) h₁ h₂ where\n  φK := a • γ.φK\n  φH := a • γ.φH\n\n"}
{"name":"CategoryTheory.ShortComplex.LeftHomologyMapData.smul_φH","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝³ : Semiring R\ninst✝² : CategoryTheory.Category.{u_3, u_2} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Linear R C\nS₁ S₂ : CategoryTheory.ShortComplex C\nφ : Quiver.Hom S₁ S₂\nh₁ : S₁.LeftHomologyData\nh₂ : S₂.LeftHomologyData\nγ : CategoryTheory.ShortComplex.LeftHomologyMapData φ h₁ h₂\na : R\n⊢ Eq (γ.smul a).φH (HSMul.hSMul a γ.φH)","decl":"/-- Given a left homology map data for morphism `φ`, this is the induced left homology\nmap data for `a • φ`. -/\n@[simps]\ndef smul (a : R) : LeftHomologyMapData (a • φ) h₁ h₂ where\n  φK := a • γ.φK\n  φH := a • γ.φH\n\n"}
{"name":"CategoryTheory.ShortComplex.leftHomologyMap'_smul","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝³ : Semiring R\ninst✝² : CategoryTheory.Category.{u_3, u_2} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Linear R C\nS₁ S₂ : CategoryTheory.ShortComplex C\nφ : Quiver.Hom S₁ S₂\nh₁ : S₁.LeftHomologyData\nh₂ : S₂.LeftHomologyData\na : R\n⊢ Eq (CategoryTheory.ShortComplex.leftHomologyMap' (HSMul.hSMul a φ) h₁ h₂) (HSMul.hSMul a (CategoryTheory.ShortComplex.leftHomologyMap' φ h₁ h₂))","decl":"@[simp]\nlemma leftHomologyMap'_smul :\n    leftHomologyMap' (a • φ) h₁ h₂ = a • leftHomologyMap' φ h₁ h₂ := by\n  have γ : LeftHomologyMapData φ h₁ h₂ := default\n  simp only [(γ.smul a).leftHomologyMap'_eq, LeftHomologyMapData.smul_φH, γ.leftHomologyMap'_eq]\n\n"}
{"name":"CategoryTheory.ShortComplex.cyclesMap'_smul","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝³ : Semiring R\ninst✝² : CategoryTheory.Category.{u_3, u_2} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Linear R C\nS₁ S₂ : CategoryTheory.ShortComplex C\nφ : Quiver.Hom S₁ S₂\nh₁ : S₁.LeftHomologyData\nh₂ : S₂.LeftHomologyData\na : R\n⊢ Eq (CategoryTheory.ShortComplex.cyclesMap' (HSMul.hSMul a φ) h₁ h₂) (HSMul.hSMul a (CategoryTheory.ShortComplex.cyclesMap' φ h₁ h₂))","decl":"@[simp]\nlemma cyclesMap'_smul :\n    cyclesMap' (a • φ) h₁ h₂ = a • cyclesMap' φ h₁ h₂ := by\n  have γ : LeftHomologyMapData φ h₁ h₂ := default\n  simp only [(γ.smul a).cyclesMap'_eq, LeftHomologyMapData.smul_φK, γ.cyclesMap'_eq]\n\n"}
{"name":"CategoryTheory.ShortComplex.leftHomologyMap_smul","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝⁵ : Semiring R\ninst✝⁴ : CategoryTheory.Category.{u_3, u_2} C\ninst✝³ : CategoryTheory.Preadditive C\ninst✝² : CategoryTheory.Linear R C\nS₁ S₂ : CategoryTheory.ShortComplex C\nφ : Quiver.Hom S₁ S₂\na : R\ninst✝¹ : S₁.HasLeftHomology\ninst✝ : S₂.HasLeftHomology\n⊢ Eq (CategoryTheory.ShortComplex.leftHomologyMap (HSMul.hSMul a φ)) (HSMul.hSMul a (CategoryTheory.ShortComplex.leftHomologyMap φ))","decl":"@[simp]\nlemma leftHomologyMap_smul : leftHomologyMap (a • φ) = a • leftHomologyMap φ :=\n  leftHomologyMap'_smul _ _ _ _\n\n"}
{"name":"CategoryTheory.ShortComplex.cyclesMap_smul","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝⁵ : Semiring R\ninst✝⁴ : CategoryTheory.Category.{u_3, u_2} C\ninst✝³ : CategoryTheory.Preadditive C\ninst✝² : CategoryTheory.Linear R C\nS₁ S₂ : CategoryTheory.ShortComplex C\nφ : Quiver.Hom S₁ S₂\na : R\ninst✝¹ : S₁.HasLeftHomology\ninst✝ : S₂.HasLeftHomology\n⊢ Eq (CategoryTheory.ShortComplex.cyclesMap (HSMul.hSMul a φ)) (HSMul.hSMul a (CategoryTheory.ShortComplex.cyclesMap φ))","decl":"@[simp]\nlemma cyclesMap_smul : cyclesMap (a • φ) = a • cyclesMap φ :=\n  cyclesMap'_smul _ _ _ _\n\n"}
{"name":"CategoryTheory.ShortComplex.leftHomologyFunctor_linear","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝⁵ : Semiring R\ninst✝⁴ : CategoryTheory.Category.{u_3, u_2} C\ninst✝³ : CategoryTheory.Preadditive C\ninst✝² : CategoryTheory.Linear R C\ninst✝¹ : CategoryTheory.Limits.HasKernels C\ninst✝ : CategoryTheory.Limits.HasCokernels C\n⊢ CategoryTheory.Functor.Linear R (CategoryTheory.ShortComplex.leftHomologyFunctor C)","decl":"instance leftHomologyFunctor_linear [HasKernels C] [HasCokernels C] :\n    Functor.Linear R (leftHomologyFunctor C) where\n\n"}
{"name":"CategoryTheory.ShortComplex.cyclesFunctor_linear","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝⁵ : Semiring R\ninst✝⁴ : CategoryTheory.Category.{u_3, u_2} C\ninst✝³ : CategoryTheory.Preadditive C\ninst✝² : CategoryTheory.Linear R C\ninst✝¹ : CategoryTheory.Limits.HasKernels C\ninst✝ : CategoryTheory.Limits.HasCokernels C\n⊢ CategoryTheory.Functor.Linear R (CategoryTheory.ShortComplex.cyclesFunctor C)","decl":"instance cyclesFunctor_linear [HasKernels C] [HasCokernels C] :\n    Functor.Linear R (cyclesFunctor C) where\n\n"}
{"name":"CategoryTheory.ShortComplex.RightHomologyMapData.smul_φH","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝³ : Semiring R\ninst✝² : CategoryTheory.Category.{u_3, u_2} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Linear R C\nS₁ S₂ : CategoryTheory.ShortComplex C\nφ : Quiver.Hom S₁ S₂\nh₁ : S₁.RightHomologyData\nh₂ : S₂.RightHomologyData\nγ : CategoryTheory.ShortComplex.RightHomologyMapData φ h₁ h₂\na : R\n⊢ Eq (γ.smul a).φH (HSMul.hSMul a γ.φH)","decl":"/-- Given a right homology map data for morphism `φ`, this is the induced right homology\nmap data for `a • φ`. -/\n@[simps]\ndef smul (a : R) : RightHomologyMapData (a • φ) h₁ h₂ where\n  φQ := a • γ.φQ\n  φH := a • γ.φH\n\n"}
{"name":"CategoryTheory.ShortComplex.RightHomologyMapData.smul_φQ","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝³ : Semiring R\ninst✝² : CategoryTheory.Category.{u_3, u_2} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Linear R C\nS₁ S₂ : CategoryTheory.ShortComplex C\nφ : Quiver.Hom S₁ S₂\nh₁ : S₁.RightHomologyData\nh₂ : S₂.RightHomologyData\nγ : CategoryTheory.ShortComplex.RightHomologyMapData φ h₁ h₂\na : R\n⊢ Eq (γ.smul a).φQ (HSMul.hSMul a γ.φQ)","decl":"/-- Given a right homology map data for morphism `φ`, this is the induced right homology\nmap data for `a • φ`. -/\n@[simps]\ndef smul (a : R) : RightHomologyMapData (a • φ) h₁ h₂ where\n  φQ := a • γ.φQ\n  φH := a • γ.φH\n\n"}
{"name":"CategoryTheory.ShortComplex.rightHomologyMap'_smul","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝³ : Semiring R\ninst✝² : CategoryTheory.Category.{u_3, u_2} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Linear R C\nS₁ S₂ : CategoryTheory.ShortComplex C\nφ : Quiver.Hom S₁ S₂\nh₁ : S₁.RightHomologyData\nh₂ : S₂.RightHomologyData\na : R\n⊢ Eq (CategoryTheory.ShortComplex.rightHomologyMap' (HSMul.hSMul a φ) h₁ h₂) (HSMul.hSMul a (CategoryTheory.ShortComplex.rightHomologyMap' φ h₁ h₂))","decl":"@[simp]\nlemma rightHomologyMap'_smul :\n    rightHomologyMap' (a • φ) h₁ h₂ = a • rightHomologyMap' φ h₁ h₂ := by\n  have γ : RightHomologyMapData φ h₁ h₂ := default\n  simp only [(γ.smul a).rightHomologyMap'_eq, RightHomologyMapData.smul_φH, γ.rightHomologyMap'_eq]\n\n"}
{"name":"CategoryTheory.ShortComplex.opcyclesMap'_smul","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝³ : Semiring R\ninst✝² : CategoryTheory.Category.{u_3, u_2} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Linear R C\nS₁ S₂ : CategoryTheory.ShortComplex C\nφ : Quiver.Hom S₁ S₂\nh₁ : S₁.RightHomologyData\nh₂ : S₂.RightHomologyData\na : R\n⊢ Eq (CategoryTheory.ShortComplex.opcyclesMap' (HSMul.hSMul a φ) h₁ h₂) (HSMul.hSMul a (CategoryTheory.ShortComplex.opcyclesMap' φ h₁ h₂))","decl":"@[simp]\nlemma opcyclesMap'_smul :\n    opcyclesMap' (a • φ) h₁ h₂ = a • opcyclesMap' φ h₁ h₂ := by\n  have γ : RightHomologyMapData φ h₁ h₂ := default\n  simp only [(γ.smul a).opcyclesMap'_eq, RightHomologyMapData.smul_φQ, γ.opcyclesMap'_eq]\n\n"}
{"name":"CategoryTheory.ShortComplex.rightHomologyMap_smul","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝⁵ : Semiring R\ninst✝⁴ : CategoryTheory.Category.{u_3, u_2} C\ninst✝³ : CategoryTheory.Preadditive C\ninst✝² : CategoryTheory.Linear R C\nS₁ S₂ : CategoryTheory.ShortComplex C\nφ : Quiver.Hom S₁ S₂\na : R\ninst✝¹ : S₁.HasRightHomology\ninst✝ : S₂.HasRightHomology\n⊢ Eq (CategoryTheory.ShortComplex.rightHomologyMap (HSMul.hSMul a φ)) (HSMul.hSMul a (CategoryTheory.ShortComplex.rightHomologyMap φ))","decl":"@[simp]\nlemma rightHomologyMap_smul : rightHomologyMap (a • φ) = a • rightHomologyMap φ :=\n  rightHomologyMap'_smul _ _ _ _\n\n"}
{"name":"CategoryTheory.ShortComplex.opcyclesMap_smul","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝⁵ : Semiring R\ninst✝⁴ : CategoryTheory.Category.{u_3, u_2} C\ninst✝³ : CategoryTheory.Preadditive C\ninst✝² : CategoryTheory.Linear R C\nS₁ S₂ : CategoryTheory.ShortComplex C\nφ : Quiver.Hom S₁ S₂\na : R\ninst✝¹ : S₁.HasRightHomology\ninst✝ : S₂.HasRightHomology\n⊢ Eq (CategoryTheory.ShortComplex.opcyclesMap (HSMul.hSMul a φ)) (HSMul.hSMul a (CategoryTheory.ShortComplex.opcyclesMap φ))","decl":"@[simp]\nlemma opcyclesMap_smul : opcyclesMap (a • φ) = a • opcyclesMap φ :=\n  opcyclesMap'_smul _ _ _ _\n\n"}
{"name":"CategoryTheory.ShortComplex.rightHomologyFunctor_linear","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝⁵ : Semiring R\ninst✝⁴ : CategoryTheory.Category.{u_3, u_2} C\ninst✝³ : CategoryTheory.Preadditive C\ninst✝² : CategoryTheory.Linear R C\ninst✝¹ : CategoryTheory.Limits.HasKernels C\ninst✝ : CategoryTheory.Limits.HasCokernels C\n⊢ CategoryTheory.Functor.Linear R (CategoryTheory.ShortComplex.rightHomologyFunctor C)","decl":"instance rightHomologyFunctor_linear [HasKernels C] [HasCokernels C] :\n    Functor.Linear R (rightHomologyFunctor C) where\n\n"}
{"name":"CategoryTheory.ShortComplex.opcyclesFunctor_linear","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝⁵ : Semiring R\ninst✝⁴ : CategoryTheory.Category.{u_3, u_2} C\ninst✝³ : CategoryTheory.Preadditive C\ninst✝² : CategoryTheory.Linear R C\ninst✝¹ : CategoryTheory.Limits.HasKernels C\ninst✝ : CategoryTheory.Limits.HasCokernels C\n⊢ CategoryTheory.Functor.Linear R (CategoryTheory.ShortComplex.opcyclesFunctor C)","decl":"instance opcyclesFunctor_linear [HasKernels C] [HasCokernels C] :\n    Functor.Linear R (opcyclesFunctor C) where\n\n"}
{"name":"CategoryTheory.ShortComplex.HomologyMapData.smul_right","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝³ : Semiring R\ninst✝² : CategoryTheory.Category.{u_3, u_2} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Linear R C\nS₁ S₂ : CategoryTheory.ShortComplex C\nφ : Quiver.Hom S₁ S₂\nh₁ : S₁.HomologyData\nh₂ : S₂.HomologyData\nγ : CategoryTheory.ShortComplex.HomologyMapData φ h₁ h₂\na : R\n⊢ Eq (γ.smul a).right (γ.right.smul a)","decl":"/-- Given a homology map data for a morphism `φ`, this is the induced homology\nmap data for `a • φ`. -/\n@[simps]\ndef smul (a : R) : HomologyMapData (a • φ) h₁ h₂ where\n  left := γ.left.smul a\n  right := γ.right.smul a\n\n"}
{"name":"CategoryTheory.ShortComplex.HomologyMapData.smul_left","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝³ : Semiring R\ninst✝² : CategoryTheory.Category.{u_3, u_2} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Linear R C\nS₁ S₂ : CategoryTheory.ShortComplex C\nφ : Quiver.Hom S₁ S₂\nh₁ : S₁.HomologyData\nh₂ : S₂.HomologyData\nγ : CategoryTheory.ShortComplex.HomologyMapData φ h₁ h₂\na : R\n⊢ Eq (γ.smul a).left (γ.left.smul a)","decl":"/-- Given a homology map data for a morphism `φ`, this is the induced homology\nmap data for `a • φ`. -/\n@[simps]\ndef smul (a : R) : HomologyMapData (a • φ) h₁ h₂ where\n  left := γ.left.smul a\n  right := γ.right.smul a\n\n"}
{"name":"CategoryTheory.ShortComplex.homologyMap'_smul","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝³ : Semiring R\ninst✝² : CategoryTheory.Category.{u_3, u_2} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Linear R C\nS₁ S₂ : CategoryTheory.ShortComplex C\nφ : Quiver.Hom S₁ S₂\nh₁ : S₁.HomologyData\nh₂ : S₂.HomologyData\na : R\n⊢ Eq (CategoryTheory.ShortComplex.homologyMap' (HSMul.hSMul a φ) h₁ h₂) (HSMul.hSMul a (CategoryTheory.ShortComplex.homologyMap' φ h₁ h₂))","decl":"@[simp]\nlemma homologyMap'_smul :\n    homologyMap' (a • φ) h₁ h₂ = a • homologyMap' φ h₁ h₂ :=\n  leftHomologyMap'_smul _ _ _ _\n\n"}
{"name":"CategoryTheory.ShortComplex.homologyMap_smul","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝⁵ : Semiring R\ninst✝⁴ : CategoryTheory.Category.{u_3, u_2} C\ninst✝³ : CategoryTheory.Preadditive C\ninst✝² : CategoryTheory.Linear R C\nS₁ S₂ : CategoryTheory.ShortComplex C\nφ : Quiver.Hom S₁ S₂\na : R\ninst✝¹ : S₁.HasHomology\ninst✝ : S₂.HasHomology\n⊢ Eq (CategoryTheory.ShortComplex.homologyMap (HSMul.hSMul a φ)) (HSMul.hSMul a (CategoryTheory.ShortComplex.homologyMap φ))","decl":"@[simp]\nlemma homologyMap_smul [S₁.HasHomology] [S₂.HasHomology] :\n    homologyMap (a • φ) = a • homologyMap φ :=\n  homologyMap'_smul _ _ _\n\n"}
{"name":"CategoryTheory.ShortComplex.homologyFunctor_linear","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝⁴ : Semiring R\ninst✝³ : CategoryTheory.Category.{u_3, u_2} C\ninst✝² : CategoryTheory.Preadditive C\ninst✝¹ : CategoryTheory.Linear R C\ninst✝ : CategoryTheory.CategoryWithHomology C\n⊢ CategoryTheory.Functor.Linear R (CategoryTheory.ShortComplex.homologyFunctor C)","decl":"instance homologyFunctor_linear [CategoryWithHomology C] :\n    Functor.Linear R (homologyFunctor C) where\n\n"}
{"name":"CategoryTheory.ShortComplex.Homotopy.smul_h₂","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝³ : Semiring R\ninst✝² : CategoryTheory.Category.{u_3, u_2} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Linear R C\nS₁ S₂ : CategoryTheory.ShortComplex C\nφ₁ φ₂ : Quiver.Hom S₁ S₂\nh : CategoryTheory.ShortComplex.Homotopy φ₁ φ₂\na : R\n⊢ Eq (h.smul a).h₂ (HSMul.hSMul a h.h₂)","decl":"/-- Homotopy between morphisms of short complexes is compatible with the scalar multiplication. -/\n@[simps]\ndef Homotopy.smul {φ₁ φ₂ : S₁ ⟶ S₂} (h : Homotopy φ₁ φ₂) (a : R) :\n    Homotopy (a • φ₁) (a • φ₂) where\n  h₀ := a • h.h₀\n  h₁ := a • h.h₁\n  h₂ := a • h.h₂\n  h₃ := a • h.h₃\n  comm₁ := by\n    dsimp\n    rw [h.comm₁]\n    simp only [smul_add, Linear.comp_smul]\n  comm₂ := by\n    dsimp\n    rw [h.comm₂]\n    simp only [smul_add, Linear.comp_smul, Linear.smul_comp]\n  comm₃ := by\n    dsimp\n    rw [h.comm₃]\n    simp only [smul_add, Linear.smul_comp]\n\n"}
{"name":"CategoryTheory.ShortComplex.Homotopy.smul_h₁","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝³ : Semiring R\ninst✝² : CategoryTheory.Category.{u_3, u_2} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Linear R C\nS₁ S₂ : CategoryTheory.ShortComplex C\nφ₁ φ₂ : Quiver.Hom S₁ S₂\nh : CategoryTheory.ShortComplex.Homotopy φ₁ φ₂\na : R\n⊢ Eq (h.smul a).h₁ (HSMul.hSMul a h.h₁)","decl":"/-- Homotopy between morphisms of short complexes is compatible with the scalar multiplication. -/\n@[simps]\ndef Homotopy.smul {φ₁ φ₂ : S₁ ⟶ S₂} (h : Homotopy φ₁ φ₂) (a : R) :\n    Homotopy (a • φ₁) (a • φ₂) where\n  h₀ := a • h.h₀\n  h₁ := a • h.h₁\n  h₂ := a • h.h₂\n  h₃ := a • h.h₃\n  comm₁ := by\n    dsimp\n    rw [h.comm₁]\n    simp only [smul_add, Linear.comp_smul]\n  comm₂ := by\n    dsimp\n    rw [h.comm₂]\n    simp only [smul_add, Linear.comp_smul, Linear.smul_comp]\n  comm₃ := by\n    dsimp\n    rw [h.comm₃]\n    simp only [smul_add, Linear.smul_comp]\n\n"}
{"name":"CategoryTheory.ShortComplex.Homotopy.smul_h₃","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝³ : Semiring R\ninst✝² : CategoryTheory.Category.{u_3, u_2} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Linear R C\nS₁ S₂ : CategoryTheory.ShortComplex C\nφ₁ φ₂ : Quiver.Hom S₁ S₂\nh : CategoryTheory.ShortComplex.Homotopy φ₁ φ₂\na : R\n⊢ Eq (h.smul a).h₃ (HSMul.hSMul a h.h₃)","decl":"/-- Homotopy between morphisms of short complexes is compatible with the scalar multiplication. -/\n@[simps]\ndef Homotopy.smul {φ₁ φ₂ : S₁ ⟶ S₂} (h : Homotopy φ₁ φ₂) (a : R) :\n    Homotopy (a • φ₁) (a • φ₂) where\n  h₀ := a • h.h₀\n  h₁ := a • h.h₁\n  h₂ := a • h.h₂\n  h₃ := a • h.h₃\n  comm₁ := by\n    dsimp\n    rw [h.comm₁]\n    simp only [smul_add, Linear.comp_smul]\n  comm₂ := by\n    dsimp\n    rw [h.comm₂]\n    simp only [smul_add, Linear.comp_smul, Linear.smul_comp]\n  comm₃ := by\n    dsimp\n    rw [h.comm₃]\n    simp only [smul_add, Linear.smul_comp]\n\n"}
{"name":"CategoryTheory.ShortComplex.Homotopy.smul_h₀","module":"Mathlib.Algebra.Homology.ShortComplex.Linear","initialProofState":"R : Type u_1\nC : Type u_2\ninst✝³ : Semiring R\ninst✝² : CategoryTheory.Category.{u_3, u_2} C\ninst✝¹ : CategoryTheory.Preadditive C\ninst✝ : CategoryTheory.Linear R C\nS₁ S₂ : CategoryTheory.ShortComplex C\nφ₁ φ₂ : Quiver.Hom S₁ S₂\nh : CategoryTheory.ShortComplex.Homotopy φ₁ φ₂\na : R\n⊢ Eq (h.smul a).h₀ (HSMul.hSMul a h.h₀)","decl":"/-- Homotopy between morphisms of short complexes is compatible with the scalar multiplication. -/\n@[simps]\ndef Homotopy.smul {φ₁ φ₂ : S₁ ⟶ S₂} (h : Homotopy φ₁ φ₂) (a : R) :\n    Homotopy (a • φ₁) (a • φ₂) where\n  h₀ := a • h.h₀\n  h₁ := a • h.h₁\n  h₂ := a • h.h₂\n  h₃ := a • h.h₃\n  comm₁ := by\n    dsimp\n    rw [h.comm₁]\n    simp only [smul_add, Linear.comp_smul]\n  comm₂ := by\n    dsimp\n    rw [h.comm₂]\n    simp only [smul_add, Linear.comp_smul, Linear.smul_comp]\n  comm₃ := by\n    dsimp\n    rw [h.comm₃]\n    simp only [smul_add, Linear.smul_comp]\n\n"}
