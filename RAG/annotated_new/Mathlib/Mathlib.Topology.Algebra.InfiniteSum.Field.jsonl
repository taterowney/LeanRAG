{"name":"HasProd.norm","module":"Mathlib.Topology.Algebra.InfiniteSum.Field","initialProofState":"α : Type u_1\nE : Type u_2\ninst✝ : NormedField E\nf : α → E\nx : E\nhfx : HasProd f x\n⊢ HasProd (fun x => Norm.norm (f x)) (Norm.norm x)","decl":"nonrec theorem HasProd.norm (hfx : HasProd f x) : HasProd (‖f ·‖) ‖x‖ := by\n  simp only [HasProd, ← norm_prod]\n  exact hfx.norm\n\n"}
{"name":"Multipliable.norm","module":"Mathlib.Topology.Algebra.InfiniteSum.Field","initialProofState":"α : Type u_1\nE : Type u_2\ninst✝ : NormedField E\nf : α → E\nhf : Multipliable f\n⊢ Multipliable fun x => Norm.norm (f x)","decl":"theorem Multipliable.norm (hf : Multipliable f) : Multipliable (‖f ·‖) :=\n  let ⟨x, hx⟩ := hf; ⟨‖x‖, hx.norm⟩\n\n"}
{"name":"norm_tprod","module":"Mathlib.Topology.Algebra.InfiniteSum.Field","initialProofState":"α : Type u_1\nE : Type u_2\ninst✝ : NormedField E\nf : α → E\nhf : Multipliable f\n⊢ Eq (Norm.norm (tprod fun i => f i)) (tprod fun i => Norm.norm (f i))","decl":"theorem norm_tprod (hf : Multipliable f) : ‖∏' i, f i‖ = ∏' i, ‖f i‖ :=\n  hf.hasProd.norm.tprod_eq.symm\n\n"}
