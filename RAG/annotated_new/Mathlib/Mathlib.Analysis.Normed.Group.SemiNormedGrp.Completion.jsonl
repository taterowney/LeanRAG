{"name":"SemiNormedGrp.completion_obj","module":"Mathlib.Analysis.Normed.Group.SemiNormedGrp.Completion","initialProofState":"V : SemiNormedGrp\n⊢ Eq (SemiNormedGrp.completion.obj V) (SemiNormedGrp.of (UniformSpace.Completion ↑V))","decl":"/-- The completion of a seminormed group, as an endofunctor on `SemiNormedGrp`. -/\n@[simps]\ndef completion : SemiNormedGrp.{u} ⥤ SemiNormedGrp.{u} where\n  obj V := SemiNormedGrp.of (Completion V)\n  map f := f.completion\n  map_id _ := completion_id\n  map_comp f g := (completion_comp f g).symm\n\n"}
{"name":"SemiNormedGrp.completion_map","module":"Mathlib.Analysis.Normed.Group.SemiNormedGrp.Completion","initialProofState":"X✝ Y✝ : SemiNormedGrp\nf : Quiver.Hom X✝ Y✝\n⊢ Eq (SemiNormedGrp.completion.map f) (NormedAddGroupHom.completion f)","decl":"/-- The completion of a seminormed group, as an endofunctor on `SemiNormedGrp`. -/\n@[simps]\ndef completion : SemiNormedGrp.{u} ⥤ SemiNormedGrp.{u} where\n  obj V := SemiNormedGrp.of (Completion V)\n  map f := f.completion\n  map_id _ := completion_id\n  map_comp f g := (completion_comp f g).symm\n\n"}
{"name":"SemiNormedGrp.completion_completeSpace","module":"Mathlib.Analysis.Normed.Group.SemiNormedGrp.Completion","initialProofState":"V : SemiNormedGrp\n⊢ CompleteSpace ↑(SemiNormedGrp.completion.obj V)","decl":"instance completion_completeSpace {V : SemiNormedGrp} : CompleteSpace (completion.obj V) :=\n  Completion.completeSpace _\n\n"}
{"name":"SemiNormedGrp.completion.norm_incl_eq","module":"Mathlib.Analysis.Normed.Group.SemiNormedGrp.Completion","initialProofState":"V : SemiNormedGrp\nv : ↑V\n⊢ Eq (Norm.norm (SemiNormedGrp.completion.incl v)) (Norm.norm v)","decl":"theorem completion.norm_incl_eq {V : SemiNormedGrp} {v : V} : ‖completion.incl v‖ = ‖v‖ :=\n  UniformSpace.Completion.norm_coe _\n\n"}
{"name":"SemiNormedGrp.completion.map_normNoninc","module":"Mathlib.Analysis.Normed.Group.SemiNormedGrp.Completion","initialProofState":"V W : SemiNormedGrp\nf : Quiver.Hom V W\nhf : NormedAddGroupHom.NormNoninc f\n⊢ NormedAddGroupHom.NormNoninc (SemiNormedGrp.completion.map f)","decl":"theorem completion.map_normNoninc {V W : SemiNormedGrp} {f : V ⟶ W} (hf : f.NormNoninc) :\n    (completion.map f).NormNoninc :=\n  NormedAddGroupHom.NormNoninc.normNoninc_iff_norm_le_one.2 <|\n    (NormedAddGroupHom.norm_completion f).le.trans <|\n      NormedAddGroupHom.NormNoninc.normNoninc_iff_norm_le_one.1 hf\n\n"}
{"name":"SemiNormedGrp.completion.map_zero","module":"Mathlib.Analysis.Normed.Group.SemiNormedGrp.Completion","initialProofState":"V W : SemiNormedGrp\n⊢ Eq (SemiNormedGrp.completion.map 0) 0","decl":"theorem completion.map_zero (V W : SemiNormedGrp) : completion.map (0 : V ⟶ W) = 0 :=\n  -- Porting note: cannot see instances through concrete cats\n  @AddMonoidHom.map_zero _ _ (_) (_) (completion.mapHom V W)\n\n"}
{"name":"SemiNormedGrp.instAdditiveCompletion","module":"Mathlib.Analysis.Normed.Group.SemiNormedGrp.Completion","initialProofState":"⊢ SemiNormedGrp.completion.Additive","decl":"instance : Functor.Additive completion where\n  map_add := NormedAddGroupHom.completion_add _ _\n\n"}
{"name":"SemiNormedGrp.completion.lift_comp_incl","module":"Mathlib.Analysis.Normed.Group.SemiNormedGrp.Completion","initialProofState":"V W : SemiNormedGrp\ninst✝¹ : CompleteSpace ↑W\ninst✝ : T0Space ↑W\nf : Quiver.Hom V W\n⊢ Eq (CategoryTheory.CategoryStruct.comp SemiNormedGrp.completion.incl (SemiNormedGrp.completion.lift f)) f","decl":"theorem completion.lift_comp_incl {V W : SemiNormedGrp} [CompleteSpace W] [T0Space W]\n    (f : V ⟶ W) : completion.incl ≫ completion.lift f = f :=\n  ext <| NormedAddGroupHom.extension_coe _\n\n"}
{"name":"SemiNormedGrp.completion.lift_unique","module":"Mathlib.Analysis.Normed.Group.SemiNormedGrp.Completion","initialProofState":"V W : SemiNormedGrp\ninst✝¹ : CompleteSpace ↑W\ninst✝ : T0Space ↑W\nf : Quiver.Hom V W\ng : Quiver.Hom (SemiNormedGrp.completion.obj V) W\na✝ : Eq (CategoryTheory.CategoryStruct.comp SemiNormedGrp.completion.incl g) f\n⊢ Eq g (SemiNormedGrp.completion.lift f)","decl":"theorem completion.lift_unique {V W : SemiNormedGrp} [CompleteSpace W] [T0Space W]\n    (f : V ⟶ W) (g : completion.obj V ⟶ W) : completion.incl ≫ g = f → g = completion.lift f :=\n  fun h => (NormedAddGroupHom.extension_unique _ fun v =>\n    ((NormedAddGroupHom.ext_iff.1 h) v).symm).symm\n\n"}
