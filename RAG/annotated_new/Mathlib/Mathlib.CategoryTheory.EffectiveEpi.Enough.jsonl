{"name":"CategoryTheory.Functor.EffectivePresentation.mk.sizeOf_spec","module":"Mathlib.CategoryTheory.EffectiveEpi.Enough","initialProofState":"C : Type u_1\nD : Type u_2\ninst✝³ : CategoryTheory.Category.{u_3, u_1} C\ninst✝² : CategoryTheory.Category.{u_4, u_2} D\nF : CategoryTheory.Functor C D\nX : D\ninst✝¹ : SizeOf C\ninst✝ : SizeOf D\np : C\nf : Quiver.Hom (F.obj p) X\neffectiveEpi : CategoryTheory.EffectiveEpi f\n⊢ Eq (SizeOf.sizeOf { p := p, f := f, effectiveEpi := effectiveEpi }) (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd 1 (SizeOf.sizeOf p)) (SizeOf.sizeOf f)) (SizeOf.sizeOf effectiveEpi))","decl":"/--\nAn effective presentation of an object `X` with respect to a functor `F` is the data of an effective\nepimorphism of the form `F.obj p ⟶ X`.\n-/\nstructure EffectivePresentation (X : D) where\n  /-- The object of `C` giving the source of the effective epi -/\n  p : C\n  /-- The morphism `F.obj p ⟶ X` -/\n  f : F.obj p ⟶ X\n  /-- `f` is an effective epi -/\n  effectiveEpi : EffectiveEpi f\n\n"}
{"name":"CategoryTheory.Functor.EffectivePresentation.effectiveEpi","module":"Mathlib.CategoryTheory.EffectiveEpi.Enough","initialProofState":"C : Type u_1\nD : Type u_2\ninst✝¹ : CategoryTheory.Category.{u_3, u_1} C\ninst✝ : CategoryTheory.Category.{u_4, u_2} D\nF : CategoryTheory.Functor C D\nX : D\nself : F.EffectivePresentation X\n⊢ CategoryTheory.EffectiveEpi self.f","decl":"/--\nAn effective presentation of an object `X` with respect to a functor `F` is the data of an effective\nepimorphism of the form `F.obj p ⟶ X`.\n-/\nstructure EffectivePresentation (X : D) where\n  /-- The object of `C` giving the source of the effective epi -/\n  p : C\n  /-- The morphism `F.obj p ⟶ X` -/\n  f : F.obj p ⟶ X\n  /-- `f` is an effective epi -/\n  effectiveEpi : EffectiveEpi f\n\n"}
{"name":"CategoryTheory.Functor.EffectivePresentation.mk.injEq","module":"Mathlib.CategoryTheory.EffectiveEpi.Enough","initialProofState":"C : Type u_1\nD : Type u_2\ninst✝¹ : CategoryTheory.Category.{u_3, u_1} C\ninst✝ : CategoryTheory.Category.{u_4, u_2} D\nF : CategoryTheory.Functor C D\nX : D\np✝ : C\nf✝ : Quiver.Hom (F.obj p✝) X\neffectiveEpi✝ : CategoryTheory.EffectiveEpi f✝\np : C\nf : Quiver.Hom (F.obj p) X\neffectiveEpi : CategoryTheory.EffectiveEpi f\n⊢ Eq (Eq { p := p✝, f := f✝, effectiveEpi := effectiveEpi✝ } { p := p, f := f, effectiveEpi := effectiveEpi }) (And (Eq p✝ p) (HEq f✝ f))","decl":"/--\nAn effective presentation of an object `X` with respect to a functor `F` is the data of an effective\nepimorphism of the form `F.obj p ⟶ X`.\n-/\nstructure EffectivePresentation (X : D) where\n  /-- The object of `C` giving the source of the effective epi -/\n  p : C\n  /-- The morphism `F.obj p ⟶ X` -/\n  f : F.obj p ⟶ X\n  /-- `f` is an effective epi -/\n  effectiveEpi : EffectiveEpi f\n\n"}
{"name":"CategoryTheory.Functor.EffectivePresentation.mk.inj","module":"Mathlib.CategoryTheory.EffectiveEpi.Enough","initialProofState":"C : Type u_1\nD : Type u_2\ninst✝¹ : CategoryTheory.Category.{u_3, u_1} C\ninst✝ : CategoryTheory.Category.{u_4, u_2} D\nF : CategoryTheory.Functor C D\nX : D\np✝ : C\nf✝ : Quiver.Hom (F.obj p✝) X\neffectiveEpi✝ : CategoryTheory.EffectiveEpi f✝\np : C\nf : Quiver.Hom (F.obj p) X\neffectiveEpi : CategoryTheory.EffectiveEpi f\nx✝ : Eq { p := p✝, f := f✝, effectiveEpi := effectiveEpi✝ } { p := p, f := f, effectiveEpi := effectiveEpi }\n⊢ And (Eq p✝ p) (HEq f✝ f)","decl":"/--\nAn effective presentation of an object `X` with respect to a functor `F` is the data of an effective\nepimorphism of the form `F.obj p ⟶ X`.\n-/\nstructure EffectivePresentation (X : D) where\n  /-- The object of `C` giving the source of the effective epi -/\n  p : C\n  /-- The morphism `F.obj p ⟶ X` -/\n  f : F.obj p ⟶ X\n  /-- `f` is an effective epi -/\n  effectiveEpi : EffectiveEpi f\n\n"}
{"name":"CategoryTheory.Functor.EffectivelyEnough.presentation","module":"Mathlib.CategoryTheory.EffectiveEpi.Enough","initialProofState":"C : Type u_1\nD : Type u_2\ninst✝¹ : CategoryTheory.Category.{u_3, u_1} C\ninst✝ : CategoryTheory.Category.{u_4, u_2} D\nF : CategoryTheory.Functor C D\nself : F.EffectivelyEnough\nX : D\n⊢ Nonempty (F.EffectivePresentation X)","decl":"/--\n`D` has *effectively enough objects with respect to the functor `F` if every object has an\neffective presentation.\n-/\nclass EffectivelyEnough : Prop where\n  /-- For every `X : D`, there exists an object `p` of `C` with an effective epi `F.obj p ⟶ X`. -/\n  presentation : ∀ (X : D), Nonempty (F.EffectivePresentation X)\n\n"}
{"name":"CategoryTheory.Functor.instEffectiveEpiEffectiveEpiOver","module":"Mathlib.CategoryTheory.EffectiveEpi.Enough","initialProofState":"C : Type u_1\nD : Type u_2\ninst✝² : CategoryTheory.Category.{u_4, u_1} C\ninst✝¹ : CategoryTheory.Category.{u_3, u_2} D\nF : CategoryTheory.Functor C D\ninst✝ : F.EffectivelyEnough\nX : D\n⊢ CategoryTheory.EffectiveEpi (F.effectiveEpiOver X)","decl":"instance (X : D) : EffectiveEpi (F.effectiveEpiOver X) :=\n  (EffectivelyEnough.presentation X).some.effectiveEpi\n\n"}
{"name":"CategoryTheory.Functor.instEffectivelyEnoughOfIsEquivalence","module":"Mathlib.CategoryTheory.EffectiveEpi.Enough","initialProofState":"C : Type u_1\nD : Type u_2\ninst✝² : CategoryTheory.Category.{u_3, u_1} C\ninst✝¹ : CategoryTheory.Category.{u_4, u_2} D\nF : CategoryTheory.Functor C D\ninst✝ : F.IsEquivalence\n⊢ F.EffectivelyEnough","decl":"instance [IsEquivalence F] : EffectivelyEnough F where\n  presentation X := ⟨equivalenceEffectivePresentation F.asEquivalence X⟩\n\n"}
