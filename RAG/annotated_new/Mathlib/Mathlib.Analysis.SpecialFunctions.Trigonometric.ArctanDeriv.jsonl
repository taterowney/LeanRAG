{"name":"Real.hasStrictDerivAt_tan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"x : Real\nh : Ne (Real.cos x) 0\n⊢ HasStrictDerivAt Real.tan (HDiv.hDiv 1 (HPow.hPow (Real.cos x) 2)) x","decl":"theorem hasStrictDerivAt_tan {x : ℝ} (h : cos x ≠ 0) : HasStrictDerivAt tan (1 / cos x ^ 2) x :=\n  mod_cast (Complex.hasStrictDerivAt_tan (by exact mod_cast h)).real_of_complex\n\n"}
{"name":"Real.hasDerivAt_tan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"x : Real\nh : Ne (Real.cos x) 0\n⊢ HasDerivAt Real.tan (HDiv.hDiv 1 (HPow.hPow (Real.cos x) 2)) x","decl":"theorem hasDerivAt_tan {x : ℝ} (h : cos x ≠ 0) : HasDerivAt tan (1 / cos x ^ 2) x :=\n  mod_cast (Complex.hasDerivAt_tan (by exact mod_cast h)).real_of_complex\n\n"}
{"name":"Real.tendsto_abs_tan_of_cos_eq_zero","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"x : Real\nhx : Eq (Real.cos x) 0\n⊢ Filter.Tendsto (fun x => abs (Real.tan x)) (nhdsWithin x (HasCompl.compl (Singleton.singleton x))) Filter.atTop","decl":"theorem tendsto_abs_tan_of_cos_eq_zero {x : ℝ} (hx : cos x = 0) :\n    Tendsto (fun x => abs (tan x)) (𝓝[≠] x) atTop := by\n  have hx : Complex.cos x = 0 := mod_cast hx\n  simp only [← Complex.abs_ofReal, Complex.ofReal_tan]\n  refine (Complex.tendsto_abs_tan_of_cos_eq_zero hx).comp ?_\n  refine Tendsto.inf Complex.continuous_ofReal.continuousAt ?_\n  exact tendsto_principal_principal.2 fun y => mt Complex.ofReal_inj.1\n\n"}
{"name":"Real.tendsto_abs_tan_atTop","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"k : Int\n⊢ Filter.Tendsto (fun x => abs (Real.tan x)) (nhdsWithin (HDiv.hDiv (HMul.hMul (HAdd.hAdd (HMul.hMul 2 ↑k) 1) Real.pi) 2) (HasCompl.compl (Singleton.singleton (HDiv.hDiv (HMul.hMul (HAdd.hAdd (HMul.hMul 2 ↑k) 1) Real.pi) 2)))) Filter.atTop","decl":"theorem tendsto_abs_tan_atTop (k : ℤ) :\n    Tendsto (fun x => abs (tan x)) (𝓝[≠] ((2 * k + 1) * π / 2)) atTop :=\n  tendsto_abs_tan_of_cos_eq_zero <| cos_eq_zero_iff.2 ⟨k, rfl⟩\n\n"}
{"name":"Real.continuousAt_tan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"x : Real\n⊢ Iff (ContinuousAt Real.tan x) (Ne (Real.cos x) 0)","decl":"theorem continuousAt_tan {x : ℝ} : ContinuousAt tan x ↔ cos x ≠ 0 := by\n  refine ⟨fun hc h₀ => ?_, fun h => (hasDerivAt_tan h).continuousAt⟩\n  exact not_tendsto_nhds_of_tendsto_atTop (tendsto_abs_tan_of_cos_eq_zero h₀) _\n    (hc.norm.tendsto.mono_left inf_le_left)\n\n"}
{"name":"Real.differentiableAt_tan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"x : Real\n⊢ Iff (DifferentiableAt Real Real.tan x) (Ne (Real.cos x) 0)","decl":"theorem differentiableAt_tan {x : ℝ} : DifferentiableAt ℝ tan x ↔ cos x ≠ 0 :=\n  ⟨fun h => continuousAt_tan.1 h.continuousAt, fun h => (hasDerivAt_tan h).differentiableAt⟩\n\n"}
{"name":"Real.deriv_tan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"x : Real\n⊢ Eq (deriv Real.tan x) (HDiv.hDiv 1 (HPow.hPow (Real.cos x) 2))","decl":"@[simp]\ntheorem deriv_tan (x : ℝ) : deriv tan x = 1 / cos x ^ 2 :=\n  if h : cos x = 0 then by\n    have : ¬DifferentiableAt ℝ tan x := mt differentiableAt_tan.1 (Classical.not_not.2 h)\n    simp [deriv_zero_of_not_differentiableAt this, h, sq]\n  else (hasDerivAt_tan h).deriv\n\n"}
{"name":"Real.contDiffAt_tan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"n : WithTop ENat\nx : Real\n⊢ Iff (ContDiffAt Real n Real.tan x) (Ne (Real.cos x) 0)","decl":"@[simp]\ntheorem contDiffAt_tan {n : WithTop ℕ∞} {x : ℝ} : ContDiffAt ℝ n tan x ↔ cos x ≠ 0 :=\n  ⟨fun h => continuousAt_tan.1 h.continuousAt, fun h =>\n    (Complex.contDiffAt_tan.2 <| mod_cast h).real_of_complex⟩\n\n"}
{"name":"Real.hasDerivAt_tan_of_mem_Ioo","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"x : Real\nh : Membership.mem (Set.Ioo (Neg.neg (HDiv.hDiv Real.pi 2)) (HDiv.hDiv Real.pi 2)) x\n⊢ HasDerivAt Real.tan (HDiv.hDiv 1 (HPow.hPow (Real.cos x) 2)) x","decl":"theorem hasDerivAt_tan_of_mem_Ioo {x : ℝ} (h : x ∈ Ioo (-(π / 2) : ℝ) (π / 2)) :\n    HasDerivAt tan (1 / cos x ^ 2) x :=\n  hasDerivAt_tan (cos_pos_of_mem_Ioo h).ne'\n\n"}
{"name":"Real.differentiableAt_tan_of_mem_Ioo","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"x : Real\nh : Membership.mem (Set.Ioo (Neg.neg (HDiv.hDiv Real.pi 2)) (HDiv.hDiv Real.pi 2)) x\n⊢ DifferentiableAt Real Real.tan x","decl":"theorem differentiableAt_tan_of_mem_Ioo {x : ℝ} (h : x ∈ Ioo (-(π / 2) : ℝ) (π / 2)) :\n    DifferentiableAt ℝ tan x :=\n  (hasDerivAt_tan_of_mem_Ioo h).differentiableAt\n\n"}
{"name":"Real.hasStrictDerivAt_arctan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"x : Real\n⊢ HasStrictDerivAt Real.arctan (HDiv.hDiv 1 (HAdd.hAdd 1 (HPow.hPow x 2))) x","decl":"theorem hasStrictDerivAt_arctan (x : ℝ) : HasStrictDerivAt arctan (1 / (1 + x ^ 2)) x := by\n  have A : cos (arctan x) ≠ 0 := (cos_arctan_pos x).ne'\n  simpa [cos_sq_arctan] using\n    tanPartialHomeomorph.hasStrictDerivAt_symm trivial (by simpa) (hasStrictDerivAt_tan A)\n\n"}
{"name":"Real.hasDerivAt_arctan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"x : Real\n⊢ HasDerivAt Real.arctan (HDiv.hDiv 1 (HAdd.hAdd 1 (HPow.hPow x 2))) x","decl":"theorem hasDerivAt_arctan (x : ℝ) : HasDerivAt arctan (1 / (1 + x ^ 2)) x :=\n  (hasStrictDerivAt_arctan x).hasDerivAt\n\n"}
{"name":"Real.hasDerivAt_arctan'","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"x : Real\n⊢ HasDerivAt Real.arctan (Inv.inv (HAdd.hAdd 1 (HPow.hPow x 2))) x","decl":"theorem hasDerivAt_arctan' (x : ℝ) : HasDerivAt arctan (1 + x ^ 2)⁻¹ x :=\n  one_div (1 + x ^ 2) ▸ hasDerivAt_arctan x\n\n"}
{"name":"Real.differentiableAt_arctan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"x : Real\n⊢ DifferentiableAt Real Real.arctan x","decl":"theorem differentiableAt_arctan (x : ℝ) : DifferentiableAt ℝ arctan x :=\n  (hasDerivAt_arctan x).differentiableAt\n\n"}
{"name":"Real.differentiable_arctan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"⊢ Differentiable Real Real.arctan","decl":"theorem differentiable_arctan : Differentiable ℝ arctan :=\n  differentiableAt_arctan\n\n"}
{"name":"Real.deriv_arctan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"⊢ Eq (deriv Real.arctan) fun x => HDiv.hDiv 1 (HAdd.hAdd 1 (HPow.hPow x 2))","decl":"@[simp]\ntheorem deriv_arctan : deriv arctan = fun (x : ℝ) => 1 / (1 + x ^ 2) :=\n  funext fun x => (hasDerivAt_arctan x).deriv\n\n"}
{"name":"Real.contDiff_arctan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"n : WithTop ENat\n⊢ ContDiff Real n Real.arctan","decl":"theorem contDiff_arctan {n : WithTop ℕ∞} : ContDiff ℝ n arctan :=\n  contDiff_iff_contDiffAt.2 fun x =>\n    have : cos (arctan x) ≠ 0 := (cos_arctan_pos x).ne'\n    tanPartialHomeomorph.contDiffAt_symm_deriv (by simpa) trivial (hasDerivAt_tan this)\n      (contDiffAt_tan.2 this)\n\n"}
{"name":"HasStrictDerivAt.arctan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"f : Real → Real\nf' x : Real\nhf : HasStrictDerivAt f f' x\n⊢ HasStrictDerivAt (fun x => Real.arctan (f x)) (HMul.hMul (HDiv.hDiv 1 (HAdd.hAdd 1 (HPow.hPow (f x) 2))) f') x","decl":"theorem HasStrictDerivAt.arctan (hf : HasStrictDerivAt f f' x) :\n    HasStrictDerivAt (fun x => arctan (f x)) (1 / (1 + f x ^ 2) * f') x :=\n  (Real.hasStrictDerivAt_arctan (f x)).comp x hf\n\n"}
{"name":"HasDerivAt.arctan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"f : Real → Real\nf' x : Real\nhf : HasDerivAt f f' x\n⊢ HasDerivAt (fun x => Real.arctan (f x)) (HMul.hMul (HDiv.hDiv 1 (HAdd.hAdd 1 (HPow.hPow (f x) 2))) f') x","decl":"theorem HasDerivAt.arctan (hf : HasDerivAt f f' x) :\n    HasDerivAt (fun x => arctan (f x)) (1 / (1 + f x ^ 2) * f') x :=\n  (Real.hasDerivAt_arctan (f x)).comp x hf\n\n"}
{"name":"HasDerivWithinAt.arctan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"f : Real → Real\nf' x : Real\ns : Set Real\nhf : HasDerivWithinAt f f' s x\n⊢ HasDerivWithinAt (fun x => Real.arctan (f x)) (HMul.hMul (HDiv.hDiv 1 (HAdd.hAdd 1 (HPow.hPow (f x) 2))) f') s x","decl":"theorem HasDerivWithinAt.arctan (hf : HasDerivWithinAt f f' s x) :\n    HasDerivWithinAt (fun x => arctan (f x)) (1 / (1 + f x ^ 2) * f') s x :=\n  (Real.hasDerivAt_arctan (f x)).comp_hasDerivWithinAt x hf\n\n"}
{"name":"derivWithin_arctan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"f : Real → Real\nx : Real\ns : Set Real\nhf : DifferentiableWithinAt Real f s x\nhxs : UniqueDiffWithinAt Real s x\n⊢ Eq (derivWithin (fun x => Real.arctan (f x)) s x) (HMul.hMul (HDiv.hDiv 1 (HAdd.hAdd 1 (HPow.hPow (f x) 2))) (derivWithin f s x))","decl":"theorem derivWithin_arctan (hf : DifferentiableWithinAt ℝ f s x) (hxs : UniqueDiffWithinAt ℝ s x) :\n    derivWithin (fun x => arctan (f x)) s x = 1 / (1 + f x ^ 2) * derivWithin f s x :=\n  hf.hasDerivWithinAt.arctan.derivWithin hxs\n\n"}
{"name":"deriv_arctan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"f : Real → Real\nx : Real\nhc : DifferentiableAt Real f x\n⊢ Eq (deriv (fun x => Real.arctan (f x)) x) (HMul.hMul (HDiv.hDiv 1 (HAdd.hAdd 1 (HPow.hPow (f x) 2))) (deriv f x))","decl":"@[simp]\ntheorem deriv_arctan (hc : DifferentiableAt ℝ f x) :\n    deriv (fun x => arctan (f x)) x = 1 / (1 + f x ^ 2) * deriv f x :=\n  hc.hasDerivAt.arctan.deriv\n\n"}
{"name":"HasStrictFDerivAt.arctan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nf' : ContinuousLinearMap (RingHom.id Real) E Real\nx : E\nhf : HasStrictFDerivAt f f' x\n⊢ HasStrictFDerivAt (fun x => Real.arctan (f x)) (HSMul.hSMul (HDiv.hDiv 1 (HAdd.hAdd 1 (HPow.hPow (f x) 2))) f') x","decl":"theorem HasStrictFDerivAt.arctan (hf : HasStrictFDerivAt f f' x) :\n    HasStrictFDerivAt (fun x => arctan (f x)) ((1 / (1 + f x ^ 2)) • f') x :=\n  (hasStrictDerivAt_arctan (f x)).comp_hasStrictFDerivAt x hf\n\n"}
{"name":"HasFDerivAt.arctan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nf' : ContinuousLinearMap (RingHom.id Real) E Real\nx : E\nhf : HasFDerivAt f f' x\n⊢ HasFDerivAt (fun x => Real.arctan (f x)) (HSMul.hSMul (HDiv.hDiv 1 (HAdd.hAdd 1 (HPow.hPow (f x) 2))) f') x","decl":"theorem HasFDerivAt.arctan (hf : HasFDerivAt f f' x) :\n    HasFDerivAt (fun x => arctan (f x)) ((1 / (1 + f x ^ 2)) • f') x :=\n  (hasDerivAt_arctan (f x)).comp_hasFDerivAt x hf\n\n"}
{"name":"HasFDerivWithinAt.arctan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nf' : ContinuousLinearMap (RingHom.id Real) E Real\nx : E\ns : Set E\nhf : HasFDerivWithinAt f f' s x\n⊢ HasFDerivWithinAt (fun x => Real.arctan (f x)) (HSMul.hSMul (HDiv.hDiv 1 (HAdd.hAdd 1 (HPow.hPow (f x) 2))) f') s x","decl":"theorem HasFDerivWithinAt.arctan (hf : HasFDerivWithinAt f f' s x) :\n    HasFDerivWithinAt (fun x => arctan (f x)) ((1 / (1 + f x ^ 2)) • f') s x :=\n  (hasDerivAt_arctan (f x)).comp_hasFDerivWithinAt x hf\n\n"}
{"name":"fderivWithin_arctan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\ns : Set E\nhf : DifferentiableWithinAt Real f s x\nhxs : UniqueDiffWithinAt Real s x\n⊢ Eq (fderivWithin Real (fun x => Real.arctan (f x)) s x) (HSMul.hSMul (HDiv.hDiv 1 (HAdd.hAdd 1 (HPow.hPow (f x) 2))) (fderivWithin Real f s x))","decl":"theorem fderivWithin_arctan (hf : DifferentiableWithinAt ℝ f s x) (hxs : UniqueDiffWithinAt ℝ s x) :\n    fderivWithin ℝ (fun x => arctan (f x)) s x = (1 / (1 + f x ^ 2)) • fderivWithin ℝ f s x :=\n  hf.hasFDerivWithinAt.arctan.fderivWithin hxs\n\n"}
{"name":"fderiv_arctan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\nhc : DifferentiableAt Real f x\n⊢ Eq (fderiv Real (fun x => Real.arctan (f x)) x) (HSMul.hSMul (HDiv.hDiv 1 (HAdd.hAdd 1 (HPow.hPow (f x) 2))) (fderiv Real f x))","decl":"@[simp]\ntheorem fderiv_arctan (hc : DifferentiableAt ℝ f x) :\n    fderiv ℝ (fun x => arctan (f x)) x = (1 / (1 + f x ^ 2)) • fderiv ℝ f x :=\n  hc.hasFDerivAt.arctan.fderiv\n\n"}
{"name":"DifferentiableWithinAt.arctan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\ns : Set E\nhf : DifferentiableWithinAt Real f s x\n⊢ DifferentiableWithinAt Real (fun x => Real.arctan (f x)) s x","decl":"theorem DifferentiableWithinAt.arctan (hf : DifferentiableWithinAt ℝ f s x) :\n    DifferentiableWithinAt ℝ (fun x => Real.arctan (f x)) s x :=\n  hf.hasFDerivWithinAt.arctan.differentiableWithinAt\n\n"}
{"name":"DifferentiableAt.arctan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\nhc : DifferentiableAt Real f x\n⊢ DifferentiableAt Real (fun x => Real.arctan (f x)) x","decl":"@[simp]\ntheorem DifferentiableAt.arctan (hc : DifferentiableAt ℝ f x) :\n    DifferentiableAt ℝ (fun x => arctan (f x)) x :=\n  hc.hasFDerivAt.arctan.differentiableAt\n\n"}
{"name":"DifferentiableOn.arctan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\ns : Set E\nhc : DifferentiableOn Real f s\n⊢ DifferentiableOn Real (fun x => Real.arctan (f x)) s","decl":"theorem DifferentiableOn.arctan (hc : DifferentiableOn ℝ f s) :\n    DifferentiableOn ℝ (fun x => arctan (f x)) s := fun x h => (hc x h).arctan\n\n"}
{"name":"Differentiable.arctan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nhc : Differentiable Real f\n⊢ Differentiable Real fun x => Real.arctan (f x)","decl":"@[simp]\ntheorem Differentiable.arctan (hc : Differentiable ℝ f) : Differentiable ℝ fun x => arctan (f x) :=\n  fun x => (hc x).arctan\n\n"}
{"name":"ContDiffAt.arctan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\nn : ENat\nh : ContDiffAt Real (↑n) f x\n⊢ ContDiffAt Real (↑n) (fun x => Real.arctan (f x)) x","decl":"theorem ContDiffAt.arctan (h : ContDiffAt ℝ n f x) : ContDiffAt ℝ n (fun x => arctan (f x)) x :=\n  contDiff_arctan.contDiffAt.comp x h\n\n"}
{"name":"ContDiff.arctan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nn : ENat\nh : ContDiff Real (↑n) f\n⊢ ContDiff Real ↑n fun x => Real.arctan (f x)","decl":"theorem ContDiff.arctan (h : ContDiff ℝ n f) : ContDiff ℝ n fun x => arctan (f x) :=\n  contDiff_arctan.comp h\n\n"}
{"name":"ContDiffWithinAt.arctan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\nx : E\ns : Set E\nn : ENat\nh : ContDiffWithinAt Real (↑n) f s x\n⊢ ContDiffWithinAt Real (↑n) (fun x => Real.arctan (f x)) s x","decl":"theorem ContDiffWithinAt.arctan (h : ContDiffWithinAt ℝ n f s x) :\n    ContDiffWithinAt ℝ n (fun x => arctan (f x)) s x :=\n  contDiff_arctan.comp_contDiffWithinAt h\n\n"}
{"name":"ContDiffOn.arctan","module":"Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv","initialProofState":"E : Type u_1\ninst✝¹ : NormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : E → Real\ns : Set E\nn : ENat\nh : ContDiffOn Real (↑n) f s\n⊢ ContDiffOn Real (↑n) (fun x => Real.arctan (f x)) s","decl":"theorem ContDiffOn.arctan (h : ContDiffOn ℝ n f s) : ContDiffOn ℝ n (fun x => arctan (f x)) s :=\n  contDiff_arctan.comp_contDiffOn h\n\n"}
