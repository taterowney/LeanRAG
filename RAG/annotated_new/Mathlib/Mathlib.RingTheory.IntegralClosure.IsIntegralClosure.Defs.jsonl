{"name":"IsIntegralClosure.isIntegral_iff","module":"Mathlib.RingTheory.IntegralClosure.IsIntegralClosure.Defs","initialProofState":"A : Type u_1\nR : Type u_2\nB : Type u_3\ninst✝⁴ : CommRing R\ninst✝³ : CommSemiring A\ninst✝² : CommRing B\ninst✝¹ : Algebra R B\ninst✝ : Algebra A B\nself : IsIntegralClosure A R B\nx : B\n⊢ Iff (IsIntegral R x) (Exists fun y => Eq ((algebraMap A B) y) x)","decl":"/-- `IsIntegralClosure A R B` is the characteristic predicate stating `A` is\nthe integral closure of `R` in `B`,\ni.e. that an element of `B` is integral over `R` iff it is an element of (the image of) `A`.\n-/\nclass IsIntegralClosure (A R B : Type*) [CommRing R] [CommSemiring A] [CommRing B] [Algebra R B]\n  [Algebra A B] : Prop where\n  algebraMap_injective' : Function.Injective (algebraMap A B)\n  isIntegral_iff : ∀ {x : B}, IsIntegral R x ↔ ∃ y, algebraMap A B y = x\n\n"}
{"name":"IsIntegralClosure.algebraMap_injective'","module":"Mathlib.RingTheory.IntegralClosure.IsIntegralClosure.Defs","initialProofState":"A : Type u_1\nR : Type u_2\nB : Type u_3\ninst✝⁴ : CommRing R\ninst✝³ : CommSemiring A\ninst✝² : CommRing B\ninst✝¹ : Algebra R B\ninst✝ : Algebra A B\nself : IsIntegralClosure A R B\n⊢ Function.Injective ⇑(algebraMap A B)","decl":"/-- `IsIntegralClosure A R B` is the characteristic predicate stating `A` is\nthe integral closure of `R` in `B`,\ni.e. that an element of `B` is integral over `R` iff it is an element of (the image of) `A`.\n-/\nclass IsIntegralClosure (A R B : Type*) [CommRing R] [CommSemiring A] [CommRing B] [Algebra R B]\n  [Algebra A B] : Prop where\n  algebraMap_injective' : Function.Injective (algebraMap A B)\n  isIntegral_iff : ∀ {x : B}, IsIntegral R x ↔ ∃ y, algebraMap A B y = x\n\n"}
