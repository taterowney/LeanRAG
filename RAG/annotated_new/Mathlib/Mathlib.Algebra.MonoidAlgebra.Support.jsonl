{"name":"MonoidAlgebra.support_mul","module":"Mathlib.Algebra.MonoidAlgebra.Support","initialProofState":"k : Type u₁\nG : Type u₂\ninst✝² : Semiring k\ninst✝¹ : Mul G\ninst✝ : DecidableEq G\na b : MonoidAlgebra k G\n⊢ HasSubset.Subset (HMul.hMul a b).support (HMul.hMul a.support b.support)","decl":"theorem support_mul [Mul G] [DecidableEq G] (a b : MonoidAlgebra k G) :\n    (a * b).support ⊆ a.support * b.support := by\n  rw [MonoidAlgebra.mul_def]\n  exact support_sum.trans <| biUnion_subset.2 fun _x hx ↦\n    support_sum.trans <| biUnion_subset.2 fun _y hy ↦\n      support_single_subset.trans <| singleton_subset_iff.2 <| mem_image₂_of_mem hx hy\n\n"}
{"name":"MonoidAlgebra.support_single_mul_subset","module":"Mathlib.Algebra.MonoidAlgebra.Support","initialProofState":"k : Type u₁\nG : Type u₂\ninst✝² : Semiring k\ninst✝¹ : DecidableEq G\ninst✝ : Mul G\nf : MonoidAlgebra k G\nr : k\na : G\n⊢ HasSubset.Subset (HMul.hMul (MonoidAlgebra.single a r) f).support (Finset.image (fun x => HMul.hMul a x) f.support)","decl":"theorem support_single_mul_subset [DecidableEq G] [Mul G] (f : MonoidAlgebra k G) (r : k) (a : G) :\n    (single a r * f : MonoidAlgebra k G).support ⊆ Finset.image (a * ·) f.support :=\n  (support_mul _ _).trans <| (Finset.image₂_subset_right support_single_subset).trans <| by\n    rw [Finset.image₂_singleton_left]\n\n"}
{"name":"MonoidAlgebra.support_mul_single_subset","module":"Mathlib.Algebra.MonoidAlgebra.Support","initialProofState":"k : Type u₁\nG : Type u₂\ninst✝² : Semiring k\ninst✝¹ : DecidableEq G\ninst✝ : Mul G\nf : MonoidAlgebra k G\nr : k\na : G\n⊢ HasSubset.Subset (HMul.hMul f (MonoidAlgebra.single a r)).support (Finset.image (fun x => HMul.hMul x a) f.support)","decl":"theorem support_mul_single_subset [DecidableEq G] [Mul G] (f : MonoidAlgebra k G) (r : k) (a : G) :\n    (f * single a r).support ⊆ Finset.image (· * a) f.support :=\n  (support_mul _ _).trans <| (Finset.image₂_subset_left support_single_subset).trans <| by\n    rw [Finset.image₂_singleton_right]\n\n"}
{"name":"MonoidAlgebra.support_single_mul_eq_image","module":"Mathlib.Algebra.MonoidAlgebra.Support","initialProofState":"k : Type u₁\nG : Type u₂\ninst✝² : Semiring k\ninst✝¹ : DecidableEq G\ninst✝ : Mul G\nf : MonoidAlgebra k G\nr : k\nhr : ∀ (y : k), Iff (Eq (HMul.hMul r y) 0) (Eq y 0)\nx : G\nlx : IsLeftRegular x\n⊢ Eq (HMul.hMul (MonoidAlgebra.single x r) f).support (Finset.image (fun x_1 => HMul.hMul x x_1) f.support)","decl":"theorem support_single_mul_eq_image [DecidableEq G] [Mul G] (f : MonoidAlgebra k G) {r : k}\n    (hr : ∀ y, r * y = 0 ↔ y = 0) {x : G} (lx : IsLeftRegular x) :\n    (single x r * f : MonoidAlgebra k G).support = Finset.image (x * ·) f.support := by\n  refine subset_antisymm (support_single_mul_subset f _ _) fun y hy => ?_\n  obtain ⟨y, yf, rfl⟩ : ∃ a : G, a ∈ f.support ∧ x * a = y := by\n    simpa only [Finset.mem_image, exists_prop] using hy\n  simp only [mul_apply, mem_support_iff.mp yf, hr, mem_support_iff, sum_single_index,\n    Finsupp.sum_ite_eq', Ne, not_false_iff, if_true, zero_mul, ite_self, sum_zero, lx.eq_iff]\n\n"}
{"name":"MonoidAlgebra.support_mul_single_eq_image","module":"Mathlib.Algebra.MonoidAlgebra.Support","initialProofState":"k : Type u₁\nG : Type u₂\ninst✝² : Semiring k\ninst✝¹ : DecidableEq G\ninst✝ : Mul G\nf : MonoidAlgebra k G\nr : k\nhr : ∀ (y : k), Iff (Eq (HMul.hMul y r) 0) (Eq y 0)\nx : G\nrx : IsRightRegular x\n⊢ Eq (HMul.hMul f (MonoidAlgebra.single x r)).support (Finset.image (fun x_1 => HMul.hMul x_1 x) f.support)","decl":"theorem support_mul_single_eq_image [DecidableEq G] [Mul G] (f : MonoidAlgebra k G) {r : k}\n    (hr : ∀ y, y * r = 0 ↔ y = 0) {x : G} (rx : IsRightRegular x) :\n    (f * single x r).support = Finset.image (· * x) f.support := by\n  refine subset_antisymm (support_mul_single_subset f _ _) fun y hy => ?_\n  obtain ⟨y, yf, rfl⟩ : ∃ a : G, a ∈ f.support ∧ a * x = y := by\n    simpa only [Finset.mem_image, exists_prop] using hy\n  simp only [mul_apply, mem_support_iff.mp yf, hr, mem_support_iff, sum_single_index,\n    Finsupp.sum_ite_eq', Ne, not_false_iff, if_true, mul_zero, ite_self, sum_zero, rx.eq_iff]\n\n"}
{"name":"MonoidAlgebra.support_mul_single","module":"Mathlib.Algebra.MonoidAlgebra.Support","initialProofState":"k : Type u₁\nG : Type u₂\ninst✝² : Semiring k\ninst✝¹ : Mul G\ninst✝ : IsRightCancelMul G\nf : MonoidAlgebra k G\nr : k\nhr : ∀ (y : k), Iff (Eq (HMul.hMul y r) 0) (Eq y 0)\nx : G\n⊢ Eq (HMul.hMul f (MonoidAlgebra.single x r)).support (Finset.map (mulRightEmbedding x) f.support)","decl":"theorem support_mul_single [Mul G] [IsRightCancelMul G] (f : MonoidAlgebra k G) (r : k)\n    (hr : ∀ y, y * r = 0 ↔ y = 0) (x : G) :\n    (f * single x r).support = f.support.map (mulRightEmbedding x) := by\n  classical\n    ext\n    simp only [support_mul_single_eq_image f hr (IsRightRegular.all x),\n      mem_image, mem_map, mulRightEmbedding_apply]\n\n"}
{"name":"MonoidAlgebra.support_single_mul","module":"Mathlib.Algebra.MonoidAlgebra.Support","initialProofState":"k : Type u₁\nG : Type u₂\ninst✝² : Semiring k\ninst✝¹ : Mul G\ninst✝ : IsLeftCancelMul G\nf : MonoidAlgebra k G\nr : k\nhr : ∀ (y : k), Iff (Eq (HMul.hMul r y) 0) (Eq y 0)\nx : G\n⊢ Eq (HMul.hMul (MonoidAlgebra.single x r) f).support (Finset.map (mulLeftEmbedding x) f.support)","decl":"theorem support_single_mul [Mul G] [IsLeftCancelMul G] (f : MonoidAlgebra k G) (r : k)\n    (hr : ∀ y, r * y = 0 ↔ y = 0) (x : G) :\n    (single x r * f : MonoidAlgebra k G).support = f.support.map (mulLeftEmbedding x) := by\n  classical\n    ext\n    simp only [support_single_mul_eq_image f hr (IsLeftRegular.all x), mem_image,\n      mem_map, mulLeftEmbedding_apply]\n\n"}
{"name":"MonoidAlgebra.support_one_subset","module":"Mathlib.Algebra.MonoidAlgebra.Support","initialProofState":"k : Type u₁\nG : Type u₂\ninst✝¹ : Semiring k\ninst✝ : One G\n⊢ HasSubset.Subset (Finsupp.support 1) 1","decl":"lemma support_one_subset [One G] : (1 : MonoidAlgebra k G).support ⊆ 1 :=\n  Finsupp.support_single_subset\n\n"}
{"name":"MonoidAlgebra.support_one","module":"Mathlib.Algebra.MonoidAlgebra.Support","initialProofState":"k : Type u₁\nG : Type u₂\ninst✝² : Semiring k\ninst✝¹ : One G\ninst✝ : NeZero 1\n⊢ Eq (Finsupp.support 1) 1","decl":"@[simp]\nlemma support_one [One G] [NeZero (1 : k)] : (1 : MonoidAlgebra k G).support = 1 :=\n  Finsupp.support_single_ne_zero _ one_ne_zero\n\n"}
{"name":"MonoidAlgebra.mem_span_support","module":"Mathlib.Algebra.MonoidAlgebra.Support","initialProofState":"k : Type u₁\nG : Type u₂\ninst✝¹ : Semiring k\ninst✝ : MulOneClass G\nf : MonoidAlgebra k G\n⊢ Membership.mem (Submodule.span k (Set.image ⇑(MonoidAlgebra.of k G) ↑f.support)) f","decl":"/-- An element of `MonoidAlgebra k G` is in the subalgebra generated by its support. -/\ntheorem mem_span_support (f : MonoidAlgebra k G) :\n    f ∈ Submodule.span k (of k G '' (f.support : Set G)) := by\n  erw [of, MonoidHom.coe_mk, ← supported_eq_span_single, Finsupp.mem_supported]\n\n"}
{"name":"AddMonoidAlgebra.support_mul","module":"Mathlib.Algebra.MonoidAlgebra.Support","initialProofState":"k : Type u₁\nG : Type u₂\ninst✝² : Semiring k\ninst✝¹ : DecidableEq G\ninst✝ : Add G\na b : AddMonoidAlgebra k G\n⊢ HasSubset.Subset (HMul.hMul a b).support (HAdd.hAdd a.support b.support)","decl":"theorem support_mul [DecidableEq G] [Add G] (a b : k[G]) :\n    (a * b).support ⊆ a.support + b.support :=\n  @MonoidAlgebra.support_mul k (Multiplicative G) _ _ _ _ _\n\n"}
{"name":"AddMonoidAlgebra.support_mul_single","module":"Mathlib.Algebra.MonoidAlgebra.Support","initialProofState":"k : Type u₁\nG : Type u₂\ninst✝² : Semiring k\ninst✝¹ : Add G\ninst✝ : IsRightCancelAdd G\nf : AddMonoidAlgebra k G\nr : k\nhr : ∀ (y : k), Iff (Eq (HMul.hMul y r) 0) (Eq y 0)\nx : G\n⊢ Eq (HMul.hMul f (AddMonoidAlgebra.single x r)).support (Finset.map (addRightEmbedding x) f.support)","decl":"theorem support_mul_single [Add G] [IsRightCancelAdd G] (f : k[G]) (r : k)\n    (hr : ∀ y, y * r = 0 ↔ y = 0) (x : G) :\n    (f * single x r : k[G]).support = f.support.map (addRightEmbedding x) :=\n  MonoidAlgebra.support_mul_single (G := Multiplicative G) _ _ hr _\n\n"}
{"name":"AddMonoidAlgebra.support_single_mul","module":"Mathlib.Algebra.MonoidAlgebra.Support","initialProofState":"k : Type u₁\nG : Type u₂\ninst✝² : Semiring k\ninst✝¹ : Add G\ninst✝ : IsLeftCancelAdd G\nf : AddMonoidAlgebra k G\nr : k\nhr : ∀ (y : k), Iff (Eq (HMul.hMul r y) 0) (Eq y 0)\nx : G\n⊢ Eq (HMul.hMul (AddMonoidAlgebra.single x r) f).support (Finset.map (addLeftEmbedding x) f.support)","decl":"theorem support_single_mul [Add G] [IsLeftCancelAdd G] (f : k[G]) (r : k)\n    (hr : ∀ y, r * y = 0 ↔ y = 0) (x : G) :\n    (single x r * f : k[G]).support = f.support.map (addLeftEmbedding x) :=\n  MonoidAlgebra.support_single_mul (G := Multiplicative G) _ _ hr _\n\n"}
{"name":"AddMonoidAlgebra.support_one_subset","module":"Mathlib.Algebra.MonoidAlgebra.Support","initialProofState":"k : Type u₁\nG : Type u₂\ninst✝¹ : Semiring k\ninst✝ : Zero G\n⊢ HasSubset.Subset (Finsupp.support 1) 0","decl":"lemma support_one_subset [Zero G] : (1 : k[G]).support ⊆ 0 := Finsupp.support_single_subset\n\n"}
{"name":"AddMonoidAlgebra.support_one","module":"Mathlib.Algebra.MonoidAlgebra.Support","initialProofState":"k : Type u₁\nG : Type u₂\ninst✝² : Semiring k\ninst✝¹ : Zero G\ninst✝ : NeZero 1\n⊢ Eq (Finsupp.support 1) 0","decl":"@[simp]\nlemma support_one [Zero G] [NeZero (1 : k)] : (1 : k[G]).support = 0 :=\n  Finsupp.support_single_ne_zero _ one_ne_zero\n\n"}
{"name":"AddMonoidAlgebra.mem_span_support","module":"Mathlib.Algebra.MonoidAlgebra.Support","initialProofState":"k : Type u₁\nG : Type u₂\ninst✝¹ : Semiring k\ninst✝ : AddZeroClass G\nf : AddMonoidAlgebra k G\n⊢ Membership.mem (Submodule.span k (Set.image ⇑(AddMonoidAlgebra.of k G) ↑f.support)) f","decl":"/-- An element of `k[G]` is in the submodule generated by its support. -/\ntheorem mem_span_support [AddZeroClass G] (f : k[G]) :\n    f ∈ Submodule.span k (of k G '' (f.support : Set G)) := by\n  erw [of, MonoidHom.coe_mk, ← Finsupp.supported_eq_span_single, Finsupp.mem_supported]\n\n"}
{"name":"AddMonoidAlgebra.mem_span_support'","module":"Mathlib.Algebra.MonoidAlgebra.Support","initialProofState":"k : Type u₁\nG : Type u₂\ninst✝ : Semiring k\nf : AddMonoidAlgebra k G\n⊢ Membership.mem (Submodule.span k (Set.image (AddMonoidAlgebra.of' k G) ↑f.support)) f","decl":"/-- An element of `k[G]` is in the subalgebra generated by its support, using\nunbundled inclusion. -/\ntheorem mem_span_support' (f : k[G]) :\n    f ∈ Submodule.span k (of' k G '' (f.support : Set G)) := by\n  delta of'\n  rw [← Finsupp.supported_eq_span_single, Finsupp.mem_supported]\n\n"}
