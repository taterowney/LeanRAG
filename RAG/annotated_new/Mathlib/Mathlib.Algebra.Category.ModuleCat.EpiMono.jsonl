{"name":"ModuleCat.ker_eq_bot_of_mono","module":"Mathlib.Algebra.Category.ModuleCat.EpiMono","initialProofState":"R : Type u\ninst✝¹ : Ring R\nX Y : ModuleCat R\nf : Quiver.Hom X Y\ninst✝ : CategoryTheory.Mono f\n⊢ Eq (LinearMap.ker (ModuleCat.Hom.hom f)) Bot.bot","decl":"theorem ker_eq_bot_of_mono [Mono f] : LinearMap.ker f.hom = ⊥ :=\n  LinearMap.ker_eq_bot_of_cancel fun u v h => ModuleCat.hom_ext_iff.mp <|\n    (@cancel_mono _ _ _ _ _ f _ (↟u) (↟v)).1 <| ModuleCat.hom_ext_iff.mpr h\n\n"}
{"name":"ModuleCat.range_eq_top_of_epi","module":"Mathlib.Algebra.Category.ModuleCat.EpiMono","initialProofState":"R : Type u\ninst✝¹ : Ring R\nX Y : ModuleCat R\nf : Quiver.Hom X Y\ninst✝ : CategoryTheory.Epi f\n⊢ Eq (LinearMap.range (ModuleCat.Hom.hom f)) Top.top","decl":"theorem range_eq_top_of_epi [Epi f] : LinearMap.range f.hom = ⊤ :=\n  LinearMap.range_eq_top_of_cancel fun u v h => ModuleCat.hom_ext_iff.mp <|\n    (@cancel_epi _ _ _ _ _ f _ (↟u) (↟v)).1 <| ModuleCat.hom_ext_iff.mpr h\n\n"}
{"name":"ModuleCat.mono_iff_ker_eq_bot","module":"Mathlib.Algebra.Category.ModuleCat.EpiMono","initialProofState":"R : Type u\ninst✝ : Ring R\nX Y : ModuleCat R\nf : Quiver.Hom X Y\n⊢ Iff (CategoryTheory.Mono f) (Eq (LinearMap.ker (ModuleCat.Hom.hom f)) Bot.bot)","decl":"theorem mono_iff_ker_eq_bot : Mono f ↔ LinearMap.ker f.hom = ⊥ :=\n  ⟨fun _ => ker_eq_bot_of_mono _, fun hf =>\n    ConcreteCategory.mono_of_injective _ <| by convert LinearMap.ker_eq_bot.1 hf⟩\n\n"}
{"name":"ModuleCat.mono_iff_injective","module":"Mathlib.Algebra.Category.ModuleCat.EpiMono","initialProofState":"R : Type u\ninst✝ : Ring R\nX Y : ModuleCat R\nf : Quiver.Hom X Y\n⊢ Iff (CategoryTheory.Mono f) (Function.Injective ⇑(CategoryTheory.ConcreteCategory.hom f))","decl":"theorem mono_iff_injective : Mono f ↔ Function.Injective f := by\n  rw [mono_iff_ker_eq_bot, LinearMap.ker_eq_bot]\n\n"}
{"name":"ModuleCat.epi_iff_range_eq_top","module":"Mathlib.Algebra.Category.ModuleCat.EpiMono","initialProofState":"R : Type u\ninst✝ : Ring R\nX Y : ModuleCat R\nf : Quiver.Hom X Y\n⊢ Iff (CategoryTheory.Epi f) (Eq (LinearMap.range (ModuleCat.Hom.hom f)) Top.top)","decl":"theorem epi_iff_range_eq_top : Epi f ↔ LinearMap.range f.hom = ⊤ :=\n  ⟨fun _ => range_eq_top_of_epi _, fun hf =>\n    ConcreteCategory.epi_of_surjective _ <| by convert LinearMap.range_eq_top.1 hf⟩\n\n"}
{"name":"ModuleCat.epi_iff_surjective","module":"Mathlib.Algebra.Category.ModuleCat.EpiMono","initialProofState":"R : Type u\ninst✝ : Ring R\nX Y : ModuleCat R\nf : Quiver.Hom X Y\n⊢ Iff (CategoryTheory.Epi f) (Function.Surjective ⇑(CategoryTheory.ConcreteCategory.hom f))","decl":"theorem epi_iff_surjective : Epi f ↔ Function.Surjective f := by\n  rw [epi_iff_range_eq_top, LinearMap.range_eq_top]\n\n"}
{"name":"ModuleCat.mono_as_hom'_subtype","module":"Mathlib.Algebra.Category.ModuleCat.EpiMono","initialProofState":"R : Type u\ninst✝ : Ring R\nX : ModuleCat R\nU : Submodule R ↑X\n⊢ CategoryTheory.Mono (ModuleCat.ofHom U.subtype)","decl":"instance mono_as_hom'_subtype (U : Submodule R X) : Mono (ModuleCat.ofHom U.subtype) :=\n  (mono_iff_ker_eq_bot _).mpr (Submodule.ker_subtype U)\n\n"}
{"name":"ModuleCat.epi_as_hom''_mkQ","module":"Mathlib.Algebra.Category.ModuleCat.EpiMono","initialProofState":"R : Type u\ninst✝ : Ring R\nX : ModuleCat R\nU : Submodule R ↑X\n⊢ CategoryTheory.Epi (ModuleCat.ofHom U.mkQ)","decl":"instance epi_as_hom''_mkQ (U : Submodule R X) : Epi (ModuleCat.ofHom U.mkQ) :=\n  (epi_iff_range_eq_top _).mpr <| Submodule.range_mkQ _\n\n"}
{"name":"ModuleCat.forget_preservesEpimorphisms","module":"Mathlib.Algebra.Category.ModuleCat.EpiMono","initialProofState":"R : Type u\ninst✝ : Ring R\n⊢ (CategoryTheory.forget (ModuleCat R)).PreservesEpimorphisms","decl":"instance forget_preservesEpimorphisms : (forget (ModuleCat.{v} R)).PreservesEpimorphisms where\n    preserves f hf := by\n      erw [CategoryTheory.epi_iff_surjective, ← epi_iff_surjective]\n      exact hf\n\n"}
{"name":"ModuleCat.forget_preservesMonomorphisms","module":"Mathlib.Algebra.Category.ModuleCat.EpiMono","initialProofState":"R : Type u\ninst✝ : Ring R\n⊢ (CategoryTheory.forget (ModuleCat R)).PreservesMonomorphisms","decl":"instance forget_preservesMonomorphisms : (forget (ModuleCat.{v} R)).PreservesMonomorphisms where\n    preserves f hf := by\n      erw [CategoryTheory.mono_iff_injective, ← mono_iff_injective]\n      exact hf\n\n"}
