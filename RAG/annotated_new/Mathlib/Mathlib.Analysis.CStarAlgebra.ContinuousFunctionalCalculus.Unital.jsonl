{"name":"ContinuousFunctionalCalculus.predicate_zero","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : outParam (A → Prop)\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : TopologicalSpace A\ninst✝ : Algebra R A\nself : ContinuousFunctionalCalculus R p\n⊢ p 0","decl":"/-- A star `R`-algebra `A` has a *continuous functional calculus* for elements satisfying the\nproperty `p : A → Prop` if\n\n+ for every such element `a : A` there is a star algebra homomorphism\n  `cfcHom : C(spectrum R a, R) →⋆ₐ[R] A` sending the (restriction of) the identity map to `a`.\n+ `cfcHom` is a closed embedding for which the spectrum of the image of function `f` is its range.\n+ `cfcHom` preserves the property `p`.\n+ `p 0` is true, which ensures among other things that `p ≠ fun _ ↦ False`.\n\nThe property `p` is marked as an `outParam` so that the user need not specify it. In practice,\n\n+ for `R := ℂ`, we choose `p := IsStarNormal`,\n+ for `R := ℝ`, we choose `p := IsSelfAdjoint`,\n+ for `R := ℝ≥0`, we choose `p := (0 ≤ ·)`.\n\nInstead of directly providing the data we opt instead for a `Prop` class. In all relevant cases,\nthe continuous functional calculus is uniquely determined, and utilizing this approach\nprevents diamonds or problems arising from multiple instances. -/\nclass ContinuousFunctionalCalculus (R : Type*) {A : Type*} (p : outParam (A → Prop))\n    [CommSemiring R] [StarRing R] [MetricSpace R] [TopologicalSemiring R] [ContinuousStar R]\n    [Ring A] [StarRing A] [TopologicalSpace A] [Algebra R A] : Prop where\n  predicate_zero : p 0\n  [compactSpace_spectrum (a : A) : CompactSpace (spectrum R a)]\n  spectrum_nonempty [Nontrivial A] (a : A) (ha : p a) : (spectrum R a).Nonempty\n  exists_cfc_of_predicate : ∀ a, p a → ∃ φ : C(spectrum R a, R) →⋆ₐ[R] A,\n    IsClosedEmbedding φ ∧ φ ((ContinuousMap.id R).restrict <| spectrum R a) = a ∧\n      (∀ f, spectrum R (φ f) = Set.range f) ∧ ∀ f, p (φ f)\n\n-- this instance should not be activated everywhere but it is useful when developing generic API\n-- for the continuous functional calculus\n"}
{"name":"ContinuousFunctionalCalculus.compactSpace_spectrum","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : outParam (A → Prop)\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : TopologicalSpace A\ninst✝ : Algebra R A\nself : ContinuousFunctionalCalculus R p\na : A\n⊢ CompactSpace ↑(spectrum R a)","decl":"/-- A star `R`-algebra `A` has a *continuous functional calculus* for elements satisfying the\nproperty `p : A → Prop` if\n\n+ for every such element `a : A` there is a star algebra homomorphism\n  `cfcHom : C(spectrum R a, R) →⋆ₐ[R] A` sending the (restriction of) the identity map to `a`.\n+ `cfcHom` is a closed embedding for which the spectrum of the image of function `f` is its range.\n+ `cfcHom` preserves the property `p`.\n+ `p 0` is true, which ensures among other things that `p ≠ fun _ ↦ False`.\n\nThe property `p` is marked as an `outParam` so that the user need not specify it. In practice,\n\n+ for `R := ℂ`, we choose `p := IsStarNormal`,\n+ for `R := ℝ`, we choose `p := IsSelfAdjoint`,\n+ for `R := ℝ≥0`, we choose `p := (0 ≤ ·)`.\n\nInstead of directly providing the data we opt instead for a `Prop` class. In all relevant cases,\nthe continuous functional calculus is uniquely determined, and utilizing this approach\nprevents diamonds or problems arising from multiple instances. -/\nclass ContinuousFunctionalCalculus (R : Type*) {A : Type*} (p : outParam (A → Prop))\n    [CommSemiring R] [StarRing R] [MetricSpace R] [TopologicalSemiring R] [ContinuousStar R]\n    [Ring A] [StarRing A] [TopologicalSpace A] [Algebra R A] : Prop where\n  predicate_zero : p 0\n  [compactSpace_spectrum (a : A) : CompactSpace (spectrum R a)]\n  spectrum_nonempty [Nontrivial A] (a : A) (ha : p a) : (spectrum R a).Nonempty\n  exists_cfc_of_predicate : ∀ a, p a → ∃ φ : C(spectrum R a, R) →⋆ₐ[R] A,\n    IsClosedEmbedding φ ∧ φ ((ContinuousMap.id R).restrict <| spectrum R a) = a ∧\n      (∀ f, spectrum R (φ f) = Set.range f) ∧ ∀ f, p (φ f)\n\n-- this instance should not be activated everywhere but it is useful when developing generic API\n-- for the continuous functional calculus\n"}
{"name":"ContinuousFunctionalCalculus.spectrum_nonempty","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : outParam (A → Prop)\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : MetricSpace R\ninst✝⁶ : TopologicalSemiring R\ninst✝⁵ : ContinuousStar R\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : TopologicalSpace A\ninst✝¹ : Algebra R A\nself : ContinuousFunctionalCalculus R p\ninst✝ : Nontrivial A\na : A\nha : p a\n⊢ (spectrum R a).Nonempty","decl":"/-- A star `R`-algebra `A` has a *continuous functional calculus* for elements satisfying the\nproperty `p : A → Prop` if\n\n+ for every such element `a : A` there is a star algebra homomorphism\n  `cfcHom : C(spectrum R a, R) →⋆ₐ[R] A` sending the (restriction of) the identity map to `a`.\n+ `cfcHom` is a closed embedding for which the spectrum of the image of function `f` is its range.\n+ `cfcHom` preserves the property `p`.\n+ `p 0` is true, which ensures among other things that `p ≠ fun _ ↦ False`.\n\nThe property `p` is marked as an `outParam` so that the user need not specify it. In practice,\n\n+ for `R := ℂ`, we choose `p := IsStarNormal`,\n+ for `R := ℝ`, we choose `p := IsSelfAdjoint`,\n+ for `R := ℝ≥0`, we choose `p := (0 ≤ ·)`.\n\nInstead of directly providing the data we opt instead for a `Prop` class. In all relevant cases,\nthe continuous functional calculus is uniquely determined, and utilizing this approach\nprevents diamonds or problems arising from multiple instances. -/\nclass ContinuousFunctionalCalculus (R : Type*) {A : Type*} (p : outParam (A → Prop))\n    [CommSemiring R] [StarRing R] [MetricSpace R] [TopologicalSemiring R] [ContinuousStar R]\n    [Ring A] [StarRing A] [TopologicalSpace A] [Algebra R A] : Prop where\n  predicate_zero : p 0\n  [compactSpace_spectrum (a : A) : CompactSpace (spectrum R a)]\n  spectrum_nonempty [Nontrivial A] (a : A) (ha : p a) : (spectrum R a).Nonempty\n  exists_cfc_of_predicate : ∀ a, p a → ∃ φ : C(spectrum R a, R) →⋆ₐ[R] A,\n    IsClosedEmbedding φ ∧ φ ((ContinuousMap.id R).restrict <| spectrum R a) = a ∧\n      (∀ f, spectrum R (φ f) = Set.range f) ∧ ∀ f, p (φ f)\n\n-- this instance should not be activated everywhere but it is useful when developing generic API\n-- for the continuous functional calculus\n"}
{"name":"ContinuousFunctionalCalculus.exists_cfc_of_predicate","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : outParam (A → Prop)\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : TopologicalSpace A\ninst✝ : Algebra R A\nself : ContinuousFunctionalCalculus R p\na : A\na✝ : p a\n⊢ Exists fun φ => And (Topology.IsClosedEmbedding ⇑φ) (And (Eq (φ (ContinuousMap.restrict (spectrum R a) (ContinuousMap.id R))) a) (And (∀ (f : ContinuousMap (↑(spectrum R a)) R), Eq (spectrum R (φ f)) (Set.range ⇑f)) (∀ (f : ContinuousMap (↑(spectrum R a)) R), p (φ f))))","decl":"/-- A star `R`-algebra `A` has a *continuous functional calculus* for elements satisfying the\nproperty `p : A → Prop` if\n\n+ for every such element `a : A` there is a star algebra homomorphism\n  `cfcHom : C(spectrum R a, R) →⋆ₐ[R] A` sending the (restriction of) the identity map to `a`.\n+ `cfcHom` is a closed embedding for which the spectrum of the image of function `f` is its range.\n+ `cfcHom` preserves the property `p`.\n+ `p 0` is true, which ensures among other things that `p ≠ fun _ ↦ False`.\n\nThe property `p` is marked as an `outParam` so that the user need not specify it. In practice,\n\n+ for `R := ℂ`, we choose `p := IsStarNormal`,\n+ for `R := ℝ`, we choose `p := IsSelfAdjoint`,\n+ for `R := ℝ≥0`, we choose `p := (0 ≤ ·)`.\n\nInstead of directly providing the data we opt instead for a `Prop` class. In all relevant cases,\nthe continuous functional calculus is uniquely determined, and utilizing this approach\nprevents diamonds or problems arising from multiple instances. -/\nclass ContinuousFunctionalCalculus (R : Type*) {A : Type*} (p : outParam (A → Prop))\n    [CommSemiring R] [StarRing R] [MetricSpace R] [TopologicalSemiring R] [ContinuousStar R]\n    [Ring A] [StarRing A] [TopologicalSpace A] [Algebra R A] : Prop where\n  predicate_zero : p 0\n  [compactSpace_spectrum (a : A) : CompactSpace (spectrum R a)]\n  spectrum_nonempty [Nontrivial A] (a : A) (ha : p a) : (spectrum R a).Nonempty\n  exists_cfc_of_predicate : ∀ a, p a → ∃ φ : C(spectrum R a, R) →⋆ₐ[R] A,\n    IsClosedEmbedding φ ∧ φ ((ContinuousMap.id R).restrict <| spectrum R a) = a ∧\n      (∀ f, spectrum R (φ f) = Set.range f) ∧ ∀ f, p (φ f)\n\n-- this instance should not be activated everywhere but it is useful when developing generic API\n-- for the continuous functional calculus\n"}
{"name":"ContinuousMap.UniqueHom.eq_of_continuous_of_map_id","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : MetricSpace R\ninst✝⁶ : TopologicalSemiring R\ninst✝⁵ : ContinuousStar R\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : TopologicalSpace A\ninst✝¹ : Algebra R A\nself : ContinuousMap.UniqueHom R A\ns : Set R\ninst✝ : CompactSpace ↑s\nφ ψ : StarAlgHom R (ContinuousMap (↑s) R) A\nhφ : Continuous ⇑φ\nhψ : Continuous ⇑ψ\nh : Eq (φ (ContinuousMap.restrict s (ContinuousMap.id R))) (ψ (ContinuousMap.restrict s (ContinuousMap.id R)))\n⊢ Eq φ ψ","decl":"/-- A class guaranteeing that the continuous functional calculus is uniquely determined by the\nproperties that it is a continuous star algebra homomorphism mapping the (restriction of) the\nidentity to `a`. This is the necessary tool used to establish `cfcHom_comp` and the more common\nvariant `cfc_comp`.\n\nThis class has instances, which can be found in\n`Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unique`, in each of the common cases\n`ℂ`, `ℝ` and `ℝ≥0` as a consequence of the Stone-Weierstrass theorem.\n\nThis class is separate from `ContinuousFunctionalCalculus` primarily because we will later use\n`SpectrumRestricts` to derive an instance of `ContinuousFunctionalCalculus` on a scalar subring\nfrom one on a larger ring (i.e., to go from a continuous functional calculus over `ℂ` for normal\nelements to one over `ℝ` for selfadjoint elements), and proving this additional property is\npreserved would be burdensome or impossible. -/\nclass ContinuousMap.UniqueHom (R A : Type*) [CommSemiring R] [StarRing R]\n    [MetricSpace R] [TopologicalSemiring R] [ContinuousStar R] [Ring A] [StarRing A]\n    [TopologicalSpace A] [Algebra R A] : Prop where\n  eq_of_continuous_of_map_id (s : Set R) [CompactSpace s]\n    (φ ψ : C(s, R) →⋆ₐ[R] A) (hφ : Continuous φ) (hψ : Continuous ψ)\n    (h : φ (.restrict s <| .id R) = ψ (.restrict s <| .id R)) :\n    φ = ψ\n\n"}
{"name":"ContinuousFunctionalCalculus.isCompact_spectrum","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\n⊢ IsCompact (spectrum R a)","decl":"include instCFC in\nlemma ContinuousFunctionalCalculus.isCompact_spectrum (a : A) :\n    IsCompact (spectrum R a) :=\n  isCompact_iff_compactSpace.mpr inferInstance\n\n"}
{"name":"StarAlgHom.ext_continuousMap","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝¹⁰ : CommSemiring R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : Algebra R A\ninst✝¹ : ContinuousMap.UniqueHom R A\na : A\ninst✝ : CompactSpace ↑(spectrum R a)\nφ ψ : StarAlgHom R (ContinuousMap (↑(spectrum R a)) R) A\nhφ : Continuous ⇑φ\nhψ : Continuous ⇑ψ\nh : Eq (φ (ContinuousMap.restrict (spectrum R a) (ContinuousMap.id R))) (ψ (ContinuousMap.restrict (spectrum R a) (ContinuousMap.id R)))\n⊢ Eq φ ψ","decl":"lemma StarAlgHom.ext_continuousMap [UniqueHom R A]\n    (a : A) [CompactSpace (spectrum R a)] (φ ψ : C(spectrum R a, R) →⋆ₐ[R] A)\n    (hφ : Continuous φ) (hψ : Continuous ψ)\n    (h : φ (.restrict (spectrum R a) <| .id R) = ψ (.restrict (spectrum R a) <| .id R)) :\n    φ = ψ :=\n  UniqueHom.eq_of_continuous_of_map_id (spectrum R a) φ ψ hφ hψ h\n\n"}
{"name":"cfcHom_isClosedEmbedding","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\nha : p a\n⊢ Topology.IsClosedEmbedding ⇑(cfcHom ha)","decl":"lemma cfcHom_isClosedEmbedding :\n    IsClosedEmbedding <| (cfcHom ha : C(spectrum R a, R) →⋆ₐ[R] A) :=\n  (ContinuousFunctionalCalculus.exists_cfc_of_predicate a ha).choose_spec.1\n\n"}
{"name":"cfcHom_closedEmbedding","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\nha : p a\n⊢ Topology.IsClosedEmbedding ⇑(cfcHom ha)","decl":"@[deprecated (since := \"2024-10-20\")]\nalias cfcHom_closedEmbedding := cfcHom_isClosedEmbedding\n\n"}
{"name":"cfcHom_continuous","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\nha : p a\n⊢ Continuous ⇑(cfcHom ha)","decl":"@[fun_prop]\nlemma cfcHom_continuous : Continuous (cfcHom ha : C(spectrum R a, R) →⋆ₐ[R] A) :=\n  cfcHom_isClosedEmbedding ha |>.continuous\n\n"}
{"name":"cfcHom_id","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\nha : p a\n⊢ Eq ((cfcHom ha) (ContinuousMap.restrict (spectrum R a) (ContinuousMap.id R))) a","decl":"lemma cfcHom_id :\n    cfcHom ha ((ContinuousMap.id R).restrict <| spectrum R a) = a :=\n  (ContinuousFunctionalCalculus.exists_cfc_of_predicate a ha).choose_spec.2.1\n\n"}
{"name":"cfcHom_map_spectrum","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\nha : p a\nf : ContinuousMap (↑(spectrum R a)) R\n⊢ Eq (spectrum R ((cfcHom ha) f)) (Set.range ⇑f)","decl":"/-- The **spectral mapping theorem** for the continuous functional calculus. -/\nlemma cfcHom_map_spectrum (f : C(spectrum R a, R)) :\n    spectrum R (cfcHom ha f) = Set.range f :=\n  (ContinuousFunctionalCalculus.exists_cfc_of_predicate a ha).choose_spec.2.2.1 f\n\n"}
{"name":"cfcHom_predicate","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\nha : p a\nf : ContinuousMap (↑(spectrum R a)) R\n⊢ p ((cfcHom ha) f)","decl":"lemma cfcHom_predicate (f : C(spectrum R a, R)) :\n    p (cfcHom ha f) :=\n  (ContinuousFunctionalCalculus.exists_cfc_of_predicate a ha).choose_spec.2.2.2 f\n\n"}
{"name":"cfcHom_eq_of_continuous_of_map_id","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : MetricSpace R\ninst✝⁶ : TopologicalSemiring R\ninst✝⁵ : ContinuousStar R\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\nha : p a\ninst✝ : ContinuousMap.UniqueHom R A\nφ : StarAlgHom R (ContinuousMap (↑(spectrum R a)) R) A\nhφ₁ : Continuous ⇑φ\nhφ₂ : Eq (φ (ContinuousMap.restrict (spectrum R a) (ContinuousMap.id R))) a\n⊢ Eq (cfcHom ha) φ","decl":"open scoped ContinuousFunctionalCalculus in\nlemma cfcHom_eq_of_continuous_of_map_id [UniqueHom R A]\n    (φ : C(spectrum R a, R) →⋆ₐ[R] A) (hφ₁ : Continuous φ)\n    (hφ₂ : φ (.restrict (spectrum R a) <| .id R) = a) : cfcHom ha = φ :=\n  (cfcHom ha).ext_continuousMap a φ (cfcHom_isClosedEmbedding ha).continuous hφ₁ <| by\n    rw [cfcHom_id ha, hφ₂]\n\n"}
{"name":"cfcHom_comp","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : MetricSpace R\ninst✝⁶ : TopologicalSemiring R\ninst✝⁵ : ContinuousStar R\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\nha : p a\ninst✝ : ContinuousMap.UniqueHom R A\nf : ContinuousMap (↑(spectrum R a)) R\nf' : ContinuousMap ↑(spectrum R a) ↑(spectrum R ((cfcHom ha) f))\nhff' : ∀ (x : ↑(spectrum R a)), Eq (f x) ↑(f' x)\ng : ContinuousMap (↑(spectrum R ((cfcHom ha) f))) R\n⊢ Eq ((cfcHom ha) (g.comp f')) ((cfcHom ⋯) g)","decl":"theorem cfcHom_comp [UniqueHom R A] (f : C(spectrum R a, R))\n    (f' : C(spectrum R a, spectrum R (cfcHom ha f)))\n    (hff' : ∀ x, f x = f' x) (g : C(spectrum R (cfcHom ha f), R)) :\n    cfcHom ha (g.comp f') = cfcHom (cfcHom_predicate ha f) g := by\n  let φ : C(spectrum R (cfcHom ha f), R) →⋆ₐ[R] A :=\n    (cfcHom ha).comp <| ContinuousMap.compStarAlgHom' R R f'\n  suffices cfcHom (cfcHom_predicate ha f) = φ from DFunLike.congr_fun this.symm g\n  refine cfcHom_eq_of_continuous_of_map_id (cfcHom_predicate ha f) φ ?_ ?_\n  · exact (cfcHom_isClosedEmbedding ha).continuous.comp f'.continuous_precomp\n  · simp only [φ, StarAlgHom.comp_apply, ContinuousMap.compStarAlgHom'_apply]\n    congr\n    ext x\n    simp [hff']\n\n"}
{"name":"cfcL_apply","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na✝ : A\nha : p a✝\na : ContinuousMap (↑(spectrum R a✝)) R\n⊢ Eq ((cfcL ha) a) ((cfcHom ha) a)","decl":"/-- `cfcHom` bundled as a continuous linear map. -/\n@[simps apply]\nnoncomputable def cfcL {a : A} (ha : p a) : C(spectrum R a, R) →L[R] A :=\n  { cfcHom ha with\n    toFun := cfcHom ha\n    map_smul' := map_smul _\n    cont := (cfcHom_isClosedEmbedding ha).continuous }\n\n"}
{"name":"cfc_def","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_3\nA : Type u_4\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nf : R → R\na : A\n⊢ Eq (cfc f a) (dite (And (p a) (ContinuousOn f (spectrum R a))) (fun h => (cfcHom ⋯) { toFun := (spectrum R a).restrict f, continuous_toFun := ⋯ }) fun h => 0)","decl":"open scoped Classical in\n/-- This is the *continuous functional calculus* of an element `a : A` applied to bare functions.\nWhen either `a` does not satisfy the predicate `p` (i.e., `a` is not `IsStarNormal`,\n`IsSelfAdjoint`, or `0 ≤ a` when `R` is `ℂ`, `ℝ`, or `ℝ≥0`, respectively), or when `f : R → R` is\nnot continuous on the spectrum of `a`, then `cfc f a` returns the junk value `0`.\n\nThis is the primary declaration intended for widespread use of the continuous functional calculus,\nand all the API applies to this declaration. For more information, see the module documentation\nfor `Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital`. -/\nnoncomputable irreducible_def cfc (f : R → R) (a : A) : A :=\n  if h : p a ∧ ContinuousOn f (spectrum R a)\n    then cfcHom h.1 ⟨_, h.2.restrict⟩\n    else 0\n\n"}
{"name":"cfc_apply","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nf : R → R\na : A\nha : autoParam (p a) _auto✝\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\n⊢ Eq (cfc f a) ((cfcHom ha) { toFun := (spectrum R a).restrict f, continuous_toFun := ⋯ })","decl":"lemma cfc_apply : cfc f a = cfcHom (a := a) ha ⟨_, hf.restrict⟩ := by\n  rw [cfc_def, dif_pos ⟨ha, hf⟩]\n\n"}
{"name":"cfc_apply_pi","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nι : Type u_3\nf : ι → R → R\na : A\nha : autoParam (p a) _auto✝\nhf : autoParam (∀ (i : ι), ContinuousOn (f i) (spectrum R a)) _auto✝\n⊢ Eq (fun i => cfc (f i) a) fun i => (cfcHom ha) { toFun := (spectrum R a).restrict (f i), continuous_toFun := ⋯ }","decl":"lemma cfc_apply_pi {ι : Type*} (f : ι → R → R) (a : A) (ha : p a := by cfc_tac)\n    (hf : ∀ i, ContinuousOn (f i) (spectrum R a) := by cfc_cont_tac) :\n    (fun i => cfc (f i) a) = (fun i => cfcHom (a := a) ha ⟨_, (hf i).restrict⟩) := by\n  ext i\n  simp only [cfc_apply (f i) a ha (hf i)]\n\n"}
{"name":"cfc_apply_of_not_and","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nf : R → R\na : A\nha : Not (And (p a) (ContinuousOn f (spectrum R a)))\n⊢ Eq (cfc f a) 0","decl":"lemma cfc_apply_of_not_and {f : R → R} (a : A) (ha : ¬ (p a ∧ ContinuousOn f (spectrum R a))) :\n    cfc f a = 0 := by\n  rw [cfc_def, dif_neg ha]\n\n"}
{"name":"cfc_apply_of_not_predicate","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nf : R → R\na : A\nha : Not (p a)\n⊢ Eq (cfc f a) 0","decl":"lemma cfc_apply_of_not_predicate {f : R → R} (a : A) (ha : ¬ p a) :\n    cfc f a = 0 := by\n  rw [cfc_def, dif_neg (not_and_of_not_left _ ha)]\n\n"}
{"name":"cfc_apply_of_not_continuousOn","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nf : R → R\na : A\nhf : Not (ContinuousOn f (spectrum R a))\n⊢ Eq (cfc f a) 0","decl":"lemma cfc_apply_of_not_continuousOn {f : R → R} (a : A) (hf : ¬ ContinuousOn f (spectrum R a)) :\n    cfc f a = 0 := by\n  rw [cfc_def, dif_neg (not_and_of_not_right _ hf)]\n\n"}
{"name":"cfcHom_eq_cfc_extend","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\ng : R → R\nha : p a\nf : ContinuousMap (↑(spectrum R a)) R\n⊢ Eq ((cfcHom ha) f) (cfc (Function.extend Subtype.val (⇑f) g) a)","decl":"lemma cfcHom_eq_cfc_extend {a : A} (g : R → R) (ha : p a) (f : C(spectrum R a, R)) :\n    cfcHom ha f = cfc (Function.extend Subtype.val f g) a := by\n  have h : f = (spectrum R a).restrict (Function.extend Subtype.val f g) := by\n    ext; simp [Subtype.val_injective.extend_apply]\n  have hg : ContinuousOn (Function.extend Subtype.val f g) (spectrum R a) :=\n    continuousOn_iff_continuous_restrict.mpr <| h ▸ map_continuous f\n  rw [cfc_apply ..]\n  congr!\n\n"}
{"name":"cfc_eq_cfcL","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\nf : R → R\nha : p a\nhf : ContinuousOn f (spectrum R a)\n⊢ Eq (cfc f a) ((cfcL ha) { toFun := (spectrum R a).restrict f, continuous_toFun := ⋯ })","decl":"lemma cfc_eq_cfcL {a : A} {f : R → R} (ha : p a) (hf : ContinuousOn f (spectrum R a)) :\n    cfc f a = cfcL ha ⟨_, hf.restrict⟩ := by\n  rw [cfc_def, dif_pos ⟨ha, hf⟩, cfcL_apply]\n\n"}
{"name":"cfc_cases","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nP : A → Prop\na : A\nf : R → R\nh₀ : P 0\nhaf : ∀ (hf : ContinuousOn f (spectrum R a)) (ha : p a), P ((cfcHom ha) { toFun := (spectrum R a).restrict f, continuous_toFun := ⋯ })\n⊢ P (cfc f a)","decl":"lemma cfc_cases (P : A → Prop) (a : A) (f : R → R) (h₀ : P 0)\n    (haf : (hf : ContinuousOn f (spectrum R a)) → (ha : p a) → P (cfcHom ha ⟨_, hf.restrict⟩)) :\n    P (cfc f a) := by\n  by_cases h : p a ∧ ContinuousOn f (spectrum R a)\n  · rw [cfc_apply f a h.1 h.2]\n    exact haf h.2 h.1\n  · simp only [not_and_or] at h\n    obtain (h | h) := h\n    · rwa [cfc_apply_of_not_predicate _ h]\n    · rwa [cfc_apply_of_not_continuousOn _ h]\n\n"}
{"name":"cfc_commute_cfc","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nf g : R → R\na : A\n⊢ Commute (cfc f a) (cfc g a)","decl":"lemma cfc_commute_cfc (f g : R → R) (a : A) : Commute (cfc f a) (cfc g a) := by\n  refine cfc_cases (fun x ↦ Commute x (cfc g a)) a f (by simp) fun hf ha ↦ ?_\n  refine cfc_cases (fun x ↦ Commute _ x) a g (by simp) fun hg _ ↦ ?_\n  exact Commute.all _ _ |>.map _\n\n"}
{"name":"cfc_id","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\nha : autoParam (p a) _auto✝\n⊢ Eq (cfc id a) a","decl":"variable (R) in\nlemma cfc_id (ha : p a := by cfc_tac) : cfc (id : R → R) a = a :=\n  cfc_apply (id : R → R) a ▸ cfcHom_id (p := p) ha\n\n"}
{"name":"cfc_id'","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\nha : autoParam (p a) _auto✝\n⊢ Eq (cfc (fun x => x) a) a","decl":"variable (R) in\nlemma cfc_id' (ha : p a := by cfc_tac) : cfc (fun x : R ↦ x) a = a := cfc_id R a\n\n"}
{"name":"cfc_map_spectrum","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nf : R → R\na : A\nha : autoParam (p a) _auto✝\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\n⊢ Eq (spectrum R (cfc f a)) (Set.image f (spectrum R a))","decl":"/-- The **spectral mapping theorem** for the continuous functional calculus. -/\nlemma cfc_map_spectrum (ha : p a := by cfc_tac)\n    (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac) :\n    spectrum R (cfc f a) = f '' spectrum R a := by\n  simp [cfc_apply f a, cfcHom_map_spectrum (p := p)]\n\n"}
{"name":"cfc_const","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nr : R\na : A\nha : autoParam (p a) _auto✝\n⊢ Eq (cfc (fun x => r) a) ((algebraMap R A) r)","decl":"lemma cfc_const (r : R) (a : A) (ha : p a := by cfc_tac) :\n    cfc (fun _ ↦ r) a = algebraMap R A r := by\n  rw [cfc_apply (fun _ : R ↦ r) a, ← AlgHomClass.commutes (cfcHom ha (p := p)) r]\n  congr\n\n"}
{"name":"cfc_predicate_zero","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\n⊢ p 0","decl":"variable (R) in\ninclude R in\nlemma cfc_predicate_zero : p 0 :=\n  ContinuousFunctionalCalculus.predicate_zero (R := R)\n\n"}
{"name":"cfc_predicate","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nf : R → R\na : A\n⊢ p (cfc f a)","decl":"lemma cfc_predicate (f : R → R) (a : A) : p (cfc f a) :=\n  cfc_cases p a f (cfc_predicate_zero R) fun _ _ ↦ cfcHom_predicate ..\n\n"}
{"name":"cfc_predicate_algebraMap","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nr : R\n⊢ p ((algebraMap R A) r)","decl":"lemma cfc_predicate_algebraMap (r : R) : p (algebraMap R A r) :=\n  cfc_const r (0 : A) (cfc_predicate_zero R) ▸ cfc_predicate (fun _ ↦ r) 0\n\n"}
{"name":"cfc_predicate_one","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\n⊢ p 1","decl":"variable (R) in\ninclude R in\nlemma cfc_predicate_one : p 1 :=\n  map_one (algebraMap R A) ▸ cfc_predicate_algebraMap (1 : R)\n\n"}
{"name":"cfc_congr","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nf g : R → R\na : A\nhfg : Set.EqOn f g (spectrum R a)\n⊢ Eq (cfc f a) (cfc g a)","decl":"lemma cfc_congr {f g : R → R} {a : A} (hfg : (spectrum R a).EqOn f g) :\n    cfc f a = cfc g a := by\n  by_cases h : p a ∧ ContinuousOn g (spectrum R a)\n  · rw [cfc_apply (ha := h.1) (hf := h.2.congr hfg), cfc_apply (ha := h.1) (hf := h.2)]\n    congr\n    exact Set.restrict_eq_iff.mpr hfg\n  · obtain (ha | hg) := not_and_or.mp h\n    · simp [cfc_apply_of_not_predicate a ha]\n    · rw [cfc_apply_of_not_continuousOn a hg, cfc_apply_of_not_continuousOn]\n      exact fun hf ↦ hg (hf.congr hfg.symm)\n\n"}
{"name":"eqOn_of_cfc_eq_cfc","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nf g : R → R\na : A\nh : Eq (cfc f a) (cfc g a)\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nhg : autoParam (ContinuousOn g (spectrum R a)) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Set.EqOn f g (spectrum R a)","decl":"lemma eqOn_of_cfc_eq_cfc {f g : R → R} {a : A} (h : cfc f a = cfc g a)\n    (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac)\n    (hg : ContinuousOn g (spectrum R a) := by cfc_cont_tac) (ha : p a := by cfc_tac) :\n    (spectrum R a).EqOn f g := by\n  rw [cfc_apply f a, cfc_apply g a] at h\n  have := (cfcHom_isClosedEmbedding (show p a from ha) (R := R)).injective h\n  intro x hx\n  congrm($(this) ⟨x, hx⟩)\n\n"}
{"name":"cfc_eq_cfc_iff_eqOn","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nf g : R → R\na : A\nha : autoParam (p a) _auto✝\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nhg : autoParam (ContinuousOn g (spectrum R a)) _auto✝\n⊢ Iff (Eq (cfc f a) (cfc g a)) (Set.EqOn f g (spectrum R a))","decl":"variable {a f g} in\ninclude ha hf hg in\nlemma cfc_eq_cfc_iff_eqOn : cfc f a = cfc g a ↔ (spectrum R a).EqOn f g :=\n  ⟨eqOn_of_cfc_eq_cfc, cfc_congr⟩\n\n"}
{"name":"cfc_one","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\nha : autoParam (p a) _auto✝\n⊢ Eq (cfc 1 a) 1","decl":"include ha in\nlemma cfc_one : cfc (1 : R → R) a = 1 :=\n  cfc_apply (1 : R → R) a ▸ map_one (cfcHom (show p a from ha))\n\n"}
{"name":"cfc_const_one","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\nha : autoParam (p a) _auto✝\n⊢ Eq (cfc (fun x => 1) a) 1","decl":"include ha in\nlemma cfc_const_one : cfc (fun _ : R ↦ 1) a = 1 := cfc_one R a\n\n"}
{"name":"cfc_zero","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\n⊢ Eq (cfc 0 a) 0","decl":"@[simp]\nlemma cfc_zero : cfc (0 : R → R) a = 0 := by\n  by_cases ha : p a\n  · exact cfc_apply (0 : R → R) a ▸ map_zero (cfcHom ha)\n  · rw [cfc_apply_of_not_predicate a ha]\n\n"}
{"name":"cfc_const_zero","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\n⊢ Eq (cfc (fun x => 0) a) 0","decl":"@[simp]\nlemma cfc_const_zero : cfc (fun _ : R ↦ 0) a = 0 :=\n  cfc_zero R a\n\n"}
{"name":"cfc_mul","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nf g : R → R\na : A\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nhg : autoParam (ContinuousOn g (spectrum R a)) _auto✝\n⊢ Eq (cfc (fun x => HMul.hMul (f x) (g x)) a) (HMul.hMul (cfc f a) (cfc g a))","decl":"lemma cfc_mul (f g : R → R) (a : A) (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac)\n    (hg : ContinuousOn g (spectrum R a) := by cfc_cont_tac) :\n    cfc (fun x ↦ f x * g x) a = cfc f a * cfc g a := by\n  by_cases ha : p a\n  · rw [cfc_apply f a, cfc_apply g a, ← map_mul, cfc_apply _ a]\n    congr\n  · simp [cfc_apply_of_not_predicate a ha]\n\n"}
{"name":"cfc_pow","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nf : R → R\nn : Nat\na : A\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Eq (cfc (fun x => HPow.hPow (f x) n) a) (HPow.hPow (cfc f a) n)","decl":"lemma cfc_pow (f : R → R) (n : ℕ) (a : A)\n    (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac) (ha : p a := by cfc_tac) :\n    cfc (fun x ↦ (f x) ^ n) a = cfc f a ^ n := by\n  rw [cfc_apply f a, ← map_pow, cfc_apply _ a]\n  congr\n\n"}
{"name":"cfc_add","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\nf g : R → R\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nhg : autoParam (ContinuousOn g (spectrum R a)) _auto✝\n⊢ Eq (cfc (fun x => HAdd.hAdd (f x) (g x)) a) (HAdd.hAdd (cfc f a) (cfc g a))","decl":"lemma cfc_add (f g : R → R) (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac)\n    (hg : ContinuousOn g (spectrum R a) := by cfc_cont_tac) :\n    cfc (fun x ↦ f x + g x) a = cfc f a + cfc g a := by\n  by_cases ha : p a\n  · rw [cfc_apply f a, cfc_apply g a, ← map_add, cfc_apply _ a]\n    congr\n  · simp [cfc_apply_of_not_predicate a ha]\n\n"}
{"name":"cfc_const_add","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nr : R\nf : R → R\na : A\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Eq (cfc (fun x => HAdd.hAdd r (f x)) a) (HAdd.hAdd ((algebraMap R A) r) (cfc f a))","decl":"lemma cfc_const_add (r : R) (f : R → R) (a : A)\n    (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac) (ha : p a := by cfc_tac) :\n    cfc (fun x => r + f x) a = algebraMap R A r + cfc f a := by\n  have : (fun z => r + f z) = (fun z => (fun _ => r) z + f z) := by ext; simp\n  rw [this, cfc_add a _ _ (continuousOn_const (c := r)) hf, cfc_const r a ha]\n\n"}
{"name":"cfc_add_const","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nr : R\nf : R → R\na : A\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Eq (cfc (fun x => HAdd.hAdd (f x) r) a) (HAdd.hAdd (cfc f a) ((algebraMap R A) r))","decl":"lemma cfc_add_const (r : R) (f : R → R) (a : A)\n    (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac) (ha : p a := by cfc_tac) :\n    cfc (fun x => f x + r) a = cfc f a + algebraMap R A r := by\n  rw [add_comm (cfc f a)]\n  conv_lhs => simp only [add_comm]\n  exact cfc_const_add r f a hf ha\n\n"}
{"name":"cfc_sum","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nι : Type u_3\nf : ι → R → R\na : A\ns : Finset ι\nhf : autoParam (∀ (i : ι), Membership.mem s i → ContinuousOn (f i) (spectrum R a)) _auto✝\n⊢ Eq (cfc (s.sum fun i => f i) a) (s.sum fun i => cfc (f i) a)","decl":"open Finset in\nlemma cfc_sum {ι : Type*} (f : ι → R → R) (a : A) (s : Finset ι)\n    (hf : ∀ i ∈ s, ContinuousOn (f i) (spectrum R a) := by cfc_cont_tac) :\n    cfc (∑ i ∈ s, f i)  a = ∑ i ∈ s, cfc (f i) a := by\n  by_cases ha : p a\n  · have hsum : s.sum f = fun z => ∑ i ∈ s, f i z := by ext; simp\n    have hf' : ContinuousOn (∑ i : s, f i) (spectrum R a) := by\n      rw [sum_coe_sort s, hsum]\n      exact continuousOn_finset_sum s fun i hi => hf i hi\n    rw [← sum_coe_sort s, ← sum_coe_sort s]\n    rw [cfc_apply_pi _ a _ (fun ⟨i, hi⟩ => hf i hi), ← map_sum, cfc_apply _ a ha hf']\n    congr 1\n    ext\n    simp\n  · simp [cfc_apply_of_not_predicate a ha]\n\n"}
{"name":"cfc_sum_univ","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : MetricSpace R\ninst✝⁶ : TopologicalSemiring R\ninst✝⁵ : ContinuousStar R\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nι : Type u_3\ninst✝ : Fintype ι\nf : ι → R → R\na : A\nhf : autoParam (∀ (i : ι), ContinuousOn (f i) (spectrum R a)) _auto✝\n⊢ Eq (cfc (Finset.univ.sum fun i => f i) a) (Finset.univ.sum fun i => cfc (f i) a)","decl":"open Finset in\nlemma cfc_sum_univ {ι : Type*} [Fintype ι] (f : ι → R → R) (a : A)\n    (hf : ∀ i, ContinuousOn (f i) (spectrum R a) := by cfc_cont_tac) :\n    cfc (∑ i, f i) a = ∑ i, cfc (f i) a :=\n  cfc_sum f a _ fun i _ ↦ hf i\n\n"}
{"name":"cfc_smul","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹³ : CommSemiring R\ninst✝¹² : StarRing R\ninst✝¹¹ : MetricSpace R\ninst✝¹⁰ : TopologicalSemiring R\ninst✝⁹ : ContinuousStar R\ninst✝⁸ : TopologicalSpace A\ninst✝⁷ : Ring A\ninst✝⁶ : StarRing A\ninst✝⁵ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nS : Type u_3\ninst✝⁴ : SMul S R\ninst✝³ : ContinuousConstSMul S R\ninst✝² : SMulZeroClass S A\ninst✝¹ : IsScalarTower S R A\ninst✝ : IsScalarTower S R (R → R)\ns : S\nf : R → R\na : A\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\n⊢ Eq (cfc (fun x => HSMul.hSMul s (f x)) a) (HSMul.hSMul s (cfc f a))","decl":"lemma cfc_smul {S : Type*} [SMul S R] [ContinuousConstSMul S R]\n    [SMulZeroClass S A] [IsScalarTower S R A] [IsScalarTower S R (R → R)]\n    (s : S) (f : R → R) (a : A) (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac) :\n    cfc (fun x ↦ s • f x) a = s • cfc f a := by\n  by_cases ha : p a\n  · rw [cfc_apply f a, cfc_apply _ a]\n    simp_rw [← Pi.smul_def, ← smul_one_smul R s _]\n    rw [← map_smul]\n    congr\n  · simp [cfc_apply_of_not_predicate a ha]\n\n"}
{"name":"cfc_const_mul","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nr : R\nf : R → R\na : A\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\n⊢ Eq (cfc (fun x => HMul.hMul r (f x)) a) (HSMul.hSMul r (cfc f a))","decl":"lemma cfc_const_mul (r : R) (f : R → R) (a : A)\n    (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac) :\n    cfc (fun x ↦ r * f x) a = r • cfc f a :=\n  cfc_smul r f a\n\n"}
{"name":"cfc_star","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nf : R → R\na : A\n⊢ Eq (cfc (fun x => Star.star (f x)) a) (Star.star (cfc f a))","decl":"lemma cfc_star (f : R → R) (a : A) : cfc (fun x ↦ star (f x)) a = star (cfc f a) := by\n  by_cases h : p a ∧ ContinuousOn f (spectrum R a)\n  · obtain ⟨ha, hf⟩ := h\n    rw [cfc_apply f a, ← map_star, cfc_apply _ a]\n    congr\n  · obtain (ha | hf) := not_and_or.mp h\n    · simp [cfc_apply_of_not_predicate a ha]\n    · rw [cfc_apply_of_not_continuousOn a hf, cfc_apply_of_not_continuousOn, star_zero]\n      exact fun hf_star ↦ hf <| by simpa using hf_star.star\n\n"}
{"name":"cfc_pow_id","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\nn : Nat\nha : autoParam (p a) _auto✝\n⊢ Eq (cfc (fun x => HPow.hPow x n) a) (HPow.hPow a n)","decl":"lemma cfc_pow_id (a : A) (n : ℕ) (ha : p a := by cfc_tac) : cfc (· ^ n : R → R) a = a ^ n := by\n  rw [cfc_pow .., cfc_id' ..]\n\n"}
{"name":"cfc_smul_id","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹³ : CommSemiring R\ninst✝¹² : StarRing R\ninst✝¹¹ : MetricSpace R\ninst✝¹⁰ : TopologicalSemiring R\ninst✝⁹ : ContinuousStar R\ninst✝⁸ : TopologicalSpace A\ninst✝⁷ : Ring A\ninst✝⁶ : StarRing A\ninst✝⁵ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nS : Type u_3\ninst✝⁴ : SMul S R\ninst✝³ : ContinuousConstSMul S R\ninst✝² : SMulZeroClass S A\ninst✝¹ : IsScalarTower S R A\ninst✝ : IsScalarTower S R (R → R)\ns : S\na : A\nha : autoParam (p a) _auto✝\n⊢ Eq (cfc (fun x => HSMul.hSMul s x) a) (HSMul.hSMul s a)","decl":"lemma cfc_smul_id {S : Type*} [SMul S R] [ContinuousConstSMul S R]\n    [SMulZeroClass S A] [IsScalarTower S R A] [IsScalarTower S R (R → R)]\n    (s : S) (a : A) (ha : p a := by cfc_tac) : cfc (s • · : R → R) a = s • a := by\n  rw [cfc_smul .., cfc_id' ..]\n\n"}
{"name":"cfc_const_mul_id","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nr : R\na : A\nha : autoParam (p a) _auto✝\n⊢ Eq (cfc (fun x => HMul.hMul r x) a) (HSMul.hSMul r a)","decl":"lemma cfc_const_mul_id (r : R) (a : A) (ha : p a := by cfc_tac) : cfc (r * ·) a = r • a :=\n  cfc_smul_id r a\n\n"}
{"name":"cfc_star_id","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\nha : autoParam (p a) _auto✝\n⊢ Eq (cfc (fun x => Star.star x) a) (Star.star a)","decl":"include ha in\nlemma cfc_star_id : cfc (star · : R → R) a = star a := by\n  rw [cfc_star .., cfc_id' ..]\n\n"}
{"name":"cfc_eval_X","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\nha : autoParam (p a) _auto✝\n⊢ Eq (cfc (fun a => Polynomial.eval a Polynomial.X) a) a","decl":"lemma cfc_eval_X (ha : p a := by cfc_tac) : cfc (X : R[X]).eval a = a := by\n  simpa using cfc_id R a\n\n"}
{"name":"cfc_eval_C","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nr : R\na : A\nha : autoParam (p a) _auto✝\n⊢ Eq (cfc (fun a => Polynomial.eval a (Polynomial.C r)) a) ((algebraMap R A) r)","decl":"lemma cfc_eval_C (r : R) (a : A) (ha : p a := by cfc_tac) :\n    cfc (C r).eval a = algebraMap R A r := by\n  simp [cfc_const r a]\n\n"}
{"name":"cfc_map_polynomial","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nq : Polynomial R\nf : R → R\na : A\nha : autoParam (p a) _auto✝\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\n⊢ Eq (cfc (fun x => Polynomial.eval (f x) q) a) ((Polynomial.aeval (cfc f a)) q)","decl":"lemma cfc_map_polynomial (q : R[X]) (f : R → R) (a : A) (ha : p a := by cfc_tac)\n    (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac) :\n    cfc (fun x ↦ q.eval (f x)) a = aeval (cfc f a) q := by\n  induction q using Polynomial.induction_on with\n  | h_C r => simp [cfc_const r a]\n  | h_add q₁ q₂ hq₁ hq₂ =>\n    simp only [eval_add, map_add, ← hq₁, ← hq₂, cfc_add a (q₁.eval <| f ·) (q₂.eval <| f ·)]\n  | h_monomial n r _ =>\n    simp only [eval_mul, eval_C, eval_pow, eval_X, map_mul, aeval_C, map_pow, aeval_X]\n    rw [cfc_const_mul .., cfc_pow _ (n + 1) _, ← smul_eq_mul, algebraMap_smul]\n\n"}
{"name":"cfc_polynomial","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nq : Polynomial R\na : A\nha : autoParam (p a) _auto✝\n⊢ Eq (cfc (fun a => Polynomial.eval a q) a) ((Polynomial.aeval a) q)","decl":"lemma cfc_polynomial (q : R[X]) (a : A) (ha : p a := by cfc_tac) :\n    cfc q.eval a = aeval a q := by\n  rw [cfc_map_polynomial .., cfc_id' ..]\n\n"}
{"name":"cfc_comp","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : MetricSpace R\ninst✝⁶ : TopologicalSemiring R\ninst✝⁵ : ContinuousStar R\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\ninst✝ : ContinuousMap.UniqueHom R A\ng f : R → R\na : A\nha : autoParam (p a) _auto✝\nhg : autoParam (ContinuousOn g (Set.image f (spectrum R a))) _auto✝\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\n⊢ Eq (cfc (Function.comp g f) a) (cfc g (cfc f a))","decl":"lemma cfc_comp (g f : R → R) (a : A) (ha : p a := by cfc_tac)\n    (hg : ContinuousOn g (f '' spectrum R a) := by cfc_cont_tac)\n    (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac) :\n    cfc (g ∘ f) a = cfc g (cfc f a) := by\n  have := hg.comp hf <| (spectrum R a).mapsTo_image f\n  have sp_eq : spectrum R (cfcHom (show p a from ha) (ContinuousMap.mk _ hf.restrict)) =\n      f '' (spectrum R a) := by\n    rw [cfcHom_map_spectrum (by exact ha) _]\n    ext\n    simp\n  rw [cfc_apply .., cfc_apply f a,\n    cfc_apply _ _ (cfcHom_predicate (show p a from ha) _) (by convert hg), ← cfcHom_comp _ _]\n  swap\n  · exact ContinuousMap.mk _ <| hf.restrict.codRestrict fun x ↦ by rw [sp_eq]; use x.1; simp\n  · congr\n  · exact fun _ ↦ rfl\n\n"}
{"name":"cfc_comp'","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : MetricSpace R\ninst✝⁶ : TopologicalSemiring R\ninst✝⁵ : ContinuousStar R\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\ninst✝ : ContinuousMap.UniqueHom R A\ng f : R → R\na : A\nhg : autoParam (ContinuousOn g (Set.image f (spectrum R a))) _auto✝\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Eq (cfc (fun x => g (f x)) a) (cfc g (cfc f a))","decl":"lemma cfc_comp' (g f : R → R) (a : A) (hg : ContinuousOn g (f '' spectrum R a) := by cfc_cont_tac)\n    (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac) (ha : p a := by cfc_tac) :\n    cfc (g <| f ·) a = cfc g (cfc f a) :=\n  cfc_comp g f a\n\n"}
{"name":"cfc_comp_pow","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : MetricSpace R\ninst✝⁶ : TopologicalSemiring R\ninst✝⁵ : ContinuousStar R\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\ninst✝ : ContinuousMap.UniqueHom R A\nf : R → R\nn : Nat\na : A\nhf : autoParam (ContinuousOn f (Set.image (fun x => HPow.hPow x n) (spectrum R a))) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Eq (cfc (fun x => f (HPow.hPow x n)) a) (cfc f (HPow.hPow a n))","decl":"lemma cfc_comp_pow (f : R → R) (n : ℕ) (a : A)\n    (hf : ContinuousOn f ((· ^ n) '' (spectrum R a)) := by cfc_cont_tac) (ha : p a := by cfc_tac) :\n    cfc (f <| · ^ n) a = cfc f (a ^ n) := by\n  rw [cfc_comp' .., cfc_pow_id ..]\n\n"}
{"name":"cfc_comp_smul","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹⁴ : CommSemiring R\ninst✝¹³ : StarRing R\ninst✝¹² : MetricSpace R\ninst✝¹¹ : TopologicalSemiring R\ninst✝¹⁰ : ContinuousStar R\ninst✝⁹ : TopologicalSpace A\ninst✝⁸ : Ring A\ninst✝⁷ : StarRing A\ninst✝⁶ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\ninst✝⁵ : ContinuousMap.UniqueHom R A\nS : Type u_3\ninst✝⁴ : SMul S R\ninst✝³ : ContinuousConstSMul S R\ninst✝² : SMulZeroClass S A\ninst✝¹ : IsScalarTower S R A\ninst✝ : IsScalarTower S R (R → R)\ns : S\nf : R → R\na : A\nhf : autoParam (ContinuousOn f (Set.image (fun x => HSMul.hSMul s x) (spectrum R a))) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Eq (cfc (fun x => f (HSMul.hSMul s x)) a) (cfc f (HSMul.hSMul s a))","decl":"lemma cfc_comp_smul {S : Type*} [SMul S R] [ContinuousConstSMul S R] [SMulZeroClass S A]\n    [IsScalarTower S R A] [IsScalarTower S R (R → R)] (s : S) (f : R → R) (a : A)\n    (hf : ContinuousOn f ((s • ·) '' (spectrum R a)) := by cfc_cont_tac) (ha : p a := by cfc_tac) :\n    cfc (f <| s • ·) a = cfc f (s • a) := by\n  rw [cfc_comp' .., cfc_smul_id ..]\n\n"}
{"name":"cfc_comp_const_mul","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : MetricSpace R\ninst✝⁶ : TopologicalSemiring R\ninst✝⁵ : ContinuousStar R\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\ninst✝ : ContinuousMap.UniqueHom R A\nr : R\nf : R → R\na : A\nhf : autoParam (ContinuousOn f (Set.image (fun x => HMul.hMul r x) (spectrum R a))) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Eq (cfc (fun x => f (HMul.hMul r x)) a) (cfc f (HSMul.hSMul r a))","decl":"lemma cfc_comp_const_mul (r : R) (f : R → R) (a : A)\n    (hf : ContinuousOn f ((r * ·) '' (spectrum R a)) := by cfc_cont_tac) (ha : p a := by cfc_tac) :\n    cfc (f <| r * ·) a = cfc f (r • a) := by\n  rw [cfc_comp' .., cfc_const_mul_id ..]\n\n"}
{"name":"cfc_comp_star","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : MetricSpace R\ninst✝⁶ : TopologicalSemiring R\ninst✝⁵ : ContinuousStar R\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\ninst✝ : ContinuousMap.UniqueHom R A\nf : R → R\na : A\nhf : autoParam (ContinuousOn f (Set.image Star.star (spectrum R a))) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Eq (cfc (fun x => f (Star.star x)) a) (cfc f (Star.star a))","decl":"lemma cfc_comp_star (f : R → R) (a : A)\n    (hf : ContinuousOn f (star '' (spectrum R a)) := by cfc_cont_tac) (ha : p a := by cfc_tac) :\n    cfc (f <| star ·) a = cfc f (star a) := by\n  rw [cfc_comp' .., cfc_star_id ..]\n\n"}
{"name":"cfc_comp_polynomial","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : MetricSpace R\ninst✝⁶ : TopologicalSemiring R\ninst✝⁵ : ContinuousStar R\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\ninst✝ : ContinuousMap.UniqueHom R A\nq : Polynomial R\nf : R → R\na : A\nhf : autoParam (ContinuousOn f (Set.image (fun a => Polynomial.eval a q) (spectrum R a))) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Eq (cfc (fun x => f (Polynomial.eval x q)) a) (cfc f ((Polynomial.aeval a) q))","decl":"open Polynomial in\nlemma cfc_comp_polynomial (q : R[X]) (f : R → R) (a : A)\n    (hf : ContinuousOn f (q.eval '' (spectrum R a)) := by cfc_cont_tac) (ha : p a := by cfc_tac) :\n    cfc (f <| q.eval ·) a = cfc f (aeval a q) := by\n  rw [cfc_comp' .., cfc_polynomial ..]\n\n"}
{"name":"CFC.eq_algebraMap_of_spectrum_subset_singleton","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\nr : R\nh_spec : HasSubset.Subset (spectrum R a) (Singleton.singleton r)\nha : autoParam (p a) _auto✝\n⊢ Eq a ((algebraMap R A) r)","decl":"lemma CFC.eq_algebraMap_of_spectrum_subset_singleton (r : R) (h_spec : spectrum R a ⊆ {r})\n    (ha : p a := by cfc_tac) : a = algebraMap R A r := by\n  simpa [cfc_id R a, cfc_const r a] using\n    cfc_congr (f := id) (g := fun _ : R ↦ r) (a := a) fun x hx ↦ by simpa using h_spec hx\n\n"}
{"name":"CFC.eq_zero_of_spectrum_subset_zero","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\nh_spec : HasSubset.Subset (spectrum R a) (Singleton.singleton 0)\nha : autoParam (p a) _auto✝\n⊢ Eq a 0","decl":"lemma CFC.eq_zero_of_spectrum_subset_zero (h_spec : spectrum R a ⊆ {0}) (ha : p a := by cfc_tac) :\n    a = 0 := by\n  simpa using eq_algebraMap_of_spectrum_subset_singleton a 0 h_spec\n\n"}
{"name":"CFC.eq_one_of_spectrum_subset_one","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\nh_spec : HasSubset.Subset (spectrum R a) (Singleton.singleton 1)\nha : autoParam (p a) _auto✝\n⊢ Eq a 1","decl":"lemma CFC.eq_one_of_spectrum_subset_one (h_spec : spectrum R a ⊆ {1}) (ha : p a := by cfc_tac) :\n    a = 1 := by\n  simpa using eq_algebraMap_of_spectrum_subset_singleton a 1 h_spec\n\n"}
{"name":"CFC.spectrum_algebraMap_subset","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nr : R\n⊢ HasSubset.Subset (spectrum R ((algebraMap R A) r)) (Singleton.singleton r)","decl":"include instCFC in\nlemma CFC.spectrum_algebraMap_subset (r : R) : spectrum R (algebraMap R A r) ⊆ {r} := by\n  rw [← cfc_const r 0 (cfc_predicate_zero R),\n    cfc_map_spectrum (fun _ ↦ r) 0 (cfc_predicate_zero R)]\n  rintro - ⟨x, -, rfl⟩\n  simp\n\n"}
{"name":"CFC.spectrum_algebraMap_eq","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : MetricSpace R\ninst✝⁶ : TopologicalSemiring R\ninst✝⁵ : ContinuousStar R\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\ninst✝ : Nontrivial A\nr : R\n⊢ Eq (spectrum R ((algebraMap R A) r)) (Singleton.singleton r)","decl":"include instCFC in\nlemma CFC.spectrum_algebraMap_eq [Nontrivial A] (r : R) :\n    spectrum R (algebraMap R A r) = {r} := by\n  have hp : p 0 := cfc_predicate_zero R\n  rw [← cfc_const r 0 hp, cfc_map_spectrum (fun _ => r) 0 hp]\n  exact Set.Nonempty.image_const (⟨0, spectrum.zero_mem (R := R) not_isUnit_zero⟩) _\n\n"}
{"name":"CFC.spectrum_zero_eq","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : MetricSpace R\ninst✝⁶ : TopologicalSemiring R\ninst✝⁵ : ContinuousStar R\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\ninst✝ : Nontrivial A\n⊢ Eq (spectrum R 0) (Singleton.singleton 0)","decl":"include instCFC in\nlemma CFC.spectrum_zero_eq [Nontrivial A] :\n    spectrum R (0 : A) = {0} := by\n  have : (0 : A) = algebraMap R A 0 := Eq.symm (RingHom.map_zero (algebraMap R A))\n  rw [this, spectrum_algebraMap_eq]\n\n"}
{"name":"CFC.spectrum_one_eq","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : MetricSpace R\ninst✝⁶ : TopologicalSemiring R\ninst✝⁵ : ContinuousStar R\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\ninst✝ : Nontrivial A\n⊢ Eq (spectrum R 1) (Singleton.singleton 1)","decl":"include instCFC in\nlemma CFC.spectrum_one_eq [Nontrivial A] :\n    spectrum R (1 : A) = {1} := by\n  have : (1 : A) = algebraMap R A 1 := Eq.symm (RingHom.map_one (algebraMap R A))\n  rw [this, spectrum_algebraMap_eq]\n\n"}
{"name":"cfc_algebraMap","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nr : R\nf : R → R\n⊢ Eq (cfc f ((algebraMap R A) r)) ((algebraMap R A) (f r))","decl":"@[simp]\nlemma cfc_algebraMap (r : R) (f : R → R) : cfc f (algebraMap R A r) = algebraMap R A (f r) := by\n  have h₁ : ContinuousOn f (spectrum R (algebraMap R A r)) :=\n  continuousOn_singleton _ _ |>.mono <| CFC.spectrum_algebraMap_subset r\n  rw [cfc_apply f (algebraMap R A r) (cfc_predicate_algebraMap r),\n    ← AlgHomClass.commutes (cfcHom (p := p) (cfc_predicate_algebraMap r)) (f r)]\n  congr\n  ext ⟨x, hx⟩\n  apply CFC.spectrum_algebraMap_subset r at hx\n  simp_all\n\n"}
{"name":"cfc_apply_zero","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nf : R → R\n⊢ Eq (cfc f 0) ((algebraMap R A) (f 0))","decl":"@[simp] lemma cfc_apply_zero {f : R → R} : cfc f (0 : A) = algebraMap R A (f 0) := by\n  simpa using cfc_algebraMap (A := A) 0 f\n\n"}
{"name":"cfc_apply_one","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nf : R → R\n⊢ Eq (cfc f 1) ((algebraMap R A) (f 1))","decl":"@[simp] lemma cfc_apply_one {f : R → R} : cfc f (1 : A) = algebraMap R A (f 1) := by\n  simpa using cfc_algebraMap (A := A) 1 f\n\n"}
{"name":"IsStarNormal.cfc_map","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : TopologicalSpace A\ninst✝² : Ring A\ninst✝¹ : StarRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nf : R → R\na : A\n⊢ IsStarNormal (cfc f a)","decl":"@[simp]\ninstance IsStarNormal.cfc_map (f : R → R) (a : A) : IsStarNormal (cfc f a) where\n  star_comm_self := by\n    rw [Commute, SemiconjBy]\n    by_cases h : ContinuousOn f (spectrum R a)\n    · rw [← cfc_star, ← cfc_mul .., ← cfc_mul ..]\n      congr! 2\n      exact mul_comm _ _\n    · simp [cfc_apply_of_not_continuousOn a h]\n\n-- The following two lemmas are just `cfc_predicate`, but specific enough for the `@[simp]` tag.\n"}
{"name":"IsSelfAdjoint.cfc","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : MetricSpace R\ninst✝⁶ : TopologicalSemiring R\ninst✝⁵ : ContinuousStar R\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : ContinuousFunctionalCalculus R IsSelfAdjoint\nf : R → R\na : A\n⊢ IsSelfAdjoint (cfc f a)","decl":"@[simp]\nprotected lemma IsSelfAdjoint.cfc [ContinuousFunctionalCalculus R (IsSelfAdjoint : A → Prop)]\n    {f : R → R} {a : A} : IsSelfAdjoint (cfc f a) :=\n  cfc_predicate _ _\n\n"}
{"name":"cfc_nonneg_of_predicate","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝¹⁰ : CommSemiring R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : Algebra R A\ninst✝¹ : PartialOrder A\ninst✝ : ContinuousFunctionalCalculus R fun a => LE.le 0 a\nf : R → R\na : A\n⊢ LE.le 0 (cfc f a)","decl":"@[simp]\nlemma cfc_nonneg_of_predicate [PartialOrder A]\n    [ContinuousFunctionalCalculus R (fun (a : A) => 0 ≤ a)] {f : R → R} {a : A} : 0 ≤ cfc f a :=\n  cfc_predicate _ _\n\n"}
{"name":"CFC.spectrum_nonempty","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : MetricSpace R\ninst✝⁶ : TopologicalSemiring R\ninst✝⁵ : ContinuousStar R\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\ninst✝ : Nontrivial A\na : A\nha : autoParam (p a) _auto✝\n⊢ (spectrum R a).Nonempty","decl":"variable (R) in\n/-- In an `R`-algebra with a continuous functional calculus, every element satisfying the predicate\nhas nonempty `R`-spectrum. -/\nlemma CFC.spectrum_nonempty [Nontrivial A] (a : A) (ha : p a := by cfc_tac) :\n    (spectrum R a).Nonempty := by\n  by_contra! h\n  apply one_ne_zero (α := A)\n  rw [← cfc_one R a, ← cfc_zero R a]\n  exact cfc_congr fun x hx ↦ by simp_all\n\n"}
{"name":"isUnit_cfc_iff","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁹ : Semifield R\ninst✝⁸ : StarRing R\ninst✝⁷ : MetricSpace R\ninst✝⁶ : TopologicalSemiring R\ninst✝⁵ : ContinuousStar R\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : ContinuousFunctionalCalculus R p\nf : R → R\na : A\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Iff (IsUnit (cfc f a)) (∀ (x : R), Membership.mem (spectrum R a) x → Ne (f x) 0)","decl":"lemma isUnit_cfc_iff (f : R → R) (a : A) (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac)\n    (ha : p a := by cfc_tac) : IsUnit (cfc f a) ↔ ∀ x ∈ spectrum R a, f x ≠ 0 := by\n  rw [← spectrum.zero_not_mem_iff R, cfc_map_spectrum ..]\n  simp\n\n"}
{"name":"isUnit_cfc","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁹ : Semifield R\ninst✝⁸ : StarRing R\ninst✝⁷ : MetricSpace R\ninst✝⁶ : TopologicalSemiring R\ninst✝⁵ : ContinuousStar R\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : ContinuousFunctionalCalculus R p\nf : R → R\na : A\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nha : autoParam (p a) _auto✝\na✝ : ∀ (x : R), Membership.mem (spectrum R a) x → Ne (f x) 0\n⊢ IsUnit (cfc f a)","decl":"alias ⟨_, isUnit_cfc⟩ := isUnit_cfc_iff\n\n"}
{"name":"val_cfcUnits","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁹ : Semifield R\ninst✝⁸ : StarRing R\ninst✝⁷ : MetricSpace R\ninst✝⁶ : TopologicalSemiring R\ninst✝⁵ : ContinuousStar R\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : ContinuousFunctionalCalculus R p\nf : R → R\na : A\nhf' : ∀ (x : R), Membership.mem (spectrum R a) x → Ne (f x) 0\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Eq (↑(cfcUnits f a hf' hf ha)) (cfc f a)","decl":"/-- Bundle `cfc f a` into a unit given a proof that `f` is nonzero on the spectrum of `a`. -/\n@[simps]\nnoncomputable def cfcUnits (hf' : ∀ x ∈ spectrum R a, f x ≠ 0)\n    (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac) (ha : p a := by cfc_tac) : Aˣ where\n  val := cfc f a\n  inv := cfc (fun x ↦ (f x)⁻¹) a\n  val_inv := by\n    rw [← cfc_mul .., ← cfc_one R a]\n    exact cfc_congr fun _ _ ↦ by aesop\n  inv_val := by\n    rw [← cfc_mul .., ← cfc_one R a]\n    exact cfc_congr fun _ _ ↦ by aesop\n\n"}
{"name":"val_inv_cfcUnits","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁹ : Semifield R\ninst✝⁸ : StarRing R\ninst✝⁷ : MetricSpace R\ninst✝⁶ : TopologicalSemiring R\ninst✝⁵ : ContinuousStar R\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : ContinuousFunctionalCalculus R p\nf : R → R\na : A\nhf' : ∀ (x : R), Membership.mem (spectrum R a) x → Ne (f x) 0\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Eq (↑(Inv.inv (cfcUnits f a hf' hf ha))) (cfc (fun x => Inv.inv (f x)) a)","decl":"/-- Bundle `cfc f a` into a unit given a proof that `f` is nonzero on the spectrum of `a`. -/\n@[simps]\nnoncomputable def cfcUnits (hf' : ∀ x ∈ spectrum R a, f x ≠ 0)\n    (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac) (ha : p a := by cfc_tac) : Aˣ where\n  val := cfc f a\n  inv := cfc (fun x ↦ (f x)⁻¹) a\n  val_inv := by\n    rw [← cfc_mul .., ← cfc_one R a]\n    exact cfc_congr fun _ _ ↦ by aesop\n  inv_val := by\n    rw [← cfc_mul .., ← cfc_one R a]\n    exact cfc_congr fun _ _ ↦ by aesop\n\n"}
{"name":"cfcUnits_pow","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹⁰ : Semifield R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : Algebra R A\ninst✝¹ : ContinuousFunctionalCalculus R p\ninst✝ : HasContinuousInv₀ R\nf : R → R\na : A\nhf' : ∀ (x : R), Membership.mem (spectrum R a) x → Ne (f x) 0\nn : Nat\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Eq (HPow.hPow (cfcUnits f a hf' ⋯ ⋯) n) (cfcUnits (fun x => HPow.hPow (f x) n) a ⋯ ⋯ ⋯)","decl":"lemma cfcUnits_pow (hf' : ∀ x ∈ spectrum R a, f x ≠ 0) (n : ℕ)\n    (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac) (ha : p a := by cfc_tac) :\n    (cfcUnits f a hf') ^ n =\n      cfcUnits _ _ (forall₂_imp (fun _ _ ↦ pow_ne_zero n) hf') (hf := hf.pow n) := by\n  ext\n  cases n with\n  | zero => simp [cfc_const_one R a]\n  | succ n => simp [cfc_pow f _ a]\n\n"}
{"name":"cfc_inv","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹⁰ : Semifield R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : Algebra R A\ninst✝¹ : ContinuousFunctionalCalculus R p\ninst✝ : HasContinuousInv₀ R\nf : R → R\na : A\nhf' : ∀ (x : R), Membership.mem (spectrum R a) x → Ne (f x) 0\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Eq (cfc (fun x => Inv.inv (f x)) a) (Ring.inverse (cfc f a))","decl":"lemma cfc_inv (hf' : ∀ x ∈ spectrum R a, f x ≠ 0)\n    (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac) (ha : p a := by cfc_tac) :\n    cfc (fun x ↦ (f x) ⁻¹) a = Ring.inverse (cfc f a) := by\n  rw [← val_inv_cfcUnits f a hf', ← val_cfcUnits f a hf', Ring.inverse_unit]\n\n"}
{"name":"cfc_inv_id","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹⁰ : Semifield R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : Algebra R A\ninst✝¹ : ContinuousFunctionalCalculus R p\ninst✝ : HasContinuousInv₀ R\na : Units A\nha : autoParam (p ↑a) _auto✝\n⊢ Eq (cfc (fun x => Inv.inv x) ↑a) ↑(Inv.inv a)","decl":"lemma cfc_inv_id (a : Aˣ) (ha : p a := by cfc_tac) :\n    cfc (fun x ↦ x⁻¹ : R → R) (a : A) = a⁻¹ := by\n  rw [← Ring.inverse_unit]\n  convert cfc_inv (id : R → R) (a : A) ?_\n  · exact (cfc_id R (a : A)).symm\n  · rintro x hx rfl\n    exact spectrum.zero_not_mem R a.isUnit hx\n\n"}
{"name":"cfc_map_div","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹⁰ : Semifield R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : Algebra R A\ninst✝¹ : ContinuousFunctionalCalculus R p\ninst✝ : HasContinuousInv₀ R\nf g : R → R\na : A\nhg' : ∀ (x : R), Membership.mem (spectrum R a) x → Ne (g x) 0\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nhg : autoParam (ContinuousOn g (spectrum R a)) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Eq (cfc (fun x => HDiv.hDiv (f x) (g x)) a) (HMul.hMul (cfc f a) (Ring.inverse (cfc g a)))","decl":"lemma cfc_map_div (f g : R → R) (a : A) (hg' : ∀ x ∈ spectrum R a, g x ≠ 0)\n    (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac)\n    (hg : ContinuousOn g (spectrum R a) := by cfc_cont_tac) (ha : p a := by cfc_tac) :\n    cfc (fun x ↦ f x / g x) a = cfc f a * Ring.inverse (cfc g a) := by\n  simp only [div_eq_mul_inv]\n  rw [cfc_mul .., cfc_inv g a hg']\n\n"}
{"name":"Units.continuousOn_inv₀_spectrum","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_3\nA : Type u_4\ninst✝⁴ : Semifield R\ninst✝³ : Ring A\ninst✝² : TopologicalSpace R\ninst✝¹ : HasContinuousInv₀ R\ninst✝ : Algebra R A\na : Units A\n⊢ ContinuousOn (fun x => Inv.inv x) (spectrum R ↑a)","decl":"@[fun_prop]\nlemma Units.continuousOn_inv₀_spectrum (a : Aˣ) : ContinuousOn (· ⁻¹) (spectrum R (a : A)) :=\n  continuousOn_inv₀.mono <| by\n    simpa only [Set.subset_compl_singleton_iff] using spectrum.zero_not_mem R a.isUnit\n\n"}
{"name":"Units.continuousOn_zpow₀_spectrum","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_3\nA : Type u_4\ninst✝⁵ : Semifield R\ninst✝⁴ : Ring A\ninst✝³ : TopologicalSpace R\ninst✝² : HasContinuousInv₀ R\ninst✝¹ : Algebra R A\ninst✝ : ContinuousMul R\na : Units A\nn : Int\n⊢ ContinuousOn (fun x => HPow.hPow x n) (spectrum R ↑a)","decl":"@[fun_prop]\nlemma Units.continuousOn_zpow₀_spectrum [ContinuousMul R] (a : Aˣ) (n : ℤ) :\n    ContinuousOn (· ^ n) (spectrum R (a : A)) :=\n  (continuousOn_zpow₀ n).mono <| by\n    simpa only [Set.subset_compl_singleton_iff] using spectrum.zero_not_mem R a.isUnit\n\n"}
{"name":"cfcUnits_zpow","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹⁰ : Semifield R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : Algebra R A\ninst✝¹ : ContinuousFunctionalCalculus R p\ninst✝ : HasContinuousInv₀ R\nf : R → R\na : A\nhf' : ∀ (x : R), Membership.mem (spectrum R a) x → Ne (f x) 0\nn : Int\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Eq (HPow.hPow (cfcUnits f a hf' ⋯ ⋯) n) (cfcUnits (HPow.hPow f n) a ⋯ ⋯ ⋯)","decl":"lemma cfcUnits_zpow (hf' : ∀ x ∈ spectrum R a, f x ≠ 0) (n : ℤ)\n    (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac) (ha : p a := by cfc_tac) :\n    (cfcUnits f a hf') ^ n =\n      cfcUnits (f ^ n) a (forall₂_imp (fun _ _ ↦ zpow_ne_zero n) hf')\n        (hf.zpow₀ n (forall₂_imp (fun _ _ ↦ Or.inl) hf')) := by\n  cases n with\n  | ofNat _ => simpa using cfcUnits_pow f a hf' _\n  | negSucc n =>\n    simp only [zpow_negSucc, ← inv_pow]\n    ext\n    exact cfc_pow (hf := hf.inv₀ hf') .. |>.symm\n\n"}
{"name":"cfc_zpow","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹⁰ : Semifield R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalSemiring R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : Algebra R A\ninst✝¹ : ContinuousFunctionalCalculus R p\ninst✝ : HasContinuousInv₀ R\na : Units A\nn : Int\nha : autoParam (p ↑a) _auto✝\n⊢ Eq (cfc (fun x => HPow.hPow x n) ↑a) ↑(HPow.hPow a n)","decl":"lemma cfc_zpow (a : Aˣ) (n : ℤ) (ha : p a := by cfc_tac) :\n    cfc (fun x : R ↦ x ^ n) (a : A) = ↑(a ^ n) := by\n  cases n with\n  | ofNat n => simpa using cfc_pow_id (a : A) n\n  | negSucc n =>\n    simp only [zpow_negSucc, ← inv_pow, Units.val_pow_eq_pow_val]\n    have := cfc_pow (fun x ↦ x⁻¹ : R → R) (n + 1) (a : A)\n    exact this.trans <| congr($(cfc_inv_id a) ^ (n + 1))\n\n"}
{"name":"cfc_comp_inv","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : Semifield R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalSemiring R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : Ring A\ninst✝⁴ : StarRing A\ninst✝³ : Algebra R A\ninst✝² : ContinuousFunctionalCalculus R p\ninst✝¹ : HasContinuousInv₀ R\ninst✝ : ContinuousMap.UniqueHom R A\nf : R → R\na : Units A\nhf : autoParam (ContinuousOn f (Set.image (fun x => Inv.inv x) (spectrum R ↑a))) _auto✝\nha : autoParam (p ↑a) _auto✝\n⊢ Eq (cfc (fun x => f (Inv.inv x)) ↑a) (cfc f ↑(Inv.inv a))","decl":"lemma cfc_comp_inv (f : R → R) (a : Aˣ)\n    (hf : ContinuousOn f ((· ⁻¹) '' (spectrum R (a : A))) := by cfc_cont_tac)\n    (ha : p a := by cfc_tac) :\n    cfc (fun x ↦ f x⁻¹) (a : A) = cfc f (↑a⁻¹ : A) := by\n  rw [cfc_comp' .., cfc_inv_id _]\n\n"}
{"name":"cfc_comp_zpow","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : Semifield R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalSemiring R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : Ring A\ninst✝⁴ : StarRing A\ninst✝³ : Algebra R A\ninst✝² : ContinuousFunctionalCalculus R p\ninst✝¹ : HasContinuousInv₀ R\ninst✝ : ContinuousMap.UniqueHom R A\nf : R → R\nn : Int\na : Units A\nhf : autoParam (ContinuousOn f (Set.image (fun x => HPow.hPow x n) (spectrum R ↑a))) _auto✝\nha : autoParam (p ↑a) _auto✝\n⊢ Eq (cfc (fun x => f (HPow.hPow x n)) ↑a) (cfc f ↑(HPow.hPow a n))","decl":"lemma cfc_comp_zpow (f : R → R) (n : ℤ) (a : Aˣ)\n    (hf : ContinuousOn f ((· ^ n) '' (spectrum R (a : A))) := by cfc_cont_tac)\n    (ha : p a := by cfc_tac) :\n    cfc (fun x ↦ f (x ^ n)) (a : A) = cfc f (↑(a ^ n) : A) := by\n  rw [cfc_comp' .., cfc_zpow a]\n\n"}
{"name":"cfc_sub","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁹ : CommRing R\ninst✝⁸ : StarRing R\ninst✝⁷ : MetricSpace R\ninst✝⁶ : TopologicalRing R\ninst✝⁵ : ContinuousStar R\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : ContinuousFunctionalCalculus R p\nf g : R → R\na : A\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nhg : autoParam (ContinuousOn g (spectrum R a)) _auto✝\n⊢ Eq (cfc (fun x => HSub.hSub (f x) (g x)) a) (HSub.hSub (cfc f a) (cfc g a))","decl":"include hf hg in\nlemma cfc_sub : cfc (fun x ↦ f x - g x) a = cfc f a - cfc g a := by\n  by_cases ha : p a\n  · rw [cfc_apply f a, cfc_apply g a, ← map_sub, cfc_apply ..]\n    congr\n  · simp [cfc_apply_of_not_predicate a ha]\n\n"}
{"name":"cfc_neg","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁹ : CommRing R\ninst✝⁸ : StarRing R\ninst✝⁷ : MetricSpace R\ninst✝⁶ : TopologicalRing R\ninst✝⁵ : ContinuousStar R\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : ContinuousFunctionalCalculus R p\nf : R → R\na : A\n⊢ Eq (cfc (fun x => Neg.neg (f x)) a) (Neg.neg (cfc f a))","decl":"lemma cfc_neg : cfc (fun x ↦ - (f x)) a = - (cfc f a) := by\n  by_cases h : p a ∧ ContinuousOn f (spectrum R a)\n  · obtain ⟨ha, hf⟩ := h\n    rw [cfc_apply f a, ← map_neg, cfc_apply ..]\n    congr\n  · obtain (ha | hf) := not_and_or.mp h\n    · simp [cfc_apply_of_not_predicate a ha]\n    · rw [cfc_apply_of_not_continuousOn a hf, cfc_apply_of_not_continuousOn, neg_zero]\n      exact fun hf_neg ↦ hf <| by simpa using hf_neg.neg\n\n"}
{"name":"cfc_neg_id","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁹ : CommRing R\ninst✝⁸ : StarRing R\ninst✝⁷ : MetricSpace R\ninst✝⁶ : TopologicalRing R\ninst✝⁵ : ContinuousStar R\ninst✝⁴ : TopologicalSpace A\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : ContinuousFunctionalCalculus R p\na : A\nha : autoParam (p a) _auto✝\n⊢ Eq (cfc (fun x => Neg.neg x) a) (Neg.neg a)","decl":"lemma cfc_neg_id (ha : p a := by cfc_tac) : cfc (- · : R → R) a = -a := by\n  rw [cfc_neg _ a, cfc_id' R a]\n\n"}
{"name":"cfc_comp_neg","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹⁰ : CommRing R\ninst✝⁹ : StarRing R\ninst✝⁸ : MetricSpace R\ninst✝⁷ : TopologicalRing R\ninst✝⁶ : ContinuousStar R\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : Algebra R A\ninst✝¹ : ContinuousFunctionalCalculus R p\nf : R → R\na : A\ninst✝ : ContinuousMap.UniqueHom R A\nhf : autoParam (ContinuousOn f (Set.image (fun x => Neg.neg x) (spectrum R a))) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Eq (cfc (fun x => f (Neg.neg x)) a) (cfc f (Neg.neg a))","decl":"lemma cfc_comp_neg (hf : ContinuousOn f ((- ·) '' (spectrum R (a : A))) := by cfc_cont_tac)\n    (ha : p a := by cfc_tac) : cfc (f <| - ·) a = cfc f (-a) := by\n  rw [cfc_comp' .., cfc_neg_id _]\n\n"}
{"name":"cfcHom_mono","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : OrderedCommSemiring R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalSemiring R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : ∀ (α : Type u_1) [inst : TopologicalSpace α], StarOrderedRing (ContinuousMap α R)\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : PartialOrder A\ninst✝¹ : StarOrderedRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\nha : p a\nf g : ContinuousMap (↑(spectrum R a)) R\nhfg : LE.le f g\n⊢ LE.le ((cfcHom ha) f) ((cfcHom ha) g)","decl":"lemma cfcHom_mono {a : A} (ha : p a) {f g : C(spectrum R a, R)} (hfg : f ≤ g) :\n    cfcHom ha f ≤ cfcHom ha g :=\n  OrderHomClass.mono (cfcHom ha) hfg\n\n"}
{"name":"cfcHom_nonneg_iff","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹² : OrderedCommSemiring R\ninst✝¹¹ : StarRing R\ninst✝¹⁰ : MetricSpace R\ninst✝⁹ : TopologicalSemiring R\ninst✝⁸ : ContinuousStar R\ninst✝⁷ : ∀ (α : Type u_3) [inst : TopologicalSpace α], StarOrderedRing (ContinuousMap α R)\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : Ring A\ninst✝⁴ : StarRing A\ninst✝³ : PartialOrder A\ninst✝² : StarOrderedRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\ninst✝ : NonnegSpectrumClass R A\na : A\nha : p a\nf : ContinuousMap (↑(spectrum R a)) R\n⊢ Iff (LE.le 0 ((cfcHom ha) f)) (LE.le 0 f)","decl":"lemma cfcHom_nonneg_iff [NonnegSpectrumClass R A] {a : A} (ha : p a) {f : C(spectrum R a, R)} :\n    0 ≤ cfcHom ha f ↔ 0 ≤ f := by\n  constructor\n  · exact fun hf x ↦ (cfcHom_map_spectrum ha (R := R) _ ▸ spectrum_nonneg_of_nonneg hf) ⟨x, rfl⟩\n  · simpa using (cfcHom_mono ha (f := 0) (g := f) ·)\n\n"}
{"name":"cfc_mono","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : OrderedCommSemiring R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalSemiring R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : ∀ (α : Type u_3) [inst : TopologicalSpace α], StarOrderedRing (ContinuousMap α R)\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : PartialOrder A\ninst✝¹ : StarOrderedRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nf g : R → R\na : A\nh : ∀ (x : R), Membership.mem (spectrum R a) x → LE.le (f x) (g x)\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nhg : autoParam (ContinuousOn g (spectrum R a)) _auto✝\n⊢ LE.le (cfc f a) (cfc g a)","decl":"lemma cfc_mono {f g : R → R} {a : A} (h : ∀ x ∈ spectrum R a, f x ≤ g x)\n    (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac)\n    (hg : ContinuousOn g (spectrum R a) := by cfc_cont_tac) :\n    cfc f a ≤ cfc g a := by\n  by_cases ha : p a\n  · rw [cfc_apply f a, cfc_apply g a]\n    exact cfcHom_mono ha fun x ↦ h x.1 x.2\n  · simp only [cfc_apply_of_not_predicate _ ha, le_rfl]\n\n"}
{"name":"cfc_nonneg_iff","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹² : OrderedCommSemiring R\ninst✝¹¹ : StarRing R\ninst✝¹⁰ : MetricSpace R\ninst✝⁹ : TopologicalSemiring R\ninst✝⁸ : ContinuousStar R\ninst✝⁷ : ∀ (α : Type u_3) [inst : TopologicalSpace α], StarOrderedRing (ContinuousMap α R)\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : Ring A\ninst✝⁴ : StarRing A\ninst✝³ : PartialOrder A\ninst✝² : StarOrderedRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\ninst✝ : NonnegSpectrumClass R A\nf : R → R\na : A\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Iff (LE.le 0 (cfc f a)) (∀ (x : R), Membership.mem (spectrum R a) x → LE.le 0 (f x))","decl":"lemma cfc_nonneg_iff [NonnegSpectrumClass R A] (f : R → R) (a : A)\n    (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac)\n    (ha : p a := by cfc_tac) : 0 ≤ cfc f a ↔ ∀ x ∈ spectrum R a, 0 ≤ f x := by\n  rw [cfc_apply .., cfcHom_nonneg_iff, ContinuousMap.le_def]\n  simp\n\n"}
{"name":"StarOrderedRing.nonneg_iff_spectrum_nonneg","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹² : OrderedCommSemiring R\ninst✝¹¹ : StarRing R\ninst✝¹⁰ : MetricSpace R\ninst✝⁹ : TopologicalSemiring R\ninst✝⁸ : ContinuousStar R\ninst✝⁷ : ∀ (α : Type u_3) [inst : TopologicalSpace α], StarOrderedRing (ContinuousMap α R)\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : Ring A\ninst✝⁴ : StarRing A\ninst✝³ : PartialOrder A\ninst✝² : StarOrderedRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\ninst✝ : NonnegSpectrumClass R A\na : A\nha : autoParam (p a) _auto✝\n⊢ Iff (LE.le 0 a) (∀ (x : R), Membership.mem (spectrum R a) x → LE.le 0 x)","decl":"lemma StarOrderedRing.nonneg_iff_spectrum_nonneg [NonnegSpectrumClass R A] (a : A)\n    (ha : p a := by cfc_tac) : 0 ≤ a ↔ ∀ x ∈ spectrum R a, 0 ≤ x := by\n  have := cfc_nonneg_iff (id : R → R) a (by fun_prop) ha\n  simpa [cfc_id _ a ha] using this\n\n"}
{"name":"cfc_nonneg","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : OrderedCommSemiring R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalSemiring R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : ∀ (α : Type u_3) [inst : TopologicalSpace α], StarOrderedRing (ContinuousMap α R)\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : PartialOrder A\ninst✝¹ : StarOrderedRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nf : R → R\na : A\nh : ∀ (x : R), Membership.mem (spectrum R a) x → LE.le 0 (f x)\n⊢ LE.le 0 (cfc f a)","decl":"lemma cfc_nonneg {f : R → R} {a : A} (h : ∀ x ∈ spectrum R a, 0 ≤ f x) :\n    0 ≤ cfc f a := by\n  by_cases hf : ContinuousOn f (spectrum R a)\n  · simpa using cfc_mono h\n  · simp only [cfc_apply_of_not_continuousOn _ hf, le_rfl]\n\n"}
{"name":"cfc_nonpos","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : OrderedCommSemiring R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalSemiring R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : ∀ (α : Type u_3) [inst : TopologicalSpace α], StarOrderedRing (ContinuousMap α R)\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : PartialOrder A\ninst✝¹ : StarOrderedRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nf : R → R\na : A\nh : ∀ (x : R), Membership.mem (spectrum R a) x → LE.le (f x) 0\n⊢ LE.le (cfc f a) 0","decl":"lemma cfc_nonpos (f : R → R) (a : A) (h : ∀ x ∈ spectrum R a, f x ≤ 0) :\n    cfc f a ≤ 0 := by\n  by_cases hf : ContinuousOn f (spectrum R a)\n  · simpa using cfc_mono h\n  · simp only [cfc_apply_of_not_continuousOn _ hf, le_rfl]\n\n"}
{"name":"cfc_le_algebraMap","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : OrderedCommSemiring R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalSemiring R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : ∀ (α : Type u_3) [inst : TopologicalSpace α], StarOrderedRing (ContinuousMap α R)\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : PartialOrder A\ninst✝¹ : StarOrderedRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nf : R → R\nr : R\na : A\nh : ∀ (x : R), Membership.mem (spectrum R a) x → LE.le (f x) r\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nha : autoParam (p a) _auto✝\n⊢ LE.le (cfc f a) ((algebraMap R A) r)","decl":"lemma cfc_le_algebraMap (f : R → R) (r : R) (a : A) (h : ∀ x ∈ spectrum R a, f x ≤ r)\n    (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac) (ha : p a := by cfc_tac) :\n    cfc f a ≤ algebraMap R A r :=\n  cfc_const r a ▸ cfc_mono h\n\n"}
{"name":"algebraMap_le_cfc","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : OrderedCommSemiring R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalSemiring R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : ∀ (α : Type u_3) [inst : TopologicalSpace α], StarOrderedRing (ContinuousMap α R)\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : PartialOrder A\ninst✝¹ : StarOrderedRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nf : R → R\nr : R\na : A\nh : ∀ (x : R), Membership.mem (spectrum R a) x → LE.le r (f x)\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nha : autoParam (p a) _auto✝\n⊢ LE.le ((algebraMap R A) r) (cfc f a)","decl":"lemma algebraMap_le_cfc (f : R → R) (r : R) (a : A) (h : ∀ x ∈ spectrum R a, r ≤ f x)\n    (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac) (ha : p a := by cfc_tac) :\n    algebraMap R A r ≤ cfc f a :=\n  cfc_const r a ▸ cfc_mono h\n\n"}
{"name":"le_algebraMap_of_spectrum_le","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : OrderedCommSemiring R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalSemiring R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : ∀ (α : Type u_3) [inst : TopologicalSpace α], StarOrderedRing (ContinuousMap α R)\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : PartialOrder A\ninst✝¹ : StarOrderedRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nr : R\na : A\nh : ∀ (x : R), Membership.mem (spectrum R a) x → LE.le x r\nha : autoParam (p a) _auto✝\n⊢ LE.le a ((algebraMap R A) r)","decl":"lemma le_algebraMap_of_spectrum_le {r : R} {a : A} (h : ∀ x ∈ spectrum R a, x ≤ r)\n    (ha : p a := by cfc_tac) : a ≤ algebraMap R A r := by\n  rw [← cfc_id R a]\n  exact cfc_le_algebraMap id r a h\n\n"}
{"name":"algebraMap_le_of_le_spectrum","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : OrderedCommSemiring R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalSemiring R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : ∀ (α : Type u_3) [inst : TopologicalSpace α], StarOrderedRing (ContinuousMap α R)\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : PartialOrder A\ninst✝¹ : StarOrderedRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nr : R\na : A\nh : ∀ (x : R), Membership.mem (spectrum R a) x → LE.le r x\nha : autoParam (p a) _auto✝\n⊢ LE.le ((algebraMap R A) r) a","decl":"lemma algebraMap_le_of_le_spectrum {r : R} {a : A} (h : ∀ x ∈ spectrum R a, r ≤ x)\n    (ha : p a := by cfc_tac) : algebraMap R A r ≤ a := by\n  rw [← cfc_id R a]\n  exact algebraMap_le_cfc id r a h\n\n"}
{"name":"cfc_le_one","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : OrderedCommSemiring R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalSemiring R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : ∀ (α : Type u_3) [inst : TopologicalSpace α], StarOrderedRing (ContinuousMap α R)\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : PartialOrder A\ninst✝¹ : StarOrderedRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nf : R → R\na : A\nh : ∀ (x : R), Membership.mem (spectrum R a) x → LE.le (f x) 1\n⊢ LE.le (cfc f a) 1","decl":"lemma cfc_le_one (f : R → R) (a : A) (h : ∀ x ∈ spectrum R a, f x ≤ 1) : cfc f a ≤ 1 := by\n  apply cfc_cases (· ≤ 1) _ _ (by simp) fun hf ha ↦ ?_\n  rw [← map_one (cfcHom ha (R := R))]\n  apply cfcHom_mono ha\n  simpa [ContinuousMap.le_def] using h\n\n"}
{"name":"one_le_cfc","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : OrderedCommSemiring R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalSemiring R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : ∀ (α : Type u_3) [inst : TopologicalSpace α], StarOrderedRing (ContinuousMap α R)\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : PartialOrder A\ninst✝¹ : StarOrderedRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\nf : R → R\na : A\nh : ∀ (x : R), Membership.mem (spectrum R a) x → LE.le 1 (f x)\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nha : autoParam (p a) _auto✝\n⊢ LE.le 1 (cfc f a)","decl":"lemma one_le_cfc (f : R → R) (a : A) (h : ∀ x ∈ spectrum R a, 1 ≤ f x)\n    (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac) (ha : p a := by cfc_tac) :\n    1 ≤ cfc f a := by\n  simpa using algebraMap_le_cfc f 1 a h\n\n"}
{"name":"CFC.le_one","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : OrderedCommSemiring R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalSemiring R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : ∀ (α : Type u_3) [inst : TopologicalSpace α], StarOrderedRing (ContinuousMap α R)\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : PartialOrder A\ninst✝¹ : StarOrderedRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\nh : ∀ (x : R), Membership.mem (spectrum R a) x → LE.le x 1\nha : autoParam (p a) _auto✝\n⊢ LE.le a 1","decl":"lemma CFC.le_one {a : A} (h : ∀ x ∈ spectrum R a, x ≤ 1) (ha : p a := by cfc_tac) :\n    a ≤ 1 := by\n  simpa using le_algebraMap_of_spectrum_le h\n\n"}
{"name":"CFC.one_le","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹¹ : OrderedCommSemiring R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : MetricSpace R\ninst✝⁸ : TopologicalSemiring R\ninst✝⁷ : ContinuousStar R\ninst✝⁶ : ∀ (α : Type u_3) [inst : TopologicalSpace α], StarOrderedRing (ContinuousMap α R)\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : PartialOrder A\ninst✝¹ : StarOrderedRing A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\nh : ∀ (x : R), Membership.mem (spectrum R a) x → LE.le 1 x\nha : autoParam (p a) _auto✝\n⊢ LE.le 1 a","decl":"lemma CFC.one_le {a : A} (h : ∀ x ∈ spectrum R a, 1 ≤ x) (ha : p a := by cfc_tac) :\n    1 ≤ a := by\n  simpa using algebraMap_le_of_le_spectrum h\n\n"}
{"name":"CFC.inv_nonneg_of_nonneg","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"A : Type u_1\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : PartialOrder A\ninst✝¹ : Algebra NNReal A\ninst✝ : ContinuousFunctionalCalculus NNReal fun a => LE.le 0 a\na : Units A\nha : autoParam (LE.le 0 ↑a) _auto✝\n⊢ LE.le 0 ↑(Inv.inv a)","decl":"lemma CFC.inv_nonneg_of_nonneg (a : Aˣ) (ha : (0 : A) ≤ a := by cfc_tac) : (0 : A) ≤ a⁻¹ :=\n  cfc_inv_id (R := ℝ≥0) a ▸ cfc_predicate _ (a : A)\n\n"}
{"name":"CFC.inv_nonneg","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"A : Type u_1\ninst✝⁵ : TopologicalSpace A\ninst✝⁴ : Ring A\ninst✝³ : StarRing A\ninst✝² : PartialOrder A\ninst✝¹ : Algebra NNReal A\ninst✝ : ContinuousFunctionalCalculus NNReal fun a => LE.le 0 a\na : Units A\n⊢ Iff (LE.le 0 ↑(Inv.inv a)) (LE.le 0 ↑a)","decl":"lemma CFC.inv_nonneg (a : Aˣ)  : (0 : A) ≤ a⁻¹ ↔ (0 : A) ≤ a :=\n  ⟨fun _ ↦ inv_inv a ▸ inv_nonneg_of_nonneg a⁻¹, fun _ ↦ inv_nonneg_of_nonneg a⟩\n\n"}
{"name":"cfcHom_le_iff","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹² : OrderedCommRing R\ninst✝¹¹ : StarRing R\ninst✝¹⁰ : MetricSpace R\ninst✝⁹ : TopologicalRing R\ninst✝⁸ : ContinuousStar R\ninst✝⁷ : ∀ (α : Type u_3) [inst : TopologicalSpace α], StarOrderedRing (ContinuousMap α R)\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : Ring A\ninst✝⁴ : StarRing A\ninst✝³ : PartialOrder A\ninst✝² : StarOrderedRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\ninst✝ : NonnegSpectrumClass R A\na : A\nha : p a\nf g : ContinuousMap (↑(spectrum R a)) R\n⊢ Iff (LE.le ((cfcHom ha) f) ((cfcHom ha) g)) (LE.le f g)","decl":"lemma cfcHom_le_iff {a : A} (ha : p a) {f g : C(spectrum R a, R)} :\n    cfcHom ha f ≤ cfcHom ha g ↔ f ≤ g := by\n  rw [← sub_nonneg, ← map_sub, cfcHom_nonneg_iff, sub_nonneg]\n\n"}
{"name":"cfc_le_iff","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹² : OrderedCommRing R\ninst✝¹¹ : StarRing R\ninst✝¹⁰ : MetricSpace R\ninst✝⁹ : TopologicalRing R\ninst✝⁸ : ContinuousStar R\ninst✝⁷ : ∀ (α : Type u_3) [inst : TopologicalSpace α], StarOrderedRing (ContinuousMap α R)\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : Ring A\ninst✝⁴ : StarRing A\ninst✝³ : PartialOrder A\ninst✝² : StarOrderedRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\ninst✝ : NonnegSpectrumClass R A\nf g : R → R\na : A\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nhg : autoParam (ContinuousOn g (spectrum R a)) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Iff (LE.le (cfc f a) (cfc g a)) (∀ (x : R), Membership.mem (spectrum R a) x → LE.le (f x) (g x))","decl":"lemma cfc_le_iff (f g : R → R) (a : A) (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac)\n    (hg : ContinuousOn g (spectrum R a) := by cfc_cont_tac) (ha : p a := by cfc_tac) :\n    cfc f a ≤ cfc g a ↔ ∀ x ∈ spectrum R a, f x ≤ g x := by\n  rw [cfc_apply f a, cfc_apply g a, cfcHom_le_iff (show p a from ha), ContinuousMap.le_def]\n  simp\n\n"}
{"name":"cfc_nonpos_iff","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹² : OrderedCommRing R\ninst✝¹¹ : StarRing R\ninst✝¹⁰ : MetricSpace R\ninst✝⁹ : TopologicalRing R\ninst✝⁸ : ContinuousStar R\ninst✝⁷ : ∀ (α : Type u_3) [inst : TopologicalSpace α], StarOrderedRing (ContinuousMap α R)\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : Ring A\ninst✝⁴ : StarRing A\ninst✝³ : PartialOrder A\ninst✝² : StarOrderedRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\ninst✝ : NonnegSpectrumClass R A\nf : R → R\na : A\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Iff (LE.le (cfc f a) 0) (∀ (x : R), Membership.mem (spectrum R a) x → LE.le (f x) 0)","decl":"lemma cfc_nonpos_iff (f : R → R) (a : A) (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac)\n    (ha : p a := by cfc_tac) : cfc f a ≤ 0 ↔ ∀ x ∈ spectrum R a, f x ≤ 0 := by\n  simp_rw [← neg_nonneg, ← cfc_neg]\n  exact cfc_nonneg_iff (fun x ↦ -f x) a\n\n"}
{"name":"cfc_le_algebraMap_iff","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹² : OrderedCommRing R\ninst✝¹¹ : StarRing R\ninst✝¹⁰ : MetricSpace R\ninst✝⁹ : TopologicalRing R\ninst✝⁸ : ContinuousStar R\ninst✝⁷ : ∀ (α : Type u_3) [inst : TopologicalSpace α], StarOrderedRing (ContinuousMap α R)\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : Ring A\ninst✝⁴ : StarRing A\ninst✝³ : PartialOrder A\ninst✝² : StarOrderedRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\ninst✝ : NonnegSpectrumClass R A\nf : R → R\nr : R\na : A\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Iff (LE.le (cfc f a) ((algebraMap R A) r)) (∀ (x : R), Membership.mem (spectrum R a) x → LE.le (f x) r)","decl":"lemma cfc_le_algebraMap_iff (f : R → R) (r : R) (a : A)\n    (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac) (ha : p a := by cfc_tac) :\n    cfc f a ≤ algebraMap R A r ↔ ∀ x ∈ spectrum R a, f x ≤ r := by\n  rw [← cfc_const r a, cfc_le_iff ..]\n\n"}
{"name":"algebraMap_le_cfc_iff","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹² : OrderedCommRing R\ninst✝¹¹ : StarRing R\ninst✝¹⁰ : MetricSpace R\ninst✝⁹ : TopologicalRing R\ninst✝⁸ : ContinuousStar R\ninst✝⁷ : ∀ (α : Type u_3) [inst : TopologicalSpace α], StarOrderedRing (ContinuousMap α R)\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : Ring A\ninst✝⁴ : StarRing A\ninst✝³ : PartialOrder A\ninst✝² : StarOrderedRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\ninst✝ : NonnegSpectrumClass R A\nf : R → R\nr : R\na : A\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Iff (LE.le ((algebraMap R A) r) (cfc f a)) (∀ (x : R), Membership.mem (spectrum R a) x → LE.le r (f x))","decl":"lemma algebraMap_le_cfc_iff (f : R → R) (r : R) (a : A)\n    (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac) (ha : p a := by cfc_tac) :\n    algebraMap R A r ≤ cfc f a ↔ ∀ x ∈ spectrum R a, r ≤ f x := by\n  rw [← cfc_const r a, cfc_le_iff ..]\n\n"}
{"name":"le_algebraMap_iff_spectrum_le","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹² : OrderedCommRing R\ninst✝¹¹ : StarRing R\ninst✝¹⁰ : MetricSpace R\ninst✝⁹ : TopologicalRing R\ninst✝⁸ : ContinuousStar R\ninst✝⁷ : ∀ (α : Type u_3) [inst : TopologicalSpace α], StarOrderedRing (ContinuousMap α R)\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : Ring A\ninst✝⁴ : StarRing A\ninst✝³ : PartialOrder A\ninst✝² : StarOrderedRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\ninst✝ : NonnegSpectrumClass R A\nr : R\na : A\nha : autoParam (p a) _auto✝\n⊢ Iff (LE.le a ((algebraMap R A) r)) (∀ (x : R), Membership.mem (spectrum R a) x → LE.le x r)","decl":"lemma le_algebraMap_iff_spectrum_le {r : R} {a : A} (ha : p a := by cfc_tac) :\n    a ≤ algebraMap R A r ↔ ∀ x ∈ spectrum R a, x ≤ r := by\n  nth_rw 1 [← cfc_id R a]\n  exact cfc_le_algebraMap_iff id r a\n\n"}
{"name":"algebraMap_le_iff_le_spectrum","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹² : OrderedCommRing R\ninst✝¹¹ : StarRing R\ninst✝¹⁰ : MetricSpace R\ninst✝⁹ : TopologicalRing R\ninst✝⁸ : ContinuousStar R\ninst✝⁷ : ∀ (α : Type u_3) [inst : TopologicalSpace α], StarOrderedRing (ContinuousMap α R)\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : Ring A\ninst✝⁴ : StarRing A\ninst✝³ : PartialOrder A\ninst✝² : StarOrderedRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\ninst✝ : NonnegSpectrumClass R A\nr : R\na : A\nha : autoParam (p a) _auto✝\n⊢ Iff (LE.le ((algebraMap R A) r) a) (∀ (x : R), Membership.mem (spectrum R a) x → LE.le r x)","decl":"lemma algebraMap_le_iff_le_spectrum {r : R} {a : A} (ha : p a := by cfc_tac) :\n    algebraMap R A r ≤ a ↔ ∀ x ∈ spectrum R a, r ≤ x:= by\n  nth_rw 1 [← cfc_id R a]\n  exact algebraMap_le_cfc_iff id r a\n\n"}
{"name":"cfc_le_one_iff","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹² : OrderedCommRing R\ninst✝¹¹ : StarRing R\ninst✝¹⁰ : MetricSpace R\ninst✝⁹ : TopologicalRing R\ninst✝⁸ : ContinuousStar R\ninst✝⁷ : ∀ (α : Type u_3) [inst : TopologicalSpace α], StarOrderedRing (ContinuousMap α R)\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : Ring A\ninst✝⁴ : StarRing A\ninst✝³ : PartialOrder A\ninst✝² : StarOrderedRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\ninst✝ : NonnegSpectrumClass R A\nf : R → R\na : A\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Iff (LE.le (cfc f a) 1) (∀ (x : R), Membership.mem (spectrum R a) x → LE.le (f x) 1)","decl":"lemma cfc_le_one_iff (f : R → R) (a : A)\n    (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac) (ha : p a := by cfc_tac) :\n    cfc f a ≤ 1 ↔ ∀ x ∈ spectrum R a, f x ≤ 1 := by\n  simpa using cfc_le_algebraMap_iff f 1 a\n\n"}
{"name":"one_le_cfc_iff","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹² : OrderedCommRing R\ninst✝¹¹ : StarRing R\ninst✝¹⁰ : MetricSpace R\ninst✝⁹ : TopologicalRing R\ninst✝⁸ : ContinuousStar R\ninst✝⁷ : ∀ (α : Type u_3) [inst : TopologicalSpace α], StarOrderedRing (ContinuousMap α R)\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : Ring A\ninst✝⁴ : StarRing A\ninst✝³ : PartialOrder A\ninst✝² : StarOrderedRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\ninst✝ : NonnegSpectrumClass R A\nf : R → R\na : A\nhf : autoParam (ContinuousOn f (spectrum R a)) _auto✝\nha : autoParam (p a) _auto✝\n⊢ Iff (LE.le 1 (cfc f a)) (∀ (x : R), Membership.mem (spectrum R a) x → LE.le 1 (f x))","decl":"lemma one_le_cfc_iff (f : R → R) (a : A)\n    (hf : ContinuousOn f (spectrum R a) := by cfc_cont_tac) (ha : p a := by cfc_tac) :\n    1 ≤ cfc f a ↔ ∀ x ∈ spectrum R a, 1 ≤ f x := by\n  simpa using algebraMap_le_cfc_iff f 1 a\n\n"}
{"name":"CFC.le_one_iff","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹² : OrderedCommRing R\ninst✝¹¹ : StarRing R\ninst✝¹⁰ : MetricSpace R\ninst✝⁹ : TopologicalRing R\ninst✝⁸ : ContinuousStar R\ninst✝⁷ : ∀ (α : Type u_3) [inst : TopologicalSpace α], StarOrderedRing (ContinuousMap α R)\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : Ring A\ninst✝⁴ : StarRing A\ninst✝³ : PartialOrder A\ninst✝² : StarOrderedRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\ninst✝ : NonnegSpectrumClass R A\na : A\nha : autoParam (p a) _auto✝\n⊢ Iff (LE.le a 1) (∀ (x : R), Membership.mem (spectrum R a) x → LE.le x 1)","decl":"lemma CFC.le_one_iff (a : A) (ha : p a := by cfc_tac) :\n    a ≤ 1 ↔ ∀ x ∈ spectrum R a, x ≤ 1 := by\n  simpa using le_algebraMap_iff_spectrum_le (r := (1 : R)) (a := a)\n\n"}
{"name":"CFC.one_le_iff","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝¹² : OrderedCommRing R\ninst✝¹¹ : StarRing R\ninst✝¹⁰ : MetricSpace R\ninst✝⁹ : TopologicalRing R\ninst✝⁸ : ContinuousStar R\ninst✝⁷ : ∀ (α : Type u_3) [inst : TopologicalSpace α], StarOrderedRing (ContinuousMap α R)\ninst✝⁶ : TopologicalSpace A\ninst✝⁵ : Ring A\ninst✝⁴ : StarRing A\ninst✝³ : PartialOrder A\ninst✝² : StarOrderedRing A\ninst✝¹ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\ninst✝ : NonnegSpectrumClass R A\na : A\nha : autoParam (p a) _auto✝\n⊢ Iff (LE.le 1 a) (∀ (x : R), Membership.mem (spectrum R a) x → LE.le 1 x)","decl":"lemma CFC.one_le_iff (a : A) (ha : p a := by cfc_tac) :\n    1 ≤ a ↔ ∀ x ∈ spectrum R a, 1 ≤ x := by\n  simpa using algebraMap_le_iff_le_spectrum (r := (1 : R)) (a := a)\n\n"}
{"name":"cfcHomSuperset_apply","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : TopologicalSpace A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\nha : p a\ns : Set R\nhs : HasSubset.Subset (spectrum R a) s\na✝ : ContinuousMap (↑s) R\n⊢ Eq ((cfcHomSuperset ha hs) a✝) ((cfcHom ha) (a✝.comp { toFun := Subtype.map id hs, continuous_toFun := ⋯ }))","decl":"/-- The composition of `cfcHom` with the natural embedding `C(s, R) → C(spectrum R a, R)`\nwhenever `spectrum R a ⊆ s`.\n\nThis is sometimes necessary in order to consider the same continuous functions applied to multiple\ndistinct elements, with the added constraint that `cfc` does not suffice. This can occur, for\nexample, if it is necessary to use uniqueness of this continuous functional calculus. -/\n@[simps!]\nnoncomputable def cfcHomSuperset {a : A} (ha : p a) {s : Set R} (hs : spectrum R a ⊆ s) :\n    C(s, R) →⋆ₐ[R] A :=\n  cfcHom ha |>.comp <| ContinuousMap.compStarAlgHom' R R <| ⟨_, continuous_id.subtype_map hs⟩\n\n"}
{"name":"cfcHomSuperset_continuous","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : TopologicalSpace A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\nha : p a\ns : Set R\nhs : HasSubset.Subset (spectrum R a) s\n⊢ Continuous ⇑(cfcHomSuperset ha hs)","decl":"lemma cfcHomSuperset_continuous {a : A} (ha : p a) {s : Set R} (hs : spectrum R a ⊆ s) :\n    Continuous (cfcHomSuperset ha hs) :=\n  (cfcHom_continuous ha).comp <| ContinuousMap.continuous_precomp _\n\n"}
{"name":"cfcHomSuperset_id","module":"Mathlib.Analysis.CStarAlgebra.ContinuousFunctionalCalculus.Unital","initialProofState":"R : Type u_1\nA : Type u_2\np : A → Prop\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : MetricSpace R\ninst✝⁵ : TopologicalSemiring R\ninst✝⁴ : ContinuousStar R\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : TopologicalSpace A\ninst✝ : Algebra R A\ninstCFC : ContinuousFunctionalCalculus R p\na : A\nha : p a\ns : Set R\nhs : HasSubset.Subset (spectrum R a) s\n⊢ Eq ((cfcHomSuperset ha hs) (ContinuousMap.restrict s (ContinuousMap.id R))) a","decl":"lemma cfcHomSuperset_id {a : A} (ha : p a) {s : Set R} (hs : spectrum R a ⊆ s) :\n    cfcHomSuperset ha hs (.restrict s <| .id R) = a :=\n  cfcHom_id ha\n\n"}
