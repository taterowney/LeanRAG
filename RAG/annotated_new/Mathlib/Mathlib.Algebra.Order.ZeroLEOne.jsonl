{"name":"ZeroLEOneClass.zero_le_one","module":"Mathlib.Algebra.Order.ZeroLEOne","initialProofState":"α : Type u_2\ninst✝² : Zero α\ninst✝¹ : One α\ninst✝ : LE α\nself : ZeroLEOneClass α\n⊢ LE.le 0 1","decl":"/-- Typeclass for expressing that the `0` of a type is less or equal to its `1`. -/\nclass ZeroLEOneClass (α : Type*) [Zero α] [One α] [LE α] : Prop where\n  /-- Zero is less than or equal to one. -/\n  zero_le_one : (0 : α) ≤ 1\n\n"}
{"name":"zero_le_one","module":"Mathlib.Algebra.Order.ZeroLEOne","initialProofState":"α : Type u_1\ninst✝³ : Zero α\ninst✝² : One α\ninst✝¹ : LE α\ninst✝ : ZeroLEOneClass α\n⊢ LE.le 0 1","decl":"/-- `zero_le_one` with the type argument implicit. -/\n@[simp] lemma zero_le_one [Zero α] [One α] [LE α] [ZeroLEOneClass α] : (0 : α) ≤ 1 :=\n  ZeroLEOneClass.zero_le_one\n\n"}
{"name":"zero_le_one'","module":"Mathlib.Algebra.Order.ZeroLEOne","initialProofState":"α : Type u_2\ninst✝³ : Zero α\ninst✝² : One α\ninst✝¹ : LE α\ninst✝ : ZeroLEOneClass α\n⊢ LE.le 0 1","decl":"/-- `zero_le_one` with the type argument explicit. -/\nlemma zero_le_one' (α) [Zero α] [One α] [LE α] [ZeroLEOneClass α] : (0 : α) ≤ 1 :=\n  zero_le_one\n\n"}
{"name":"zero_lt_one","module":"Mathlib.Algebra.Order.ZeroLEOne","initialProofState":"α : Type u_1\ninst✝⁴ : Zero α\ninst✝³ : One α\ninst✝² : PartialOrder α\ninst✝¹ : ZeroLEOneClass α\ninst✝ : NeZero 1\n⊢ LT.lt 0 1","decl":"/-- See `zero_lt_one'` for a version with the type explicit. -/\n@[simp] lemma zero_lt_one : (0 : α) < 1 := zero_le_one.lt_of_ne (NeZero.ne' 1)\n\n"}
{"name":"zero_lt_one'","module":"Mathlib.Algebra.Order.ZeroLEOne","initialProofState":"α : Type u_1\ninst✝⁴ : Zero α\ninst✝³ : One α\ninst✝² : PartialOrder α\ninst✝¹ : ZeroLEOneClass α\ninst✝ : NeZero 1\n⊢ LT.lt 0 1","decl":"/-- See `zero_lt_one` for a version with the type implicit. -/\nlemma zero_lt_one' : (0 : α) < 1 := zero_lt_one\n\n"}
{"name":"one_pos","module":"Mathlib.Algebra.Order.ZeroLEOne","initialProofState":"α : Type u_1\ninst✝⁴ : Zero α\ninst✝³ : One α\ninst✝² : PartialOrder α\ninst✝¹ : ZeroLEOneClass α\ninst✝ : NeZero 1\n⊢ LT.lt 0 1","decl":"alias one_pos := zero_lt_one\n"}
