{"name":"WeierstrassCurve.ext","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\nx y : WeierstrassCurve R\na₁ : Eq x.a₁ y.a₁\na₂ : Eq x.a₂ y.a₂\na₃ : Eq x.a₃ y.a₃\na₄ : Eq x.a₄ y.a₄\na₆ : Eq x.a₆ y.a₆\n⊢ Eq x y","decl":"/-- A Weierstrass curve $Y^2 + a_1XY + a_3Y = X^3 + a_2X^2 + a_4X + a_6$ with parameters $a_i$. -/\n@[ext]\nstructure WeierstrassCurve (R : Type u) where\n  /-- The `a₁` coefficient of a Weierstrass curve. -/\n  a₁ : R\n  /-- The `a₂` coefficient of a Weierstrass curve. -/\n  a₂ : R\n  /-- The `a₃` coefficient of a Weierstrass curve. -/\n  a₃ : R\n  /-- The `a₄` coefficient of a Weierstrass curve. -/\n  a₄ : R\n  /-- The `a₆` coefficient of a Weierstrass curve. -/\n  a₆ : R\n\n"}
{"name":"WeierstrassCurve.mk.sizeOf_spec","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝ : SizeOf R\na₁ a₂ a₃ a₄ a₆ : R\n⊢ Eq (SizeOf.sizeOf { a₁ := a₁, a₂ := a₂, a₃ := a₃, a₄ := a₄, a₆ := a₆ }) (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd 1 (SizeOf.sizeOf a₁)) (SizeOf.sizeOf a₂)) (SizeOf.sizeOf a₃)) (SizeOf.sizeOf a₄)) (SizeOf.sizeOf a₆))","decl":"/-- A Weierstrass curve $Y^2 + a_1XY + a_3Y = X^3 + a_2X^2 + a_4X + a_6$ with parameters $a_i$. -/\n@[ext]\nstructure WeierstrassCurve (R : Type u) where\n  /-- The `a₁` coefficient of a Weierstrass curve. -/\n  a₁ : R\n  /-- The `a₂` coefficient of a Weierstrass curve. -/\n  a₂ : R\n  /-- The `a₃` coefficient of a Weierstrass curve. -/\n  a₃ : R\n  /-- The `a₄` coefficient of a Weierstrass curve. -/\n  a₄ : R\n  /-- The `a₆` coefficient of a Weierstrass curve. -/\n  a₆ : R\n\n"}
{"name":"WeierstrassCurve.ext_iff","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\nx y : WeierstrassCurve R\n⊢ Iff (Eq x y) (And (Eq x.a₁ y.a₁) (And (Eq x.a₂ y.a₂) (And (Eq x.a₃ y.a₃) (And (Eq x.a₄ y.a₄) (Eq x.a₆ y.a₆)))))","decl":"/-- A Weierstrass curve $Y^2 + a_1XY + a_3Y = X^3 + a_2X^2 + a_4X + a_6$ with parameters $a_i$. -/\n@[ext]\nstructure WeierstrassCurve (R : Type u) where\n  /-- The `a₁` coefficient of a Weierstrass curve. -/\n  a₁ : R\n  /-- The `a₂` coefficient of a Weierstrass curve. -/\n  a₂ : R\n  /-- The `a₃` coefficient of a Weierstrass curve. -/\n  a₃ : R\n  /-- The `a₄` coefficient of a Weierstrass curve. -/\n  a₄ : R\n  /-- The `a₆` coefficient of a Weierstrass curve. -/\n  a₆ : R\n\n"}
{"name":"WeierstrassCurve.mk.inj","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\na₁✝ a₂✝ a₃✝ a₄✝ a₆✝ a₁ a₂ a₃ a₄ a₆ : R\nx✝ : Eq { a₁ := a₁✝, a₂ := a₂✝, a₃ := a₃✝, a₄ := a₄✝, a₆ := a₆✝ } { a₁ := a₁, a₂ := a₂, a₃ := a₃, a₄ := a₄, a₆ := a₆ }\n⊢ And (Eq a₁✝ a₁) (And (Eq a₂✝ a₂) (And (Eq a₃✝ a₃) (And (Eq a₄✝ a₄) (Eq a₆✝ a₆))))","decl":"/-- A Weierstrass curve $Y^2 + a_1XY + a_3Y = X^3 + a_2X^2 + a_4X + a_6$ with parameters $a_i$. -/\n@[ext]\nstructure WeierstrassCurve (R : Type u) where\n  /-- The `a₁` coefficient of a Weierstrass curve. -/\n  a₁ : R\n  /-- The `a₂` coefficient of a Weierstrass curve. -/\n  a₂ : R\n  /-- The `a₃` coefficient of a Weierstrass curve. -/\n  a₃ : R\n  /-- The `a₄` coefficient of a Weierstrass curve. -/\n  a₄ : R\n  /-- The `a₆` coefficient of a Weierstrass curve. -/\n  a₆ : R\n\n"}
{"name":"WeierstrassCurve.mk.injEq","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\na₁✝ a₂✝ a₃✝ a₄✝ a₆✝ a₁ a₂ a₃ a₄ a₆ : R\n⊢ Eq (Eq { a₁ := a₁✝, a₂ := a₂✝, a₃ := a₃✝, a₄ := a₄✝, a₆ := a₆✝ } { a₁ := a₁, a₂ := a₂, a₃ := a₃, a₄ := a₄, a₆ := a₆ }) (And (Eq a₁✝ a₁) (And (Eq a₂✝ a₂) (And (Eq a₃✝ a₃) (And (Eq a₄✝ a₄) (Eq a₆✝ a₆)))))","decl":"/-- A Weierstrass curve $Y^2 + a_1XY + a_3Y = X^3 + a_2X^2 + a_4X + a_6$ with parameters $a_i$. -/\n@[ext]\nstructure WeierstrassCurve (R : Type u) where\n  /-- The `a₁` coefficient of a Weierstrass curve. -/\n  a₁ : R\n  /-- The `a₂` coefficient of a Weierstrass curve. -/\n  a₂ : R\n  /-- The `a₃` coefficient of a Weierstrass curve. -/\n  a₃ : R\n  /-- The `a₄` coefficient of a Weierstrass curve. -/\n  a₄ : R\n  /-- The `a₆` coefficient of a Weierstrass curve. -/\n  a₆ : R\n\n"}
{"name":"WeierstrassCurve.b_relation","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\n⊢ Eq (HMul.hMul 4 W.b₈) (HSub.hSub (HMul.hMul W.b₂ W.b₆) (HPow.hPow W.b₄ 2))","decl":"lemma b_relation : 4 * W.b₈ = W.b₂ * W.b₆ - W.b₄ ^ 2 := by\n  simp only [b₂, b₄, b₆, b₈]\n  ring1\n\n"}
{"name":"WeierstrassCurve.c_relation","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\n⊢ Eq (HMul.hMul 1728 W.Δ) (HSub.hSub (HPow.hPow W.c₄ 3) (HPow.hPow W.c₆ 2))","decl":"lemma c_relation : 1728 * W.Δ = W.c₄ ^ 3 - W.c₆ ^ 2 := by\n  simp only [b₂, b₄, b₆, b₈, c₄, c₆, Δ]\n  ring1\n\n"}
{"name":"WeierstrassCurve.b₂_of_char_two","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : CharP R 2\n⊢ Eq W.b₂ (HPow.hPow W.a₁ 2)","decl":"lemma b₂_of_char_two : W.b₂ = W.a₁ ^ 2 := by\n  rw [b₂]\n  linear_combination 2 * W.a₂ * CharP.cast_eq_zero R 2\n\n"}
{"name":"WeierstrassCurve.b₄_of_char_two","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : CharP R 2\n⊢ Eq W.b₄ (HMul.hMul W.a₁ W.a₃)","decl":"lemma b₄_of_char_two : W.b₄ = W.a₁ * W.a₃ := by\n  rw [b₄]\n  linear_combination W.a₄ * CharP.cast_eq_zero R 2\n\n"}
{"name":"WeierstrassCurve.b₆_of_char_two","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : CharP R 2\n⊢ Eq W.b₆ (HPow.hPow W.a₃ 2)","decl":"lemma b₆_of_char_two : W.b₆ = W.a₃ ^ 2 := by\n  rw [b₆]\n  linear_combination 2 * W.a₆ * CharP.cast_eq_zero R 2\n\n"}
{"name":"WeierstrassCurve.b₈_of_char_two","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : CharP R 2\n⊢ Eq W.b₈ (HAdd.hAdd (HAdd.hAdd (HAdd.hAdd (HMul.hMul (HPow.hPow W.a₁ 2) W.a₆) (HMul.hMul (HMul.hMul W.a₁ W.a₃) W.a₄)) (HMul.hMul W.a₂ (HPow.hPow W.a₃ 2))) (HPow.hPow W.a₄ 2))","decl":"lemma b₈_of_char_two :\n    W.b₈ = W.a₁ ^ 2 * W.a₆ + W.a₁ * W.a₃ * W.a₄ + W.a₂ * W.a₃ ^ 2 + W.a₄ ^ 2 := by\n  rw [b₈]\n  linear_combination (2 * W.a₂ * W.a₆ - W.a₁ * W.a₃ * W.a₄ - W.a₄ ^ 2) * CharP.cast_eq_zero R 2\n\n"}
{"name":"WeierstrassCurve.c₄_of_char_two","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : CharP R 2\n⊢ Eq W.c₄ (HPow.hPow W.a₁ 4)","decl":"lemma c₄_of_char_two : W.c₄ = W.a₁ ^ 4 := by\n  rw [c₄, b₂_of_char_two]\n  linear_combination -12 * W.b₄ * CharP.cast_eq_zero R 2\n\n"}
{"name":"WeierstrassCurve.c₆_of_char_two","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : CharP R 2\n⊢ Eq W.c₆ (HPow.hPow W.a₁ 6)","decl":"lemma c₆_of_char_two : W.c₆ = W.a₁ ^ 6 := by\n  rw [c₆, b₂_of_char_two]\n  linear_combination (18 * W.a₁ ^ 2 * W.b₄ - 108 * W.b₆ - W.a₁ ^ 6) * CharP.cast_eq_zero R 2\n\n"}
{"name":"WeierstrassCurve.Δ_of_char_two","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : CharP R 2\n⊢ Eq W.Δ (HAdd.hAdd (HAdd.hAdd (HMul.hMul (HPow.hPow W.a₁ 4) W.b₈) (HPow.hPow W.a₃ 4)) (HMul.hMul (HPow.hPow W.a₁ 3) (HPow.hPow W.a₃ 3)))","decl":"lemma Δ_of_char_two : W.Δ = W.a₁ ^ 4 * W.b₈ + W.a₃ ^ 4 + W.a₁ ^ 3 * W.a₃ ^ 3 := by\n  rw [Δ, b₂_of_char_two, b₄_of_char_two, b₆_of_char_two]\n  linear_combination (-W.a₁ ^ 4 * W.b₈ - 14 * W.a₃ ^ 4) * CharP.cast_eq_zero R 2\n\n"}
{"name":"WeierstrassCurve.b_relation_of_char_two","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : CharP R 2\n⊢ Eq (HMul.hMul W.b₂ W.b₆) (HPow.hPow W.b₄ 2)","decl":"lemma b_relation_of_char_two : W.b₂ * W.b₆ = W.b₄ ^ 2 := by\n  linear_combination -W.b_relation + 2 * W.b₈ * CharP.cast_eq_zero R 2\n\n"}
{"name":"WeierstrassCurve.c_relation_of_char_two","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : CharP R 2\n⊢ Eq (HPow.hPow W.c₄ 3) (HPow.hPow W.c₆ 2)","decl":"lemma c_relation_of_char_two : W.c₄ ^ 3 = W.c₆ ^ 2 := by\n  linear_combination -W.c_relation + 864 * W.Δ * CharP.cast_eq_zero R 2\n\n"}
{"name":"WeierstrassCurve.b₂_of_char_three","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : CharP R 3\n⊢ Eq W.b₂ (HAdd.hAdd (HPow.hPow W.a₁ 2) W.a₂)","decl":"lemma b₂_of_char_three : W.b₂ = W.a₁ ^ 2 + W.a₂ := by\n  rw [b₂]\n  linear_combination W.a₂ * CharP.cast_eq_zero R 3\n\n"}
{"name":"WeierstrassCurve.b₄_of_char_three","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : CharP R 3\n⊢ Eq W.b₄ (HAdd.hAdd (Neg.neg W.a₄) (HMul.hMul W.a₁ W.a₃))","decl":"lemma b₄_of_char_three : W.b₄ = -W.a₄ + W.a₁ * W.a₃ := by\n  rw [b₄]\n  linear_combination W.a₄ * CharP.cast_eq_zero R 3\n\n"}
{"name":"WeierstrassCurve.b₆_of_char_three","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : CharP R 3\n⊢ Eq W.b₆ (HAdd.hAdd (HPow.hPow W.a₃ 2) W.a₆)","decl":"lemma b₆_of_char_three : W.b₆ = W.a₃ ^ 2 + W.a₆ := by\n  rw [b₆]\n  linear_combination W.a₆ * CharP.cast_eq_zero R 3\n\n"}
{"name":"WeierstrassCurve.b₈_of_char_three","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : CharP R 3\n⊢ Eq W.b₈ (HSub.hSub (HAdd.hAdd (HSub.hSub (HAdd.hAdd (HMul.hMul (HPow.hPow W.a₁ 2) W.a₆) (HMul.hMul W.a₂ W.a₆)) (HMul.hMul (HMul.hMul W.a₁ W.a₃) W.a₄)) (HMul.hMul W.a₂ (HPow.hPow W.a₃ 2))) (HPow.hPow W.a₄ 2))","decl":"lemma b₈_of_char_three :\n    W.b₈ = W.a₁ ^ 2 * W.a₆ + W.a₂ * W.a₆ - W.a₁ * W.a₃ * W.a₄ + W.a₂ * W.a₃ ^ 2 - W.a₄ ^ 2 := by\n  rw [b₈]\n  linear_combination W.a₂ * W.a₆ * CharP.cast_eq_zero R 3\n\n"}
{"name":"WeierstrassCurve.c₄_of_char_three","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : CharP R 3\n⊢ Eq W.c₄ (HPow.hPow W.b₂ 2)","decl":"lemma c₄_of_char_three : W.c₄ = W.b₂ ^ 2 := by\n  rw [c₄]\n  linear_combination -8 * W.b₄ * CharP.cast_eq_zero R 3\n\n"}
{"name":"WeierstrassCurve.c₆_of_char_three","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : CharP R 3\n⊢ Eq W.c₆ (Neg.neg (HPow.hPow W.b₂ 3))","decl":"lemma c₆_of_char_three : W.c₆ = -W.b₂ ^ 3 := by\n  rw [c₆]\n  linear_combination (12 * W.b₂ * W.b₄ - 72 * W.b₆) * CharP.cast_eq_zero R 3\n\n"}
{"name":"WeierstrassCurve.Δ_of_char_three","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : CharP R 3\n⊢ Eq W.Δ (HSub.hSub (HMul.hMul (Neg.neg (HPow.hPow W.b₂ 2)) W.b₈) (HMul.hMul 8 (HPow.hPow W.b₄ 3)))","decl":"lemma Δ_of_char_three : W.Δ = -W.b₂ ^ 2 * W.b₈ - 8 * W.b₄ ^ 3 := by\n  rw [Δ]\n  linear_combination (-9 * W.b₆ ^ 2 + 3 * W.b₂ * W.b₄ * W.b₆) * CharP.cast_eq_zero R 3\n\n"}
{"name":"WeierstrassCurve.b_relation_of_char_three","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : CharP R 3\n⊢ Eq W.b₈ (HSub.hSub (HMul.hMul W.b₂ W.b₆) (HPow.hPow W.b₄ 2))","decl":"lemma b_relation_of_char_three : W.b₈ = W.b₂ * W.b₆ - W.b₄ ^ 2 := by\n  linear_combination W.b_relation - W.b₈ * CharP.cast_eq_zero R 3\n\n"}
{"name":"WeierstrassCurve.c_relation_of_char_three","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : CharP R 3\n⊢ Eq (HPow.hPow W.c₄ 3) (HPow.hPow W.c₆ 2)","decl":"lemma c_relation_of_char_three : W.c₄ ^ 3 = W.c₆ ^ 2 := by\n  linear_combination -W.c_relation + 576 * W.Δ * CharP.cast_eq_zero R 3\n\n"}
{"name":"WeierstrassCurve.map_a₆","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\nA : Type v\ninst✝ : CommRing A\nφ : RingHom R A\n⊢ Eq (W.map φ).a₆ (φ W.a₆)","decl":"/-- The Weierstrass curve mapped over a ring homomorphism `φ : R →+* A`. -/\n@[simps]\ndef map : WeierstrassCurve A :=\n  ⟨φ W.a₁, φ W.a₂, φ W.a₃, φ W.a₄, φ W.a₆⟩\n\n"}
{"name":"WeierstrassCurve.map_a₄","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\nA : Type v\ninst✝ : CommRing A\nφ : RingHom R A\n⊢ Eq (W.map φ).a₄ (φ W.a₄)","decl":"/-- The Weierstrass curve mapped over a ring homomorphism `φ : R →+* A`. -/\n@[simps]\ndef map : WeierstrassCurve A :=\n  ⟨φ W.a₁, φ W.a₂, φ W.a₃, φ W.a₄, φ W.a₆⟩\n\n"}
{"name":"WeierstrassCurve.map_a₂","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\nA : Type v\ninst✝ : CommRing A\nφ : RingHom R A\n⊢ Eq (W.map φ).a₂ (φ W.a₂)","decl":"/-- The Weierstrass curve mapped over a ring homomorphism `φ : R →+* A`. -/\n@[simps]\ndef map : WeierstrassCurve A :=\n  ⟨φ W.a₁, φ W.a₂, φ W.a₃, φ W.a₄, φ W.a₆⟩\n\n"}
{"name":"WeierstrassCurve.map_a₃","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\nA : Type v\ninst✝ : CommRing A\nφ : RingHom R A\n⊢ Eq (W.map φ).a₃ (φ W.a₃)","decl":"/-- The Weierstrass curve mapped over a ring homomorphism `φ : R →+* A`. -/\n@[simps]\ndef map : WeierstrassCurve A :=\n  ⟨φ W.a₁, φ W.a₂, φ W.a₃, φ W.a₄, φ W.a₆⟩\n\n"}
{"name":"WeierstrassCurve.map_a₁","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\nA : Type v\ninst✝ : CommRing A\nφ : RingHom R A\n⊢ Eq (W.map φ).a₁ (φ W.a₁)","decl":"/-- The Weierstrass curve mapped over a ring homomorphism `φ : R →+* A`. -/\n@[simps]\ndef map : WeierstrassCurve A :=\n  ⟨φ W.a₁, φ W.a₂, φ W.a₃, φ W.a₄, φ W.a₆⟩\n\n"}
{"name":"WeierstrassCurve.map_b₂","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\nA : Type v\ninst✝ : CommRing A\nφ : RingHom R A\n⊢ Eq (W.map φ).b₂ (φ W.b₂)","decl":"@[simp]\nlemma map_b₂ : (W.map φ).b₂ = φ W.b₂ := by\n  simp only [b₂, map_a₁, map_a₂]\n  map_simp\n\n"}
{"name":"WeierstrassCurve.map_b₄","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\nA : Type v\ninst✝ : CommRing A\nφ : RingHom R A\n⊢ Eq (W.map φ).b₄ (φ W.b₄)","decl":"@[simp]\nlemma map_b₄ : (W.map φ).b₄ = φ W.b₄ := by\n  simp only [b₄, map_a₁, map_a₃, map_a₄]\n  map_simp\n\n"}
{"name":"WeierstrassCurve.map_b₆","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\nA : Type v\ninst✝ : CommRing A\nφ : RingHom R A\n⊢ Eq (W.map φ).b₆ (φ W.b₆)","decl":"@[simp]\nlemma map_b₆ : (W.map φ).b₆ = φ W.b₆ := by\n  simp only [b₆, map_a₃, map_a₆]\n  map_simp\n\n"}
{"name":"WeierstrassCurve.map_b₈","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\nA : Type v\ninst✝ : CommRing A\nφ : RingHom R A\n⊢ Eq (W.map φ).b₈ (φ W.b₈)","decl":"@[simp]\nlemma map_b₈ : (W.map φ).b₈ = φ W.b₈ := by\n  simp only [b₈, map_a₁, map_a₂, map_a₃, map_a₄, map_a₆]\n  map_simp\n\n"}
{"name":"WeierstrassCurve.map_c₄","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\nA : Type v\ninst✝ : CommRing A\nφ : RingHom R A\n⊢ Eq (W.map φ).c₄ (φ W.c₄)","decl":"@[simp]\nlemma map_c₄ : (W.map φ).c₄ = φ W.c₄ := by\n  simp only [c₄, map_b₂, map_b₄]\n  map_simp\n\n"}
{"name":"WeierstrassCurve.map_c₆","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\nA : Type v\ninst✝ : CommRing A\nφ : RingHom R A\n⊢ Eq (W.map φ).c₆ (φ W.c₆)","decl":"@[simp]\nlemma map_c₆ : (W.map φ).c₆ = φ W.c₆ := by\n  simp only [c₆, map_b₂, map_b₄, map_b₆]\n  map_simp\n\n"}
{"name":"WeierstrassCurve.map_Δ","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\nA : Type v\ninst✝ : CommRing A\nφ : RingHom R A\n⊢ Eq (W.map φ).Δ (φ W.Δ)","decl":"@[simp]\nlemma map_Δ : (W.map φ).Δ = φ W.Δ := by\n  simp only [Δ, map_b₂, map_b₄, map_b₆, map_b₈]\n  map_simp\n\n"}
{"name":"WeierstrassCurve.map_id","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\n⊢ Eq (W.map (RingHom.id R)) W","decl":"@[simp]\nlemma map_id : W.map (RingHom.id R) = W :=\n  rfl\n\n"}
{"name":"WeierstrassCurve.map_map","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝² : CommRing R\nW : WeierstrassCurve R\nA : Type v\ninst✝¹ : CommRing A\nφ : RingHom R A\nB : Type w\ninst✝ : CommRing B\nψ : RingHom A B\n⊢ Eq ((W.map φ).map ψ) (W.map (ψ.comp φ))","decl":"lemma map_map {B : Type w} [CommRing B] (ψ : A →+* B) : (W.map φ).map ψ = W.map (ψ.comp φ) :=\n  rfl\n\n"}
{"name":"WeierstrassCurve.map_baseChange","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹⁰ : CommRing R\nW : WeierstrassCurve R\nS : Type s\ninst✝⁹ : CommRing S\ninst✝⁸ : Algebra R S\nA : Type v\ninst✝⁷ : CommRing A\ninst✝⁶ : Algebra R A\ninst✝⁵ : Algebra S A\ninst✝⁴ : IsScalarTower R S A\nB : Type w\ninst✝³ : CommRing B\ninst✝² : Algebra R B\ninst✝¹ : Algebra S B\ninst✝ : IsScalarTower R S B\nψ : AlgHom S A B\n⊢ Eq ((W.baseChange A).map ↑ψ) (W.baseChange B)","decl":"@[simp]\nlemma map_baseChange {S : Type s} [CommRing S] [Algebra R S] {A : Type v} [CommRing A] [Algebra R A]\n    [Algebra S A] [IsScalarTower R S A] {B : Type w} [CommRing B] [Algebra R B] [Algebra S B]\n    [IsScalarTower R S B] (ψ : A →ₐ[S] B) : (W.baseChange A).map ψ = W.baseChange B :=\n  congr_arg W.map <| ψ.comp_algebraMap_of_tower R\n\n"}
{"name":"WeierstrassCurve.map_injective","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nA : Type v\ninst✝ : CommRing A\nφ : RingHom R A\nhφ : Function.Injective ⇑φ\n⊢ Function.Injective fun W => W.map φ","decl":"lemma map_injective {φ : R →+* A} (hφ : Function.Injective φ) :\n    Function.Injective <| map (φ := φ) := fun _ _ h => by\n  rcases mk.inj h with ⟨_, _, _, _, _⟩\n  ext <;> apply_fun _ using hφ <;> assumption\n\n"}
{"name":"WeierstrassCurve.twoTorsionPolynomial_disc","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\n⊢ Eq W.twoTorsionPolynomial.disc (HMul.hMul 16 W.Δ)","decl":"lemma twoTorsionPolynomial_disc : W.twoTorsionPolynomial.disc = 16 * W.Δ := by\n  simp only [b₂, b₄, b₆, b₈, Δ, twoTorsionPolynomial, Cubic.disc]\n  ring1\n\n"}
{"name":"WeierstrassCurve.twoTorsionPolynomial_of_char_two","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : CharP R 2\n⊢ Eq W.twoTorsionPolynomial { a := 0, b := W.b₂, c := 0, d := W.b₆ }","decl":"lemma twoTorsionPolynomial_of_char_two : W.twoTorsionPolynomial = ⟨0, W.b₂, 0, W.b₆⟩ := by\n  rw [twoTorsionPolynomial]\n  ext <;> dsimp\n  · linear_combination 2 * CharP.cast_eq_zero R 2\n  · linear_combination W.b₄ * CharP.cast_eq_zero R 2\n\n"}
{"name":"WeierstrassCurve.twoTorsionPolynomial_disc_of_char_two","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : CharP R 2\n⊢ Eq W.twoTorsionPolynomial.disc 0","decl":"lemma twoTorsionPolynomial_disc_of_char_two : W.twoTorsionPolynomial.disc = 0 := by\n  linear_combination W.twoTorsionPolynomial_disc + 8 * W.Δ * CharP.cast_eq_zero R 2\n\n"}
{"name":"WeierstrassCurve.twoTorsionPolynomial_of_char_three","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : CharP R 3\n⊢ Eq W.twoTorsionPolynomial { a := 1, b := W.b₂, c := Neg.neg W.b₄, d := W.b₆ }","decl":"lemma twoTorsionPolynomial_of_char_three : W.twoTorsionPolynomial = ⟨1, W.b₂, -W.b₄, W.b₆⟩ := by\n  rw [twoTorsionPolynomial]\n  ext <;> dsimp\n  · linear_combination CharP.cast_eq_zero R 3\n  · linear_combination W.b₄ * CharP.cast_eq_zero R 3\n\n"}
{"name":"WeierstrassCurve.twoTorsionPolynomial_disc_of_char_three","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : CharP R 3\n⊢ Eq W.twoTorsionPolynomial.disc W.Δ","decl":"lemma twoTorsionPolynomial_disc_of_char_three : W.twoTorsionPolynomial.disc = W.Δ := by\n  linear_combination W.twoTorsionPolynomial_disc + 5 * W.Δ * CharP.cast_eq_zero R 3\n\n"}
{"name":"WeierstrassCurve.twoTorsionPolynomial_disc_isUnit","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nhu : IsUnit 2\n⊢ Iff (IsUnit W.twoTorsionPolynomial.disc) (IsUnit W.Δ)","decl":"lemma twoTorsionPolynomial_disc_isUnit (hu : IsUnit (2 : R)) :\n    IsUnit W.twoTorsionPolynomial.disc ↔ IsUnit W.Δ := by\n  rw [twoTorsionPolynomial_disc, IsUnit.mul_iff, show (16 : R) = 2 ^ 4 by norm_num1]\n  exact and_iff_right <| hu.pow 4\n\n-- TODO: change to `[IsUnit ...]` once #17458 is merged\n-- TODO: In this case `IsUnit W.Δ` is just `W.IsElliptic`, consider removing/rephrasing this result\n"}
{"name":"WeierstrassCurve.twoTorsionPolynomial_disc_ne_zero","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : Nontrivial R\nhu : IsUnit 2\nhΔ : IsUnit W.Δ\n⊢ Ne W.twoTorsionPolynomial.disc 0","decl":"lemma twoTorsionPolynomial_disc_ne_zero [Nontrivial R] (hu : IsUnit (2 : R)) (hΔ : IsUnit W.Δ) :\n    W.twoTorsionPolynomial.disc ≠ 0 :=\n  ((W.twoTorsionPolynomial_disc_isUnit hu).mpr hΔ).ne_zero\n\n"}
{"name":"WeierstrassCurve.IsElliptic.isUnit","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\nself : W.IsElliptic\n⊢ IsUnit W.Δ","decl":"/-- `WeierstrassCurve.IsElliptic` is a typeclass which asserts that a Weierstrass curve is an\nelliptic curve: that its discriminant is a unit. Note that this definition is only mathematically\naccurate for certain rings whose Picard group has trivial 12-torsion, such as a field or a PID. -/\n@[mk_iff]\nprotected class IsElliptic : Prop where\n  isUnit : IsUnit W.Δ\n\n"}
{"name":"WeierstrassCurve.isElliptic_iff","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝ : CommRing R\nW : WeierstrassCurve R\n⊢ Iff W.IsElliptic (IsUnit W.Δ)","decl":"/-- `WeierstrassCurve.IsElliptic` is a typeclass which asserts that a Weierstrass curve is an\nelliptic curve: that its discriminant is a unit. Note that this definition is only mathematically\naccurate for certain rings whose Picard group has trivial 12-torsion, such as a field or a PID. -/\n@[mk_iff]\nprotected class IsElliptic : Prop where\n  isUnit : IsUnit W.Δ\n\n"}
{"name":"WeierstrassCurve.isUnit_Δ","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : W.IsElliptic\n⊢ IsUnit W.Δ","decl":"lemma isUnit_Δ : IsUnit W.Δ := IsElliptic.isUnit\n\n"}
{"name":"WeierstrassCurve.coe_Δ'","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : W.IsElliptic\n⊢ Eq (↑W.Δ') W.Δ","decl":"/-- The discriminant `Δ'` of an elliptic curve is equal to the\ndiscriminant `Δ` of it as a Weierstrass curve. -/\n@[simp]\nlemma coe_Δ' : W.Δ' = W.Δ := rfl\n\n"}
{"name":"WeierstrassCurve.j_eq_zero_iff'","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : W.IsElliptic\n⊢ Iff (Eq W.j 0) (Eq (HPow.hPow W.c₄ 3) 0)","decl":"/-- A variant of `WeierstrassCurve.j_eq_zero_iff` without assuming a reduced ring. -/\nlemma j_eq_zero_iff' : W.j = 0 ↔ W.c₄ ^ 3 = 0 := by\n  rw [j, Units.mul_right_eq_zero]\n\n"}
{"name":"WeierstrassCurve.j_eq_zero","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\ninst✝ : W.IsElliptic\nh : Eq W.c₄ 0\n⊢ Eq W.j 0","decl":"lemma j_eq_zero (h : W.c₄ = 0) : W.j = 0 := by\n  rw [j_eq_zero_iff', h, zero_pow three_ne_zero]\n\n"}
{"name":"WeierstrassCurve.j_eq_zero_iff","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝² : CommRing R\nW : WeierstrassCurve R\ninst✝¹ : W.IsElliptic\ninst✝ : IsReduced R\n⊢ Iff (Eq W.j 0) (Eq W.c₄ 0)","decl":"lemma j_eq_zero_iff [IsReduced R] : W.j = 0 ↔ W.c₄ = 0 := by\n  rw [j_eq_zero_iff', IsReduced.pow_eq_zero_iff three_ne_zero]\n\n"}
{"name":"WeierstrassCurve.j_of_char_two","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝² : CommRing R\nW : WeierstrassCurve R\ninst✝¹ : W.IsElliptic\ninst✝ : CharP R 2\n⊢ Eq W.j (HMul.hMul (↑(Inv.inv W.Δ')) (HPow.hPow W.a₁ 12))","decl":"lemma j_of_char_two : W.j = W.Δ'⁻¹ * W.a₁ ^ 12 := by\n  rw [j, W.c₄_of_char_two, ← pow_mul]\n\n"}
{"name":"WeierstrassCurve.j_eq_zero_iff_of_char_two'","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝² : CommRing R\nW : WeierstrassCurve R\ninst✝¹ : W.IsElliptic\ninst✝ : CharP R 2\n⊢ Iff (Eq W.j 0) (Eq (HPow.hPow W.a₁ 12) 0)","decl":"/-- A variant of `WeierstrassCurve.j_eq_zero_iff_of_char_two` without assuming a reduced ring. -/\nlemma j_eq_zero_iff_of_char_two' : W.j = 0 ↔ W.a₁ ^ 12 = 0 := by\n  rw [j_of_char_two, Units.mul_right_eq_zero]\n\n"}
{"name":"WeierstrassCurve.j_eq_zero_of_char_two","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝² : CommRing R\nW : WeierstrassCurve R\ninst✝¹ : W.IsElliptic\ninst✝ : CharP R 2\nh : Eq W.a₁ 0\n⊢ Eq W.j 0","decl":"lemma j_eq_zero_of_char_two (h : W.a₁ = 0) : W.j = 0 := by\n  rw [j_eq_zero_iff_of_char_two', h, zero_pow (Nat.succ_ne_zero _)]\n\n"}
{"name":"WeierstrassCurve.j_eq_zero_iff_of_char_two","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝³ : CommRing R\nW : WeierstrassCurve R\ninst✝² : W.IsElliptic\ninst✝¹ : CharP R 2\ninst✝ : IsReduced R\n⊢ Iff (Eq W.j 0) (Eq W.a₁ 0)","decl":"lemma j_eq_zero_iff_of_char_two [IsReduced R] : W.j = 0 ↔ W.a₁ = 0 := by\n  rw [j_eq_zero_iff_of_char_two', IsReduced.pow_eq_zero_iff (Nat.succ_ne_zero _)]\n\n"}
{"name":"WeierstrassCurve.j_of_char_three","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝² : CommRing R\nW : WeierstrassCurve R\ninst✝¹ : W.IsElliptic\ninst✝ : CharP R 3\n⊢ Eq W.j (HMul.hMul (↑(Inv.inv W.Δ')) (HPow.hPow W.b₂ 6))","decl":"lemma j_of_char_three : W.j = W.Δ'⁻¹ * W.b₂ ^ 6 := by\n  rw [j, W.c₄_of_char_three, ← pow_mul]\n\n"}
{"name":"WeierstrassCurve.j_eq_zero_iff_of_char_three'","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝² : CommRing R\nW : WeierstrassCurve R\ninst✝¹ : W.IsElliptic\ninst✝ : CharP R 3\n⊢ Iff (Eq W.j 0) (Eq (HPow.hPow W.b₂ 6) 0)","decl":"/-- A variant of `WeierstrassCurve.j_eq_zero_iff_of_char_three` without assuming a reduced ring. -/\nlemma j_eq_zero_iff_of_char_three' : W.j = 0 ↔ W.b₂ ^ 6 = 0 := by\n  rw [j_of_char_three, Units.mul_right_eq_zero]\n\n"}
{"name":"WeierstrassCurve.j_eq_zero_of_char_three","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝² : CommRing R\nW : WeierstrassCurve R\ninst✝¹ : W.IsElliptic\ninst✝ : CharP R 3\nh : Eq W.b₂ 0\n⊢ Eq W.j 0","decl":"lemma j_eq_zero_of_char_three (h : W.b₂ = 0) : W.j = 0 := by\n  rw [j_eq_zero_iff_of_char_three', h, zero_pow (Nat.succ_ne_zero _)]\n\n"}
{"name":"WeierstrassCurve.j_eq_zero_iff_of_char_three","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝³ : CommRing R\nW : WeierstrassCurve R\ninst✝² : W.IsElliptic\ninst✝¹ : CharP R 3\ninst✝ : IsReduced R\n⊢ Iff (Eq W.j 0) (Eq W.b₂ 0)","decl":"lemma j_eq_zero_iff_of_char_three [IsReduced R] : W.j = 0 ↔ W.b₂ = 0 := by\n  rw [j_eq_zero_iff_of_char_three', IsReduced.pow_eq_zero_iff (Nat.succ_ne_zero _)]\n\n"}
{"name":"WeierstrassCurve.twoTorsionPolynomial_disc_ne_zero_of_isElliptic","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝² : CommRing R\nW : WeierstrassCurve R\ninst✝¹ : W.IsElliptic\ninst✝ : Nontrivial R\nhu : IsUnit 2\n⊢ Ne W.twoTorsionPolynomial.disc 0","decl":"lemma twoTorsionPolynomial_disc_ne_zero_of_isElliptic [Nontrivial R] (hu : IsUnit (2 : R)) :\n    W.twoTorsionPolynomial.disc ≠ 0 :=\n  W.twoTorsionPolynomial_disc_ne_zero hu W.isUnit_Δ\n\n"}
{"name":"WeierstrassCurve.instIsEllipticMap","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝¹ : CommRing R\nW : WeierstrassCurve R\nA : Type v\ninst✝ : CommRing A\nφ : RingHom R A\n⊢ (W.map φ).IsElliptic","decl":"instance : (W.map φ).IsElliptic := by\n  simp only [isElliptic_iff, map_Δ, W.isUnit_Δ.map]\n\n"}
{"name":"WeierstrassCurve.coe_map_Δ'","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝² : CommRing R\nW : WeierstrassCurve R\ninst✝¹ : W.IsElliptic\nA : Type v\ninst✝ : CommRing A\nφ : RingHom R A\n⊢ Eq (↑(W.map φ).Δ') (φ ↑W.Δ')","decl":"set_option linter.docPrime false in\nlemma coe_map_Δ' : (W.map φ).Δ' = φ W.Δ' := by\n  rw [coe_Δ', map_Δ, coe_Δ']\n\n"}
{"name":"WeierstrassCurve.map_Δ'","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝² : CommRing R\nW : WeierstrassCurve R\ninst✝¹ : W.IsElliptic\nA : Type v\ninst✝ : CommRing A\nφ : RingHom R A\n⊢ Eq (W.map φ).Δ' ((Units.map ↑φ) W.Δ')","decl":"set_option linter.docPrime false in\n@[simp]\nlemma map_Δ' : (W.map φ).Δ' = Units.map φ W.Δ' := by\n  ext\n  exact W.coe_map_Δ' φ\n\n"}
{"name":"WeierstrassCurve.coe_inv_map_Δ'","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝² : CommRing R\nW : WeierstrassCurve R\ninst✝¹ : W.IsElliptic\nA : Type v\ninst✝ : CommRing A\nφ : RingHom R A\n⊢ Eq (↑(Inv.inv (W.map φ).Δ')) (φ ↑(Inv.inv W.Δ'))","decl":"set_option linter.docPrime false in\nlemma coe_inv_map_Δ' : (W.map φ).Δ'⁻¹ = φ ↑W.Δ'⁻¹ := by\n  simp\n\n"}
{"name":"WeierstrassCurve.inv_map_Δ'","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝² : CommRing R\nW : WeierstrassCurve R\ninst✝¹ : W.IsElliptic\nA : Type v\ninst✝ : CommRing A\nφ : RingHom R A\n⊢ Eq (Inv.inv (W.map φ).Δ') ((Units.map ↑φ) (Inv.inv W.Δ'))","decl":"set_option linter.docPrime false in\nlemma inv_map_Δ' : (W.map φ).Δ'⁻¹ = Units.map φ W.Δ'⁻¹ := by\n  simp\n\n"}
{"name":"WeierstrassCurve.map_j","module":"Mathlib.AlgebraicGeometry.EllipticCurve.Weierstrass","initialProofState":"R : Type u\ninst✝² : CommRing R\nW : WeierstrassCurve R\ninst✝¹ : W.IsElliptic\nA : Type v\ninst✝ : CommRing A\nφ : RingHom R A\n⊢ Eq (W.map φ).j (φ W.j)","decl":"@[simp]\nlemma map_j : (W.map φ).j = φ W.j := by\n  rw [j, coe_inv_map_Δ', map_c₄, j, map_mul, map_pow]\n\n"}
