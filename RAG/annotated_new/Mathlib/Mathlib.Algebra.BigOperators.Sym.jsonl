{"name":"Finset.sum_sym2_filter_not_isDiag","module":"Mathlib.Algebra.BigOperators.Sym","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝¹ : LinearOrder ι\ninst✝ : AddCommMonoid α\ns : Finset ι\np : Sym2 ι → α\n⊢ Eq ((Finset.filter (fun i => Not i.IsDiag) s.sym2).sum fun i => p i) ((Finset.filter (fun i => LT.lt i.1 i.2) s.offDiag).sum fun i => p (Sym2.mk { fst := i.1, snd := i.2 }))","decl":"theorem Finset.sum_sym2_filter_not_isDiag {ι α} [LinearOrder ι] [AddCommMonoid α]\n    (s : Finset ι) (p : Sym2 ι → α) :\n    ∑ i ∈ s.sym2 with ¬ i.IsDiag, p i = ∑ i ∈ s.offDiag with i.1 < i.2, p s(i.1, i.2) := by\n  rw [Finset.offDiag_filter_lt_eq_filter_le]\n  conv_rhs => rw [← Finset.sum_subtype_eq_sum_filter]\n  refine (Finset.sum_equiv Sym2.sortEquiv.symm ?_ ?_).symm\n  · rintro ⟨⟨i₁, j₁⟩, hij₁⟩\n    simp [and_assoc]\n  · rintro ⟨⟨i₁, j₁⟩, hij₁⟩\n    simp\n"}
