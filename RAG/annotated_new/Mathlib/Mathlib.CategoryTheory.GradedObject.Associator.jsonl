{"name":"CategoryTheory.GradedObject.ι_mapBifunctorAssociator_hom_assoc","module":"Mathlib.CategoryTheory.GradedObject.Associator","initialProofState":"C₁ : Type u_1\nC₂ : Type u_2\nC₁₂ : Type u_3\nC₂₃ : Type u_4\nC₃ : Type u_5\nC₄ : Type u_6\ninst✝⁹ : CategoryTheory.Category.{u_15, u_1} C₁\ninst✝⁸ : CategoryTheory.Category.{u_14, u_2} C₂\ninst✝⁷ : CategoryTheory.Category.{u_12, u_5} C₃\ninst✝⁶ : CategoryTheory.Category.{u_11, u_6} C₄\ninst✝⁵ : CategoryTheory.Category.{u_13, u_3} C₁₂\ninst✝⁴ : CategoryTheory.Category.{u_17, u_4} C₂₃\nF₁₂ : CategoryTheory.Functor C₁ (CategoryTheory.Functor C₂ C₁₂)\nG : CategoryTheory.Functor C₁₂ (CategoryTheory.Functor C₃ C₄)\nF : CategoryTheory.Functor C₁ (CategoryTheory.Functor C₂₃ C₄)\nG₂₃ : CategoryTheory.Functor C₂ (CategoryTheory.Functor C₃ C₂₃)\nassociator : CategoryTheory.Iso (CategoryTheory.bifunctorComp₁₂ F₁₂ G) (CategoryTheory.bifunctorComp₂₃ F G₂₃)\nI₁ : Type u_7\nI₂ : Type u_8\nI₃ : Type u_9\nJ : Type u_10\nr : Prod I₁ (Prod I₂ I₃) → J\nρ₁₂ : CategoryTheory.GradedObject.BifunctorComp₁₂IndexData r\nρ₂₃ : CategoryTheory.GradedObject.BifunctorComp₂₃IndexData r\nX₁ : CategoryTheory.GradedObject I₁ C₁\nX₂ : CategoryTheory.GradedObject I₂ C₂\nX₃ : CategoryTheory.GradedObject I₃ C₃\ninst✝³ : (((CategoryTheory.GradedObject.mapBifunctor F₁₂ I₁ I₂).obj X₁).obj X₂).HasMap ρ₁₂.p\ninst✝² : (((CategoryTheory.GradedObject.mapBifunctor G ρ₁₂.I₁₂ I₃).obj (CategoryTheory.GradedObject.mapBifunctorMapObj F₁₂ ρ₁₂.p X₁ X₂)).obj X₃).HasMap ρ₁₂.q\ninst✝¹ : (((CategoryTheory.GradedObject.mapBifunctor G₂₃ I₂ I₃).obj X₂).obj X₃).HasMap ρ₂₃.p\ninst✝ : (((CategoryTheory.GradedObject.mapBifunctor F I₁ ρ₂₃.I₂₃).obj X₁).obj (CategoryTheory.GradedObject.mapBifunctorMapObj G₂₃ ρ₂₃.p X₂ X₃)).HasMap ρ₂₃.q\nH₁₂ : CategoryTheory.GradedObject.HasGoodTrifunctor₁₂Obj F₁₂ G ρ₁₂ X₁ X₂ X₃\nH₂₃ : CategoryTheory.GradedObject.HasGoodTrifunctor₂₃Obj F G₂₃ ρ₂₃ X₁ X₂ X₃\ni₁ : I₁\ni₂ : I₂\ni₃ : I₃\nj : J\nh✝ : Eq (r { fst := i₁, snd := { fst := i₂, snd := i₃ } }) j\nZ : C₄\nh : Quiver.Hom (CategoryTheory.GradedObject.mapBifunctorMapObj F ρ₂₃.q X₁ (CategoryTheory.GradedObject.mapBifunctorMapObj G₂₃ ρ₂₃.p X₂ X₃) j) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.GradedObject.ιMapBifunctor₁₂BifunctorMapObj F₁₂ G ρ₁₂ X₁ X₂ X₃ i₁ i₂ i₃ j h✝) (CategoryTheory.CategoryStruct.comp ((CategoryTheory.GradedObject.mapBifunctorAssociator associator ρ₁₂ ρ₂₃ X₁ X₂ X₃).hom j) h)) (CategoryTheory.CategoryStruct.comp (((associator.hom.app (X₁ i₁)).app (X₂ i₂)).app (X₃ i₃)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.GradedObject.ιMapBifunctorBifunctor₂₃MapObj F G₂₃ ρ₂₃ X₁ X₂ X₃ i₁ i₂ i₃ j h✝) h))","decl":"@[reassoc (attr := simp, nolint unusedHavesSuffices)]\nlemma ι_mapBifunctorAssociator_hom (i₁ : I₁) (i₂ : I₂) (i₃ : I₃) (j : J) (h : r (i₁, i₂, i₃) = j) :\n    ιMapBifunctor₁₂BifunctorMapObj F₁₂ G ρ₁₂ X₁ X₂ X₃ i₁ i₂ i₃ j h ≫\n      (mapBifunctorAssociator associator ρ₁₂ ρ₂₃ X₁ X₂ X₃).hom j =\n        ((associator.hom.app (X₁ i₁)).app (X₂ i₂)).app (X₃ i₃) ≫\n          ιMapBifunctorBifunctor₂₃MapObj F G₂₃ ρ₂₃ X₁ X₂ X₃ i₁ i₂ i₃ j h := by\n  have := H₁₂.hasMap\n  have := H₂₃.hasMap\n  dsimp [mapBifunctorAssociator]\n  rw [ι_mapBifunctorComp₁₂MapObjIso_inv_assoc, ιMapTrifunctorMapObj,\n    ι_mapMap_assoc, mapTrifunctorMapNatTrans_app_app_app]\n  erw [ι_mapBifunctorComp₂₃MapObjIso_hom]\n\n"}
{"name":"CategoryTheory.GradedObject.ι_mapBifunctorAssociator_hom","module":"Mathlib.CategoryTheory.GradedObject.Associator","initialProofState":"C₁ : Type u_1\nC₂ : Type u_2\nC₁₂ : Type u_3\nC₂₃ : Type u_4\nC₃ : Type u_5\nC₄ : Type u_6\ninst✝⁹ : CategoryTheory.Category.{u_15, u_1} C₁\ninst✝⁸ : CategoryTheory.Category.{u_14, u_2} C₂\ninst✝⁷ : CategoryTheory.Category.{u_12, u_5} C₃\ninst✝⁶ : CategoryTheory.Category.{u_11, u_6} C₄\ninst✝⁵ : CategoryTheory.Category.{u_13, u_3} C₁₂\ninst✝⁴ : CategoryTheory.Category.{u_17, u_4} C₂₃\nF₁₂ : CategoryTheory.Functor C₁ (CategoryTheory.Functor C₂ C₁₂)\nG : CategoryTheory.Functor C₁₂ (CategoryTheory.Functor C₃ C₄)\nF : CategoryTheory.Functor C₁ (CategoryTheory.Functor C₂₃ C₄)\nG₂₃ : CategoryTheory.Functor C₂ (CategoryTheory.Functor C₃ C₂₃)\nassociator : CategoryTheory.Iso (CategoryTheory.bifunctorComp₁₂ F₁₂ G) (CategoryTheory.bifunctorComp₂₃ F G₂₃)\nI₁ : Type u_7\nI₂ : Type u_8\nI₃ : Type u_9\nJ : Type u_10\nr : Prod I₁ (Prod I₂ I₃) → J\nρ₁₂ : CategoryTheory.GradedObject.BifunctorComp₁₂IndexData r\nρ₂₃ : CategoryTheory.GradedObject.BifunctorComp₂₃IndexData r\nX₁ : CategoryTheory.GradedObject I₁ C₁\nX₂ : CategoryTheory.GradedObject I₂ C₂\nX₃ : CategoryTheory.GradedObject I₃ C₃\ninst✝³ : (((CategoryTheory.GradedObject.mapBifunctor F₁₂ I₁ I₂).obj X₁).obj X₂).HasMap ρ₁₂.p\ninst✝² : (((CategoryTheory.GradedObject.mapBifunctor G ρ₁₂.I₁₂ I₃).obj (CategoryTheory.GradedObject.mapBifunctorMapObj F₁₂ ρ₁₂.p X₁ X₂)).obj X₃).HasMap ρ₁₂.q\ninst✝¹ : (((CategoryTheory.GradedObject.mapBifunctor G₂₃ I₂ I₃).obj X₂).obj X₃).HasMap ρ₂₃.p\ninst✝ : (((CategoryTheory.GradedObject.mapBifunctor F I₁ ρ₂₃.I₂₃).obj X₁).obj (CategoryTheory.GradedObject.mapBifunctorMapObj G₂₃ ρ₂₃.p X₂ X₃)).HasMap ρ₂₃.q\nH₁₂ : CategoryTheory.GradedObject.HasGoodTrifunctor₁₂Obj F₁₂ G ρ₁₂ X₁ X₂ X₃\nH₂₃ : CategoryTheory.GradedObject.HasGoodTrifunctor₂₃Obj F G₂₃ ρ₂₃ X₁ X₂ X₃\ni₁ : I₁\ni₂ : I₂\ni₃ : I₃\nj : J\nh : Eq (r { fst := i₁, snd := { fst := i₂, snd := i₃ } }) j\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.GradedObject.ιMapBifunctor₁₂BifunctorMapObj F₁₂ G ρ₁₂ X₁ X₂ X₃ i₁ i₂ i₃ j h) ((CategoryTheory.GradedObject.mapBifunctorAssociator associator ρ₁₂ ρ₂₃ X₁ X₂ X₃).hom j)) (CategoryTheory.CategoryStruct.comp (((associator.hom.app (X₁ i₁)).app (X₂ i₂)).app (X₃ i₃)) (CategoryTheory.GradedObject.ιMapBifunctorBifunctor₂₃MapObj F G₂₃ ρ₂₃ X₁ X₂ X₃ i₁ i₂ i₃ j h))","decl":"@[reassoc (attr := simp, nolint unusedHavesSuffices)]\nlemma ι_mapBifunctorAssociator_hom (i₁ : I₁) (i₂ : I₂) (i₃ : I₃) (j : J) (h : r (i₁, i₂, i₃) = j) :\n    ιMapBifunctor₁₂BifunctorMapObj F₁₂ G ρ₁₂ X₁ X₂ X₃ i₁ i₂ i₃ j h ≫\n      (mapBifunctorAssociator associator ρ₁₂ ρ₂₃ X₁ X₂ X₃).hom j =\n        ((associator.hom.app (X₁ i₁)).app (X₂ i₂)).app (X₃ i₃) ≫\n          ιMapBifunctorBifunctor₂₃MapObj F G₂₃ ρ₂₃ X₁ X₂ X₃ i₁ i₂ i₃ j h := by\n  have := H₁₂.hasMap\n  have := H₂₃.hasMap\n  dsimp [mapBifunctorAssociator]\n  rw [ι_mapBifunctorComp₁₂MapObjIso_inv_assoc, ιMapTrifunctorMapObj,\n    ι_mapMap_assoc, mapTrifunctorMapNatTrans_app_app_app]\n  erw [ι_mapBifunctorComp₂₃MapObjIso_hom]\n\n"}
{"name":"CategoryTheory.GradedObject.ι_mapBifunctorAssociator_inv","module":"Mathlib.CategoryTheory.GradedObject.Associator","initialProofState":"C₁ : Type u_1\nC₂ : Type u_2\nC₁₂ : Type u_3\nC₂₃ : Type u_4\nC₃ : Type u_5\nC₄ : Type u_6\ninst✝⁹ : CategoryTheory.Category.{u_13, u_1} C₁\ninst✝⁸ : CategoryTheory.Category.{u_15, u_2} C₂\ninst✝⁷ : CategoryTheory.Category.{u_14, u_5} C₃\ninst✝⁶ : CategoryTheory.Category.{u_11, u_6} C₄\ninst✝⁵ : CategoryTheory.Category.{u_17, u_3} C₁₂\ninst✝⁴ : CategoryTheory.Category.{u_12, u_4} C₂₃\nF₁₂ : CategoryTheory.Functor C₁ (CategoryTheory.Functor C₂ C₁₂)\nG : CategoryTheory.Functor C₁₂ (CategoryTheory.Functor C₃ C₄)\nF : CategoryTheory.Functor C₁ (CategoryTheory.Functor C₂₃ C₄)\nG₂₃ : CategoryTheory.Functor C₂ (CategoryTheory.Functor C₃ C₂₃)\nassociator : CategoryTheory.Iso (CategoryTheory.bifunctorComp₁₂ F₁₂ G) (CategoryTheory.bifunctorComp₂₃ F G₂₃)\nI₁ : Type u_7\nI₂ : Type u_8\nI₃ : Type u_9\nJ : Type u_10\nr : Prod I₁ (Prod I₂ I₃) → J\nρ₁₂ : CategoryTheory.GradedObject.BifunctorComp₁₂IndexData r\nρ₂₃ : CategoryTheory.GradedObject.BifunctorComp₂₃IndexData r\nX₁ : CategoryTheory.GradedObject I₁ C₁\nX₂ : CategoryTheory.GradedObject I₂ C₂\nX₃ : CategoryTheory.GradedObject I₃ C₃\ninst✝³ : (((CategoryTheory.GradedObject.mapBifunctor F₁₂ I₁ I₂).obj X₁).obj X₂).HasMap ρ₁₂.p\ninst✝² : (((CategoryTheory.GradedObject.mapBifunctor G ρ₁₂.I₁₂ I₃).obj (CategoryTheory.GradedObject.mapBifunctorMapObj F₁₂ ρ₁₂.p X₁ X₂)).obj X₃).HasMap ρ₁₂.q\ninst✝¹ : (((CategoryTheory.GradedObject.mapBifunctor G₂₃ I₂ I₃).obj X₂).obj X₃).HasMap ρ₂₃.p\ninst✝ : (((CategoryTheory.GradedObject.mapBifunctor F I₁ ρ₂₃.I₂₃).obj X₁).obj (CategoryTheory.GradedObject.mapBifunctorMapObj G₂₃ ρ₂₃.p X₂ X₃)).HasMap ρ₂₃.q\nH₁₂ : CategoryTheory.GradedObject.HasGoodTrifunctor₁₂Obj F₁₂ G ρ₁₂ X₁ X₂ X₃\nH₂₃ : CategoryTheory.GradedObject.HasGoodTrifunctor₂₃Obj F G₂₃ ρ₂₃ X₁ X₂ X₃\ni₁ : I₁\ni₂ : I₂\ni₃ : I₃\nj : J\nh : Eq (r { fst := i₁, snd := { fst := i₂, snd := i₃ } }) j\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.GradedObject.ιMapBifunctorBifunctor₂₃MapObj F G₂₃ ρ₂₃ X₁ X₂ X₃ i₁ i₂ i₃ j h) ((CategoryTheory.GradedObject.mapBifunctorAssociator associator ρ₁₂ ρ₂₃ X₁ X₂ X₃).inv j)) (CategoryTheory.CategoryStruct.comp (((associator.inv.app (X₁ i₁)).app (X₂ i₂)).app (X₃ i₃)) (CategoryTheory.GradedObject.ιMapBifunctor₁₂BifunctorMapObj F₁₂ G ρ₁₂ X₁ X₂ X₃ i₁ i₂ i₃ j h))","decl":"@[reassoc (attr := simp)]\nlemma ι_mapBifunctorAssociator_inv (i₁ : I₁) (i₂ : I₂) (i₃ : I₃) (j : J) (h : r (i₁, i₂, i₃) = j) :\n    ιMapBifunctorBifunctor₂₃MapObj F G₂₃ ρ₂₃ X₁ X₂ X₃ i₁ i₂ i₃ j h ≫\n      (mapBifunctorAssociator associator ρ₁₂ ρ₂₃ X₁ X₂ X₃).inv j =\n    ((associator.inv.app (X₁ i₁)).app (X₂ i₂)).app (X₃ i₃) ≫\n      ιMapBifunctor₁₂BifunctorMapObj F₁₂ G ρ₁₂ X₁ X₂ X₃ i₁ i₂ i₃ j h := by\n  rw [← cancel_mono ((mapBifunctorAssociator associator ρ₁₂ ρ₂₃ X₁ X₂ X₃).hom j),\n    assoc, assoc, Iso.inv_hom_id_eval, comp_id, ι_mapBifunctorAssociator_hom,\n    ← NatTrans.comp_app_assoc, ← NatTrans.comp_app, Iso.inv_hom_id_app,\n    NatTrans.id_app, NatTrans.id_app, id_comp]\n\n"}
{"name":"CategoryTheory.GradedObject.ι_mapBifunctorAssociator_inv_assoc","module":"Mathlib.CategoryTheory.GradedObject.Associator","initialProofState":"C₁ : Type u_1\nC₂ : Type u_2\nC₁₂ : Type u_3\nC₂₃ : Type u_4\nC₃ : Type u_5\nC₄ : Type u_6\ninst✝⁹ : CategoryTheory.Category.{u_13, u_1} C₁\ninst✝⁸ : CategoryTheory.Category.{u_15, u_2} C₂\ninst✝⁷ : CategoryTheory.Category.{u_14, u_5} C₃\ninst✝⁶ : CategoryTheory.Category.{u_11, u_6} C₄\ninst✝⁵ : CategoryTheory.Category.{u_17, u_3} C₁₂\ninst✝⁴ : CategoryTheory.Category.{u_12, u_4} C₂₃\nF₁₂ : CategoryTheory.Functor C₁ (CategoryTheory.Functor C₂ C₁₂)\nG : CategoryTheory.Functor C₁₂ (CategoryTheory.Functor C₃ C₄)\nF : CategoryTheory.Functor C₁ (CategoryTheory.Functor C₂₃ C₄)\nG₂₃ : CategoryTheory.Functor C₂ (CategoryTheory.Functor C₃ C₂₃)\nassociator : CategoryTheory.Iso (CategoryTheory.bifunctorComp₁₂ F₁₂ G) (CategoryTheory.bifunctorComp₂₃ F G₂₃)\nI₁ : Type u_7\nI₂ : Type u_8\nI₃ : Type u_9\nJ : Type u_10\nr : Prod I₁ (Prod I₂ I₃) → J\nρ₁₂ : CategoryTheory.GradedObject.BifunctorComp₁₂IndexData r\nρ₂₃ : CategoryTheory.GradedObject.BifunctorComp₂₃IndexData r\nX₁ : CategoryTheory.GradedObject I₁ C₁\nX₂ : CategoryTheory.GradedObject I₂ C₂\nX₃ : CategoryTheory.GradedObject I₃ C₃\ninst✝³ : (((CategoryTheory.GradedObject.mapBifunctor F₁₂ I₁ I₂).obj X₁).obj X₂).HasMap ρ₁₂.p\ninst✝² : (((CategoryTheory.GradedObject.mapBifunctor G ρ₁₂.I₁₂ I₃).obj (CategoryTheory.GradedObject.mapBifunctorMapObj F₁₂ ρ₁₂.p X₁ X₂)).obj X₃).HasMap ρ₁₂.q\ninst✝¹ : (((CategoryTheory.GradedObject.mapBifunctor G₂₃ I₂ I₃).obj X₂).obj X₃).HasMap ρ₂₃.p\ninst✝ : (((CategoryTheory.GradedObject.mapBifunctor F I₁ ρ₂₃.I₂₃).obj X₁).obj (CategoryTheory.GradedObject.mapBifunctorMapObj G₂₃ ρ₂₃.p X₂ X₃)).HasMap ρ₂₃.q\nH₁₂ : CategoryTheory.GradedObject.HasGoodTrifunctor₁₂Obj F₁₂ G ρ₁₂ X₁ X₂ X₃\nH₂₃ : CategoryTheory.GradedObject.HasGoodTrifunctor₂₃Obj F G₂₃ ρ₂₃ X₁ X₂ X₃\ni₁ : I₁\ni₂ : I₂\ni₃ : I₃\nj : J\nh✝ : Eq (r { fst := i₁, snd := { fst := i₂, snd := i₃ } }) j\nZ : C₄\nh : Quiver.Hom (CategoryTheory.GradedObject.mapBifunctorMapObj G ρ₁₂.q (CategoryTheory.GradedObject.mapBifunctorMapObj F₁₂ ρ₁₂.p X₁ X₂) X₃ j) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.GradedObject.ιMapBifunctorBifunctor₂₃MapObj F G₂₃ ρ₂₃ X₁ X₂ X₃ i₁ i₂ i₃ j h✝) (CategoryTheory.CategoryStruct.comp ((CategoryTheory.GradedObject.mapBifunctorAssociator associator ρ₁₂ ρ₂₃ X₁ X₂ X₃).inv j) h)) (CategoryTheory.CategoryStruct.comp (((associator.inv.app (X₁ i₁)).app (X₂ i₂)).app (X₃ i₃)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.GradedObject.ιMapBifunctor₁₂BifunctorMapObj F₁₂ G ρ₁₂ X₁ X₂ X₃ i₁ i₂ i₃ j h✝) h))","decl":"@[reassoc (attr := simp)]\nlemma ι_mapBifunctorAssociator_inv (i₁ : I₁) (i₂ : I₂) (i₃ : I₃) (j : J) (h : r (i₁, i₂, i₃) = j) :\n    ιMapBifunctorBifunctor₂₃MapObj F G₂₃ ρ₂₃ X₁ X₂ X₃ i₁ i₂ i₃ j h ≫\n      (mapBifunctorAssociator associator ρ₁₂ ρ₂₃ X₁ X₂ X₃).inv j =\n    ((associator.inv.app (X₁ i₁)).app (X₂ i₂)).app (X₃ i₃) ≫\n      ιMapBifunctor₁₂BifunctorMapObj F₁₂ G ρ₁₂ X₁ X₂ X₃ i₁ i₂ i₃ j h := by\n  rw [← cancel_mono ((mapBifunctorAssociator associator ρ₁₂ ρ₂₃ X₁ X₂ X₃).hom j),\n    assoc, assoc, Iso.inv_hom_id_eval, comp_id, ι_mapBifunctorAssociator_hom,\n    ← NatTrans.comp_app_assoc, ← NatTrans.comp_app, Iso.inv_hom_id_app,\n    NatTrans.id_app, NatTrans.id_app, id_comp]\n\n"}
