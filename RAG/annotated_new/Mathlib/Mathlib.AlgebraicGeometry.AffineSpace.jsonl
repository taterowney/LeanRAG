{"name":"AlgebraicGeometry.AffineSpace.of_mvPolynomial_int_ext","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nR : CommRingCat\nf g : Quiver.Hom (CommRingCat.of (MvPolynomial n (ULift.{u_1, 0} Int))) R\nh : ‚àÄ (i : n), Eq ((CategoryTheory.ConcreteCategory.hom f) (MvPolynomial.X i)) ((CategoryTheory.ConcreteCategory.hom g) (MvPolynomial.X i))\n‚ä¢ Eq f g","decl":"variable {n} in\nlemma of_mvPolynomial_int_ext {R} {f g : ‚Ñ§[n] ‚ü∂ R} (h : ‚àÄ i, f (.X i) = g (.X i)) : f = g := by\n  suffices f.hom.comp (MvPolynomial.mapEquiv _ ULift.ringEquiv.symm).toRingHom =\n      g.hom.comp (MvPolynomial.mapEquiv _ ULift.ringEquiv.symm).toRingHom by\n    ext x\n    ¬∑ obtain ‚ü®x‚ü© := x\n      simpa [-map_intCast, -eq_intCast] using DFunLike.congr_fun this (C x)\n    ¬∑ simpa [-map_intCast, -eq_intCast] using DFunLike.congr_fun this (X x)\n  ext1\n  ¬∑ exact RingHom.ext_int _ _\n  ¬∑ simpa using h _\n\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.over_over","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS : AlgebraicGeometry.Scheme\n‚ä¢ Eq (CategoryTheory.over (AlgebraicGeometry.AffineSpace n S) S inferInstance) (CategoryTheory.Limits.pullback.fst (CategoryTheory.Limits.terminal.from S) (CategoryTheory.Limits.terminal.from (AlgebraicGeometry.Spec (CommRingCat.of (MvPolynomial n (ULift.{max u v, 0} Int))))))","decl":"@[simps (config := .lemmasOnly)]\ninstance over : ùî∏(n; S).CanonicallyOver S where\n  hom := pullback.fst _ _\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.toSpecMvPolyIntEquiv_symm_apply","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nX : AlgebraicGeometry.Scheme\nv : n ‚Üí ‚Üë(X.presheaf.obj { unop := Top.top })\n‚ä¢ Eq ((AlgebraicGeometry.AffineSpace.toSpecMvPolyIntEquiv n).symm v) (CategoryTheory.CategoryStruct.comp X.toSpecŒì (AlgebraicGeometry.Spec.map (CommRingCat.ofHom (MvPolynomial.eval‚ÇÇHom ((algebraMap Int ‚Üë(X.presheaf.toPrefunctor.1 { unop := Top.top })).comp ULift.ringEquiv.toRingHom) v))))","decl":"/--\nMorphisms into `Spec ‚Ñ§[n]` are equivalent the choice of `n` global sections.\nUse `homOverEquiv` instead.\n-/\n@[simps]\ndef toSpecMvPolyIntEquiv : (X ‚ü∂ Spec ‚Ñ§[n]) ‚âÉ (n ‚Üí Œì(X, ‚ä§)) where\n  toFun f i := f.appTop ((Scheme.ŒìSpecIso ‚Ñ§[n]).inv (.X i))\n  invFun v := X.toSpecŒì ‚â´ Spec.map\n    (CommRingCat.ofHom (MvPolynomial.eval‚ÇÇHom ((algebraMap ‚Ñ§ _).comp ULift.ringEquiv.toRingHom) v))\n  left_inv f := by\n    apply (ŒìSpec.adjunction.homEquiv _ _).symm.injective\n    apply Quiver.Hom.unop_inj\n    rw [Adjunction.homEquiv_symm_apply, Adjunction.homEquiv_symm_apply]\n    simp only [Functor.rightOp_obj, Scheme.Œì_obj, Scheme.Spec_obj, algebraMap_int_eq,\n      RingEquiv.toRingHom_eq_coe, TopologicalSpace.Opens.map_top, Functor.rightOp_map, op_comp,\n      Scheme.Œì_map, unop_comp, Quiver.Hom.unop_op, Scheme.comp_app, Scheme.toSpecŒì_appTop,\n      Scheme.ŒìSpecIso_naturality, ŒìSpec.adjunction_counit_app, Category.assoc,\n      Iso.cancel_iso_inv_left, ‚Üê Iso.eq_inv_comp]\n    apply of_mvPolynomial_int_ext\n    intro i\n    rw [ConcreteCategory.hom_ofHom, coe_eval‚ÇÇHom, eval‚ÇÇ_X]\n    rfl\n  right_inv v := by\n    ext i\n    simp only [algebraMap_int_eq, RingEquiv.toRingHom_eq_coe, Scheme.comp_coeBase,\n      TopologicalSpace.Opens.map_comp_obj, TopologicalSpace.Opens.map_top, Scheme.comp_app,\n      Scheme.toSpecŒì_appTop, Scheme.ŒìSpecIso_naturality, CommRingCat.comp_apply,\n      CommRingCat.coe_of]\n    -- TODO: why does `simp` not apply this lemma?\n    rw [CommRingCat.hom_inv_apply]\n    simp\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.toSpecMvPolyIntEquiv_apply","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nX : AlgebraicGeometry.Scheme\nf : Quiver.Hom X (AlgebraicGeometry.Spec (CommRingCat.of (MvPolynomial n (ULift.{u, 0} Int))))\ni : n\n‚ä¢ Eq ((AlgebraicGeometry.AffineSpace.toSpecMvPolyIntEquiv n) f i) ((CategoryTheory.ConcreteCategory.hom (AlgebraicGeometry.Scheme.Hom.appTop f)) ((CategoryTheory.ConcreteCategory.hom (AlgebraicGeometry.Scheme.ŒìSpecIso (CommRingCat.of (MvPolynomial n (ULift.{u, 0} Int)))).inv) (MvPolynomial.X i)))","decl":"/--\nMorphisms into `Spec ‚Ñ§[n]` are equivalent the choice of `n` global sections.\nUse `homOverEquiv` instead.\n-/\n@[simps]\ndef toSpecMvPolyIntEquiv : (X ‚ü∂ Spec ‚Ñ§[n]) ‚âÉ (n ‚Üí Œì(X, ‚ä§)) where\n  toFun f i := f.appTop ((Scheme.ŒìSpecIso ‚Ñ§[n]).inv (.X i))\n  invFun v := X.toSpecŒì ‚â´ Spec.map\n    (CommRingCat.ofHom (MvPolynomial.eval‚ÇÇHom ((algebraMap ‚Ñ§ _).comp ULift.ringEquiv.toRingHom) v))\n  left_inv f := by\n    apply (ŒìSpec.adjunction.homEquiv _ _).symm.injective\n    apply Quiver.Hom.unop_inj\n    rw [Adjunction.homEquiv_symm_apply, Adjunction.homEquiv_symm_apply]\n    simp only [Functor.rightOp_obj, Scheme.Œì_obj, Scheme.Spec_obj, algebraMap_int_eq,\n      RingEquiv.toRingHom_eq_coe, TopologicalSpace.Opens.map_top, Functor.rightOp_map, op_comp,\n      Scheme.Œì_map, unop_comp, Quiver.Hom.unop_op, Scheme.comp_app, Scheme.toSpecŒì_appTop,\n      Scheme.ŒìSpecIso_naturality, ŒìSpec.adjunction_counit_app, Category.assoc,\n      Iso.cancel_iso_inv_left, ‚Üê Iso.eq_inv_comp]\n    apply of_mvPolynomial_int_ext\n    intro i\n    rw [ConcreteCategory.hom_ofHom, coe_eval‚ÇÇHom, eval‚ÇÇ_X]\n    rfl\n  right_inv v := by\n    ext i\n    simp only [algebraMap_int_eq, RingEquiv.toRingHom_eq_coe, Scheme.comp_coeBase,\n      TopologicalSpace.Opens.map_comp_obj, TopologicalSpace.Opens.map_top, Scheme.comp_app,\n      Scheme.toSpecŒì_appTop, Scheme.ŒìSpecIso_naturality, CommRingCat.comp_apply,\n      CommRingCat.coe_of]\n    -- TODO: why does `simp` not apply this lemma?\n    rw [CommRingCat.hom_inv_apply]\n    simp\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.toSpecMvPolyIntEquiv_comp","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nX Y : AlgebraicGeometry.Scheme\nf : Quiver.Hom X Y\ng : Quiver.Hom Y (AlgebraicGeometry.Spec (CommRingCat.of (MvPolynomial n (ULift.{u_1, 0} Int))))\ni : n\n‚ä¢ Eq ((AlgebraicGeometry.AffineSpace.toSpecMvPolyIntEquiv n) (CategoryTheory.CategoryStruct.comp f g) i) ((CategoryTheory.ConcreteCategory.hom (AlgebraicGeometry.Scheme.Hom.appTop f)) ((AlgebraicGeometry.AffineSpace.toSpecMvPolyIntEquiv n) g i))","decl":"lemma toSpecMvPolyIntEquiv_comp {X Y : Scheme} (f : X ‚ü∂ Y) (g : Y ‚ü∂ Spec ‚Ñ§[n]) (i) :\n    toSpecMvPolyIntEquiv n (f ‚â´ g) i = f.appTop (toSpecMvPolyIntEquiv n g i) := rfl\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.homOfVector_over","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS X : AlgebraicGeometry.Scheme\nf : Quiver.Hom X S\nv : n ‚Üí ‚Üë(X.presheaf.obj { unop := Top.top })\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.homOfVector f v) (CategoryTheory.over (AlgebraicGeometry.AffineSpace n S) S inferInstance)) f","decl":"@[reassoc (attr := simp)]\nlemma homOfVector_over : homOfVector f v ‚â´ ùî∏(n; S) ‚Üò S = f :=\n  pullback.lift_fst _ _ _\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.homOfVector_over_assoc","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS X : AlgebraicGeometry.Scheme\nf : Quiver.Hom X S\nv : n ‚Üí ‚Üë(X.presheaf.obj { unop := Top.top })\nZ : AlgebraicGeometry.Scheme\nh : Quiver.Hom S Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.homOfVector f v) (CategoryTheory.CategoryStruct.comp (CategoryTheory.over (AlgebraicGeometry.AffineSpace n S) S inferInstance) h)) (CategoryTheory.CategoryStruct.comp f h)","decl":"@[reassoc (attr := simp)]\nlemma homOfVector_over : homOfVector f v ‚â´ ùî∏(n; S) ‚Üò S = f :=\n  pullback.lift_fst _ _ _\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.homOfVector_toSpecMvPoly","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS X : AlgebraicGeometry.Scheme\nf : Quiver.Hom X S\nv : n ‚Üí ‚Üë(X.presheaf.obj { unop := Top.top })\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.homOfVector f v) (AlgebraicGeometry.AffineSpace.toSpecMvPoly n S)) ((AlgebraicGeometry.AffineSpace.toSpecMvPolyIntEquiv n).symm v)","decl":"@[reassoc]\nlemma homOfVector_toSpecMvPoly :\n    homOfVector f v ‚â´ toSpecMvPoly n S = (toSpecMvPolyIntEquiv n).symm v :=\n  pullback.lift_snd _ _ _\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.homOfVector_toSpecMvPoly_assoc","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS X : AlgebraicGeometry.Scheme\nf : Quiver.Hom X S\nv : n ‚Üí ‚Üë(X.presheaf.obj { unop := Top.top })\nZ : AlgebraicGeometry.Scheme\nh : Quiver.Hom (AlgebraicGeometry.Spec (CommRingCat.of (MvPolynomial n (ULift.{max u v, 0} Int)))) Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.homOfVector f v) (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.toSpecMvPoly n S) h)) (CategoryTheory.CategoryStruct.comp ((AlgebraicGeometry.AffineSpace.toSpecMvPolyIntEquiv n).symm v) h)","decl":"@[reassoc]\nlemma homOfVector_toSpecMvPoly :\n    homOfVector f v ‚â´ toSpecMvPoly n S = (toSpecMvPolyIntEquiv n).symm v :=\n  pullback.lift_snd _ _ _\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.homOfVector_appTop_coord","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS X : AlgebraicGeometry.Scheme\nf : Quiver.Hom X S\nv : n ‚Üí ‚Üë(X.presheaf.obj { unop := Top.top })\ni : n\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom (AlgebraicGeometry.Scheme.Hom.appTop (AlgebraicGeometry.AffineSpace.homOfVector f v))) (AlgebraicGeometry.AffineSpace.coord S i)) (v i)","decl":"@[simp]\nlemma homOfVector_appTop_coord (i) :\n    (homOfVector f v).appTop (coord S i) = v i := by\n  rw [coord, ‚Üê toSpecMvPolyIntEquiv_comp, homOfVector_toSpecMvPoly,\n    Equiv.apply_symm_apply]\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.hom_ext_iff","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS X : AlgebraicGeometry.Scheme\nf g : Quiver.Hom X (AlgebraicGeometry.AffineSpace n S)\n‚ä¢ Iff (Eq f g) (And (Eq (CategoryTheory.CategoryStruct.comp f (CategoryTheory.over (AlgebraicGeometry.AffineSpace n S) S inferInstance)) (CategoryTheory.CategoryStruct.comp g (CategoryTheory.over (AlgebraicGeometry.AffineSpace n S) S inferInstance))) (‚àÄ (i : n), Eq ((CategoryTheory.ConcreteCategory.hom (AlgebraicGeometry.Scheme.Hom.appTop f)) (AlgebraicGeometry.AffineSpace.coord S i)) ((CategoryTheory.ConcreteCategory.hom (AlgebraicGeometry.Scheme.Hom.appTop g)) (AlgebraicGeometry.AffineSpace.coord S i))))","decl":"@[ext 1100]\nlemma hom_ext {f g : X ‚ü∂ ùî∏(n; S)}\n    (h‚ÇÅ : f ‚â´ ùî∏(n; S) ‚Üò S = g ‚â´ ùî∏(n; S) ‚Üò S)\n    (h‚ÇÇ : ‚àÄ i, f.appTop (coord S i) = g.appTop (coord S i)) : f = g := by\n  apply pullback.hom_ext h‚ÇÅ\n  show f ‚â´ toSpecMvPoly _ _ = g ‚â´ toSpecMvPoly _ _\n  apply (toSpecMvPolyIntEquiv n).injective\n  ext i\n  rw [toSpecMvPolyIntEquiv_comp, toSpecMvPolyIntEquiv_comp]\n  exact h‚ÇÇ i\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.hom_ext","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS X : AlgebraicGeometry.Scheme\nf g : Quiver.Hom X (AlgebraicGeometry.AffineSpace n S)\nh‚ÇÅ : Eq (CategoryTheory.CategoryStruct.comp f (CategoryTheory.over (AlgebraicGeometry.AffineSpace n S) S inferInstance)) (CategoryTheory.CategoryStruct.comp g (CategoryTheory.over (AlgebraicGeometry.AffineSpace n S) S inferInstance))\nh‚ÇÇ : ‚àÄ (i : n), Eq ((CategoryTheory.ConcreteCategory.hom (AlgebraicGeometry.Scheme.Hom.appTop f)) (AlgebraicGeometry.AffineSpace.coord S i)) ((CategoryTheory.ConcreteCategory.hom (AlgebraicGeometry.Scheme.Hom.appTop g)) (AlgebraicGeometry.AffineSpace.coord S i))\n‚ä¢ Eq f g","decl":"@[ext 1100]\nlemma hom_ext {f g : X ‚ü∂ ùî∏(n; S)}\n    (h‚ÇÅ : f ‚â´ ùî∏(n; S) ‚Üò S = g ‚â´ ùî∏(n; S) ‚Üò S)\n    (h‚ÇÇ : ‚àÄ i, f.appTop (coord S i) = g.appTop (coord S i)) : f = g := by\n  apply pullback.hom_ext h‚ÇÅ\n  show f ‚â´ toSpecMvPoly _ _ = g ‚â´ toSpecMvPoly _ _\n  apply (toSpecMvPolyIntEquiv n).injective\n  ext i\n  rw [toSpecMvPolyIntEquiv_comp, toSpecMvPolyIntEquiv_comp]\n  exact h‚ÇÇ i\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.comp_homOfVector","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS X Y : AlgebraicGeometry.Scheme\nv : n ‚Üí ‚Üë(Y.presheaf.obj { unop := Top.top })\nf : Quiver.Hom X Y\ng : Quiver.Hom Y S\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp f (AlgebraicGeometry.AffineSpace.homOfVector g v)) (AlgebraicGeometry.AffineSpace.homOfVector (CategoryTheory.CategoryStruct.comp f g) (Function.comp (‚áë(CategoryTheory.ConcreteCategory.hom (AlgebraicGeometry.Scheme.Hom.appTop f))) v))","decl":"@[reassoc]\nlemma comp_homOfVector {X Y : Scheme} (v : n ‚Üí Œì(Y, ‚ä§)) (f : X ‚ü∂ Y) (g : Y ‚ü∂ S) :\n    f ‚â´ homOfVector g v = homOfVector (f ‚â´ g) (f.appTop ‚àò v) := by\n  ext1 <;> simp\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.comp_homOfVector_assoc","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS X Y : AlgebraicGeometry.Scheme\nv : n ‚Üí ‚Üë(Y.presheaf.obj { unop := Top.top })\nf : Quiver.Hom X Y\ng : Quiver.Hom Y S\nZ : AlgebraicGeometry.Scheme\nh : Quiver.Hom (AlgebraicGeometry.AffineSpace n S) Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp f (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.homOfVector g v) h)) (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.homOfVector (CategoryTheory.CategoryStruct.comp f g) (Function.comp (‚áë(CategoryTheory.ConcreteCategory.hom (AlgebraicGeometry.Scheme.Hom.appTop f))) v)) h)","decl":"@[reassoc]\nlemma comp_homOfVector {X Y : Scheme} (v : n ‚Üí Œì(Y, ‚ä§)) (f : X ‚ü∂ Y) (g : Y ‚ü∂ S) :\n    f ‚â´ homOfVector g v = homOfVector (f ‚â´ g) (f.appTop ‚àò v) := by\n  ext1 <;> simp\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.instIsOverHomOfVectorOverSchemeInferInstanceOverClass","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS X : AlgebraicGeometry.Scheme\ninst‚úù : X.Over S\nv : n ‚Üí ‚Üë(X.presheaf.obj { unop := Top.top })\n‚ä¢ AlgebraicGeometry.Scheme.Hom.IsOver (AlgebraicGeometry.AffineSpace.homOfVector (CategoryTheory.over X S inferInstance) v) S","decl":"instance (v : n ‚Üí Œì(X, ‚ä§)) : (homOfVector (X ‚Üò S) v).IsOver S where\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.homOverEquiv_symm_apply_coe","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS X : AlgebraicGeometry.Scheme\ninst‚úù : X.Over S\nv : n ‚Üí ‚Üë(X.presheaf.obj { unop := Top.top })\n‚ä¢ Eq (‚Üë((AlgebraicGeometry.AffineSpace.homOverEquiv S).symm v)) (AlgebraicGeometry.AffineSpace.homOfVector (CategoryTheory.over X S inferInstance) v)","decl":"/-- `S`-morphisms into `Spec ùî∏(n; S)` are equivalent to the choice of `n` global sections. -/\n@[simps]\ndef homOverEquiv : { f : X ‚ü∂ ùî∏(n; S) // f.IsOver S } ‚âÉ (n ‚Üí Œì(X, ‚ä§)) where\n  toFun f i := f.1.appTop (coord S i)\n  invFun v := ‚ü®homOfVector (X ‚Üò S) v, inferInstance‚ü©\n  left_inv f := by\n    ext : 2\n    ¬∑ simp [f.2.1]\n    ¬∑ rw [homOfVector_appTop_coord]\n  right_inv v := by ext i; simp [-TopologicalSpace.Opens.map_top, homOfVector_appTop_coord]\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.homOverEquiv_apply","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS X : AlgebraicGeometry.Scheme\ninst‚úù : X.Over S\nf : Subtype fun f => AlgebraicGeometry.Scheme.Hom.IsOver f S\ni : n\n‚ä¢ Eq ((AlgebraicGeometry.AffineSpace.homOverEquiv S) f i) ((CategoryTheory.ConcreteCategory.hom (AlgebraicGeometry.Scheme.Hom.appTop ‚Üëf)) (AlgebraicGeometry.AffineSpace.coord S i))","decl":"/-- `S`-morphisms into `Spec ùî∏(n; S)` are equivalent to the choice of `n` global sections. -/\n@[simps]\ndef homOverEquiv : { f : X ‚ü∂ ùî∏(n; S) // f.IsOver S } ‚âÉ (n ‚Üí Œì(X, ‚ä§)) where\n  toFun f i := f.1.appTop (coord S i)\n  invFun v := ‚ü®homOfVector (X ‚Üò S) v, inferInstance‚ü©\n  left_inv f := by\n    ext : 2\n    ¬∑ simp [f.2.1]\n    ¬∑ rw [homOfVector_appTop_coord]\n  right_inv v := by ext i; simp [-TopologicalSpace.Opens.map_top, homOfVector_appTop_coord]\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.isoOfIsAffine_inv","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS : AlgebraicGeometry.Scheme\ninst‚úù : AlgebraicGeometry.IsAffine S\n‚ä¢ Eq (AlgebraicGeometry.AffineSpace.isoOfIsAffine n S).inv (AlgebraicGeometry.AffineSpace.homOfVector (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.Spec.map (CommRingCat.ofHom MvPolynomial.C)) S.isoSpec.inv) (Function.comp (‚áë(CategoryTheory.ConcreteCategory.hom (AlgebraicGeometry.Scheme.ŒìSpecIso (CommRingCat.of (MvPolynomial n ‚Üë(S.presheaf.obj { unop := Top.top })))).inv)) MvPolynomial.X))","decl":"variable (n) in\n/--\nThe affine space over an affine base is isomorphic to the spectrum of the polynomial ring.\nAlso see `AffineSpace.SpecIso`.\n-/\n@[simps (config := .lemmasOnly) hom inv]\ndef isoOfIsAffine [IsAffine S] :\n    ùî∏(n; S) ‚âÖ Spec (.of (MvPolynomial n Œì(S, ‚ä§))) where\n      hom := ùî∏(n; S).toSpecŒì ‚â´ Spec.map (CommRingCat.ofHom\n        (eval‚ÇÇHom ((ùî∏(n; S) ‚Üò S).appTop).hom (coord S)))\n      inv := homOfVector (Spec.map (CommRingCat.ofHom C) ‚â´ S.isoSpec.inv)\n        ((Scheme.ŒìSpecIso (.of (MvPolynomial n Œì(S, ‚ä§)))).inv ‚àò MvPolynomial.X)\n      hom_inv_id := by\n        ext1\n        ¬∑ simp only [Category.assoc, homOfVector_over, Category.id_comp]\n          rw [‚Üê Spec.map_comp_assoc, ‚Üê CommRingCat.ofHom_comp, eval‚ÇÇHom_comp_C,\n            CommRingCat.ofHom_hom, ‚Üê Scheme.toSpecŒì_naturality_assoc]\n          simp [Scheme.isoSpec]\n        ¬∑ simp only [Category.assoc, Scheme.comp_app, Scheme.comp_coeBase,\n            TopologicalSpace.Opens.map_comp_obj, TopologicalSpace.Opens.map_top,\n            Scheme.toSpecŒì_appTop, Scheme.ŒìSpecIso_naturality, CommRingCat.comp_apply,\n            homOfVector_appTop_coord, Function.comp_apply, CommRingCat.coe_of, Scheme.id_app,\n            CommRingCat.id_apply]\n          -- TODO: why does `simp` not apply this?\n          rw [CommRingCat.hom_inv_apply]\n          exact eval‚ÇÇ_X _ _ _\n      inv_hom_id := by\n        apply ext_of_isAffine\n        simp only [Scheme.comp_coeBase, TopologicalSpace.Opens.map_comp_obj,\n          TopologicalSpace.Opens.map_top, Scheme.comp_app, Scheme.toSpecŒì_appTop,\n          Scheme.ŒìSpecIso_naturality, Category.assoc, Scheme.id_app, ‚Üê Iso.eq_inv_comp,\n          Category.comp_id]\n        ext : 1\n        apply ringHom_ext'\n        ¬∑ show _ = (CommRingCat.ofHom C ‚â´ _).hom\n          rw [CommRingCat.hom_comp, RingHom.comp_assoc, CommRingCat.hom_ofHom, eval‚ÇÇHom_comp_C,\n            ‚Üê CommRingCat.hom_comp, ‚Üê CommRingCat.hom_ext_iff,\n            ‚Üê cancel_mono (Scheme.ŒìSpecIso _).hom]\n          rw [‚Üê Scheme.comp_appTop, homOfVector_over, Scheme.comp_appTop]\n          simp only [Category.assoc, Scheme.ŒìSpecIso_naturality, CommRingCat.of_carrier,\n            ‚Üê Scheme.toSpecŒì_appTop]\n          rw [‚Üê Scheme.comp_appTop_assoc, Scheme.isoSpec, asIso_inv, IsIso.hom_inv_id]\n          simp\n        ¬∑ intro i\n          rw [CommRingCat.comp_apply, ConcreteCategory.hom_ofHom, coe_eval‚ÇÇHom]\n          simp only [eval‚ÇÇ_X]\n          exact homOfVector_appTop_coord _ _ _\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.isoOfIsAffine_hom","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS : AlgebraicGeometry.Scheme\ninst‚úù : AlgebraicGeometry.IsAffine S\n‚ä¢ Eq (AlgebraicGeometry.AffineSpace.isoOfIsAffine n S).hom (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace n S).toSpecŒì (AlgebraicGeometry.Spec.map (CommRingCat.ofHom (MvPolynomial.eval‚ÇÇHom (CommRingCat.Hom.hom (AlgebraicGeometry.Scheme.Hom.appTop (CategoryTheory.over (AlgebraicGeometry.AffineSpace n S) S inferInstance))) (AlgebraicGeometry.AffineSpace.coord S)))))","decl":"variable (n) in\n/--\nThe affine space over an affine base is isomorphic to the spectrum of the polynomial ring.\nAlso see `AffineSpace.SpecIso`.\n-/\n@[simps (config := .lemmasOnly) hom inv]\ndef isoOfIsAffine [IsAffine S] :\n    ùî∏(n; S) ‚âÖ Spec (.of (MvPolynomial n Œì(S, ‚ä§))) where\n      hom := ùî∏(n; S).toSpecŒì ‚â´ Spec.map (CommRingCat.ofHom\n        (eval‚ÇÇHom ((ùî∏(n; S) ‚Üò S).appTop).hom (coord S)))\n      inv := homOfVector (Spec.map (CommRingCat.ofHom C) ‚â´ S.isoSpec.inv)\n        ((Scheme.ŒìSpecIso (.of (MvPolynomial n Œì(S, ‚ä§)))).inv ‚àò MvPolynomial.X)\n      hom_inv_id := by\n        ext1\n        ¬∑ simp only [Category.assoc, homOfVector_over, Category.id_comp]\n          rw [‚Üê Spec.map_comp_assoc, ‚Üê CommRingCat.ofHom_comp, eval‚ÇÇHom_comp_C,\n            CommRingCat.ofHom_hom, ‚Üê Scheme.toSpecŒì_naturality_assoc]\n          simp [Scheme.isoSpec]\n        ¬∑ simp only [Category.assoc, Scheme.comp_app, Scheme.comp_coeBase,\n            TopologicalSpace.Opens.map_comp_obj, TopologicalSpace.Opens.map_top,\n            Scheme.toSpecŒì_appTop, Scheme.ŒìSpecIso_naturality, CommRingCat.comp_apply,\n            homOfVector_appTop_coord, Function.comp_apply, CommRingCat.coe_of, Scheme.id_app,\n            CommRingCat.id_apply]\n          -- TODO: why does `simp` not apply this?\n          rw [CommRingCat.hom_inv_apply]\n          exact eval‚ÇÇ_X _ _ _\n      inv_hom_id := by\n        apply ext_of_isAffine\n        simp only [Scheme.comp_coeBase, TopologicalSpace.Opens.map_comp_obj,\n          TopologicalSpace.Opens.map_top, Scheme.comp_app, Scheme.toSpecŒì_appTop,\n          Scheme.ŒìSpecIso_naturality, Category.assoc, Scheme.id_app, ‚Üê Iso.eq_inv_comp,\n          Category.comp_id]\n        ext : 1\n        apply ringHom_ext'\n        ¬∑ show _ = (CommRingCat.ofHom C ‚â´ _).hom\n          rw [CommRingCat.hom_comp, RingHom.comp_assoc, CommRingCat.hom_ofHom, eval‚ÇÇHom_comp_C,\n            ‚Üê CommRingCat.hom_comp, ‚Üê CommRingCat.hom_ext_iff,\n            ‚Üê cancel_mono (Scheme.ŒìSpecIso _).hom]\n          rw [‚Üê Scheme.comp_appTop, homOfVector_over, Scheme.comp_appTop]\n          simp only [Category.assoc, Scheme.ŒìSpecIso_naturality, CommRingCat.of_carrier,\n            ‚Üê Scheme.toSpecŒì_appTop]\n          rw [‚Üê Scheme.comp_appTop_assoc, Scheme.isoSpec, asIso_inv, IsIso.hom_inv_id]\n          simp\n        ¬∑ intro i\n          rw [CommRingCat.comp_apply, ConcreteCategory.hom_ofHom, coe_eval‚ÇÇHom]\n          simp only [eval‚ÇÇ_X]\n          exact homOfVector_appTop_coord _ _ _\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.isoOfIsAffine_hom_appTop","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS : AlgebraicGeometry.Scheme\ninst‚úù : AlgebraicGeometry.IsAffine S\n‚ä¢ Eq (AlgebraicGeometry.Scheme.Hom.appTop (AlgebraicGeometry.AffineSpace.isoOfIsAffine n S).hom) (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.Scheme.ŒìSpecIso (CommRingCat.of (MvPolynomial n ‚Üë(S.presheaf.obj { unop := Top.top })))).hom (CommRingCat.ofHom (MvPolynomial.eval‚ÇÇHom (CommRingCat.Hom.hom (AlgebraicGeometry.Scheme.Hom.appTop (CategoryTheory.over (AlgebraicGeometry.AffineSpace n S) S inferInstance))) (AlgebraicGeometry.AffineSpace.coord S))))","decl":"@[simp]\nlemma isoOfIsAffine_hom_appTop [IsAffine S] :\n    (isoOfIsAffine n S).hom.appTop =\n      (Scheme.ŒìSpecIso _).hom ‚â´ CommRingCat.ofHom\n        (eval‚ÇÇHom ((ùî∏(n; S) ‚Üò S).appTop).hom (coord S)) := by\n  simp [isoOfIsAffine_hom]\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.isoOfIsAffine_inv_appTop_coord","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS : AlgebraicGeometry.Scheme\ninst‚úù : AlgebraicGeometry.IsAffine S\ni : n\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom (AlgebraicGeometry.Scheme.Hom.appTop (AlgebraicGeometry.AffineSpace.isoOfIsAffine n S).inv)) (AlgebraicGeometry.AffineSpace.coord S i)) ((CategoryTheory.ConcreteCategory.hom (AlgebraicGeometry.Scheme.ŒìSpecIso (CommRingCat.of (MvPolynomial n ‚Üë(S.presheaf.obj { unop := Top.top })))).inv) (MvPolynomial.X i))","decl":"@[simp]\nlemma isoOfIsAffine_inv_appTop_coord [IsAffine S] (i) :\n    (isoOfIsAffine n S).inv.appTop (coord _ i) = (Scheme.ŒìSpecIso (.of _)).inv (.X i) :=\n  homOfVector_appTop_coord _ _ _\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.isoOfIsAffine_inv_over","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS : AlgebraicGeometry.Scheme\ninst‚úù : AlgebraicGeometry.IsAffine S\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.isoOfIsAffine n S).inv (CategoryTheory.over (AlgebraicGeometry.AffineSpace n S) S inferInstance)) (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.Spec.map (CommRingCat.ofHom MvPolynomial.C)) S.isoSpec.inv)","decl":"@[reassoc (attr := simp)]\nlemma isoOfIsAffine_inv_over [IsAffine S] :\n    (isoOfIsAffine n S).inv ‚â´ ùî∏(n; S) ‚Üò S = Spec.map (CommRingCat.ofHom C) ‚â´ S.isoSpec.inv :=\n  pullback.lift_fst _ _ _\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.isoOfIsAffine_inv_over_assoc","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS : AlgebraicGeometry.Scheme\ninst‚úù : AlgebraicGeometry.IsAffine S\nZ : AlgebraicGeometry.Scheme\nh : Quiver.Hom S Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.isoOfIsAffine n S).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.over (AlgebraicGeometry.AffineSpace n S) S inferInstance) h)) (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.Spec.map (CommRingCat.ofHom MvPolynomial.C)) (CategoryTheory.CategoryStruct.comp S.isoSpec.inv h))","decl":"@[reassoc (attr := simp)]\nlemma isoOfIsAffine_inv_over [IsAffine S] :\n    (isoOfIsAffine n S).inv ‚â´ ùî∏(n; S) ‚Üò S = Spec.map (CommRingCat.ofHom C) ‚â´ S.isoSpec.inv :=\n  pullback.lift_fst _ _ _\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.instIsAffine","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS : AlgebraicGeometry.Scheme\ninst‚úù : AlgebraicGeometry.IsAffine S\n‚ä¢ AlgebraicGeometry.IsAffine (AlgebraicGeometry.AffineSpace n S)","decl":"instance [IsAffine S] : IsAffine ùî∏(n; S) := isAffine_of_isIso (isoOfIsAffine n S).hom\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.SpecIso_hom_appTop","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nR : CommRingCat\n‚ä¢ Eq (AlgebraicGeometry.Scheme.Hom.appTop (AlgebraicGeometry.AffineSpace.SpecIso n R).hom) (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.Scheme.ŒìSpecIso (CommRingCat.of (MvPolynomial n ‚ÜëR))).hom (CommRingCat.ofHom (MvPolynomial.eval‚ÇÇHom (CommRingCat.Hom.hom (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.Scheme.ŒìSpecIso R).inv (AlgebraicGeometry.Scheme.Hom.appTop (CategoryTheory.over (AlgebraicGeometry.AffineSpace n (AlgebraicGeometry.Spec R)) (AlgebraicGeometry.Spec R) inferInstance)))) (AlgebraicGeometry.AffineSpace.coord (AlgebraicGeometry.Spec R)))))","decl":"@[simp]\nlemma SpecIso_hom_appTop (R : CommRingCat.{max u v}) :\n    (SpecIso n R).hom.appTop = (Scheme.ŒìSpecIso _).hom ‚â´\n      CommRingCat.ofHom (eval‚ÇÇHom ((Scheme.ŒìSpecIso _).inv ‚â´\n        (ùî∏(n; Spec R) ‚Üò Spec R).appTop).hom (coord (Spec R))) := by\n  simp only [SpecIso, Iso.trans_hom, Functor.mapIso_hom, Iso.op_hom,\n    RingEquiv.toRingHom_eq_coe, Scheme.Spec_map, Quiver.Hom.unop_op, Scheme.comp_coeBase,\n    TopologicalSpace.Opens.map_comp_obj, TopologicalSpace.Opens.map_top, Scheme.comp_app,\n    isoOfIsAffine_hom_appTop, Scheme.ŒìSpecIso_naturality_assoc]\n  congr 1\n  ext : 1\n  apply ringHom_ext'\n  ¬∑ ext; simp\n  ¬∑ simp\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.SpecIso_inv_appTop_coord","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nR : CommRingCat\ni : n\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom (AlgebraicGeometry.Scheme.Hom.appTop (AlgebraicGeometry.AffineSpace.SpecIso n R).inv)) (AlgebraicGeometry.AffineSpace.coord (AlgebraicGeometry.Spec R) i)) ((CategoryTheory.ConcreteCategory.hom (AlgebraicGeometry.Scheme.ŒìSpecIso (CommRingCat.of (MvPolynomial n ‚ÜëR))).inv) (MvPolynomial.X i))","decl":"@[simp]\nlemma SpecIso_inv_appTop_coord (R : CommRingCat.{max u v}) (i) :\n    (SpecIso n R).inv.appTop (coord _ i) = (Scheme.ŒìSpecIso (.of _)).inv (.X i) := by\n  simp only [SpecIso, Iso.trans_inv, Functor.mapIso_inv, Iso.op_inv,\n    mapEquiv_symm, RingEquiv.toRingHom_eq_coe, Scheme.Spec_map, Quiver.Hom.unop_op,\n    Scheme.comp_coeBase, TopologicalSpace.Opens.map_comp_obj, TopologicalSpace.Opens.map_top,\n    Scheme.comp_app, CommRingCat.comp_apply]\n  rw [isoOfIsAffine_inv_appTop_coord, ‚Üê CommRingCat.comp_apply, ‚Üê Scheme.ŒìSpecIso_inv_naturality,\n      CommRingCat.comp_apply]\n  congr 1\n  exact map_X _ _\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.SpecIso_inv_over_assoc","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nR : CommRingCat\nZ : AlgebraicGeometry.Scheme\nh : Quiver.Hom (AlgebraicGeometry.Spec R) Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.SpecIso n R).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.over (AlgebraicGeometry.AffineSpace n (AlgebraicGeometry.Spec R)) (AlgebraicGeometry.Spec R) inferInstance) h)) (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.Spec.map (CommRingCat.ofHom MvPolynomial.C)) h)","decl":"@[reassoc (attr := simp)]\nlemma SpecIso_inv_over (R : CommRingCat.{max u v}) :\n    (SpecIso n R).inv ‚â´ ùî∏(n; Spec R) ‚Üò Spec R = Spec.map (CommRingCat.ofHom C) := by\n  simp only [SpecIso, Iso.trans_inv, Functor.mapIso_inv, Iso.op_inv,\n    mapEquiv_symm, RingEquiv.toRingHom_eq_coe, Scheme.Spec_map, Quiver.Hom.unop_op, Category.assoc,\n    isoOfIsAffine_inv_over, Scheme.isoSpec_Spec_inv, ‚Üê Spec.map_comp]\n  congr 1\n  rw [Iso.inv_comp_eq]\n  ext : 2\n  exact map_C _ _\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.SpecIso_inv_over","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nR : CommRingCat\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.SpecIso n R).inv (CategoryTheory.over (AlgebraicGeometry.AffineSpace n (AlgebraicGeometry.Spec R)) (AlgebraicGeometry.Spec R) inferInstance)) (AlgebraicGeometry.Spec.map (CommRingCat.ofHom MvPolynomial.C))","decl":"@[reassoc (attr := simp)]\nlemma SpecIso_inv_over (R : CommRingCat.{max u v}) :\n    (SpecIso n R).inv ‚â´ ùî∏(n; Spec R) ‚Üò Spec R = Spec.map (CommRingCat.ofHom C) := by\n  simp only [SpecIso, Iso.trans_inv, Functor.mapIso_inv, Iso.op_inv,\n    mapEquiv_symm, RingEquiv.toRingHom_eq_coe, Scheme.Spec_map, Quiver.Hom.unop_op, Category.assoc,\n    isoOfIsAffine_inv_over, Scheme.isoSpec_Spec_inv, ‚Üê Spec.map_comp]\n  congr 1\n  rw [Iso.inv_comp_eq]\n  ext : 2\n  exact map_C _ _\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.map_over","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS T : AlgebraicGeometry.Scheme\nf : Quiver.Hom S T\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.map n f) (CategoryTheory.over (AlgebraicGeometry.AffineSpace n T) T inferInstance)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.over (AlgebraicGeometry.AffineSpace n S) S inferInstance) f)","decl":"@[reassoc (attr := simp)]\nlemma map_over {S T : Scheme.{max u v}} (f : S ‚ü∂ T) : map n f ‚â´ ùî∏(n; T) ‚Üò T = ùî∏(n; S) ‚Üò S ‚â´ f :=\n  pullback.lift_fst _ _ _\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.map_over_assoc","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS T : AlgebraicGeometry.Scheme\nf : Quiver.Hom S T\nZ : AlgebraicGeometry.Scheme\nh : Quiver.Hom T Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.map n f) (CategoryTheory.CategoryStruct.comp (CategoryTheory.over (AlgebraicGeometry.AffineSpace n T) T inferInstance) h)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.over (AlgebraicGeometry.AffineSpace n S) S inferInstance) (CategoryTheory.CategoryStruct.comp f h))","decl":"@[reassoc (attr := simp)]\nlemma map_over {S T : Scheme.{max u v}} (f : S ‚ü∂ T) : map n f ‚â´ ùî∏(n; T) ‚Üò T = ùî∏(n; S) ‚Üò S ‚â´ f :=\n  pullback.lift_fst _ _ _\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.map_appTop_coord","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS T : AlgebraicGeometry.Scheme\nf : Quiver.Hom S T\ni : n\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom (AlgebraicGeometry.Scheme.Hom.appTop (AlgebraicGeometry.AffineSpace.map n f))) (AlgebraicGeometry.AffineSpace.coord T i)) (AlgebraicGeometry.AffineSpace.coord S i)","decl":"@[simp]\nlemma map_appTop_coord {S T : Scheme.{max u v}} (f : S ‚ü∂ T) (i) :\n    (map n f).appTop (coord T i) = coord S i :=\n  homOfVector_appTop_coord _ _ _\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.map_toSpecMvPoly","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS T : AlgebraicGeometry.Scheme\nf : Quiver.Hom S T\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.map n f) (AlgebraicGeometry.AffineSpace.toSpecMvPoly n T)) (AlgebraicGeometry.AffineSpace.toSpecMvPoly n S)","decl":"@[reassoc (attr := simp)]\nlemma map_toSpecMvPoly {S T : Scheme.{max u v}} (f : S ‚ü∂ T) :\n    map n f ‚â´ toSpecMvPoly n T = toSpecMvPoly n S := by\n  apply (toSpecMvPolyIntEquiv _).injective\n  ext i\n  rw [toSpecMvPolyIntEquiv_comp, ‚Üê coord, map_appTop_coord, coord]\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.map_toSpecMvPoly_assoc","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS T : AlgebraicGeometry.Scheme\nf : Quiver.Hom S T\nZ : AlgebraicGeometry.Scheme\nh : Quiver.Hom (AlgebraicGeometry.Spec (CommRingCat.of (MvPolynomial n (ULift.{max u v, 0} Int)))) Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.map n f) (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.toSpecMvPoly n T) h)) (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.toSpecMvPoly n S) h)","decl":"@[reassoc (attr := simp)]\nlemma map_toSpecMvPoly {S T : Scheme.{max u v}} (f : S ‚ü∂ T) :\n    map n f ‚â´ toSpecMvPoly n T = toSpecMvPoly n S := by\n  apply (toSpecMvPolyIntEquiv _).injective\n  ext i\n  rw [toSpecMvPolyIntEquiv_comp, ‚Üê coord, map_appTop_coord, coord]\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.map_id","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS : AlgebraicGeometry.Scheme\n‚ä¢ Eq (AlgebraicGeometry.AffineSpace.map n (CategoryTheory.CategoryStruct.id S)) (CategoryTheory.CategoryStruct.id (AlgebraicGeometry.AffineSpace n S))","decl":"@[simp]\nlemma map_id : map n (ùüô S) = ùüô ùî∏(n; S) := by\n  ext1 <;> simp\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.map_comp","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS S' S'' : AlgebraicGeometry.Scheme\nf : Quiver.Hom S S'\ng : Quiver.Hom S' S''\n‚ä¢ Eq (AlgebraicGeometry.AffineSpace.map n (CategoryTheory.CategoryStruct.comp f g)) (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.map n f) (AlgebraicGeometry.AffineSpace.map n g))","decl":"@[reassoc, simp]\nlemma map_comp {S S' S'' : Scheme} (f : S ‚ü∂ S') (g : S' ‚ü∂ S'') :\n    map n (f ‚â´ g) = map n f ‚â´ map n g := by\n  ext1\n  ¬∑ simp\n  ¬∑ simp\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.map_comp_assoc","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS S' S'' : AlgebraicGeometry.Scheme\nf : Quiver.Hom S S'\ng : Quiver.Hom S' S''\nZ : AlgebraicGeometry.Scheme\nh : Quiver.Hom (AlgebraicGeometry.AffineSpace n S'') Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.map n (CategoryTheory.CategoryStruct.comp f g)) h) (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.map n f) (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.map n g) h))","decl":"@[reassoc, simp]\nlemma map_comp {S S' S'' : Scheme} (f : S ‚ü∂ S') (g : S' ‚ü∂ S'') :\n    map n (f ‚â´ g) = map n f ‚â´ map n g := by\n  ext1\n  ¬∑ simp\n  ¬∑ simp\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.map_Spec_map","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nR S : CommRingCat\nœÜ : Quiver.Hom R S\n‚ä¢ Eq (AlgebraicGeometry.AffineSpace.map n (AlgebraicGeometry.Spec.map œÜ)) (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.SpecIso n S).hom (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.Spec.map (CommRingCat.ofHom (MvPolynomial.map (CommRingCat.Hom.hom œÜ)))) (AlgebraicGeometry.AffineSpace.SpecIso n R).inv))","decl":"lemma map_Spec_map {R S : CommRingCat.{max u v}} (œÜ : R ‚ü∂ S) :\n    map n (Spec.map œÜ) =\n      (SpecIso n S).hom ‚â´ Spec.map (CommRingCat.ofHom (MvPolynomial.map œÜ.hom)) ‚â´\n        (SpecIso n R).inv := by\n  rw [‚Üê Iso.inv_comp_eq]\n  ext1\n  ¬∑ simp only [map_over, Category.assoc, SpecIso_inv_over, SpecIso_inv_over_assoc,\n      ‚Üê Spec.map_comp, ‚Üê CommRingCat.ofHom_comp]\n    rw [map_comp_C, CommRingCat.ofHom_comp, CommRingCat.ofHom_hom]\n  ¬∑ simp only [Scheme.comp_coeBase, TopologicalSpace.Opens.map_comp_obj,\n      TopologicalSpace.Opens.map_top, Scheme.comp_app, CommRingCat.comp_apply]\n    conv_lhs => enter[2]; tactic => exact map_appTop_coord _ _\n    conv_rhs => enter[2]; tactic => exact SpecIso_inv_appTop_coord _ _\n    rw [SpecIso_inv_appTop_coord, ‚Üê CommRingCat.comp_apply, ‚Üê Scheme.ŒìSpecIso_inv_naturality,\n        CommRingCat.comp_apply, ConcreteCategory.hom_ofHom, map_X]\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.isPullback_map","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS T : AlgebraicGeometry.Scheme\nf : Quiver.Hom S T\n‚ä¢ CategoryTheory.IsPullback (AlgebraicGeometry.AffineSpace.map n f) (CategoryTheory.over (AlgebraicGeometry.AffineSpace n S) S inferInstance) (CategoryTheory.over (AlgebraicGeometry.AffineSpace n T) T inferInstance) f","decl":"lemma isPullback_map {S T : Scheme.{max u v}} (f : S ‚ü∂ T) :\n    IsPullback (map n f) (ùî∏(n; S) ‚Üò S) (ùî∏(n; T) ‚Üò T) f := by\n  refine (IsPullback.paste_horiz_iff (.flip <| .of_hasPullback _ _) (map_over f)).mp ?_\n  simp only [terminal.comp_from, ]\n  convert (IsPullback.of_hasPullback _ _).flip\n  rw [‚Üê toSpecMvPoly, ‚Üê toSpecMvPoly, map_toSpecMvPoly]\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.reindex_over_assoc","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n m : Type v\ni : m ‚Üí n\nS Z : AlgebraicGeometry.Scheme\nh : Quiver.Hom S Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.reindex i S) (CategoryTheory.CategoryStruct.comp (CategoryTheory.over (AlgebraicGeometry.AffineSpace m S) S inferInstance) h)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.over (AlgebraicGeometry.AffineSpace n S) S inferInstance) h)","decl":"@[simp, reassoc]\nlemma reindex_over {n m : Type v} (i : m ‚Üí n) (S : Scheme.{max u v}) :\n    reindex i S ‚â´ ùî∏(m; S) ‚Üò S = ùî∏(n; S) ‚Üò S :=\n  pullback.lift_fst _ _ _\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.reindex_over","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n m : Type v\ni : m ‚Üí n\nS : AlgebraicGeometry.Scheme\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.reindex i S) (CategoryTheory.over (AlgebraicGeometry.AffineSpace m S) S inferInstance)) (CategoryTheory.over (AlgebraicGeometry.AffineSpace n S) S inferInstance)","decl":"@[simp, reassoc]\nlemma reindex_over {n m : Type v} (i : m ‚Üí n) (S : Scheme.{max u v}) :\n    reindex i S ‚â´ ùî∏(m; S) ‚Üò S = ùî∏(n; S) ‚Üò S :=\n  pullback.lift_fst _ _ _\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.reindex_appTop_coord","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n m : Type v\ni : m ‚Üí n\nS : AlgebraicGeometry.Scheme\nj : m\n‚ä¢ Eq ((CategoryTheory.ConcreteCategory.hom (AlgebraicGeometry.Scheme.Hom.appTop (AlgebraicGeometry.AffineSpace.reindex i S))) (AlgebraicGeometry.AffineSpace.coord S j)) (AlgebraicGeometry.AffineSpace.coord S (i j))","decl":"@[simp]\nlemma reindex_appTop_coord {n m : Type v} (i : m ‚Üí n) (S : Scheme.{max u v}) (j : m) :\n    (reindex i S).appTop (coord S j) = coord S (i j) :=\n  homOfVector_appTop_coord _ _ _\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.reindex_id","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS : AlgebraicGeometry.Scheme\n‚ä¢ Eq (AlgebraicGeometry.AffineSpace.reindex id S) (CategoryTheory.CategoryStruct.id (AlgebraicGeometry.AffineSpace n S))","decl":"@[simp]\nlemma reindex_id : reindex id S = ùüô ùî∏(n; S) := by\n  ext1 <;> simp\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.reindex_comp_assoc","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n‚ÇÅ n‚ÇÇ n‚ÇÉ : Type v\ni : n‚ÇÅ ‚Üí n‚ÇÇ\nj : n‚ÇÇ ‚Üí n‚ÇÉ\nS Z : AlgebraicGeometry.Scheme\nh : Quiver.Hom (AlgebraicGeometry.AffineSpace n‚ÇÅ S) Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.reindex (Function.comp j i) S) h) (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.reindex j S) (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.reindex i S) h))","decl":"@[simp, reassoc]\nlemma reindex_comp {n‚ÇÅ n‚ÇÇ n‚ÇÉ : Type v} (i : n‚ÇÅ ‚Üí n‚ÇÇ) (j : n‚ÇÇ ‚Üí n‚ÇÉ) (S : Scheme.{max u v}) :\n    reindex (j ‚àò i) S = reindex j S ‚â´ reindex i S := by\n  have H‚ÇÅ : reindex (j ‚àò i) S ‚â´ ùî∏(n‚ÇÅ; S) ‚Üò S = (reindex j S ‚â´ reindex i S) ‚â´ ùî∏(n‚ÇÅ; S) ‚Üò S := by simp\n  have H‚ÇÇ (k) : (reindex (j ‚àò i) S).appTop (coord S k) =\n      (reindex j S).appTop ((reindex i S).appTop (coord S k)) := by\n    rw [reindex_appTop_coord, reindex_appTop_coord, reindex_appTop_coord]\n    rfl\n  exact hom_ext H‚ÇÅ H‚ÇÇ\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.reindex_comp","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n‚ÇÅ n‚ÇÇ n‚ÇÉ : Type v\ni : n‚ÇÅ ‚Üí n‚ÇÇ\nj : n‚ÇÇ ‚Üí n‚ÇÉ\nS : AlgebraicGeometry.Scheme\n‚ä¢ Eq (AlgebraicGeometry.AffineSpace.reindex (Function.comp j i) S) (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.reindex j S) (AlgebraicGeometry.AffineSpace.reindex i S))","decl":"@[simp, reassoc]\nlemma reindex_comp {n‚ÇÅ n‚ÇÇ n‚ÇÉ : Type v} (i : n‚ÇÅ ‚Üí n‚ÇÇ) (j : n‚ÇÇ ‚Üí n‚ÇÉ) (S : Scheme.{max u v}) :\n    reindex (j ‚àò i) S = reindex j S ‚â´ reindex i S := by\n  have H‚ÇÅ : reindex (j ‚àò i) S ‚â´ ùî∏(n‚ÇÅ; S) ‚Üò S = (reindex j S ‚â´ reindex i S) ‚â´ ùî∏(n‚ÇÅ; S) ‚Üò S := by simp\n  have H‚ÇÇ (k) : (reindex (j ‚àò i) S).appTop (coord S k) =\n      (reindex j S).appTop ((reindex i S).appTop (coord S k)) := by\n    rw [reindex_appTop_coord, reindex_appTop_coord, reindex_appTop_coord]\n    rfl\n  exact hom_ext H‚ÇÅ H‚ÇÇ\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.map_reindex_assoc","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n‚ÇÅ n‚ÇÇ : Type v\ni : n‚ÇÅ ‚Üí n‚ÇÇ\nS T : AlgebraicGeometry.Scheme\nf : Quiver.Hom S T\nZ : AlgebraicGeometry.Scheme\nh : Quiver.Hom (AlgebraicGeometry.AffineSpace n‚ÇÅ T) Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.map n‚ÇÇ f) (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.reindex i T) h)) (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.reindex i S) (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.map n‚ÇÅ f) h))","decl":"@[reassoc (attr := simp)]\nlemma map_reindex {n‚ÇÅ n‚ÇÇ : Type v} (i : n‚ÇÅ ‚Üí n‚ÇÇ) {S T : Scheme.{max u v}} (f : S ‚ü∂ T) :\n    map n‚ÇÇ f ‚â´ reindex i T = reindex i S ‚â´ map n‚ÇÅ f := by\n  apply hom_ext <;> simp\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.map_reindex","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n‚ÇÅ n‚ÇÇ : Type v\ni : n‚ÇÅ ‚Üí n‚ÇÇ\nS T : AlgebraicGeometry.Scheme\nf : Quiver.Hom S T\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.map n‚ÇÇ f) (AlgebraicGeometry.AffineSpace.reindex i T)) (CategoryTheory.CategoryStruct.comp (AlgebraicGeometry.AffineSpace.reindex i S) (AlgebraicGeometry.AffineSpace.map n‚ÇÅ f))","decl":"@[reassoc (attr := simp)]\nlemma map_reindex {n‚ÇÅ n‚ÇÇ : Type v} (i : n‚ÇÅ ‚Üí n‚ÇÇ) {S T : Scheme.{max u v}} (f : S ‚ü∂ T) :\n    map n‚ÇÇ f ‚â´ reindex i T = reindex i S ‚â´ map n‚ÇÅ f := by\n  apply hom_ext <;> simp\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.functor_obj_map","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Opposite (Type v)\nX‚úù Y‚úù : AlgebraicGeometry.Scheme\nf : Quiver.Hom X‚úù Y‚úù\n‚ä¢ Eq ((AlgebraicGeometry.AffineSpace.functor.obj n).map f) (AlgebraicGeometry.AffineSpace.map (Opposite.unop n) f)","decl":"/-- The affine space as a functor. -/\n@[simps]\ndef functor : (Type v)·µí·µñ ‚•§ Scheme.{max u v} ‚•§ Scheme.{max u v} where\n  obj n := { obj := AffineSpace n.unop, map := map n.unop, map_id := map_id, map_comp := map_comp }\n  map {n m} i := { app := reindex i.unop, naturality := fun _ _ ‚Ü¶ map_reindex i.unop }\n  map_id n := by ext: 2; exact reindex_id _\n  map_comp f g := by ext: 2; dsimp; exact reindex_comp _ _ _\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.functor_map_app","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n m : Opposite (Type v)\ni : Quiver.Hom n m\nS : AlgebraicGeometry.Scheme\n‚ä¢ Eq ((AlgebraicGeometry.AffineSpace.functor.map i).app S) (AlgebraicGeometry.AffineSpace.reindex i.unop S)","decl":"/-- The affine space as a functor. -/\n@[simps]\ndef functor : (Type v)·µí·µñ ‚•§ Scheme.{max u v} ‚•§ Scheme.{max u v} where\n  obj n := { obj := AffineSpace n.unop, map := map n.unop, map_id := map_id, map_comp := map_comp }\n  map {n m} i := { app := reindex i.unop, naturality := fun _ _ ‚Ü¶ map_reindex i.unop }\n  map_id n := by ext: 2; exact reindex_id _\n  map_comp f g := by ext: 2; dsimp; exact reindex_comp _ _ _\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.functor_obj_obj","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Opposite (Type v)\nS : AlgebraicGeometry.Scheme\n‚ä¢ Eq ((AlgebraicGeometry.AffineSpace.functor.obj n).obj S) (AlgebraicGeometry.AffineSpace (Opposite.unop n) S)","decl":"/-- The affine space as a functor. -/\n@[simps]\ndef functor : (Type v)·µí·µñ ‚•§ Scheme.{max u v} ‚•§ Scheme.{max u v} where\n  obj n := { obj := AffineSpace n.unop, map := map n.unop, map_id := map_id, map_comp := map_comp }\n  map {n m} i := { app := reindex i.unop, naturality := fun _ _ ‚Ü¶ map_reindex i.unop }\n  map_id n := by ext: 2; exact reindex_id _\n  map_comp f g := by ext: 2; dsimp; exact reindex_comp _ _ _\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.instIsAffineHomOverSchemeInferInstanceOverClass","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS : AlgebraicGeometry.Scheme\n‚ä¢ AlgebraicGeometry.IsAffineHom (CategoryTheory.over (AlgebraicGeometry.AffineSpace n S) S inferInstance)","decl":"instance : IsAffineHom (ùî∏(n; S) ‚Üò S) := MorphismProperty.pullback_fst _ _ inferInstance\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.instSurjectiveOverSchemeInferInstanceOverClass","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS : AlgebraicGeometry.Scheme\n‚ä¢ AlgebraicGeometry.Surjective (CategoryTheory.over (AlgebraicGeometry.AffineSpace n S) S inferInstance)","decl":"instance : Surjective (ùî∏(n; S) ‚Üò S) := MorphismProperty.pullback_fst _ _ <| by\n  have := isIso_of_isTerminal specULiftZIsTerminal terminalIsTerminal (terminal.from _)\n  rw [‚Üê terminal.comp_from (Spec.map (CommRingCat.ofHom C)),\n    MorphismProperty.cancel_right_of_respectsIso (P := @Surjective)]\n  exact ‚ü®MvPolynomial.comap_C_surjective‚ü©\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.instLocallyOfFinitePresentationOverSchemeInferInstanceOverClassOfFinite","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS : AlgebraicGeometry.Scheme\ninst‚úù : Finite n\n‚ä¢ AlgebraicGeometry.LocallyOfFinitePresentation (CategoryTheory.over (AlgebraicGeometry.AffineSpace n S) S inferInstance)","decl":"instance [Finite n] : LocallyOfFinitePresentation (ùî∏(n; S) ‚Üò S) :=\n  MorphismProperty.pullback_fst _ _ <| by\n  have := isIso_of_isTerminal specULiftZIsTerminal.{max u v} terminalIsTerminal (terminal.from _)\n  rw [‚Üê terminal.comp_from (Spec.map (CommRingCat.ofHom C)),\n    MorphismProperty.cancel_right_of_respectsIso (P := @LocallyOfFinitePresentation),\n    HasRingHomProperty.Spec_iff (P := @LocallyOfFinitePresentation), RingHom.FinitePresentation]\n  convert (inferInstanceAs (Algebra.FinitePresentation (ULift ‚Ñ§) ‚Ñ§[n]))\n  exact Algebra.algebra_ext _ _ fun _ ‚Ü¶ rfl\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.isOpenMap_over","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS : AlgebraicGeometry.Scheme\n‚ä¢ IsOpenMap ‚áë(CategoryTheory.over (AlgebraicGeometry.AffineSpace n S) S inferInstance).base","decl":"lemma isOpenMap_over : IsOpenMap (ùî∏(n; S) ‚Üò S).base := by\n  show topologically @IsOpenMap _\n  wlog hS : ‚àÉ R, S = Spec R\n  ¬∑ refine (IsLocalAtTarget.iff_of_openCover (P := topologically @IsOpenMap) S.affineCover).mpr ?_\n    intro i\n    have := this (n := n) (S.affineCover.obj i) ‚ü®_, rfl‚ü©\n    rwa [‚Üê (isPullback_map (n := n)  (S.affineCover.map i)).isoPullback_hom_snd,\n      MorphismProperty.cancel_left_of_respectsIso (P := topologically @IsOpenMap)] at this\n  obtain ‚ü®R, rfl‚ü© := hS\n  rw [‚Üê MorphismProperty.cancel_left_of_respectsIso (P := topologically @IsOpenMap)\n    (SpecIso n R).inv, SpecIso_inv_over]\n  exact MvPolynomial.isOpenMap_comap_C\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.instIsIsoSchemeOverInferInstanceOverClassOfIsEmpty","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS : AlgebraicGeometry.Scheme\ninst‚úù : IsEmpty n\n‚ä¢ CategoryTheory.IsIso (CategoryTheory.over (AlgebraicGeometry.AffineSpace n S) S inferInstance)","decl":"open MorphismProperty in\ninstance [IsEmpty n] : IsIso (ùî∏(n; S) ‚Üò S) := pullback_fst\n    (P := isomorphisms _) _ _ <| by\n  rw [‚Üê terminal.comp_from (Spec.map (CommRingCat.ofHom C))]\n  apply IsStableUnderComposition.comp_mem\n  ¬∑ rw [HasAffineProperty.iff_of_isAffine (P := isomorphisms _), ‚Üê isomorphisms,\n      ‚Üê arrow_mk_iso_iff (isomorphisms _) (arrowIsoŒìSpecOfIsAffine _)]\n    exact ‚ü®inferInstance, (ConcreteCategory.isIso_iff_bijective _).mpr\n      ‚ü®C_injective n _, C_surjective _‚ü©‚ü©\n  ¬∑ exact isIso_of_isTerminal specULiftZIsTerminal terminalIsTerminal (terminal.from _)\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.isIntegralHom_over_iff_isEmpty","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS : AlgebraicGeometry.Scheme\n‚ä¢ Iff (AlgebraicGeometry.IsIntegralHom (CategoryTheory.over (AlgebraicGeometry.AffineSpace n S) S inferInstance)) (Or (IsEmpty ‚Üë‚ÜëS.toPresheafedSpace) (IsEmpty n))","decl":"lemma isIntegralHom_over_iff_isEmpty : IsIntegralHom (ùî∏(n; S) ‚Üò S) ‚Üî IsEmpty S ‚à® IsEmpty n := by\n  constructor\n  ¬∑ intro h\n    cases isEmpty_or_nonempty S\n    ¬∑ exact .inl ‚Äπ_‚Ä∫\n    refine .inr ?_\n    wlog hS : ‚àÉ R, S = Spec R\n    ¬∑ obtain ‚ü®x‚ü© := ‚ÄπNonempty S‚Ä∫\n      obtain ‚ü®y, hy‚ü© := S.affineCover.covers x\n      exact this (S.affineCover.obj x) (MorphismProperty.IsStableUnderBaseChange.of_isPullback\n        (isPullback_map (S.affineCover.map x)) h) ‚ü®y‚ü© ‚ü®_, rfl‚ü©\n    obtain ‚ü®R, rfl‚ü© := hS\n    have : Nontrivial R := (subsingleton_or_nontrivial R).resolve_left fun H ‚Ü¶\n        not_isEmpty_of_nonempty (Spec R) (inferInstanceAs (IsEmpty (PrimeSpectrum R)))\n    constructor\n    intro i\n    have := RingHom.toMorphismProperty_respectsIso_iff.mp RingHom.isIntegral_respectsIso.{max u v}\n    rw [‚Üê MorphismProperty.cancel_left_of_respectsIso @IsIntegralHom (SpecIso n R).inv,\n      SpecIso_inv_over, HasAffineProperty.iff_of_isAffine (P := @IsIntegralHom)] at h\n    obtain ‚ü®p : Polynomial R, hp, hp'‚ü© :=\n      (MorphismProperty.arrow_mk_iso_iff (RingHom.toMorphismProperty RingHom.IsIntegral)\n        (arrowIsoŒìSpecOfIsAffine _)).mpr h.2 (X i)\n    have : (rename fun _ ‚Ü¶ i).comp (pUnitAlgEquiv.{_, v} _).symm.toAlgHom p = 0 := by\n      simp [‚Üê hp', ‚Üê algebraMap_eq]\n    rw [AlgHom.comp_apply, map_eq_zero_iff _ (rename_injective _ (fun _ _ _ ‚Ü¶ rfl))] at this\n    simp only [AlgEquiv.toAlgHom_eq_coe, AlgHom.coe_coe, EmbeddingLike.map_eq_zero_iff] at this\n    simp [this] at hp\n  ¬∑ rintro (_ | _) <;> infer_instance\n\n"}
{"name":"AlgebraicGeometry.AffineSpace.not_isIntegralHom","module":"Mathlib.AlgebraicGeometry.AffineSpace","initialProofState":"n : Type v\nS : AlgebraicGeometry.Scheme\ninst‚úù¬π : Nonempty ‚Üë‚ÜëS.toPresheafedSpace\ninst‚úù : Nonempty n\n‚ä¢ Not (AlgebraicGeometry.IsIntegralHom (CategoryTheory.over (AlgebraicGeometry.AffineSpace n S) S inferInstance))","decl":"lemma not_isIntegralHom [Nonempty S] [Nonempty n] : ¬¨ IsIntegralHom (ùî∏(n; S) ‚Üò S) := by\n  simp [isIntegralHom_over_iff_isEmpty]\n\n"}
