{"name":"DomAddAct.continuous_mk","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Continuous ⇑DomAddAct.mk","decl":"@[to_additive (attr := continuity, fun_prop)]\ntheorem continuous_mk : Continuous (@mk M) := continuous_induced_rng.2 continuous_id\n\n"}
{"name":"DomMulAct.continuous_mk","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Continuous ⇑DomMulAct.mk","decl":"@[to_additive (attr := continuity, fun_prop)]\ntheorem continuous_mk : Continuous (@mk M) := continuous_induced_rng.2 continuous_id\n\n"}
{"name":"DomAddAct.continuous_mk_symm","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Continuous ⇑DomAddAct.mk.symm","decl":"@[to_additive (attr := continuity, fun_prop)]\ntheorem continuous_mk_symm : Continuous (@mk M).symm := continuous_induced_dom\n\n"}
{"name":"DomMulAct.continuous_mk_symm","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Continuous ⇑DomMulAct.mk.symm","decl":"@[to_additive (attr := continuity, fun_prop)]\ntheorem continuous_mk_symm : Continuous (@mk M).symm := continuous_induced_dom\n\n"}
{"name":"DomAddAct.mkHomeomorph_toEquiv","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Eq DomAddAct.mkHomeomorph.toEquiv DomAddAct.mk","decl":"/-- `DomMulAct.mk` as a homeomorphism. -/\n@[to_additive (attr := simps toEquiv) \"`DomAddAct.mk` as a homeomorphism.\"]\ndef mkHomeomorph : M ≃ₜ Mᵈᵐᵃ where\n  toEquiv := mk\n\n"}
{"name":"DomMulAct.mkHomeomorph_toEquiv","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Eq DomMulAct.mkHomeomorph.toEquiv DomMulAct.mk","decl":"/-- `DomMulAct.mk` as a homeomorphism. -/\n@[to_additive (attr := simps toEquiv) \"`DomAddAct.mk` as a homeomorphism.\"]\ndef mkHomeomorph : M ≃ₜ Mᵈᵐᵃ where\n  toEquiv := mk\n\n"}
{"name":"DomAddAct.coe_mkHomeomorph","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Eq ⇑DomAddAct.mkHomeomorph ⇑DomAddAct.mk","decl":"@[to_additive (attr := simp)] theorem coe_mkHomeomorph : ⇑(mkHomeomorph : M ≃ₜ Mᵈᵐᵃ) = mk := rfl\n\n"}
{"name":"DomMulAct.coe_mkHomeomorph","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Eq ⇑DomMulAct.mkHomeomorph ⇑DomMulAct.mk","decl":"@[to_additive (attr := simp)] theorem coe_mkHomeomorph : ⇑(mkHomeomorph : M ≃ₜ Mᵈᵐᵃ) = mk := rfl\n\n"}
{"name":"DomAddAct.coe_mkHomeomorph_symm","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Eq ⇑DomAddAct.mkHomeomorph.symm ⇑DomAddAct.mk.symm","decl":"@[to_additive (attr := simp)]\ntheorem coe_mkHomeomorph_symm : ⇑(mkHomeomorph : M ≃ₜ Mᵈᵐᵃ).symm = mk.symm := rfl\n\n"}
{"name":"DomMulAct.coe_mkHomeomorph_symm","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Eq ⇑DomMulAct.mkHomeomorph.symm ⇑DomMulAct.mk.symm","decl":"@[to_additive (attr := simp)]\ntheorem coe_mkHomeomorph_symm : ⇑(mkHomeomorph : M ≃ₜ Mᵈᵐᵃ).symm = mk.symm := rfl\n\n"}
{"name":"DomAddAct.isInducing_mk","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsInducing ⇑DomAddAct.mk","decl":"@[to_additive] theorem isInducing_mk : IsInducing (@mk M) := mkHomeomorph.isInducing\n"}
{"name":"DomMulAct.isInducing_mk","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsInducing ⇑DomMulAct.mk","decl":"@[to_additive] theorem isInducing_mk : IsInducing (@mk M) := mkHomeomorph.isInducing\n"}
{"name":"DomAddAct.isEmbedding_mk","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsEmbedding ⇑DomAddAct.mk","decl":"@[to_additive] theorem isEmbedding_mk : IsEmbedding (@mk M) := mkHomeomorph.isEmbedding\n"}
{"name":"DomMulAct.isEmbedding_mk","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsEmbedding ⇑DomMulAct.mk","decl":"@[to_additive] theorem isEmbedding_mk : IsEmbedding (@mk M) := mkHomeomorph.isEmbedding\n"}
{"name":"DomAddAct.isOpenEmbedding_mk","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsOpenEmbedding ⇑DomAddAct.mk","decl":"@[to_additive] theorem isOpenEmbedding_mk : IsOpenEmbedding (@mk M) := mkHomeomorph.isOpenEmbedding\n"}
{"name":"DomMulAct.isOpenEmbedding_mk","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsOpenEmbedding ⇑DomMulAct.mk","decl":"@[to_additive] theorem isOpenEmbedding_mk : IsOpenEmbedding (@mk M) := mkHomeomorph.isOpenEmbedding\n"}
{"name":"DomAddAct.isClosedEmbedding_mk","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsClosedEmbedding ⇑DomAddAct.mk","decl":"@[to_additive] theorem isClosedEmbedding_mk : IsClosedEmbedding (@mk M) :=\n  mkHomeomorph.isClosedEmbedding\n"}
{"name":"DomMulAct.isClosedEmbedding_mk","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsClosedEmbedding ⇑DomMulAct.mk","decl":"@[to_additive] theorem isClosedEmbedding_mk : IsClosedEmbedding (@mk M) :=\n  mkHomeomorph.isClosedEmbedding\n"}
{"name":"DomAddAct.isQuotientMap_mk","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsQuotientMap ⇑DomAddAct.mk","decl":"@[to_additive] theorem isQuotientMap_mk : IsQuotientMap (@mk M) := mkHomeomorph.isQuotientMap\n\n"}
{"name":"DomMulAct.isQuotientMap_mk","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsQuotientMap ⇑DomMulAct.mk","decl":"@[to_additive] theorem isQuotientMap_mk : IsQuotientMap (@mk M) := mkHomeomorph.isQuotientMap\n\n"}
{"name":"DomMulAct.inducing_mk","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsInducing ⇑DomMulAct.mk","decl":"@[deprecated (since := \"2024-10-28\")] alias inducing_mk := isInducing_mk\n\n"}
{"name":"DomMulAct.embedding_mk","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsEmbedding ⇑DomMulAct.mk","decl":"@[deprecated (since := \"2024-10-26\")]\nalias embedding_mk := isEmbedding_mk\n\n"}
{"name":"DomMulAct.quotientMap_mk","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsQuotientMap ⇑DomMulAct.mk","decl":"@[deprecated (since := \"2024-10-22\")]\nalias quotientMap_mk := isQuotientMap_mk\n\n"}
{"name":"DomMulAct.closedEmbedding_mk","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsClosedEmbedding ⇑DomMulAct.mk","decl":"@[deprecated (since := \"2024-10-20\")]\nalias closedEmbedding_mk := isClosedEmbedding_mk\n\n"}
{"name":"DomMulAct.openEmbedding_mk","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsOpenEmbedding ⇑DomMulAct.mk","decl":"@[deprecated (since := \"2024-10-18\")]\nalias openEmbedding_mk := isOpenEmbedding_mk\n\n"}
{"name":"DomMulAct.isInducing_mk_symm","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsInducing ⇑DomMulAct.mk.symm","decl":"@[to_additive] theorem isInducing_mk_symm : IsInducing (@mk M).symm := mkHomeomorph.symm.isInducing\n"}
{"name":"DomAddAct.isInducing_mk_symm","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsInducing ⇑DomAddAct.mk.symm","decl":"@[to_additive] theorem isInducing_mk_symm : IsInducing (@mk M).symm := mkHomeomorph.symm.isInducing\n"}
{"name":"DomAddAct.isEmbedding_mk_symm","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsEmbedding ⇑DomAddAct.mk.symm","decl":"@[to_additive] theorem isEmbedding_mk_symm : IsEmbedding (@mk M).symm :=\n  mkHomeomorph.symm.isEmbedding\n\n"}
{"name":"DomMulAct.isEmbedding_mk_symm","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsEmbedding ⇑DomMulAct.mk.symm","decl":"@[to_additive] theorem isEmbedding_mk_symm : IsEmbedding (@mk M).symm :=\n  mkHomeomorph.symm.isEmbedding\n\n"}
{"name":"DomMulAct.inducing_mk_symm","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsInducing ⇑DomMulAct.mk.symm","decl":"@[deprecated (since := \"2024-10-28\")] alias inducing_mk_symm := isInducing_mk_symm\n\n"}
{"name":"DomMulAct.embedding_mk_symm","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsEmbedding ⇑DomMulAct.mk.symm","decl":"@[deprecated (since := \"2024-10-26\")]\nalias embedding_mk_symm := isEmbedding_mk_symm\n\n"}
{"name":"DomMulAct.isOpenEmbedding_mk_symm","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsOpenEmbedding ⇑DomMulAct.mk.symm","decl":"@[to_additive]\ntheorem isOpenEmbedding_mk_symm : IsOpenEmbedding (@mk M).symm := mkHomeomorph.symm.isOpenEmbedding\n\n"}
{"name":"DomAddAct.isOpenEmbedding_mk_symm","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsOpenEmbedding ⇑DomAddAct.mk.symm","decl":"@[to_additive]\ntheorem isOpenEmbedding_mk_symm : IsOpenEmbedding (@mk M).symm := mkHomeomorph.symm.isOpenEmbedding\n\n"}
{"name":"DomAddAct.isClosedEmbedding_mk_symm","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsClosedEmbedding ⇑DomAddAct.mk.symm","decl":"@[to_additive]\ntheorem isClosedEmbedding_mk_symm : IsClosedEmbedding (@mk M).symm :=\n  mkHomeomorph.symm.isClosedEmbedding\n\n"}
{"name":"DomMulAct.isClosedEmbedding_mk_symm","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsClosedEmbedding ⇑DomMulAct.mk.symm","decl":"@[to_additive]\ntheorem isClosedEmbedding_mk_symm : IsClosedEmbedding (@mk M).symm :=\n  mkHomeomorph.symm.isClosedEmbedding\n\n"}
{"name":"DomMulAct.closedEmbedding_mk_symm","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsClosedEmbedding ⇑DomMulAct.mk.symm","decl":"@[deprecated (since := \"2024-10-20\")]\nalias closedEmbedding_mk_symm := isClosedEmbedding_mk_symm\n\n"}
{"name":"DomMulAct.isQuotientMap_mk_symm","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsQuotientMap ⇑DomMulAct.mk.symm","decl":"@[to_additive]\ntheorem isQuotientMap_mk_symm : IsQuotientMap (@mk M).symm := mkHomeomorph.symm.isQuotientMap\n\n"}
{"name":"DomAddAct.isQuotientMap_mk_symm","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsQuotientMap ⇑DomAddAct.mk.symm","decl":"@[to_additive]\ntheorem isQuotientMap_mk_symm : IsQuotientMap (@mk M).symm := mkHomeomorph.symm.isQuotientMap\n\n"}
{"name":"DomMulAct.quotientMap_mk_symm","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\n⊢ Topology.IsQuotientMap ⇑DomMulAct.mk.symm","decl":"@[deprecated (since := \"2024-10-22\")]\nalias quotientMap_mk_symm := isQuotientMap_mk_symm\n\n"}
{"name":"DomAddAct.instT0Space","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : T0Space M\n⊢ T0Space (DomAddAct M)","decl":"@[to_additive] instance instT0Space [T0Space M] : T0Space Mᵈᵐᵃ := mkHomeomorph.t0Space\n"}
{"name":"DomMulAct.instT0Space","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : T0Space M\n⊢ T0Space (DomMulAct M)","decl":"@[to_additive] instance instT0Space [T0Space M] : T0Space Mᵈᵐᵃ := mkHomeomorph.t0Space\n"}
{"name":"DomMulAct.instT1Space","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : T1Space M\n⊢ T1Space (DomMulAct M)","decl":"@[to_additive] instance instT1Space [T1Space M] : T1Space Mᵈᵐᵃ := mkHomeomorph.t1Space\n"}
{"name":"DomAddAct.instT1Space","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : T1Space M\n⊢ T1Space (DomAddAct M)","decl":"@[to_additive] instance instT1Space [T1Space M] : T1Space Mᵈᵐᵃ := mkHomeomorph.t1Space\n"}
{"name":"DomAddAct.instT2Space","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : T2Space M\n⊢ T2Space (DomAddAct M)","decl":"@[to_additive] instance instT2Space [T2Space M] : T2Space Mᵈᵐᵃ := mkHomeomorph.t2Space\n"}
{"name":"DomMulAct.instT2Space","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : T2Space M\n⊢ T2Space (DomMulAct M)","decl":"@[to_additive] instance instT2Space [T2Space M] : T2Space Mᵈᵐᵃ := mkHomeomorph.t2Space\n"}
{"name":"DomAddAct.instT25Space","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : T25Space M\n⊢ T25Space (DomAddAct M)","decl":"@[to_additive] instance instT25Space [T25Space M] : T25Space Mᵈᵐᵃ := mkHomeomorph.t25Space\n"}
{"name":"DomMulAct.instT25Space","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : T25Space M\n⊢ T25Space (DomMulAct M)","decl":"@[to_additive] instance instT25Space [T25Space M] : T25Space Mᵈᵐᵃ := mkHomeomorph.t25Space\n"}
{"name":"DomAddAct.instT3Space","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : T3Space M\n⊢ T3Space (DomAddAct M)","decl":"@[to_additive] instance instT3Space [T3Space M] : T3Space Mᵈᵐᵃ := mkHomeomorph.t3Space\n"}
{"name":"DomMulAct.instT3Space","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : T3Space M\n⊢ T3Space (DomMulAct M)","decl":"@[to_additive] instance instT3Space [T3Space M] : T3Space Mᵈᵐᵃ := mkHomeomorph.t3Space\n"}
{"name":"DomAddAct.instT4Space","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : T4Space M\n⊢ T4Space (DomAddAct M)","decl":"@[to_additive] instance instT4Space [T4Space M] : T4Space Mᵈᵐᵃ := mkHomeomorph.t4Space\n"}
{"name":"DomMulAct.instT4Space","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : T4Space M\n⊢ T4Space (DomMulAct M)","decl":"@[to_additive] instance instT4Space [T4Space M] : T4Space Mᵈᵐᵃ := mkHomeomorph.t4Space\n"}
{"name":"DomMulAct.instT5Space","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : T5Space M\n⊢ T5Space (DomMulAct M)","decl":"@[to_additive] instance instT5Space [T5Space M] : T5Space Mᵈᵐᵃ := mkHomeomorph.t5Space\n\n"}
{"name":"DomAddAct.instT5Space","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : T5Space M\n⊢ T5Space (DomAddAct M)","decl":"@[to_additive] instance instT5Space [T5Space M] : T5Space Mᵈᵐᵃ := mkHomeomorph.t5Space\n\n"}
{"name":"DomMulAct.instR0Space","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : R0Space M\n⊢ R0Space (DomMulAct M)","decl":"@[to_additive] instance instR0Space [R0Space M] : R0Space Mᵈᵐᵃ := isEmbedding_mk_symm.r0Space\n"}
{"name":"DomAddAct.instR0Space","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : R0Space M\n⊢ R0Space (DomAddAct M)","decl":"@[to_additive] instance instR0Space [R0Space M] : R0Space Mᵈᵐᵃ := isEmbedding_mk_symm.r0Space\n"}
{"name":"DomAddAct.instR1Space","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : R1Space M\n⊢ R1Space (DomAddAct M)","decl":"@[to_additive] instance instR1Space [R1Space M] : R1Space Mᵈᵐᵃ := isEmbedding_mk_symm.r1Space\n\n"}
{"name":"DomMulAct.instR1Space","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : R1Space M\n⊢ R1Space (DomMulAct M)","decl":"@[to_additive] instance instR1Space [R1Space M] : R1Space Mᵈᵐᵃ := isEmbedding_mk_symm.r1Space\n\n"}
{"name":"DomAddAct.instRegularSpace","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : RegularSpace M\n⊢ RegularSpace (DomAddAct M)","decl":"@[to_additive]\ninstance instRegularSpace [RegularSpace M] : RegularSpace Mᵈᵐᵃ := isEmbedding_mk_symm.regularSpace\n\n"}
{"name":"DomMulAct.instRegularSpace","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : RegularSpace M\n⊢ RegularSpace (DomMulAct M)","decl":"@[to_additive]\ninstance instRegularSpace [RegularSpace M] : RegularSpace Mᵈᵐᵃ := isEmbedding_mk_symm.regularSpace\n\n"}
{"name":"DomMulAct.instNormalSpace","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : NormalSpace M\n⊢ NormalSpace (DomMulAct M)","decl":"@[to_additive]\ninstance instNormalSpace [NormalSpace M] : NormalSpace Mᵈᵐᵃ := mkHomeomorph.normalSpace\n\n"}
{"name":"DomAddAct.instNormalSpace","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : NormalSpace M\n⊢ NormalSpace (DomAddAct M)","decl":"@[to_additive]\ninstance instNormalSpace [NormalSpace M] : NormalSpace Mᵈᵐᵃ := mkHomeomorph.normalSpace\n\n"}
{"name":"DomMulAct.instCompletelyNormalSpace","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : CompletelyNormalSpace M\n⊢ CompletelyNormalSpace (DomMulAct M)","decl":"@[to_additive]\ninstance instCompletelyNormalSpace [CompletelyNormalSpace M] : CompletelyNormalSpace Mᵈᵐᵃ :=\n  isEmbedding_mk_symm.completelyNormalSpace\n\n"}
{"name":"DomAddAct.instCompletelyNormalSpace","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : CompletelyNormalSpace M\n⊢ CompletelyNormalSpace (DomAddAct M)","decl":"@[to_additive]\ninstance instCompletelyNormalSpace [CompletelyNormalSpace M] : CompletelyNormalSpace Mᵈᵐᵃ :=\n  isEmbedding_mk_symm.completelyNormalSpace\n\n"}
{"name":"DomAddAct.instDiscreteTopology","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : DiscreteTopology M\n⊢ DiscreteTopology (DomAddAct M)","decl":"@[to_additive]\ninstance instDiscreteTopology [DiscreteTopology M] : DiscreteTopology Mᵈᵐᵃ :=\n  isEmbedding_mk_symm.discreteTopology\n\n"}
{"name":"DomMulAct.instDiscreteTopology","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : DiscreteTopology M\n⊢ DiscreteTopology (DomMulAct M)","decl":"@[to_additive]\ninstance instDiscreteTopology [DiscreteTopology M] : DiscreteTopology Mᵈᵐᵃ :=\n  isEmbedding_mk_symm.discreteTopology\n\n"}
{"name":"DomMulAct.instSeparableSpace","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : TopologicalSpace.SeparableSpace M\n⊢ TopologicalSpace.SeparableSpace (DomMulAct M)","decl":"@[to_additive]\ninstance instSeparableSpace [SeparableSpace M] : SeparableSpace Mᵈᵐᵃ :=\n  isQuotientMap_mk.separableSpace\n\n"}
{"name":"DomAddAct.instSeparableSpace","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : TopologicalSpace.SeparableSpace M\n⊢ TopologicalSpace.SeparableSpace (DomAddAct M)","decl":"@[to_additive]\ninstance instSeparableSpace [SeparableSpace M] : SeparableSpace Mᵈᵐᵃ :=\n  isQuotientMap_mk.separableSpace\n\n"}
{"name":"DomAddAct.instFirstCountableTopology","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : FirstCountableTopology M\n⊢ FirstCountableTopology (DomAddAct M)","decl":"@[to_additive]\ninstance instFirstCountableTopology [FirstCountableTopology M] : FirstCountableTopology Mᵈᵐᵃ :=\n  isInducing_mk_symm.firstCountableTopology\n\n"}
{"name":"DomMulAct.instFirstCountableTopology","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : FirstCountableTopology M\n⊢ FirstCountableTopology (DomMulAct M)","decl":"@[to_additive]\ninstance instFirstCountableTopology [FirstCountableTopology M] : FirstCountableTopology Mᵈᵐᵃ :=\n  isInducing_mk_symm.firstCountableTopology\n\n"}
{"name":"DomAddAct.instSecondCountableTopology","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : SecondCountableTopology M\n⊢ SecondCountableTopology (DomAddAct M)","decl":"@[to_additive]\ninstance instSecondCountableTopology [SecondCountableTopology M] : SecondCountableTopology Mᵈᵐᵃ :=\n  isInducing_mk_symm.secondCountableTopology\n\n"}
{"name":"DomMulAct.instSecondCountableTopology","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : SecondCountableTopology M\n⊢ SecondCountableTopology (DomMulAct M)","decl":"@[to_additive]\ninstance instSecondCountableTopology [SecondCountableTopology M] : SecondCountableTopology Mᵈᵐᵃ :=\n  isInducing_mk_symm.secondCountableTopology\n\n"}
{"name":"DomAddAct.instCompactSpace","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : CompactSpace M\n⊢ CompactSpace (DomAddAct M)","decl":"@[to_additive]\ninstance instCompactSpace [CompactSpace M] : CompactSpace Mᵈᵐᵃ :=\n  mkHomeomorph.compactSpace\n\n"}
{"name":"DomMulAct.instCompactSpace","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : CompactSpace M\n⊢ CompactSpace (DomMulAct M)","decl":"@[to_additive]\ninstance instCompactSpace [CompactSpace M] : CompactSpace Mᵈᵐᵃ :=\n  mkHomeomorph.compactSpace\n\n"}
{"name":"DomAddAct.instLocallyCompactSpace","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : LocallyCompactSpace M\n⊢ LocallyCompactSpace (DomAddAct M)","decl":"@[to_additive]\ninstance instLocallyCompactSpace [LocallyCompactSpace M] : LocallyCompactSpace Mᵈᵐᵃ :=\n  isOpenEmbedding_mk_symm.locallyCompactSpace\n\n"}
{"name":"DomMulAct.instLocallyCompactSpace","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : LocallyCompactSpace M\n⊢ LocallyCompactSpace (DomMulAct M)","decl":"@[to_additive]\ninstance instLocallyCompactSpace [LocallyCompactSpace M] : LocallyCompactSpace Mᵈᵐᵃ :=\n  isOpenEmbedding_mk_symm.locallyCompactSpace\n\n"}
{"name":"DomAddAct.instWeaklyLocallyCompactSpace","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : WeaklyLocallyCompactSpace M\n⊢ WeaklyLocallyCompactSpace (DomAddAct M)","decl":"@[to_additive]\ninstance instWeaklyLocallyCompactSpace [WeaklyLocallyCompactSpace M] :\n    WeaklyLocallyCompactSpace Mᵈᵐᵃ :=\n  isClosedEmbedding_mk_symm.weaklyLocallyCompactSpace\n\n"}
{"name":"DomMulAct.instWeaklyLocallyCompactSpace","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝¹ : TopologicalSpace M\ninst✝ : WeaklyLocallyCompactSpace M\n⊢ WeaklyLocallyCompactSpace (DomMulAct M)","decl":"@[to_additive]\ninstance instWeaklyLocallyCompactSpace [WeaklyLocallyCompactSpace M] :\n    WeaklyLocallyCompactSpace Mᵈᵐᵃ :=\n  isClosedEmbedding_mk_symm.weaklyLocallyCompactSpace\n\n"}
{"name":"DomMulAct.map_mk_nhds","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\nx : M\n⊢ Eq (Filter.map (⇑DomMulAct.mk) (nhds x)) (nhds (DomMulAct.mk x))","decl":"@[to_additive (attr := simp)]\ntheorem map_mk_nhds (x : M) : map (mk : M → Mᵈᵐᵃ) (𝓝 x) = 𝓝 (mk x) :=\n  mkHomeomorph.map_nhds_eq x\n\n"}
{"name":"DomAddAct.map_mk_nhds","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\nx : M\n⊢ Eq (Filter.map (⇑DomAddAct.mk) (nhds x)) (nhds (DomAddAct.mk x))","decl":"@[to_additive (attr := simp)]\ntheorem map_mk_nhds (x : M) : map (mk : M → Mᵈᵐᵃ) (𝓝 x) = 𝓝 (mk x) :=\n  mkHomeomorph.map_nhds_eq x\n\n"}
{"name":"DomMulAct.map_mk_symm_nhds","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\nx : DomMulAct M\n⊢ Eq (Filter.map (⇑DomMulAct.mk.symm) (nhds x)) (nhds (DomMulAct.mk.symm x))","decl":"@[to_additive (attr := simp)]\ntheorem map_mk_symm_nhds (x : Mᵈᵐᵃ) : map (mk.symm : Mᵈᵐᵃ → M) (𝓝 x) = 𝓝 (mk.symm x) :=\n  mkHomeomorph.symm.map_nhds_eq x\n\n"}
{"name":"DomAddAct.map_mk_symm_nhds","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\nx : DomAddAct M\n⊢ Eq (Filter.map (⇑DomAddAct.mk.symm) (nhds x)) (nhds (DomAddAct.mk.symm x))","decl":"@[to_additive (attr := simp)]\ntheorem map_mk_symm_nhds (x : Mᵈᵐᵃ) : map (mk.symm : Mᵈᵐᵃ → M) (𝓝 x) = 𝓝 (mk.symm x) :=\n  mkHomeomorph.symm.map_nhds_eq x\n\n"}
{"name":"DomAddAct.comap_mk_nhds","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\nx : DomAddAct M\n⊢ Eq (Filter.comap (⇑DomAddAct.mk) (nhds x)) (nhds (DomAddAct.mk.symm x))","decl":"@[to_additive (attr := simp)]\ntheorem comap_mk_nhds (x : Mᵈᵐᵃ) : comap (mk : M → Mᵈᵐᵃ) (𝓝 x) = 𝓝 (mk.symm x) :=\n  mkHomeomorph.comap_nhds_eq x\n\n"}
{"name":"DomMulAct.comap_mk_nhds","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\nx : DomMulAct M\n⊢ Eq (Filter.comap (⇑DomMulAct.mk) (nhds x)) (nhds (DomMulAct.mk.symm x))","decl":"@[to_additive (attr := simp)]\ntheorem comap_mk_nhds (x : Mᵈᵐᵃ) : comap (mk : M → Mᵈᵐᵃ) (𝓝 x) = 𝓝 (mk.symm x) :=\n  mkHomeomorph.comap_nhds_eq x\n\n"}
{"name":"DomMulAct.comap_mk.symm_nhds","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\nx : M\n⊢ Eq (Filter.comap (⇑DomMulAct.mk.symm) (nhds x)) (nhds (DomMulAct.mk x))","decl":"@[to_additive (attr := simp)]\ntheorem comap_mk.symm_nhds (x : M) : comap (mk.symm : Mᵈᵐᵃ → M) (𝓝 x) = 𝓝 (mk x) :=\n  mkHomeomorph.symm.comap_nhds_eq x\n\n"}
{"name":"DomAddAct.comap_mk.symm_nhds","module":"Mathlib.Topology.Algebra.Constructions.DomMulAct","initialProofState":"M : Type u_1\ninst✝ : TopologicalSpace M\nx : M\n⊢ Eq (Filter.comap (⇑DomAddAct.mk.symm) (nhds x)) (nhds (DomAddAct.mk x))","decl":"@[to_additive (attr := simp)]\ntheorem comap_mk.symm_nhds (x : M) : comap (mk.symm : Mᵈᵐᵃ → M) (𝓝 x) = 𝓝 (mk x) :=\n  mkHomeomorph.symm.comap_nhds_eq x\n\n"}
