{"name":"star_prod","module":"Mathlib.Algebra.Star.BigOperators","initialProofState":"R : Type u_1\ninst✝¹ : CommMonoid R\ninst✝ : StarMul R\nα : Type u_2\ns : Finset α\nf : α → R\n⊢ Eq (Star.star (s.prod fun x => f x)) (s.prod fun x => Star.star (f x))","decl":"@[simp]\ntheorem star_prod [CommMonoid R] [StarMul R] {α : Type*} (s : Finset α) (f : α → R) :\n    star (∏ x ∈ s, f x) = ∏ x ∈ s, star (f x) := map_prod (starMulAut : R ≃* R) _ _\n\n"}
{"name":"star_sum","module":"Mathlib.Algebra.Star.BigOperators","initialProofState":"R : Type u_1\ninst✝¹ : AddCommMonoid R\ninst✝ : StarAddMonoid R\nα : Type u_2\ns : Finset α\nf : α → R\n⊢ Eq (Star.star (s.sum fun x => f x)) (s.sum fun x => Star.star (f x))","decl":"@[simp]\ntheorem star_sum [AddCommMonoid R] [StarAddMonoid R] {α : Type*} (s : Finset α) (f : α → R) :\n    star (∑ x ∈ s, f x) = ∑ x ∈ s, star (f x) := map_sum (starAddEquiv : R ≃+ R) _ _\n"}
