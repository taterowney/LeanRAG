{"name":"disjoint_of_subsingleton","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝² : PartialOrder α\ninst✝¹ : OrderBot α\na b : α\ninst✝ : Subsingleton α\n⊢ Disjoint a b","decl":"@[simp]\ntheorem disjoint_of_subsingleton [Subsingleton α] : Disjoint a b :=\n  fun x _ _ ↦ le_of_eq (Subsingleton.elim x ⊥)\n\n"}
{"name":"disjoint_comm","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderBot α\na b : α\n⊢ Iff (Disjoint a b) (Disjoint b a)","decl":"theorem disjoint_comm : Disjoint a b ↔ Disjoint b a :=\n  forall_congr' fun _ ↦ forall_swap\n\n"}
{"name":"Disjoint.symm","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderBot α\na b : α\na✝ : Disjoint a b\n⊢ Disjoint b a","decl":"@[symm]\ntheorem Disjoint.symm ⦃a b : α⦄ : Disjoint a b → Disjoint b a :=\n  disjoint_comm.1\n\n"}
{"name":"symmetric_disjoint","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderBot α\n⊢ Symmetric Disjoint","decl":"theorem symmetric_disjoint : Symmetric (Disjoint : α → α → Prop) :=\n  Disjoint.symm\n\n"}
{"name":"disjoint_bot_left","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderBot α\na : α\n⊢ Disjoint Bot.bot a","decl":"@[simp]\ntheorem disjoint_bot_left : Disjoint ⊥ a := fun _ hbot _ ↦ hbot\n\n"}
{"name":"disjoint_bot_right","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderBot α\na : α\n⊢ Disjoint a Bot.bot","decl":"@[simp]\ntheorem disjoint_bot_right : Disjoint a ⊥ := fun _ _ hbot ↦ hbot\n\n"}
{"name":"Disjoint.mono","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderBot α\na b c d : α\nh₁ : LE.le a b\nh₂ : LE.le c d\na✝ : Disjoint b d\n⊢ Disjoint a c","decl":"theorem Disjoint.mono (h₁ : a ≤ b) (h₂ : c ≤ d) : Disjoint b d → Disjoint a c :=\n  fun h _ ha hc ↦ h (ha.trans h₁) (hc.trans h₂)\n\n"}
{"name":"Disjoint.mono_left","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderBot α\na b c : α\nh : LE.le a b\na✝ : Disjoint b c\n⊢ Disjoint a c","decl":"theorem Disjoint.mono_left (h : a ≤ b) : Disjoint b c → Disjoint a c :=\n  Disjoint.mono h le_rfl\n\n"}
{"name":"Disjoint.mono_right","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderBot α\na b c : α\na✝¹ : LE.le b c\na✝ : Disjoint a c\n⊢ Disjoint a b","decl":"theorem Disjoint.mono_right : b ≤ c → Disjoint a c → Disjoint a b :=\n  Disjoint.mono le_rfl\n\n"}
{"name":"disjoint_self","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderBot α\na : α\n⊢ Iff (Disjoint a a) (Eq a Bot.bot)","decl":"@[simp]\ntheorem disjoint_self : Disjoint a a ↔ a = ⊥ :=\n  ⟨fun hd ↦ bot_unique <| hd le_rfl le_rfl, fun h _ ha _ ↦ ha.trans_eq h⟩\n\n/- TODO: Rename `Disjoint.eq_bot` to `Disjoint.inf_eq` and `Disjoint.eq_bot_of_self` to\n`Disjoint.eq_bot` -/\n"}
{"name":"Disjoint.eq_bot_of_self","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderBot α\na : α\na✝ : Disjoint a a\n⊢ Eq a Bot.bot","decl":"alias ⟨Disjoint.eq_bot_of_self, _⟩ := disjoint_self\n\n"}
{"name":"Disjoint.ne","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderBot α\na b : α\nha : Ne a Bot.bot\nhab : Disjoint a b\n⊢ Ne a b","decl":"theorem Disjoint.ne (ha : a ≠ ⊥) (hab : Disjoint a b) : a ≠ b :=\n  fun h ↦ ha <| disjoint_self.1 <| by rwa [← h] at hab\n\n"}
{"name":"Disjoint.eq_bot_of_le","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderBot α\na b : α\nhab : Disjoint a b\nh : LE.le a b\n⊢ Eq a Bot.bot","decl":"theorem Disjoint.eq_bot_of_le (hab : Disjoint a b) (h : a ≤ b) : a = ⊥ :=\n  eq_bot_iff.2 <| hab le_rfl h\n\n"}
{"name":"Disjoint.eq_bot_of_ge","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderBot α\na b : α\nhab : Disjoint a b\na✝ : LE.le b a\n⊢ Eq b Bot.bot","decl":"theorem Disjoint.eq_bot_of_ge (hab : Disjoint a b) : b ≤ a → b = ⊥ :=\n  hab.symm.eq_bot_of_le\n\n"}
{"name":"Disjoint.eq_iff","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderBot α\na b : α\nhab : Disjoint a b\n⊢ Iff (Eq a b) (And (Eq a Bot.bot) (Eq b Bot.bot))","decl":"lemma Disjoint.eq_iff (hab : Disjoint a b) : a = b ↔ a = ⊥ ∧ b = ⊥ := by aesop\n"}
{"name":"Disjoint.ne_iff","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderBot α\na b : α\nhab : Disjoint a b\n⊢ Iff (Ne a b) (Or (Ne a Bot.bot) (Ne b Bot.bot))","decl":"lemma Disjoint.ne_iff (hab : Disjoint a b) : a ≠ b ↔ a ≠ ⊥ ∨ b ≠ ⊥ :=\n  hab.eq_iff.not.trans not_and_or\n\n"}
{"name":"disjoint_of_le_iff_left_eq_bot","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderBot α\na b : α\nh : LE.le a b\n⊢ Iff (Disjoint a b) (Eq a Bot.bot)","decl":"theorem disjoint_of_le_iff_left_eq_bot (h : a ≤ b) :\n    Disjoint a b ↔ a = ⊥ :=\n  ⟨fun hd ↦ hd.eq_bot_of_le h, fun h ↦ h ▸ disjoint_bot_left⟩\n\n"}
{"name":"disjoint_top","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : BoundedOrder α\na : α\n⊢ Iff (Disjoint a Top.top) (Eq a Bot.bot)","decl":"@[simp]\ntheorem disjoint_top : Disjoint a ⊤ ↔ a = ⊥ :=\n  ⟨fun h ↦ bot_unique <| h le_rfl le_top, fun h _ ha _ ↦ ha.trans_eq h⟩\n\n"}
{"name":"top_disjoint","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : BoundedOrder α\na : α\n⊢ Iff (Disjoint Top.top a) (Eq a Bot.bot)","decl":"@[simp]\ntheorem top_disjoint : Disjoint ⊤ a ↔ a = ⊥ :=\n  ⟨fun h ↦ bot_unique <| h le_top le_rfl, fun h _ _ ha ↦ ha.trans_eq h⟩\n\n"}
{"name":"disjoint_iff_inf_le","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeInf α\ninst✝ : OrderBot α\na b : α\n⊢ Iff (Disjoint a b) (LE.le (Min.min a b) Bot.bot)","decl":"theorem disjoint_iff_inf_le : Disjoint a b ↔ a ⊓ b ≤ ⊥ :=\n  ⟨fun hd ↦ hd inf_le_left inf_le_right, fun h _ ha hb ↦ (le_inf ha hb).trans h⟩\n\n"}
{"name":"disjoint_iff","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeInf α\ninst✝ : OrderBot α\na b : α\n⊢ Iff (Disjoint a b) (Eq (Min.min a b) Bot.bot)","decl":"theorem disjoint_iff : Disjoint a b ↔ a ⊓ b = ⊥ :=\n  disjoint_iff_inf_le.trans le_bot_iff\n\n"}
{"name":"Disjoint.le_bot","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeInf α\ninst✝ : OrderBot α\na b : α\na✝ : Disjoint a b\n⊢ LE.le (Min.min a b) Bot.bot","decl":"theorem Disjoint.le_bot : Disjoint a b → a ⊓ b ≤ ⊥ :=\n  disjoint_iff_inf_le.mp\n\n"}
{"name":"Disjoint.eq_bot","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeInf α\ninst✝ : OrderBot α\na b : α\na✝ : Disjoint a b\n⊢ Eq (Min.min a b) Bot.bot","decl":"theorem Disjoint.eq_bot : Disjoint a b → a ⊓ b = ⊥ :=\n  bot_unique ∘ Disjoint.le_bot\n\n"}
{"name":"disjoint_assoc","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeInf α\ninst✝ : OrderBot α\na b c : α\n⊢ Iff (Disjoint (Min.min a b) c) (Disjoint a (Min.min b c))","decl":"theorem disjoint_assoc : Disjoint (a ⊓ b) c ↔ Disjoint a (b ⊓ c) := by\n  rw [disjoint_iff_inf_le, disjoint_iff_inf_le, inf_assoc]\n\n"}
{"name":"disjoint_left_comm","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeInf α\ninst✝ : OrderBot α\na b c : α\n⊢ Iff (Disjoint a (Min.min b c)) (Disjoint b (Min.min a c))","decl":"theorem disjoint_left_comm : Disjoint a (b ⊓ c) ↔ Disjoint b (a ⊓ c) := by\n  simp_rw [disjoint_iff_inf_le, inf_left_comm]\n\n"}
{"name":"disjoint_right_comm","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeInf α\ninst✝ : OrderBot α\na b c : α\n⊢ Iff (Disjoint (Min.min a b) c) (Disjoint (Min.min a c) b)","decl":"theorem disjoint_right_comm : Disjoint (a ⊓ b) c ↔ Disjoint (a ⊓ c) b := by\n  simp_rw [disjoint_iff_inf_le, inf_right_comm]\n\n"}
{"name":"Disjoint.inf_left","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeInf α\ninst✝ : OrderBot α\na b c : α\nh : Disjoint a b\n⊢ Disjoint (Min.min a c) b","decl":"theorem Disjoint.inf_left (h : Disjoint a b) : Disjoint (a ⊓ c) b :=\n  h.mono_left inf_le_left\n\n"}
{"name":"Disjoint.inf_left'","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeInf α\ninst✝ : OrderBot α\na b c : α\nh : Disjoint a b\n⊢ Disjoint (Min.min c a) b","decl":"theorem Disjoint.inf_left' (h : Disjoint a b) : Disjoint (c ⊓ a) b :=\n  h.mono_left inf_le_right\n\n"}
{"name":"Disjoint.inf_right","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeInf α\ninst✝ : OrderBot α\na b c : α\nh : Disjoint a b\n⊢ Disjoint a (Min.min b c)","decl":"theorem Disjoint.inf_right (h : Disjoint a b) : Disjoint a (b ⊓ c) :=\n  h.mono_right inf_le_left\n\n"}
{"name":"Disjoint.inf_right'","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeInf α\ninst✝ : OrderBot α\na b c : α\nh : Disjoint a b\n⊢ Disjoint a (Min.min c b)","decl":"theorem Disjoint.inf_right' (h : Disjoint a b) : Disjoint a (c ⊓ b) :=\n  h.mono_right inf_le_right\n\n"}
{"name":"Disjoint.of_disjoint_inf_of_le","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeInf α\ninst✝ : OrderBot α\na b c : α\nh : Disjoint (Min.min a b) c\nhle : LE.le a c\n⊢ Disjoint a b","decl":"theorem Disjoint.of_disjoint_inf_of_le (h : Disjoint (a ⊓ b) c) (hle : a ≤ c) : Disjoint a b :=\n  disjoint_iff.2 <| h.eq_bot_of_le <| inf_le_of_left_le hle\n\n"}
{"name":"Disjoint.of_disjoint_inf_of_le'","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeInf α\ninst✝ : OrderBot α\na b c : α\nh : Disjoint (Min.min a b) c\nhle : LE.le b c\n⊢ Disjoint a b","decl":"theorem Disjoint.of_disjoint_inf_of_le' (h : Disjoint (a ⊓ b) c) (hle : b ≤ c) : Disjoint a b :=\n  disjoint_iff.2 <| h.eq_bot_of_le <| inf_le_of_right_le hle\n\n"}
{"name":"Disjoint.right_lt_sup_of_left_ne_bot","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeSup α\ninst✝ : OrderBot α\na b : α\nh : Disjoint a b\nha : Ne a Bot.bot\n⊢ LT.lt b (Max.max a b)","decl":"theorem Disjoint.right_lt_sup_of_left_ne_bot [SemilatticeSup α] [OrderBot α] {a b : α}\n    (h : Disjoint a b) (ha : a ≠ ⊥) : b < a ⊔ b :=\n  le_sup_right.lt_of_ne fun eq ↦ ha (le_bot_iff.mp <| h le_rfl <| sup_eq_right.mp eq.symm)\n\n"}
{"name":"disjoint_sup_left","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : OrderBot α\na b c : α\n⊢ Iff (Disjoint (Max.max a b) c) (And (Disjoint a c) (Disjoint b c))","decl":"@[simp]\ntheorem disjoint_sup_left : Disjoint (a ⊔ b) c ↔ Disjoint a c ∧ Disjoint b c := by\n  simp only [disjoint_iff, inf_sup_right, sup_eq_bot_iff]\n\n"}
{"name":"disjoint_sup_right","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : OrderBot α\na b c : α\n⊢ Iff (Disjoint a (Max.max b c)) (And (Disjoint a b) (Disjoint a c))","decl":"@[simp]\ntheorem disjoint_sup_right : Disjoint a (b ⊔ c) ↔ Disjoint a b ∧ Disjoint a c := by\n  simp only [disjoint_iff, inf_sup_left, sup_eq_bot_iff]\n\n"}
{"name":"Disjoint.sup_left","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : OrderBot α\na b c : α\nha : Disjoint a c\nhb : Disjoint b c\n⊢ Disjoint (Max.max a b) c","decl":"theorem Disjoint.sup_left (ha : Disjoint a c) (hb : Disjoint b c) : Disjoint (a ⊔ b) c :=\n  disjoint_sup_left.2 ⟨ha, hb⟩\n\n"}
{"name":"Disjoint.sup_right","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : OrderBot α\na b c : α\nhb : Disjoint a b\nhc : Disjoint a c\n⊢ Disjoint a (Max.max b c)","decl":"theorem Disjoint.sup_right (hb : Disjoint a b) (hc : Disjoint a c) : Disjoint a (b ⊔ c) :=\n  disjoint_sup_right.2 ⟨hb, hc⟩\n\n"}
{"name":"Disjoint.left_le_of_le_sup_right","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : OrderBot α\na b c : α\nh : LE.le a (Max.max b c)\nhd : Disjoint a c\n⊢ LE.le a b","decl":"theorem Disjoint.left_le_of_le_sup_right (h : a ≤ b ⊔ c) (hd : Disjoint a c) : a ≤ b :=\n  le_of_inf_le_sup_le (le_trans hd.le_bot bot_le) <| sup_le h le_sup_right\n\n"}
{"name":"Disjoint.left_le_of_le_sup_left","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : OrderBot α\na b c : α\nh : LE.le a (Max.max c b)\nhd : Disjoint a c\n⊢ LE.le a b","decl":"theorem Disjoint.left_le_of_le_sup_left (h : a ≤ c ⊔ b) (hd : Disjoint a c) : a ≤ b :=\n  hd.left_le_of_le_sup_right <| by rwa [sup_comm]\n\n"}
{"name":"codisjoint_comm","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderTop α\na b : α\n⊢ Iff (Codisjoint a b) (Codisjoint b a)","decl":"theorem codisjoint_comm : Codisjoint a b ↔ Codisjoint b a :=\n  forall_congr' fun _ ↦ forall_swap\n\n"}
{"name":"Codisjoint_comm","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderTop α\na b : α\n⊢ Iff (Codisjoint a b) (Codisjoint b a)","decl":"@[deprecated (since := \"2024-11-23\")] alias Codisjoint_comm := codisjoint_comm\n\n"}
{"name":"Codisjoint.symm","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderTop α\na b : α\na✝ : Codisjoint a b\n⊢ Codisjoint b a","decl":"@[symm]\ntheorem Codisjoint.symm ⦃a b : α⦄ : Codisjoint a b → Codisjoint b a :=\n  codisjoint_comm.1\n\n"}
{"name":"symmetric_codisjoint","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderTop α\n⊢ Symmetric Codisjoint","decl":"theorem symmetric_codisjoint : Symmetric (Codisjoint : α → α → Prop) :=\n  Codisjoint.symm\n\n"}
{"name":"codisjoint_top_left","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderTop α\na : α\n⊢ Codisjoint Top.top a","decl":"@[simp]\ntheorem codisjoint_top_left : Codisjoint ⊤ a := fun _ htop _ ↦ htop\n\n"}
{"name":"codisjoint_top_right","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderTop α\na : α\n⊢ Codisjoint a Top.top","decl":"@[simp]\ntheorem codisjoint_top_right : Codisjoint a ⊤ := fun _ _ htop ↦ htop\n\n"}
{"name":"Codisjoint.mono","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderTop α\na b c d : α\nh₁ : LE.le a b\nh₂ : LE.le c d\na✝ : Codisjoint a c\n⊢ Codisjoint b d","decl":"theorem Codisjoint.mono (h₁ : a ≤ b) (h₂ : c ≤ d) : Codisjoint a c → Codisjoint b d :=\n  fun h _ ha hc ↦ h (h₁.trans ha) (h₂.trans hc)\n\n"}
{"name":"Codisjoint.mono_left","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderTop α\na b c : α\nh : LE.le a b\na✝ : Codisjoint a c\n⊢ Codisjoint b c","decl":"theorem Codisjoint.mono_left (h : a ≤ b) : Codisjoint a c → Codisjoint b c :=\n  Codisjoint.mono h le_rfl\n\n"}
{"name":"Codisjoint.mono_right","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderTop α\na b c : α\na✝¹ : LE.le b c\na✝ : Codisjoint a b\n⊢ Codisjoint a c","decl":"theorem Codisjoint.mono_right : b ≤ c → Codisjoint a b → Codisjoint a c :=\n  Codisjoint.mono le_rfl\n\n"}
{"name":"codisjoint_self","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderTop α\na : α\n⊢ Iff (Codisjoint a a) (Eq a Top.top)","decl":"@[simp]\ntheorem codisjoint_self : Codisjoint a a ↔ a = ⊤ :=\n  ⟨fun hd ↦ top_unique <| hd le_rfl le_rfl, fun h _ ha _ ↦ h.symm.trans_le ha⟩\n\n/- TODO: Rename `Codisjoint.eq_top` to `Codisjoint.sup_eq` and `Codisjoint.eq_top_of_self` to\n`Codisjoint.eq_top` -/\n"}
{"name":"Codisjoint.eq_top_of_self","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderTop α\na : α\na✝ : Codisjoint a a\n⊢ Eq a Top.top","decl":"alias ⟨Codisjoint.eq_top_of_self, _⟩ := codisjoint_self\n\n"}
{"name":"Codisjoint.ne","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderTop α\na b : α\nha : Ne a Top.top\nhab : Codisjoint a b\n⊢ Ne a b","decl":"theorem Codisjoint.ne (ha : a ≠ ⊤) (hab : Codisjoint a b) : a ≠ b :=\n  fun h ↦ ha <| codisjoint_self.1 <| by rwa [← h] at hab\n\n"}
{"name":"Codisjoint.eq_top_of_le","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderTop α\na b : α\nhab : Codisjoint a b\nh : LE.le b a\n⊢ Eq a Top.top","decl":"theorem Codisjoint.eq_top_of_le (hab : Codisjoint a b) (h : b ≤ a) : a = ⊤ :=\n  eq_top_iff.2 <| hab le_rfl h\n\n"}
{"name":"Codisjoint.eq_top_of_ge","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderTop α\na b : α\nhab : Codisjoint a b\na✝ : LE.le a b\n⊢ Eq b Top.top","decl":"theorem Codisjoint.eq_top_of_ge (hab : Codisjoint a b) : a ≤ b → b = ⊤ :=\n  hab.symm.eq_top_of_le\n\n"}
{"name":"Codisjoint.eq_iff","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderTop α\na b : α\nhab : Codisjoint a b\n⊢ Iff (Eq a b) (And (Eq a Top.top) (Eq b Top.top))","decl":"lemma Codisjoint.eq_iff (hab : Codisjoint a b) : a = b ↔ a = ⊤ ∧ b = ⊤ := by aesop\n"}
{"name":"Codisjoint.ne_iff","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : OrderTop α\na b : α\nhab : Codisjoint a b\n⊢ Iff (Ne a b) (Or (Ne a Top.top) (Ne b Top.top))","decl":"lemma Codisjoint.ne_iff (hab : Codisjoint a b) : a ≠ b ↔ a ≠ ⊤ ∨ b ≠ ⊤ :=\n  hab.eq_iff.not.trans not_and_or\n\n"}
{"name":"codisjoint_bot","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : BoundedOrder α\na : α\n⊢ Iff (Codisjoint a Bot.bot) (Eq a Top.top)","decl":"@[simp]\ntheorem codisjoint_bot : Codisjoint a ⊥ ↔ a = ⊤ :=\n  ⟨fun h ↦ top_unique <| h le_rfl bot_le, fun h _ ha _ ↦ h.symm.trans_le ha⟩\n\n"}
{"name":"bot_codisjoint","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : BoundedOrder α\na : α\n⊢ Iff (Codisjoint Bot.bot a) (Eq a Top.top)","decl":"@[simp]\ntheorem bot_codisjoint : Codisjoint ⊥ a ↔ a = ⊤ :=\n  ⟨fun h ↦ top_unique <| h bot_le le_rfl, fun h _ _ ha ↦ h.symm.trans_le ha⟩\n\n"}
{"name":"Codisjoint.ne_bot_of_ne_top","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : BoundedOrder α\na b : α\nh : Codisjoint a b\nha : Ne a Top.top\n⊢ Ne b Bot.bot","decl":"lemma Codisjoint.ne_bot_of_ne_top (h : Codisjoint a b) (ha : a ≠ ⊤) : b ≠ ⊥ := by\n  rintro rfl; exact ha <| by simpa using h\n\n"}
{"name":"Codisjoint.ne_bot_of_ne_top'","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : BoundedOrder α\na b : α\nh : Codisjoint a b\nhb : Ne b Top.top\n⊢ Ne a Bot.bot","decl":"lemma Codisjoint.ne_bot_of_ne_top' (h : Codisjoint a b) (hb : b ≠ ⊤) : a ≠ ⊥ := by\n  rintro rfl; exact hb <| by simpa using h\n\n"}
{"name":"codisjoint_iff_le_sup","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeSup α\ninst✝ : OrderTop α\na b : α\n⊢ Iff (Codisjoint a b) (LE.le Top.top (Max.max a b))","decl":"theorem codisjoint_iff_le_sup : Codisjoint a b ↔ ⊤ ≤ a ⊔ b :=\n  @disjoint_iff_inf_le αᵒᵈ _ _ _ _\n\n"}
{"name":"codisjoint_iff","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeSup α\ninst✝ : OrderTop α\na b : α\n⊢ Iff (Codisjoint a b) (Eq (Max.max a b) Top.top)","decl":"theorem codisjoint_iff : Codisjoint a b ↔ a ⊔ b = ⊤ :=\n  @disjoint_iff αᵒᵈ _ _ _ _\n\n"}
{"name":"Codisjoint.top_le","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeSup α\ninst✝ : OrderTop α\na b : α\na✝ : Codisjoint a b\n⊢ LE.le Top.top (Max.max a b)","decl":"theorem Codisjoint.top_le : Codisjoint a b → ⊤ ≤ a ⊔ b :=\n  @Disjoint.le_bot αᵒᵈ _ _ _ _\n\n"}
{"name":"Codisjoint.eq_top","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeSup α\ninst✝ : OrderTop α\na b : α\na✝ : Codisjoint a b\n⊢ Eq (Max.max a b) Top.top","decl":"theorem Codisjoint.eq_top : Codisjoint a b → a ⊔ b = ⊤ :=\n  @Disjoint.eq_bot αᵒᵈ _ _ _ _\n\n"}
{"name":"codisjoint_assoc","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeSup α\ninst✝ : OrderTop α\na b c : α\n⊢ Iff (Codisjoint (Max.max a b) c) (Codisjoint a (Max.max b c))","decl":"theorem codisjoint_assoc : Codisjoint (a ⊔ b) c ↔ Codisjoint a (b ⊔ c) :=\n  @disjoint_assoc αᵒᵈ _ _ _ _ _\n\n"}
{"name":"codisjoint_left_comm","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeSup α\ninst✝ : OrderTop α\na b c : α\n⊢ Iff (Codisjoint a (Max.max b c)) (Codisjoint b (Max.max a c))","decl":"theorem codisjoint_left_comm : Codisjoint a (b ⊔ c) ↔ Codisjoint b (a ⊔ c) :=\n  @disjoint_left_comm αᵒᵈ _ _ _ _ _\n\n"}
{"name":"codisjoint_right_comm","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeSup α\ninst✝ : OrderTop α\na b c : α\n⊢ Iff (Codisjoint (Max.max a b) c) (Codisjoint (Max.max a c) b)","decl":"theorem codisjoint_right_comm : Codisjoint (a ⊔ b) c ↔ Codisjoint (a ⊔ c) b :=\n  @disjoint_right_comm αᵒᵈ _ _ _ _ _\n\n"}
{"name":"Codisjoint.sup_left","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeSup α\ninst✝ : OrderTop α\na b c : α\nh : Codisjoint a b\n⊢ Codisjoint (Max.max a c) b","decl":"theorem Codisjoint.sup_left (h : Codisjoint a b) : Codisjoint (a ⊔ c) b :=\n  h.mono_left le_sup_left\n\n"}
{"name":"Codisjoint.sup_left'","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeSup α\ninst✝ : OrderTop α\na b c : α\nh : Codisjoint a b\n⊢ Codisjoint (Max.max c a) b","decl":"theorem Codisjoint.sup_left' (h : Codisjoint a b) : Codisjoint (c ⊔ a) b :=\n  h.mono_left le_sup_right\n\n"}
{"name":"Codisjoint.sup_right","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeSup α\ninst✝ : OrderTop α\na b c : α\nh : Codisjoint a b\n⊢ Codisjoint a (Max.max b c)","decl":"theorem Codisjoint.sup_right (h : Codisjoint a b) : Codisjoint a (b ⊔ c) :=\n  h.mono_right le_sup_left\n\n"}
{"name":"Codisjoint.sup_right'","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeSup α\ninst✝ : OrderTop α\na b c : α\nh : Codisjoint a b\n⊢ Codisjoint a (Max.max c b)","decl":"theorem Codisjoint.sup_right' (h : Codisjoint a b) : Codisjoint a (c ⊔ b) :=\n  h.mono_right le_sup_right\n\n"}
{"name":"Codisjoint.of_codisjoint_sup_of_le","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeSup α\ninst✝ : OrderTop α\na b c : α\nh : Codisjoint (Max.max a b) c\nhle : LE.le c a\n⊢ Codisjoint a b","decl":"theorem Codisjoint.of_codisjoint_sup_of_le (h : Codisjoint (a ⊔ b) c) (hle : c ≤ a) :\n    Codisjoint a b :=\n  @Disjoint.of_disjoint_inf_of_le αᵒᵈ _ _ _ _ _ h hle\n\n"}
{"name":"Codisjoint.of_codisjoint_sup_of_le'","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeSup α\ninst✝ : OrderTop α\na b c : α\nh : Codisjoint (Max.max a b) c\nhle : LE.le c b\n⊢ Codisjoint a b","decl":"theorem Codisjoint.of_codisjoint_sup_of_le' (h : Codisjoint (a ⊔ b) c) (hle : c ≤ b) :\n    Codisjoint a b :=\n  @Disjoint.of_disjoint_inf_of_le' αᵒᵈ _ _ _ _ _ h hle\n\n"}
{"name":"codisjoint_inf_left","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : OrderTop α\na b c : α\n⊢ Iff (Codisjoint (Min.min a b) c) (And (Codisjoint a c) (Codisjoint b c))","decl":"@[simp]\ntheorem codisjoint_inf_left : Codisjoint (a ⊓ b) c ↔ Codisjoint a c ∧ Codisjoint b c := by\n  simp only [codisjoint_iff, sup_inf_right, inf_eq_top_iff]\n\n"}
{"name":"codisjoint_inf_right","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : OrderTop α\na b c : α\n⊢ Iff (Codisjoint a (Min.min b c)) (And (Codisjoint a b) (Codisjoint a c))","decl":"@[simp]\ntheorem codisjoint_inf_right : Codisjoint a (b ⊓ c) ↔ Codisjoint a b ∧ Codisjoint a c := by\n  simp only [codisjoint_iff, sup_inf_left, inf_eq_top_iff]\n\n"}
{"name":"Codisjoint.inf_left","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : OrderTop α\na b c : α\nha : Codisjoint a c\nhb : Codisjoint b c\n⊢ Codisjoint (Min.min a b) c","decl":"theorem Codisjoint.inf_left (ha : Codisjoint a c) (hb : Codisjoint b c) : Codisjoint (a ⊓ b) c :=\n  codisjoint_inf_left.2 ⟨ha, hb⟩\n\n"}
{"name":"Codisjoint.inf_right","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : OrderTop α\na b c : α\nhb : Codisjoint a b\nhc : Codisjoint a c\n⊢ Codisjoint a (Min.min b c)","decl":"theorem Codisjoint.inf_right (hb : Codisjoint a b) (hc : Codisjoint a c) : Codisjoint a (b ⊓ c) :=\n  codisjoint_inf_right.2 ⟨hb, hc⟩\n\n"}
{"name":"Codisjoint.left_le_of_le_inf_right","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : OrderTop α\na b c : α\nh : LE.le (Min.min a b) c\nhd : Codisjoint b c\n⊢ LE.le a c","decl":"theorem Codisjoint.left_le_of_le_inf_right (h : a ⊓ b ≤ c) (hd : Codisjoint b c) : a ≤ c :=\n  @Disjoint.left_le_of_le_sup_right αᵒᵈ _ _ _ _ _ h hd.symm\n\n"}
{"name":"Codisjoint.left_le_of_le_inf_left","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : OrderTop α\na b c : α\nh : LE.le (Min.min b a) c\nhd : Codisjoint b c\n⊢ LE.le a c","decl":"theorem Codisjoint.left_le_of_le_inf_left (h : b ⊓ a ≤ c) (hd : Codisjoint b c) : a ≤ c :=\n  hd.left_le_of_le_inf_right <| by rwa [inf_comm]\n\n"}
{"name":"Disjoint.dual","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeInf α\ninst✝ : OrderBot α\na b : α\na✝ : Disjoint a b\n⊢ Codisjoint (OrderDual.toDual a) (OrderDual.toDual b)","decl":"theorem Disjoint.dual [SemilatticeInf α] [OrderBot α] {a b : α} :\n    Disjoint a b → Codisjoint (toDual a) (toDual b) :=\n  id\n\n"}
{"name":"Codisjoint.dual","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeSup α\ninst✝ : OrderTop α\na b : α\na✝ : Codisjoint a b\n⊢ Disjoint (OrderDual.toDual a) (OrderDual.toDual b)","decl":"theorem Codisjoint.dual [SemilatticeSup α] [OrderTop α] {a b : α} :\n    Codisjoint a b → Disjoint (toDual a) (toDual b) :=\n  id\n\n"}
{"name":"disjoint_toDual_iff","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeSup α\ninst✝ : OrderTop α\na b : α\n⊢ Iff (Disjoint (OrderDual.toDual a) (OrderDual.toDual b)) (Codisjoint a b)","decl":"@[simp]\ntheorem disjoint_toDual_iff [SemilatticeSup α] [OrderTop α] {a b : α} :\n    Disjoint (toDual a) (toDual b) ↔ Codisjoint a b :=\n  Iff.rfl\n\n"}
{"name":"disjoint_ofDual_iff","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeInf α\ninst✝ : OrderBot α\na b : OrderDual α\n⊢ Iff (Disjoint (OrderDual.ofDual a) (OrderDual.ofDual b)) (Codisjoint a b)","decl":"@[simp]\ntheorem disjoint_ofDual_iff [SemilatticeInf α] [OrderBot α] {a b : αᵒᵈ} :\n    Disjoint (ofDual a) (ofDual b) ↔ Codisjoint a b :=\n  Iff.rfl\n\n"}
{"name":"codisjoint_toDual_iff","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeInf α\ninst✝ : OrderBot α\na b : α\n⊢ Iff (Codisjoint (OrderDual.toDual a) (OrderDual.toDual b)) (Disjoint a b)","decl":"@[simp]\ntheorem codisjoint_toDual_iff [SemilatticeInf α] [OrderBot α] {a b : α} :\n    Codisjoint (toDual a) (toDual b) ↔ Disjoint a b :=\n  Iff.rfl\n\n"}
{"name":"codisjoint_ofDual_iff","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : SemilatticeSup α\ninst✝ : OrderTop α\na b : OrderDual α\n⊢ Iff (Codisjoint (OrderDual.ofDual a) (OrderDual.ofDual b)) (Disjoint a b)","decl":"@[simp]\ntheorem codisjoint_ofDual_iff [SemilatticeSup α] [OrderTop α] {a b : αᵒᵈ} :\n    Codisjoint (ofDual a) (ofDual b) ↔ Disjoint a b :=\n  Iff.rfl\n\n"}
{"name":"Disjoint.le_of_codisjoint","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : BoundedOrder α\na b c : α\nhab : Disjoint a b\nhbc : Codisjoint b c\n⊢ LE.le a c","decl":"theorem Disjoint.le_of_codisjoint (hab : Disjoint a b) (hbc : Codisjoint b c) : a ≤ c := by\n  rw [← @inf_top_eq _ _ _ a, ← @bot_sup_eq _ _ _ c, ← hab.eq_bot, ← hbc.eq_top, sup_inf_right]\n  exact inf_le_inf_right _ le_sup_left\n\n"}
{"name":"IsCompl.disjoint","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : BoundedOrder α\nx y : α\nself : IsCompl x y\n⊢ Disjoint x y","decl":"/-- Two elements `x` and `y` are complements of each other if `x ⊔ y = ⊤` and `x ⊓ y = ⊥`. -/\nstructure IsCompl [PartialOrder α] [BoundedOrder α] (x y : α) : Prop where\n  /-- If `x` and `y` are to be complementary in an order, they should be disjoint. -/\n  protected disjoint : Disjoint x y\n  /-- If `x` and `y` are to be complementary in an order, they should be codisjoint. -/\n  protected codisjoint : Codisjoint x y\n\n"}
{"name":"IsCompl.codisjoint","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : BoundedOrder α\nx y : α\nself : IsCompl x y\n⊢ Codisjoint x y","decl":"/-- Two elements `x` and `y` are complements of each other if `x ⊔ y = ⊤` and `x ⊓ y = ⊥`. -/\nstructure IsCompl [PartialOrder α] [BoundedOrder α] (x y : α) : Prop where\n  /-- If `x` and `y` are to be complementary in an order, they should be disjoint. -/\n  protected disjoint : Disjoint x y\n  /-- If `x` and `y` are to be complementary in an order, they should be codisjoint. -/\n  protected codisjoint : Codisjoint x y\n\n"}
{"name":"isCompl_iff","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : BoundedOrder α\na b : α\n⊢ Iff (IsCompl a b) (And (Disjoint a b) (Codisjoint a b))","decl":"theorem isCompl_iff [PartialOrder α] [BoundedOrder α] {a b : α} :\n    IsCompl a b ↔ Disjoint a b ∧ Codisjoint a b :=\n  ⟨fun h ↦ ⟨h.1, h.2⟩, fun h ↦ ⟨h.1, h.2⟩⟩\n\n"}
{"name":"IsCompl.symm","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : BoundedOrder α\nx y : α\nh : IsCompl x y\n⊢ IsCompl y x","decl":"@[symm]\nprotected theorem symm (h : IsCompl x y) : IsCompl y x :=\n  ⟨h.1.symm, h.2.symm⟩\n\n"}
{"name":"isCompl_comm","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : BoundedOrder α\nx y : α\n⊢ Iff (IsCompl x y) (IsCompl y x)","decl":"lemma _root_.isCompl_comm : IsCompl x y ↔ IsCompl y x := ⟨IsCompl.symm, IsCompl.symm⟩\n\n"}
{"name":"IsCompl.dual","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : BoundedOrder α\nx y : α\nh : IsCompl x y\n⊢ IsCompl (OrderDual.toDual x) (OrderDual.toDual y)","decl":"theorem dual (h : IsCompl x y) : IsCompl (toDual x) (toDual y) :=\n  ⟨h.2, h.1⟩\n\n"}
{"name":"IsCompl.ofDual","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : PartialOrder α\ninst✝ : BoundedOrder α\na b : OrderDual α\nh : IsCompl a b\n⊢ IsCompl (OrderDual.ofDual a) (OrderDual.ofDual b)","decl":"theorem ofDual {a b : αᵒᵈ} (h : IsCompl a b) : IsCompl (ofDual a) (ofDual b) :=\n  ⟨h.2, h.1⟩\n\n"}
{"name":"IsCompl.of_le","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : Lattice α\ninst✝ : BoundedOrder α\nx y : α\nh₁ : LE.le (Min.min x y) Bot.bot\nh₂ : LE.le Top.top (Max.max x y)\n⊢ IsCompl x y","decl":"theorem of_le (h₁ : x ⊓ y ≤ ⊥) (h₂ : ⊤ ≤ x ⊔ y) : IsCompl x y :=\n  ⟨disjoint_iff_inf_le.mpr h₁, codisjoint_iff_le_sup.mpr h₂⟩\n\n"}
{"name":"IsCompl.of_eq","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : Lattice α\ninst✝ : BoundedOrder α\nx y : α\nh₁ : Eq (Min.min x y) Bot.bot\nh₂ : Eq (Max.max x y) Top.top\n⊢ IsCompl x y","decl":"theorem of_eq (h₁ : x ⊓ y = ⊥) (h₂ : x ⊔ y = ⊤) : IsCompl x y :=\n  ⟨disjoint_iff.mpr h₁, codisjoint_iff.mpr h₂⟩\n\n"}
{"name":"IsCompl.inf_eq_bot","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : Lattice α\ninst✝ : BoundedOrder α\nx y : α\nh : IsCompl x y\n⊢ Eq (Min.min x y) Bot.bot","decl":"theorem inf_eq_bot (h : IsCompl x y) : x ⊓ y = ⊥ :=\n  h.disjoint.eq_bot\n\n"}
{"name":"IsCompl.sup_eq_top","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : Lattice α\ninst✝ : BoundedOrder α\nx y : α\nh : IsCompl x y\n⊢ Eq (Max.max x y) Top.top","decl":"theorem sup_eq_top (h : IsCompl x y) : x ⊔ y = ⊤ :=\n  h.codisjoint.eq_top\n\n"}
{"name":"IsCompl.inf_left_le_of_le_sup_right","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : BoundedOrder α\na b x y : α\nh : IsCompl x y\nhle : LE.le a (Max.max b y)\n⊢ LE.le (Min.min a x) b","decl":"theorem inf_left_le_of_le_sup_right (h : IsCompl x y) (hle : a ≤ b ⊔ y) : a ⊓ x ≤ b :=\n  calc\n    a ⊓ x ≤ (b ⊔ y) ⊓ x := inf_le_inf hle le_rfl\n    _ = b ⊓ x ⊔ y ⊓ x := inf_sup_right _ _ _\n    _ = b ⊓ x := by rw [h.symm.inf_eq_bot, sup_bot_eq]\n    _ ≤ b := inf_le_left\n\n"}
{"name":"IsCompl.le_sup_right_iff_inf_left_le","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : BoundedOrder α\nx y a b : α\nh : IsCompl x y\n⊢ Iff (LE.le a (Max.max b y)) (LE.le (Min.min a x) b)","decl":"theorem le_sup_right_iff_inf_left_le {a b} (h : IsCompl x y) : a ≤ b ⊔ y ↔ a ⊓ x ≤ b :=\n  ⟨h.inf_left_le_of_le_sup_right, h.symm.dual.inf_left_le_of_le_sup_right⟩\n\n"}
{"name":"IsCompl.inf_left_eq_bot_iff","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : BoundedOrder α\nx y z : α\nh : IsCompl y z\n⊢ Iff (Eq (Min.min x y) Bot.bot) (LE.le x z)","decl":"theorem inf_left_eq_bot_iff (h : IsCompl y z) : x ⊓ y = ⊥ ↔ x ≤ z := by\n  rw [← le_bot_iff, ← h.le_sup_right_iff_inf_left_le, bot_sup_eq]\n\n"}
{"name":"IsCompl.inf_right_eq_bot_iff","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : BoundedOrder α\nx y z : α\nh : IsCompl y z\n⊢ Iff (Eq (Min.min x z) Bot.bot) (LE.le x y)","decl":"theorem inf_right_eq_bot_iff (h : IsCompl y z) : x ⊓ z = ⊥ ↔ x ≤ y :=\n  h.symm.inf_left_eq_bot_iff\n\n"}
{"name":"IsCompl.disjoint_left_iff","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : BoundedOrder α\nx y z : α\nh : IsCompl y z\n⊢ Iff (Disjoint x y) (LE.le x z)","decl":"theorem disjoint_left_iff (h : IsCompl y z) : Disjoint x y ↔ x ≤ z := by\n  rw [disjoint_iff]\n  exact h.inf_left_eq_bot_iff\n\n"}
{"name":"IsCompl.disjoint_right_iff","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : BoundedOrder α\nx y z : α\nh : IsCompl y z\n⊢ Iff (Disjoint x z) (LE.le x y)","decl":"theorem disjoint_right_iff (h : IsCompl y z) : Disjoint x z ↔ x ≤ y :=\n  h.symm.disjoint_left_iff\n\n"}
{"name":"IsCompl.le_left_iff","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : BoundedOrder α\nx y z : α\nh : IsCompl x y\n⊢ Iff (LE.le z x) (Disjoint z y)","decl":"theorem le_left_iff (h : IsCompl x y) : z ≤ x ↔ Disjoint z y :=\n  h.disjoint_right_iff.symm\n\n"}
{"name":"IsCompl.le_right_iff","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : BoundedOrder α\nx y z : α\nh : IsCompl x y\n⊢ Iff (LE.le z y) (Disjoint z x)","decl":"theorem le_right_iff (h : IsCompl x y) : z ≤ y ↔ Disjoint z x :=\n  h.symm.le_left_iff\n\n"}
{"name":"IsCompl.left_le_iff","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : BoundedOrder α\nx y z : α\nh : IsCompl x y\n⊢ Iff (LE.le x z) (Codisjoint z y)","decl":"theorem left_le_iff (h : IsCompl x y) : x ≤ z ↔ Codisjoint z y :=\n  h.dual.le_left_iff\n\n"}
{"name":"IsCompl.right_le_iff","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : BoundedOrder α\nx y z : α\nh : IsCompl x y\n⊢ Iff (LE.le y z) (Codisjoint z x)","decl":"theorem right_le_iff (h : IsCompl x y) : y ≤ z ↔ Codisjoint z x :=\n  h.symm.left_le_iff\n\n"}
{"name":"IsCompl.Antitone","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : BoundedOrder α\nx y x' y' : α\nh : IsCompl x y\nh' : IsCompl x' y'\nhx : LE.le x x'\n⊢ LE.le y' y","decl":"protected theorem Antitone {x' y'} (h : IsCompl x y) (h' : IsCompl x' y') (hx : x ≤ x') : y' ≤ y :=\n  h'.right_le_iff.2 <| h.symm.codisjoint.mono_right hx\n\n"}
{"name":"IsCompl.right_unique","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : BoundedOrder α\nx y z : α\nhxy : IsCompl x y\nhxz : IsCompl x z\n⊢ Eq y z","decl":"theorem right_unique (hxy : IsCompl x y) (hxz : IsCompl x z) : y = z :=\n  le_antisymm (hxz.Antitone hxy <| le_refl x) (hxy.Antitone hxz <| le_refl x)\n\n"}
{"name":"IsCompl.left_unique","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : BoundedOrder α\nx y z : α\nhxz : IsCompl x z\nhyz : IsCompl y z\n⊢ Eq x y","decl":"theorem left_unique (hxz : IsCompl x z) (hyz : IsCompl y z) : x = y :=\n  hxz.symm.right_unique hyz.symm\n\n"}
{"name":"IsCompl.sup_inf","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : BoundedOrder α\nx y x' y' : α\nh : IsCompl x y\nh' : IsCompl x' y'\n⊢ IsCompl (Max.max x x') (Min.min y y')","decl":"theorem sup_inf {x' y'} (h : IsCompl x y) (h' : IsCompl x' y') : IsCompl (x ⊔ x') (y ⊓ y') :=\n  of_eq\n    (by rw [inf_sup_right, ← inf_assoc, h.inf_eq_bot, bot_inf_eq, bot_sup_eq, inf_left_comm,\n      h'.inf_eq_bot, inf_bot_eq])\n    (by rw [sup_inf_left, sup_comm x, sup_assoc, h.sup_eq_top, sup_top_eq, top_inf_eq,\n      sup_assoc, sup_left_comm, h'.sup_eq_top, sup_top_eq])\n\n"}
{"name":"IsCompl.inf_sup","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : BoundedOrder α\nx y x' y' : α\nh : IsCompl x y\nh' : IsCompl x' y'\n⊢ IsCompl (Min.min x x') (Max.max y y')","decl":"theorem inf_sup {x' y'} (h : IsCompl x y) (h' : IsCompl x' y') : IsCompl (x ⊓ x') (y ⊔ y') :=\n  (h.symm.sup_inf h'.symm).symm\n\n"}
{"name":"Prod.disjoint_iff","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝³ : PartialOrder α\ninst✝² : PartialOrder β\ninst✝¹ : OrderBot α\ninst✝ : OrderBot β\nx y : Prod α β\n⊢ Iff (Disjoint x y) (And (Disjoint x.fst y.fst) (Disjoint x.snd y.snd))","decl":"protected theorem disjoint_iff [OrderBot α] [OrderBot β] {x y : α × β} :\n    Disjoint x y ↔ Disjoint x.1 y.1 ∧ Disjoint x.2 y.2 := by\n  constructor\n  · intro h\n    refine ⟨fun a hx hy ↦ (@h (a, ⊥) ⟨hx, ?_⟩ ⟨hy, ?_⟩).1,\n      fun b hx hy ↦ (@h (⊥, b) ⟨?_, hx⟩ ⟨?_, hy⟩).2⟩\n    all_goals exact bot_le\n  · rintro ⟨ha, hb⟩ z hza hzb\n    exact ⟨ha hza.1 hzb.1, hb hza.2 hzb.2⟩\n\n"}
{"name":"Prod.codisjoint_iff","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝³ : PartialOrder α\ninst✝² : PartialOrder β\ninst✝¹ : OrderTop α\ninst✝ : OrderTop β\nx y : Prod α β\n⊢ Iff (Codisjoint x y) (And (Codisjoint x.fst y.fst) (Codisjoint x.snd y.snd))","decl":"protected theorem codisjoint_iff [OrderTop α] [OrderTop β] {x y : α × β} :\n    Codisjoint x y ↔ Codisjoint x.1 y.1 ∧ Codisjoint x.2 y.2 :=\n  @Prod.disjoint_iff αᵒᵈ βᵒᵈ _ _ _ _ _ _\n\n"}
{"name":"Prod.isCompl_iff","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝³ : PartialOrder α\ninst✝² : PartialOrder β\ninst✝¹ : BoundedOrder α\ninst✝ : BoundedOrder β\nx y : Prod α β\n⊢ Iff (IsCompl x y) (And (IsCompl x.fst y.fst) (IsCompl x.snd y.snd))","decl":"protected theorem isCompl_iff [BoundedOrder α] [BoundedOrder β] {x y : α × β} :\n    IsCompl x y ↔ IsCompl x.1 y.1 ∧ IsCompl x.2 y.2 := by\n  simp_rw [isCompl_iff, Prod.disjoint_iff, Prod.codisjoint_iff, and_and_and_comm]\n\n"}
{"name":"isCompl_toDual_iff","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : Lattice α\ninst✝ : BoundedOrder α\na b : α\n⊢ Iff (IsCompl (OrderDual.toDual a) (OrderDual.toDual b)) (IsCompl a b)","decl":"@[simp]\ntheorem isCompl_toDual_iff : IsCompl (toDual a) (toDual b) ↔ IsCompl a b :=\n  ⟨IsCompl.ofDual, IsCompl.dual⟩\n\n"}
{"name":"isCompl_ofDual_iff","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : Lattice α\ninst✝ : BoundedOrder α\na b : OrderDual α\n⊢ Iff (IsCompl (OrderDual.ofDual a) (OrderDual.ofDual b)) (IsCompl a b)","decl":"@[simp]\ntheorem isCompl_ofDual_iff {a b : αᵒᵈ} : IsCompl (ofDual a) (ofDual b) ↔ IsCompl a b :=\n  ⟨IsCompl.dual, IsCompl.ofDual⟩\n\n"}
{"name":"isCompl_bot_top","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : Lattice α\ninst✝ : BoundedOrder α\n⊢ IsCompl Bot.bot Top.top","decl":"theorem isCompl_bot_top : IsCompl (⊥ : α) ⊤ :=\n  IsCompl.of_eq (bot_inf_eq _) (sup_top_eq _)\n\n"}
{"name":"isCompl_top_bot","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : Lattice α\ninst✝ : BoundedOrder α\n⊢ IsCompl Top.top Bot.bot","decl":"theorem isCompl_top_bot : IsCompl (⊤ : α) ⊥ :=\n  IsCompl.of_eq (inf_bot_eq _) (top_sup_eq _)\n\n"}
{"name":"eq_top_of_isCompl_bot","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : Lattice α\ninst✝ : BoundedOrder α\nx : α\nh : IsCompl x Bot.bot\n⊢ Eq x Top.top","decl":"theorem eq_top_of_isCompl_bot (h : IsCompl x ⊥) : x = ⊤ := by rw [← sup_bot_eq x, h.sup_eq_top]\n\n"}
{"name":"eq_top_of_bot_isCompl","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : Lattice α\ninst✝ : BoundedOrder α\nx : α\nh : IsCompl Bot.bot x\n⊢ Eq x Top.top","decl":"theorem eq_top_of_bot_isCompl (h : IsCompl ⊥ x) : x = ⊤ :=\n  eq_top_of_isCompl_bot h.symm\n\n"}
{"name":"eq_bot_of_isCompl_top","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : Lattice α\ninst✝ : BoundedOrder α\nx : α\nh : IsCompl x Top.top\n⊢ Eq x Bot.bot","decl":"theorem eq_bot_of_isCompl_top (h : IsCompl x ⊤) : x = ⊥ :=\n  eq_top_of_isCompl_bot h.dual\n\n"}
{"name":"eq_bot_of_top_isCompl","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : Lattice α\ninst✝ : BoundedOrder α\nx : α\nh : IsCompl Top.top x\n⊢ Eq x Bot.bot","decl":"theorem eq_bot_of_top_isCompl (h : IsCompl ⊤ x) : x = ⊥ :=\n  eq_top_of_bot_isCompl h.dual\n\n"}
{"name":"isComplemented_bot","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : Lattice α\ninst✝ : BoundedOrder α\n⊢ IsComplemented Bot.bot","decl":"theorem isComplemented_bot : IsComplemented (⊥ : α) :=\n  ⟨⊤, isCompl_bot_top⟩\n\n"}
{"name":"isComplemented_top","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : Lattice α\ninst✝ : BoundedOrder α\n⊢ IsComplemented Top.top","decl":"theorem isComplemented_top : IsComplemented (⊤ : α) :=\n  ⟨⊥, isCompl_top_bot⟩\n\n"}
{"name":"IsComplemented.sup","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : BoundedOrder α\na b : α\na✝¹ : IsComplemented a\na✝ : IsComplemented b\n⊢ IsComplemented (Max.max a b)","decl":"theorem IsComplemented.sup : IsComplemented a → IsComplemented b → IsComplemented (a ⊔ b) :=\n  fun ⟨a', ha⟩ ⟨b', hb⟩ => ⟨a' ⊓ b', ha.sup_inf hb⟩\n\n"}
{"name":"IsComplemented.inf","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : BoundedOrder α\na b : α\na✝¹ : IsComplemented a\na✝ : IsComplemented b\n⊢ IsComplemented (Min.min a b)","decl":"theorem IsComplemented.inf : IsComplemented a → IsComplemented b → IsComplemented (a ⊓ b) :=\n  fun ⟨a', ha⟩ ⟨b', hb⟩ => ⟨a' ⊔ b', ha.inf_sup hb⟩\n\n"}
{"name":"ComplementedLattice.exists_isCompl","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_2\ninst✝¹ : Lattice α\ninst✝ : BoundedOrder α\nself : ComplementedLattice α\na : α\n⊢ Exists fun b => IsCompl a b","decl":"/-- A complemented bounded lattice is one where every element has a (not necessarily unique)\ncomplement. -/\nclass ComplementedLattice (α) [Lattice α] [BoundedOrder α] : Prop where\n  /-- In a `ComplementedLattice`, every element admits a complement. -/\n  exists_isCompl : ∀ a : α, ∃ b : α, IsCompl a b\n\n"}
{"name":"complementedLattice_iff","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_2\ninst✝¹ : Lattice α\ninst✝ : BoundedOrder α\n⊢ Iff (ComplementedLattice α) (∀ (a : α), Exists fun b => IsCompl a b)","decl":"lemma complementedLattice_iff (α) [Lattice α] [BoundedOrder α] :\n    ComplementedLattice α ↔ ∀ a : α, ∃ b : α, IsCompl a b :=\n  ⟨fun ⟨h⟩ ↦ h, fun h ↦ ⟨h⟩⟩\n\n"}
{"name":"Subsingleton.instComplementedLattice","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝² : Lattice α\ninst✝¹ : BoundedOrder α\ninst✝ : Subsingleton α\n⊢ ComplementedLattice α","decl":"instance Subsingleton.instComplementedLattice\n    [Lattice α] [BoundedOrder α] [Subsingleton α] : ComplementedLattice α := by\n  refine ⟨fun a ↦ ⟨⊥, disjoint_bot_right, ?_⟩⟩\n  rw [Subsingleton.elim ⊥ ⊤]\n  exact codisjoint_top_right\n\n"}
{"name":"ComplementedLattice.instOrderDual","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝² : Lattice α\ninst✝¹ : BoundedOrder α\ninst✝ : ComplementedLattice α\n⊢ ComplementedLattice (OrderDual α)","decl":"instance : ComplementedLattice αᵒᵈ :=\n  ⟨fun a ↦\n    let ⟨b, hb⟩ := exists_isCompl (show α from a)\n    ⟨b, hb.dual⟩⟩\n\n"}
{"name":"Complementeds.coe_injective","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : Lattice α\ninst✝ : BoundedOrder α\n⊢ Function.Injective Subtype.val","decl":"theorem coe_injective : Injective ((↑) : Complementeds α → α) := Subtype.coe_injective\n\n"}
{"name":"Complementeds.coe_inj","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : Lattice α\ninst✝ : BoundedOrder α\na b : Complementeds α\n⊢ Iff (Eq ↑a ↑b) (Eq a b)","decl":"@[simp, norm_cast]\ntheorem coe_inj : (a : α) = b ↔ a = b := Subtype.coe_inj\n\n-- Porting note: removing `simp` because `Subtype.coe_le_coe` already proves it\n"}
{"name":"Complementeds.coe_le_coe","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : Lattice α\ninst✝ : BoundedOrder α\na b : Complementeds α\n⊢ Iff (LE.le ↑a ↑b) (LE.le a b)","decl":"@[norm_cast]\ntheorem coe_le_coe : (a : α) ≤ b ↔ a ≤ b := by simp\n\n-- Porting note: removing `simp` because `Subtype.coe_lt_coe` already proves it\n"}
{"name":"Complementeds.coe_lt_coe","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : Lattice α\ninst✝ : BoundedOrder α\na b : Complementeds α\n⊢ Iff (LT.lt ↑a ↑b) (LT.lt a b)","decl":"@[norm_cast]\ntheorem coe_lt_coe : (a : α) < b ↔ a < b := Iff.rfl\n\n"}
{"name":"Complementeds.coe_bot","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : Lattice α\ninst✝ : BoundedOrder α\n⊢ Eq (↑Bot.bot) Bot.bot","decl":"@[simp, norm_cast]\ntheorem coe_bot : ((⊥ : Complementeds α) : α) = ⊥ := rfl\n\n"}
{"name":"Complementeds.coe_top","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : Lattice α\ninst✝ : BoundedOrder α\n⊢ Eq (↑Top.top) Top.top","decl":"@[simp, norm_cast]\ntheorem coe_top : ((⊤ : Complementeds α) : α) = ⊤ := rfl\n\n-- Porting note: removing `simp` because `Subtype.mk_bot` already proves it\n"}
{"name":"Complementeds.mk_bot","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : Lattice α\ninst✝ : BoundedOrder α\n⊢ Eq ⟨Bot.bot, ⋯⟩ Bot.bot","decl":"theorem mk_bot : (⟨⊥, isComplemented_bot⟩ : Complementeds α) = ⊥ := rfl\n\n-- Porting note: removing `simp` because `Subtype.mk_top` already proves it\n"}
{"name":"Complementeds.mk_top","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : Lattice α\ninst✝ : BoundedOrder α\n⊢ Eq ⟨Top.top, ⋯⟩ Top.top","decl":"theorem mk_top : (⟨⊤, isComplemented_top⟩ : Complementeds α) = ⊤ := rfl\n\n"}
{"name":"Complementeds.coe_sup","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : BoundedOrder α\na b : Complementeds α\n⊢ Eq (↑(Max.max a b)) (Max.max ↑a ↑b)","decl":"@[simp, norm_cast]\ntheorem coe_sup (a b : Complementeds α) : ↑(a ⊔ b) = (a : α) ⊔ b := rfl\n\n"}
{"name":"Complementeds.coe_inf","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : BoundedOrder α\na b : Complementeds α\n⊢ Eq (↑(Min.min a b)) (Min.min ↑a ↑b)","decl":"@[simp, norm_cast]\ntheorem coe_inf (a b : Complementeds α) : ↑(a ⊓ b) = (a : α) ⊓ b := rfl\n\n"}
{"name":"Complementeds.mk_sup_mk","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : BoundedOrder α\na b : α\nha : IsComplemented a\nhb : IsComplemented b\n⊢ Eq (Max.max ⟨a, ha⟩ ⟨b, hb⟩) ⟨Max.max a b, ⋯⟩","decl":"@[simp]\ntheorem mk_sup_mk {a b : α} (ha : IsComplemented a) (hb : IsComplemented b) :\n    (⟨a, ha⟩ ⊔ ⟨b, hb⟩ : Complementeds α) = ⟨a ⊔ b, ha.sup hb⟩ := rfl\n\n"}
{"name":"Complementeds.mk_inf_mk","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : BoundedOrder α\na b : α\nha : IsComplemented a\nhb : IsComplemented b\n⊢ Eq (Min.min ⟨a, ha⟩ ⟨b, hb⟩) ⟨Min.min a b, ⋯⟩","decl":"@[simp]\ntheorem mk_inf_mk {a b : α} (ha : IsComplemented a) (hb : IsComplemented b) :\n    (⟨a, ha⟩ ⊓ ⟨b, hb⟩ : Complementeds α) = ⟨a ⊓ b, ha.inf hb⟩ := rfl\n\n"}
{"name":"Complementeds.disjoint_coe","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : BoundedOrder α\na b : Complementeds α\n⊢ Iff (Disjoint ↑a ↑b) (Disjoint a b)","decl":"@[simp, norm_cast]\ntheorem disjoint_coe : Disjoint (a : α) b ↔ Disjoint a b := by\n  rw [disjoint_iff, disjoint_iff, ← coe_inf, ← coe_bot, coe_inj]\n\n"}
{"name":"Complementeds.codisjoint_coe","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : BoundedOrder α\na b : Complementeds α\n⊢ Iff (Codisjoint ↑a ↑b) (Codisjoint a b)","decl":"@[simp, norm_cast]\ntheorem codisjoint_coe : Codisjoint (a : α) b ↔ Codisjoint a b := by\n  rw [codisjoint_iff, codisjoint_iff, ← coe_sup, ← coe_top, coe_inj]\n\n"}
{"name":"Complementeds.isCompl_coe","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : BoundedOrder α\na b : Complementeds α\n⊢ Iff (IsCompl ↑a ↑b) (IsCompl a b)","decl":"@[simp, norm_cast]\ntheorem isCompl_coe : IsCompl (a : α) b ↔ IsCompl a b := by\n  simp_rw [isCompl_iff, disjoint_coe, codisjoint_coe]\n\n"}
{"name":"Complementeds.instComplementedLattice","module":"Mathlib.Order.Disjoint","initialProofState":"α : Type u_1\ninst✝¹ : DistribLattice α\ninst✝ : BoundedOrder α\n⊢ ComplementedLattice (Complementeds α)","decl":"instance : ComplementedLattice (Complementeds α) :=\n  ⟨fun ⟨a, b, h⟩ => ⟨⟨b, a, h.symm⟩, isCompl_coe.1 h⟩⟩\n\n"}
