{"name":"StieltjesFunction.measurable_measure","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nx✝ : MeasurableSpace α\nf : α → StieltjesFunction\nhf : ∀ (q : Real), Measurable fun a => ↑(f a) q\nhf_bot : ∀ (a : α), Filter.Tendsto (↑(f a)) Filter.atBot (nhds 0)\nhf_top : ∀ (a : α), Filter.Tendsto (↑(f a)) Filter.atTop (nhds 1)\n⊢ Measurable fun a => (f a).measure","decl":"/-- A measurable function `α → StieltjesFunction` with limits 0 at -∞ and 1 at +∞ gives a measurable\nfunction `α → Measure ℝ` by taking `StieltjesFunction.measure` at each point. -/\nlemma StieltjesFunction.measurable_measure {α : Type*} {_ : MeasurableSpace α}\n    {f : α → StieltjesFunction} (hf : ∀ q, Measurable fun a ↦ f a q)\n    (hf_bot : ∀ a, Tendsto (f a) atBot (𝓝 0))\n    (hf_top : ∀ a, Tendsto (f a) atTop (𝓝 1)) :\n    Measurable fun a ↦ (f a).measure :=\n  have : ∀ a, IsProbabilityMeasure (f a).measure :=\n    fun a ↦ (f a).isProbabilityMeasure (hf_bot a) (hf_top a)\n  .measure_of_isPiSystem_of_isProbabilityMeasure (borel_eq_generateFrom_Iic ℝ) isPiSystem_Iic <| by\n    simp_rw [forall_mem_range, StieltjesFunction.measure_Iic (f _) (hf_bot _), sub_zero]\n    exact fun _ ↦ (hf _).ennreal_ofReal\n\n"}
{"name":"ProbabilityTheory.IsRatStieltjesPoint.tendsto_atBot_zero","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\na : α\nself : ProbabilityTheory.IsRatStieltjesPoint f a\n⊢ Filter.Tendsto (f a) Filter.atBot (nhds 0)","decl":"/-- `a : α` is a Stieltjes point for `f : α → ℚ → ℝ` if `f a` is monotone with limit 0 at -∞\nand 1 at +∞ and satisfies a continuity property. -/\nstructure IsRatStieltjesPoint (f : α → ℚ → ℝ) (a : α) : Prop where\n  mono : Monotone (f a)\n  tendsto_atTop_one : Tendsto (f a) atTop (𝓝 1)\n  tendsto_atBot_zero : Tendsto (f a) atBot (𝓝 0)\n  iInf_rat_gt_eq : ∀ t : ℚ, ⨅ r : Ioi t, f a r = f a t\n\n"}
{"name":"ProbabilityTheory.IsRatStieltjesPoint.mono","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\na : α\nself : ProbabilityTheory.IsRatStieltjesPoint f a\n⊢ Monotone (f a)","decl":"/-- `a : α` is a Stieltjes point for `f : α → ℚ → ℝ` if `f a` is monotone with limit 0 at -∞\nand 1 at +∞ and satisfies a continuity property. -/\nstructure IsRatStieltjesPoint (f : α → ℚ → ℝ) (a : α) : Prop where\n  mono : Monotone (f a)\n  tendsto_atTop_one : Tendsto (f a) atTop (𝓝 1)\n  tendsto_atBot_zero : Tendsto (f a) atBot (𝓝 0)\n  iInf_rat_gt_eq : ∀ t : ℚ, ⨅ r : Ioi t, f a r = f a t\n\n"}
{"name":"ProbabilityTheory.IsRatStieltjesPoint.iInf_rat_gt_eq","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\na : α\nself : ProbabilityTheory.IsRatStieltjesPoint f a\nt : Rat\n⊢ Eq (iInf fun r => f a ↑r) (f a t)","decl":"/-- `a : α` is a Stieltjes point for `f : α → ℚ → ℝ` if `f a` is monotone with limit 0 at -∞\nand 1 at +∞ and satisfies a continuity property. -/\nstructure IsRatStieltjesPoint (f : α → ℚ → ℝ) (a : α) : Prop where\n  mono : Monotone (f a)\n  tendsto_atTop_one : Tendsto (f a) atTop (𝓝 1)\n  tendsto_atBot_zero : Tendsto (f a) atBot (𝓝 0)\n  iInf_rat_gt_eq : ∀ t : ℚ, ⨅ r : Ioi t, f a r = f a t\n\n"}
{"name":"ProbabilityTheory.IsRatStieltjesPoint.tendsto_atTop_one","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\na : α\nself : ProbabilityTheory.IsRatStieltjesPoint f a\n⊢ Filter.Tendsto (f a) Filter.atTop (nhds 1)","decl":"/-- `a : α` is a Stieltjes point for `f : α → ℚ → ℝ` if `f a` is monotone with limit 0 at -∞\nand 1 at +∞ and satisfies a continuity property. -/\nstructure IsRatStieltjesPoint (f : α → ℚ → ℝ) (a : α) : Prop where\n  mono : Monotone (f a)\n  tendsto_atTop_one : Tendsto (f a) atTop (𝓝 1)\n  tendsto_atBot_zero : Tendsto (f a) atBot (𝓝 0)\n  iInf_rat_gt_eq : ∀ t : ℚ, ⨅ r : Ioi t, f a r = f a t\n\n"}
{"name":"ProbabilityTheory.isRatStieltjesPoint_unit_prod_iff","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\na : α\n⊢ Iff (ProbabilityTheory.IsRatStieltjesPoint (fun p => f p.2) { fst := Unit.unit, snd := a }) (ProbabilityTheory.IsRatStieltjesPoint f a)","decl":"lemma isRatStieltjesPoint_unit_prod_iff (f : α → ℚ → ℝ) (a : α) :\n    IsRatStieltjesPoint (fun p : Unit × α ↦ f p.2) ((), a)\n      ↔ IsRatStieltjesPoint f a := by\n  constructor <;>\n    exact fun h ↦ ⟨h.mono, h.tendsto_atTop_one, h.tendsto_atBot_zero, h.iInf_rat_gt_eq⟩\n\n"}
{"name":"ProbabilityTheory.measurableSet_isRatStieltjesPoint","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : Measurable f\n⊢ MeasurableSet (setOf fun a => ProbabilityTheory.IsRatStieltjesPoint f a)","decl":"lemma measurableSet_isRatStieltjesPoint [MeasurableSpace α] (hf : Measurable f) :\n    MeasurableSet {a | IsRatStieltjesPoint f a} := by\n  have h1 : MeasurableSet {a | Monotone (f a)} := by\n    change MeasurableSet {a | ∀ q r (_ : q ≤ r), f a q ≤ f a r}\n    simp_rw [Set.setOf_forall]\n    refine MeasurableSet.iInter (fun q ↦ ?_)\n    refine MeasurableSet.iInter (fun r ↦ ?_)\n    refine MeasurableSet.iInter (fun _ ↦ ?_)\n    exact measurableSet_le hf.eval hf.eval\n  have h2 : MeasurableSet {a | Tendsto (f a) atTop (𝓝 1)} :=\n    measurableSet_tendsto _ (fun q ↦ hf.eval)\n  have h3 : MeasurableSet {a | Tendsto (f a) atBot (𝓝 0)} :=\n    measurableSet_tendsto _ (fun q ↦ hf.eval)\n  have h4 : MeasurableSet {a | ∀ t : ℚ, ⨅ r : Ioi t, f a r = f a t} := by\n    rw [Set.setOf_forall]\n    refine MeasurableSet.iInter (fun q ↦ ?_)\n    exact measurableSet_eq_fun (.iInf fun _ ↦ hf.eval) hf.eval\n  suffices {a | IsRatStieltjesPoint f a}\n      = ({a | Monotone (f a)} ∩ {a | Tendsto (f a) atTop (𝓝 1)} ∩ {a | Tendsto (f a) atBot (𝓝 0)}\n        ∩ {a | ∀ t : ℚ, ⨅ r : Ioi t, f a r = f a t}) by\n    rw [this]\n    exact (((h1.inter h2).inter h3).inter h4)\n  ext a\n  simp only [mem_setOf_eq, mem_inter_iff]\n  refine ⟨fun h ↦ ?_, fun h ↦ ?_⟩\n  · exact ⟨⟨⟨h.mono, h.tendsto_atTop_one⟩, h.tendsto_atBot_zero⟩, h.iInf_rat_gt_eq⟩\n  · exact ⟨h.1.1.1, h.1.1.2, h.1.2, h.2⟩\n\n"}
{"name":"ProbabilityTheory.IsRatStieltjesPoint.ite","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf g : α → Rat → Real\na : α\np : α → Prop\ninst✝ : DecidablePred p\nhf : p a → ProbabilityTheory.IsRatStieltjesPoint f a\nhg : Not (p a) → ProbabilityTheory.IsRatStieltjesPoint g a\n⊢ ProbabilityTheory.IsRatStieltjesPoint (fun a => ite (p a) (f a) (g a)) a","decl":"lemma IsRatStieltjesPoint.ite {f g : α → ℚ → ℝ} {a : α} (p : α → Prop) [DecidablePred p]\n    (hf : p a → IsRatStieltjesPoint f a) (hg : ¬ p a → IsRatStieltjesPoint g a) :\n    IsRatStieltjesPoint (fun a ↦ if p a then f a else g a) a where\n  mono := by split_ifs with h; exacts [(hf h).mono, (hg h).mono]\n  tendsto_atTop_one := by\n    split_ifs with h; exacts [(hf h).tendsto_atTop_one, (hg h).tendsto_atTop_one]\n  tendsto_atBot_zero := by\n    split_ifs with h; exacts [(hf h).tendsto_atBot_zero, (hg h).tendsto_atBot_zero]\n  iInf_rat_gt_eq := by split_ifs with h; exacts [(hf h).iInf_rat_gt_eq, (hg h).iInf_rat_gt_eq]\n\n"}
{"name":"ProbabilityTheory.IsMeasurableRatCDF.isRatStieltjesPoint","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\ninst✝ : MeasurableSpace α\nf : α → Rat → Real\nself : ProbabilityTheory.IsMeasurableRatCDF f\na : α\n⊢ ProbabilityTheory.IsRatStieltjesPoint f a","decl":"/-- A function `f : α → ℚ → ℝ` is a (kernel) rational cumulative distribution function if it is\nmeasurable in the first argument and if `f a` satisfies a list of properties for all `a : α`:\nmonotonicity between 0 at -∞ and 1 at +∞ and a form of continuity.\n\nA function with these properties can be extended to a measurable function `α → StieltjesFunction`.\nSee `ProbabilityTheory.IsMeasurableRatCDF.stieltjesFunction`.\n-/\nstructure IsMeasurableRatCDF (f : α → ℚ → ℝ) : Prop where\n  isRatStieltjesPoint : ∀ a, IsRatStieltjesPoint f a\n  measurable : Measurable f\n\n"}
{"name":"ProbabilityTheory.IsMeasurableRatCDF.measurable","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\ninst✝ : MeasurableSpace α\nf : α → Rat → Real\nself : ProbabilityTheory.IsMeasurableRatCDF f\n⊢ Measurable f","decl":"/-- A function `f : α → ℚ → ℝ` is a (kernel) rational cumulative distribution function if it is\nmeasurable in the first argument and if `f a` satisfies a list of properties for all `a : α`:\nmonotonicity between 0 at -∞ and 1 at +∞ and a form of continuity.\n\nA function with these properties can be extended to a measurable function `α → StieltjesFunction`.\nSee `ProbabilityTheory.IsMeasurableRatCDF.stieltjesFunction`.\n-/\nstructure IsMeasurableRatCDF (f : α → ℚ → ℝ) : Prop where\n  isRatStieltjesPoint : ∀ a, IsRatStieltjesPoint f a\n  measurable : Measurable f\n\n"}
{"name":"ProbabilityTheory.IsMeasurableRatCDF.nonneg","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\ninst✝ : MeasurableSpace α\nf : α → Rat → Real\nhf : ProbabilityTheory.IsMeasurableRatCDF f\na : α\nq : Rat\n⊢ LE.le 0 (f a q)","decl":"lemma IsMeasurableRatCDF.nonneg {f : α → ℚ → ℝ} (hf : IsMeasurableRatCDF f) (a : α) (q : ℚ) :\n    0 ≤ f a q :=\n  Monotone.le_of_tendsto (hf.isRatStieltjesPoint a).mono\n    (hf.isRatStieltjesPoint a).tendsto_atBot_zero q\n\n"}
{"name":"ProbabilityTheory.IsMeasurableRatCDF.le_one","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\ninst✝ : MeasurableSpace α\nf : α → Rat → Real\nhf : ProbabilityTheory.IsMeasurableRatCDF f\na : α\nq : Rat\n⊢ LE.le (f a q) 1","decl":"lemma IsMeasurableRatCDF.le_one {f : α → ℚ → ℝ} (hf : IsMeasurableRatCDF f) (a : α) (q : ℚ) :\n    f a q ≤ 1 :=\n  Monotone.ge_of_tendsto (hf.isRatStieltjesPoint a).mono\n    (hf.isRatStieltjesPoint a).tendsto_atTop_one q\n\n"}
{"name":"ProbabilityTheory.IsMeasurableRatCDF.tendsto_atTop_one","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\ninst✝ : MeasurableSpace α\nf : α → Rat → Real\nhf : ProbabilityTheory.IsMeasurableRatCDF f\na : α\n⊢ Filter.Tendsto (f a) Filter.atTop (nhds 1)","decl":"lemma IsMeasurableRatCDF.tendsto_atTop_one {f : α → ℚ → ℝ} (hf : IsMeasurableRatCDF f) (a : α) :\n    Tendsto (f a) atTop (𝓝 1) := (hf.isRatStieltjesPoint a).tendsto_atTop_one\n\n"}
{"name":"ProbabilityTheory.IsMeasurableRatCDF.tendsto_atBot_zero","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\ninst✝ : MeasurableSpace α\nf : α → Rat → Real\nhf : ProbabilityTheory.IsMeasurableRatCDF f\na : α\n⊢ Filter.Tendsto (f a) Filter.atBot (nhds 0)","decl":"lemma IsMeasurableRatCDF.tendsto_atBot_zero {f : α → ℚ → ℝ} (hf : IsMeasurableRatCDF f) (a : α) :\n    Tendsto (f a) atBot (𝓝 0) := (hf.isRatStieltjesPoint a).tendsto_atBot_zero\n\n"}
{"name":"ProbabilityTheory.IsMeasurableRatCDF.iInf_rat_gt_eq","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\ninst✝ : MeasurableSpace α\nf : α → Rat → Real\nhf : ProbabilityTheory.IsMeasurableRatCDF f\na : α\nq : Rat\n⊢ Eq (iInf fun r => f a ↑r) (f a q)","decl":"lemma IsMeasurableRatCDF.iInf_rat_gt_eq {f : α → ℚ → ℝ} (hf : IsMeasurableRatCDF f) (a : α)\n    (q : ℚ) :\n    ⨅ r : Ioi q, f a r = f a q := (hf.isRatStieltjesPoint a).iInf_rat_gt_eq q\n\n"}
{"name":"ProbabilityTheory.monotone_defaultRatCDF","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"⊢ Monotone ProbabilityTheory.defaultRatCDF","decl":"lemma monotone_defaultRatCDF : Monotone defaultRatCDF := by\n  unfold defaultRatCDF\n  intro x y hxy\n  dsimp only\n  split_ifs with h_1 h_2 h_2\n  exacts [le_rfl, zero_le_one, absurd (hxy.trans_lt h_2) h_1, le_rfl]\n\n"}
{"name":"ProbabilityTheory.defaultRatCDF_nonneg","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"q : Rat\n⊢ LE.le 0 (ProbabilityTheory.defaultRatCDF q)","decl":"lemma defaultRatCDF_nonneg (q : ℚ) : 0 ≤ defaultRatCDF q := by\n  unfold defaultRatCDF\n  split_ifs\n  exacts [le_rfl, zero_le_one]\n\n"}
{"name":"ProbabilityTheory.defaultRatCDF_le_one","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"q : Rat\n⊢ LE.le (ProbabilityTheory.defaultRatCDF q) 1","decl":"lemma defaultRatCDF_le_one (q : ℚ) : defaultRatCDF q ≤ 1 := by\n  unfold defaultRatCDF\n  split_ifs <;> simp\n\n"}
{"name":"ProbabilityTheory.tendsto_defaultRatCDF_atTop","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"⊢ Filter.Tendsto ProbabilityTheory.defaultRatCDF Filter.atTop (nhds 1)","decl":"lemma tendsto_defaultRatCDF_atTop : Tendsto defaultRatCDF atTop (𝓝 1) := by\n  refine (tendsto_congr' ?_).mp tendsto_const_nhds\n  rw [EventuallyEq, eventually_atTop]\n  exact ⟨0, fun q hq => (if_neg (not_lt.mpr hq)).symm⟩\n\n"}
{"name":"ProbabilityTheory.tendsto_defaultRatCDF_atBot","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"⊢ Filter.Tendsto ProbabilityTheory.defaultRatCDF Filter.atBot (nhds 0)","decl":"lemma tendsto_defaultRatCDF_atBot : Tendsto defaultRatCDF atBot (𝓝 0) := by\n  refine (tendsto_congr' ?_).mp tendsto_const_nhds\n  rw [EventuallyEq, eventually_atBot]\n  refine ⟨-1, fun q hq => (if_pos (hq.trans_lt ?_)).symm⟩\n  linarith\n\n"}
{"name":"ProbabilityTheory.iInf_rat_gt_defaultRatCDF","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"t : Rat\n⊢ Eq (iInf fun r => ProbabilityTheory.defaultRatCDF ↑r) (ProbabilityTheory.defaultRatCDF t)","decl":"lemma iInf_rat_gt_defaultRatCDF (t : ℚ) :\n    ⨅ r : Ioi t, defaultRatCDF r = defaultRatCDF t := by\n  simp only [defaultRatCDF]\n  have h_bdd : BddBelow (range fun r : ↥(Ioi t) ↦ ite ((r : ℚ) < 0) (0 : ℝ) 1) := by\n    refine ⟨0, fun x hx ↦ ?_⟩\n    obtain ⟨y, rfl⟩ := mem_range.mpr hx\n    dsimp only\n    split_ifs\n    exacts [le_rfl, zero_le_one]\n  split_ifs with h\n  · refine le_antisymm ?_ (le_ciInf fun x ↦ ?_)\n    · obtain ⟨q, htq, hq_neg⟩ : ∃ q, t < q ∧ q < 0 := ⟨t / 2, by linarith, by linarith⟩\n      refine (ciInf_le h_bdd ⟨q, htq⟩).trans ?_\n      rw [if_pos]\n      rwa [Subtype.coe_mk]\n    · split_ifs\n      exacts [le_rfl, zero_le_one]\n  · refine le_antisymm ?_ ?_\n    · refine (ciInf_le h_bdd ⟨t + 1, lt_add_one t⟩).trans ?_\n      split_ifs\n      exacts [zero_le_one, le_rfl]\n    · refine le_ciInf fun x ↦ ?_\n      rw [if_neg]\n      rw [not_lt] at h ⊢\n      exact h.trans (mem_Ioi.mp x.prop).le\n\n"}
{"name":"ProbabilityTheory.isRatStieltjesPoint_defaultRatCDF","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\na : α\n⊢ ProbabilityTheory.IsRatStieltjesPoint (fun x => ProbabilityTheory.defaultRatCDF) a","decl":"lemma isRatStieltjesPoint_defaultRatCDF (a : α) :\n    IsRatStieltjesPoint (fun (_ : α) ↦ defaultRatCDF) a where\n  mono := monotone_defaultRatCDF\n  tendsto_atTop_one := tendsto_defaultRatCDF_atTop\n  tendsto_atBot_zero := tendsto_defaultRatCDF_atBot\n  iInf_rat_gt_eq := iInf_rat_gt_defaultRatCDF\n\n"}
{"name":"ProbabilityTheory.IsMeasurableRatCDF_defaultRatCDF","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_2\ninst✝ : MeasurableSpace α\n⊢ ProbabilityTheory.IsMeasurableRatCDF fun x q => ProbabilityTheory.defaultRatCDF q","decl":"lemma IsMeasurableRatCDF_defaultRatCDF (α : Type*) [MeasurableSpace α] :\n    IsMeasurableRatCDF (fun (_ : α) (q : ℚ) ↦ defaultRatCDF q) where\n  isRatStieltjesPoint := isRatStieltjesPoint_defaultRatCDF\n  measurable := measurable_const\n\n"}
{"name":"ProbabilityTheory.toRatCDF_of_isRatStieltjesPoint","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\na : α\nh : ProbabilityTheory.IsRatStieltjesPoint f a\nq : Rat\n⊢ Eq (ProbabilityTheory.toRatCDF f a q) (f a q)","decl":"lemma toRatCDF_of_isRatStieltjesPoint {a : α} (h : IsRatStieltjesPoint f a) (q : ℚ) :\n    toRatCDF f a q = f a q := by\n  rw [toRatCDF, if_pos h]\n\n"}
{"name":"ProbabilityTheory.toRatCDF_unit_prod","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\na : α\n⊢ Eq (ProbabilityTheory.toRatCDF (fun p => f p.2) { fst := Unit.unit, snd := a }) (ProbabilityTheory.toRatCDF f a)","decl":"lemma toRatCDF_unit_prod (a : α) :\n    toRatCDF (fun (p : Unit × α) ↦ f p.2) ((), a) = toRatCDF f a := by\n  unfold toRatCDF\n  rw [isRatStieltjesPoint_unit_prod_iff]\n\n"}
{"name":"ProbabilityTheory.measurable_toRatCDF","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : Measurable f\n⊢ Measurable (ProbabilityTheory.toRatCDF f)","decl":"lemma measurable_toRatCDF (hf : Measurable f) : Measurable (toRatCDF f) :=\n  Measurable.ite (measurableSet_isRatStieltjesPoint hf) hf measurable_const\n\n"}
{"name":"ProbabilityTheory.isMeasurableRatCDF_toRatCDF","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : Measurable f\n⊢ ProbabilityTheory.IsMeasurableRatCDF (ProbabilityTheory.toRatCDF f)","decl":"lemma isMeasurableRatCDF_toRatCDF (hf : Measurable f) :\n    IsMeasurableRatCDF (toRatCDF f) where\n  isRatStieltjesPoint a := by\n    classical\n    exact IsRatStieltjesPoint.ite (IsRatStieltjesPoint f) id\n      (fun _ ↦ isRatStieltjesPoint_defaultRatCDF a)\n  measurable := measurable_toRatCDF hf\n\n"}
{"name":"ProbabilityTheory.IsMeasurableRatCDF.stieltjesFunctionAux_def","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_2\nf : α → Rat → Real\na : α\nx : Real\n⊢ Eq (ProbabilityTheory.IsMeasurableRatCDF.stieltjesFunctionAux f a x) (iInf fun q => f a ↑q)","decl":"/-- Auxiliary definition for `IsMeasurableRatCDF.stieltjesFunction`: turn `f : α → ℚ → ℝ` into\na function `α → ℝ → ℝ` by assigning to `f a x` the infimum of `f a q` over `q : ℚ` with `x < q`. -/\nnoncomputable irreducible_def IsMeasurableRatCDF.stieltjesFunctionAux (f : α → ℚ → ℝ) :\n    α → ℝ → ℝ :=\n  fun a x ↦ ⨅ q : { q' : ℚ // x < q' }, f a q\n\n"}
{"name":"ProbabilityTheory.IsMeasurableRatCDF.stieltjesFunctionAux_def'","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\na : α\n⊢ Eq (ProbabilityTheory.IsMeasurableRatCDF.stieltjesFunctionAux f a) fun t => iInf fun r => f a ↑r","decl":"lemma IsMeasurableRatCDF.stieltjesFunctionAux_def' (f : α → ℚ → ℝ) (a : α) :\n    IsMeasurableRatCDF.stieltjesFunctionAux f a\n      = fun (t : ℝ) ↦ ⨅ r : { r' : ℚ // t < r' }, f a r := by\n  ext t; exact IsMeasurableRatCDF.stieltjesFunctionAux_def f a t\n\n"}
{"name":"ProbabilityTheory.IsMeasurableRatCDF.stieltjesFunctionAux_unit_prod","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\na : α\n⊢ Eq (ProbabilityTheory.IsMeasurableRatCDF.stieltjesFunctionAux (fun p => f p.2) { fst := Unit.unit, snd := a }) (ProbabilityTheory.IsMeasurableRatCDF.stieltjesFunctionAux f a)","decl":"lemma IsMeasurableRatCDF.stieltjesFunctionAux_unit_prod {f : α → ℚ → ℝ} (a : α) :\n    IsMeasurableRatCDF.stieltjesFunctionAux (fun (p : Unit × α) ↦ f p.2) ((), a)\n      = IsMeasurableRatCDF.stieltjesFunctionAux f a := by\n  simp_rw [IsMeasurableRatCDF.stieltjesFunctionAux_def']\n\n"}
{"name":"ProbabilityTheory.IsMeasurableRatCDF.stieltjesFunctionAux_eq","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : ProbabilityTheory.IsMeasurableRatCDF f\na : α\nr : Rat\n⊢ Eq (ProbabilityTheory.IsMeasurableRatCDF.stieltjesFunctionAux f a ↑r) (f a r)","decl":"lemma IsMeasurableRatCDF.stieltjesFunctionAux_eq (a : α) (r : ℚ) :\n    IsMeasurableRatCDF.stieltjesFunctionAux f a r = f a r := by\n  rw [← hf.iInf_rat_gt_eq a r, IsMeasurableRatCDF.stieltjesFunctionAux]\n  refine Equiv.iInf_congr ?_ ?_\n  · exact\n      { toFun := fun t ↦ ⟨t.1, mod_cast t.2⟩\n        invFun := fun t ↦ ⟨t.1, mod_cast t.2⟩\n        left_inv := fun t ↦ by simp only [Subtype.coe_eta]\n        right_inv := fun t ↦ by simp only [Subtype.coe_eta] }\n  · intro t\n    simp only [Equiv.coe_fn_mk, Subtype.coe_mk]\n\n"}
{"name":"ProbabilityTheory.IsMeasurableRatCDF.stieltjesFunctionAux_nonneg","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : ProbabilityTheory.IsMeasurableRatCDF f\na : α\nr : Real\n⊢ LE.le 0 (ProbabilityTheory.IsMeasurableRatCDF.stieltjesFunctionAux f a r)","decl":"lemma IsMeasurableRatCDF.stieltjesFunctionAux_nonneg (a : α) (r : ℝ) :\n    0 ≤ IsMeasurableRatCDF.stieltjesFunctionAux f a r := by\n  have : Nonempty { r' : ℚ // r < ↑r' } := by\n    obtain ⟨r, hrx⟩ := exists_rat_gt r\n    exact ⟨⟨r, hrx⟩⟩\n  rw [IsMeasurableRatCDF.stieltjesFunctionAux_def]\n  exact le_ciInf fun r' ↦ hf.nonneg a _\n\n"}
{"name":"ProbabilityTheory.IsMeasurableRatCDF.monotone_stieltjesFunctionAux","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : ProbabilityTheory.IsMeasurableRatCDF f\na : α\n⊢ Monotone (ProbabilityTheory.IsMeasurableRatCDF.stieltjesFunctionAux f a)","decl":"lemma IsMeasurableRatCDF.monotone_stieltjesFunctionAux (a : α) :\n    Monotone (IsMeasurableRatCDF.stieltjesFunctionAux f a) := by\n  intro x y hxy\n  have : Nonempty { r' : ℚ // y < ↑r' } := by\n    obtain ⟨r, hrx⟩ := exists_rat_gt y\n    exact ⟨⟨r, hrx⟩⟩\n  simp_rw [IsMeasurableRatCDF.stieltjesFunctionAux_def]\n  refine le_ciInf fun r ↦ (ciInf_le ?_ ?_).trans_eq ?_\n  · refine ⟨0, fun z ↦ ?_⟩; rintro ⟨u, rfl⟩; exact hf.nonneg a _\n  · exact ⟨r.1, hxy.trans_lt r.prop⟩\n  · rfl\n\n"}
{"name":"ProbabilityTheory.IsMeasurableRatCDF.continuousWithinAt_stieltjesFunctionAux_Ici","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : ProbabilityTheory.IsMeasurableRatCDF f\na : α\nx : Real\n⊢ ContinuousWithinAt (ProbabilityTheory.IsMeasurableRatCDF.stieltjesFunctionAux f a) (Set.Ici x) x","decl":"lemma IsMeasurableRatCDF.continuousWithinAt_stieltjesFunctionAux_Ici (a : α) (x : ℝ) :\n    ContinuousWithinAt (IsMeasurableRatCDF.stieltjesFunctionAux f a) (Ici x) x := by\n  rw [← continuousWithinAt_Ioi_iff_Ici]\n  convert Monotone.tendsto_nhdsGT (monotone_stieltjesFunctionAux hf a) x\n  rw [sInf_image']\n  have h' : ⨅ r : Ioi x, stieltjesFunctionAux f a r\n      = ⨅ r : { r' : ℚ // x < r' }, stieltjesFunctionAux f a r := by\n    refine Real.iInf_Ioi_eq_iInf_rat_gt x ?_ (monotone_stieltjesFunctionAux hf a)\n    refine ⟨0, fun z ↦ ?_⟩\n    rintro ⟨u, -, rfl⟩\n    exact stieltjesFunctionAux_nonneg hf a u\n  have h'' :\n    ⨅ r : { r' : ℚ // x < r' }, stieltjesFunctionAux f a r =\n      ⨅ r : { r' : ℚ // x < r' }, f a r := by\n    congr with r\n    exact stieltjesFunctionAux_eq hf a r\n  rw [h', h'', ContinuousWithinAt]\n  congr!\n  rw [stieltjesFunctionAux_def]\n\n"}
{"name":"ProbabilityTheory.IsMeasurableRatCDF.stieltjesFunction_eq","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : ProbabilityTheory.IsMeasurableRatCDF f\na : α\nr : Rat\n⊢ Eq (↑(hf.stieltjesFunction a) ↑r) (f a r)","decl":"lemma IsMeasurableRatCDF.stieltjesFunction_eq (a : α) (r : ℚ) : hf.stieltjesFunction a r = f a r :=\n  stieltjesFunctionAux_eq hf a r\n\n"}
{"name":"ProbabilityTheory.IsMeasurableRatCDF.stieltjesFunction_nonneg","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : ProbabilityTheory.IsMeasurableRatCDF f\na : α\nr : Real\n⊢ LE.le 0 (↑(hf.stieltjesFunction a) r)","decl":"lemma IsMeasurableRatCDF.stieltjesFunction_nonneg (a : α) (r : ℝ) : 0 ≤ hf.stieltjesFunction a r :=\n  stieltjesFunctionAux_nonneg hf a r\n\n"}
{"name":"ProbabilityTheory.IsMeasurableRatCDF.stieltjesFunction_le_one","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : ProbabilityTheory.IsMeasurableRatCDF f\na : α\nx : Real\n⊢ LE.le (↑(hf.stieltjesFunction a) x) 1","decl":"lemma IsMeasurableRatCDF.stieltjesFunction_le_one (a : α) (x : ℝ) :\n    hf.stieltjesFunction a x ≤ 1 := by\n  obtain ⟨r, hrx⟩ := exists_rat_gt x\n  rw [← StieltjesFunction.iInf_rat_gt_eq]\n  simp_rw [IsMeasurableRatCDF.stieltjesFunction_eq]\n  refine ciInf_le_of_le ?_ ?_ (hf.le_one _ _)\n  · refine ⟨0, fun z ↦ ?_⟩; rintro ⟨u, rfl⟩; exact hf.nonneg a _\n  · exact ⟨r, hrx⟩\n\n"}
{"name":"ProbabilityTheory.IsMeasurableRatCDF.tendsto_stieltjesFunction_atBot","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : ProbabilityTheory.IsMeasurableRatCDF f\na : α\n⊢ Filter.Tendsto (↑(hf.stieltjesFunction a)) Filter.atBot (nhds 0)","decl":"lemma IsMeasurableRatCDF.tendsto_stieltjesFunction_atBot (a : α) :\n    Tendsto (hf.stieltjesFunction a) atBot (𝓝 0) := by\n  have h_exists : ∀ x : ℝ, ∃ q : ℚ, x < q ∧ ↑q < x + 1 := fun x ↦ exists_rat_btwn (lt_add_one x)\n  let qs : ℝ → ℚ := fun x ↦ (h_exists x).choose\n  have hqs_tendsto : Tendsto qs atBot atBot := by\n    rw [tendsto_atBot_atBot]\n    refine fun q ↦ ⟨q - 1, fun y hy ↦ ?_⟩\n    have h_le : ↑(qs y) ≤ (q : ℝ) - 1 + 1 :=\n      (h_exists y).choose_spec.2.le.trans (add_le_add hy le_rfl)\n    rw [sub_add_cancel] at h_le\n    exact mod_cast h_le\n  refine tendsto_of_tendsto_of_tendsto_of_le_of_le tendsto_const_nhds\n    ((hf.tendsto_atBot_zero a).comp hqs_tendsto) (stieltjesFunction_nonneg hf a) fun x ↦ ?_\n  rw [Function.comp_apply, ← stieltjesFunction_eq hf]\n  exact (hf.stieltjesFunction a).mono (h_exists x).choose_spec.1.le\n\n"}
{"name":"ProbabilityTheory.IsMeasurableRatCDF.tendsto_stieltjesFunction_atTop","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : ProbabilityTheory.IsMeasurableRatCDF f\na : α\n⊢ Filter.Tendsto (↑(hf.stieltjesFunction a)) Filter.atTop (nhds 1)","decl":"lemma IsMeasurableRatCDF.tendsto_stieltjesFunction_atTop (a : α) :\n    Tendsto (hf.stieltjesFunction a) atTop (𝓝 1) := by\n  have h_exists : ∀ x : ℝ, ∃ q : ℚ, x - 1 < q ∧ ↑q < x := fun x ↦ exists_rat_btwn (sub_one_lt x)\n  let qs : ℝ → ℚ := fun x ↦ (h_exists x).choose\n  have hqs_tendsto : Tendsto qs atTop atTop := by\n    rw [tendsto_atTop_atTop]\n    refine fun q ↦ ⟨q + 1, fun y hy ↦ ?_⟩\n    have h_le : y - 1 ≤ qs y := (h_exists y).choose_spec.1.le\n    rw [sub_le_iff_le_add] at h_le\n    exact_mod_cast le_of_add_le_add_right (hy.trans h_le)\n  refine tendsto_of_tendsto_of_tendsto_of_le_of_le ((hf.tendsto_atTop_one a).comp hqs_tendsto)\n      tendsto_const_nhds ?_ (stieltjesFunction_le_one hf a)\n  intro x\n  rw [Function.comp_apply, ← stieltjesFunction_eq hf]\n  exact (hf.stieltjesFunction a).mono (le_of_lt (h_exists x).choose_spec.2)\n\n"}
{"name":"ProbabilityTheory.IsMeasurableRatCDF.measurable_stieltjesFunction","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : ProbabilityTheory.IsMeasurableRatCDF f\nx : Real\n⊢ Measurable fun a => ↑(hf.stieltjesFunction a) x","decl":"lemma IsMeasurableRatCDF.measurable_stieltjesFunction (x : ℝ) :\n    Measurable fun a ↦ hf.stieltjesFunction a x := by\n  have : (fun a ↦ hf.stieltjesFunction a x) = fun a ↦ ⨅ r : { r' : ℚ // x < r' }, f a ↑r := by\n    ext1 a\n    rw [← StieltjesFunction.iInf_rat_gt_eq]\n    congr with q\n    rw [stieltjesFunction_eq]\n  rw [this]\n  exact .iInf (fun q ↦ hf.measurable.eval)\n\n"}
{"name":"ProbabilityTheory.IsMeasurableRatCDF.stronglyMeasurable_stieltjesFunction","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : ProbabilityTheory.IsMeasurableRatCDF f\nx : Real\n⊢ MeasureTheory.StronglyMeasurable fun a => ↑(hf.stieltjesFunction a) x","decl":"lemma IsMeasurableRatCDF.stronglyMeasurable_stieltjesFunction (x : ℝ) :\n    StronglyMeasurable fun a ↦ hf.stieltjesFunction a x :=\n  (measurable_stieltjesFunction hf x).stronglyMeasurable\n\n"}
{"name":"ProbabilityTheory.IsMeasurableRatCDF.measure_stieltjesFunction_Iic","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : ProbabilityTheory.IsMeasurableRatCDF f\na : α\nx : Real\n⊢ Eq ((hf.stieltjesFunction a).measure (Set.Iic x)) (ENNReal.ofReal (↑(hf.stieltjesFunction a) x))","decl":"lemma IsMeasurableRatCDF.measure_stieltjesFunction_Iic (a : α) (x : ℝ) :\n    (hf.stieltjesFunction a).measure (Iic x) = ENNReal.ofReal (hf.stieltjesFunction a x) := by\n  rw [← sub_zero (hf.stieltjesFunction a x)]\n  exact (hf.stieltjesFunction a).measure_Iic (tendsto_stieltjesFunction_atBot hf a) _\n\n"}
{"name":"ProbabilityTheory.IsMeasurableRatCDF.measure_stieltjesFunction_univ","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : ProbabilityTheory.IsMeasurableRatCDF f\na : α\n⊢ Eq ((hf.stieltjesFunction a).measure Set.univ) 1","decl":"lemma IsMeasurableRatCDF.measure_stieltjesFunction_univ (a : α) :\n    (hf.stieltjesFunction a).measure univ = 1 := by\n  rw [← ENNReal.ofReal_one, ← sub_zero (1 : ℝ)]\n  exact StieltjesFunction.measure_univ _ (tendsto_stieltjesFunction_atBot hf a)\n    (tendsto_stieltjesFunction_atTop hf a)\n\n"}
{"name":"ProbabilityTheory.IsMeasurableRatCDF.instIsProbabilityMeasure_stieltjesFunction","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : ProbabilityTheory.IsMeasurableRatCDF f\na : α\n⊢ MeasureTheory.IsProbabilityMeasure (hf.stieltjesFunction a).measure","decl":"instance IsMeasurableRatCDF.instIsProbabilityMeasure_stieltjesFunction (a : α) :\n    IsProbabilityMeasure (hf.stieltjesFunction a).measure :=\n  ⟨measure_stieltjesFunction_univ hf a⟩\n\n"}
{"name":"ProbabilityTheory.IsMeasurableRatCDF.measurable_measure_stieltjesFunction","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : ProbabilityTheory.IsMeasurableRatCDF f\n⊢ Measurable fun a => (hf.stieltjesFunction a).measure","decl":"lemma IsMeasurableRatCDF.measurable_measure_stieltjesFunction :\n    Measurable fun a ↦ (hf.stieltjesFunction a).measure := by\n  apply_rules [StieltjesFunction.measurable_measure, measurable_stieltjesFunction,\n    tendsto_stieltjesFunction_atBot, tendsto_stieltjesFunction_atTop]\n\n"}
{"name":"ProbabilityTheory.stieltjesOfMeasurableRat_eq","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : Measurable f\na : α\nr : Rat\n⊢ Eq (↑(ProbabilityTheory.stieltjesOfMeasurableRat f hf a) ↑r) (ProbabilityTheory.toRatCDF f a r)","decl":"lemma stieltjesOfMeasurableRat_eq (hf : Measurable f) (a : α) (r : ℚ) :\n    stieltjesOfMeasurableRat f hf a r = toRatCDF f a r :=\n  IsMeasurableRatCDF.stieltjesFunction_eq _ a r\n\n"}
{"name":"ProbabilityTheory.stieltjesOfMeasurableRat_unit_prod","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : Measurable f\na : α\n⊢ Eq (ProbabilityTheory.stieltjesOfMeasurableRat (fun p => f p.2) ⋯ { fst := Unit.unit, snd := a }) (ProbabilityTheory.stieltjesOfMeasurableRat f hf a)","decl":"lemma stieltjesOfMeasurableRat_unit_prod (hf : Measurable f) (a : α) :\n    stieltjesOfMeasurableRat (fun (p : Unit × α) ↦ f p.2) (hf.comp measurable_snd) ((), a)\n      = stieltjesOfMeasurableRat f hf a := by\n  simp_rw [stieltjesOfMeasurableRat,IsMeasurableRatCDF.stieltjesFunction,\n    ← IsMeasurableRatCDF.stieltjesFunctionAux_unit_prod a]\n  congr with x\n  congr 1 with p : 1\n  cases p with\n  | mk _ b => rw [← toRatCDF_unit_prod b]\n\n"}
{"name":"ProbabilityTheory.stieltjesOfMeasurableRat_nonneg","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : Measurable f\na : α\nr : Real\n⊢ LE.le 0 (↑(ProbabilityTheory.stieltjesOfMeasurableRat f hf a) r)","decl":"lemma stieltjesOfMeasurableRat_nonneg (hf : Measurable f) (a : α) (r : ℝ) :\n    0 ≤ stieltjesOfMeasurableRat f hf a r := IsMeasurableRatCDF.stieltjesFunction_nonneg _ a r\n\n"}
{"name":"ProbabilityTheory.stieltjesOfMeasurableRat_le_one","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : Measurable f\na : α\nx : Real\n⊢ LE.le (↑(ProbabilityTheory.stieltjesOfMeasurableRat f hf a) x) 1","decl":"lemma stieltjesOfMeasurableRat_le_one (hf : Measurable f) (a : α) (x : ℝ) :\n    stieltjesOfMeasurableRat f hf a x ≤ 1 := IsMeasurableRatCDF.stieltjesFunction_le_one _ a x\n\n"}
{"name":"ProbabilityTheory.tendsto_stieltjesOfMeasurableRat_atBot","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : Measurable f\na : α\n⊢ Filter.Tendsto (↑(ProbabilityTheory.stieltjesOfMeasurableRat f hf a)) Filter.atBot (nhds 0)","decl":"lemma tendsto_stieltjesOfMeasurableRat_atBot (hf : Measurable f) (a : α) :\n    Tendsto (stieltjesOfMeasurableRat f hf a) atBot (𝓝 0) :=\n  IsMeasurableRatCDF.tendsto_stieltjesFunction_atBot _ a\n\n"}
{"name":"ProbabilityTheory.tendsto_stieltjesOfMeasurableRat_atTop","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : Measurable f\na : α\n⊢ Filter.Tendsto (↑(ProbabilityTheory.stieltjesOfMeasurableRat f hf a)) Filter.atTop (nhds 1)","decl":"lemma tendsto_stieltjesOfMeasurableRat_atTop (hf : Measurable f) (a : α) :\n    Tendsto (stieltjesOfMeasurableRat f hf a) atTop (𝓝 1) :=\n  IsMeasurableRatCDF.tendsto_stieltjesFunction_atTop _ a\n\n"}
{"name":"ProbabilityTheory.measurable_stieltjesOfMeasurableRat","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : Measurable f\nx : Real\n⊢ Measurable fun a => ↑(ProbabilityTheory.stieltjesOfMeasurableRat f hf a) x","decl":"lemma measurable_stieltjesOfMeasurableRat (hf : Measurable f) (x : ℝ) :\n    Measurable fun a ↦ stieltjesOfMeasurableRat f hf a x :=\n  IsMeasurableRatCDF.measurable_stieltjesFunction _ x\n\n"}
{"name":"ProbabilityTheory.stronglyMeasurable_stieltjesOfMeasurableRat","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : Measurable f\nx : Real\n⊢ MeasureTheory.StronglyMeasurable fun a => ↑(ProbabilityTheory.stieltjesOfMeasurableRat f hf a) x","decl":"lemma stronglyMeasurable_stieltjesOfMeasurableRat (hf : Measurable f) (x : ℝ) :\n    StronglyMeasurable fun a ↦ stieltjesOfMeasurableRat f hf a x :=\n  IsMeasurableRatCDF.stronglyMeasurable_stieltjesFunction _ x\n\n"}
{"name":"ProbabilityTheory.measure_stieltjesOfMeasurableRat_Iic","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : Measurable f\na : α\nx : Real\n⊢ Eq ((ProbabilityTheory.stieltjesOfMeasurableRat f hf a).measure (Set.Iic x)) (ENNReal.ofReal (↑(ProbabilityTheory.stieltjesOfMeasurableRat f hf a) x))","decl":"lemma measure_stieltjesOfMeasurableRat_Iic (hf : Measurable f) (a : α) (x : ℝ) :\n    (stieltjesOfMeasurableRat f hf a).measure (Iic x)\n      = ENNReal.ofReal (stieltjesOfMeasurableRat f hf a x) :=\n  IsMeasurableRatCDF.measure_stieltjesFunction_Iic _ _ _\n\n"}
{"name":"ProbabilityTheory.measure_stieltjesOfMeasurableRat_univ","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : Measurable f\na : α\n⊢ Eq ((ProbabilityTheory.stieltjesOfMeasurableRat f hf a).measure Set.univ) 1","decl":"lemma measure_stieltjesOfMeasurableRat_univ (hf : Measurable f) (a : α) :\n    (stieltjesOfMeasurableRat f hf a).measure univ = 1 :=\n  IsMeasurableRatCDF.measure_stieltjesFunction_univ _ _\n\n"}
{"name":"ProbabilityTheory.instIsProbabilityMeasure_stieltjesOfMeasurableRat","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : Measurable f\na : α\n⊢ MeasureTheory.IsProbabilityMeasure (ProbabilityTheory.stieltjesOfMeasurableRat f hf a).measure","decl":"instance instIsProbabilityMeasure_stieltjesOfMeasurableRat\n    (hf : Measurable f) (a : α) :\n    IsProbabilityMeasure (stieltjesOfMeasurableRat f hf a).measure :=\n  IsMeasurableRatCDF.instIsProbabilityMeasure_stieltjesFunction _ _\n\n"}
{"name":"ProbabilityTheory.measurable_measure_stieltjesOfMeasurableRat","module":"Mathlib.Probability.Kernel.Disintegration.MeasurableStieltjes","initialProofState":"α : Type u_1\nf : α → Rat → Real\ninst✝ : MeasurableSpace α\nhf : Measurable f\n⊢ Measurable fun a => (ProbabilityTheory.stieltjesOfMeasurableRat f hf a).measure","decl":"lemma measurable_measure_stieltjesOfMeasurableRat (hf : Measurable f) :\n    Measurable fun a ↦ (stieltjesOfMeasurableRat f hf a).measure :=\n  IsMeasurableRatCDF.measurable_measure_stieltjesFunction _\n\n"}
