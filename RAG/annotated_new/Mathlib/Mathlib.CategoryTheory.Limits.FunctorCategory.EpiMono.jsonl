{"name":"CategoryTheory.instMonoAppOfFunctor","module":"Mathlib.CategoryTheory.Limits.FunctorCategory.EpiMono","initialProofState":"K : Type u\ninst✝³ : CategoryTheory.Category.{v, u} K\nC : Type u'\ninst✝² : CategoryTheory.Category.{v', u'} C\nF G : CategoryTheory.Functor K C\nf : Quiver.Hom F G\ninst✝¹ : CategoryTheory.Limits.HasPullbacks C\ninst✝ : CategoryTheory.Mono f\nk : K\n⊢ CategoryTheory.Mono (f.app k)","decl":"instance [Mono f] (k : K) : Mono (f.app k) :=\n  inferInstanceAs (Mono (((evaluation K C).obj k).map f))\n\n"}
{"name":"CategoryTheory.NatTrans.mono_iff_mono_app","module":"Mathlib.CategoryTheory.Limits.FunctorCategory.EpiMono","initialProofState":"K : Type u\ninst✝² : CategoryTheory.Category.{v, u} K\nC : Type u'\ninst✝¹ : CategoryTheory.Category.{v', u'} C\nF G : CategoryTheory.Functor K C\nf : Quiver.Hom F G\ninst✝ : CategoryTheory.Limits.HasPullbacks C\n⊢ Iff (CategoryTheory.Mono f) (∀ (k : K), CategoryTheory.Mono (f.app k))","decl":"lemma NatTrans.mono_iff_mono_app : Mono f ↔ ∀ (k : K), Mono (f.app k) :=\n  ⟨fun _ ↦ inferInstance, fun _ ↦ mono_of_mono_app _⟩\n\n"}
{"name":"CategoryTheory.instMonoFunctorWhiskerRightOfPreservesMonomorphisms","module":"Mathlib.CategoryTheory.Limits.FunctorCategory.EpiMono","initialProofState":"K : Type u\ninst✝⁴ : CategoryTheory.Category.{v, u} K\nC : Type u'\ninst✝³ : CategoryTheory.Category.{v', u'} C\nD : Type u''\ninst✝² : CategoryTheory.Category.{v'', u''} D\nF G : CategoryTheory.Functor K C\nf : Quiver.Hom F G\ninst✝¹ : CategoryTheory.Mono f\nH : CategoryTheory.Functor C D\ninst✝ : H.PreservesMonomorphisms\n⊢ CategoryTheory.Mono (CategoryTheory.whiskerRight f H)","decl":"instance [Mono f] (H : C ⥤ D) [H.PreservesMonomorphisms] :\n    Mono (whiskerRight f H) := by\n  have : ∀ X, Mono ((whiskerRight f H).app X) := by intros; dsimp; infer_instance\n  apply NatTrans.mono_of_mono_app\n\n"}
{"name":"CategoryTheory.instEpiAppOfFunctor","module":"Mathlib.CategoryTheory.Limits.FunctorCategory.EpiMono","initialProofState":"K : Type u\ninst✝³ : CategoryTheory.Category.{v, u} K\nC : Type u'\ninst✝² : CategoryTheory.Category.{v', u'} C\nF G : CategoryTheory.Functor K C\nf : Quiver.Hom F G\ninst✝¹ : CategoryTheory.Limits.HasPushouts C\ninst✝ : CategoryTheory.Epi f\nk : K\n⊢ CategoryTheory.Epi (f.app k)","decl":"instance [Epi f] (k : K) : Epi (f.app k) :=\n  inferInstanceAs (Epi (((evaluation K C).obj k).map f))\n\n"}
{"name":"CategoryTheory.NatTrans.epi_iff_epi_app","module":"Mathlib.CategoryTheory.Limits.FunctorCategory.EpiMono","initialProofState":"K : Type u\ninst✝² : CategoryTheory.Category.{v, u} K\nC : Type u'\ninst✝¹ : CategoryTheory.Category.{v', u'} C\nF G : CategoryTheory.Functor K C\nf : Quiver.Hom F G\ninst✝ : CategoryTheory.Limits.HasPushouts C\n⊢ Iff (CategoryTheory.Epi f) (∀ (k : K), CategoryTheory.Epi (f.app k))","decl":"lemma NatTrans.epi_iff_epi_app : Epi f ↔ ∀ (k : K), Epi (f.app k) :=\n  ⟨fun _ ↦ inferInstance, fun _ ↦ epi_of_epi_app _⟩\n\n"}
{"name":"CategoryTheory.instEpiFunctorWhiskerRightOfPreservesEpimorphisms","module":"Mathlib.CategoryTheory.Limits.FunctorCategory.EpiMono","initialProofState":"K : Type u\ninst✝⁴ : CategoryTheory.Category.{v, u} K\nC : Type u'\ninst✝³ : CategoryTheory.Category.{v', u'} C\nD : Type u''\ninst✝² : CategoryTheory.Category.{v'', u''} D\nF G : CategoryTheory.Functor K C\nf : Quiver.Hom F G\ninst✝¹ : CategoryTheory.Epi f\nH : CategoryTheory.Functor C D\ninst✝ : H.PreservesEpimorphisms\n⊢ CategoryTheory.Epi (CategoryTheory.whiskerRight f H)","decl":"instance [Epi f] (H : C ⥤ D) [H.PreservesEpimorphisms] :\n    Epi (whiskerRight f H) := by\n  have : ∀ X, Epi ((whiskerRight f H).app X) := by intros; dsimp; infer_instance\n  apply NatTrans.epi_of_epi_app\n\n"}
