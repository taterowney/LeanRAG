{"name":"Part.mem_toFinset","module":"Mathlib.Data.Finset.PImage","initialProofState":"α : Type u_1\no : Part α\ninst✝ : Decidable o.Dom\nx : α\n⊢ Iff (Membership.mem o.toFinset x) (Membership.mem o x)","decl":"@[simp]\ntheorem mem_toFinset {o : Part α} [Decidable o.Dom] {x : α} : x ∈ o.toFinset ↔ x ∈ o := by\n  simp [toFinset]\n\n"}
{"name":"Part.toFinset_none","module":"Mathlib.Data.Finset.PImage","initialProofState":"α : Type u_1\ninst✝ : Decidable Part.none.Dom\n⊢ Eq Part.none.toFinset EmptyCollection.emptyCollection","decl":"@[simp]\ntheorem toFinset_none [Decidable (none : Part α).Dom] : none.toFinset = (∅ : Finset α) := by\n  simp [toFinset]\n\n"}
{"name":"Part.toFinset_some","module":"Mathlib.Data.Finset.PImage","initialProofState":"α : Type u_1\na : α\ninst✝ : Decidable (Part.some a).Dom\n⊢ Eq (Part.some a).toFinset (Singleton.singleton a)","decl":"@[simp]\ntheorem toFinset_some {a : α} [Decidable (some a).Dom] : (some a).toFinset = {a} := by\n  simp [toFinset]\n\n"}
{"name":"Part.coe_toFinset","module":"Mathlib.Data.Finset.PImage","initialProofState":"α : Type u_1\no : Part α\ninst✝ : Decidable o.Dom\n⊢ Eq (↑o.toFinset) (setOf fun x => Membership.mem o x)","decl":"@[simp]\ntheorem coe_toFinset (o : Part α) [Decidable o.Dom] : (o.toFinset : Set α) = { x | x ∈ o } :=\n  Set.ext fun _ => mem_toFinset\n\n"}
{"name":"Finset.mem_pimage","module":"Mathlib.Data.Finset.PImage","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : DecidableEq β\nf : PFun α β\ninst✝ : (x : α) → Decidable (f x).Dom\ns : Finset α\nb : β\n⊢ Iff (Membership.mem (Finset.pimage f s) b) (Exists fun a => And (Membership.mem s a) (Membership.mem (f a) b))","decl":"@[simp]\ntheorem mem_pimage : b ∈ s.pimage f ↔ ∃ a ∈ s, b ∈ f a := by\n  simp [pimage]\n\n"}
{"name":"Finset.coe_pimage","module":"Mathlib.Data.Finset.PImage","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : DecidableEq β\nf : PFun α β\ninst✝ : (x : α) → Decidable (f x).Dom\ns : Finset α\n⊢ Eq (↑(Finset.pimage f s)) (f.image ↑s)","decl":"@[simp, norm_cast]\ntheorem coe_pimage : (s.pimage f : Set β) = f.image s :=\n  Set.ext fun _ => mem_pimage\n\n"}
{"name":"Finset.pimage_some","module":"Mathlib.Data.Finset.PImage","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : DecidableEq β\ns : Finset α\nf : α → β\ninst✝ : (x : α) → Decidable (Part.some (f x)).Dom\n⊢ Eq (Finset.pimage (fun x => Part.some (f x)) s) (Finset.image f s)","decl":"@[simp]\ntheorem pimage_some (s : Finset α) (f : α → β) [∀ x, Decidable (Part.some <| f x).Dom] :\n    (s.pimage fun x => Part.some (f x)) = s.image f := by\n  ext\n  simp [eq_comm]\n\n"}
{"name":"Finset.pimage_congr","module":"Mathlib.Data.Finset.PImage","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : DecidableEq β\nf g : PFun α β\ninst✝¹ : (x : α) → Decidable (f x).Dom\ninst✝ : (x : α) → Decidable (g x).Dom\ns t : Finset α\nh₁ : Eq s t\nh₂ : ∀ (x : α), Membership.mem t x → Eq (f x) (g x)\n⊢ Eq (Finset.pimage f s) (Finset.pimage g t)","decl":"theorem pimage_congr (h₁ : s = t) (h₂ : ∀ x ∈ t, f x = g x) : s.pimage f = t.pimage g := by\n  subst s\n  ext y\n  -- Porting note: `← exists_prop` required because `∃ x ∈ s, p x` is defined differently\n  simp +contextual only [mem_pimage, ← exists_prop, h₂]\n\n"}
{"name":"Finset.pimage_eq_image_filter","module":"Mathlib.Data.Finset.PImage","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : DecidableEq β\nf : PFun α β\ninst✝ : (x : α) → Decidable (f x).Dom\ns : Finset α\n⊢ Eq (Finset.pimage f s) (Finset.image (fun x => (f ↑x).get ⋯) (Finset.filter (fun x => (f x).Dom) s).attach)","decl":"/-- Rewrite `s.pimage f` in terms of `Finset.filter`, `Finset.attach`, and `Finset.image`. -/\ntheorem pimage_eq_image_filter : s.pimage f =\n    (filter (fun x => (f x).Dom) s).attach.image\n      fun x : { x // x ∈ filter (fun x => (f x).Dom) s } =>\n        (f x).get (mem_filter.mp x.coe_prop).2 := by\n  ext x\n  simp [Part.mem_eq, And.exists]\n  -- Porting note: `← exists_prop` required because `∃ x ∈ s, p x` is defined differently\n  simp only [← exists_prop]\n\n"}
{"name":"Finset.pimage_union","module":"Mathlib.Data.Finset.PImage","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : DecidableEq β\nf : PFun α β\ninst✝¹ : (x : α) → Decidable (f x).Dom\ns t : Finset α\ninst✝ : DecidableEq α\n⊢ Eq (Finset.pimage f (Union.union s t)) (Union.union (Finset.pimage f s) (Finset.pimage f t))","decl":"theorem pimage_union [DecidableEq α] : (s ∪ t).pimage f = s.pimage f ∪ t.pimage f :=\n  coe_inj.1 <| by\n  simp only [coe_pimage, coe_union, ← PFun.image_union]\n\n"}
{"name":"Finset.pimage_empty","module":"Mathlib.Data.Finset.PImage","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : DecidableEq β\nf : PFun α β\ninst✝ : (x : α) → Decidable (f x).Dom\n⊢ Eq (Finset.pimage f EmptyCollection.emptyCollection) EmptyCollection.emptyCollection","decl":"@[simp]\ntheorem pimage_empty : pimage f ∅ = ∅ := by\n  ext\n  simp\n\n"}
{"name":"Finset.pimage_subset","module":"Mathlib.Data.Finset.PImage","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : DecidableEq β\nf : PFun α β\ninst✝ : (x : α) → Decidable (f x).Dom\ns : Finset α\nt : Finset β\n⊢ Iff (HasSubset.Subset (Finset.pimage f s) t) (∀ (x : α), Membership.mem s x → ∀ (y : β), Membership.mem (f x) y → Membership.mem t y)","decl":"theorem pimage_subset {t : Finset β} : s.pimage f ⊆ t ↔ ∀ x ∈ s, ∀ y ∈ f x, y ∈ t := by\n  simp [subset_iff, @forall_swap _ β]\n\n"}
{"name":"Finset.pimage_mono","module":"Mathlib.Data.Finset.PImage","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : DecidableEq β\nf : PFun α β\ninst✝ : (x : α) → Decidable (f x).Dom\ns t : Finset α\nh : HasSubset.Subset s t\n⊢ HasSubset.Subset (Finset.pimage f s) (Finset.pimage f t)","decl":"@[mono]\ntheorem pimage_mono (h : s ⊆ t) : s.pimage f ⊆ t.pimage f :=\n  pimage_subset.2 fun x hx _ hy => mem_pimage.2 ⟨x, h hx, hy⟩\n\n"}
{"name":"Finset.pimage_inter","module":"Mathlib.Data.Finset.PImage","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝² : DecidableEq β\nf : PFun α β\ninst✝¹ : (x : α) → Decidable (f x).Dom\ns t : Finset α\ninst✝ : DecidableEq α\n⊢ HasSubset.Subset (Finset.pimage f (Inter.inter s t)) (Inter.inter (Finset.pimage f s) (Finset.pimage f t))","decl":"theorem pimage_inter [DecidableEq α] : (s ∩ t).pimage f ⊆ s.pimage f ∩ t.pimage f := by\n  simp only [← coe_subset, coe_pimage, coe_inter, PFun.image_inter]\n\n"}
