{"name":"DirichletCharacter.mulEquiv_units","module":"Mathlib.NumberTheory.DirichletCharacter.Orthogonality","initialProofState":"R : Type u_1\ninst✝² : CommRing R\nn : Nat\ninst✝¹ : NeZero n\ninst✝ : HasEnoughRootsOfUnity R (Monoid.exponent (Units (ZMod n)))\n⊢ Nonempty (MulEquiv (DirichletCharacter R n) (Units (ZMod n)))","decl":"/-- The group of Dirichlet characters mod `n` with values in a ring `R` that has enough\nroots of unity is (noncanonically) isomorphic to `(ZMod n)ˣ`. -/\nlemma mulEquiv_units : Nonempty (DirichletCharacter R n ≃* (ZMod n)ˣ) :=\n  MulChar.mulEquiv_units ..\n\n"}
{"name":"DirichletCharacter.card_eq_totient_of_hasEnoughRootsOfUnity","module":"Mathlib.NumberTheory.DirichletCharacter.Orthogonality","initialProofState":"R : Type u_1\ninst✝² : CommRing R\nn : Nat\ninst✝¹ : NeZero n\ninst✝ : HasEnoughRootsOfUnity R (Monoid.exponent (Units (ZMod n)))\n⊢ Eq (Nat.card (DirichletCharacter R n)) n.totient","decl":"/-- There are `n.totient` Dirichlet characters mod `n` with values in a ring that has enough\nroots of unity. -/\nlemma card_eq_totient_of_hasEnoughRootsOfUnity :\n    Nat.card (DirichletCharacter R n) = n.totient := by\n  rw [← ZMod.card_units_eq_totient n, ← Nat.card_eq_fintype_card]\n  exact Nat.card_congr (mulEquiv_units R n).some.toEquiv\n\n"}
{"name":"DirichletCharacter.exists_apply_ne_one_of_hasEnoughRootsOfUnity","module":"Mathlib.NumberTheory.DirichletCharacter.Orthogonality","initialProofState":"R : Type u_1\ninst✝³ : CommRing R\nn : Nat\ninst✝² : NeZero n\ninst✝¹ : HasEnoughRootsOfUnity R (Monoid.exponent (Units (ZMod n)))\ninst✝ : Nontrivial R\na : ZMod n\nha : Ne a 1\n⊢ Exists fun χ => Ne (χ a) 1","decl":"/-- If `R` is a ring that has enough roots of unity and `n ≠ 0`, then for each\n`a ≠ 1` in `ZMod n`, there exists a Dirichlet character `χ` mod `n` with values in `R`\nsuch that `χ a ≠ 1`. -/\ntheorem exists_apply_ne_one_of_hasEnoughRootsOfUnity [Nontrivial R] ⦃a : ZMod n⦄ (ha : a ≠ 1) :\n    ∃ χ : DirichletCharacter R n, χ a ≠ 1 :=\n  MulChar.exists_apply_ne_one_of_hasEnoughRootsOfUnity (ZMod n) R ha\n\n"}
{"name":"DirichletCharacter.sum_characters_eq_zero","module":"Mathlib.NumberTheory.DirichletCharacter.Orthogonality","initialProofState":"R : Type u_1\ninst✝³ : CommRing R\nn : Nat\ninst✝² : NeZero n\ninst✝¹ : HasEnoughRootsOfUnity R (Monoid.exponent (Units (ZMod n)))\ninst✝ : IsDomain R\na : ZMod n\nha : Ne a 1\n⊢ Eq (Finset.univ.sum fun χ => χ a) 0","decl":"/-- If `R` is an integral domain that has enough roots of unity and `n ≠ 0`, then\nfor each `a ≠ 1` in `ZMod n`, the sum of `χ a` over all Dirichlet characters mod `n`\nwith values in `R` vanishes. -/\ntheorem sum_characters_eq_zero ⦃a : ZMod n⦄ (ha : a ≠ 1) :\n    ∑ χ : DirichletCharacter R n, χ a = 0 := by\n  obtain ⟨χ, hχ⟩ := exists_apply_ne_one_of_hasEnoughRootsOfUnity R ha\n  refine eq_zero_of_mul_eq_self_left hχ ?_\n  simp only [Finset.mul_sum, ← MulChar.mul_apply]\n  exact Fintype.sum_bijective _ (Group.mulLeft_bijective χ) _ _ fun χ' ↦ rfl\n\n"}
{"name":"DirichletCharacter.sum_characters_eq","module":"Mathlib.NumberTheory.DirichletCharacter.Orthogonality","initialProofState":"R : Type u_1\ninst✝³ : CommRing R\nn : Nat\ninst✝² : NeZero n\ninst✝¹ : HasEnoughRootsOfUnity R (Monoid.exponent (Units (ZMod n)))\ninst✝ : IsDomain R\na : ZMod n\n⊢ Eq (Finset.univ.sum fun χ => χ a) (ite (Eq a 1) (↑n.totient) 0)","decl":"/-- If `R` is an integral domain that has enough roots of unity and `n ≠ 0`, then\nfor `a` in `ZMod n`, the sum of `χ a` over all Dirichlet characters mod `n`\nwith values in `R` vanishes if `a ≠ 1` and has the value `n.totient` if `a = 1`. -/\ntheorem sum_characters_eq (a : ZMod n) :\n    ∑ χ : DirichletCharacter R n, χ a = if a = 1 then (n.totient : R) else 0 := by\n  split_ifs with ha\n  · simpa only [ha, map_one, Finset.sum_const, Finset.card_univ, nsmul_eq_mul, mul_one,\n      ← Nat.card_eq_fintype_card]\n      using congrArg Nat.cast <| card_eq_totient_of_hasEnoughRootsOfUnity R n\n  · exact sum_characters_eq_zero R ha\n\n"}
{"name":"DirichletCharacter.sum_char_inv_mul_char_eq","module":"Mathlib.NumberTheory.DirichletCharacter.Orthogonality","initialProofState":"R : Type u_1\ninst✝³ : CommRing R\nn : Nat\ninst✝² : NeZero n\ninst✝¹ : HasEnoughRootsOfUnity R (Monoid.exponent (Units (ZMod n)))\ninst✝ : IsDomain R\na : ZMod n\nha : IsUnit a\nb : ZMod n\n⊢ Eq (Finset.univ.sum fun χ => HMul.hMul (χ (Inv.inv a)) (χ b)) (ite (Eq a b) (↑n.totient) 0)","decl":"/-- If `R` is an integral domain that has enough roots of unity and `n ≠ 0`, then for `a` and `b`\nin `ZMod n` with `a` a unit, the sum of `χ a⁻¹ * χ b` over all Dirichlet characters\nmod `n` with values in `R` vanishes if `a ≠ b` and has the value `n.totient` if `a = b`. -/\ntheorem sum_char_inv_mul_char_eq {a : ZMod n} (ha : IsUnit a) (b : ZMod n) :\n    ∑ χ : DirichletCharacter R n, χ a⁻¹ * χ b = if a = b then (n.totient : R) else 0 := by\n  simp only [← map_mul, sum_characters_eq, ZMod.inv_mul_eq_one_of_isUnit ha]\n\n"}
