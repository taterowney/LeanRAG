{"name":"MeasureTheory.eLpNorm'_trim","module":"Mathlib.MeasureTheory.Function.LpSeminorm.Trim","initialProofState":"α : Type u_1\nE : Type u_2\nm m0 : MeasurableSpace α\nq : Real\nμ : MeasureTheory.Measure α\ninst✝ : NormedAddCommGroup E\nhm : LE.le m m0\nf : α → E\nhf : MeasureTheory.StronglyMeasurable f\n⊢ Eq (MeasureTheory.eLpNorm' f q (μ.trim hm)) (MeasureTheory.eLpNorm' f q μ)","decl":"theorem eLpNorm'_trim (hm : m ≤ m0) {f : α → E} (hf : StronglyMeasurable[m] f) :\n    eLpNorm' f q (μ.trim hm) = eLpNorm' f q μ := by\n  simp_rw [eLpNorm']\n  congr 1\n  refine lintegral_trim hm ?_\n  refine @Measurable.pow_const _ _ _ _ _ _ _ m _ (@Measurable.coe_nnreal_ennreal _ m _ ?_) q\n  apply @StronglyMeasurable.measurable\n  exact @StronglyMeasurable.nnnorm α m _ _ _ hf\n\n"}
{"name":"MeasureTheory.limsup_trim","module":"Mathlib.MeasureTheory.Function.LpSeminorm.Trim","initialProofState":"α : Type u_1\nm m0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\nhm : LE.le m m0\nf : α → ENNReal\nhf : Measurable f\n⊢ Eq (Filter.limsup f (MeasureTheory.ae (μ.trim hm))) (Filter.limsup f (MeasureTheory.ae μ))","decl":"theorem limsup_trim (hm : m ≤ m0) {f : α → ℝ≥0∞} (hf : Measurable[m] f) :\n    limsup f (ae (μ.trim hm)) = limsup f (ae μ) := by\n  simp_rw [limsup_eq]\n  suffices h_set_eq : { a : ℝ≥0∞ | ∀ᵐ n ∂μ.trim hm, f n ≤ a } = { a : ℝ≥0∞ | ∀ᵐ n ∂μ, f n ≤ a } by\n    rw [h_set_eq]\n  ext1 a\n  suffices h_meas_eq : μ { x | ¬f x ≤ a } = μ.trim hm { x | ¬f x ≤ a } by\n    simp_rw [Set.mem_setOf_eq, ae_iff, h_meas_eq]\n  refine (trim_measurableSet_eq hm ?_).symm\n  refine @MeasurableSet.compl _ _ m (@measurableSet_le ℝ≥0∞ _ _ _ _ m _ _ _ _ _ hf ?_)\n  exact @measurable_const _ _ _ m _\n\n"}
{"name":"MeasureTheory.essSup_trim","module":"Mathlib.MeasureTheory.Function.LpSeminorm.Trim","initialProofState":"α : Type u_1\nm m0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\nhm : LE.le m m0\nf : α → ENNReal\nhf : Measurable f\n⊢ Eq (essSup f (μ.trim hm)) (essSup f μ)","decl":"theorem essSup_trim (hm : m ≤ m0) {f : α → ℝ≥0∞} (hf : Measurable[m] f) :\n    essSup f (μ.trim hm) = essSup f μ := by\n  simp_rw [essSup]\n  exact limsup_trim hm hf\n\n"}
{"name":"MeasureTheory.eLpNormEssSup_trim","module":"Mathlib.MeasureTheory.Function.LpSeminorm.Trim","initialProofState":"α : Type u_1\nE : Type u_2\nm m0 : MeasurableSpace α\nμ : MeasureTheory.Measure α\ninst✝ : NormedAddCommGroup E\nhm : LE.le m m0\nf : α → E\nhf : MeasureTheory.StronglyMeasurable f\n⊢ Eq (MeasureTheory.eLpNormEssSup f (μ.trim hm)) (MeasureTheory.eLpNormEssSup f μ)","decl":"theorem eLpNormEssSup_trim (hm : m ≤ m0) {f : α → E} (hf : StronglyMeasurable[m] f) :\n    eLpNormEssSup f (μ.trim hm) = eLpNormEssSup f μ :=\n  essSup_trim _ (@StronglyMeasurable.enorm _ m _ _ _ hf)\n\n"}
{"name":"MeasureTheory.eLpNorm_trim","module":"Mathlib.MeasureTheory.Function.LpSeminorm.Trim","initialProofState":"α : Type u_1\nE : Type u_2\nm m0 : MeasurableSpace α\np : ENNReal\nμ : MeasureTheory.Measure α\ninst✝ : NormedAddCommGroup E\nhm : LE.le m m0\nf : α → E\nhf : MeasureTheory.StronglyMeasurable f\n⊢ Eq (MeasureTheory.eLpNorm f p (μ.trim hm)) (MeasureTheory.eLpNorm f p μ)","decl":"theorem eLpNorm_trim (hm : m ≤ m0) {f : α → E} (hf : StronglyMeasurable[m] f) :\n    eLpNorm f p (μ.trim hm) = eLpNorm f p μ := by\n  by_cases h0 : p = 0\n  · simp [h0]\n  by_cases h_top : p = ∞\n  · simpa only [h_top, eLpNorm_exponent_top] using eLpNormEssSup_trim hm hf\n  simpa only [eLpNorm_eq_eLpNorm' h0 h_top] using eLpNorm'_trim hm hf\n\n"}
{"name":"MeasureTheory.eLpNorm_trim_ae","module":"Mathlib.MeasureTheory.Function.LpSeminorm.Trim","initialProofState":"α : Type u_1\nE : Type u_2\nm m0 : MeasurableSpace α\np : ENNReal\nμ : MeasureTheory.Measure α\ninst✝ : NormedAddCommGroup E\nhm : LE.le m m0\nf : α → E\nhf : MeasureTheory.AEStronglyMeasurable f (μ.trim hm)\n⊢ Eq (MeasureTheory.eLpNorm f p (μ.trim hm)) (MeasureTheory.eLpNorm f p μ)","decl":"theorem eLpNorm_trim_ae (hm : m ≤ m0) {f : α → E} (hf : AEStronglyMeasurable[m] f (μ.trim hm)) :\n    eLpNorm f p (μ.trim hm) = eLpNorm f p μ := by\n  rw [eLpNorm_congr_ae hf.ae_eq_mk, eLpNorm_congr_ae (ae_eq_of_ae_eq_trim hf.ae_eq_mk)]\n  exact eLpNorm_trim hm hf.stronglyMeasurable_mk\n\n"}
{"name":"MeasureTheory.memℒp_of_memℒp_trim","module":"Mathlib.MeasureTheory.Function.LpSeminorm.Trim","initialProofState":"α : Type u_1\nE : Type u_2\nm m0 : MeasurableSpace α\np : ENNReal\nμ : MeasureTheory.Measure α\ninst✝ : NormedAddCommGroup E\nhm : LE.le m m0\nf : α → E\nhf : MeasureTheory.Memℒp f p (μ.trim hm)\n⊢ MeasureTheory.Memℒp f p μ","decl":"theorem memℒp_of_memℒp_trim (hm : m ≤ m0) {f : α → E} (hf : Memℒp f p (μ.trim hm)) : Memℒp f p μ :=\n  ⟨aestronglyMeasurable_of_aestronglyMeasurable_trim hm hf.1,\n    (le_of_eq (eLpNorm_trim_ae hm hf.1).symm).trans_lt hf.2⟩\n\n"}
