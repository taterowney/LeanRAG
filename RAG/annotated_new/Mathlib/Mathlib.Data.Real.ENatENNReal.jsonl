{"name":"ENat.map_coe_nnreal","module":"Mathlib.Data.Real.ENatENNReal","initialProofState":"⊢ Eq (ENat.map Nat.cast) ENat.toENNReal","decl":"@[simp]\ntheorem map_coe_nnreal : ENat.map ((↑) : ℕ → ℝ≥0) = ((↑) : ℕ∞ → ℝ≥0∞) :=\n  rfl\n\n"}
{"name":"ENat.toENNRealOrderEmbedding_apply","module":"Mathlib.Data.Real.ENatENNReal","initialProofState":"⊢ Eq (⇑ENat.toENNRealOrderEmbedding) (WithTop.map Nat.cast)","decl":"/-- Coercion `ℕ∞ → ℝ≥0∞` as an `OrderEmbedding`. -/\n@[simps! (config := .asFn)]\ndef toENNRealOrderEmbedding : ℕ∞ ↪o ℝ≥0∞ :=\n  Nat.castOrderEmbedding.withTopMap\n\n"}
{"name":"ENat.toENNRealRingHom_apply","module":"Mathlib.Data.Real.ENatENNReal","initialProofState":"⊢ Eq (⇑ENat.toENNRealRingHom) ENat.toENNReal","decl":"/-- Coercion `ℕ∞ → ℝ≥0∞` as a ring homomorphism. -/\n@[simps! (config := .asFn)]\ndef toENNRealRingHom : ℕ∞ →+* ℝ≥0∞ :=\n  .ENatMap (Nat.castRingHom ℝ≥0) Nat.cast_injective\n\n"}
{"name":"ENat.toENNReal_top","module":"Mathlib.Data.Real.ENatENNReal","initialProofState":"⊢ Eq (↑Top.top) Top.top","decl":"@[simp, norm_cast]\ntheorem toENNReal_top : ((⊤ : ℕ∞) : ℝ≥0∞) = ⊤ :=\n  rfl\n\n"}
{"name":"ENat.toENNReal_coe","module":"Mathlib.Data.Real.ENatENNReal","initialProofState":"n : Nat\n⊢ Eq ↑↑n ↑n","decl":"@[simp, norm_cast]\ntheorem toENNReal_coe (n : ℕ) : ((n : ℕ∞) : ℝ≥0∞) = n :=\n  rfl\n\n"}
{"name":"ENat.toENNReal_ofNat","module":"Mathlib.Data.Real.ENatENNReal","initialProofState":"n : Nat\ninst✝ : n.AtLeastTwo\n⊢ Eq (↑(OfNat.ofNat n)) (OfNat.ofNat n)","decl":"@[simp, norm_cast]\ntheorem toENNReal_ofNat (n : ℕ) [n.AtLeastTwo] : ((ofNat(n) : ℕ∞) : ℝ≥0∞) = ofNat(n) :=\n  rfl\n\n"}
{"name":"ENat.toENNReal_inj","module":"Mathlib.Data.Real.ENatENNReal","initialProofState":"m n : ENat\n⊢ Iff (Eq ↑m ↑n) (Eq m n)","decl":"@[simp, norm_cast]\ntheorem toENNReal_inj : (m : ℝ≥0∞) = (n : ℝ≥0∞) ↔ m = n :=\n  toENNRealOrderEmbedding.eq_iff_eq\n\n"}
{"name":"ENat.toENNReal_coe_eq_iff","module":"Mathlib.Data.Real.ENatENNReal","initialProofState":"m n : ENat\n⊢ Iff (Eq ↑m ↑n) (Eq m n)","decl":"@[deprecated (since := \"2024-12-29\")] alias toENNReal_coe_eq_iff := toENNReal_inj\n\n"}
{"name":"ENat.toENNReal_le","module":"Mathlib.Data.Real.ENatENNReal","initialProofState":"m n : ENat\n⊢ Iff (LE.le ↑m ↑n) (LE.le m n)","decl":"@[simp, norm_cast]\ntheorem toENNReal_le : (m : ℝ≥0∞) ≤ n ↔ m ≤ n :=\n  toENNRealOrderEmbedding.le_iff_le\n\n"}
{"name":"ENat.toENNReal_lt","module":"Mathlib.Data.Real.ENatENNReal","initialProofState":"m n : ENat\n⊢ Iff (LT.lt ↑m ↑n) (LT.lt m n)","decl":"@[simp, norm_cast]\ntheorem toENNReal_lt : (m : ℝ≥0∞) < n ↔ m < n :=\n  toENNRealOrderEmbedding.lt_iff_lt\n\n"}
{"name":"ENat.toENNReal_mono","module":"Mathlib.Data.Real.ENatENNReal","initialProofState":"⊢ Monotone ENat.toENNReal","decl":"@[mono]\ntheorem toENNReal_mono : Monotone ((↑) : ℕ∞ → ℝ≥0∞) :=\n  toENNRealOrderEmbedding.monotone\n\n"}
{"name":"ENat.toENNReal_strictMono","module":"Mathlib.Data.Real.ENatENNReal","initialProofState":"⊢ StrictMono ENat.toENNReal","decl":"@[mono]\ntheorem toENNReal_strictMono : StrictMono ((↑) : ℕ∞ → ℝ≥0∞) :=\n  toENNRealOrderEmbedding.strictMono\n\n"}
{"name":"ENat.toENNReal_zero","module":"Mathlib.Data.Real.ENatENNReal","initialProofState":"⊢ Eq (↑0) 0","decl":"@[simp, norm_cast]\ntheorem toENNReal_zero : ((0 : ℕ∞) : ℝ≥0∞) = 0 :=\n  _root_.map_zero toENNRealRingHom\n\n"}
{"name":"ENat.toENNReal_add","module":"Mathlib.Data.Real.ENatENNReal","initialProofState":"m n : ENat\n⊢ Eq (↑(HAdd.hAdd m n)) (HAdd.hAdd ↑m ↑n)","decl":"@[simp, norm_cast]\ntheorem toENNReal_add (m n : ℕ∞) : ↑(m + n) = (m + n : ℝ≥0∞) :=\n  map_add toENNRealRingHom m n\n\n"}
{"name":"ENat.toENNReal_one","module":"Mathlib.Data.Real.ENatENNReal","initialProofState":"⊢ Eq (↑1) 1","decl":"@[simp, norm_cast]\ntheorem toENNReal_one : ((1 : ℕ∞) : ℝ≥0∞) = 1 :=\n  _root_.map_one toENNRealRingHom\n\n"}
{"name":"ENat.toENNReal_mul","module":"Mathlib.Data.Real.ENatENNReal","initialProofState":"m n : ENat\n⊢ Eq (↑(HMul.hMul m n)) (HMul.hMul ↑m ↑n)","decl":"@[simp, norm_cast]\ntheorem toENNReal_mul (m n : ℕ∞) : ↑(m * n) = (m * n : ℝ≥0∞) :=\n  map_mul toENNRealRingHom m n\n\n"}
{"name":"ENat.toENNReal_pow","module":"Mathlib.Data.Real.ENatENNReal","initialProofState":"x : ENat\nn : Nat\n⊢ Eq (↑(HPow.hPow x n)) (HPow.hPow (↑x) n)","decl":"@[simp, norm_cast]\ntheorem toENNReal_pow (x : ℕ∞) (n : ℕ) : (x ^ n : ℕ∞) = (x : ℝ≥0∞) ^ n :=\n  RingHom.map_pow toENNRealRingHom x n\n\n"}
{"name":"ENat.toENNReal_min","module":"Mathlib.Data.Real.ENatENNReal","initialProofState":"m n : ENat\n⊢ Eq (↑(Min.min m n)) (Min.min ↑m ↑n)","decl":"@[simp, norm_cast]\ntheorem toENNReal_min (m n : ℕ∞) : ↑(min m n) = (min m n : ℝ≥0∞) :=\n  toENNReal_mono.map_min\n\n"}
{"name":"ENat.toENNReal_max","module":"Mathlib.Data.Real.ENatENNReal","initialProofState":"m n : ENat\n⊢ Eq (↑(Max.max m n)) (Max.max ↑m ↑n)","decl":"@[simp, norm_cast]\ntheorem toENNReal_max (m n : ℕ∞) : ↑(max m n) = (max m n : ℝ≥0∞) :=\n  toENNReal_mono.map_max\n\n"}
{"name":"ENat.toENNReal_sub","module":"Mathlib.Data.Real.ENatENNReal","initialProofState":"m n : ENat\n⊢ Eq (↑(HSub.hSub m n)) (HSub.hSub ↑m ↑n)","decl":"@[simp, norm_cast]\ntheorem toENNReal_sub (m n : ℕ∞) : ↑(m - n) = (m - n : ℝ≥0∞) :=\n  WithTop.map_sub Nat.cast_tsub Nat.cast_zero m n\n\n"}
