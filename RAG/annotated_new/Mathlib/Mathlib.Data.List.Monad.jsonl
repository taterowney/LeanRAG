{"name":"List.pure_def","module":"Mathlib.Data.List.Monad","initialProofState":"α : Type u\na : α\n⊢ Eq (Pure.pure a) (List.cons a List.nil)","decl":"@[simp] theorem pure_def (a : α) : pure a = [a] := rfl\n\n"}
{"name":"List.instLawfulMonad","module":"Mathlib.Data.List.Monad","initialProofState":"⊢ LawfulMonad List","decl":"instance instLawfulMonad : LawfulMonad List.{u} := LawfulMonad.mk'\n  (id_map := map_id)\n  (pure_bind := fun _ _ => List.append_nil _)\n  (bind_assoc := List.flatMap_assoc)\n  (bind_pure_comp := fun _ _ => (map_eq_flatMap _ _).symm)\n\n"}
