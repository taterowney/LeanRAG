{"name":"Pi.exists_forall_pos_add_lt","module":"Mathlib.Algebra.Order.Field.Pi","initialProofState":"α : Type u_1\nι : Type u_2\ninst✝⁴ : LinearOrderedCancelAddCommMonoid α\ninst✝³ : Nontrivial α\ninst✝² : DenselyOrdered α\ninst✝¹ : ExistsAddOfLE α\ninst✝ : Finite ι\nx y : ι → α\nh : ∀ (i : ι), LT.lt (x i) (y i)\n⊢ Exists fun ε => And (LT.lt 0 ε) (∀ (i : ι), LT.lt (HAdd.hAdd (x i) ε) (y i))","decl":"theorem Pi.exists_forall_pos_add_lt [ExistsAddOfLE α] [Finite ι] {x y : ι → α}\n    (h : ∀ i, x i < y i) : ∃ ε, 0 < ε ∧ ∀ i, x i + ε < y i := by\n  cases nonempty_fintype ι\n  cases isEmpty_or_nonempty ι\n  · obtain ⟨a, ha⟩ := exists_ne (0 : α)\n    obtain ha | ha := ha.lt_or_lt <;> obtain ⟨b, hb, -⟩ := exists_pos_add_of_lt' ha <;>\n      exact ⟨b, hb, isEmptyElim⟩\n  choose ε hε hxε using fun i => exists_pos_add_of_lt' (h i)\n  obtain rfl : x + ε = y := funext hxε\n  have hε : 0 < Finset.univ.inf' Finset.univ_nonempty ε := (Finset.lt_inf'_iff _).2 fun i _ => hε _\n  obtain ⟨δ, hδ, hδε⟩ := exists_between hε\n  exact ⟨δ, hδ, fun i ↦ add_lt_add_left (hδε.trans_le <| Finset.inf'_le _ <| Finset.mem_univ _) _⟩\n"}
