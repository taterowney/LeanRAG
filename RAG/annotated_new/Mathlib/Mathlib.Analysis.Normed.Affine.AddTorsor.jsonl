{"name":"AffineSubspace.isClosed_direction_iff","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"W : Type u_3\nQ : Type u_4\ninst✝⁴ : NormedAddCommGroup W\ninst✝³ : MetricSpace Q\ninst✝² : NormedAddTorsor W Q\n𝕜 : Type u_5\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedSpace 𝕜 W\ns : AffineSubspace 𝕜 Q\n⊢ Iff (IsClosed ↑s.direction) (IsClosed ↑s)","decl":"theorem AffineSubspace.isClosed_direction_iff (s : AffineSubspace 𝕜 Q) :\n    IsClosed (s.direction : Set W) ↔ IsClosed (s : Set Q) := by\n  rcases s.eq_bot_or_nonempty with (rfl | ⟨x, hx⟩); · simp [isClosed_singleton]\n  rw [← (IsometryEquiv.vaddConst x).toHomeomorph.symm.isClosed_image,\n    AffineSubspace.coe_direction_eq_vsub_set_right hx]\n  rfl\n\n"}
{"name":"dist_center_homothety","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : SeminormedAddCommGroup V\ninst✝³ : PseudoMetricSpace P\ninst✝² : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedSpace 𝕜 V\np₁ p₂ : P\nc : 𝕜\n⊢ Eq (Dist.dist p₁ ((AffineMap.homothety p₁ c) p₂)) (HMul.hMul (Norm.norm c) (Dist.dist p₁ p₂))","decl":"@[simp]\ntheorem dist_center_homothety (p₁ p₂ : P) (c : 𝕜) :\n    dist p₁ (homothety p₁ c p₂) = ‖c‖ * dist p₁ p₂ := by\n  simp [homothety_def, norm_smul, ← dist_eq_norm_vsub, dist_comm]\n\n"}
{"name":"nndist_center_homothety","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : SeminormedAddCommGroup V\ninst✝³ : PseudoMetricSpace P\ninst✝² : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedSpace 𝕜 V\np₁ p₂ : P\nc : 𝕜\n⊢ Eq (NNDist.nndist p₁ ((AffineMap.homothety p₁ c) p₂)) (HMul.hMul (NNNorm.nnnorm c) (NNDist.nndist p₁ p₂))","decl":"@[simp]\ntheorem nndist_center_homothety (p₁ p₂ : P) (c : 𝕜) :\n    nndist p₁ (homothety p₁ c p₂) = ‖c‖₊ * nndist p₁ p₂ :=\n  NNReal.eq <| dist_center_homothety _ _ _\n\n"}
{"name":"dist_homothety_center","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : SeminormedAddCommGroup V\ninst✝³ : PseudoMetricSpace P\ninst✝² : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedSpace 𝕜 V\np₁ p₂ : P\nc : 𝕜\n⊢ Eq (Dist.dist ((AffineMap.homothety p₁ c) p₂) p₁) (HMul.hMul (Norm.norm c) (Dist.dist p₁ p₂))","decl":"@[simp]\ntheorem dist_homothety_center (p₁ p₂ : P) (c : 𝕜) :\n    dist (homothety p₁ c p₂) p₁ = ‖c‖ * dist p₁ p₂ := by rw [dist_comm, dist_center_homothety]\n\n"}
{"name":"nndist_homothety_center","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : SeminormedAddCommGroup V\ninst✝³ : PseudoMetricSpace P\ninst✝² : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedSpace 𝕜 V\np₁ p₂ : P\nc : 𝕜\n⊢ Eq (NNDist.nndist ((AffineMap.homothety p₁ c) p₂) p₁) (HMul.hMul (NNNorm.nnnorm c) (NNDist.nndist p₁ p₂))","decl":"@[simp]\ntheorem nndist_homothety_center (p₁ p₂ : P) (c : 𝕜) :\n    nndist (homothety p₁ c p₂) p₁ = ‖c‖₊ * nndist p₁ p₂ :=\n  NNReal.eq <| dist_homothety_center _ _ _\n\n"}
{"name":"dist_lineMap_lineMap","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : SeminormedAddCommGroup V\ninst✝³ : PseudoMetricSpace P\ninst✝² : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedSpace 𝕜 V\np₁ p₂ : P\nc₁ c₂ : 𝕜\n⊢ Eq (Dist.dist ((AffineMap.lineMap p₁ p₂) c₁) ((AffineMap.lineMap p₁ p₂) c₂)) (HMul.hMul (Dist.dist c₁ c₂) (Dist.dist p₁ p₂))","decl":"@[simp]\ntheorem dist_lineMap_lineMap (p₁ p₂ : P) (c₁ c₂ : 𝕜) :\n    dist (lineMap p₁ p₂ c₁) (lineMap p₁ p₂ c₂) = dist c₁ c₂ * dist p₁ p₂ := by\n  rw [dist_comm p₁ p₂]\n  simp only [lineMap_apply, dist_eq_norm_vsub, vadd_vsub_vadd_cancel_right,\n    ← sub_smul, norm_smul, vsub_eq_sub]\n\n"}
{"name":"nndist_lineMap_lineMap","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : SeminormedAddCommGroup V\ninst✝³ : PseudoMetricSpace P\ninst✝² : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedSpace 𝕜 V\np₁ p₂ : P\nc₁ c₂ : 𝕜\n⊢ Eq (NNDist.nndist ((AffineMap.lineMap p₁ p₂) c₁) ((AffineMap.lineMap p₁ p₂) c₂)) (HMul.hMul (NNDist.nndist c₁ c₂) (NNDist.nndist p₁ p₂))","decl":"@[simp]\ntheorem nndist_lineMap_lineMap (p₁ p₂ : P) (c₁ c₂ : 𝕜) :\n    nndist (lineMap p₁ p₂ c₁) (lineMap p₁ p₂ c₂) = nndist c₁ c₂ * nndist p₁ p₂ :=\n  NNReal.eq <| dist_lineMap_lineMap _ _ _ _\n\n"}
{"name":"lipschitzWith_lineMap","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : SeminormedAddCommGroup V\ninst✝³ : PseudoMetricSpace P\ninst✝² : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedSpace 𝕜 V\np₁ p₂ : P\n⊢ LipschitzWith (NNDist.nndist p₁ p₂) ⇑(AffineMap.lineMap p₁ p₂)","decl":"theorem lipschitzWith_lineMap (p₁ p₂ : P) : LipschitzWith (nndist p₁ p₂) (lineMap p₁ p₂ : 𝕜 → P) :=\n  LipschitzWith.of_dist_le_mul fun c₁ c₂ =>\n    ((dist_lineMap_lineMap p₁ p₂ c₁ c₂).trans (mul_comm _ _)).le\n\n"}
{"name":"dist_lineMap_left","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : SeminormedAddCommGroup V\ninst✝³ : PseudoMetricSpace P\ninst✝² : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedSpace 𝕜 V\np₁ p₂ : P\nc : 𝕜\n⊢ Eq (Dist.dist ((AffineMap.lineMap p₁ p₂) c) p₁) (HMul.hMul (Norm.norm c) (Dist.dist p₁ p₂))","decl":"@[simp]\ntheorem dist_lineMap_left (p₁ p₂ : P) (c : 𝕜) : dist (lineMap p₁ p₂ c) p₁ = ‖c‖ * dist p₁ p₂ := by\n  simpa only [lineMap_apply_zero, dist_zero_right] using dist_lineMap_lineMap p₁ p₂ c 0\n\n"}
{"name":"nndist_lineMap_left","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : SeminormedAddCommGroup V\ninst✝³ : PseudoMetricSpace P\ninst✝² : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedSpace 𝕜 V\np₁ p₂ : P\nc : 𝕜\n⊢ Eq (NNDist.nndist ((AffineMap.lineMap p₁ p₂) c) p₁) (HMul.hMul (NNNorm.nnnorm c) (NNDist.nndist p₁ p₂))","decl":"@[simp]\ntheorem nndist_lineMap_left (p₁ p₂ : P) (c : 𝕜) :\n    nndist (lineMap p₁ p₂ c) p₁ = ‖c‖₊ * nndist p₁ p₂ :=\n  NNReal.eq <| dist_lineMap_left _ _ _\n\n"}
{"name":"dist_left_lineMap","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : SeminormedAddCommGroup V\ninst✝³ : PseudoMetricSpace P\ninst✝² : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedSpace 𝕜 V\np₁ p₂ : P\nc : 𝕜\n⊢ Eq (Dist.dist p₁ ((AffineMap.lineMap p₁ p₂) c)) (HMul.hMul (Norm.norm c) (Dist.dist p₁ p₂))","decl":"@[simp]\ntheorem dist_left_lineMap (p₁ p₂ : P) (c : 𝕜) : dist p₁ (lineMap p₁ p₂ c) = ‖c‖ * dist p₁ p₂ :=\n  (dist_comm _ _).trans (dist_lineMap_left _ _ _)\n\n"}
{"name":"nndist_left_lineMap","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : SeminormedAddCommGroup V\ninst✝³ : PseudoMetricSpace P\ninst✝² : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedSpace 𝕜 V\np₁ p₂ : P\nc : 𝕜\n⊢ Eq (NNDist.nndist p₁ ((AffineMap.lineMap p₁ p₂) c)) (HMul.hMul (NNNorm.nnnorm c) (NNDist.nndist p₁ p₂))","decl":"@[simp]\ntheorem nndist_left_lineMap (p₁ p₂ : P) (c : 𝕜) :\n    nndist p₁ (lineMap p₁ p₂ c) = ‖c‖₊ * nndist p₁ p₂ :=\n  NNReal.eq <| dist_left_lineMap _ _ _\n\n"}
{"name":"dist_lineMap_right","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : SeminormedAddCommGroup V\ninst✝³ : PseudoMetricSpace P\ninst✝² : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedSpace 𝕜 V\np₁ p₂ : P\nc : 𝕜\n⊢ Eq (Dist.dist ((AffineMap.lineMap p₁ p₂) c) p₂) (HMul.hMul (Norm.norm (HSub.hSub 1 c)) (Dist.dist p₁ p₂))","decl":"@[simp]\ntheorem dist_lineMap_right (p₁ p₂ : P) (c : 𝕜) :\n    dist (lineMap p₁ p₂ c) p₂ = ‖1 - c‖ * dist p₁ p₂ := by\n  simpa only [lineMap_apply_one, dist_eq_norm'] using dist_lineMap_lineMap p₁ p₂ c 1\n\n"}
{"name":"nndist_lineMap_right","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : SeminormedAddCommGroup V\ninst✝³ : PseudoMetricSpace P\ninst✝² : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedSpace 𝕜 V\np₁ p₂ : P\nc : 𝕜\n⊢ Eq (NNDist.nndist ((AffineMap.lineMap p₁ p₂) c) p₂) (HMul.hMul (NNNorm.nnnorm (HSub.hSub 1 c)) (NNDist.nndist p₁ p₂))","decl":"@[simp]\ntheorem nndist_lineMap_right (p₁ p₂ : P) (c : 𝕜) :\n    nndist (lineMap p₁ p₂ c) p₂ = ‖1 - c‖₊ * nndist p₁ p₂ :=\n  NNReal.eq <| dist_lineMap_right _ _ _\n\n"}
{"name":"dist_right_lineMap","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : SeminormedAddCommGroup V\ninst✝³ : PseudoMetricSpace P\ninst✝² : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedSpace 𝕜 V\np₁ p₂ : P\nc : 𝕜\n⊢ Eq (Dist.dist p₂ ((AffineMap.lineMap p₁ p₂) c)) (HMul.hMul (Norm.norm (HSub.hSub 1 c)) (Dist.dist p₁ p₂))","decl":"@[simp]\ntheorem dist_right_lineMap (p₁ p₂ : P) (c : 𝕜) : dist p₂ (lineMap p₁ p₂ c) = ‖1 - c‖ * dist p₁ p₂ :=\n  (dist_comm _ _).trans (dist_lineMap_right _ _ _)\n\n"}
{"name":"nndist_right_lineMap","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : SeminormedAddCommGroup V\ninst✝³ : PseudoMetricSpace P\ninst✝² : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedSpace 𝕜 V\np₁ p₂ : P\nc : 𝕜\n⊢ Eq (NNDist.nndist p₂ ((AffineMap.lineMap p₁ p₂) c)) (HMul.hMul (NNNorm.nnnorm (HSub.hSub 1 c)) (NNDist.nndist p₁ p₂))","decl":"@[simp]\ntheorem nndist_right_lineMap (p₁ p₂ : P) (c : 𝕜) :\n    nndist p₂ (lineMap p₁ p₂ c) = ‖1 - c‖₊ * nndist p₁ p₂ :=\n  NNReal.eq <| dist_right_lineMap _ _ _\n\n"}
{"name":"dist_homothety_self","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : SeminormedAddCommGroup V\ninst✝³ : PseudoMetricSpace P\ninst✝² : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedSpace 𝕜 V\np₁ p₂ : P\nc : 𝕜\n⊢ Eq (Dist.dist ((AffineMap.homothety p₁ c) p₂) p₂) (HMul.hMul (Norm.norm (HSub.hSub 1 c)) (Dist.dist p₁ p₂))","decl":"@[simp]\ntheorem dist_homothety_self (p₁ p₂ : P) (c : 𝕜) :\n    dist (homothety p₁ c p₂) p₂ = ‖1 - c‖ * dist p₁ p₂ := by\n  rw [homothety_eq_lineMap, dist_lineMap_right]\n\n"}
{"name":"nndist_homothety_self","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : SeminormedAddCommGroup V\ninst✝³ : PseudoMetricSpace P\ninst✝² : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedSpace 𝕜 V\np₁ p₂ : P\nc : 𝕜\n⊢ Eq (NNDist.nndist ((AffineMap.homothety p₁ c) p₂) p₂) (HMul.hMul (NNNorm.nnnorm (HSub.hSub 1 c)) (NNDist.nndist p₁ p₂))","decl":"@[simp]\ntheorem nndist_homothety_self (p₁ p₂ : P) (c : 𝕜) :\n    nndist (homothety p₁ c p₂) p₂ = ‖1 - c‖₊ * nndist p₁ p₂ :=\n  NNReal.eq <| dist_homothety_self _ _ _\n\n"}
{"name":"dist_self_homothety","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : SeminormedAddCommGroup V\ninst✝³ : PseudoMetricSpace P\ninst✝² : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedSpace 𝕜 V\np₁ p₂ : P\nc : 𝕜\n⊢ Eq (Dist.dist p₂ ((AffineMap.homothety p₁ c) p₂)) (HMul.hMul (Norm.norm (HSub.hSub 1 c)) (Dist.dist p₁ p₂))","decl":"@[simp]\ntheorem dist_self_homothety (p₁ p₂ : P) (c : 𝕜) :\n    dist p₂ (homothety p₁ c p₂) = ‖1 - c‖ * dist p₁ p₂ := by rw [dist_comm, dist_homothety_self]\n\n"}
{"name":"nndist_self_homothety","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : SeminormedAddCommGroup V\ninst✝³ : PseudoMetricSpace P\ninst✝² : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedSpace 𝕜 V\np₁ p₂ : P\nc : 𝕜\n⊢ Eq (NNDist.nndist p₂ ((AffineMap.homothety p₁ c) p₂)) (HMul.hMul (NNNorm.nnnorm (HSub.hSub 1 c)) (NNDist.nndist p₁ p₂))","decl":"@[simp]\ntheorem nndist_self_homothety (p₁ p₂ : P) (c : 𝕜) :\n    nndist p₂ (homothety p₁ c p₂) = ‖1 - c‖₊ * nndist p₁ p₂ :=\n  NNReal.eq <| dist_self_homothety _ _ _\n\n"}
{"name":"dist_left_midpoint","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁵ : SeminormedAddCommGroup V\ninst✝⁴ : PseudoMetricSpace P\ninst✝³ : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝² : NormedField 𝕜\ninst✝¹ : NormedSpace 𝕜 V\ninst✝ : Invertible 2\np₁ p₂ : P\n⊢ Eq (Dist.dist p₁ (midpoint 𝕜 p₁ p₂)) (HMul.hMul (Inv.inv (Norm.norm 2)) (Dist.dist p₁ p₂))","decl":"@[simp]\ntheorem dist_left_midpoint (p₁ p₂ : P) : dist p₁ (midpoint 𝕜 p₁ p₂) = ‖(2 : 𝕜)‖⁻¹ * dist p₁ p₂ := by\n  rw [midpoint, dist_comm, dist_lineMap_left, invOf_eq_inv, ← norm_inv]\n\n"}
{"name":"nndist_left_midpoint","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁵ : SeminormedAddCommGroup V\ninst✝⁴ : PseudoMetricSpace P\ninst✝³ : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝² : NormedField 𝕜\ninst✝¹ : NormedSpace 𝕜 V\ninst✝ : Invertible 2\np₁ p₂ : P\n⊢ Eq (NNDist.nndist p₁ (midpoint 𝕜 p₁ p₂)) (HMul.hMul (Inv.inv (NNNorm.nnnorm 2)) (NNDist.nndist p₁ p₂))","decl":"@[simp]\ntheorem nndist_left_midpoint (p₁ p₂ : P) :\n    nndist p₁ (midpoint 𝕜 p₁ p₂) = ‖(2 : 𝕜)‖₊⁻¹ * nndist p₁ p₂ :=\n  NNReal.eq <| dist_left_midpoint _ _\n\n"}
{"name":"dist_midpoint_left","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁵ : SeminormedAddCommGroup V\ninst✝⁴ : PseudoMetricSpace P\ninst✝³ : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝² : NormedField 𝕜\ninst✝¹ : NormedSpace 𝕜 V\ninst✝ : Invertible 2\np₁ p₂ : P\n⊢ Eq (Dist.dist (midpoint 𝕜 p₁ p₂) p₁) (HMul.hMul (Inv.inv (Norm.norm 2)) (Dist.dist p₁ p₂))","decl":"@[simp]\ntheorem dist_midpoint_left (p₁ p₂ : P) : dist (midpoint 𝕜 p₁ p₂) p₁ = ‖(2 : 𝕜)‖⁻¹ * dist p₁ p₂ := by\n  rw [dist_comm, dist_left_midpoint]\n\n"}
{"name":"nndist_midpoint_left","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁵ : SeminormedAddCommGroup V\ninst✝⁴ : PseudoMetricSpace P\ninst✝³ : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝² : NormedField 𝕜\ninst✝¹ : NormedSpace 𝕜 V\ninst✝ : Invertible 2\np₁ p₂ : P\n⊢ Eq (NNDist.nndist (midpoint 𝕜 p₁ p₂) p₁) (HMul.hMul (Inv.inv (NNNorm.nnnorm 2)) (NNDist.nndist p₁ p₂))","decl":"@[simp]\ntheorem nndist_midpoint_left (p₁ p₂ : P) :\n    nndist (midpoint 𝕜 p₁ p₂) p₁ = ‖(2 : 𝕜)‖₊⁻¹ * nndist p₁ p₂ :=\n  NNReal.eq <| dist_midpoint_left _ _\n\n"}
{"name":"dist_midpoint_right","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁵ : SeminormedAddCommGroup V\ninst✝⁴ : PseudoMetricSpace P\ninst✝³ : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝² : NormedField 𝕜\ninst✝¹ : NormedSpace 𝕜 V\ninst✝ : Invertible 2\np₁ p₂ : P\n⊢ Eq (Dist.dist (midpoint 𝕜 p₁ p₂) p₂) (HMul.hMul (Inv.inv (Norm.norm 2)) (Dist.dist p₁ p₂))","decl":"@[simp]\ntheorem dist_midpoint_right (p₁ p₂ : P) :\n    dist (midpoint 𝕜 p₁ p₂) p₂ = ‖(2 : 𝕜)‖⁻¹ * dist p₁ p₂ := by\n  rw [midpoint_comm, dist_midpoint_left, dist_comm]\n\n"}
{"name":"nndist_midpoint_right","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁵ : SeminormedAddCommGroup V\ninst✝⁴ : PseudoMetricSpace P\ninst✝³ : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝² : NormedField 𝕜\ninst✝¹ : NormedSpace 𝕜 V\ninst✝ : Invertible 2\np₁ p₂ : P\n⊢ Eq (NNDist.nndist (midpoint 𝕜 p₁ p₂) p₂) (HMul.hMul (Inv.inv (NNNorm.nnnorm 2)) (NNDist.nndist p₁ p₂))","decl":"@[simp]\ntheorem nndist_midpoint_right (p₁ p₂ : P) :\n    nndist (midpoint 𝕜 p₁ p₂) p₂ = ‖(2 : 𝕜)‖₊⁻¹ * nndist p₁ p₂ :=\n  NNReal.eq <| dist_midpoint_right _ _\n\n"}
{"name":"dist_right_midpoint","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁵ : SeminormedAddCommGroup V\ninst✝⁴ : PseudoMetricSpace P\ninst✝³ : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝² : NormedField 𝕜\ninst✝¹ : NormedSpace 𝕜 V\ninst✝ : Invertible 2\np₁ p₂ : P\n⊢ Eq (Dist.dist p₂ (midpoint 𝕜 p₁ p₂)) (HMul.hMul (Inv.inv (Norm.norm 2)) (Dist.dist p₁ p₂))","decl":"@[simp]\ntheorem dist_right_midpoint (p₁ p₂ : P) :\n    dist p₂ (midpoint 𝕜 p₁ p₂) = ‖(2 : 𝕜)‖⁻¹ * dist p₁ p₂ := by\n  rw [dist_comm, dist_midpoint_right]\n\n"}
{"name":"nndist_right_midpoint","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁵ : SeminormedAddCommGroup V\ninst✝⁴ : PseudoMetricSpace P\ninst✝³ : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝² : NormedField 𝕜\ninst✝¹ : NormedSpace 𝕜 V\ninst✝ : Invertible 2\np₁ p₂ : P\n⊢ Eq (NNDist.nndist p₂ (midpoint 𝕜 p₁ p₂)) (HMul.hMul (Inv.inv (NNNorm.nnnorm 2)) (NNDist.nndist p₁ p₂))","decl":"@[simp]\ntheorem nndist_right_midpoint (p₁ p₂ : P) :\n    nndist p₂ (midpoint 𝕜 p₁ p₂) = ‖(2 : 𝕜)‖₊⁻¹ * nndist p₁ p₂ :=\n  NNReal.eq <| dist_right_midpoint _ _\n\n"}
{"name":"dist_midpoint_midpoint_le'","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁵ : SeminormedAddCommGroup V\ninst✝⁴ : PseudoMetricSpace P\ninst✝³ : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝² : NormedField 𝕜\ninst✝¹ : NormedSpace 𝕜 V\ninst✝ : Invertible 2\np₁ p₂ p₃ p₄ : P\n⊢ LE.le (Dist.dist (midpoint 𝕜 p₁ p₂) (midpoint 𝕜 p₃ p₄)) (HDiv.hDiv (HAdd.hAdd (Dist.dist p₁ p₃) (Dist.dist p₂ p₄)) (Norm.norm 2))","decl":"theorem dist_midpoint_midpoint_le' (p₁ p₂ p₃ p₄ : P) :\n    dist (midpoint 𝕜 p₁ p₂) (midpoint 𝕜 p₃ p₄) ≤ (dist p₁ p₃ + dist p₂ p₄) / ‖(2 : 𝕜)‖ := by\n  rw [dist_eq_norm_vsub V, dist_eq_norm_vsub V, dist_eq_norm_vsub V, midpoint_vsub_midpoint]\n  rw [midpoint_eq_smul_add, norm_smul, invOf_eq_inv, norm_inv, ← div_eq_inv_mul]\n  exact div_le_div_of_nonneg_right (norm_add_le _ _) (norm_nonneg _)\n\n"}
{"name":"nndist_midpoint_midpoint_le'","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁵ : SeminormedAddCommGroup V\ninst✝⁴ : PseudoMetricSpace P\ninst✝³ : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝² : NormedField 𝕜\ninst✝¹ : NormedSpace 𝕜 V\ninst✝ : Invertible 2\np₁ p₂ p₃ p₄ : P\n⊢ LE.le (NNDist.nndist (midpoint 𝕜 p₁ p₂) (midpoint 𝕜 p₃ p₄)) (HDiv.hDiv (HAdd.hAdd (NNDist.nndist p₁ p₃) (NNDist.nndist p₂ p₄)) (NNNorm.nnnorm 2))","decl":"theorem nndist_midpoint_midpoint_le' (p₁ p₂ p₃ p₄ : P) :\n    nndist (midpoint 𝕜 p₁ p₂) (midpoint 𝕜 p₃ p₄) ≤ (nndist p₁ p₃ + nndist p₂ p₄) / ‖(2 : 𝕜)‖₊ :=\n  dist_midpoint_midpoint_le' _ _ _ _\n\n"}
{"name":"dist_pointReflection_left","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝² : SeminormedAddCommGroup V\ninst✝¹ : PseudoMetricSpace P\ninst✝ : NormedAddTorsor V P\np q : P\n⊢ Eq (Dist.dist ((Equiv.pointReflection p) q) p) (Dist.dist p q)","decl":"@[simp] theorem dist_pointReflection_left (p q : P) :\n    dist (Equiv.pointReflection p q) p = dist p q := by\n  simp [dist_eq_norm_vsub V, Equiv.pointReflection_vsub_left (G := V)]\n\n"}
{"name":"dist_left_pointReflection","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝² : SeminormedAddCommGroup V\ninst✝¹ : PseudoMetricSpace P\ninst✝ : NormedAddTorsor V P\np q : P\n⊢ Eq (Dist.dist p ((Equiv.pointReflection p) q)) (Dist.dist p q)","decl":"@[simp] theorem dist_left_pointReflection (p q : P) :\n    dist p (Equiv.pointReflection p q) = dist p q :=\n  (dist_comm _ _).trans (dist_pointReflection_left _ _)\n\n"}
{"name":"dist_pointReflection_right","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : SeminormedAddCommGroup V\ninst✝³ : PseudoMetricSpace P\ninst✝² : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedSpace 𝕜 V\np q : P\n⊢ Eq (Dist.dist ((Equiv.pointReflection p) q) q) (HMul.hMul (Norm.norm 2) (Dist.dist p q))","decl":"variable (𝕜) in\ntheorem dist_pointReflection_right (p q : P) :\n    dist (Equiv.pointReflection p q) q = ‖(2 : 𝕜)‖ * dist p q := by\n  simp [dist_eq_norm_vsub V, Equiv.pointReflection_vsub_right (G := V), ← Nat.cast_smul_eq_nsmul 𝕜,\n    norm_smul]\n\n"}
{"name":"dist_right_pointReflection","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\nP : Type u_2\ninst✝⁴ : SeminormedAddCommGroup V\ninst✝³ : PseudoMetricSpace P\ninst✝² : NormedAddTorsor V P\n𝕜 : Type u_5\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedSpace 𝕜 V\np q : P\n⊢ Eq (Dist.dist q ((Equiv.pointReflection p) q)) (HMul.hMul (Norm.norm 2) (Dist.dist p q))","decl":"variable (𝕜) in\ntheorem dist_right_pointReflection (p q : P) :\n    dist q (Equiv.pointReflection p q) = ‖(2 : 𝕜)‖ * dist p q :=\n  (dist_comm _ _).trans (dist_pointReflection_right 𝕜 _ _)\n\n"}
{"name":"antilipschitzWith_lineMap","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"W : Type u_3\nQ : Type u_4\ninst✝⁴ : NormedAddCommGroup W\ninst✝³ : MetricSpace Q\ninst✝² : NormedAddTorsor W Q\n𝕜 : Type u_5\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedSpace 𝕜 W\np₁ p₂ : Q\nh : Ne p₁ p₂\n⊢ AntilipschitzWith (Inv.inv (NNDist.nndist p₁ p₂)) ⇑(AffineMap.lineMap p₁ p₂)","decl":"theorem antilipschitzWith_lineMap {p₁ p₂ : Q} (h : p₁ ≠ p₂) :\n    AntilipschitzWith (nndist p₁ p₂)⁻¹ (lineMap p₁ p₂ : 𝕜 → Q) :=\n  AntilipschitzWith.of_le_mul_dist fun c₁ c₂ => by\n    rw [dist_lineMap_lineMap, NNReal.coe_inv, ← dist_nndist, mul_left_comm,\n      inv_mul_cancel₀ (dist_ne_zero.2 h), mul_one]\n\n"}
{"name":"eventually_homothety_mem_of_mem_interior","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"W : Type u_3\nQ : Type u_4\ninst✝⁴ : NormedAddCommGroup W\ninst✝³ : MetricSpace Q\ninst✝² : NormedAddTorsor W Q\n𝕜 : Type u_5\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedSpace 𝕜 W\nx : Q\ns : Set Q\ny : Q\nhy : Membership.mem (interior s) y\n⊢ Filter.Eventually (fun δ => Membership.mem s ((AffineMap.homothety x δ) y)) (nhds 1)","decl":"theorem eventually_homothety_mem_of_mem_interior (x : Q) {s : Set Q} {y : Q} (hy : y ∈ interior s) :\n    ∀ᶠ δ in 𝓝 (1 : 𝕜), homothety x δ y ∈ s := by\n  rw [(NormedAddCommGroup.nhds_basis_norm_lt (1 : 𝕜)).eventually_iff]\n  rcases eq_or_ne y x with h | h\n  · use 1\n    simp [h.symm, interior_subset hy]\n  have hxy : 0 < ‖y -ᵥ x‖ := by rwa [norm_pos_iff, vsub_ne_zero]\n  obtain ⟨u, hu₁, hu₂, hu₃⟩ := mem_interior.mp hy\n  obtain ⟨ε, hε, hyε⟩ := Metric.isOpen_iff.mp hu₂ y hu₃\n  refine ⟨ε / ‖y -ᵥ x‖, div_pos hε hxy, fun δ (hδ : ‖δ - 1‖ < ε / ‖y -ᵥ x‖) => hu₁ (hyε ?_)⟩\n  rw [lt_div_iff₀ hxy, ← norm_smul, sub_smul, one_smul] at hδ\n  rwa [homothety_apply, Metric.mem_ball, dist_eq_norm_vsub W, vadd_vsub_eq_sub_vsub]\n\n"}
{"name":"eventually_homothety_image_subset_of_finite_subset_interior","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"W : Type u_3\nQ : Type u_4\ninst✝⁴ : NormedAddCommGroup W\ninst✝³ : MetricSpace Q\ninst✝² : NormedAddTorsor W Q\n𝕜 : Type u_5\ninst✝¹ : NormedField 𝕜\ninst✝ : NormedSpace 𝕜 W\nx : Q\ns t : Set Q\nht : t.Finite\nh : HasSubset.Subset t (interior s)\n⊢ Filter.Eventually (fun δ => HasSubset.Subset (Set.image (⇑(AffineMap.homothety x δ)) t) s) (nhds 1)","decl":"theorem eventually_homothety_image_subset_of_finite_subset_interior (x : Q) {s : Set Q} {t : Set Q}\n    (ht : t.Finite) (h : t ⊆ interior s) : ∀ᶠ δ in 𝓝 (1 : 𝕜), homothety x δ '' t ⊆ s := by\n  suffices ∀ y ∈ t, ∀ᶠ δ in 𝓝 (1 : 𝕜), homothety x δ y ∈ s by\n    simp_rw [Set.image_subset_iff]\n    exact (Filter.eventually_all_finite ht).mpr this\n  intro y hy\n  exact eventually_homothety_mem_of_mem_interior 𝕜 x (h hy)\n\n"}
{"name":"dist_midpoint_midpoint_le","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\ninst✝¹ : SeminormedAddCommGroup V\ninst✝ : NormedSpace Real V\np₁ p₂ p₃ p₄ : V\n⊢ LE.le (Dist.dist (midpoint Real p₁ p₂) (midpoint Real p₃ p₄)) (HDiv.hDiv (HAdd.hAdd (Dist.dist p₁ p₃) (Dist.dist p₂ p₄)) 2)","decl":"theorem dist_midpoint_midpoint_le (p₁ p₂ p₃ p₄ : V) :\n    dist (midpoint ℝ p₁ p₂) (midpoint ℝ p₃ p₄) ≤ (dist p₁ p₃ + dist p₂ p₄) / 2 := by\n  simpa using dist_midpoint_midpoint_le' (𝕜 := ℝ) p₁ p₂ p₃ p₄\n\n"}
{"name":"nndist_midpoint_midpoint_le","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"V : Type u_1\ninst✝¹ : SeminormedAddCommGroup V\ninst✝ : NormedSpace Real V\np₁ p₂ p₃ p₄ : V\n⊢ LE.le (NNDist.nndist (midpoint Real p₁ p₂) (midpoint Real p₃ p₄)) (HDiv.hDiv (HAdd.hAdd (NNDist.nndist p₁ p₃) (NNDist.nndist p₂ p₄)) 2)","decl":"theorem nndist_midpoint_midpoint_le (p₁ p₂ p₃ p₄ : V) :\n    nndist (midpoint ℝ p₁ p₂) (midpoint ℝ p₃ p₄) ≤ (nndist p₁ p₃ + nndist p₂ p₄) / 2 :=\n  dist_midpoint_midpoint_le _ _ _ _\n\n"}
{"name":"DilationEquiv.smulTorsor_symm_apply","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁴ : NormedDivisionRing 𝕜\ninst✝³ : SeminormedAddCommGroup E\ninst✝² : Module 𝕜 E\nP : Type u_3\ninst✝¹ : PseudoMetricSpace P\ninst✝ : NormedAddTorsor E P\nc : P\nk : 𝕜\nhk : Ne k 0\nx✝ : P\n⊢ Eq ((DilationEquiv.smulTorsor c hk).symm x✝) (HSMul.hSMul (Inv.inv k) (fun x => VSub.vsub x c) x✝)","decl":"/-- Scaling by an element `k` of the scalar ring as a `DilationEquiv` with ratio `‖k‖₊`, mapping\nfrom a normed space to a normed torsor over that space sending `0` to `c`. -/\n@[simps]\ndef DilationEquiv.smulTorsor (c : P) {k : 𝕜} (hk : k ≠ 0) : E ≃ᵈ P where\n  toFun := (k • · +ᵥ c)\n  invFun := k⁻¹ • (· -ᵥ c)\n  left_inv x := by simp [inv_smul_smul₀ hk]\n  right_inv p := by simp [smul_inv_smul₀ hk]\n  edist_eq' := ⟨‖k‖₊, nnnorm_ne_zero_iff.mpr hk, fun x y ↦ by\n    rw [show edist (k • x +ᵥ c) (k • y +ᵥ c) = _ from (IsometryEquiv.vaddConst c).isometry ..]\n    exact edist_smul₀ ..⟩\n\n"}
{"name":"DilationEquiv.smulTorsor_apply","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁴ : NormedDivisionRing 𝕜\ninst✝³ : SeminormedAddCommGroup E\ninst✝² : Module 𝕜 E\nP : Type u_3\ninst✝¹ : PseudoMetricSpace P\ninst✝ : NormedAddTorsor E P\nc : P\nk : 𝕜\nhk : Ne k 0\nx✝ : E\n⊢ Eq ((DilationEquiv.smulTorsor c hk) x✝) (HVAdd.hVAdd (HSMul.hSMul k x✝) c)","decl":"/-- Scaling by an element `k` of the scalar ring as a `DilationEquiv` with ratio `‖k‖₊`, mapping\nfrom a normed space to a normed torsor over that space sending `0` to `c`. -/\n@[simps]\ndef DilationEquiv.smulTorsor (c : P) {k : 𝕜} (hk : k ≠ 0) : E ≃ᵈ P where\n  toFun := (k • · +ᵥ c)\n  invFun := k⁻¹ • (· -ᵥ c)\n  left_inv x := by simp [inv_smul_smul₀ hk]\n  right_inv p := by simp [smul_inv_smul₀ hk]\n  edist_eq' := ⟨‖k‖₊, nnnorm_ne_zero_iff.mpr hk, fun x y ↦ by\n    rw [show edist (k • x +ᵥ c) (k • y +ᵥ c) = _ from (IsometryEquiv.vaddConst c).isometry ..]\n    exact edist_smul₀ ..⟩\n\n"}
{"name":"DilationEquiv.smulTorsor_ratio","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁵ : NormedDivisionRing 𝕜\ninst✝⁴ : SeminormedAddCommGroup E\ninst✝³ : Module 𝕜 E\ninst✝² : BoundedSMul 𝕜 E\nP : Type u_3\ninst✝¹ : PseudoMetricSpace P\ninst✝ : NormedAddTorsor E P\nc : P\nk : 𝕜\nhk : Ne k 0\nx y : E\nh : Ne (Dist.dist x y) 0\n⊢ Eq (Dilation.ratio (DilationEquiv.smulTorsor c hk)) (NNNorm.nnnorm k)","decl":"@[simp]\nlemma DilationEquiv.smulTorsor_ratio {c : P} {k : 𝕜} (hk : k ≠ 0) {x y : E}\n    (h : dist x y ≠ 0) : ratio (smulTorsor c hk) = ‖k‖₊ :=\n  Eq.symm <| ratio_unique_of_dist_ne_zero h <| by simp [dist_eq_norm, ← smul_sub, norm_smul]\n\n"}
{"name":"DilationEquiv.smulTorsor_preimage_ball","module":"Mathlib.Analysis.Normed.Affine.AddTorsor","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁵ : NormedDivisionRing 𝕜\ninst✝⁴ : SeminormedAddCommGroup E\ninst✝³ : Module 𝕜 E\ninst✝² : BoundedSMul 𝕜 E\nP : Type u_3\ninst✝¹ : PseudoMetricSpace P\ninst✝ : NormedAddTorsor E P\nc : P\nk : 𝕜\nhk : Ne k 0\n⊢ Eq (Set.preimage (⇑(DilationEquiv.smulTorsor c hk)) (Metric.ball c (Norm.norm k))) (Metric.ball 0 1)","decl":"@[simp]\nlemma DilationEquiv.smulTorsor_preimage_ball {c : P} {k : 𝕜} (hk : k ≠ 0) :\n    smulTorsor c hk ⁻¹' (Metric.ball c ‖k‖) = Metric.ball (0 : E) 1 := by\n  aesop (add simp norm_smul)\n\n"}
