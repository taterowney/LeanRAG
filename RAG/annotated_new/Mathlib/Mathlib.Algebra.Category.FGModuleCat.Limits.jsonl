{"name":"FGModuleCat.instFiniteDimensionalCarrierPiObjModuleCatOfFinite","module":"Mathlib.Algebra.Category.FGModuleCat.Limits","initialProofState":"k : Type v\ninst✝² : Field k\nJ : Type\ninst✝¹ : Finite J\nZ : J → ModuleCat k\ninst✝ : ∀ (j : J), FiniteDimensional k ↑(Z j)\n⊢ FiniteDimensional k ↑(CategoryTheory.Limits.piObj fun j => Z j)","decl":"instance {J : Type} [Finite J] (Z : J → ModuleCat.{v} k) [∀ j, FiniteDimensional k (Z j)] :\n    FiniteDimensional k (∏ᶜ fun j => Z j : ModuleCat.{v} k) :=\n  haveI : FiniteDimensional k (ModuleCat.of k (∀ j, Z j)) := by unfold ModuleCat.of; infer_instance\n  FiniteDimensional.of_injective (ModuleCat.piIsoPi _).hom.hom\n    ((ModuleCat.mono_iff_injective _).1 (by infer_instance))\n\n"}
{"name":"FGModuleCat.instFiniteDimensionalCarrierLimitModuleCatCompForget₂","module":"Mathlib.Algebra.Category.FGModuleCat.Limits","initialProofState":"J : Type\ninst✝² : CategoryTheory.SmallCategory J\ninst✝¹ : CategoryTheory.FinCategory J\nk : Type v\ninst✝ : Field k\nF : CategoryTheory.Functor J (FGModuleCat k)\n⊢ FiniteDimensional k ↑(CategoryTheory.Limits.limit (F.comp (CategoryTheory.forget₂ (FGModuleCat k) (ModuleCat k))))","decl":"/-- Finite limits of finite dimensional vectors spaces are finite dimensional,\nbecause we can realise them as subobjects of a finite product. -/\ninstance (F : J ⥤ FGModuleCat k) :\n    FiniteDimensional k (limit (F ⋙ forget₂ (FGModuleCat k) (ModuleCat.{v} k)) : ModuleCat.{v} k) :=\n  haveI : ∀ j, FiniteDimensional k ((F ⋙ forget₂ (FGModuleCat k) (ModuleCat.{v} k)).obj j) := by\n    intro j; change FiniteDimensional k (F.obj j); infer_instance\n  FiniteDimensional.of_injective\n    (limitSubobjectProduct (F ⋙ forget₂ (FGModuleCat k) (ModuleCat.{v} k))).hom\n    ((ModuleCat.mono_iff_injective _).1 inferInstance)\n\n"}
{"name":"FGModuleCat.instHasLimitsOfShapeOfFinCategory","module":"Mathlib.Algebra.Category.FGModuleCat.Limits","initialProofState":"k : Type v\ninst✝² : Field k\nJ : Type\ninst✝¹ : CategoryTheory.Category.{0, 0} J\ninst✝ : CategoryTheory.FinCategory J\n⊢ CategoryTheory.Limits.HasLimitsOfShape J (FGModuleCat k)","decl":"instance (J : Type) [Category J] [FinCategory J] :\n    HasLimitsOfShape J (FGModuleCat.{v} k) :=\n  hasLimitsOfShape_of_hasLimitsOfShape_createsLimitsOfShape\n    (forget₂ (FGModuleCat k) (ModuleCat.{v} k))\n\n"}
{"name":"FGModuleCat.instHasFiniteLimits","module":"Mathlib.Algebra.Category.FGModuleCat.Limits","initialProofState":"k : Type v\ninst✝ : Field k\n⊢ CategoryTheory.Limits.HasFiniteLimits (FGModuleCat k)","decl":"instance : HasFiniteLimits (FGModuleCat k) where\n  out _ _ _ := inferInstance\n\n"}
{"name":"FGModuleCat.instPreservesFiniteLimitsModuleCatForget₂","module":"Mathlib.Algebra.Category.FGModuleCat.Limits","initialProofState":"k : Type v\ninst✝ : Field k\n⊢ CategoryTheory.Limits.PreservesFiniteLimits (CategoryTheory.forget₂ (FGModuleCat k) (ModuleCat k))","decl":"instance : PreservesFiniteLimits (forget₂ (FGModuleCat k) (ModuleCat.{v} k)) where\n  preservesFiniteLimits _ _ _ := inferInstance\n\n"}
