{"name":"LocallyBoundedVariationOn.ae_differentiableWithinAt_of_mem_real","module":"Mathlib.Analysis.BoundedVariation","initialProofState":"f : Real → Real\ns : Set Real\nh : LocallyBoundedVariationOn f s\n⊢ Filter.Eventually (fun x => Membership.mem s x → DifferentiableWithinAt Real f s x) (MeasureTheory.ae MeasureTheory.MeasureSpace.volume)","decl":"/-- A bounded variation function into `ℝ` is differentiable almost everywhere. Superseded by\n`ae_differentiableWithinAt_of_mem`. -/\ntheorem ae_differentiableWithinAt_of_mem_real {f : ℝ → ℝ} {s : Set ℝ}\n    (h : LocallyBoundedVariationOn f s) : ∀ᵐ x, x ∈ s → DifferentiableWithinAt ℝ f s x := by\n  obtain ⟨p, q, hp, hq, rfl⟩ : ∃ p q, MonotoneOn p s ∧ MonotoneOn q s ∧ f = p - q :=\n    h.exists_monotoneOn_sub_monotoneOn\n  filter_upwards [hp.ae_differentiableWithinAt_of_mem, hq.ae_differentiableWithinAt_of_mem] with\n    x hxp hxq xs\n  exact (hxp xs).sub (hxq xs)\n\n"}
{"name":"LocallyBoundedVariationOn.ae_differentiableWithinAt_of_mem_pi","module":"Mathlib.Analysis.BoundedVariation","initialProofState":"ι : Type u_4\ninst✝ : Fintype ι\nf : Real → ι → Real\ns : Set Real\nh : LocallyBoundedVariationOn f s\n⊢ Filter.Eventually (fun x => Membership.mem s x → DifferentiableWithinAt Real f s x) (MeasureTheory.ae MeasureTheory.MeasureSpace.volume)","decl":"/-- A bounded variation function into a finite dimensional product vector space is differentiable\nalmost everywhere. Superseded by `ae_differentiableWithinAt_of_mem`. -/\ntheorem ae_differentiableWithinAt_of_mem_pi {ι : Type*} [Fintype ι] {f : ℝ → ι → ℝ} {s : Set ℝ}\n    (h : LocallyBoundedVariationOn f s) : ∀ᵐ x, x ∈ s → DifferentiableWithinAt ℝ f s x := by\n  have A : ∀ i : ι, LipschitzWith 1 fun x : ι → ℝ => x i := fun i => LipschitzWith.eval i\n  have : ∀ i : ι, ∀ᵐ x, x ∈ s → DifferentiableWithinAt ℝ (fun x : ℝ => f x i) s x := fun i ↦ by\n    apply ae_differentiableWithinAt_of_mem_real\n    exact LipschitzWith.comp_locallyBoundedVariationOn (A i) h\n  filter_upwards [ae_all_iff.2 this] with x hx xs\n  exact differentiableWithinAt_pi.2 fun i => hx i xs\n\n"}
{"name":"LocallyBoundedVariationOn.ae_differentiableWithinAt_of_mem","module":"Mathlib.Analysis.BoundedVariation","initialProofState":"V : Type u_3\ninst✝² : NormedAddCommGroup V\ninst✝¹ : NormedSpace Real V\ninst✝ : FiniteDimensional Real V\nf : Real → V\ns : Set Real\nh : LocallyBoundedVariationOn f s\n⊢ Filter.Eventually (fun x => Membership.mem s x → DifferentiableWithinAt Real f s x) (MeasureTheory.ae MeasureTheory.MeasureSpace.volume)","decl":"/-- A real function into a finite dimensional real vector space with bounded variation on a set\nis differentiable almost everywhere in this set. -/\ntheorem ae_differentiableWithinAt_of_mem {f : ℝ → V} {s : Set ℝ}\n    (h : LocallyBoundedVariationOn f s) : ∀ᵐ x, x ∈ s → DifferentiableWithinAt ℝ f s x := by\n  let A := (Basis.ofVectorSpace ℝ V).equivFun.toContinuousLinearEquiv\n  suffices H : ∀ᵐ x, x ∈ s → DifferentiableWithinAt ℝ (A ∘ f) s x by\n    filter_upwards [H] with x hx xs\n    have : f = (A.symm ∘ A) ∘ f := by\n      simp only [ContinuousLinearEquiv.symm_comp_self, Function.id_comp]\n    rw [this]\n    exact A.symm.differentiableAt.comp_differentiableWithinAt x (hx xs)\n  apply ae_differentiableWithinAt_of_mem_pi\n  exact A.lipschitz.comp_locallyBoundedVariationOn h\n\n"}
{"name":"LocallyBoundedVariationOn.ae_differentiableWithinAt","module":"Mathlib.Analysis.BoundedVariation","initialProofState":"V : Type u_3\ninst✝² : NormedAddCommGroup V\ninst✝¹ : NormedSpace Real V\ninst✝ : FiniteDimensional Real V\nf : Real → V\ns : Set Real\nh : LocallyBoundedVariationOn f s\nhs : MeasurableSet s\n⊢ Filter.Eventually (fun x => DifferentiableWithinAt Real f s x) (MeasureTheory.ae (MeasureTheory.MeasureSpace.volume.restrict s))","decl":"/-- A real function into a finite dimensional real vector space with bounded variation on a set\nis differentiable almost everywhere in this set. -/\ntheorem ae_differentiableWithinAt {f : ℝ → V} {s : Set ℝ} (h : LocallyBoundedVariationOn f s)\n    (hs : MeasurableSet s) : ∀ᵐ x ∂volume.restrict s, DifferentiableWithinAt ℝ f s x := by\n  rw [ae_restrict_iff' hs]\n  exact h.ae_differentiableWithinAt_of_mem\n\n"}
{"name":"LocallyBoundedVariationOn.ae_differentiableAt","module":"Mathlib.Analysis.BoundedVariation","initialProofState":"V : Type u_3\ninst✝² : NormedAddCommGroup V\ninst✝¹ : NormedSpace Real V\ninst✝ : FiniteDimensional Real V\nf : Real → V\nh : LocallyBoundedVariationOn f Set.univ\n⊢ Filter.Eventually (fun x => DifferentiableAt Real f x) (MeasureTheory.ae MeasureTheory.MeasureSpace.volume)","decl":"/-- A real function into a finite dimensional real vector space with bounded variation\nis differentiable almost everywhere. -/\ntheorem ae_differentiableAt {f : ℝ → V} (h : LocallyBoundedVariationOn f univ) :\n    ∀ᵐ x, DifferentiableAt ℝ f x := by\n  filter_upwards [h.ae_differentiableWithinAt_of_mem] with x hx\n  rw [differentiableWithinAt_univ] at hx\n  exact hx (mem_univ _)\n\n"}
{"name":"LipschitzOnWith.ae_differentiableWithinAt_of_mem_real","module":"Mathlib.Analysis.BoundedVariation","initialProofState":"V : Type u_3\ninst✝² : NormedAddCommGroup V\ninst✝¹ : NormedSpace Real V\ninst✝ : FiniteDimensional Real V\nC : NNReal\nf : Real → V\ns : Set Real\nh : LipschitzOnWith C f s\n⊢ Filter.Eventually (fun x => Membership.mem s x → DifferentiableWithinAt Real f s x) (MeasureTheory.ae MeasureTheory.MeasureSpace.volume)","decl":"/-- A real function into a finite dimensional real vector space which is Lipschitz on a set\nis differentiable almost everywhere in this set. For the general Rademacher theorem assuming\nthat the source space is finite dimensional, see `LipschitzOnWith.ae_differentiableWithinAt_of_mem`.\n-/\ntheorem LipschitzOnWith.ae_differentiableWithinAt_of_mem_real {C : ℝ≥0} {f : ℝ → V} {s : Set ℝ}\n    (h : LipschitzOnWith C f s) : ∀ᵐ x, x ∈ s → DifferentiableWithinAt ℝ f s x :=\n  h.locallyBoundedVariationOn.ae_differentiableWithinAt_of_mem\n\n"}
{"name":"LipschitzOnWith.ae_differentiableWithinAt_real","module":"Mathlib.Analysis.BoundedVariation","initialProofState":"V : Type u_3\ninst✝² : NormedAddCommGroup V\ninst✝¹ : NormedSpace Real V\ninst✝ : FiniteDimensional Real V\nC : NNReal\nf : Real → V\ns : Set Real\nh : LipschitzOnWith C f s\nhs : MeasurableSet s\n⊢ Filter.Eventually (fun x => DifferentiableWithinAt Real f s x) (MeasureTheory.ae (MeasureTheory.MeasureSpace.volume.restrict s))","decl":"/-- A real function into a finite dimensional real vector space which is Lipschitz on a set\nis differentiable almost everywhere in this set. For the general Rademacher theorem assuming\nthat the source space is finite dimensional, see `LipschitzOnWith.ae_differentiableWithinAt`. -/\ntheorem LipschitzOnWith.ae_differentiableWithinAt_real {C : ℝ≥0} {f : ℝ → V} {s : Set ℝ}\n    (h : LipschitzOnWith C f s) (hs : MeasurableSet s) :\n    ∀ᵐ x ∂volume.restrict s, DifferentiableWithinAt ℝ f s x :=\n  h.locallyBoundedVariationOn.ae_differentiableWithinAt hs\n\n"}
{"name":"LipschitzWith.ae_differentiableAt_real","module":"Mathlib.Analysis.BoundedVariation","initialProofState":"V : Type u_3\ninst✝² : NormedAddCommGroup V\ninst✝¹ : NormedSpace Real V\ninst✝ : FiniteDimensional Real V\nC : NNReal\nf : Real → V\nh : LipschitzWith C f\n⊢ Filter.Eventually (fun x => DifferentiableAt Real f x) (MeasureTheory.ae MeasureTheory.MeasureSpace.volume)","decl":"/-- A real Lipschitz function into a finite dimensional real vector space is differentiable\nalmost everywhere. For the general Rademacher theorem assuming\nthat the source space is finite dimensional, see `LipschitzWith.ae_differentiableAt`. -/\ntheorem LipschitzWith.ae_differentiableAt_real {C : ℝ≥0} {f : ℝ → V} (h : LipschitzWith C f) :\n    ∀ᵐ x, DifferentiableAt ℝ f x :=\n  (h.locallyBoundedVariationOn univ).ae_differentiableAt\n"}
