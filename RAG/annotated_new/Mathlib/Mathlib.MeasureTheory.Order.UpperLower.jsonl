{"name":"IsUpperSet.null_frontier","module":"Mathlib.MeasureTheory.Order.UpperLower","initialProofState":"ι : Type u_1\ninst✝ : Fintype ι\ns : Set (ι → Real)\nhs : IsUpperSet s\n⊢ Eq (MeasureTheory.MeasureSpace.volume (frontier s)) 0","decl":"theorem IsUpperSet.null_frontier (hs : IsUpperSet s) : volume (frontier s) = 0 := by\n  refine measure_mono_null (fun x hx ↦ ?_)\n    (Besicovitch.ae_tendsto_measure_inter_div_of_measurableSet _\n      (isClosed_closure (s := s)).measurableSet)\n  by_cases h : x ∈ closure s <;>\n    simp only [mem_compl_iff, mem_setOf, h, not_false_eq_true, indicator_of_not_mem,\n      indicator_of_mem, Pi.one_apply]\n  · refine aux₁ fun _ ↦ hs.compl.exists_subset_ball <| frontier_subset_closure ?_\n    rwa [frontier_compl]\n  · exact aux₀ fun _ ↦ hs.exists_subset_ball <| frontier_subset_closure hx\n\n"}
{"name":"IsLowerSet.null_frontier","module":"Mathlib.MeasureTheory.Order.UpperLower","initialProofState":"ι : Type u_1\ninst✝ : Fintype ι\ns : Set (ι → Real)\nhs : IsLowerSet s\n⊢ Eq (MeasureTheory.MeasureSpace.volume (frontier s)) 0","decl":"theorem IsLowerSet.null_frontier (hs : IsLowerSet s) : volume (frontier s) = 0 := by\n  refine measure_mono_null (fun x hx ↦ ?_)\n    (Besicovitch.ae_tendsto_measure_inter_div_of_measurableSet _\n      (isClosed_closure (s := s)).measurableSet)\n  by_cases h : x ∈ closure s <;>\n    simp only [mem_compl_iff, mem_setOf, h, not_false_eq_true, indicator_of_not_mem,\n      indicator_of_mem, Pi.one_apply]\n  · refine aux₁ fun _ ↦ hs.compl.exists_subset_ball <| frontier_subset_closure ?_\n    rwa [frontier_compl]\n  · exact aux₀ fun _ ↦ hs.exists_subset_ball <| frontier_subset_closure hx\n\n"}
{"name":"Set.OrdConnected.null_frontier","module":"Mathlib.MeasureTheory.Order.UpperLower","initialProofState":"ι : Type u_1\ninst✝ : Fintype ι\ns : Set (ι → Real)\nhs : s.OrdConnected\n⊢ Eq (MeasureTheory.MeasureSpace.volume (frontier s)) 0","decl":"theorem Set.OrdConnected.null_frontier (hs : s.OrdConnected) : volume (frontier s) = 0 := by\n  rw [← hs.upperClosure_inter_lowerClosure]\n  exact measure_mono_null (frontier_inter_subset _ _) <| measure_union_null\n    (measure_inter_null_of_null_left _ (UpperSet.upper _).null_frontier)\n    (measure_inter_null_of_null_right _ (LowerSet.lower _).null_frontier)\n\n"}
{"name":"Set.OrdConnected.nullMeasurableSet","module":"Mathlib.MeasureTheory.Order.UpperLower","initialProofState":"ι : Type u_1\ninst✝ : Fintype ι\ns : Set (ι → Real)\nhs : s.OrdConnected\n⊢ MeasureTheory.NullMeasurableSet s MeasureTheory.MeasureSpace.volume","decl":"protected theorem Set.OrdConnected.nullMeasurableSet (hs : s.OrdConnected) : NullMeasurableSet s :=\n  nullMeasurableSet_of_null_frontier hs.null_frontier\n\n"}
{"name":"IsAntichain.volume_eq_zero","module":"Mathlib.MeasureTheory.Order.UpperLower","initialProofState":"ι : Type u_1\ninst✝¹ : Fintype ι\ns : Set (ι → Real)\ninst✝ : Nonempty ι\nhs : IsAntichain (fun x1 x2 => LE.le x1 x2) s\n⊢ Eq (MeasureTheory.MeasureSpace.volume s) 0","decl":"theorem IsAntichain.volume_eq_zero [Nonempty ι] (hs : IsAntichain (· ≤ ·) s) : volume s = 0 := by\n  refine measure_mono_null ?_ hs.ordConnected.null_frontier\n  rw [← closure_diff_interior, hs.interior_eq_empty, diff_empty]\n  exact subset_closure\n"}
