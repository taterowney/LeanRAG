{"name":"ContinuousMap.instAddLeftMono","module":"Mathlib.Topology.ContinuousMap.Lattice","initialProofState":"α : Type u_1\ninst✝⁵ : TopologicalSpace α\nβ : Type u_2\ninst✝⁴ : TopologicalSpace β\ninst✝³ : PartialOrder β\ninst✝² : Add β\ninst✝¹ : ContinuousAdd β\ninst✝ : AddLeftMono β\n⊢ AddLeftMono (ContinuousMap α β)","decl":"@[to_additive]\ninstance instMulLeftMono [PartialOrder β] [Mul β] [ContinuousMul β] [MulLeftMono β] :\n    MulLeftMono C(α, β) :=\n  ⟨fun _ _ _ hg₁₂ x => mul_le_mul_left' (hg₁₂ x) _⟩\n\n"}
{"name":"ContinuousMap.instMulLeftMono","module":"Mathlib.Topology.ContinuousMap.Lattice","initialProofState":"α : Type u_1\ninst✝⁵ : TopologicalSpace α\nβ : Type u_2\ninst✝⁴ : TopologicalSpace β\ninst✝³ : PartialOrder β\ninst✝² : Mul β\ninst✝¹ : ContinuousMul β\ninst✝ : MulLeftMono β\n⊢ MulLeftMono (ContinuousMap α β)","decl":"@[to_additive]\ninstance instMulLeftMono [PartialOrder β] [Mul β] [ContinuousMul β] [MulLeftMono β] :\n    MulLeftMono C(α, β) :=\n  ⟨fun _ _ _ hg₁₂ x => mul_le_mul_left' (hg₁₂ x) _⟩\n\n"}
{"name":"ContinuousMap.instAddRightMono","module":"Mathlib.Topology.ContinuousMap.Lattice","initialProofState":"α : Type u_1\ninst✝⁵ : TopologicalSpace α\nβ : Type u_2\ninst✝⁴ : TopologicalSpace β\ninst✝³ : PartialOrder β\ninst✝² : Add β\ninst✝¹ : ContinuousAdd β\ninst✝ : AddRightMono β\n⊢ AddRightMono (ContinuousMap α β)","decl":"@[to_additive]\ninstance instMulRightMono [PartialOrder β] [Mul β] [ContinuousMul β] [MulRightMono β] :\n    MulRightMono C(α, β) :=\n  ⟨fun _ _ _ hg₁₂ x => mul_le_mul_right' (hg₁₂ x) _⟩\n\n"}
{"name":"ContinuousMap.instMulRightMono","module":"Mathlib.Topology.ContinuousMap.Lattice","initialProofState":"α : Type u_1\ninst✝⁵ : TopologicalSpace α\nβ : Type u_2\ninst✝⁴ : TopologicalSpace β\ninst✝³ : PartialOrder β\ninst✝² : Mul β\ninst✝¹ : ContinuousMul β\ninst✝ : MulRightMono β\n⊢ MulRightMono (ContinuousMap α β)","decl":"@[to_additive]\ninstance instMulRightMono [PartialOrder β] [Mul β] [ContinuousMul β] [MulRightMono β] :\n    MulRightMono C(α, β) :=\n  ⟨fun _ _ _ hg₁₂ x => mul_le_mul_right' (hg₁₂ x) _⟩\n\n"}
{"name":"ContinuousMap.coe_abs","module":"Mathlib.Topology.ContinuousMap.Lattice","initialProofState":"α : Type u_1\ninst✝⁵ : TopologicalSpace α\nβ : Type u_2\ninst✝⁴ : TopologicalSpace β\ninst✝³ : AddGroup β\ninst✝² : TopologicalAddGroup β\ninst✝¹ : Lattice β\ninst✝ : TopologicalLattice β\nf : ContinuousMap α β\n⊢ Eq (⇑(abs f)) (abs ⇑f)","decl":"@[to_additive (attr := simp, norm_cast)]\nlemma coe_mabs (f : C(α, β)) : ⇑|f|ₘ = |⇑f|ₘ := rfl\n\n"}
{"name":"ContinuousMap.coe_mabs","module":"Mathlib.Topology.ContinuousMap.Lattice","initialProofState":"α : Type u_1\ninst✝⁵ : TopologicalSpace α\nβ : Type u_2\ninst✝⁴ : TopologicalSpace β\ninst✝³ : Group β\ninst✝² : TopologicalGroup β\ninst✝¹ : Lattice β\ninst✝ : TopologicalLattice β\nf : ContinuousMap α β\n⊢ Eq (⇑(mabs f)) (mabs ⇑f)","decl":"@[to_additive (attr := simp, norm_cast)]\nlemma coe_mabs (f : C(α, β)) : ⇑|f|ₘ = |⇑f|ₘ := rfl\n\n"}
{"name":"ContinuousMap.abs_apply","module":"Mathlib.Topology.ContinuousMap.Lattice","initialProofState":"α : Type u_1\ninst✝⁵ : TopologicalSpace α\nβ : Type u_2\ninst✝⁴ : TopologicalSpace β\ninst✝³ : AddGroup β\ninst✝² : TopologicalAddGroup β\ninst✝¹ : Lattice β\ninst✝ : TopologicalLattice β\nf : ContinuousMap α β\nx : α\n⊢ Eq ((abs f) x) (abs (f x))","decl":"@[to_additive (attr := simp)]\nlemma mabs_apply (f : C(α, β)) (x : α) : |f|ₘ x = |f x|ₘ := rfl\n\n"}
{"name":"ContinuousMap.mabs_apply","module":"Mathlib.Topology.ContinuousMap.Lattice","initialProofState":"α : Type u_1\ninst✝⁵ : TopologicalSpace α\nβ : Type u_2\ninst✝⁴ : TopologicalSpace β\ninst✝³ : Group β\ninst✝² : TopologicalGroup β\ninst✝¹ : Lattice β\ninst✝ : TopologicalLattice β\nf : ContinuousMap α β\nx : α\n⊢ Eq ((mabs f) x) (mabs (f x))","decl":"@[to_additive (attr := simp)]\nlemma mabs_apply (f : C(α, β)) (x : α) : |f|ₘ x = |f x|ₘ := rfl\n\n"}
