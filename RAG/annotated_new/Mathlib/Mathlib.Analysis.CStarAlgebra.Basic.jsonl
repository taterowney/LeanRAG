{"name":"NormedStarGroup.norm_star","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_1\ninst✝¹ : SeminormedAddCommGroup E\ninst✝ : StarAddMonoid E\nself : NormedStarGroup E\nx : E\n⊢ Eq (Norm.norm (Star.star x)) (Norm.norm x)","decl":"/-- A normed star group is a normed group with a compatible `star` which is isometric. -/\nclass NormedStarGroup (E : Type*) [SeminormedAddCommGroup E] [StarAddMonoid E] : Prop where\n  norm_star : ∀ x : E, ‖x⋆‖ = ‖x‖\n\n"}
{"name":"nnnorm_star","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_2\ninst✝² : SeminormedAddCommGroup E\ninst✝¹ : StarAddMonoid E\ninst✝ : NormedStarGroup E\nx : E\n⊢ Eq (NNNorm.nnnorm (Star.star x)) (NNNorm.nnnorm x)","decl":"@[simp]\ntheorem nnnorm_star (x : E) : ‖star x‖₊ = ‖x‖₊ :=\n  Subtype.ext <| norm_star _\n\n"}
{"name":"star_isometry","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_2\ninst✝² : SeminormedAddCommGroup E\ninst✝¹ : StarAddMonoid E\ninst✝ : NormedStarGroup E\n⊢ Isometry Star.star","decl":"/-- The `star` map in a normed star group is an isometry -/\ntheorem star_isometry : Isometry (star : E → E) :=\n  show Isometry starAddEquiv from\n    AddMonoidHomClass.isometry_of_norm starAddEquiv (show ∀ x, ‖x⋆‖ = ‖x‖ from norm_star)\n\n"}
{"name":"NormedStarGroup.to_continuousStar","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_2\ninst✝² : SeminormedAddCommGroup E\ninst✝¹ : StarAddMonoid E\ninst✝ : NormedStarGroup E\n⊢ ContinuousStar E","decl":"instance (priority := 100) NormedStarGroup.to_continuousStar : ContinuousStar E :=\n  ⟨star_isometry.continuous⟩\n\n"}
{"name":"RingHomIsometric.starRingEnd","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_2\ninst✝² : NormedCommRing E\ninst✝¹ : StarRing E\ninst✝ : NormedStarGroup E\n⊢ RingHomIsometric (starRingEnd E)","decl":"instance RingHomIsometric.starRingEnd [NormedCommRing E] [StarRing E] [NormedStarGroup E] :\n    RingHomIsometric (starRingEnd E) :=\n  ⟨@norm_star _ _ _ _⟩\n\n"}
{"name":"CStarRing.norm_mul_self_le","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_4\ninst✝¹ : NonUnitalNormedRing E\ninst✝ : StarRing E\nself : CStarRing E\nx : E\n⊢ LE.le (HMul.hMul (Norm.norm x) (Norm.norm x)) (Norm.norm (HMul.hMul (Star.star x) x))","decl":"/-- A C*-ring is a normed star ring that satisfies the stronger condition `‖x‖ ^ 2 ≤ ‖x⋆ * x‖`\nfor every `x`. Note that this condition actually implies equality, as is shown in\n`norm_star_mul_self` below. -/\nclass CStarRing (E : Type*) [NonUnitalNormedRing E] [StarRing E] : Prop where\n  norm_mul_self_le : ∀ x : E, ‖x‖ * ‖x‖ ≤ ‖x⋆ * x‖\n\n"}
{"name":"instCStarRingReal","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"⊢ CStarRing Real","decl":"instance : CStarRing ℝ where\n  norm_mul_self_le x := by\n    simp only [Real.norm_eq_abs, abs_mul_abs_self, star, id, norm_mul, le_refl]\n\n"}
{"name":"CStarRing.to_normedStarGroup","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_2\ninst✝¹ : NonUnitalNormedRing E\ninst✝ : StarRing E\n⊢ NormedStarGroup E","decl":"/-- In a C*-ring, star preserves the norm. -/\ninstance (priority := 100) to_normedStarGroup : NormedStarGroup E :=\n  ⟨by\n    intro x\n    by_cases htriv : x = 0\n    · simp only [htriv, star_zero]\n    · have hnt : 0 < ‖x‖ := norm_pos_iff.mpr htriv\n      have h₁ : ∀ z : E, ‖z⋆ * z‖ ≤ ‖z⋆‖ * ‖z‖ := fun z => norm_mul_le z⋆ z\n      have h₂ : ∀ z : E, 0 < ‖z‖ → ‖z‖ ≤ ‖z⋆‖ := fun z hz => by\n        rw [← mul_le_mul_right hz]; exact (CStarRing.norm_mul_self_le z).trans (h₁ z)\n      have h₃ : ‖x⋆‖ ≤ ‖x‖ := by\n        conv_rhs => rw [← star_star x]\n        exact h₂ x⋆ (gt_of_ge_of_gt (h₂ x hnt) hnt)\n      exact le_antisymm h₃ (h₂ x hnt)⟩\n\n"}
{"name":"CStarRing.norm_star_mul_self","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_2\ninst✝² : NonUnitalNormedRing E\ninst✝¹ : StarRing E\ninst✝ : CStarRing E\nx : E\n⊢ Eq (Norm.norm (HMul.hMul (Star.star x) x)) (HMul.hMul (Norm.norm x) (Norm.norm x))","decl":"theorem norm_star_mul_self {x : E} : ‖x⋆ * x‖ = ‖x‖ * ‖x‖ :=\n  le_antisymm ((norm_mul_le _ _).trans (by rw [norm_star])) (CStarRing.norm_mul_self_le x)\n\n"}
{"name":"CStarRing.norm_self_mul_star","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_2\ninst✝² : NonUnitalNormedRing E\ninst✝¹ : StarRing E\ninst✝ : CStarRing E\nx : E\n⊢ Eq (Norm.norm (HMul.hMul x (Star.star x))) (HMul.hMul (Norm.norm x) (Norm.norm x))","decl":"theorem norm_self_mul_star {x : E} : ‖x * x⋆‖ = ‖x‖ * ‖x‖ := by\n  nth_rw 1 [← star_star x]\n  simp only [norm_star_mul_self, norm_star]\n\n"}
{"name":"CStarRing.norm_star_mul_self'","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_2\ninst✝² : NonUnitalNormedRing E\ninst✝¹ : StarRing E\ninst✝ : CStarRing E\nx : E\n⊢ Eq (Norm.norm (HMul.hMul (Star.star x) x)) (HMul.hMul (Norm.norm (Star.star x)) (Norm.norm x))","decl":"theorem norm_star_mul_self' {x : E} : ‖x⋆ * x‖ = ‖x⋆‖ * ‖x‖ := by rw [norm_star_mul_self, norm_star]\n\n"}
{"name":"CStarRing.nnnorm_self_mul_star","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_2\ninst✝² : NonUnitalNormedRing E\ninst✝¹ : StarRing E\ninst✝ : CStarRing E\nx : E\n⊢ Eq (NNNorm.nnnorm (HMul.hMul x (Star.star x))) (HMul.hMul (NNNorm.nnnorm x) (NNNorm.nnnorm x))","decl":"theorem nnnorm_self_mul_star {x : E} : ‖x * x⋆‖₊ = ‖x‖₊ * ‖x‖₊ :=\n  Subtype.ext norm_self_mul_star\n\n"}
{"name":"CStarRing.nnnorm_star_mul_self","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_2\ninst✝² : NonUnitalNormedRing E\ninst✝¹ : StarRing E\ninst✝ : CStarRing E\nx : E\n⊢ Eq (NNNorm.nnnorm (HMul.hMul (Star.star x) x)) (HMul.hMul (NNNorm.nnnorm x) (NNNorm.nnnorm x))","decl":"theorem nnnorm_star_mul_self {x : E} : ‖x⋆ * x‖₊ = ‖x‖₊ * ‖x‖₊ :=\n  Subtype.ext norm_star_mul_self\n\n"}
{"name":"CStarRing.star_mul_self_eq_zero_iff","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_2\ninst✝² : NonUnitalNormedRing E\ninst✝¹ : StarRing E\ninst✝ : CStarRing E\nx : E\n⊢ Iff (Eq (HMul.hMul (Star.star x) x) 0) (Eq x 0)","decl":"@[simp]\ntheorem star_mul_self_eq_zero_iff (x : E) : x⋆ * x = 0 ↔ x = 0 := by\n  rw [← norm_eq_zero, norm_star_mul_self]\n  exact mul_self_eq_zero.trans norm_eq_zero\n\n"}
{"name":"CStarRing.star_mul_self_ne_zero_iff","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_2\ninst✝² : NonUnitalNormedRing E\ninst✝¹ : StarRing E\ninst✝ : CStarRing E\nx : E\n⊢ Iff (Ne (HMul.hMul (Star.star x) x) 0) (Ne x 0)","decl":"theorem star_mul_self_ne_zero_iff (x : E) : x⋆ * x ≠ 0 ↔ x ≠ 0 := by\n  simp only [Ne, star_mul_self_eq_zero_iff]\n\n"}
{"name":"CStarRing.mul_star_self_eq_zero_iff","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_2\ninst✝² : NonUnitalNormedRing E\ninst✝¹ : StarRing E\ninst✝ : CStarRing E\nx : E\n⊢ Iff (Eq (HMul.hMul x (Star.star x)) 0) (Eq x 0)","decl":"@[simp]\ntheorem mul_star_self_eq_zero_iff (x : E) : x * x⋆ = 0 ↔ x = 0 := by\n  simpa only [star_eq_zero, star_star] using @star_mul_self_eq_zero_iff _ _ _ _ (star x)\n\n"}
{"name":"CStarRing.mul_star_self_ne_zero_iff","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_2\ninst✝² : NonUnitalNormedRing E\ninst✝¹ : StarRing E\ninst✝ : CStarRing E\nx : E\n⊢ Iff (Ne (HMul.hMul x (Star.star x)) 0) (Ne x 0)","decl":"theorem mul_star_self_ne_zero_iff (x : E) : x * x⋆ ≠ 0 ↔ x ≠ 0 := by\n  simp only [Ne, mul_star_self_eq_zero_iff]\n\n"}
{"name":"Prod.cstarRing","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"R₁ : Type u_5\nR₂ : Type u_6\ninst✝³ : NonUnitalNormedRing R₁\ninst✝² : StarRing R₁\ninst✝¹ : NonUnitalNormedRing R₂\ninst✝ : StarRing R₂\n⊢ CStarRing (Prod R₁ R₂)","decl":"instance _root_.Prod.cstarRing : CStarRing (R₁ × R₂) where\n  norm_mul_self_le x := by\n    dsimp only [norm]\n    simp only [Prod.fst_mul, Prod.fst_star, Prod.snd_mul, Prod.snd_star, norm_star_mul_self, ← sq]\n    rw [le_sup_iff]\n    rcases le_total ‖x.fst‖ ‖x.snd‖ with (h | h) <;> simp [h]\n\n"}
{"name":"Pi.cstarRing","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"ι : Type u_4\nR : ι → Type u_7\ninst✝² : (i : ι) → NonUnitalNormedRing (R i)\ninst✝¹ : (i : ι) → StarRing (R i)\ninst✝ : Fintype ι\n⊢ CStarRing ((i : ι) → R i)","decl":"instance _root_.Pi.cstarRing : CStarRing (∀ i, R i) where\n  norm_mul_self_le x := by\n    refine le_of_eq (Eq.symm ?_)\n    simp only [norm, Pi.mul_apply, Pi.star_apply, nnnorm_star_mul_self, ← sq]\n    norm_cast\n    exact\n      (Finset.comp_sup_eq_sup_comp_of_is_total (fun x : NNReal => x ^ 2)\n          (fun x y h => by simpa only [sq] using mul_le_mul' h h) (by simp)).symm\n\n"}
{"name":"Pi.cstarRing'","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"ι : Type u_4\nR₁ : Type u_5\ninst✝² : NonUnitalNormedRing R₁\ninst✝¹ : StarRing R₁\ninst✝ : Fintype ι\n⊢ CStarRing (ι → R₁)","decl":"instance _root_.Pi.cstarRing' : CStarRing (ι → R₁) :=\n  Pi.cstarRing\n\n"}
{"name":"CStarRing.norm_one","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_2\ninst✝³ : NormedRing E\ninst✝² : StarRing E\ninst✝¹ : CStarRing E\ninst✝ : Nontrivial E\n⊢ Eq (Norm.norm 1) 1","decl":"theorem norm_one [Nontrivial E] : ‖(1 : E)‖ = 1 := by\n  have : 0 < ‖(1 : E)‖ := norm_pos_iff.mpr one_ne_zero\n  rw [← mul_left_inj' this.ne', ← norm_star_mul_self, mul_one, star_one, one_mul]\n\n-- see Note [lower instance priority]\n"}
{"name":"CStarRing.instNormOneClassOfNontrivial","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_2\ninst✝³ : NormedRing E\ninst✝² : StarRing E\ninst✝¹ : CStarRing E\ninst✝ : Nontrivial E\n⊢ NormOneClass E","decl":"instance (priority := 100) [Nontrivial E] : NormOneClass E :=\n  ⟨norm_one⟩\n\n"}
{"name":"CStarRing.norm_coe_unitary","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_2\ninst✝³ : NormedRing E\ninst✝² : StarRing E\ninst✝¹ : CStarRing E\ninst✝ : Nontrivial E\nU : Subtype fun x => Membership.mem (unitary E) x\n⊢ Eq (Norm.norm ↑U) 1","decl":"theorem norm_coe_unitary [Nontrivial E] (U : unitary E) : ‖(U : E)‖ = 1 := by\n  rw [← sq_eq_sq₀ (norm_nonneg _) zero_le_one, one_pow 2, sq, ← CStarRing.norm_star_mul_self,\n    unitary.coe_star_mul_self, CStarRing.norm_one]\n\n"}
{"name":"CStarRing.norm_of_mem_unitary","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_2\ninst✝³ : NormedRing E\ninst✝² : StarRing E\ninst✝¹ : CStarRing E\ninst✝ : Nontrivial E\nU : E\nhU : Membership.mem (unitary E) U\n⊢ Eq (Norm.norm U) 1","decl":"@[simp]\ntheorem norm_of_mem_unitary [Nontrivial E] {U : E} (hU : U ∈ unitary E) : ‖U‖ = 1 :=\n  norm_coe_unitary ⟨U, hU⟩\n\n"}
{"name":"CStarRing.norm_coe_unitary_mul","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_2\ninst✝² : NormedRing E\ninst✝¹ : StarRing E\ninst✝ : CStarRing E\nU : Subtype fun x => Membership.mem (unitary E) x\nA : E\n⊢ Eq (Norm.norm (HMul.hMul (↑U) A)) (Norm.norm A)","decl":"@[simp]\ntheorem norm_coe_unitary_mul (U : unitary E) (A : E) : ‖(U : E) * A‖ = ‖A‖ := by\n  nontriviality E\n  refine le_antisymm ?_ ?_\n  · calc\n      _ ≤ ‖(U : E)‖ * ‖A‖ := norm_mul_le _ _\n      _ = ‖A‖ := by rw [norm_coe_unitary, one_mul]\n  · calc\n      _ = ‖(U : E)⋆ * U * A‖ := by rw [unitary.coe_star_mul_self U, one_mul]\n      _ ≤ ‖(U : E)⋆‖ * ‖(U : E) * A‖ := by\n        rw [mul_assoc]\n        exact norm_mul_le _ _\n      _ = ‖(U : E) * A‖ := by rw [norm_star, norm_coe_unitary, one_mul]\n\n"}
{"name":"CStarRing.norm_unitary_smul","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_2\ninst✝² : NormedRing E\ninst✝¹ : StarRing E\ninst✝ : CStarRing E\nU : Subtype fun x => Membership.mem (unitary E) x\nA : E\n⊢ Eq (Norm.norm (HSMul.hSMul U A)) (Norm.norm A)","decl":"@[simp]\ntheorem norm_unitary_smul (U : unitary E) (A : E) : ‖U • A‖ = ‖A‖ :=\n  norm_coe_unitary_mul U A\n\n"}
{"name":"CStarRing.norm_mem_unitary_mul","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_2\ninst✝² : NormedRing E\ninst✝¹ : StarRing E\ninst✝ : CStarRing E\nU A : E\nhU : Membership.mem (unitary E) U\n⊢ Eq (Norm.norm (HMul.hMul U A)) (Norm.norm A)","decl":"theorem norm_mem_unitary_mul {U : E} (A : E) (hU : U ∈ unitary E) : ‖U * A‖ = ‖A‖ :=\n  norm_coe_unitary_mul ⟨U, hU⟩ A\n\n"}
{"name":"CStarRing.norm_mul_coe_unitary","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_2\ninst✝² : NormedRing E\ninst✝¹ : StarRing E\ninst✝ : CStarRing E\nA : E\nU : Subtype fun x => Membership.mem (unitary E) x\n⊢ Eq (Norm.norm (HMul.hMul A ↑U)) (Norm.norm A)","decl":"@[simp]\ntheorem norm_mul_coe_unitary (A : E) (U : unitary E) : ‖A * U‖ = ‖A‖ :=\n  calc\n    _ = ‖((U : E)⋆ * A⋆)⋆‖ := by simp only [star_star, star_mul]\n    _ = ‖(U : E)⋆ * A⋆‖ := by rw [norm_star]\n    _ = ‖A⋆‖ := norm_mem_unitary_mul (star A) (unitary.star_mem U.prop)\n    _ = ‖A‖ := norm_star _\n\n"}
{"name":"CStarRing.norm_mul_mem_unitary","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_2\ninst✝² : NormedRing E\ninst✝¹ : StarRing E\ninst✝ : CStarRing E\nA U : E\nhU : Membership.mem (unitary E) U\n⊢ Eq (Norm.norm (HMul.hMul A U)) (Norm.norm A)","decl":"theorem norm_mul_mem_unitary (A : E) {U : E} (hU : U ∈ unitary E) : ‖A * U‖ = ‖A‖ :=\n  norm_mul_coe_unitary A ⟨U, hU⟩\n\n"}
{"name":"IsSelfAdjoint.nnnorm_pow_two_pow","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_2\ninst✝² : NormedRing E\ninst✝¹ : StarRing E\ninst✝ : CStarRing E\nx : E\nhx : IsSelfAdjoint x\nn : Nat\n⊢ Eq (NNNorm.nnnorm (HPow.hPow x (HPow.hPow 2 n))) (HPow.hPow (NNNorm.nnnorm x) (HPow.hPow 2 n))","decl":"theorem IsSelfAdjoint.nnnorm_pow_two_pow [NormedRing E] [StarRing E] [CStarRing E] {x : E}\n    (hx : IsSelfAdjoint x) (n : ℕ) : ‖x ^ 2 ^ n‖₊ = ‖x‖₊ ^ 2 ^ n := by\n  induction' n with k hk\n  · simp only [pow_zero, pow_one]\n  · rw [pow_succ', pow_mul', sq]\n    nth_rw 1 [← selfAdjoint.mem_iff.mp hx]\n    rw [← star_pow, CStarRing.nnnorm_star_mul_self, ← sq, hk, pow_mul']\n\n"}
{"name":"selfAdjoint.nnnorm_pow_two_pow","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"E : Type u_2\ninst✝² : NormedRing E\ninst✝¹ : StarRing E\ninst✝ : CStarRing E\nx : Subtype fun x => Membership.mem (selfAdjoint E) x\nn : Nat\n⊢ Eq (NNNorm.nnnorm (HPow.hPow x (HPow.hPow 2 n))) (HPow.hPow (NNNorm.nnnorm x) (HPow.hPow 2 n))","decl":"theorem selfAdjoint.nnnorm_pow_two_pow [NormedRing E] [StarRing E] [CStarRing E] (x : selfAdjoint E)\n    (n : ℕ) : ‖x ^ 2 ^ n‖₊ = ‖x‖₊ ^ 2 ^ n :=\n  x.prop.nnnorm_pow_two_pow _\n\n"}
{"name":"coe_starₗᵢ","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁶ : CommSemiring 𝕜\ninst✝⁵ : StarRing 𝕜\ninst✝⁴ : SeminormedAddCommGroup E\ninst✝³ : StarAddMonoid E\ninst✝² : NormedStarGroup E\ninst✝¹ : Module 𝕜 E\ninst✝ : StarModule 𝕜 E\n⊢ Eq (⇑(starₗᵢ 𝕜)) Star.star","decl":"@[simp]\ntheorem coe_starₗᵢ : (starₗᵢ 𝕜 : E → E) = star :=\n  rfl\n\n"}
{"name":"starₗᵢ_apply","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁶ : CommSemiring 𝕜\ninst✝⁵ : StarRing 𝕜\ninst✝⁴ : SeminormedAddCommGroup E\ninst✝³ : StarAddMonoid E\ninst✝² : NormedStarGroup E\ninst✝¹ : Module 𝕜 E\ninst✝ : StarModule 𝕜 E\nx : E\n⊢ Eq ((starₗᵢ 𝕜) x) (Star.star x)","decl":"theorem starₗᵢ_apply {x : E} : starₗᵢ 𝕜 x = star x :=\n  rfl\n\n"}
{"name":"starₗᵢ_toContinuousLinearEquiv","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"𝕜 : Type u_1\nE : Type u_2\ninst✝⁶ : CommSemiring 𝕜\ninst✝⁵ : StarRing 𝕜\ninst✝⁴ : SeminormedAddCommGroup E\ninst✝³ : StarAddMonoid E\ninst✝² : NormedStarGroup E\ninst✝¹ : Module 𝕜 E\ninst✝ : StarModule 𝕜 E\n⊢ Eq (starₗᵢ 𝕜).toContinuousLinearEquiv (starL 𝕜)","decl":"@[simp]\ntheorem starₗᵢ_toContinuousLinearEquiv :\n    (starₗᵢ 𝕜 : E ≃ₗᵢ⋆[𝕜] E).toContinuousLinearEquiv = (starL 𝕜 : E ≃L⋆[𝕜] E) :=\n  ContinuousLinearEquiv.ext rfl\n\n"}
{"name":"StarSubalgebra.to_cstarRing","module":"Mathlib.Analysis.CStarAlgebra.Basic","initialProofState":"R : Type u_4\nA : Type u_5\ninst✝⁶ : CommRing R\ninst✝⁵ : StarRing R\ninst✝⁴ : NormedRing A\ninst✝³ : StarRing A\ninst✝² : CStarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nS : StarSubalgebra R A\n⊢ CStarRing (Subtype fun x => Membership.mem S x)","decl":"instance to_cstarRing {R A} [CommRing R] [StarRing R] [NormedRing A] [StarRing A] [CStarRing A]\n    [Algebra R A] [StarModule R A] (S : StarSubalgebra R A) : CStarRing S where\n  norm_mul_self_le x := @CStarRing.norm_mul_self_le A _ _ _ x\n\n"}
