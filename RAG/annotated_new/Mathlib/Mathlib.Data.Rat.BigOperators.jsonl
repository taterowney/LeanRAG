{"name":"Rat.cast_list_sum","module":"Mathlib.Data.Rat.BigOperators","initialProofState":"α : Type u_2\ninst✝¹ : DivisionRing α\ninst✝ : CharZero α\ns : List Rat\n⊢ Eq (↑s.sum) (List.map Rat.cast s).sum","decl":"@[simp, norm_cast]\ntheorem cast_list_sum (s : List ℚ) : (↑s.sum : α) = (s.map (↑)).sum :=\n  map_list_sum (Rat.castHom α) _\n\n"}
{"name":"Rat.cast_multiset_sum","module":"Mathlib.Data.Rat.BigOperators","initialProofState":"α : Type u_2\ninst✝¹ : DivisionRing α\ninst✝ : CharZero α\ns : Multiset Rat\n⊢ Eq (↑s.sum) (Multiset.map Rat.cast s).sum","decl":"@[simp, norm_cast]\ntheorem cast_multiset_sum (s : Multiset ℚ) : (↑s.sum : α) = (s.map (↑)).sum :=\n  map_multiset_sum (Rat.castHom α) _\n\n"}
{"name":"Rat.cast_sum","module":"Mathlib.Data.Rat.BigOperators","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝¹ : DivisionRing α\ninst✝ : CharZero α\ns : Finset ι\nf : ι → Rat\n⊢ Eq (↑(s.sum fun i => f i)) (s.sum fun i => ↑(f i))","decl":"@[simp, norm_cast]\ntheorem cast_sum (s : Finset ι) (f : ι → ℚ) : ∑ i ∈ s, f i = ∑ i ∈ s, (f i : α) :=\n  map_sum (Rat.castHom α) _ s\n\n"}
{"name":"Rat.cast_list_prod","module":"Mathlib.Data.Rat.BigOperators","initialProofState":"α : Type u_2\ninst✝¹ : DivisionRing α\ninst✝ : CharZero α\ns : List Rat\n⊢ Eq (↑s.prod) (List.map Rat.cast s).prod","decl":"@[simp, norm_cast]\ntheorem cast_list_prod (s : List ℚ) : (↑s.prod : α) = (s.map (↑)).prod :=\n  map_list_prod (Rat.castHom α) _\n\n"}
{"name":"Rat.cast_multiset_prod","module":"Mathlib.Data.Rat.BigOperators","initialProofState":"α : Type u_2\ninst✝¹ : Field α\ninst✝ : CharZero α\ns : Multiset Rat\n⊢ Eq (↑s.prod) (Multiset.map Rat.cast s).prod","decl":"@[simp, norm_cast]\ntheorem cast_multiset_prod (s : Multiset ℚ) : (↑s.prod : α) = (s.map (↑)).prod :=\n  map_multiset_prod (Rat.castHom α) _\n\n"}
{"name":"Rat.cast_prod","module":"Mathlib.Data.Rat.BigOperators","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝¹ : Field α\ninst✝ : CharZero α\ns : Finset ι\nf : ι → Rat\n⊢ Eq (↑(s.prod fun i => f i)) (s.prod fun i => ↑(f i))","decl":"@[simp, norm_cast]\ntheorem cast_prod (s : Finset ι) (f : ι → ℚ) : ∏ i ∈ s, f i = ∏ i ∈ s, (f i : α) :=\n  map_prod (Rat.castHom α) _ _\n\n"}
