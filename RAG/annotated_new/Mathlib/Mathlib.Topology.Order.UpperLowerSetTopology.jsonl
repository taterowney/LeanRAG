{"name":"Topology.WithUpperSet.toUpperSet_symm","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\n⊢ Eq Topology.WithUpperSet.toUpperSet.symm Topology.WithUpperSet.ofUpperSet","decl":"@[simp] lemma toUpperSet_symm : (@toUpperSet α).symm = ofUpperSet := rfl\n"}
{"name":"Topology.WithUpperSet.to_WithUpperSet_symm_eq","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\n⊢ Eq Topology.WithUpperSet.toUpperSet.symm Topology.WithUpperSet.ofUpperSet","decl":"@[deprecated (since := \"2024-10-10\")] alias to_WithUpperSet_symm_eq := toUpperSet_symm\n"}
{"name":"Topology.WithUpperSet.ofUpperSet_symm","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\n⊢ Eq Topology.WithUpperSet.ofUpperSet.symm Topology.WithUpperSet.toUpperSet","decl":"@[simp] lemma ofUpperSet_symm : (@ofUpperSet α).symm = toUpperSet := rfl\n"}
{"name":"Topology.WithUpperSet.of_WithUpperSet_symm_eq","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\n⊢ Eq Topology.WithUpperSet.ofUpperSet.symm Topology.WithUpperSet.toUpperSet","decl":"@[deprecated (since := \"2024-10-10\")] alias of_WithUpperSet_symm_eq := ofUpperSet_symm\n"}
{"name":"Topology.WithUpperSet.toUpperSet_ofUpperSet","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\na : Topology.WithUpperSet α\n⊢ Eq (Topology.WithUpperSet.toUpperSet (Topology.WithUpperSet.ofUpperSet a)) a","decl":"@[simp] lemma toUpperSet_ofUpperSet (a : WithUpperSet α) : toUpperSet (ofUpperSet a) = a := rfl\n"}
{"name":"Topology.WithUpperSet.ofUpperSet_toUpperSet","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\na : α\n⊢ Eq (Topology.WithUpperSet.ofUpperSet (Topology.WithUpperSet.toUpperSet a)) a","decl":"@[simp] lemma ofUpperSet_toUpperSet (a : α) : ofUpperSet (toUpperSet a) = a := rfl\n"}
{"name":"Topology.WithUpperSet.toUpperSet_inj","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\na b : α\n⊢ Iff (Eq (Topology.WithUpperSet.toUpperSet a) (Topology.WithUpperSet.toUpperSet b)) (Eq a b)","decl":"lemma toUpperSet_inj {a b : α} : toUpperSet a = toUpperSet b ↔ a = b := Iff.rfl\n"}
{"name":"Topology.WithUpperSet.ofUpperSet_inj","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\na b : Topology.WithUpperSet α\n⊢ Iff (Eq (Topology.WithUpperSet.ofUpperSet a) (Topology.WithUpperSet.ofUpperSet b)) (Eq a b)","decl":"lemma ofUpperSet_inj {a b : WithUpperSet α} : ofUpperSet a = ofUpperSet b ↔ a = b := Iff.rfl\n\n"}
{"name":"Topology.WithUpperSet.instNonempty","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝ : Nonempty α\n⊢ Nonempty (Topology.WithUpperSet α)","decl":"instance [Nonempty α] : Nonempty (WithUpperSet α) := ‹Nonempty α›\n"}
{"name":"Topology.WithUpperSet.ofUpperSet_le_iff","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝ : Preorder α\na b : Topology.WithUpperSet α\n⊢ Iff (LE.le (Topology.WithUpperSet.ofUpperSet a) (Topology.WithUpperSet.ofUpperSet b)) (LE.le a b)","decl":"lemma ofUpperSet_le_iff {a b : WithUpperSet α} : ofUpperSet a ≤ ofUpperSet b ↔ a ≤ b := Iff.rfl\n"}
{"name":"Topology.WithUpperSet.toUpperSet_le_iff","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝ : Preorder α\na b : α\n⊢ Iff (LE.le (Topology.WithUpperSet.toUpperSet a) (Topology.WithUpperSet.toUpperSet b)) (LE.le a b)","decl":"lemma toUpperSet_le_iff {a b : α} : toUpperSet a ≤ toUpperSet b ↔ a ≤ b := Iff.rfl\n\n"}
{"name":"Topology.WithLowerSet.toLowerSet_symm","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\n⊢ Eq Topology.WithLowerSet.toLowerSet.symm Topology.WithLowerSet.ofLowerSet","decl":"@[simp] lemma toLowerSet_symm : (@toLowerSet α).symm = ofLowerSet := rfl\n"}
{"name":"Topology.WithLowerSet.to_WithLowerSet_symm_eq","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\n⊢ Eq Topology.WithLowerSet.toLowerSet.symm Topology.WithLowerSet.ofLowerSet","decl":"@[deprecated (since := \"2024-10-10\")] alias to_WithLowerSet_symm_eq := toLowerSet_symm\n"}
{"name":"Topology.WithLowerSet.ofLowerSet_symm","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\n⊢ Eq Topology.WithLowerSet.ofLowerSet.symm Topology.WithLowerSet.toLowerSet","decl":"@[simp] lemma ofLowerSet_symm : (@ofLowerSet α).symm = toLowerSet := rfl\n"}
{"name":"Topology.WithLowerSet.of_WithLowerSet_symm_eq","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\n⊢ Eq Topology.WithLowerSet.ofLowerSet.symm Topology.WithLowerSet.toLowerSet","decl":"@[deprecated (since := \"2024-10-10\")] alias of_WithLowerSet_symm_eq := ofLowerSet_symm\n"}
{"name":"Topology.WithLowerSet.toLowerSet_ofLowerSet","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\na : Topology.WithLowerSet α\n⊢ Eq (Topology.WithLowerSet.toLowerSet (Topology.WithLowerSet.ofLowerSet a)) a","decl":"@[simp] lemma toLowerSet_ofLowerSet (a : WithLowerSet α) : toLowerSet (ofLowerSet a) = a := rfl\n"}
{"name":"Topology.WithLowerSet.ofLowerSet_toLowerSet","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\na : α\n⊢ Eq (Topology.WithLowerSet.ofLowerSet (Topology.WithLowerSet.toLowerSet a)) a","decl":"@[simp] lemma ofLowerSet_toLowerSet (a : α) : ofLowerSet (toLowerSet a) = a := rfl\n"}
{"name":"Topology.WithLowerSet.toLowerSet_inj","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\na b : α\n⊢ Iff (Eq (Topology.WithLowerSet.toLowerSet a) (Topology.WithLowerSet.toLowerSet b)) (Eq a b)","decl":"lemma toLowerSet_inj {a b : α} : toLowerSet a = toLowerSet b ↔ a = b := Iff.rfl\n"}
{"name":"Topology.WithLowerSet.ofLowerSet_inj","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\na b : Topology.WithLowerSet α\n⊢ Iff (Eq (Topology.WithLowerSet.ofLowerSet a) (Topology.WithLowerSet.ofLowerSet b)) (Eq a b)","decl":"lemma ofLowerSet_inj {a b : WithLowerSet α} : ofLowerSet a = ofLowerSet b ↔ a = b := Iff.rfl\n\n"}
{"name":"Topology.WithLowerSet.instNonempty","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝ : Nonempty α\n⊢ Nonempty (Topology.WithLowerSet α)","decl":"instance [Nonempty α] : Nonempty (WithLowerSet α) := ‹Nonempty α›\n"}
{"name":"Topology.WithLowerSet.ofLowerSet_le_iff","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝ : Preorder α\na b : Topology.WithLowerSet α\n⊢ Iff (LE.le (Topology.WithLowerSet.ofLowerSet a) (Topology.WithLowerSet.ofLowerSet b)) (LE.le a b)","decl":"lemma ofLowerSet_le_iff {a b : WithLowerSet α} : ofLowerSet a ≤ ofLowerSet b ↔ a ≤ b := Iff.rfl\n"}
{"name":"Topology.WithLowerSet.toLowerSet_le_iff","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝ : Preorder α\na b : α\n⊢ Iff (LE.le (Topology.WithLowerSet.toLowerSet a) (Topology.WithLowerSet.toLowerSet b)) (LE.le a b)","decl":"lemma toLowerSet_le_iff {a b : α} : toLowerSet a ≤ toLowerSet b ↔ a ≤ b := Iff.rfl\n\n"}
{"name":"Topology.IsUpperSet.topology_eq_upperSetTopology","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_4\nt : TopologicalSpace α\ninst✝ : Preorder α\nself : Topology.IsUpperSet α\n⊢ Eq t (Topology.upperSet α)","decl":"/-- Prop-valued mixin for an ordered topological space to be\nThe upper set topology is the topology where the open sets are the upper sets. In general the upper\nset topology does not coincide with the upper topology.\n-/\nprotected class IsUpperSet (α : Type*) [t : TopologicalSpace α] [Preorder α] : Prop where\n  topology_eq_upperSetTopology : t = upperSet α\n\n"}
{"name":"Topology.instIsUpperSetWithUpperSet","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝ : Preorder α\n⊢ Topology.IsUpperSet (Topology.WithUpperSet α)","decl":"instance [Preorder α] : Topology.IsUpperSet (WithUpperSet α) := ⟨rfl⟩\n\n"}
{"name":"Topology.instIsUpperSet","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝ : Preorder α\n⊢ Topology.IsUpperSet α","decl":"instance [Preorder α] : @Topology.IsUpperSet α (upperSet α) _ := by\n  letI := upperSet α\n  exact ⟨rfl⟩\n\n"}
{"name":"Topology.IsLowerSet.topology_eq_lowerSetTopology","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_4\nt : TopologicalSpace α\ninst✝ : Preorder α\nself : Topology.IsLowerSet α\n⊢ Eq t (Topology.lowerSet α)","decl":"/--\nThe lower set topology is the topology where the open sets are the lower sets. In general the lower\nset topology does not coincide with the lower topology.\n-/\nprotected class IsLowerSet (α : Type*) [t : TopologicalSpace α] [Preorder α] : Prop where\n  topology_eq_lowerSetTopology : t = lowerSet α\n\n"}
{"name":"Topology.instIsLowerSetWithLowerSet","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝ : Preorder α\n⊢ Topology.IsLowerSet (Topology.WithLowerSet α)","decl":"instance [Preorder α] : Topology.IsLowerSet (WithLowerSet α) := ⟨rfl⟩\n\n"}
{"name":"Topology.instIsLowerSet","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝ : Preorder α\n⊢ Topology.IsLowerSet α","decl":"instance [Preorder α] : @Topology.IsLowerSet α (lowerSet α) _ := by\n  letI := lowerSet α\n  exact ⟨rfl⟩\n\n"}
{"name":"Topology.IsUpperSet.topology_eq","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝² : Preorder α\ninst✝¹ : TopologicalSpace α\ninst✝ : Topology.IsUpperSet α\n⊢ Eq inst✝¹ (Topology.upperSet α)","decl":"lemma topology_eq : ‹_› = upperSet α := topology_eq_upperSetTopology\n\n"}
{"name":"OrderDual.instIsLowerSet","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝² : Preorder α\ninst✝¹ : TopologicalSpace α\ninst✝ : Topology.IsUpperSet α\n⊢ Topology.IsLowerSet (OrderDual α)","decl":"instance _root_.OrderDual.instIsLowerSet [Preorder α] [TopologicalSpace α] [Topology.IsUpperSet α] :\n    Topology.IsLowerSet αᵒᵈ where\n  topology_eq_lowerSetTopology := by ext; rw [IsUpperSet.topology_eq α]\n\n"}
{"name":"Topology.IsUpperSet.isOpen_iff_isUpperSet","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝² : Preorder α\ninst✝¹ : TopologicalSpace α\ninst✝ : Topology.IsUpperSet α\ns : Set α\n⊢ Iff (IsOpen s) (IsUpperSet s)","decl":"lemma isOpen_iff_isUpperSet : IsOpen s ↔ IsUpperSet s := by\n  rw [topology_eq α]\n  rfl\n\n"}
{"name":"Topology.IsUpperSet.toAlexandrovDiscrete","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\n⊢ AlexandrovDiscrete α","decl":"instance toAlexandrovDiscrete : AlexandrovDiscrete α where\n  isOpen_sInter S := by simpa only [isOpen_iff_isUpperSet] using isUpperSet_sInter (α := α)\n\n-- c.f. isClosed_iff_lower_and_subset_implies_LUB_mem\n"}
{"name":"Topology.IsUpperSet.isClosed_iff_isLower","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝² : Preorder α\ninst✝¹ : TopologicalSpace α\ninst✝ : Topology.IsUpperSet α\ns : Set α\n⊢ Iff (IsClosed s) (IsLowerSet s)","decl":"lemma isClosed_iff_isLower : IsClosed s ↔ IsLowerSet s := by\n  rw [← isOpen_compl_iff, isOpen_iff_isUpperSet,\n    isLowerSet_compl.symm, compl_compl]\n\n"}
{"name":"Topology.IsUpperSet.closure_eq_lowerClosure","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝² : Preorder α\ninst✝¹ : TopologicalSpace α\ninst✝ : Topology.IsUpperSet α\ns : Set α\n⊢ Eq (closure s) ↑(lowerClosure s)","decl":"lemma closure_eq_lowerClosure {s : Set α} : closure s = lowerClosure s := by\n  rw [subset_antisymm_iff]\n  refine ⟨?_, lowerClosure_min subset_closure (isClosed_iff_isLower.1 isClosed_closure)⟩\n  · apply closure_minimal subset_lowerClosure _\n    rw [isClosed_iff_isLower]\n    exact LowerSet.lower (lowerClosure s)\n\n"}
{"name":"Topology.IsUpperSet.closure_singleton","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝² : Preorder α\ninst✝¹ : TopologicalSpace α\ninst✝ : Topology.IsUpperSet α\na : α\n⊢ Eq (closure (Singleton.singleton a)) (Set.Iic a)","decl":"/--\nThe closure of a singleton `{a}` in the upper set topology is the right-closed left-infinite\ninterval (-∞,a].\n-/\n@[simp] lemma closure_singleton {a : α} : closure {a} = Iic a := by\n  rw [closure_eq_lowerClosure, lowerClosure_singleton]\n  rfl\n\n"}
{"name":"Topology.IsUpperSet.specializes_iff_le","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝² : Preorder α\ninst✝¹ : TopologicalSpace α\ninst✝ : Topology.IsUpperSet α\na b : α\n⊢ Iff (Specializes a b) (LE.le b a)","decl":"lemma specializes_iff_le {a b : α} : a ⤳ b ↔ b ≤ a := by\n  simp only [specializes_iff_closure_subset, closure_singleton, Iic_subset_Iic]\n\n"}
{"name":"Topology.IsUpperSet.monotone_iff_continuous","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : Preorder α\ninst✝⁴ : Preorder β\ninst✝³ : TopologicalSpace α\ninst✝² : TopologicalSpace β\ninst✝¹ : Topology.IsUpperSet α\ninst✝ : Topology.IsUpperSet β\nf : α → β\n⊢ Iff (Monotone f) (Continuous f)","decl":"protected lemma monotone_iff_continuous [TopologicalSpace α] [TopologicalSpace β]\n    [Topology.IsUpperSet α] [Topology.IsUpperSet β] {f : α → β} : Monotone f ↔ Continuous f := by\n  constructor\n  · intro hf\n    simp_rw [continuous_def, isOpen_iff_isUpperSet]\n    exact fun _ hs ↦ IsUpperSet.preimage hs hf\n  · intro hf a b hab\n    rw [← mem_Iic, ← closure_singleton] at hab ⊢\n    apply Continuous.closure_preimage_subset hf {f b}\n    apply mem_of_mem_of_subset hab\n    apply closure_mono\n    rw [singleton_subset_iff, mem_preimage, mem_singleton_iff]\n\n"}
{"name":"Topology.IsUpperSet.monotone_to_upperTopology_continuous","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : Preorder α\ninst✝⁴ : Preorder β\ninst✝³ : TopologicalSpace α\ninst✝² : TopologicalSpace β\ninst✝¹ : Topology.IsUpperSet α\ninst✝ : Topology.IsUpper β\nf : α → β\nhf : Monotone f\n⊢ Continuous f","decl":"lemma monotone_to_upperTopology_continuous [TopologicalSpace α] [TopologicalSpace β]\n    [Topology.IsUpperSet α] [IsUpper β] {f : α → β} (hf : Monotone f) : Continuous f := by\n  simp_rw [continuous_def, isOpen_iff_isUpperSet]\n  intro s hs\n  exact (IsUpper.isUpperSet_of_isOpen hs).preimage hf\n\n"}
{"name":"Topology.IsUpperSet.upperSet_le_upper","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝² : Preorder α\nt₁ t₂ : TopologicalSpace α\ninst✝¹ : Topology.IsUpperSet α\ninst✝ : Topology.IsUpper α\n⊢ LE.le t₁ t₂","decl":"lemma upperSet_le_upper {t₁ t₂ : TopologicalSpace α} [@Topology.IsUpperSet α t₁ _]\n    [@Topology.IsUpper α t₂ _] : t₁ ≤ t₂ := fun s hs => by\n  rw [@isOpen_iff_isUpperSet α _ t₁]\n  exact IsUpper.isUpperSet_of_isOpen hs\n\n"}
{"name":"Topology.IsLowerSet.topology_eq","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝² : Preorder α\ninst✝¹ : TopologicalSpace α\ninst✝ : Topology.IsLowerSet α\n⊢ Eq inst✝¹ (Topology.lowerSet α)","decl":"lemma topology_eq : ‹_› = lowerSet α := topology_eq_lowerSetTopology\n\n"}
{"name":"OrderDual.instIsUpperSet","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝² : Preorder α\ninst✝¹ : TopologicalSpace α\ninst✝ : Topology.IsLowerSet α\n⊢ Topology.IsUpperSet (OrderDual α)","decl":"instance _root_.OrderDual.instIsUpperSet [Preorder α] [TopologicalSpace α] [Topology.IsLowerSet α] :\n    Topology.IsUpperSet αᵒᵈ where\n  topology_eq_upperSetTopology := by ext; rw [IsLowerSet.topology_eq α]\n\n"}
{"name":"Topology.IsLowerSet.isOpen_iff_isLowerSet","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝² : Preorder α\ninst✝¹ : TopologicalSpace α\ninst✝ : Topology.IsLowerSet α\ns : Set α\n⊢ Iff (IsOpen s) (IsLowerSet s)","decl":"lemma isOpen_iff_isLowerSet : IsOpen s ↔ IsLowerSet s := by rw [topology_eq α]; rfl\n\n"}
{"name":"Topology.IsLowerSet.toAlexandrovDiscrete","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝ : TopologicalSpace α\n⊢ AlexandrovDiscrete α","decl":"instance toAlexandrovDiscrete : AlexandrovDiscrete α := IsUpperSet.toAlexandrovDiscrete (α := αᵒᵈ)\n\n"}
{"name":"Topology.IsLowerSet.isClosed_iff_isUpper","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝² : Preorder α\ninst✝¹ : TopologicalSpace α\ninst✝ : Topology.IsLowerSet α\ns : Set α\n⊢ Iff (IsClosed s) (IsUpperSet s)","decl":"lemma isClosed_iff_isUpper : IsClosed s ↔ IsUpperSet s := by\n  rw [← isOpen_compl_iff, isOpen_iff_isLowerSet, isUpperSet_compl.symm, compl_compl]\n\n"}
{"name":"Topology.IsLowerSet.closure_eq_upperClosure","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝² : Preorder α\ninst✝¹ : TopologicalSpace α\ninst✝ : Topology.IsLowerSet α\ns : Set α\n⊢ Eq (closure s) ↑(upperClosure s)","decl":"lemma closure_eq_upperClosure {s : Set α} : closure s = upperClosure s :=\n  IsUpperSet.closure_eq_lowerClosure (α := αᵒᵈ)\n\n"}
{"name":"Topology.IsLowerSet.closure_singleton","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝² : Preorder α\ninst✝¹ : TopologicalSpace α\ninst✝ : Topology.IsLowerSet α\na : α\n⊢ Eq (closure (Singleton.singleton a)) (Set.Ici a)","decl":"/--\nThe closure of a singleton `{a}` in the lower set topology is the right-closed left-infinite\ninterval (-∞,a].\n-/\n@[simp] lemma closure_singleton {a : α} : closure {a} = Ici a := by\n  rw [closure_eq_upperClosure, upperClosure_singleton]\n  rfl\n\n"}
{"name":"Topology.IsLowerSet.monotone_iff_continuous","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : Preorder α\ninst✝⁴ : Preorder β\ninst✝³ : TopologicalSpace α\ninst✝² : TopologicalSpace β\ninst✝¹ : Topology.IsLowerSet α\ninst✝ : Topology.IsLowerSet β\nf : α → β\n⊢ Iff (Monotone f) (Continuous f)","decl":"protected lemma monotone_iff_continuous [TopologicalSpace α] [TopologicalSpace β]\n    [Topology.IsLowerSet α] [Topology.IsLowerSet β] {f : α → β} : Monotone f ↔ Continuous f := by\n  rw [← monotone_dual_iff]\n  exact IsUpperSet.monotone_iff_continuous (α := αᵒᵈ) (β := βᵒᵈ)\n    (f := (toDual ∘ f ∘ ofDual : αᵒᵈ → βᵒᵈ))\n\n"}
{"name":"Topology.IsLowerSet.monotone_to_lowerTopology_continuous","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : Preorder α\ninst✝⁴ : Preorder β\ninst✝³ : TopologicalSpace α\ninst✝² : TopologicalSpace β\ninst✝¹ : Topology.IsLowerSet α\ninst✝ : Topology.IsLower β\nf : α → β\nhf : Monotone f\n⊢ Continuous f","decl":"lemma monotone_to_lowerTopology_continuous [TopologicalSpace α] [TopologicalSpace β]\n    [Topology.IsLowerSet α] [IsLower β] {f : α → β} (hf : Monotone f) : Continuous f :=\n  IsUpperSet.monotone_to_upperTopology_continuous (α := αᵒᵈ) (β := βᵒᵈ) hf.dual\n\n"}
{"name":"Topology.IsLowerSet.lowerSet_le_lower","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝² : Preorder α\nt₁ t₂ : TopologicalSpace α\ninst✝¹ : Topology.IsLowerSet α\ninst✝ : Topology.IsLower α\n⊢ LE.le t₁ t₂","decl":"lemma lowerSet_le_lower {t₁ t₂ : TopologicalSpace α} [@Topology.IsLowerSet α t₁ _]\n    [@IsLower α t₂ _] : t₁ ≤ t₂ := fun s hs => by\n  rw [@isOpen_iff_isLowerSet α _ t₁]\n  exact IsLower.isLowerSet_of_isOpen hs\n\n"}
{"name":"Topology.isUpperSet_orderDual","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : TopologicalSpace α\n⊢ Iff (Topology.IsUpperSet (OrderDual α)) (Topology.IsLowerSet α)","decl":"lemma isUpperSet_orderDual [Preorder α] [TopologicalSpace α] :\n    Topology.IsUpperSet αᵒᵈ ↔ Topology.IsLowerSet α := by\n  constructor\n  · apply OrderDual.instIsLowerSet\n  · apply OrderDual.instIsUpperSet\n\n"}
{"name":"Topology.isLowerSet_orderDual","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝¹ : Preorder α\ninst✝ : TopologicalSpace α\n⊢ Iff (Topology.IsLowerSet (OrderDual α)) (Topology.IsUpperSet α)","decl":"lemma isLowerSet_orderDual [Preorder α] [TopologicalSpace α] :\n    Topology.IsLowerSet αᵒᵈ ↔ Topology.IsUpperSet α := isUpperSet_orderDual.symm\n\n"}
{"name":"Topology.WithUpperSet.map_id","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝ : Preorder α\n⊢ Eq (Topology.WithUpperSet.map OrderHom.id) (ContinuousMap.id (Topology.WithUpperSet α))","decl":"@[simp] lemma map_id : map (OrderHom.id : α →o α) = ContinuousMap.id _ := rfl\n"}
{"name":"Topology.WithUpperSet.map_comp","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : Preorder α\ninst✝¹ : Preorder β\ninst✝ : Preorder γ\ng : OrderHom β γ\nf : OrderHom α β\n⊢ Eq (Topology.WithUpperSet.map (g.comp f)) ((Topology.WithUpperSet.map g).comp (Topology.WithUpperSet.map f))","decl":"@[simp] lemma map_comp (g : β →o γ) (f : α →o β) : map (g.comp f) = (map g).comp (map f) := rfl\n\n"}
{"name":"Topology.WithUpperSet.toUpperSet_specializes_toUpperSet","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝ : Preorder α\na b : α\n⊢ Iff (Specializes (Topology.WithUpperSet.toUpperSet a) (Topology.WithUpperSet.toUpperSet b)) (LE.le b a)","decl":"@[simp] lemma toUpperSet_specializes_toUpperSet {a b : α} :\n    toUpperSet a ⤳ toUpperSet b ↔ b ≤ a := by\n  simp_rw [specializes_iff_closure_subset, IsUpperSet.closure_singleton, Iic_subset_Iic,\n    toUpperSet_le_iff]\n\n"}
{"name":"Topology.WithUpperSet.ofUpperSet_le_ofUpperSet","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝ : Preorder α\na b : Topology.WithUpperSet α\n⊢ Iff (LE.le (Topology.WithUpperSet.ofUpperSet a) (Topology.WithUpperSet.ofUpperSet b)) (Specializes b a)","decl":"@[simp] lemma ofUpperSet_le_ofUpperSet {a b : WithUpperSet α} :\n    ofUpperSet a ≤ ofUpperSet b ↔ b ⤳ a := toUpperSet_specializes_toUpperSet.symm\n\n"}
{"name":"Topology.WithUpperSet.isUpperSet_toUpperSet_preimage","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝ : Preorder α\ns : Set (Topology.WithUpperSet α)\n⊢ Iff (IsUpperSet (Set.preimage (⇑Topology.WithUpperSet.toUpperSet) s)) (IsOpen s)","decl":"@[simp] lemma isUpperSet_toUpperSet_preimage {s : Set (WithUpperSet α)} :\n    IsUpperSet (toUpperSet ⁻¹' s) ↔ IsOpen s := Iff.rfl\n\n"}
{"name":"Topology.WithUpperSet.isOpen_ofUpperSet_preimage","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝ : Preorder α\ns : Set α\n⊢ Iff (IsOpen (Set.preimage (⇑Topology.WithUpperSet.ofUpperSet) s)) (IsUpperSet s)","decl":"@[simp] lemma isOpen_ofUpperSet_preimage {s : Set α} :\n    IsOpen (ofUpperSet ⁻¹' s) ↔ IsUpperSet s := isUpperSet_toUpperSet_preimage.symm\n\n"}
{"name":"Topology.WithLowerSet.map_id","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝ : Preorder α\n⊢ Eq (Topology.WithLowerSet.map OrderHom.id) (ContinuousMap.id (Topology.WithLowerSet α))","decl":"@[simp] lemma map_id : map (OrderHom.id : α →o α) = ContinuousMap.id _ := rfl\n"}
{"name":"Topology.WithLowerSet.map_comp","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\nβ : Type u_2\nγ : Type u_3\ninst✝² : Preorder α\ninst✝¹ : Preorder β\ninst✝ : Preorder γ\ng : OrderHom β γ\nf : OrderHom α β\n⊢ Eq (Topology.WithLowerSet.map (g.comp f)) ((Topology.WithLowerSet.map g).comp (Topology.WithLowerSet.map f))","decl":"@[simp] lemma map_comp (g : β →o γ) (f : α →o β) : map (g.comp f) = (map g).comp (map f) := rfl\n\n"}
{"name":"Topology.WithLowerSet.toLowerSet_specializes_toLowerSet","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝ : Preorder α\na b : α\n⊢ Iff (Specializes (Topology.WithLowerSet.toLowerSet a) (Topology.WithLowerSet.toLowerSet b)) (LE.le a b)","decl":"@[simp] lemma toLowerSet_specializes_toLowerSet {a b : α} :\n    toLowerSet a ⤳ toLowerSet b ↔ a ≤ b := by\n  simp_rw [specializes_iff_closure_subset, IsLowerSet.closure_singleton, Ici_subset_Ici,\n    toLowerSet_le_iff]\n\n"}
{"name":"Topology.WithLowerSet.ofLowerSet_le_ofLowerSet","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝ : Preorder α\na b : Topology.WithLowerSet α\n⊢ Iff (LE.le (Topology.WithLowerSet.ofLowerSet a) (Topology.WithLowerSet.ofLowerSet b)) (Specializes a b)","decl":"@[simp] lemma ofLowerSet_le_ofLowerSet {a b : WithLowerSet α} :\n    ofLowerSet a ≤ ofLowerSet b ↔ a ⤳ b := toLowerSet_specializes_toLowerSet.symm\n\n"}
{"name":"Topology.WithLowerSet.isLowerSet_toLowerSet_preimage","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝ : Preorder α\ns : Set (Topology.WithLowerSet α)\n⊢ Iff (IsLowerSet (Set.preimage (⇑Topology.WithLowerSet.toLowerSet) s)) (IsOpen s)","decl":"@[simp] lemma isLowerSet_toLowerSet_preimage {s : Set (WithLowerSet α)} :\n    IsLowerSet (toLowerSet ⁻¹' s) ↔ IsOpen s := Iff.rfl\n\n"}
{"name":"Topology.WithLowerSet.isOpen_ofLowerSet_preimage","module":"Mathlib.Topology.Order.UpperLowerSetTopology","initialProofState":"α : Type u_1\ninst✝ : Preorder α\ns : Set α\n⊢ Iff (IsOpen (Set.preimage (⇑Topology.WithLowerSet.ofLowerSet) s)) (IsLowerSet s)","decl":"@[simp] lemma isOpen_ofLowerSet_preimage {s : Set α} :\n    IsOpen (ofLowerSet ⁻¹' s) ↔ IsLowerSet s := isLowerSet_toLowerSet_preimage.symm\n\n"}
