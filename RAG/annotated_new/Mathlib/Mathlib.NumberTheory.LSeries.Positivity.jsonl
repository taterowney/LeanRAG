{"name":"LSeries.iteratedDeriv_alternating","module":"Mathlib.NumberTheory.LSeries.Positivity","initialProofState":"a : Nat → Complex\nhn : LE.le 0 a\nx : Real\nh : LT.lt (LSeries.abscissaOfAbsConv a) ↑x\nn : Nat\n⊢ LE.le 0 (HMul.hMul (HPow.hPow (-1) n) (iteratedDeriv n (LSeries a) ↑x))","decl":"/-- If all values of a `ℂ`-valued arithmetic function are nonnegative reals and `x` is a\nreal number in the domain of absolute convergence, then the `n`th iterated derivative\nof the associated L-series is nonnegative real when `n` is even and nonpositive real\nwhen `n` is odd. -/\nlemma iteratedDeriv_alternating {a : ℕ → ℂ} (hn : 0 ≤ a) {x : ℝ}\n    (h : LSeries.abscissaOfAbsConv a < x) (n : ℕ) :\n    0 ≤ (-1) ^ n * iteratedDeriv n (LSeries a) x := by\n  rw [LSeries_iteratedDeriv _ h, LSeries, ← mul_assoc, ← pow_add, Even.neg_one_pow ⟨n, rfl⟩,\n    one_mul]\n  refine tsum_nonneg fun k ↦ ?_\n  rw [LSeries.term_def]\n  split\n  · exact le_rfl\n  · refine mul_nonneg ?_ <| (inv_natCast_cpow_ofReal_pos (by assumption) x).le\n    induction n with\n    | zero => simpa only [Function.iterate_zero, id_eq] using hn k\n    | succ n IH =>\n        rw [Function.iterate_succ_apply']\n        refine mul_nonneg ?_ IH\n        simp only [← natCast_log, zero_le_real, Real.log_natCast_nonneg]\n\n"}
{"name":"LSeries.positive","module":"Mathlib.NumberTheory.LSeries.Positivity","initialProofState":"a : Nat → Complex\nha₀ : LE.le 0 a\nha₁ : LT.lt 0 (a 1)\nx : Real\nhx : LT.lt (LSeries.abscissaOfAbsConv a) ↑x\n⊢ LT.lt 0 (LSeries a ↑x)","decl":"/-- If all values of `a : ℕ → ℂ` are nonnegative reals and `a 1` is positive,\nthen `L a x` is positive real for all real `x` larger than `abscissaOfAbsConv a`. -/\nlemma positive {a : ℕ → ℂ} (ha₀ : 0 ≤ a) (ha₁ : 0 < a 1) {x : ℝ} (hx : abscissaOfAbsConv a < x) :\n    0 < LSeries a x := by\n  rw [LSeries]\n  refine tsum_pos ?_ (fun n ↦ term_nonneg (ha₀ n) x) 1 <| term_pos one_ne_zero ha₁ x\n  exact LSeriesSummable_of_abscissaOfAbsConv_lt_re <| by simpa only [ofReal_re] using hx\n\n"}
{"name":"LSeries.positive_of_differentiable_of_eqOn","module":"Mathlib.NumberTheory.LSeries.Positivity","initialProofState":"a : Nat → Complex\nha₀ : LE.le 0 a\nha₁ : LT.lt 0 (a 1)\nf : Complex → Complex\nhf : Differentiable Complex f\nx : Real\nhx : LE.le (LSeries.abscissaOfAbsConv a) ↑x\nhf' : Set.EqOn f (LSeries a) (setOf fun s => LT.lt x s.re)\ny : Real\n⊢ LT.lt 0 (f ↑y)","decl":"/-- If all values of `a : ℕ → ℂ` are nonnegative reals and `a 1`\nis positive, and the L-series of `a` agrees with an entire function `f` on some open\nright half-plane where it converges, then `f` is real and positive on `ℝ`. -/\nlemma positive_of_differentiable_of_eqOn {a : ℕ → ℂ} (ha₀ : 0 ≤ a) (ha₁ : 0 < a 1) {f : ℂ → ℂ}\n    (hf : Differentiable ℂ f) {x : ℝ} (hx : abscissaOfAbsConv a ≤ x)\n    (hf' : {s | x < s.re}.EqOn f (LSeries a)) (y : ℝ) :\n    0 < f y := by\n  have hxy : x < max x y + 1 := (le_max_left x y).trans_lt (lt_add_one _)\n  have hxy' : abscissaOfAbsConv a < max x y + 1 := hx.trans_lt <| mod_cast hxy\n  have hys : (max x y + 1 : ℂ) ∈ {s | x < s.re} := by\n    simp only [Set.mem_setOf_eq, add_re, ofReal_re, one_re, hxy]\n  have hfx : 0 < f (max x y + 1) := by\n    simpa only [hf' hys, ofReal_add, ofReal_one] using positive ha₀ ha₁ hxy'\n  refine (hfx.trans_le <| hf.apply_le_of_iteratedDeriv_alternating (fun n _ ↦ ?_) ?_)\n  · have hs : IsOpen {s : ℂ | x < s.re} := continuous_re.isOpen_preimage _ isOpen_Ioi\n    simpa only [hf'.iteratedDeriv_of_isOpen hs n hys, ofReal_add, ofReal_one] using\n      iteratedDeriv_alternating ha₀ hxy' n\n  · exact_mod_cast (le_max_right x y).trans (lt_add_one _).le\n\n"}
{"name":"ArithmeticFunction.iteratedDeriv_LSeries_alternating","module":"Mathlib.NumberTheory.LSeries.Positivity","initialProofState":"a : ArithmeticFunction Complex\nhn : ∀ (n : Nat), LE.le 0 (a n)\nx : Real\nh : LT.lt (LSeries.abscissaOfAbsConv ⇑a) ↑x\nn : Nat\n⊢ LE.le 0 (HMul.hMul (HPow.hPow (-1) n) (iteratedDeriv n (LSeries fun x => a x) ↑x))","decl":"/-- If all values of a `ℂ`-valued arithmetic function are nonnegative reals and `x` is a\nreal number in the domain of absolute convergence, then the `n`th iterated derivative\nof the associated L-series is nonnegative real when `n` is even and nonpositive real\nwhen `n` is odd. -/\nlemma iteratedDeriv_LSeries_alternating (a : ArithmeticFunction ℂ) (hn : ∀ n, 0 ≤ a n) {x : ℝ}\n    (h : LSeries.abscissaOfAbsConv a < x) (n : ℕ) :\n    0 ≤ (-1) ^ n * iteratedDeriv n (LSeries (a ·)) x :=\n  LSeries.iteratedDeriv_alternating hn h n\n\n"}
{"name":"ArithmeticFunction.LSeries_positive","module":"Mathlib.NumberTheory.LSeries.Positivity","initialProofState":"a : Nat → Complex\nha₀ : LE.le 0 a\nha₁ : LT.lt 0 (a 1)\nx : Real\nhx : LT.lt (LSeries.abscissaOfAbsConv a) ↑x\n⊢ LT.lt 0 (LSeries a ↑x)","decl":"/-- If all values of a `ℂ`-valued arithmetic function `a` are nonnegative reals and `a 1` is\npositive, then `L a x` is positive real for all real `x` larger than `abscissaOfAbsConv a`. -/\nlemma LSeries_positive {a : ℕ → ℂ} (ha₀ : 0 ≤ a) (ha₁ : 0 < a 1) {x : ℝ}\n    (hx : LSeries.abscissaOfAbsConv a < x) :\n    0 < LSeries a x :=\n  LSeries.positive ha₀ ha₁ hx\n\n"}
{"name":"ArithmeticFunction.LSeries_positive_of_differentiable_of_eqOn","module":"Mathlib.NumberTheory.LSeries.Positivity","initialProofState":"a : ArithmeticFunction Complex\nha₀ : LE.le 0 fun x => a x\nha₁ : LT.lt 0 (a 1)\nf : Complex → Complex\nhf : Differentiable Complex f\nx : Real\nhx : LE.le (LSeries.abscissaOfAbsConv ⇑a) ↑x\nhf' : Set.EqOn f (LSeries ⇑a) (setOf fun s => LT.lt x s.re)\ny : Real\n⊢ LT.lt 0 (f ↑y)","decl":"/-- If all values of a `ℂ`-valued arithmetic function `a` are nonnegative reals and `a 1`\nis positive, and the L-series of `a` agrees with an entire function `f` on some open\nright half-plane where it converges, then `f` is real and positive on `ℝ`. -/\nlemma LSeries_positive_of_differentiable_of_eqOn {a : ArithmeticFunction ℂ} (ha₀ : 0 ≤ (a ·))\n    (ha₁ : 0 < a 1) {f : ℂ → ℂ} (hf : Differentiable ℂ f) {x : ℝ}\n    (hx : LSeries.abscissaOfAbsConv a ≤ x) (hf' : {s | x < s.re}.EqOn f (LSeries a)) (y : ℝ) :\n    0 < f y :=\n  LSeries.positive_of_differentiable_of_eqOn ha₀ ha₁ hf hx hf' y\n\n"}
