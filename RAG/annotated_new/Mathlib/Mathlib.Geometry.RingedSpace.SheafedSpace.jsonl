{"name":"AlgebraicGeometry.SheafedSpace.mk.inj","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\ntoPresheafedSpace‚úù : AlgebraicGeometry.PresheafedSpace C\nIsSheaf‚úù : toPresheafedSpace‚úù.presheaf.IsSheaf\ntoPresheafedSpace : AlgebraicGeometry.PresheafedSpace C\nIsSheaf : toPresheafedSpace.presheaf.IsSheaf\nx‚úù : Eq { toPresheafedSpace := toPresheafedSpace‚úù, IsSheaf := IsSheaf‚úù } { toPresheafedSpace := toPresheafedSpace, IsSheaf := IsSheaf }\n‚ä¢ Eq toPresheafedSpace‚úù toPresheafedSpace","decl":"/-- A `SheafedSpace C` is a topological space equipped with a sheaf of `C`s. -/\nstructure SheafedSpace extends PresheafedSpace C where\n  /-- A sheafed space is presheafed space which happens to be sheaf. -/\n  IsSheaf : presheaf.IsSheaf\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.mk.sizeOf_spec","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : SizeOf C\ntoPresheafedSpace : AlgebraicGeometry.PresheafedSpace C\nIsSheaf : toPresheafedSpace.presheaf.IsSheaf\n‚ä¢ Eq (SizeOf.sizeOf { toPresheafedSpace := toPresheafedSpace, IsSheaf := IsSheaf }) (HAdd.hAdd 1 (SizeOf.sizeOf toPresheafedSpace))","decl":"/-- A `SheafedSpace C` is a topological space equipped with a sheaf of `C`s. -/\nstructure SheafedSpace extends PresheafedSpace C where\n  /-- A sheafed space is presheafed space which happens to be sheaf. -/\n  IsSheaf : presheaf.IsSheaf\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.mk.injEq","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\ntoPresheafedSpace‚úù : AlgebraicGeometry.PresheafedSpace C\nIsSheaf‚úù : toPresheafedSpace‚úù.presheaf.IsSheaf\ntoPresheafedSpace : AlgebraicGeometry.PresheafedSpace C\nIsSheaf : toPresheafedSpace.presheaf.IsSheaf\n‚ä¢ Eq (Eq { toPresheafedSpace := toPresheafedSpace‚úù, IsSheaf := IsSheaf‚úù } { toPresheafedSpace := toPresheafedSpace, IsSheaf := IsSheaf }) (Eq toPresheafedSpace‚úù toPresheafedSpace)","decl":"/-- A `SheafedSpace C` is a topological space equipped with a sheaf of `C`s. -/\nstructure SheafedSpace extends PresheafedSpace C where\n  /-- A sheafed space is presheafed space which happens to be sheaf. -/\n  IsSheaf : presheaf.IsSheaf\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.IsSheaf","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nself : AlgebraicGeometry.SheafedSpace C\n‚ä¢ self.presheaf.IsSheaf","decl":"/-- A `SheafedSpace C` is a topological space equipped with a sheaf of `C`s. -/\nstructure SheafedSpace extends PresheafedSpace C where\n  /-- A sheafed space is presheafed space which happens to be sheaf. -/\n  IsSheaf : presheaf.IsSheaf\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.mk_coe","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\ncarrier : TopCat\npresheaf : TopCat.Presheaf C carrier\nh : { carrier := carrier, presheaf := presheaf }.presheaf.IsSheaf\n‚ä¢ Eq (‚Üë{ carrier := carrier, presheaf := presheaf, IsSheaf := h }.toPresheafedSpace) carrier","decl":"theorem mk_coe (carrier) (presheaf) (h) :\n    (({ carrier\n        presheaf\n        IsSheaf := h } : SheafedSpace C) : TopCat) = carrier :=\n  rfl\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.ext","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX Y : AlgebraicGeometry.SheafedSpace C\nŒ± Œ≤ : Quiver.Hom X Y\nw : Eq Œ±.base Œ≤.base\nh : Eq (CategoryTheory.CategoryStruct.comp Œ±.c (CategoryTheory.whiskerRight (CategoryTheory.eqToHom ‚ãØ) X.presheaf)) Œ≤.c\n‚ä¢ Eq Œ± Œ≤","decl":"@[ext (iff := false)]\ntheorem ext {X Y : SheafedSpace C} (Œ± Œ≤ : X ‚ü∂ Y) (w : Œ±.base = Œ≤.base)\n    (h : Œ±.c ‚â´ whiskerRight (eqToHom (by rw [w])) _ = Œ≤.c) : Œ± = Œ≤ :=\n  PresheafedSpace.ext Œ± Œ≤ w h\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.isoMk_hom","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX Y : AlgebraicGeometry.SheafedSpace C\ne : CategoryTheory.Iso X.toPresheafedSpace Y.toPresheafedSpace\n‚ä¢ Eq (AlgebraicGeometry.SheafedSpace.isoMk e).hom e.hom","decl":"/-- Constructor for isomorphisms in the category `SheafedSpace C`. -/\n@[simps]\ndef isoMk {X Y : SheafedSpace C} (e : X.toPresheafedSpace ‚âÖ Y.toPresheafedSpace) : X ‚âÖ Y where\n  hom := e.hom\n  inv := e.inv\n  hom_inv_id := e.hom_inv_id\n  inv_hom_id := e.inv_hom_id\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.isoMk_inv","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX Y : AlgebraicGeometry.SheafedSpace C\ne : CategoryTheory.Iso X.toPresheafedSpace Y.toPresheafedSpace\n‚ä¢ Eq (AlgebraicGeometry.SheafedSpace.isoMk e).inv e.inv","decl":"/-- Constructor for isomorphisms in the category `SheafedSpace C`. -/\n@[simps]\ndef isoMk {X Y : SheafedSpace C} (e : X.toPresheafedSpace ‚âÖ Y.toPresheafedSpace) : X ‚âÖ Y where\n  hom := e.hom\n  inv := e.inv\n  hom_inv_id := e.hom_inv_id\n  inv_hom_id := e.inv_hom_id\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.forgetToPresheafedSpace_map","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX‚úù Y‚úù : CategoryTheory.InducedCategory (AlgebraicGeometry.PresheafedSpace C) AlgebraicGeometry.SheafedSpace.toPresheafedSpace\nf : Quiver.Hom X‚úù Y‚úù\n‚ä¢ Eq (AlgebraicGeometry.SheafedSpace.forgetToPresheafedSpace.map f) f","decl":"/-- Forgetting the sheaf condition is a functor from `SheafedSpace C` to `PresheafedSpace C`. -/\n@[simps! obj map]\ndef forgetToPresheafedSpace : SheafedSpace C ‚•§ PresheafedSpace C :=\n  inducedFunctor _\n\n-- Porting note: can't derive `Full` functor automatically\n"}
{"name":"AlgebraicGeometry.SheafedSpace.forgetToPresheafedSpace_obj","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nself : AlgebraicGeometry.SheafedSpace C\n‚ä¢ Eq (AlgebraicGeometry.SheafedSpace.forgetToPresheafedSpace.obj self) self.toPresheafedSpace","decl":"/-- Forgetting the sheaf condition is a functor from `SheafedSpace C` to `PresheafedSpace C`. -/\n@[simps! obj map]\ndef forgetToPresheafedSpace : SheafedSpace C ‚•§ PresheafedSpace C :=\n  inducedFunctor _\n\n-- Porting note: can't derive `Full` functor automatically\n"}
{"name":"AlgebraicGeometry.SheafedSpace.forgetToPresheafedSpace_full","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\n‚ä¢ AlgebraicGeometry.SheafedSpace.forgetToPresheafedSpace.Full","decl":"instance forgetToPresheafedSpace_full : (forgetToPresheafedSpace (C := C)).Full where\n  map_surjective f := ‚ü®f, rfl‚ü©\n\n-- Porting note: can't derive `Faithful` functor automatically\n"}
{"name":"AlgebraicGeometry.SheafedSpace.forgetToPresheafedSpace_faithful","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\n‚ä¢ AlgebraicGeometry.SheafedSpace.forgetToPresheafedSpace.Faithful","decl":"instance forgetToPresheafedSpace_faithful : (forgetToPresheafedSpace (C := C)).Faithful where\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.is_presheafedSpace_iso","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\nX Y : AlgebraicGeometry.SheafedSpace C\nf : Quiver.Hom X Y\ninst‚úù : CategoryTheory.IsIso f\n‚ä¢ CategoryTheory.IsIso f","decl":"instance is_presheafedSpace_iso {X Y : SheafedSpace C} (f : X ‚ü∂ Y) [IsIso f] :\n    @IsIso (PresheafedSpace C) _ _ _ f :=\n  SheafedSpace.forgetToPresheafedSpace.map_isIso f\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.id_base","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX : AlgebraicGeometry.SheafedSpace C\n‚ä¢ Eq (CategoryTheory.CategoryStruct.id X).base (CategoryTheory.CategoryStruct.id ‚ÜëX.toPresheafedSpace)","decl":"@[simp]\ntheorem id_base (X : SheafedSpace C) : (ùüô X : X ‚ü∂ X).base = ùüô (X : TopCat) :=\n  rfl\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.id_c","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX : AlgebraicGeometry.SheafedSpace C\n‚ä¢ Eq (CategoryTheory.CategoryStruct.id X).c (CategoryTheory.eqToHom ‚ãØ)","decl":"theorem id_c (X : SheafedSpace C) :\n    (ùüô X : X ‚ü∂ X).c = eqToHom (Presheaf.Pushforward.id_eq X.presheaf).symm :=\n  rfl\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.id_c_app","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX : AlgebraicGeometry.SheafedSpace C\nU : Opposite (TopologicalSpace.Opens ‚Üë‚ÜëX.toPresheafedSpace)\n‚ä¢ Eq ((CategoryTheory.CategoryStruct.id X).c.app U) (CategoryTheory.CategoryStruct.id (X.presheaf.obj U))","decl":"@[simp]\ntheorem id_c_app (X : SheafedSpace C) (U) :\n    (ùüô X : X ‚ü∂ X).c.app U = ùüô _ := rfl\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.comp_base","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX Y Z : AlgebraicGeometry.SheafedSpace C\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp f g).base (CategoryTheory.CategoryStruct.comp f.base g.base)","decl":"@[simp]\ntheorem comp_base {X Y Z : SheafedSpace C} (f : X ‚ü∂ Y) (g : Y ‚ü∂ Z) :\n    (f ‚â´ g).base = f.base ‚â´ g.base :=\n  rfl\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.comp_c_app","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX Y Z : AlgebraicGeometry.SheafedSpace C\nŒ± : Quiver.Hom X Y\nŒ≤ : Quiver.Hom Y Z\nU : Opposite (TopologicalSpace.Opens ‚Üë‚ÜëZ.toPresheafedSpace)\n‚ä¢ Eq ((CategoryTheory.CategoryStruct.comp Œ± Œ≤).c.app U) (CategoryTheory.CategoryStruct.comp (Œ≤.c.app U) (Œ±.c.app { unop := (TopologicalSpace.Opens.map Œ≤.base).obj (Opposite.unop U) }))","decl":"@[simp]\ntheorem comp_c_app {X Y Z : SheafedSpace C} (Œ± : X ‚ü∂ Y) (Œ≤ : Y ‚ü∂ Z) (U) :\n    (Œ± ‚â´ Œ≤).c.app U = Œ≤.c.app U ‚â´ Œ±.c.app (op ((Opens.map Œ≤.base).obj (unop U))) :=\n  rfl\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.comp_c_app'","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX Y Z : AlgebraicGeometry.SheafedSpace C\nŒ± : Quiver.Hom X Y\nŒ≤ : Quiver.Hom Y Z\nU : TopologicalSpace.Opens ‚Üë‚ÜëZ.toPresheafedSpace\n‚ä¢ Eq ((CategoryTheory.CategoryStruct.comp Œ± Œ≤).c.app { unop := U }) (CategoryTheory.CategoryStruct.comp (Œ≤.c.app { unop := U }) (Œ±.c.app { unop := (TopologicalSpace.Opens.map Œ≤.base).obj U }))","decl":"theorem comp_c_app' {X Y Z : SheafedSpace C} (Œ± : X ‚ü∂ Y) (Œ≤ : Y ‚ü∂ Z) (U) :\n    (Œ± ‚â´ Œ≤).c.app (op U) = Œ≤.c.app (op U) ‚â´ Œ±.c.app (op ((Opens.map Œ≤.base).obj U)) :=\n  rfl\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.congr_app","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX Y : AlgebraicGeometry.SheafedSpace C\nŒ± Œ≤ : Quiver.Hom X Y\nh : Eq Œ± Œ≤\nU : Opposite (TopologicalSpace.Opens ‚Üë‚ÜëY.toPresheafedSpace)\n‚ä¢ Eq (Œ±.c.app U) (CategoryTheory.CategoryStruct.comp (Œ≤.c.app U) (X.presheaf.map (CategoryTheory.eqToHom ‚ãØ)))","decl":"theorem congr_app {X Y : SheafedSpace C} {Œ± Œ≤ : X ‚ü∂ Y} (h : Œ± = Œ≤) (U) :\n    Œ±.c.app U = Œ≤.c.app U ‚â´ X.presheaf.map (eqToHom (by subst h; rfl)) :=\n  PresheafedSpace.congr_app h U\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.ofRestrict_base","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nU : TopCat\nX : AlgebraicGeometry.SheafedSpace C\nf : Quiver.Hom U ‚ÜëX.toPresheafedSpace\nh : Topology.IsOpenEmbedding ‚áëf\n‚ä¢ Eq (X.ofRestrict h).base f","decl":"/-- The map from the restriction of a presheafed space.\n-/\n@[simps!]\ndef ofRestrict {U : TopCat} (X : SheafedSpace C) {f : U ‚ü∂ (X : TopCat)}\n    (h : IsOpenEmbedding f) : X.restrict h ‚ü∂ X := X.toPresheafedSpace.ofRestrict h\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.ofRestrict_c_app","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nU : TopCat\nX : AlgebraicGeometry.SheafedSpace C\nf : Quiver.Hom U ‚ÜëX.toPresheafedSpace\nh : Topology.IsOpenEmbedding ‚áëf\nV : Opposite (TopologicalSpace.Opens ‚Üë‚ÜëX.toPresheafedSpace)\n‚ä¢ Eq ((X.ofRestrict h).c.app V) (X.presheaf.map (‚ãØ.adjunction.counit.app (Opposite.unop V)).op)","decl":"/-- The map from the restriction of a presheafed space.\n-/\n@[simps!]\ndef ofRestrict {U : TopCat} (X : SheafedSpace C) {f : U ‚ü∂ (X : TopCat)}\n    (h : IsOpenEmbedding f) : X.restrict h ‚ü∂ X := X.toPresheafedSpace.ofRestrict h\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.restrictTopIso_inv","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX : AlgebraicGeometry.SheafedSpace C\n‚ä¢ Eq X.restrictTopIso.inv X.toRestrictTop","decl":"/-- The restriction of a sheafed space `X` to the top subspace is isomorphic to `X` itself.\n-/\n@[simps! hom inv]\ndef restrictTopIso (X : SheafedSpace C) : X.restrict (Opens.isOpenEmbedding ‚ä§) ‚âÖ X :=\n  isoMk (X.toPresheafedSpace.restrictTopIso)\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.restrictTopIso_hom","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX : AlgebraicGeometry.SheafedSpace C\n‚ä¢ Eq X.restrictTopIso.hom (X.ofRestrict ‚ãØ)","decl":"/-- The restriction of a sheafed space `X` to the top subspace is isomorphic to `X` itself.\n-/\n@[simps! hom inv]\ndef restrictTopIso (X : SheafedSpace C) : X.restrict (Opens.isOpenEmbedding ‚ä§) ‚âÖ X :=\n  isoMk (X.toPresheafedSpace.restrictTopIso)\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.Œì_def","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\n‚ä¢ Eq AlgebraicGeometry.SheafedSpace.Œì (AlgebraicGeometry.SheafedSpace.forgetToPresheafedSpace.op.comp AlgebraicGeometry.PresheafedSpace.Œì)","decl":"theorem Œì_def : (Œì : _ ‚•§ C) = forgetToPresheafedSpace.op ‚ãô PresheafedSpace.Œì :=\n  rfl\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.Œì_obj","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX : Opposite (AlgebraicGeometry.SheafedSpace C)\n‚ä¢ Eq (AlgebraicGeometry.SheafedSpace.Œì.obj X) ((Opposite.unop X).presheaf.obj { unop := Top.top })","decl":"@[simp]\ntheorem Œì_obj (X : (SheafedSpace C)·µí·µñ) : Œì.obj X = (unop X).presheaf.obj (op ‚ä§) :=\n  rfl\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.Œì_obj_op","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX : AlgebraicGeometry.SheafedSpace C\n‚ä¢ Eq (AlgebraicGeometry.SheafedSpace.Œì.obj { unop := X }) (X.presheaf.obj { unop := Top.top })","decl":"theorem Œì_obj_op (X : SheafedSpace C) : Œì.obj (op X) = X.presheaf.obj (op ‚ä§) :=\n  rfl\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.Œì_map","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX Y : Opposite (AlgebraicGeometry.SheafedSpace C)\nf : Quiver.Hom X Y\n‚ä¢ Eq (AlgebraicGeometry.SheafedSpace.Œì.map f) (f.unop.c.app { unop := Top.top })","decl":"@[simp]\ntheorem Œì_map {X Y : (SheafedSpace C)·µí·µñ} (f : X ‚ü∂ Y) : Œì.map f = f.unop.c.app (op ‚ä§) :=\n  rfl\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.Œì_map_op","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX Y : AlgebraicGeometry.SheafedSpace C\nf : Quiver.Hom X Y\n‚ä¢ Eq (AlgebraicGeometry.SheafedSpace.Œì.map f.op) (f.c.app { unop := Top.top })","decl":"theorem Œì_map_op {X Y : SheafedSpace C} (f : X ‚ü∂ Y) : Œì.map f.op = f.c.app (op ‚ä§) :=\n  rfl\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.instHasColimitsOfHasLimits","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.Limits.HasLimits C\n‚ä¢ CategoryTheory.Limits.HasColimits (AlgebraicGeometry.SheafedSpace C)","decl":"instance [HasLimits C] : HasColimits.{v} (SheafedSpace C) :=\n  hasColimits_of_hasColimits_createsColimits forgetToPresheafedSpace\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.instPreservesColimitsTopCatForgetOfHasLimits","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\ninst‚úù : CategoryTheory.Limits.HasLimits C\n‚ä¢ CategoryTheory.Limits.PreservesColimits (AlgebraicGeometry.SheafedSpace.forget C)","decl":"noncomputable instance [HasLimits C] : PreservesColimits (forget.{_, _, v} C) :=\n  Limits.comp_preservesColimits forgetToPresheafedSpace (PresheafedSpace.forget C)\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.hom_stalk_ext","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù‚Å∂ : CategoryTheory.Category.{v, u} C\ninst‚úù‚Åµ : CategoryTheory.HasForget C\ninst‚úù‚Å¥ : CategoryTheory.Limits.HasColimits C\ninst‚úù¬≥ : CategoryTheory.Limits.HasLimits C\ninst‚úù¬≤ : CategoryTheory.Limits.PreservesLimits (CategoryTheory.forget C)\ninst‚úù¬π : CategoryTheory.Limits.PreservesFilteredColimits (CategoryTheory.forget C)\ninst‚úù : (CategoryTheory.forget C).ReflectsIsomorphisms\nX Y : AlgebraicGeometry.SheafedSpace C\nf g : Quiver.Hom X Y\nh : Eq f.base g.base\nh' : ‚àÄ (x : ‚Üë‚ÜëX.toPresheafedSpace), Eq (AlgebraicGeometry.PresheafedSpace.Hom.stalkMap f x) (CategoryTheory.CategoryStruct.comp (Y.presheaf.stalkCongr ‚ãØ).hom (AlgebraicGeometry.PresheafedSpace.Hom.stalkMap g x))\n‚ä¢ Eq f g","decl":"attribute [local instance] HasForget.instFunLike in\nlemma hom_stalk_ext {X Y : SheafedSpace C} (f g : X ‚ü∂ Y) (h : f.base = g.base)\n    (h' : ‚àÄ x, f.stalkMap x = (Y.presheaf.stalkCongr (h ‚ñ∏ rfl)).hom ‚â´ g.stalkMap x) :\n    f = g := by\n  obtain ‚ü®f, fc‚ü© := f\n  obtain ‚ü®g, gc‚ü© := g\n  obtain rfl : f = g := h\n  congr\n  ext U s\n  refine section_ext X.sheaf _ _ _ fun x hx ‚Ü¶\n    show X.presheaf.germ _ x _ _ = X.presheaf.germ _ x _ _ from ?_\n  erw [‚Üê PresheafedSpace.stalkMap_germ_apply ‚ü®f, fc‚ü©, ‚Üê PresheafedSpace.stalkMap_germ_apply ‚ü®f, gc‚ü©]\n  simp [h']\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.mono_of_base_injective_of_stalk_epi","module":"Mathlib.Geometry.RingedSpace.SheafedSpace","initialProofState":"C : Type u\ninst‚úù‚Å∂ : CategoryTheory.Category.{v, u} C\ninst‚úù‚Åµ : CategoryTheory.HasForget C\ninst‚úù‚Å¥ : CategoryTheory.Limits.HasColimits C\ninst‚úù¬≥ : CategoryTheory.Limits.HasLimits C\ninst‚úù¬≤ : CategoryTheory.Limits.PreservesLimits (CategoryTheory.forget C)\ninst‚úù¬π : CategoryTheory.Limits.PreservesFilteredColimits (CategoryTheory.forget C)\ninst‚úù : (CategoryTheory.forget C).ReflectsIsomorphisms\nX Y : AlgebraicGeometry.SheafedSpace C\nf : Quiver.Hom X Y\nh‚ÇÅ : Function.Injective ‚áëf.base\nh‚ÇÇ : ‚àÄ (x : ‚Üë‚ÜëX.toPresheafedSpace), CategoryTheory.Epi (AlgebraicGeometry.PresheafedSpace.Hom.stalkMap f x)\n‚ä¢ CategoryTheory.Mono f","decl":"lemma mono_of_base_injective_of_stalk_epi {X Y : SheafedSpace C} (f : X ‚ü∂ Y)\n    (h‚ÇÅ : Function.Injective f.base)\n    (h‚ÇÇ : ‚àÄ x, Epi (f.stalkMap x)) : Mono f := by\n  constructor\n  intro Z ‚ü®g, gc‚ü© ‚ü®h, hc‚ü© e\n  obtain rfl : g = h := ConcreteCategory.hom_ext _ _ fun x ‚Ü¶ h‚ÇÅ congr(($e).base x)\n  refine SheafedSpace.hom_stalk_ext ‚ü®g, gc‚ü© ‚ü®g, hc‚ü© rfl fun x ‚Ü¶ ?_\n  rw [‚Üê cancel_epi (f.stalkMap (g x)), stalkCongr_hom, stalkSpecializes_refl, Category.id_comp,\n    ‚Üê PresheafedSpace.stalkMap.comp ‚ü®g, gc‚ü© f, ‚Üê PresheafedSpace.stalkMap.comp ‚ü®g, hc‚ü© f]\n  congr 1\n\n"}
