{"name":"TopologicalSpace.OpenNhds.inclusion_obj","module":"Mathlib.Topology.Category.TopCat.OpenNhds","initialProofState":"X : TopCat\nx : ‚ÜëX\nU : TopologicalSpace.Opens ‚ÜëX\np : Membership.mem U x\n‚ä¢ Eq ((TopologicalSpace.OpenNhds.inclusion x).obj { obj := U, property := p }) U","decl":"@[simp]\ntheorem inclusion_obj (x : X) (U) (p) : (inclusion x).obj ‚ü®U, p‚ü© = U :=\n  rfl\n\n"}
{"name":"TopologicalSpace.OpenNhds.isOpenEmbedding","module":"Mathlib.Topology.Category.TopCat.OpenNhds","initialProofState":"X : TopCat\nx : ‚ÜëX\nU : TopologicalSpace.OpenNhds x\n‚ä¢ Topology.IsOpenEmbedding ‚áëU.obj.inclusion'","decl":"theorem isOpenEmbedding {x : X} (U : OpenNhds x) : IsOpenEmbedding U.1.inclusion' :=\n  U.1.isOpenEmbedding\n\n"}
{"name":"TopologicalSpace.OpenNhds.openEmbedding","module":"Mathlib.Topology.Category.TopCat.OpenNhds","initialProofState":"X : TopCat\nx : ‚ÜëX\nU : TopologicalSpace.OpenNhds x\n‚ä¢ Topology.IsOpenEmbedding ‚áëU.obj.inclusion'","decl":"@[deprecated (since := \"2024-10-18\")]\nalias openEmbedding := isOpenEmbedding\n\n"}
{"name":"TopologicalSpace.OpenNhds.map_obj","module":"Mathlib.Topology.Category.TopCat.OpenNhds","initialProofState":"X Y : TopCat\nf : Quiver.Hom X Y\nx : ‚ÜëX\nU : TopologicalSpace.Opens ‚ÜëY\nq : Membership.mem U (f x)\n‚ä¢ Eq ((TopologicalSpace.OpenNhds.map f x).obj { obj := U, property := q }) { obj := (TopologicalSpace.Opens.map f).obj U, property := q }","decl":"@[simp]\ntheorem map_obj (x : X) (U) (q) : (map f x).obj ‚ü®U, q‚ü© = ‚ü®(Opens.map f).obj U, q‚ü© :=\n  rfl\n\n"}
{"name":"TopologicalSpace.OpenNhds.map_id_obj","module":"Mathlib.Topology.Category.TopCat.OpenNhds","initialProofState":"X : TopCat\nx : ‚ÜëX\nU : TopologicalSpace.OpenNhds ((CategoryTheory.CategoryStruct.id X) x)\n‚ä¢ Eq ((TopologicalSpace.OpenNhds.map (CategoryTheory.CategoryStruct.id X) x).obj U) U","decl":"@[simp]\ntheorem map_id_obj (x : X) (U) : (map (ùüô X) x).obj U = U := rfl\n\n"}
{"name":"TopologicalSpace.OpenNhds.map_id_obj'","module":"Mathlib.Topology.Category.TopCat.OpenNhds","initialProofState":"X : TopCat\nx : ‚ÜëX\nU : Set ‚ÜëX\np : IsOpen U\nq : Membership.mem { carrier := U, is_open' := p } ((CategoryTheory.CategoryStruct.id X) x)\n‚ä¢ Eq ((TopologicalSpace.OpenNhds.map (CategoryTheory.CategoryStruct.id X) x).obj { obj := { carrier := U, is_open' := p }, property := q }) { obj := { carrier := U, is_open' := p }, property := q }","decl":"@[simp]\ntheorem map_id_obj' (x : X) (U) (p) (q) : (map (ùüô X) x).obj ‚ü®‚ü®U, p‚ü©, q‚ü© = ‚ü®‚ü®U, p‚ü©, q‚ü© :=\n  rfl\n\n"}
{"name":"TopologicalSpace.OpenNhds.map_id_obj_unop","module":"Mathlib.Topology.Category.TopCat.OpenNhds","initialProofState":"X : TopCat\nx : ‚ÜëX\nU : Opposite (TopologicalSpace.OpenNhds x)\n‚ä¢ Eq ((TopologicalSpace.OpenNhds.map (CategoryTheory.CategoryStruct.id X) x).obj (Opposite.unop U)) (Opposite.unop U)","decl":"@[simp]\ntheorem map_id_obj_unop (x : X) (U : (OpenNhds x)·µí·µñ) : (map (ùüô X) x).obj (unop U) = unop U := by\n  simp\n\n"}
{"name":"TopologicalSpace.OpenNhds.op_map_id_obj","module":"Mathlib.Topology.Category.TopCat.OpenNhds","initialProofState":"X : TopCat\nx : ‚ÜëX\nU : Opposite (TopologicalSpace.OpenNhds x)\n‚ä¢ Eq ((TopologicalSpace.OpenNhds.map (CategoryTheory.CategoryStruct.id X) x).op.obj U) U","decl":"@[simp]\ntheorem op_map_id_obj (x : X) (U : (OpenNhds x)·µí·µñ) : (map (ùüô X) x).op.obj U = U := by simp\n\n"}
{"name":"TopologicalSpace.OpenNhds.inclusionMapIso_inv_app","module":"Mathlib.Topology.Category.TopCat.OpenNhds","initialProofState":"X‚úù Y : TopCat\nf : Quiver.Hom X‚úù Y\nx : ‚ÜëX‚úù\nX : TopologicalSpace.OpenNhds (f x)\n‚ä¢ Eq ((TopologicalSpace.OpenNhds.inclusionMapIso f x).inv.app X) (CategoryTheory.CategoryStruct.id ((TopologicalSpace.OpenNhds.inclusion x).obj ((TopologicalSpace.OpenNhds.map f x).obj X)))","decl":"/-- `Opens.map f` and `OpenNhds.map f` form a commuting square (up to natural isomorphism)\nwith the inclusion functors into `Opens X`. -/\n@[simps! hom_app inv_app]\ndef inclusionMapIso (x : X) : inclusion (f x) ‚ãô Opens.map f ‚âÖ map f x ‚ãô inclusion x :=\n  NatIso.ofComponents fun U => { hom := ùüô _, inv := ùüô _ }\n\n"}
{"name":"TopologicalSpace.OpenNhds.inclusionMapIso_hom_app","module":"Mathlib.Topology.Category.TopCat.OpenNhds","initialProofState":"X‚úù Y : TopCat\nf : Quiver.Hom X‚úù Y\nx : ‚ÜëX‚úù\nX : TopologicalSpace.OpenNhds (f x)\n‚ä¢ Eq ((TopologicalSpace.OpenNhds.inclusionMapIso f x).hom.app X) (CategoryTheory.CategoryStruct.id ((TopologicalSpace.Opens.map f).obj ((TopologicalSpace.OpenNhds.inclusion (f x)).obj X)))","decl":"/-- `Opens.map f` and `OpenNhds.map f` form a commuting square (up to natural isomorphism)\nwith the inclusion functors into `Opens X`. -/\n@[simps! hom_app inv_app]\ndef inclusionMapIso (x : X) : inclusion (f x) ‚ãô Opens.map f ‚âÖ map f x ‚ãô inclusion x :=\n  NatIso.ofComponents fun U => { hom := ùüô _, inv := ùüô _ }\n\n"}
{"name":"TopologicalSpace.OpenNhds.inclusionMapIso_hom","module":"Mathlib.Topology.Category.TopCat.OpenNhds","initialProofState":"X Y : TopCat\nf : Quiver.Hom X Y\nx : ‚ÜëX\n‚ä¢ Eq (TopologicalSpace.OpenNhds.inclusionMapIso f x).hom (CategoryTheory.CategoryStruct.id ((TopologicalSpace.OpenNhds.inclusion (f x)).comp (TopologicalSpace.Opens.map f)))","decl":"@[simp]\ntheorem inclusionMapIso_hom (x : X) : (inclusionMapIso f x).hom = ùüô _ :=\n  rfl\n\n"}
{"name":"TopologicalSpace.OpenNhds.inclusionMapIso_inv","module":"Mathlib.Topology.Category.TopCat.OpenNhds","initialProofState":"X Y : TopCat\nf : Quiver.Hom X Y\nx : ‚ÜëX\n‚ä¢ Eq (TopologicalSpace.OpenNhds.inclusionMapIso f x).inv (CategoryTheory.CategoryStruct.id ((TopologicalSpace.OpenNhds.map f x).comp (TopologicalSpace.OpenNhds.inclusion x)))","decl":"@[simp]\ntheorem inclusionMapIso_inv (x : X) : (inclusionMapIso f x).inv = ùüô _ :=\n  rfl\n\n"}
{"name":"IsOpenMap.functorNhds_map","module":"Mathlib.Topology.Category.TopCat.OpenNhds","initialProofState":"X Y : TopCat\nf : Quiver.Hom X Y\nh : IsOpenMap ‚áëf\nx : ‚ÜëX\nX‚úù Y‚úù : TopologicalSpace.OpenNhds x\ni : Quiver.Hom X‚úù Y‚úù\n‚ä¢ Eq ((h.functorNhds x).map i) (h.functor.map i)","decl":"/-- An open map `f : X ‚ü∂ Y` induces a functor `OpenNhds x ‚•§ OpenNhds (f x)`. -/\n@[simps]\ndef functorNhds (h : IsOpenMap f) (x : X) : OpenNhds x ‚•§ OpenNhds (f x) where\n  obj U := ‚ü®h.functor.obj U.1, ‚ü®x, U.2, rfl‚ü©‚ü©\n  map i := h.functor.map i\n\n"}
{"name":"IsOpenMap.functorNhds_obj_obj","module":"Mathlib.Topology.Category.TopCat.OpenNhds","initialProofState":"X Y : TopCat\nf : Quiver.Hom X Y\nh : IsOpenMap ‚áëf\nx : ‚ÜëX\nU : TopologicalSpace.OpenNhds x\n‚ä¢ Eq ((h.functorNhds x).obj U).obj (h.functor.obj U.obj)","decl":"/-- An open map `f : X ‚ü∂ Y` induces a functor `OpenNhds x ‚•§ OpenNhds (f x)`. -/\n@[simps]\ndef functorNhds (h : IsOpenMap f) (x : X) : OpenNhds x ‚•§ OpenNhds (f x) where\n  obj U := ‚ü®h.functor.obj U.1, ‚ü®x, U.2, rfl‚ü©‚ü©\n  map i := h.functor.map i\n\n"}
{"name":"Topology.IsInducing.functorNhds_obj_obj","module":"Mathlib.Topology.Category.TopCat.OpenNhds","initialProofState":"X Y : TopCat\nf : Quiver.Hom X Y\nh : Topology.IsInducing ‚áëf\nx : ‚ÜëX\nU : TopologicalSpace.OpenNhds x\n‚ä¢ Eq ((h.functorNhds x).obj U).obj (h.functor.obj U.obj)","decl":"/-- An inducing map `f : X ‚ü∂ Y` induces a functor `open_nhds x ‚•§ open_nhds (f x)`. -/\n@[simps]\ndef functorNhds (h : IsInducing f) (x : X) :\n    OpenNhds x ‚•§ OpenNhds (f x) where\n  obj U := ‚ü®h.functor.obj U.1, (h.mem_functorObj_iff U.1).mpr U.2‚ü©\n  map := h.functor.map\n\n"}
{"name":"Topology.IsInducing.functorNhds_map","module":"Mathlib.Topology.Category.TopCat.OpenNhds","initialProofState":"X Y : TopCat\nf : Quiver.Hom X Y\nh : Topology.IsInducing ‚áëf\nx : ‚ÜëX\nX‚úù Y‚úù : TopologicalSpace.OpenNhds x\na‚úù : Quiver.Hom X‚úù.obj Y‚úù.obj\n‚ä¢ Eq ((h.functorNhds x).map a‚úù) (h.functor.map a‚úù)","decl":"/-- An inducing map `f : X ‚ü∂ Y` induces a functor `open_nhds x ‚•§ open_nhds (f x)`. -/\n@[simps]\ndef functorNhds (h : IsInducing f) (x : X) :\n    OpenNhds x ‚•§ OpenNhds (f x) where\n  obj U := ‚ü®h.functor.obj U.1, (h.mem_functorObj_iff U.1).mpr U.2‚ü©\n  map := h.functor.map\n\n"}
