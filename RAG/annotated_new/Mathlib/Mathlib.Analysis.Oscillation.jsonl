{"name":"oscillationWithin_nhd_eq_oscillation","module":"Mathlib.Analysis.Oscillation","initialProofState":"E : Type u\nF : Type v\ninst‚úù¬π : PseudoEMetricSpace F\ninst‚úù : TopologicalSpace E\nf : E ‚Üí F\nD : Set E\nx : E\nhD : Membership.mem (nhds x) D\n‚ä¢ Eq (oscillationWithin f D x) (oscillation f x)","decl":"/-- The oscillation of `f` at `x` within a neighborhood `D` of `x` is equal to `oscillation f x` -/\ntheorem oscillationWithin_nhd_eq_oscillation [TopologicalSpace E] (f : E ‚Üí F) (D : Set E) (x : E)\n    (hD : D ‚àà ùìù x) : oscillationWithin f D x = oscillation f x := by\n  rw [oscillation, oscillationWithin, nhdsWithin_eq_nhds.2 hD]\n\n"}
{"name":"oscillationWithin_univ_eq_oscillation","module":"Mathlib.Analysis.Oscillation","initialProofState":"E : Type u\nF : Type v\ninst‚úù¬π : PseudoEMetricSpace F\ninst‚úù : TopologicalSpace E\nf : E ‚Üí F\nx : E\n‚ä¢ Eq (oscillationWithin f Set.univ x) (oscillation f x)","decl":"/-- The oscillation of `f` at `x` within `univ` is equal to `oscillation f x` -/\ntheorem oscillationWithin_univ_eq_oscillation [TopologicalSpace E] (f : E ‚Üí F) (x : E) :\n    oscillationWithin f univ x = oscillation f x :=\n  oscillationWithin_nhd_eq_oscillation f univ x Filter.univ_mem\n\n"}
{"name":"ContinuousWithinAt.oscillationWithin_eq_zero","module":"Mathlib.Analysis.Oscillation","initialProofState":"E : Type u\nF : Type v\ninst‚úù¬π : PseudoEMetricSpace F\ninst‚úù : TopologicalSpace E\nf : E ‚Üí F\nD : Set E\nx : E\nhf : ContinuousWithinAt f D x\n‚ä¢ Eq (oscillationWithin f D x) 0","decl":"theorem oscillationWithin_eq_zero [TopologicalSpace E] {f : E ‚Üí F} {D : Set E}\n    {x : E} (hf : ContinuousWithinAt f D x) : oscillationWithin f D x = 0 := by\n  refine le_antisymm (_root_.le_of_forall_pos_le_add fun Œµ hŒµ ‚Ü¶ ?_) (zero_le _)\n  rw [zero_add]\n  have : ball (f x) (Œµ / 2) ‚àà (ùìù[D] x).map f := hf <| ball_mem_nhds _ (by simp [ne_of_gt hŒµ])\n  refine (biInf_le diam this).trans (le_of_le_of_eq diam_ball ?_)\n  exact (ENNReal.mul_div_cancel (by norm_num) (by norm_num))\n\n"}
{"name":"ContinuousAt.oscillation_eq_zero","module":"Mathlib.Analysis.Oscillation","initialProofState":"E : Type u\nF : Type v\ninst‚úù¬π : PseudoEMetricSpace F\ninst‚úù : TopologicalSpace E\nf : E ‚Üí F\nx : E\nhf : ContinuousAt f x\n‚ä¢ Eq (oscillation f x) 0","decl":"theorem oscillation_eq_zero [TopologicalSpace E] {f : E ‚Üí F} {x : E} (hf : ContinuousAt f x) :\n    oscillation f x = 0 := by\n  rw [‚Üê continuousWithinAt_univ f x] at hf\n  exact oscillationWithin_univ_eq_oscillation f x ‚ñ∏ hf.oscillationWithin_eq_zero\n\n"}
{"name":"OscillationWithin.eq_zero_iff_continuousWithinAt","module":"Mathlib.Analysis.Oscillation","initialProofState":"E : Type u\nF : Type v\ninst‚úù¬π : PseudoEMetricSpace F\ninst‚úù : TopologicalSpace E\nf : E ‚Üí F\nD : Set E\nx : E\nxD : Membership.mem D x\n‚ä¢ Iff (Eq (oscillationWithin f D x) 0) (ContinuousWithinAt f D x)","decl":"/-- The oscillation within `D` of `f` at `x ‚àà D` is 0 if and only if `ContinuousWithinAt f D x`. -/\ntheorem eq_zero_iff_continuousWithinAt [TopologicalSpace E] (f : E ‚Üí F) {D : Set E}\n    {x : E} (xD : x ‚àà D) : oscillationWithin f D x = 0 ‚Üî ContinuousWithinAt f D x := by\n  refine ‚ü®fun hf ‚Ü¶ EMetric.tendsto_nhds.mpr (fun Œµ Œµ0 ‚Ü¶ ?_), fun hf ‚Ü¶ hf.oscillationWithin_eq_zero‚ü©\n  simp_rw [‚Üê hf, oscillationWithin, iInf_lt_iff] at Œµ0\n  obtain ‚ü®S, hS, SŒµ‚ü© := Œµ0\n  refine Filter.mem_of_superset hS (fun y hy ‚Ü¶ lt_of_le_of_lt ?_ SŒµ)\n  exact edist_le_diam_of_mem (mem_preimage.1 hy) <| mem_preimage.1 (mem_of_mem_nhdsWithin xD hS)\n\n"}
{"name":"Oscillation.eq_zero_iff_continuousAt","module":"Mathlib.Analysis.Oscillation","initialProofState":"E : Type u\nF : Type v\ninst‚úù¬π : PseudoEMetricSpace F\ninst‚úù : TopologicalSpace E\nf : E ‚Üí F\nx : E\n‚ä¢ Iff (Eq (oscillation f x) 0) (ContinuousAt f x)","decl":"/-- The oscillation of `f` at `x` is 0 if and only if `f` is continuous at `x`. -/\ntheorem eq_zero_iff_continuousAt [TopologicalSpace E] (f : E ‚Üí F) (x : E) :\n    oscillation f x = 0 ‚Üî ContinuousAt f x := by\n  rw [‚Üê oscillationWithin_univ_eq_oscillation, ‚Üê continuousWithinAt_univ f x]\n  exact OscillationWithin.eq_zero_iff_continuousWithinAt f (mem_univ x)\n\n"}
{"name":"IsCompact.uniform_oscillationWithin","module":"Mathlib.Analysis.Oscillation","initialProofState":"E : Type u\nF : Type v\ninst‚úù¬π : PseudoEMetricSpace F\ninst‚úù : PseudoEMetricSpace E\nK : Set E\nf : E ‚Üí F\nD : Set E\nŒµ : ENNReal\ncomp : IsCompact K\nhK : ‚àÄ (x : E), Membership.mem K x ‚Üí LT.lt (oscillationWithin f D x) Œµ\n‚ä¢ Exists fun Œ¥ => And (GT.gt Œ¥ 0) (‚àÄ (x : E), Membership.mem K x ‚Üí LE.le (EMetric.diam (Set.image f (Inter.inter (EMetric.ball x (ENNReal.ofReal Œ¥)) D))) Œµ)","decl":"/-- If `oscillationWithin f D x < Œµ` at every `x` in a compact set `K`, then there exists `Œ¥ > 0`\nsuch that the oscillation of `f` on `ball x Œ¥ ‚à© D` is less than `Œµ` for every `x` in `K`. -/\ntheorem uniform_oscillationWithin (comp : IsCompact K) (hK : ‚àÄ x ‚àà K, oscillationWithin f D x < Œµ) :\n    ‚àÉ Œ¥ > 0, ‚àÄ x ‚àà K, diam (f '' (ball x (ENNReal.ofReal Œ¥) ‚à© D)) ‚â§ Œµ := by\n  let S := fun r ‚Ü¶ { x : E | ‚àÉ (a : ‚Ñù), (a > r ‚àß diam (f '' (ball x (ENNReal.ofReal a) ‚à© D)) ‚â§ Œµ) }\n  have S_open : ‚àÄ r > 0, IsOpen (S r) := by\n    refine fun r _ ‚Ü¶ isOpen_iff.mpr fun x ‚ü®a, ar, ha‚ü© ‚Ü¶\n      ‚ü®ENNReal.ofReal ((a - r) / 2), by simp [ar], ?_‚ü©\n    refine fun y hy ‚Ü¶ ‚ü®a - (a - r) / 2, by linarith,\n      le_trans (diam_mono (image_mono fun z hz ‚Ü¶ ?_)) ha‚ü©\n    refine ‚ü®lt_of_le_of_lt (edist_triangle z y x) (lt_of_lt_of_eq (ENNReal.add_lt_add hz.1 hy) ?_),\n      hz.2‚ü©\n    rw [‚Üê ofReal_add (by linarith) (by linarith), sub_add_cancel]\n  have S_cover : K ‚äÜ ‚ãÉ r > 0, S r := by\n    intro x hx\n    have : oscillationWithin f D x < Œµ := hK x hx\n    simp only [oscillationWithin, Filter.mem_map, iInf_lt_iff] at this\n    obtain ‚ü®n, hn‚ÇÅ, hn‚ÇÇ‚ü© := this\n    obtain ‚ü®r, r0, hr‚ü© := mem_nhdsWithin_iff.1 hn‚ÇÅ\n    simp only [gt_iff_lt, mem_iUnion, exists_prop]\n    have : ‚àÄ r', (ENNReal.ofReal r') ‚â§ r ‚Üí diam (f '' (ball x (ENNReal.ofReal r') ‚à© D)) ‚â§ Œµ := by\n      intro r' hr'\n      refine le_trans (diam_mono (subset_trans ?_ (image_subset_iff.2 hr))) (le_of_lt hn‚ÇÇ)\n      exact image_mono (inter_subset_inter_left D (ball_subset_ball hr'))\n    by_cases r_top : r = ‚ä§\n    ¬∑ use 1, one_pos, 2, one_lt_two, this 2 (by simp only [r_top, le_top])\n    ¬∑ obtain ‚ü®r', hr'‚ü© := exists_between (toReal_pos (ne_of_gt r0) r_top)\n      use r', hr'.1, r.toReal, hr'.2, this r.toReal ofReal_toReal_le\n  have S_antitone : ‚àÄ (r‚ÇÅ r‚ÇÇ : ‚Ñù), r‚ÇÅ ‚â§ r‚ÇÇ ‚Üí S r‚ÇÇ ‚äÜ S r‚ÇÅ :=\n    fun r‚ÇÅ r‚ÇÇ hr x ‚ü®a, ar‚ÇÇ, ha‚ü© ‚Ü¶ ‚ü®a, lt_of_le_of_lt hr ar‚ÇÇ, ha‚ü©\n  obtain ‚ü®Œ¥, Œ¥0, hŒ¥‚ü© : ‚àÉ r > 0, K ‚äÜ S r := by\n    obtain ‚ü®T, Tb, Tfin, hT‚ü© := comp.elim_finite_subcover_image S_open S_cover\n    by_cases T_nonempty : T.Nonempty\n    ¬∑ use Tfin.isWF.min T_nonempty, Tb (Tfin.isWF.min_mem T_nonempty)\n      intro x hx\n      obtain ‚ü®r, hr‚ü© := mem_iUnion.1 (hT hx)\n      simp only [mem_iUnion, exists_prop] at hr\n      exact (S_antitone _ r (IsWF.min_le Tfin.isWF T_nonempty hr.1)) hr.2\n    ¬∑ rw [not_nonempty_iff_eq_empty] at T_nonempty\n      use 1, one_pos, subset_trans hT (by simp [T_nonempty])\n  use Œ¥, Œ¥0\n  intro x xK\n  obtain ‚ü®a, Œ¥a, ha‚ü© := hŒ¥ xK\n  exact (diam_mono <| image_mono <| inter_subset_inter_left D <| ball_subset_ball <|\n    coe_le_coe.2 <| Real.toNNReal_mono (le_of_lt Œ¥a)).trans ha\n\n"}
{"name":"IsCompact.uniform_oscillation","module":"Mathlib.Analysis.Oscillation","initialProofState":"E : Type u\nF : Type v\ninst‚úù¬π : PseudoEMetricSpace F\ninst‚úù : PseudoEMetricSpace E\nK : Set E\ncomp : IsCompact K\nf : E ‚Üí F\nŒµ : ENNReal\nhK : ‚àÄ (x : E), Membership.mem K x ‚Üí LT.lt (oscillation f x) Œµ\n‚ä¢ Exists fun Œ¥ => And (GT.gt Œ¥ 0) (‚àÄ (x : E), Membership.mem K x ‚Üí LE.le (EMetric.diam (Set.image f (EMetric.ball x (ENNReal.ofReal Œ¥)))) Œµ)","decl":"/-- If `oscillation f x < Œµ` at every `x` in a compact set `K`, then there exists `Œ¥ > 0` such\nthat the oscillation of `f` on `ball x Œ¥` is less than `Œµ` for every `x` in `K`. -/\ntheorem uniform_oscillation {K : Set E} (comp : IsCompact K)\n    {f : E ‚Üí F} {Œµ : ENNReal} (hK : ‚àÄ x ‚àà K, oscillation f x < Œµ) :\n    ‚àÉ Œ¥ > 0, ‚àÄ x ‚àà K, diam (f '' (ball x (ENNReal.ofReal Œ¥))) ‚â§ Œµ := by\n  simp only [‚Üê oscillationWithin_univ_eq_oscillation] at hK\n  convert ‚Üê comp.uniform_oscillationWithin hK\n  exact inter_univ _\n\n"}
