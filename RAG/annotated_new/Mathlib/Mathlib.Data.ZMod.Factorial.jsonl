{"name":"ZMod.cast_descFactorial","module":"Mathlib.Data.ZMod.Factorial","initialProofState":"n p : Nat\nh : LE.le n p\n⊢ Eq (↑((HSub.hSub p 1).descFactorial n)) (HMul.hMul (HPow.hPow (-1) n) ↑n.factorial)","decl":"theorem cast_descFactorial {n p : ℕ} (h : n ≤ p) :\n    (descFactorial (p - 1) n : ZMod p) = (-1) ^ n * n ! := by\n  rw [descFactorial_eq_prod_range, ← prod_range_add_one_eq_factorial]\n  simp only [cast_prod]\n  nth_rw 2 [← card_range n]\n  rw [pow_card_mul_prod]\n  refine prod_congr rfl ?_\n  intro x hx\n  rw [← tsub_add_eq_tsub_tsub_swap,\n    Nat.cast_sub <| Nat.le_trans (Nat.add_one_le_iff.mpr (List.mem_range.mp hx)) h,\n    CharP.cast_eq_zero, zero_sub, cast_succ, neg_add_rev, mul_add, neg_mul, one_mul,\n    mul_one, add_comm]\n\n"}
