{"name":"locallyFinite_of_finite","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œπ : Type u_1\nX : Type u_4\ninst‚úù¬π : TopologicalSpace X\ninst‚úù : Finite Œπ\nf : Œπ ‚Üí Set X\n‚ä¢ LocallyFinite f","decl":"theorem locallyFinite_of_finite [Finite Œπ] (f : Œπ ‚Üí Set X) : LocallyFinite f := fun _ =>\n  ‚ü®univ, univ_mem, toFinite _‚ü©\n\n"}
{"name":"LocallyFinite.point_finite","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œπ : Type u_1\nX : Type u_4\ninst‚úù : TopologicalSpace X\nf : Œπ ‚Üí Set X\nhf : LocallyFinite f\nx : X\n‚ä¢ (setOf fun b => Membership.mem (f b) x).Finite","decl":"theorem point_finite (hf : LocallyFinite f) (x : X) : { b | x ‚àà f b }.Finite :=\n  let ‚ü®_t, hxt, ht‚ü© := hf x\n  ht.subset fun _b hb => ‚ü®x, hb, mem_of_mem_nhds hxt‚ü©\n\n"}
{"name":"LocallyFinite.subset","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œπ : Type u_1\nX : Type u_4\ninst‚úù : TopologicalSpace X\nf g : Œπ ‚Üí Set X\nhf : LocallyFinite f\nhg : ‚àÄ (i : Œπ), HasSubset.Subset (g i) (f i)\n‚ä¢ LocallyFinite g","decl":"protected theorem subset (hf : LocallyFinite f) (hg : ‚àÄ i, g i ‚äÜ f i) : LocallyFinite g := fun a =>\n  let ‚ü®t, ht‚ÇÅ, ht‚ÇÇ‚ü© := hf a\n  ‚ü®t, ht‚ÇÅ, ht‚ÇÇ.subset fun i hi => hi.mono <| inter_subset_inter (hg i) Subset.rfl‚ü©\n\n"}
{"name":"LocallyFinite.comp_injOn","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œπ : Type u_1\nŒπ' : Type u_2\nX : Type u_4\ninst‚úù : TopologicalSpace X\nf : Œπ ‚Üí Set X\ng : Œπ' ‚Üí Œπ\nhf : LocallyFinite f\nhg : Set.InjOn g (setOf fun i => (f (g i)).Nonempty)\n‚ä¢ LocallyFinite (Function.comp f g)","decl":"theorem comp_injOn {g : Œπ' ‚Üí Œπ} (hf : LocallyFinite f) (hg : InjOn g { i | (f (g i)).Nonempty }) :\n    LocallyFinite (f ‚àò g) := fun x => by\n  let ‚ü®t, htx, htf‚ü© := hf x\n  refine ‚ü®t, htx, htf.preimage <| ?_‚ü©\n  exact hg.mono fun i (hi : Set.Nonempty _) => hi.left\n\n"}
{"name":"LocallyFinite.comp_injective","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œπ : Type u_1\nŒπ' : Type u_2\nX : Type u_4\ninst‚úù : TopologicalSpace X\nf : Œπ ‚Üí Set X\ng : Œπ' ‚Üí Œπ\nhf : LocallyFinite f\nhg : Function.Injective g\n‚ä¢ LocallyFinite (Function.comp f g)","decl":"theorem comp_injective {g : Œπ' ‚Üí Œπ} (hf : LocallyFinite f) (hg : Injective g) :\n    LocallyFinite (f ‚àò g) :=\n  hf.comp_injOn hg.injOn\n\n"}
{"name":"locallyFinite_iff_smallSets","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œπ : Type u_1\nX : Type u_4\ninst‚úù : TopologicalSpace X\nf : Œπ ‚Üí Set X\n‚ä¢ Iff (LocallyFinite f) (‚àÄ (x : X), Filter.Eventually (fun s => (setOf fun i => (Inter.inter (f i) s).Nonempty).Finite) (nhds x).smallSets)","decl":"theorem _root_.locallyFinite_iff_smallSets :\n    LocallyFinite f ‚Üî ‚àÄ x, ‚àÄ·∂† s in (ùìù x).smallSets, { i | (f i ‚à© s).Nonempty }.Finite :=\n  forall_congr' fun _ => Iff.symm <|\n    eventually_smallSets' fun _s _t hst ht =>\n      ht.subset fun _i hi => hi.mono <| inter_subset_inter_right _ hst\n\n"}
{"name":"LocallyFinite.eventually_smallSets","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œπ : Type u_1\nX : Type u_4\ninst‚úù : TopologicalSpace X\nf : Œπ ‚Üí Set X\nhf : LocallyFinite f\nx : X\n‚ä¢ Filter.Eventually (fun s => (setOf fun i => (Inter.inter (f i) s).Nonempty).Finite) (nhds x).smallSets","decl":"protected theorem eventually_smallSets (hf : LocallyFinite f) (x : X) :\n    ‚àÄ·∂† s in (ùìù x).smallSets, { i | (f i ‚à© s).Nonempty }.Finite :=\n  locallyFinite_iff_smallSets.mp hf x\n\n"}
{"name":"LocallyFinite.exists_mem_basis","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œπ : Type u_1\nX : Type u_4\ninst‚úù : TopologicalSpace X\nf : Œπ ‚Üí Set X\nŒπ' : Sort u_6\nhf : LocallyFinite f\np : Œπ' ‚Üí Prop\ns : Œπ' ‚Üí Set X\nx : X\nhb : (nhds x).HasBasis p s\n‚ä¢ Exists fun i => And (p i) (setOf fun j => (Inter.inter (f j) (s i)).Nonempty).Finite","decl":"theorem exists_mem_basis {Œπ' : Sort*} (hf : LocallyFinite f) {p : Œπ' ‚Üí Prop} {s : Œπ' ‚Üí Set X}\n    {x : X} (hb : (ùìù x).HasBasis p s) : ‚àÉ i, p i ‚àß { j | (f j ‚à© s i).Nonempty }.Finite :=\n  let ‚ü®i, hpi, hi‚ü© := hb.smallSets.eventually_iff.mp (hf.eventually_smallSets x)\n  ‚ü®i, hpi, hi Subset.rfl‚ü©\n\n"}
{"name":"LocallyFinite.nhdsWithin_iUnion","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œπ : Type u_1\nX : Type u_4\ninst‚úù : TopologicalSpace X\nf : Œπ ‚Üí Set X\nhf : LocallyFinite f\na : X\n‚ä¢ Eq (nhdsWithin a (Set.iUnion fun i => f i)) (iSup fun i => nhdsWithin a (f i))","decl":"protected theorem nhdsWithin_iUnion (hf : LocallyFinite f) (a : X) :\n    ùìù[‚ãÉ i, f i] a = ‚®Ü i, ùìù[f i] a := by\n  rcases hf a with ‚ü®U, haU, hfin‚ü©\n  refine le_antisymm ?_ (Monotone.le_map_iSup fun _ _ ‚Ü¶ nhdsWithin_mono _)\n  calc\n    ùìù[‚ãÉ i, f i] a = ùìù[‚ãÉ i, f i ‚à© U] a := by\n      rw [‚Üê iUnion_inter, ‚Üê nhdsWithin_inter_of_mem' (nhdsWithin_le_nhds haU)]\n    _ = ùìù[‚ãÉ i ‚àà {j | (f j ‚à© U).Nonempty}, (f i ‚à© U)] a := by\n      simp only [mem_setOf_eq, iUnion_nonempty_self]\n    _ = ‚®Ü i ‚àà {j | (f j ‚à© U).Nonempty}, ùìù[f i ‚à© U] a := nhdsWithin_biUnion hfin _ _\n    _ ‚â§ ‚®Ü i, ùìù[f i ‚à© U] a := iSup‚ÇÇ_le_iSup _ _\n    _ ‚â§ ‚®Ü i, ùìù[f i] a := iSup_mono fun i ‚Ü¶ nhdsWithin_mono _ inter_subset_left\n\n"}
{"name":"LocallyFinite.continuousOn_iUnion'","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œπ : Type u_1\nX : Type u_4\nY : Type u_5\ninst‚úù¬π : TopologicalSpace X\ninst‚úù : TopologicalSpace Y\nf : Œπ ‚Üí Set X\ng : X ‚Üí Y\nhf : LocallyFinite f\nhc : ‚àÄ (i : Œπ) (x : X), Membership.mem (closure (f i)) x ‚Üí ContinuousWithinAt g (f i) x\n‚ä¢ ContinuousOn g (Set.iUnion fun i => f i)","decl":"theorem continuousOn_iUnion' {g : X ‚Üí Y} (hf : LocallyFinite f)\n    (hc : ‚àÄ i x, x ‚àà closure (f i) ‚Üí ContinuousWithinAt g (f i) x) :\n    ContinuousOn g (‚ãÉ i, f i) := by\n  rintro x -\n  rw [ContinuousWithinAt, hf.nhdsWithin_iUnion, tendsto_iSup]\n  intro i\n  by_cases hx : x ‚àà closure (f i)\n  ¬∑ exact hc i _ hx\n  ¬∑ rw [mem_closure_iff_nhdsWithin_neBot, not_neBot] at hx\n    rw [hx]\n    exact tendsto_bot\n\n"}
{"name":"LocallyFinite.continuousOn_iUnion","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œπ : Type u_1\nX : Type u_4\nY : Type u_5\ninst‚úù¬π : TopologicalSpace X\ninst‚úù : TopologicalSpace Y\nf : Œπ ‚Üí Set X\ng : X ‚Üí Y\nhf : LocallyFinite f\nh_cl : ‚àÄ (i : Œπ), IsClosed (f i)\nh_cont : ‚àÄ (i : Œπ), ContinuousOn g (f i)\n‚ä¢ ContinuousOn g (Set.iUnion fun i => f i)","decl":"theorem continuousOn_iUnion {g : X ‚Üí Y} (hf : LocallyFinite f) (h_cl : ‚àÄ i, IsClosed (f i))\n    (h_cont : ‚àÄ i, ContinuousOn g (f i)) : ContinuousOn g (‚ãÉ i, f i) :=\n  hf.continuousOn_iUnion' fun i x hx ‚Ü¶ h_cont i x <| (h_cl i).closure_subset hx\n\n"}
{"name":"LocallyFinite.continuous'","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œπ : Type u_1\nX : Type u_4\nY : Type u_5\ninst‚úù¬π : TopologicalSpace X\ninst‚úù : TopologicalSpace Y\nf : Œπ ‚Üí Set X\ng : X ‚Üí Y\nhf : LocallyFinite f\nh_cov : Eq (Set.iUnion fun i => f i) Set.univ\nhc : ‚àÄ (i : Œπ) (x : X), Membership.mem (closure (f i)) x ‚Üí ContinuousWithinAt g (f i) x\n‚ä¢ Continuous g","decl":"protected theorem continuous' {g : X ‚Üí Y} (hf : LocallyFinite f) (h_cov : ‚ãÉ i, f i = univ)\n    (hc : ‚àÄ i x, x ‚àà closure (f i) ‚Üí ContinuousWithinAt g (f i) x) :\n    Continuous g :=\n  continuous_iff_continuousOn_univ.2 <| h_cov ‚ñ∏ hf.continuousOn_iUnion' hc\n\n"}
{"name":"LocallyFinite.continuous","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œπ : Type u_1\nX : Type u_4\nY : Type u_5\ninst‚úù¬π : TopologicalSpace X\ninst‚úù : TopologicalSpace Y\nf : Œπ ‚Üí Set X\ng : X ‚Üí Y\nhf : LocallyFinite f\nh_cov : Eq (Set.iUnion fun i => f i) Set.univ\nh_cl : ‚àÄ (i : Œπ), IsClosed (f i)\nh_cont : ‚àÄ (i : Œπ), ContinuousOn g (f i)\n‚ä¢ Continuous g","decl":"protected theorem continuous {g : X ‚Üí Y} (hf : LocallyFinite f) (h_cov : ‚ãÉ i, f i = univ)\n    (h_cl : ‚àÄ i, IsClosed (f i)) (h_cont : ‚àÄ i, ContinuousOn g (f i)) :\n    Continuous g :=\n  continuous_iff_continuousOn_univ.2 <| h_cov ‚ñ∏ hf.continuousOn_iUnion h_cl h_cont\n\n"}
{"name":"LocallyFinite.closure","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œπ : Type u_1\nX : Type u_4\ninst‚úù : TopologicalSpace X\nf : Œπ ‚Üí Set X\nhf : LocallyFinite f\n‚ä¢ LocallyFinite fun i => closure (f i)","decl":"protected theorem closure (hf : LocallyFinite f) : LocallyFinite fun i => closure (f i) := by\n  intro x\n  rcases hf x with ‚ü®s, hsx, hsf‚ü©\n  refine ‚ü®interior s, interior_mem_nhds.2 hsx, hsf.subset fun i hi => ?_‚ü©\n  exact (hi.mono isOpen_interior.closure_inter).of_closure.mono\n    (inter_subset_inter_right _ interior_subset)\n\n"}
{"name":"LocallyFinite.closure_iUnion","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œπ : Type u_1\nX : Type u_4\ninst‚úù : TopologicalSpace X\nf : Œπ ‚Üí Set X\nh : LocallyFinite f\n‚ä¢ Eq (closure (Set.iUnion fun i => f i)) (Set.iUnion fun i => closure (f i))","decl":"theorem closure_iUnion (h : LocallyFinite f) : closure (‚ãÉ i, f i) = ‚ãÉ i, closure (f i) := by\n  ext x\n  simp only [mem_closure_iff_nhdsWithin_neBot, h.nhdsWithin_iUnion, iSup_neBot, mem_iUnion]\n\n"}
{"name":"LocallyFinite.isClosed_iUnion","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œπ : Type u_1\nX : Type u_4\ninst‚úù : TopologicalSpace X\nf : Œπ ‚Üí Set X\nhf : LocallyFinite f\nhc : ‚àÄ (i : Œπ), IsClosed (f i)\n‚ä¢ IsClosed (Set.iUnion fun i => f i)","decl":"theorem isClosed_iUnion (hf : LocallyFinite f) (hc : ‚àÄ i, IsClosed (f i)) :\n    IsClosed (‚ãÉ i, f i) := by\n  simp only [‚Üê closure_eq_iff_isClosed, hf.closure_iUnion, (hc _).closure_eq]\n\n"}
{"name":"LocallyFinite.iInter_compl_mem_nhds","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œπ : Type u_1\nX : Type u_4\ninst‚úù : TopologicalSpace X\nf : Œπ ‚Üí Set X\nhf : LocallyFinite f\nhc : ‚àÄ (i : Œπ), IsClosed (f i)\nx : X\n‚ä¢ Membership.mem (nhds x) (Set.iInter fun i => Set.iInter fun x => HasCompl.compl (f i))","decl":"/-- If `f : Œ≤ ‚Üí Set Œ±` is a locally finite family of closed sets, then for any `x : Œ±`, the\nintersection of the complements to `f i`, `x ‚àâ f i`, is a neighbourhood of `x`. -/\ntheorem iInter_compl_mem_nhds (hf : LocallyFinite f) (hc : ‚àÄ i, IsClosed (f i)) (x : X) :\n    (‚ãÇ (i) (_ : x ‚àâ f i), (f i)·∂ú) ‚àà ùìù x := by\n  refine IsOpen.mem_nhds ?_ (mem_iInter‚ÇÇ.2 fun i => id)\n  suffices IsClosed (‚ãÉ i : { i // x ‚àâ f i }, f i) by\n    rwa [‚Üê isOpen_compl_iff, compl_iUnion, iInter_subtype] at this\n  exact (hf.comp_injective Subtype.val_injective).isClosed_iUnion fun i => hc _\n\n"}
{"name":"LocallyFinite.exists_forall_eventually_eq_prod","module":"Mathlib.Topology.LocallyFinite","initialProofState":"X : Type u_4\ninst‚úù : TopologicalSpace X\nœÄ : X ‚Üí Sort u_6\nf : Nat ‚Üí (x : X) ‚Üí œÄ x\nhf : LocallyFinite fun n => setOf fun x => Ne (f (HAdd.hAdd n 1) x) (f n x)\n‚ä¢ Exists fun F => ‚àÄ (x : X), Filter.Eventually (fun p => Eq (f p.1 p.2) (F p.2)) (SProd.sprod Filter.atTop (nhds x))","decl":"/-- Let `f : ‚Ñï ‚Üí Œ† a, Œ≤ a` be a sequence of (dependent) functions on a topological space. Suppose\nthat the family of sets `s n = {x | f (n + 1) x ‚â† f n x}` is locally finite. Then there exists a\nfunction `F : Œ† a, Œ≤ a` such that for any `x`, we have `f n x = F x` on the product of an infinite\ninterval `[N, +‚àû)` and a neighbourhood of `x`.\n\nWe formulate the conclusion in terms of the product of filter `Filter.atTop` and `ùìù x`. -/\ntheorem exists_forall_eventually_eq_prod {œÄ : X ‚Üí Sort*} {f : ‚Ñï ‚Üí ‚àÄ x : X, œÄ x}\n    (hf : LocallyFinite fun n => { x | f (n + 1) x ‚â† f n x }) :\n    ‚àÉ F : ‚àÄ x : X, œÄ x, ‚àÄ x, ‚àÄ·∂† p : ‚Ñï √ó X in atTop √óÀ¢ ùìù x, f p.1 p.2 = F p.2 := by\n  choose U hUx hU using hf\n  choose N hN using fun x => (hU x).bddAbove\n  replace hN : ‚àÄ (x), ‚àÄ n > N x, ‚àÄ y ‚àà U x, f (n + 1) y = f n y :=\n    fun x n hn y hy => by_contra fun hne => hn.lt.not_le <| hN x ‚ü®y, hne, hy‚ü©\n  replace hN : ‚àÄ (x), ‚àÄ n ‚â• N x + 1, ‚àÄ y ‚àà U x, f n y = f (N x + 1) y :=\n    fun x n hn y hy => Nat.le_induction rfl (fun k hle => (hN x _ hle _ hy).trans) n hn\n  refine ‚ü®fun x => f (N x + 1) x, fun x => ?_‚ü©\n  filter_upwards [Filter.prod_mem_prod (eventually_gt_atTop (N x)) (hUx x)]\n  rintro ‚ü®n, y‚ü© ‚ü®hn : N x < n, hy : y ‚àà U x‚ü©\n  calc\n    f n y = f (N x + 1) y := hN _ _ hn _ hy\n    _ = f (max (N x + 1) (N y + 1)) y := (hN _ _ (le_max_left _ _) _ hy).symm\n    _ = f (N y + 1) y := hN _ _ (le_max_right _ _) _ (mem_of_mem_nhds <| hUx y)\n\n"}
{"name":"LocallyFinite.exists_forall_eventually_atTop_eventually_eq'","module":"Mathlib.Topology.LocallyFinite","initialProofState":"X : Type u_4\ninst‚úù : TopologicalSpace X\nœÄ : X ‚Üí Sort u_6\nf : Nat ‚Üí (x : X) ‚Üí œÄ x\nhf : LocallyFinite fun n => setOf fun x => Ne (f (HAdd.hAdd n 1) x) (f n x)\n‚ä¢ Exists fun F => ‚àÄ (x : X), Filter.Eventually (fun n => Filter.Eventually (fun y => Eq (f n y) (F y)) (nhds x)) Filter.atTop","decl":"/-- Let `f : ‚Ñï ‚Üí Œ† a, Œ≤ a` be a sequence of (dependent) functions on a topological space. Suppose\nthat the family of sets `s n = {x | f (n + 1) x ‚â† f n x}` is locally finite. Then there exists a\nfunction `F : Œ† a, Œ≤ a` such that for any `x`, for sufficiently large values of `n`, we have\n`f n y = F y` in a neighbourhood of `x`. -/\ntheorem exists_forall_eventually_atTop_eventually_eq' {œÄ : X ‚Üí Sort*} {f : ‚Ñï ‚Üí ‚àÄ x : X, œÄ x}\n    (hf : LocallyFinite fun n => { x | f (n + 1) x ‚â† f n x }) :\n    ‚àÉ F : ‚àÄ x : X, œÄ x, ‚àÄ x, ‚àÄ·∂† n : ‚Ñï in atTop, ‚àÄ·∂† y : X in ùìù x, f n y = F y :=\n  hf.exists_forall_eventually_eq_prod.imp fun _F hF x => (hF x).curry\n\n"}
{"name":"LocallyFinite.exists_forall_eventually_atTop_eventuallyEq","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œ± : Type u_3\nX : Type u_4\ninst‚úù : TopologicalSpace X\nf : Nat ‚Üí X ‚Üí Œ±\nhf : LocallyFinite fun n => setOf fun x => Ne (f (HAdd.hAdd n 1) x) (f n x)\n‚ä¢ Exists fun F => ‚àÄ (x : X), Filter.Eventually (fun n => (nhds x).EventuallyEq (f n) F) Filter.atTop","decl":"/-- Let `f : ‚Ñï ‚Üí Œ± ‚Üí Œ≤` be a sequence of functions on a topological space. Suppose\nthat the family of sets `s n = {x | f (n + 1) x ‚â† f n x}` is locally finite. Then there exists a\nfunction `F :  Œ± ‚Üí Œ≤` such that for any `x`, for sufficiently large values of `n`, we have\n`f n =·∂†[ùìù x] F`. -/\ntheorem exists_forall_eventually_atTop_eventuallyEq {f : ‚Ñï ‚Üí X ‚Üí Œ±}\n    (hf : LocallyFinite fun n => { x | f (n + 1) x ‚â† f n x }) :\n    ‚àÉ F : X ‚Üí Œ±, ‚àÄ x, ‚àÄ·∂† n : ‚Ñï in atTop, f n =·∂†[ùìù x] F :=\n  hf.exists_forall_eventually_atTop_eventually_eq'\n\n"}
{"name":"LocallyFinite.preimage_continuous","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œπ : Type u_1\nX : Type u_4\nY : Type u_5\ninst‚úù¬π : TopologicalSpace X\ninst‚úù : TopologicalSpace Y\nf : Œπ ‚Üí Set X\ng : Y ‚Üí X\nhf : LocallyFinite f\nhg : Continuous g\n‚ä¢ LocallyFinite fun x => Set.preimage g (f x)","decl":"theorem preimage_continuous {g : Y ‚Üí X} (hf : LocallyFinite f) (hg : Continuous g) :\n    LocallyFinite (g ‚Åª¬π' f ¬∑) := fun x =>\n  let ‚ü®s, hsx, hs‚ü© := hf (g x)\n  ‚ü®g ‚Åª¬π' s, hg.continuousAt hsx, hs.subset fun _ ‚ü®y, hy‚ü© => ‚ü®g y, hy‚ü©‚ü©\n\n"}
{"name":"LocallyFinite.prod_right","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œπ : Type u_1\nX : Type u_4\nY : Type u_5\ninst‚úù¬π : TopologicalSpace X\ninst‚úù : TopologicalSpace Y\nf : Œπ ‚Üí Set X\nhf : LocallyFinite f\ng : Œπ ‚Üí Set Y\n‚ä¢ LocallyFinite fun i => SProd.sprod (f i) (g i)","decl":"theorem prod_right (hf : LocallyFinite f) (g : Œπ ‚Üí Set Y) : LocallyFinite (fun i ‚Ü¶ f i √óÀ¢ g i) :=\n  (hf.preimage_continuous continuous_fst).subset fun _ ‚Ü¶ prod_subset_preimage_fst _ _\n\n"}
{"name":"LocallyFinite.prod_left","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œπ : Type u_1\nX : Type u_4\nY : Type u_5\ninst‚úù¬π : TopologicalSpace X\ninst‚úù : TopologicalSpace Y\ng : Œπ ‚Üí Set Y\nhg : LocallyFinite g\nf : Œπ ‚Üí Set X\n‚ä¢ LocallyFinite fun i => SProd.sprod (f i) (g i)","decl":"theorem prod_left {g : Œπ ‚Üí Set Y} (hg : LocallyFinite g) (f : Œπ ‚Üí Set X) :\n    LocallyFinite (fun i ‚Ü¶ f i √óÀ¢ g i) :=\n  (hg.preimage_continuous continuous_snd).subset fun _ ‚Ü¶ prod_subset_preimage_snd _ _\n\n"}
{"name":"Equiv.locallyFinite_comp_iff","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œπ : Type u_1\nŒπ' : Type u_2\nX : Type u_4\ninst‚úù : TopologicalSpace X\nf : Œπ ‚Üí Set X\ne : Equiv Œπ' Œπ\n‚ä¢ Iff (LocallyFinite (Function.comp f ‚áëe)) (LocallyFinite f)","decl":"@[simp]\ntheorem Equiv.locallyFinite_comp_iff (e : Œπ' ‚âÉ Œπ) : LocallyFinite (f ‚àò e) ‚Üî LocallyFinite f :=\n  ‚ü®fun h => by simpa only [comp_def, e.apply_symm_apply] using h.comp_injective e.symm.injective,\n    fun h => h.comp_injective e.injective‚ü©\n\n"}
{"name":"locallyFinite_sum","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œπ : Type u_1\nŒπ' : Type u_2\nX : Type u_4\ninst‚úù : TopologicalSpace X\nf : Sum Œπ Œπ' ‚Üí Set X\n‚ä¢ Iff (LocallyFinite f) (And (LocallyFinite (Function.comp f Sum.inl)) (LocallyFinite (Function.comp f Sum.inr)))","decl":"theorem locallyFinite_sum {f : Œπ ‚äï Œπ' ‚Üí Set X} :\n    LocallyFinite f ‚Üî LocallyFinite (f ‚àò Sum.inl) ‚àß LocallyFinite (f ‚àò Sum.inr) := by\n  simp only [locallyFinite_iff_smallSets, ‚Üê forall_and, ‚Üê finite_preimage_inl_and_inr,\n    preimage_setOf_eq, (¬∑ ‚àò ¬∑), eventually_and]\n\n"}
{"name":"LocallyFinite.sum_elim","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œπ : Type u_1\nŒπ' : Type u_2\nX : Type u_4\ninst‚úù : TopologicalSpace X\nf : Œπ ‚Üí Set X\ng : Œπ' ‚Üí Set X\nhf : LocallyFinite f\nhg : LocallyFinite g\n‚ä¢ LocallyFinite (Sum.elim f g)","decl":"theorem LocallyFinite.sum_elim {g : Œπ' ‚Üí Set X} (hf : LocallyFinite f) (hg : LocallyFinite g) :\n    LocallyFinite (Sum.elim f g) :=\n  locallyFinite_sum.mpr ‚ü®hf, hg‚ü©\n\n"}
{"name":"locallyFinite_option","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œπ : Type u_1\nX : Type u_4\ninst‚úù : TopologicalSpace X\nf : Option Œπ ‚Üí Set X\n‚ä¢ Iff (LocallyFinite f) (LocallyFinite (Function.comp f Option.some))","decl":"theorem locallyFinite_option {f : Option Œπ ‚Üí Set X} :\n    LocallyFinite f ‚Üî LocallyFinite (f ‚àò some) := by\n  rw [‚Üê (Equiv.optionEquivSumPUnit.{0, _} Œπ).symm.locallyFinite_comp_iff, locallyFinite_sum]\n  simp only [locallyFinite_of_finite, and_true]\n  rfl\n\n"}
{"name":"LocallyFinite.option_elim'","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œπ : Type u_1\nX : Type u_4\ninst‚úù : TopologicalSpace X\nf : Œπ ‚Üí Set X\nhf : LocallyFinite f\ns : Set X\n‚ä¢ LocallyFinite (Option.elim' s f)","decl":"theorem LocallyFinite.option_elim' (hf : LocallyFinite f) (s : Set X) :\n    LocallyFinite (Option.elim' s f) :=\n  locallyFinite_option.2 hf\n\n"}
{"name":"LocallyFinite.eventually_subset","module":"Mathlib.Topology.LocallyFinite","initialProofState":"Œπ : Type u_1\nX : Type u_4\ninst‚úù : TopologicalSpace X\ns : Œπ ‚Üí Set X\nhs : LocallyFinite s\nhs' : ‚àÄ (i : Œπ), IsClosed (s i)\nx : X\n‚ä¢ Filter.Eventually (fun y => HasSubset.Subset (setOf fun i => Membership.mem (s i) y) (setOf fun i => Membership.mem (s i) x)) (nhds x)","decl":"theorem LocallyFinite.eventually_subset {s : Œπ ‚Üí Set X}\n    (hs : LocallyFinite s) (hs' : ‚àÄ i, IsClosed (s i)) (x : X) :\n    ‚àÄ·∂† y in ùìù x, {i | y ‚àà s i} ‚äÜ {i | x ‚àà s i} := by\n  filter_upwards [hs.iInter_compl_mem_nhds hs' x] with y hy i hi\n  simp only [mem_iInter, mem_compl_iff] at hy\n  exact not_imp_not.mp (hy i) hi\n"}
