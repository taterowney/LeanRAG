{"name":"Left.inv_le_one_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na : α\n⊢ Iff (LE.le (Inv.inv a) 1) (LE.le 1 a)","decl":"/-- Uses `left` co(ntra)variant. -/\n@[to_additive (attr := simp) \"Uses `left` co(ntra)variant.\"]\ntheorem Left.inv_le_one_iff : a⁻¹ ≤ 1 ↔ 1 ≤ a := by\n  rw [← mul_le_mul_iff_left a]\n  simp\n\n"}
{"name":"Left.neg_nonpos_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na : α\n⊢ Iff (LE.le (Neg.neg a) 0) (LE.le 0 a)","decl":"/-- Uses `left` co(ntra)variant. -/\n@[to_additive (attr := simp) \"Uses `left` co(ntra)variant.\"]\ntheorem Left.inv_le_one_iff : a⁻¹ ≤ 1 ↔ 1 ≤ a := by\n  rw [← mul_le_mul_iff_left a]\n  simp\n\n"}
{"name":"Left.nonneg_neg_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na : α\n⊢ Iff (LE.le 0 (Neg.neg a)) (LE.le a 0)","decl":"/-- Uses `left` co(ntra)variant. -/\n@[to_additive (attr := simp) \"Uses `left` co(ntra)variant.\"]\ntheorem Left.one_le_inv_iff : 1 ≤ a⁻¹ ↔ a ≤ 1 := by\n  rw [← mul_le_mul_iff_left a]\n  simp\n\n"}
{"name":"Left.one_le_inv_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na : α\n⊢ Iff (LE.le 1 (Inv.inv a)) (LE.le a 1)","decl":"/-- Uses `left` co(ntra)variant. -/\n@[to_additive (attr := simp) \"Uses `left` co(ntra)variant.\"]\ntheorem Left.one_le_inv_iff : 1 ≤ a⁻¹ ↔ a ≤ 1 := by\n  rw [← mul_le_mul_iff_left a]\n  simp\n\n"}
{"name":"le_inv_mul_iff_mul_le","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na b c : α\n⊢ Iff (LE.le b (HMul.hMul (Inv.inv a) c)) (LE.le (HMul.hMul a b) c)","decl":"@[to_additive (attr := simp)]\ntheorem le_inv_mul_iff_mul_le : b ≤ a⁻¹ * c ↔ a * b ≤ c := by\n  rw [← mul_le_mul_iff_left a]\n  simp\n\n"}
{"name":"le_neg_add_iff_add_le","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na b c : α\n⊢ Iff (LE.le b (HAdd.hAdd (Neg.neg a) c)) (LE.le (HAdd.hAdd a b) c)","decl":"@[to_additive (attr := simp)]\ntheorem le_inv_mul_iff_mul_le : b ≤ a⁻¹ * c ↔ a * b ≤ c := by\n  rw [← mul_le_mul_iff_left a]\n  simp\n\n"}
{"name":"inv_mul_le_iff_le_mul","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na b c : α\n⊢ Iff (LE.le (HMul.hMul (Inv.inv b) a) c) (LE.le a (HMul.hMul b c))","decl":"@[to_additive (attr := simp)]\ntheorem inv_mul_le_iff_le_mul : b⁻¹ * a ≤ c ↔ a ≤ b * c := by\n  rw [← mul_le_mul_iff_left b, mul_inv_cancel_left]\n\n"}
{"name":"neg_add_le_iff_le_add","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na b c : α\n⊢ Iff (LE.le (HAdd.hAdd (Neg.neg b) a) c) (LE.le a (HAdd.hAdd b c))","decl":"@[to_additive (attr := simp)]\ntheorem inv_mul_le_iff_le_mul : b⁻¹ * a ≤ c ↔ a ≤ b * c := by\n  rw [← mul_le_mul_iff_left b, mul_inv_cancel_left]\n\n"}
{"name":"neg_le_iff_add_nonneg'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na b : α\n⊢ Iff (LE.le (Neg.neg a) b) (LE.le 0 (HAdd.hAdd a b))","decl":"@[to_additive neg_le_iff_add_nonneg']\ntheorem inv_le_iff_one_le_mul' : a⁻¹ ≤ b ↔ 1 ≤ a * b :=\n  (mul_le_mul_iff_left a).symm.trans <| by rw [mul_inv_cancel]\n\n"}
{"name":"inv_le_iff_one_le_mul'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na b : α\n⊢ Iff (LE.le (Inv.inv a) b) (LE.le 1 (HMul.hMul a b))","decl":"@[to_additive neg_le_iff_add_nonneg']\ntheorem inv_le_iff_one_le_mul' : a⁻¹ ≤ b ↔ 1 ≤ a * b :=\n  (mul_le_mul_iff_left a).symm.trans <| by rw [mul_inv_cancel]\n\n"}
{"name":"le_inv_iff_mul_le_one_left","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na b : α\n⊢ Iff (LE.le a (Inv.inv b)) (LE.le (HMul.hMul b a) 1)","decl":"@[to_additive]\ntheorem le_inv_iff_mul_le_one_left : a ≤ b⁻¹ ↔ b * a ≤ 1 :=\n  (mul_le_mul_iff_left b).symm.trans <| by rw [mul_inv_cancel]\n\n"}
{"name":"le_neg_iff_add_nonpos_left","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na b : α\n⊢ Iff (LE.le a (Neg.neg b)) (LE.le (HAdd.hAdd b a) 0)","decl":"@[to_additive]\ntheorem le_inv_iff_mul_le_one_left : a ≤ b⁻¹ ↔ b * a ≤ 1 :=\n  (mul_le_mul_iff_left b).symm.trans <| by rw [mul_inv_cancel]\n\n"}
{"name":"le_inv_mul_iff_le","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na b : α\n⊢ Iff (LE.le 1 (HMul.hMul (Inv.inv b) a)) (LE.le b a)","decl":"@[to_additive]\ntheorem le_inv_mul_iff_le : 1 ≤ b⁻¹ * a ↔ b ≤ a := by\n  rw [← mul_le_mul_iff_left b, mul_one, mul_inv_cancel_left]\n\n"}
{"name":"le_neg_add_iff_le","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na b : α\n⊢ Iff (LE.le 0 (HAdd.hAdd (Neg.neg b) a)) (LE.le b a)","decl":"@[to_additive]\ntheorem le_inv_mul_iff_le : 1 ≤ b⁻¹ * a ↔ b ≤ a := by\n  rw [← mul_le_mul_iff_left b, mul_one, mul_inv_cancel_left]\n\n"}
{"name":"neg_add_nonpos_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na b : α\n⊢ Iff (LE.le (HAdd.hAdd (Neg.neg a) b) 0) (LE.le b a)","decl":"@[to_additive]\ntheorem inv_mul_le_one_iff : a⁻¹ * b ≤ 1 ↔ b ≤ a :=\n  -- Porting note: why is the `_root_` needed?\n  _root_.trans inv_mul_le_iff_le_mul <| by rw [mul_one]\n\n"}
{"name":"inv_mul_le_one_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na b : α\n⊢ Iff (LE.le (HMul.hMul (Inv.inv a) b) 1) (LE.le b a)","decl":"@[to_additive]\ntheorem inv_mul_le_one_iff : a⁻¹ * b ≤ 1 ↔ b ≤ a :=\n  -- Porting note: why is the `_root_` needed?\n  _root_.trans inv_mul_le_iff_le_mul <| by rw [mul_one]\n\n"}
{"name":"Left.one_lt_inv_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na : α\n⊢ Iff (LT.lt 1 (Inv.inv a)) (LT.lt a 1)","decl":"/-- Uses `left` co(ntra)variant. -/\n@[to_additive (attr := simp) Left.neg_pos_iff \"Uses `left` co(ntra)variant.\"]\ntheorem Left.one_lt_inv_iff : 1 < a⁻¹ ↔ a < 1 := by\n  rw [← mul_lt_mul_iff_left a, mul_inv_cancel, mul_one]\n\n"}
{"name":"Left.neg_pos_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na : α\n⊢ Iff (LT.lt 0 (Neg.neg a)) (LT.lt a 0)","decl":"/-- Uses `left` co(ntra)variant. -/\n@[to_additive (attr := simp) Left.neg_pos_iff \"Uses `left` co(ntra)variant.\"]\ntheorem Left.one_lt_inv_iff : 1 < a⁻¹ ↔ a < 1 := by\n  rw [← mul_lt_mul_iff_left a, mul_inv_cancel, mul_one]\n\n"}
{"name":"Left.neg_neg_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na : α\n⊢ Iff (LT.lt (Neg.neg a) 0) (LT.lt 0 a)","decl":"/-- Uses `left` co(ntra)variant. -/\n@[to_additive (attr := simp) \"Uses `left` co(ntra)variant.\"]\ntheorem Left.inv_lt_one_iff : a⁻¹ < 1 ↔ 1 < a := by\n  rw [← mul_lt_mul_iff_left a, mul_inv_cancel, mul_one]\n\n"}
{"name":"Left.inv_lt_one_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na : α\n⊢ Iff (LT.lt (Inv.inv a) 1) (LT.lt 1 a)","decl":"/-- Uses `left` co(ntra)variant. -/\n@[to_additive (attr := simp) \"Uses `left` co(ntra)variant.\"]\ntheorem Left.inv_lt_one_iff : a⁻¹ < 1 ↔ 1 < a := by\n  rw [← mul_lt_mul_iff_left a, mul_inv_cancel, mul_one]\n\n"}
{"name":"lt_neg_add_iff_add_lt","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na b c : α\n⊢ Iff (LT.lt b (HAdd.hAdd (Neg.neg a) c)) (LT.lt (HAdd.hAdd a b) c)","decl":"@[to_additive (attr := simp)]\ntheorem lt_inv_mul_iff_mul_lt : b < a⁻¹ * c ↔ a * b < c := by\n  rw [← mul_lt_mul_iff_left a]\n  simp\n\n"}
{"name":"lt_inv_mul_iff_mul_lt","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na b c : α\n⊢ Iff (LT.lt b (HMul.hMul (Inv.inv a) c)) (LT.lt (HMul.hMul a b) c)","decl":"@[to_additive (attr := simp)]\ntheorem lt_inv_mul_iff_mul_lt : b < a⁻¹ * c ↔ a * b < c := by\n  rw [← mul_lt_mul_iff_left a]\n  simp\n\n"}
{"name":"neg_add_lt_iff_lt_add","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na b c : α\n⊢ Iff (LT.lt (HAdd.hAdd (Neg.neg b) a) c) (LT.lt a (HAdd.hAdd b c))","decl":"@[to_additive (attr := simp)]\ntheorem inv_mul_lt_iff_lt_mul : b⁻¹ * a < c ↔ a < b * c := by\n  rw [← mul_lt_mul_iff_left b, mul_inv_cancel_left]\n\n"}
{"name":"inv_mul_lt_iff_lt_mul","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na b c : α\n⊢ Iff (LT.lt (HMul.hMul (Inv.inv b) a) c) (LT.lt a (HMul.hMul b c))","decl":"@[to_additive (attr := simp)]\ntheorem inv_mul_lt_iff_lt_mul : b⁻¹ * a < c ↔ a < b * c := by\n  rw [← mul_lt_mul_iff_left b, mul_inv_cancel_left]\n\n"}
{"name":"neg_lt_iff_pos_add'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na b : α\n⊢ Iff (LT.lt (Neg.neg a) b) (LT.lt 0 (HAdd.hAdd a b))","decl":"@[to_additive]\ntheorem inv_lt_iff_one_lt_mul' : a⁻¹ < b ↔ 1 < a * b :=\n  (mul_lt_mul_iff_left a).symm.trans <| by rw [mul_inv_cancel]\n\n"}
{"name":"inv_lt_iff_one_lt_mul'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na b : α\n⊢ Iff (LT.lt (Inv.inv a) b) (LT.lt 1 (HMul.hMul a b))","decl":"@[to_additive]\ntheorem inv_lt_iff_one_lt_mul' : a⁻¹ < b ↔ 1 < a * b :=\n  (mul_lt_mul_iff_left a).symm.trans <| by rw [mul_inv_cancel]\n\n"}
{"name":"lt_neg_iff_add_neg'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na b : α\n⊢ Iff (LT.lt a (Neg.neg b)) (LT.lt (HAdd.hAdd b a) 0)","decl":"@[to_additive]\ntheorem lt_inv_iff_mul_lt_one' : a < b⁻¹ ↔ b * a < 1 :=\n  (mul_lt_mul_iff_left b).symm.trans <| by rw [mul_inv_cancel]\n\n"}
{"name":"lt_inv_iff_mul_lt_one'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na b : α\n⊢ Iff (LT.lt a (Inv.inv b)) (LT.lt (HMul.hMul b a) 1)","decl":"@[to_additive]\ntheorem lt_inv_iff_mul_lt_one' : a < b⁻¹ ↔ b * a < 1 :=\n  (mul_lt_mul_iff_left b).symm.trans <| by rw [mul_inv_cancel]\n\n"}
{"name":"lt_inv_mul_iff_lt","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na b : α\n⊢ Iff (LT.lt 1 (HMul.hMul (Inv.inv b) a)) (LT.lt b a)","decl":"@[to_additive]\ntheorem lt_inv_mul_iff_lt : 1 < b⁻¹ * a ↔ b < a := by\n  rw [← mul_lt_mul_iff_left b, mul_one, mul_inv_cancel_left]\n\n"}
{"name":"lt_neg_add_iff_lt","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na b : α\n⊢ Iff (LT.lt 0 (HAdd.hAdd (Neg.neg b) a)) (LT.lt b a)","decl":"@[to_additive]\ntheorem lt_inv_mul_iff_lt : 1 < b⁻¹ * a ↔ b < a := by\n  rw [← mul_lt_mul_iff_left b, mul_one, mul_inv_cancel_left]\n\n"}
{"name":"neg_add_neg_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na b : α\n⊢ Iff (LT.lt (HAdd.hAdd (Neg.neg a) b) 0) (LT.lt b a)","decl":"@[to_additive]\ntheorem inv_mul_lt_one_iff : a⁻¹ * b < 1 ↔ b < a :=\n  _root_.trans inv_mul_lt_iff_lt_mul <| by rw [mul_one]\n\n"}
{"name":"inv_mul_lt_one_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na b : α\n⊢ Iff (LT.lt (HMul.hMul (Inv.inv a) b) 1) (LT.lt b a)","decl":"@[to_additive]\ntheorem inv_mul_lt_one_iff : a⁻¹ * b < 1 ↔ b < a :=\n  _root_.trans inv_mul_lt_iff_lt_mul <| by rw [mul_one]\n\n"}
{"name":"Right.inv_le_one_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulRightMono α\na : α\n⊢ Iff (LE.le (Inv.inv a) 1) (LE.le 1 a)","decl":"/-- Uses `right` co(ntra)variant. -/\n@[to_additive (attr := simp) \"Uses `right` co(ntra)variant.\"]\ntheorem Right.inv_le_one_iff : a⁻¹ ≤ 1 ↔ 1 ≤ a := by\n  rw [← mul_le_mul_iff_right a]\n  simp\n\n"}
{"name":"Right.neg_nonpos_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddRightMono α\na : α\n⊢ Iff (LE.le (Neg.neg a) 0) (LE.le 0 a)","decl":"/-- Uses `right` co(ntra)variant. -/\n@[to_additive (attr := simp) \"Uses `right` co(ntra)variant.\"]\ntheorem Right.inv_le_one_iff : a⁻¹ ≤ 1 ↔ 1 ≤ a := by\n  rw [← mul_le_mul_iff_right a]\n  simp\n\n"}
{"name":"Right.nonneg_neg_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddRightMono α\na : α\n⊢ Iff (LE.le 0 (Neg.neg a)) (LE.le a 0)","decl":"/-- Uses `right` co(ntra)variant. -/\n@[to_additive (attr := simp) \"Uses `right` co(ntra)variant.\"]\ntheorem Right.one_le_inv_iff : 1 ≤ a⁻¹ ↔ a ≤ 1 := by\n  rw [← mul_le_mul_iff_right a]\n  simp\n\n"}
{"name":"Right.one_le_inv_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulRightMono α\na : α\n⊢ Iff (LE.le 1 (Inv.inv a)) (LE.le a 1)","decl":"/-- Uses `right` co(ntra)variant. -/\n@[to_additive (attr := simp) \"Uses `right` co(ntra)variant.\"]\ntheorem Right.one_le_inv_iff : 1 ≤ a⁻¹ ↔ a ≤ 1 := by\n  rw [← mul_le_mul_iff_right a]\n  simp\n\n"}
{"name":"neg_le_iff_add_nonneg","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddRightMono α\na b : α\n⊢ Iff (LE.le (Neg.neg a) b) (LE.le 0 (HAdd.hAdd b a))","decl":"@[to_additive neg_le_iff_add_nonneg]\ntheorem inv_le_iff_one_le_mul : a⁻¹ ≤ b ↔ 1 ≤ b * a :=\n  (mul_le_mul_iff_right a).symm.trans <| by rw [inv_mul_cancel]\n\n"}
{"name":"inv_le_iff_one_le_mul","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulRightMono α\na b : α\n⊢ Iff (LE.le (Inv.inv a) b) (LE.le 1 (HMul.hMul b a))","decl":"@[to_additive neg_le_iff_add_nonneg]\ntheorem inv_le_iff_one_le_mul : a⁻¹ ≤ b ↔ 1 ≤ b * a :=\n  (mul_le_mul_iff_right a).symm.trans <| by rw [inv_mul_cancel]\n\n"}
{"name":"le_neg_iff_add_nonpos_right","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddRightMono α\na b : α\n⊢ Iff (LE.le a (Neg.neg b)) (LE.le (HAdd.hAdd a b) 0)","decl":"@[to_additive]\ntheorem le_inv_iff_mul_le_one_right : a ≤ b⁻¹ ↔ a * b ≤ 1 :=\n  (mul_le_mul_iff_right b).symm.trans <| by rw [inv_mul_cancel]\n\n"}
{"name":"le_inv_iff_mul_le_one_right","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulRightMono α\na b : α\n⊢ Iff (LE.le a (Inv.inv b)) (LE.le (HMul.hMul a b) 1)","decl":"@[to_additive]\ntheorem le_inv_iff_mul_le_one_right : a ≤ b⁻¹ ↔ a * b ≤ 1 :=\n  (mul_le_mul_iff_right b).symm.trans <| by rw [inv_mul_cancel]\n\n"}
{"name":"add_neg_le_iff_le_add","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddRightMono α\na b c : α\n⊢ Iff (LE.le (HAdd.hAdd a (Neg.neg b)) c) (LE.le a (HAdd.hAdd c b))","decl":"@[to_additive (attr := simp)]\ntheorem mul_inv_le_iff_le_mul : a * b⁻¹ ≤ c ↔ a ≤ c * b :=\n  (mul_le_mul_iff_right b).symm.trans <| by rw [inv_mul_cancel_right]\n\n"}
{"name":"mul_inv_le_iff_le_mul","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulRightMono α\na b c : α\n⊢ Iff (LE.le (HMul.hMul a (Inv.inv b)) c) (LE.le a (HMul.hMul c b))","decl":"@[to_additive (attr := simp)]\ntheorem mul_inv_le_iff_le_mul : a * b⁻¹ ≤ c ↔ a ≤ c * b :=\n  (mul_le_mul_iff_right b).symm.trans <| by rw [inv_mul_cancel_right]\n\n"}
{"name":"le_mul_inv_iff_mul_le","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulRightMono α\na b c : α\n⊢ Iff (LE.le c (HMul.hMul a (Inv.inv b))) (LE.le (HMul.hMul c b) a)","decl":"@[to_additive (attr := simp)]\ntheorem le_mul_inv_iff_mul_le : c ≤ a * b⁻¹ ↔ c * b ≤ a :=\n  (mul_le_mul_iff_right b).symm.trans <| by rw [inv_mul_cancel_right]\n\n"}
{"name":"le_add_neg_iff_add_le","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddRightMono α\na b c : α\n⊢ Iff (LE.le c (HAdd.hAdd a (Neg.neg b))) (LE.le (HAdd.hAdd c b) a)","decl":"@[to_additive (attr := simp)]\ntheorem le_mul_inv_iff_mul_le : c ≤ a * b⁻¹ ↔ c * b ≤ a :=\n  (mul_le_mul_iff_right b).symm.trans <| by rw [inv_mul_cancel_right]\n\n"}
{"name":"mul_inv_le_one_iff_le","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulRightMono α\na b : α\n⊢ Iff (LE.le (HMul.hMul a (Inv.inv b)) 1) (LE.le a b)","decl":"@[to_additive]\ntheorem mul_inv_le_one_iff_le : a * b⁻¹ ≤ 1 ↔ a ≤ b :=\n  mul_inv_le_iff_le_mul.trans <| by rw [one_mul]\n\n"}
{"name":"add_neg_nonpos_iff_le","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddRightMono α\na b : α\n⊢ Iff (LE.le (HAdd.hAdd a (Neg.neg b)) 0) (LE.le a b)","decl":"@[to_additive]\ntheorem mul_inv_le_one_iff_le : a * b⁻¹ ≤ 1 ↔ a ≤ b :=\n  mul_inv_le_iff_le_mul.trans <| by rw [one_mul]\n\n"}
{"name":"le_add_neg_iff_le","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddRightMono α\na b : α\n⊢ Iff (LE.le 0 (HAdd.hAdd a (Neg.neg b))) (LE.le b a)","decl":"@[to_additive]\ntheorem le_mul_inv_iff_le : 1 ≤ a * b⁻¹ ↔ b ≤ a := by\n  rw [← mul_le_mul_iff_right b, one_mul, inv_mul_cancel_right]\n\n"}
{"name":"le_mul_inv_iff_le","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulRightMono α\na b : α\n⊢ Iff (LE.le 1 (HMul.hMul a (Inv.inv b))) (LE.le b a)","decl":"@[to_additive]\ntheorem le_mul_inv_iff_le : 1 ≤ a * b⁻¹ ↔ b ≤ a := by\n  rw [← mul_le_mul_iff_right b, one_mul, inv_mul_cancel_right]\n\n"}
{"name":"mul_inv_le_one_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulRightMono α\na b : α\n⊢ Iff (LE.le (HMul.hMul b (Inv.inv a)) 1) (LE.le b a)","decl":"@[to_additive]\ntheorem mul_inv_le_one_iff : b * a⁻¹ ≤ 1 ↔ b ≤ a :=\n  _root_.trans mul_inv_le_iff_le_mul <| by rw [one_mul]\n\n"}
{"name":"add_neg_nonpos_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddRightMono α\na b : α\n⊢ Iff (LE.le (HAdd.hAdd b (Neg.neg a)) 0) (LE.le b a)","decl":"@[to_additive]\ntheorem mul_inv_le_one_iff : b * a⁻¹ ≤ 1 ↔ b ≤ a :=\n  _root_.trans mul_inv_le_iff_le_mul <| by rw [one_mul]\n\n"}
{"name":"Right.inv_lt_one_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulRightStrictMono α\na : α\n⊢ Iff (LT.lt (Inv.inv a) 1) (LT.lt 1 a)","decl":"/-- Uses `right` co(ntra)variant. -/\n@[to_additive (attr := simp) \"Uses `right` co(ntra)variant.\"]\ntheorem Right.inv_lt_one_iff : a⁻¹ < 1 ↔ 1 < a := by\n  rw [← mul_lt_mul_iff_right a, inv_mul_cancel, one_mul]\n\n"}
{"name":"Right.neg_neg_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddRightStrictMono α\na : α\n⊢ Iff (LT.lt (Neg.neg a) 0) (LT.lt 0 a)","decl":"/-- Uses `right` co(ntra)variant. -/\n@[to_additive (attr := simp) \"Uses `right` co(ntra)variant.\"]\ntheorem Right.inv_lt_one_iff : a⁻¹ < 1 ↔ 1 < a := by\n  rw [← mul_lt_mul_iff_right a, inv_mul_cancel, one_mul]\n\n"}
{"name":"Right.neg_pos_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddRightStrictMono α\na : α\n⊢ Iff (LT.lt 0 (Neg.neg a)) (LT.lt a 0)","decl":"/-- Uses `right` co(ntra)variant. -/\n@[to_additive (attr := simp) Right.neg_pos_iff \"Uses `right` co(ntra)variant.\"]\ntheorem Right.one_lt_inv_iff : 1 < a⁻¹ ↔ a < 1 := by\n  rw [← mul_lt_mul_iff_right a, inv_mul_cancel, one_mul]\n\n"}
{"name":"Right.one_lt_inv_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulRightStrictMono α\na : α\n⊢ Iff (LT.lt 1 (Inv.inv a)) (LT.lt a 1)","decl":"/-- Uses `right` co(ntra)variant. -/\n@[to_additive (attr := simp) Right.neg_pos_iff \"Uses `right` co(ntra)variant.\"]\ntheorem Right.one_lt_inv_iff : 1 < a⁻¹ ↔ a < 1 := by\n  rw [← mul_lt_mul_iff_right a, inv_mul_cancel, one_mul]\n\n"}
{"name":"neg_lt_iff_pos_add","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddRightStrictMono α\na b : α\n⊢ Iff (LT.lt (Neg.neg a) b) (LT.lt 0 (HAdd.hAdd b a))","decl":"@[to_additive]\ntheorem inv_lt_iff_one_lt_mul : a⁻¹ < b ↔ 1 < b * a :=\n  (mul_lt_mul_iff_right a).symm.trans <| by rw [inv_mul_cancel]\n\n"}
{"name":"inv_lt_iff_one_lt_mul","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulRightStrictMono α\na b : α\n⊢ Iff (LT.lt (Inv.inv a) b) (LT.lt 1 (HMul.hMul b a))","decl":"@[to_additive]\ntheorem inv_lt_iff_one_lt_mul : a⁻¹ < b ↔ 1 < b * a :=\n  (mul_lt_mul_iff_right a).symm.trans <| by rw [inv_mul_cancel]\n\n"}
{"name":"lt_inv_iff_mul_lt_one","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulRightStrictMono α\na b : α\n⊢ Iff (LT.lt a (Inv.inv b)) (LT.lt (HMul.hMul a b) 1)","decl":"@[to_additive]\ntheorem lt_inv_iff_mul_lt_one : a < b⁻¹ ↔ a * b < 1 :=\n  (mul_lt_mul_iff_right b).symm.trans <| by rw [inv_mul_cancel]\n\n"}
{"name":"lt_neg_iff_add_neg","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddRightStrictMono α\na b : α\n⊢ Iff (LT.lt a (Neg.neg b)) (LT.lt (HAdd.hAdd a b) 0)","decl":"@[to_additive]\ntheorem lt_inv_iff_mul_lt_one : a < b⁻¹ ↔ a * b < 1 :=\n  (mul_lt_mul_iff_right b).symm.trans <| by rw [inv_mul_cancel]\n\n"}
{"name":"mul_inv_lt_iff_lt_mul","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulRightStrictMono α\na b c : α\n⊢ Iff (LT.lt (HMul.hMul a (Inv.inv b)) c) (LT.lt a (HMul.hMul c b))","decl":"@[to_additive (attr := simp)]\ntheorem mul_inv_lt_iff_lt_mul : a * b⁻¹ < c ↔ a < c * b := by\n  rw [← mul_lt_mul_iff_right b, inv_mul_cancel_right]\n\n"}
{"name":"add_neg_lt_iff_lt_add","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddRightStrictMono α\na b c : α\n⊢ Iff (LT.lt (HAdd.hAdd a (Neg.neg b)) c) (LT.lt a (HAdd.hAdd c b))","decl":"@[to_additive (attr := simp)]\ntheorem mul_inv_lt_iff_lt_mul : a * b⁻¹ < c ↔ a < c * b := by\n  rw [← mul_lt_mul_iff_right b, inv_mul_cancel_right]\n\n"}
{"name":"lt_add_neg_iff_add_lt","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddRightStrictMono α\na b c : α\n⊢ Iff (LT.lt c (HAdd.hAdd a (Neg.neg b))) (LT.lt (HAdd.hAdd c b) a)","decl":"@[to_additive (attr := simp)]\ntheorem lt_mul_inv_iff_mul_lt : c < a * b⁻¹ ↔ c * b < a :=\n  (mul_lt_mul_iff_right b).symm.trans <| by rw [inv_mul_cancel_right]\n\n"}
{"name":"lt_mul_inv_iff_mul_lt","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulRightStrictMono α\na b c : α\n⊢ Iff (LT.lt c (HMul.hMul a (Inv.inv b))) (LT.lt (HMul.hMul c b) a)","decl":"@[to_additive (attr := simp)]\ntheorem lt_mul_inv_iff_mul_lt : c < a * b⁻¹ ↔ c * b < a :=\n  (mul_lt_mul_iff_right b).symm.trans <| by rw [inv_mul_cancel_right]\n\n"}
{"name":"neg_add_neg_iff_lt","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddRightStrictMono α\na b : α\n⊢ Iff (LT.lt (HAdd.hAdd a (Neg.neg b)) 0) (LT.lt a b)","decl":"@[to_additive]\ntheorem inv_mul_lt_one_iff_lt : a * b⁻¹ < 1 ↔ a < b := by\n  rw [← mul_lt_mul_iff_right b, inv_mul_cancel_right, one_mul]\n\n"}
{"name":"inv_mul_lt_one_iff_lt","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulRightStrictMono α\na b : α\n⊢ Iff (LT.lt (HMul.hMul a (Inv.inv b)) 1) (LT.lt a b)","decl":"@[to_additive]\ntheorem inv_mul_lt_one_iff_lt : a * b⁻¹ < 1 ↔ a < b := by\n  rw [← mul_lt_mul_iff_right b, inv_mul_cancel_right, one_mul]\n\n"}
{"name":"lt_mul_inv_iff_lt","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulRightStrictMono α\na b : α\n⊢ Iff (LT.lt 1 (HMul.hMul a (Inv.inv b))) (LT.lt b a)","decl":"@[to_additive]\ntheorem lt_mul_inv_iff_lt : 1 < a * b⁻¹ ↔ b < a := by\n  rw [← mul_lt_mul_iff_right b, one_mul, inv_mul_cancel_right]\n\n"}
{"name":"lt_add_neg_iff_lt","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddRightStrictMono α\na b : α\n⊢ Iff (LT.lt 0 (HAdd.hAdd a (Neg.neg b))) (LT.lt b a)","decl":"@[to_additive]\ntheorem lt_mul_inv_iff_lt : 1 < a * b⁻¹ ↔ b < a := by\n  rw [← mul_lt_mul_iff_right b, one_mul, inv_mul_cancel_right]\n\n"}
{"name":"mul_inv_lt_one_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulRightStrictMono α\na b : α\n⊢ Iff (LT.lt (HMul.hMul b (Inv.inv a)) 1) (LT.lt b a)","decl":"@[to_additive]\ntheorem mul_inv_lt_one_iff : b * a⁻¹ < 1 ↔ b < a :=\n  _root_.trans mul_inv_lt_iff_lt_mul <| by rw [one_mul]\n\n"}
{"name":"add_neg_neg_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddRightStrictMono α\na b : α\n⊢ Iff (LT.lt (HAdd.hAdd b (Neg.neg a)) 0) (LT.lt b a)","decl":"@[to_additive]\ntheorem mul_inv_lt_one_iff : b * a⁻¹ < 1 ↔ b < a :=\n  _root_.trans mul_inv_lt_iff_lt_mul <| by rw [one_mul]\n\n"}
{"name":"sub_le_self_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na b : α\n⊢ Iff (LE.le (HSub.hSub a b) a) (LE.le 0 b)","decl":"@[to_additive (attr := simp)]\ntheorem div_le_self_iff (a : α) {b : α} : a / b ≤ a ↔ 1 ≤ b := by\n  simp [div_eq_mul_inv]\n\n"}
{"name":"div_le_self_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na b : α\n⊢ Iff (LE.le (HDiv.hDiv a b) a) (LE.le 1 b)","decl":"@[to_additive (attr := simp)]\ntheorem div_le_self_iff (a : α) {b : α} : a / b ≤ a ↔ 1 ≤ b := by\n  simp [div_eq_mul_inv]\n\n"}
{"name":"le_sub_self_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na b : α\n⊢ Iff (LE.le a (HSub.hSub a b)) (LE.le b 0)","decl":"@[to_additive (attr := simp)]\ntheorem le_div_self_iff (a : α) {b : α} : a ≤ a / b ↔ b ≤ 1 := by\n  simp [div_eq_mul_inv]\n\n"}
{"name":"le_div_self_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na b : α\n⊢ Iff (LE.le a (HDiv.hDiv a b)) (LE.le b 1)","decl":"@[to_additive (attr := simp)]\ntheorem le_div_self_iff (a : α) {b : α} : a ≤ a / b ↔ b ≤ 1 := by\n  simp [div_eq_mul_inv]\n\n"}
{"name":"sub_le_self","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na b : α\na✝ : LE.le 0 b\n⊢ LE.le (HSub.hSub a b) a","decl":"alias ⟨_, sub_le_self⟩ := sub_le_self_iff\n\n"}
{"name":"inv_le_inv_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : Group α\ninst✝² : LE α\ninst✝¹ : MulLeftMono α\na b : α\ninst✝ : MulRightMono α\n⊢ Iff (LE.le (Inv.inv a) (Inv.inv b)) (LE.le b a)","decl":"@[to_additive (attr := simp)]\ntheorem inv_le_inv_iff : a⁻¹ ≤ b⁻¹ ↔ b ≤ a := by\n  rw [← mul_le_mul_iff_left a, ← mul_le_mul_iff_right b]\n  simp\n\n"}
{"name":"neg_le_neg_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : AddGroup α\ninst✝² : LE α\ninst✝¹ : AddLeftMono α\na b : α\ninst✝ : AddRightMono α\n⊢ Iff (LE.le (Neg.neg a) (Neg.neg b)) (LE.le b a)","decl":"@[to_additive (attr := simp)]\ntheorem inv_le_inv_iff : a⁻¹ ≤ b⁻¹ ↔ b ≤ a := by\n  rw [← mul_le_mul_iff_left a, ← mul_le_mul_iff_right b]\n  simp\n\n"}
{"name":"le_of_neg_le_neg","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : AddGroup α\ninst✝² : LE α\ninst✝¹ : AddLeftMono α\na b : α\ninst✝ : AddRightMono α\na✝ : LE.le (Neg.neg a) (Neg.neg b)\n⊢ LE.le b a","decl":"alias ⟨le_of_neg_le_neg, _⟩ := neg_le_neg_iff\n\n"}
{"name":"mul_inv_le_inv_mul_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : Group α\ninst✝² : LE α\ninst✝¹ : MulLeftMono α\na b c d : α\ninst✝ : MulRightMono α\n⊢ Iff (LE.le (HMul.hMul a (Inv.inv b)) (HMul.hMul (Inv.inv d) c)) (LE.le (HMul.hMul d a) (HMul.hMul c b))","decl":"@[to_additive]\ntheorem mul_inv_le_inv_mul_iff : a * b⁻¹ ≤ d⁻¹ * c ↔ d * a ≤ c * b := by\n  rw [← mul_le_mul_iff_left d, ← mul_le_mul_iff_right b, mul_inv_cancel_left, mul_assoc,\n    inv_mul_cancel_right]\n\n"}
{"name":"add_neg_le_neg_add_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : AddGroup α\ninst✝² : LE α\ninst✝¹ : AddLeftMono α\na b c d : α\ninst✝ : AddRightMono α\n⊢ Iff (LE.le (HAdd.hAdd a (Neg.neg b)) (HAdd.hAdd (Neg.neg d) c)) (LE.le (HAdd.hAdd d a) (HAdd.hAdd c b))","decl":"@[to_additive]\ntheorem mul_inv_le_inv_mul_iff : a * b⁻¹ ≤ d⁻¹ * c ↔ d * a ≤ c * b := by\n  rw [← mul_le_mul_iff_left d, ← mul_le_mul_iff_right b, mul_inv_cancel_left, mul_assoc,\n    inv_mul_cancel_right]\n\n"}
{"name":"div_lt_self_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na b : α\n⊢ Iff (LT.lt (HDiv.hDiv a b) a) (LT.lt 1 b)","decl":"@[to_additive (attr := simp)]\ntheorem div_lt_self_iff (a : α) {b : α} : a / b < a ↔ 1 < b := by\n  simp [div_eq_mul_inv]\n\n"}
{"name":"sub_lt_self_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na b : α\n⊢ Iff (LT.lt (HSub.hSub a b) a) (LT.lt 0 b)","decl":"@[to_additive (attr := simp)]\ntheorem div_lt_self_iff (a : α) {b : α} : a / b < a ↔ 1 < b := by\n  simp [div_eq_mul_inv]\n\n"}
{"name":"sub_lt_self","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na b : α\na✝ : LT.lt 0 b\n⊢ LT.lt (HSub.hSub a b) a","decl":"alias ⟨_, sub_lt_self⟩ := sub_lt_self_iff\n\n"}
{"name":"neg_lt_neg_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : AddGroup α\ninst✝² : LT α\ninst✝¹ : AddLeftStrictMono α\na b : α\ninst✝ : AddRightStrictMono α\n⊢ Iff (LT.lt (Neg.neg a) (Neg.neg b)) (LT.lt b a)","decl":"@[to_additive (attr := simp)]\ntheorem inv_lt_inv_iff : a⁻¹ < b⁻¹ ↔ b < a := by\n  rw [← mul_lt_mul_iff_left a, ← mul_lt_mul_iff_right b]\n  simp\n\n"}
{"name":"inv_lt_inv_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : Group α\ninst✝² : LT α\ninst✝¹ : MulLeftStrictMono α\na b : α\ninst✝ : MulRightStrictMono α\n⊢ Iff (LT.lt (Inv.inv a) (Inv.inv b)) (LT.lt b a)","decl":"@[to_additive (attr := simp)]\ntheorem inv_lt_inv_iff : a⁻¹ < b⁻¹ ↔ b < a := by\n  rw [← mul_lt_mul_iff_left a, ← mul_lt_mul_iff_right b]\n  simp\n\n"}
{"name":"neg_lt","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : AddGroup α\ninst✝² : LT α\ninst✝¹ : AddLeftStrictMono α\na b : α\ninst✝ : AddRightStrictMono α\n⊢ Iff (LT.lt (Neg.neg a) b) (LT.lt (Neg.neg b) a)","decl":"@[to_additive neg_lt]\ntheorem inv_lt' : a⁻¹ < b ↔ b⁻¹ < a := by rw [← inv_lt_inv_iff, inv_inv]\n\n"}
{"name":"inv_lt'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : Group α\ninst✝² : LT α\ninst✝¹ : MulLeftStrictMono α\na b : α\ninst✝ : MulRightStrictMono α\n⊢ Iff (LT.lt (Inv.inv a) b) (LT.lt (Inv.inv b) a)","decl":"@[to_additive neg_lt]\ntheorem inv_lt' : a⁻¹ < b ↔ b⁻¹ < a := by rw [← inv_lt_inv_iff, inv_inv]\n\n"}
{"name":"lt_inv'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : Group α\ninst✝² : LT α\ninst✝¹ : MulLeftStrictMono α\na b : α\ninst✝ : MulRightStrictMono α\n⊢ Iff (LT.lt a (Inv.inv b)) (LT.lt b (Inv.inv a))","decl":"@[to_additive lt_neg]\ntheorem lt_inv' : a < b⁻¹ ↔ b < a⁻¹ := by rw [← inv_lt_inv_iff, inv_inv]\n\n"}
{"name":"lt_neg","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : AddGroup α\ninst✝² : LT α\ninst✝¹ : AddLeftStrictMono α\na b : α\ninst✝ : AddRightStrictMono α\n⊢ Iff (LT.lt a (Neg.neg b)) (LT.lt b (Neg.neg a))","decl":"@[to_additive lt_neg]\ntheorem lt_inv' : a < b⁻¹ ↔ b < a⁻¹ := by rw [← inv_lt_inv_iff, inv_inv]\n\n"}
{"name":"lt_inv_of_lt_inv","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : Group α\ninst✝² : LT α\ninst✝¹ : MulLeftStrictMono α\na b : α\ninst✝ : MulRightStrictMono α\na✝ : LT.lt a (Inv.inv b)\n⊢ LT.lt b (Inv.inv a)","decl":"alias ⟨lt_inv_of_lt_inv, _⟩ := lt_inv'\n\n"}
{"name":"lt_neg_of_lt_neg","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : AddGroup α\ninst✝² : LT α\ninst✝¹ : AddLeftStrictMono α\na b : α\ninst✝ : AddRightStrictMono α\na✝ : LT.lt a (Neg.neg b)\n⊢ LT.lt b (Neg.neg a)","decl":"attribute [to_additive] lt_inv_of_lt_inv\n\n"}
{"name":"inv_lt_of_inv_lt'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : Group α\ninst✝² : LT α\ninst✝¹ : MulLeftStrictMono α\na b : α\ninst✝ : MulRightStrictMono α\na✝ : LT.lt (Inv.inv a) b\n⊢ LT.lt (Inv.inv b) a","decl":"alias ⟨inv_lt_of_inv_lt', _⟩ := inv_lt'\n\n"}
{"name":"neg_lt_of_neg_lt","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : AddGroup α\ninst✝² : LT α\ninst✝¹ : AddLeftStrictMono α\na b : α\ninst✝ : AddRightStrictMono α\na✝ : LT.lt (Neg.neg a) b\n⊢ LT.lt (Neg.neg b) a","decl":"attribute [to_additive neg_lt_of_neg_lt] inv_lt_of_inv_lt'\n\n"}
{"name":"add_neg_lt_neg_add_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : AddGroup α\ninst✝² : LT α\ninst✝¹ : AddLeftStrictMono α\na b c d : α\ninst✝ : AddRightStrictMono α\n⊢ Iff (LT.lt (HAdd.hAdd a (Neg.neg b)) (HAdd.hAdd (Neg.neg d) c)) (LT.lt (HAdd.hAdd d a) (HAdd.hAdd c b))","decl":"@[to_additive]\ntheorem mul_inv_lt_inv_mul_iff : a * b⁻¹ < d⁻¹ * c ↔ d * a < c * b := by\n  rw [← mul_lt_mul_iff_left d, ← mul_lt_mul_iff_right b, mul_inv_cancel_left, mul_assoc,\n    inv_mul_cancel_right]\n\n"}
{"name":"mul_inv_lt_inv_mul_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : Group α\ninst✝² : LT α\ninst✝¹ : MulLeftStrictMono α\na b c d : α\ninst✝ : MulRightStrictMono α\n⊢ Iff (LT.lt (HMul.hMul a (Inv.inv b)) (HMul.hMul (Inv.inv d) c)) (LT.lt (HMul.hMul d a) (HMul.hMul c b))","decl":"@[to_additive]\ntheorem mul_inv_lt_inv_mul_iff : a * b⁻¹ < d⁻¹ * c ↔ d * a < c * b := by\n  rw [← mul_lt_mul_iff_left d, ← mul_lt_mul_iff_right b, mul_inv_cancel_left, mul_assoc,\n    inv_mul_cancel_right]\n\n"}
{"name":"Left.neg_le_self","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : Preorder α\ninst✝ : AddLeftMono α\na : α\nh : LE.le 0 a\n⊢ LE.le (Neg.neg a) a","decl":"@[to_additive]\ntheorem Left.inv_le_self (h : 1 ≤ a) : a⁻¹ ≤ a :=\n  le_trans (Left.inv_le_one_iff.mpr h) h\n\n"}
{"name":"Left.inv_le_self","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : Preorder α\ninst✝ : MulLeftMono α\na : α\nh : LE.le 1 a\n⊢ LE.le (Inv.inv a) a","decl":"@[to_additive]\ntheorem Left.inv_le_self (h : 1 ≤ a) : a⁻¹ ≤ a :=\n  le_trans (Left.inv_le_one_iff.mpr h) h\n\n"}
{"name":"neg_le_self","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : Preorder α\ninst✝ : AddLeftMono α\na : α\nh : LE.le 0 a\n⊢ LE.le (Neg.neg a) a","decl":"alias neg_le_self := Left.neg_le_self\n\n"}
{"name":"Left.self_le_inv","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : Preorder α\ninst✝ : MulLeftMono α\na : α\nh : LE.le a 1\n⊢ LE.le a (Inv.inv a)","decl":"@[to_additive]\ntheorem Left.self_le_inv (h : a ≤ 1) : a ≤ a⁻¹ :=\n  le_trans h (Left.one_le_inv_iff.mpr h)\n\n"}
{"name":"Left.self_le_neg","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : Preorder α\ninst✝ : AddLeftMono α\na : α\nh : LE.le a 0\n⊢ LE.le a (Neg.neg a)","decl":"@[to_additive]\ntheorem Left.self_le_inv (h : a ≤ 1) : a ≤ a⁻¹ :=\n  le_trans h (Left.one_le_inv_iff.mpr h)\n\n"}
{"name":"Left.inv_lt_self","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : Preorder α\ninst✝ : MulLeftStrictMono α\na : α\nh : LT.lt 1 a\n⊢ LT.lt (Inv.inv a) a","decl":"@[to_additive]\ntheorem Left.inv_lt_self (h : 1 < a) : a⁻¹ < a :=\n  (Left.inv_lt_one_iff.mpr h).trans h\n\n"}
{"name":"Left.neg_lt_self","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : Preorder α\ninst✝ : AddLeftStrictMono α\na : α\nh : LT.lt 0 a\n⊢ LT.lt (Neg.neg a) a","decl":"@[to_additive]\ntheorem Left.inv_lt_self (h : 1 < a) : a⁻¹ < a :=\n  (Left.inv_lt_one_iff.mpr h).trans h\n\n"}
{"name":"neg_lt_self","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : Preorder α\ninst✝ : AddLeftStrictMono α\na : α\nh : LT.lt 0 a\n⊢ LT.lt (Neg.neg a) a","decl":"alias neg_lt_self := Left.neg_lt_self\n\n"}
{"name":"Left.self_lt_inv","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : Preorder α\ninst✝ : MulLeftStrictMono α\na : α\nh : LT.lt a 1\n⊢ LT.lt a (Inv.inv a)","decl":"@[to_additive]\ntheorem Left.self_lt_inv (h : a < 1) : a < a⁻¹ :=\n  lt_trans h (Left.one_lt_inv_iff.mpr h)\n\n"}
{"name":"Left.self_lt_neg","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : Preorder α\ninst✝ : AddLeftStrictMono α\na : α\nh : LT.lt a 0\n⊢ LT.lt a (Neg.neg a)","decl":"@[to_additive]\ntheorem Left.self_lt_inv (h : a < 1) : a < a⁻¹ :=\n  lt_trans h (Left.one_lt_inv_iff.mpr h)\n\n"}
{"name":"Right.neg_le_self","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : Preorder α\ninst✝ : AddRightMono α\na : α\nh : LE.le 0 a\n⊢ LE.le (Neg.neg a) a","decl":"@[to_additive]\ntheorem Right.inv_le_self (h : 1 ≤ a) : a⁻¹ ≤ a :=\n  le_trans (Right.inv_le_one_iff.mpr h) h\n\n"}
{"name":"Right.inv_le_self","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : Preorder α\ninst✝ : MulRightMono α\na : α\nh : LE.le 1 a\n⊢ LE.le (Inv.inv a) a","decl":"@[to_additive]\ntheorem Right.inv_le_self (h : 1 ≤ a) : a⁻¹ ≤ a :=\n  le_trans (Right.inv_le_one_iff.mpr h) h\n\n"}
{"name":"Right.self_le_inv","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : Preorder α\ninst✝ : MulRightMono α\na : α\nh : LE.le a 1\n⊢ LE.le a (Inv.inv a)","decl":"@[to_additive]\ntheorem Right.self_le_inv (h : a ≤ 1) : a ≤ a⁻¹ :=\n  le_trans h (Right.one_le_inv_iff.mpr h)\n\n"}
{"name":"Right.self_le_neg","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : Preorder α\ninst✝ : AddRightMono α\na : α\nh : LE.le a 0\n⊢ LE.le a (Neg.neg a)","decl":"@[to_additive]\ntheorem Right.self_le_inv (h : a ≤ 1) : a ≤ a⁻¹ :=\n  le_trans h (Right.one_le_inv_iff.mpr h)\n\n"}
{"name":"Right.neg_lt_self","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : Preorder α\ninst✝ : AddRightStrictMono α\na : α\nh : LT.lt 0 a\n⊢ LT.lt (Neg.neg a) a","decl":"@[to_additive]\ntheorem Right.inv_lt_self (h : 1 < a) : a⁻¹ < a :=\n  (Right.inv_lt_one_iff.mpr h).trans h\n\n"}
{"name":"Right.inv_lt_self","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : Preorder α\ninst✝ : MulRightStrictMono α\na : α\nh : LT.lt 1 a\n⊢ LT.lt (Inv.inv a) a","decl":"@[to_additive]\ntheorem Right.inv_lt_self (h : 1 < a) : a⁻¹ < a :=\n  (Right.inv_lt_one_iff.mpr h).trans h\n\n"}
{"name":"Right.self_lt_inv","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : Preorder α\ninst✝ : MulRightStrictMono α\na : α\nh : LT.lt a 1\n⊢ LT.lt a (Inv.inv a)","decl":"@[to_additive]\ntheorem Right.self_lt_inv (h : a < 1) : a < a⁻¹ :=\n  lt_trans h (Right.one_lt_inv_iff.mpr h)\n\n"}
{"name":"Right.self_lt_neg","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : Preorder α\ninst✝ : AddRightStrictMono α\na : α\nh : LT.lt a 0\n⊢ LT.lt a (Neg.neg a)","decl":"@[to_additive]\ntheorem Right.self_lt_inv (h : a < 1) : a < a⁻¹ :=\n  lt_trans h (Right.one_lt_inv_iff.mpr h)\n\n"}
{"name":"neg_add_le_iff_le_add'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na b c : α\n⊢ Iff (LE.le (HAdd.hAdd (Neg.neg c) a) b) (LE.le a (HAdd.hAdd b c))","decl":"@[to_additive]\ntheorem inv_mul_le_iff_le_mul' : c⁻¹ * a ≤ b ↔ a ≤ b * c := by rw [inv_mul_le_iff_le_mul, mul_comm]\n\n-- Porting note: `simp` simplifies LHS to `a ≤ c * b`\n"}
{"name":"inv_mul_le_iff_le_mul'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : CommGroup α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na b c : α\n⊢ Iff (LE.le (HMul.hMul (Inv.inv c) a) b) (LE.le a (HMul.hMul b c))","decl":"@[to_additive]\ntheorem inv_mul_le_iff_le_mul' : c⁻¹ * a ≤ b ↔ a ≤ b * c := by rw [inv_mul_le_iff_le_mul, mul_comm]\n\n-- Porting note: `simp` simplifies LHS to `a ≤ c * b`\n"}
{"name":"add_neg_le_iff_le_add'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na b c : α\n⊢ Iff (LE.le (HAdd.hAdd a (Neg.neg b)) c) (LE.le a (HAdd.hAdd b c))","decl":"@[to_additive]\ntheorem mul_inv_le_iff_le_mul' : a * b⁻¹ ≤ c ↔ a ≤ b * c := by\n  rw [← inv_mul_le_iff_le_mul, mul_comm]\n\n"}
{"name":"mul_inv_le_iff_le_mul'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : CommGroup α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na b c : α\n⊢ Iff (LE.le (HMul.hMul a (Inv.inv b)) c) (LE.le a (HMul.hMul b c))","decl":"@[to_additive]\ntheorem mul_inv_le_iff_le_mul' : a * b⁻¹ ≤ c ↔ a ≤ b * c := by\n  rw [← inv_mul_le_iff_le_mul, mul_comm]\n\n"}
{"name":"add_neg_le_add_neg_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na b c d : α\n⊢ Iff (LE.le (HAdd.hAdd a (Neg.neg b)) (HAdd.hAdd c (Neg.neg d))) (LE.le (HAdd.hAdd a d) (HAdd.hAdd c b))","decl":"@[to_additive add_neg_le_add_neg_iff]\ntheorem mul_inv_le_mul_inv_iff' : a * b⁻¹ ≤ c * d⁻¹ ↔ a * d ≤ c * b := by\n  rw [mul_comm c, mul_inv_le_inv_mul_iff, mul_comm]\n\n"}
{"name":"mul_inv_le_mul_inv_iff'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : CommGroup α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na b c d : α\n⊢ Iff (LE.le (HMul.hMul a (Inv.inv b)) (HMul.hMul c (Inv.inv d))) (LE.le (HMul.hMul a d) (HMul.hMul c b))","decl":"@[to_additive add_neg_le_add_neg_iff]\ntheorem mul_inv_le_mul_inv_iff' : a * b⁻¹ ≤ c * d⁻¹ ↔ a * d ≤ c * b := by\n  rw [mul_comm c, mul_inv_le_inv_mul_iff, mul_comm]\n\n"}
{"name":"inv_mul_lt_iff_lt_mul'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : CommGroup α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na b c : α\n⊢ Iff (LT.lt (HMul.hMul (Inv.inv c) a) b) (LT.lt a (HMul.hMul b c))","decl":"@[to_additive]\ntheorem inv_mul_lt_iff_lt_mul' : c⁻¹ * a < b ↔ a < b * c := by rw [inv_mul_lt_iff_lt_mul, mul_comm]\n\n-- Porting note: `simp` simplifies LHS to `a < c * b`\n"}
{"name":"neg_add_lt_iff_lt_add'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na b c : α\n⊢ Iff (LT.lt (HAdd.hAdd (Neg.neg c) a) b) (LT.lt a (HAdd.hAdd b c))","decl":"@[to_additive]\ntheorem inv_mul_lt_iff_lt_mul' : c⁻¹ * a < b ↔ a < b * c := by rw [inv_mul_lt_iff_lt_mul, mul_comm]\n\n-- Porting note: `simp` simplifies LHS to `a < c * b`\n"}
{"name":"mul_inv_lt_iff_le_mul'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : CommGroup α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na b c : α\n⊢ Iff (LT.lt (HMul.hMul a (Inv.inv b)) c) (LT.lt a (HMul.hMul b c))","decl":"@[to_additive]\ntheorem mul_inv_lt_iff_le_mul' : a * b⁻¹ < c ↔ a < b * c := by\n  rw [← inv_mul_lt_iff_lt_mul, mul_comm]\n\n"}
{"name":"add_neg_lt_iff_le_add'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na b c : α\n⊢ Iff (LT.lt (HAdd.hAdd a (Neg.neg b)) c) (LT.lt a (HAdd.hAdd b c))","decl":"@[to_additive]\ntheorem mul_inv_lt_iff_le_mul' : a * b⁻¹ < c ↔ a < b * c := by\n  rw [← inv_mul_lt_iff_lt_mul, mul_comm]\n\n"}
{"name":"add_neg_lt_add_neg_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na b c d : α\n⊢ Iff (LT.lt (HAdd.hAdd a (Neg.neg b)) (HAdd.hAdd c (Neg.neg d))) (LT.lt (HAdd.hAdd a d) (HAdd.hAdd c b))","decl":"@[to_additive add_neg_lt_add_neg_iff]\ntheorem mul_inv_lt_mul_inv_iff' : a * b⁻¹ < c * d⁻¹ ↔ a * d < c * b := by\n  rw [mul_comm c, mul_inv_lt_inv_mul_iff, mul_comm]\n\n"}
{"name":"mul_inv_lt_mul_inv_iff'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : CommGroup α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na b c d : α\n⊢ Iff (LT.lt (HMul.hMul a (Inv.inv b)) (HMul.hMul c (Inv.inv d))) (LT.lt (HMul.hMul a d) (HMul.hMul c b))","decl":"@[to_additive add_neg_lt_add_neg_iff]\ntheorem mul_inv_lt_mul_inv_iff' : a * b⁻¹ < c * d⁻¹ ↔ a * d < c * b := by\n  rw [mul_comm c, mul_inv_lt_inv_mul_iff, mul_comm]\n\n"}
{"name":"one_le_of_inv_le_one","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na : α\na✝ : LE.le (Inv.inv a) 1\n⊢ LE.le 1 a","decl":"alias ⟨one_le_of_inv_le_one, _⟩ := Left.inv_le_one_iff\n\n"}
{"name":"nonneg_of_neg_nonpos","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na : α\na✝ : LE.le (Neg.neg a) 0\n⊢ LE.le 0 a","decl":"attribute [to_additive] one_le_of_inv_le_one\n\n"}
{"name":"le_one_of_one_le_inv","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na : α\na✝ : LE.le 1 (Inv.inv a)\n⊢ LE.le a 1","decl":"alias ⟨le_one_of_one_le_inv, _⟩ := Left.one_le_inv_iff\n\n"}
{"name":"nonpos_of_neg_nonneg","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na : α\na✝ : LE.le 0 (Neg.neg a)\n⊢ LE.le a 0","decl":"attribute [to_additive nonpos_of_neg_nonneg] le_one_of_one_le_inv\n\n"}
{"name":"lt_of_inv_lt_inv","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : Group α\ninst✝² : LT α\ninst✝¹ : MulLeftStrictMono α\na b : α\ninst✝ : MulRightStrictMono α\na✝ : LT.lt (Inv.inv a) (Inv.inv b)\n⊢ LT.lt b a","decl":"alias ⟨lt_of_inv_lt_inv, _⟩ := inv_lt_inv_iff\n\n"}
{"name":"lt_of_neg_lt_neg","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : AddGroup α\ninst✝² : LT α\ninst✝¹ : AddLeftStrictMono α\na b : α\ninst✝ : AddRightStrictMono α\na✝ : LT.lt (Neg.neg a) (Neg.neg b)\n⊢ LT.lt b a","decl":"attribute [to_additive] lt_of_inv_lt_inv\n\n"}
{"name":"one_lt_of_inv_lt_one","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na : α\na✝ : LT.lt (Inv.inv a) 1\n⊢ LT.lt 1 a","decl":"alias ⟨one_lt_of_inv_lt_one, _⟩ := Left.inv_lt_one_iff\n\n"}
{"name":"pos_of_neg_neg","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na : α\na✝ : LT.lt (Neg.neg a) 0\n⊢ LT.lt 0 a","decl":"attribute [to_additive] one_lt_of_inv_lt_one\n\n"}
{"name":"inv_lt_one_iff_one_lt","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na : α\n⊢ Iff (LT.lt (Inv.inv a) 1) (LT.lt 1 a)","decl":"alias inv_lt_one_iff_one_lt := Left.inv_lt_one_iff\n\n"}
{"name":"neg_neg_iff_pos","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na : α\n⊢ Iff (LT.lt (Neg.neg a) 0) (LT.lt 0 a)","decl":"attribute [to_additive] inv_lt_one_iff_one_lt\n\n"}
{"name":"inv_lt_one'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na : α\n⊢ Iff (LT.lt (Inv.inv a) 1) (LT.lt 1 a)","decl":"alias inv_lt_one' := Left.inv_lt_one_iff\n\n"}
{"name":"neg_lt_zero","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na : α\n⊢ Iff (LT.lt (Neg.neg a) 0) (LT.lt 0 a)","decl":"attribute [to_additive neg_lt_zero] inv_lt_one'\n\n"}
{"name":"inv_of_one_lt_inv","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na : α\na✝ : LT.lt 1 (Inv.inv a)\n⊢ LT.lt a 1","decl":"alias ⟨inv_of_one_lt_inv, _⟩ := Left.one_lt_inv_iff\n\n"}
{"name":"neg_of_neg_pos","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na : α\na✝ : LT.lt 0 (Neg.neg a)\n⊢ LT.lt a 0","decl":"attribute [to_additive neg_of_neg_pos] inv_of_one_lt_inv\n\n"}
{"name":"one_lt_inv_of_inv","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na : α\na✝ : LT.lt a 1\n⊢ LT.lt 1 (Inv.inv a)","decl":"alias ⟨_, one_lt_inv_of_inv⟩ := Left.one_lt_inv_iff\n\n"}
{"name":"neg_pos_of_neg","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na : α\na✝ : LT.lt a 0\n⊢ LT.lt 0 (Neg.neg a)","decl":"attribute [to_additive neg_pos_of_neg] one_lt_inv_of_inv\n\n"}
{"name":"mul_le_of_le_inv_mul","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na b c : α\na✝ : LE.le b (HMul.hMul (Inv.inv a) c)\n⊢ LE.le (HMul.hMul a b) c","decl":"alias ⟨mul_le_of_le_inv_mul, _⟩ := le_inv_mul_iff_mul_le\n\n"}
{"name":"add_le_of_le_neg_add","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na b c : α\na✝ : LE.le b (HAdd.hAdd (Neg.neg a) c)\n⊢ LE.le (HAdd.hAdd a b) c","decl":"attribute [to_additive] mul_le_of_le_inv_mul\n\n"}
{"name":"le_inv_mul_of_mul_le","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na b c : α\na✝ : LE.le (HMul.hMul a b) c\n⊢ LE.le b (HMul.hMul (Inv.inv a) c)","decl":"alias ⟨_, le_inv_mul_of_mul_le⟩ := le_inv_mul_iff_mul_le\n\n"}
{"name":"le_neg_add_of_add_le","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na b c : α\na✝ : LE.le (HAdd.hAdd a b) c\n⊢ LE.le b (HAdd.hAdd (Neg.neg a) c)","decl":"attribute [to_additive] le_inv_mul_of_mul_le\n\n"}
{"name":"inv_mul_le_of_le_mul","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na b c : α\na✝ : LE.le a (HMul.hMul b c)\n⊢ LE.le (HMul.hMul (Inv.inv b) a) c","decl":"alias ⟨_, inv_mul_le_of_le_mul⟩ := inv_mul_le_iff_le_mul\n\n-- Porting note: was `inv_mul_le_iff_le_mul`\n"}
{"name":"neg_add_le_of_le_add","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na b c : α\na✝ : LE.le a (HAdd.hAdd b c)\n⊢ LE.le (HAdd.hAdd (Neg.neg b) a) c","decl":"attribute [to_additive] inv_mul_le_of_le_mul\n\n"}
{"name":"mul_lt_of_lt_inv_mul","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na b c : α\na✝ : LT.lt b (HMul.hMul (Inv.inv a) c)\n⊢ LT.lt (HMul.hMul a b) c","decl":"alias ⟨mul_lt_of_lt_inv_mul, _⟩ := lt_inv_mul_iff_mul_lt\n\n"}
{"name":"add_lt_of_lt_neg_add","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na b c : α\na✝ : LT.lt b (HAdd.hAdd (Neg.neg a) c)\n⊢ LT.lt (HAdd.hAdd a b) c","decl":"attribute [to_additive] mul_lt_of_lt_inv_mul\n\n"}
{"name":"lt_inv_mul_of_mul_lt","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na b c : α\na✝ : LT.lt (HMul.hMul a b) c\n⊢ LT.lt b (HMul.hMul (Inv.inv a) c)","decl":"alias ⟨_, lt_inv_mul_of_mul_lt⟩ := lt_inv_mul_iff_mul_lt\n\n"}
{"name":"lt_neg_add_of_add_lt","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na b c : α\na✝ : LT.lt (HAdd.hAdd a b) c\n⊢ LT.lt b (HAdd.hAdd (Neg.neg a) c)","decl":"attribute [to_additive] lt_inv_mul_of_mul_lt\n\n"}
{"name":"lt_mul_of_inv_mul_lt","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na b c : α\na✝ : LT.lt (HMul.hMul (Inv.inv b) a) c\n⊢ LT.lt a (HMul.hMul b c)","decl":"alias ⟨lt_mul_of_inv_mul_lt, inv_mul_lt_of_lt_mul⟩ := inv_mul_lt_iff_lt_mul\n\n"}
{"name":"inv_mul_lt_of_lt_mul","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na b c : α\na✝ : LT.lt a (HMul.hMul b c)\n⊢ LT.lt (HMul.hMul (Inv.inv b) a) c","decl":"alias ⟨lt_mul_of_inv_mul_lt, inv_mul_lt_of_lt_mul⟩ := inv_mul_lt_iff_lt_mul\n\n"}
{"name":"lt_add_of_neg_add_lt","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na b c : α\na✝ : LT.lt (HAdd.hAdd (Neg.neg b) a) c\n⊢ LT.lt a (HAdd.hAdd b c)","decl":"attribute [to_additive] lt_mul_of_inv_mul_lt\n\n"}
{"name":"neg_add_lt_of_lt_add","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na b c : α\na✝ : LT.lt a (HAdd.hAdd b c)\n⊢ LT.lt (HAdd.hAdd (Neg.neg b) a) c","decl":"attribute [to_additive] inv_mul_lt_of_lt_mul\n\n"}
{"name":"lt_mul_of_inv_mul_lt_left","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na b c : α\na✝ : LT.lt (HMul.hMul (Inv.inv b) a) c\n⊢ LT.lt a (HMul.hMul b c)","decl":"alias lt_mul_of_inv_mul_lt_left := lt_mul_of_inv_mul_lt\n\n"}
{"name":"lt_add_of_neg_add_lt_left","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na b c : α\na✝ : LT.lt (HAdd.hAdd (Neg.neg b) a) c\n⊢ LT.lt a (HAdd.hAdd b c)","decl":"attribute [to_additive] lt_mul_of_inv_mul_lt_left\n\n"}
{"name":"inv_le_one'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na : α\n⊢ Iff (LE.le (Inv.inv a) 1) (LE.le 1 a)","decl":"alias inv_le_one' := Left.inv_le_one_iff\n\n"}
{"name":"neg_nonpos","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na : α\n⊢ Iff (LE.le (Neg.neg a) 0) (LE.le 0 a)","decl":"attribute [to_additive neg_nonpos] inv_le_one'\n\n"}
{"name":"one_le_inv'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na : α\n⊢ Iff (LE.le 1 (Inv.inv a)) (LE.le a 1)","decl":"alias one_le_inv' := Left.one_le_inv_iff\n\n"}
{"name":"neg_nonneg","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na : α\n⊢ Iff (LE.le 0 (Neg.neg a)) (LE.le a 0)","decl":"attribute [to_additive neg_nonneg] one_le_inv'\n\n"}
{"name":"one_lt_inv'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na : α\n⊢ Iff (LT.lt 1 (Inv.inv a)) (LT.lt a 1)","decl":"alias one_lt_inv' := Left.one_lt_inv_iff\n\n"}
{"name":"neg_pos","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na : α\n⊢ Iff (LT.lt 0 (Neg.neg a)) (LT.lt a 0)","decl":"attribute [to_additive neg_pos] one_lt_inv'\n\n--  Most of the lemmas that are primed in this section appear in ordered_field.\n--  I (DT) did not try to minimise the assumptions.\n"}
{"name":"div_le_div_iff_right","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulRightMono α\na b c : α\n⊢ Iff (LE.le (HDiv.hDiv a c) (HDiv.hDiv b c)) (LE.le a b)","decl":"@[to_additive]\ntheorem div_le_div_iff_right (c : α) : a / c ≤ b / c ↔ a ≤ b := by\n  simpa only [div_eq_mul_inv] using mul_le_mul_iff_right _\n\n"}
{"name":"sub_le_sub_iff_right","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddRightMono α\na b c : α\n⊢ Iff (LE.le (HSub.hSub a c) (HSub.hSub b c)) (LE.le a b)","decl":"@[to_additive]\ntheorem div_le_div_iff_right (c : α) : a / c ≤ b / c ↔ a ≤ b := by\n  simpa only [div_eq_mul_inv] using mul_le_mul_iff_right _\n\n"}
{"name":"div_le_div_right'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulRightMono α\na b : α\nh : LE.le a b\nc : α\n⊢ LE.le (HDiv.hDiv a c) (HDiv.hDiv b c)","decl":"@[to_additive (attr := gcongr) sub_le_sub_right]\ntheorem div_le_div_right' (h : a ≤ b) (c : α) : a / c ≤ b / c :=\n  (div_le_div_iff_right c).2 h\n\n"}
{"name":"sub_le_sub_right","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddRightMono α\na b : α\nh : LE.le a b\nc : α\n⊢ LE.le (HSub.hSub a c) (HSub.hSub b c)","decl":"@[to_additive (attr := gcongr) sub_le_sub_right]\ntheorem div_le_div_right' (h : a ≤ b) (c : α) : a / c ≤ b / c :=\n  (div_le_div_iff_right c).2 h\n\n"}
{"name":"one_le_div'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulRightMono α\na b : α\n⊢ Iff (LE.le 1 (HDiv.hDiv a b)) (LE.le b a)","decl":"@[to_additive (attr := simp) sub_nonneg]\ntheorem one_le_div' : 1 ≤ a / b ↔ b ≤ a := by\n  rw [← mul_le_mul_iff_right b, one_mul, div_eq_mul_inv, inv_mul_cancel_right]\n\n"}
{"name":"sub_nonneg","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddRightMono α\na b : α\n⊢ Iff (LE.le 0 (HSub.hSub a b)) (LE.le b a)","decl":"@[to_additive (attr := simp) sub_nonneg]\ntheorem one_le_div' : 1 ≤ a / b ↔ b ≤ a := by\n  rw [← mul_le_mul_iff_right b, one_mul, div_eq_mul_inv, inv_mul_cancel_right]\n\n"}
{"name":"le_of_sub_nonneg","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddRightMono α\na b : α\na✝ : LE.le 0 (HSub.hSub a b)\n⊢ LE.le b a","decl":"alias ⟨le_of_sub_nonneg, sub_nonneg_of_le⟩ := sub_nonneg\n\n"}
{"name":"sub_nonneg_of_le","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddRightMono α\na b : α\na✝ : LE.le b a\n⊢ LE.le 0 (HSub.hSub a b)","decl":"alias ⟨le_of_sub_nonneg, sub_nonneg_of_le⟩ := sub_nonneg\n\n"}
{"name":"div_le_one'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulRightMono α\na b : α\n⊢ Iff (LE.le (HDiv.hDiv a b) 1) (LE.le a b)","decl":"@[to_additive sub_nonpos]\ntheorem div_le_one' : a / b ≤ 1 ↔ a ≤ b := by\n  rw [← mul_le_mul_iff_right b, one_mul, div_eq_mul_inv, inv_mul_cancel_right]\n\n"}
{"name":"sub_nonpos","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddRightMono α\na b : α\n⊢ Iff (LE.le (HSub.hSub a b) 0) (LE.le a b)","decl":"@[to_additive sub_nonpos]\ntheorem div_le_one' : a / b ≤ 1 ↔ a ≤ b := by\n  rw [← mul_le_mul_iff_right b, one_mul, div_eq_mul_inv, inv_mul_cancel_right]\n\n"}
{"name":"le_of_sub_nonpos","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddRightMono α\na b : α\na✝ : LE.le (HSub.hSub a b) 0\n⊢ LE.le a b","decl":"alias ⟨le_of_sub_nonpos, sub_nonpos_of_le⟩ := sub_nonpos\n\n"}
{"name":"sub_nonpos_of_le","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddRightMono α\na b : α\na✝ : LE.le a b\n⊢ LE.le (HSub.hSub a b) 0","decl":"alias ⟨le_of_sub_nonpos, sub_nonpos_of_le⟩ := sub_nonpos\n\n"}
{"name":"le_div_iff_mul_le","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulRightMono α\na b c : α\n⊢ Iff (LE.le a (HDiv.hDiv c b)) (LE.le (HMul.hMul a b) c)","decl":"@[to_additive]\ntheorem le_div_iff_mul_le : a ≤ c / b ↔ a * b ≤ c := by\n  rw [← mul_le_mul_iff_right b, div_eq_mul_inv, inv_mul_cancel_right]\n\n"}
{"name":"le_sub_iff_add_le","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddRightMono α\na b c : α\n⊢ Iff (LE.le a (HSub.hSub c b)) (LE.le (HAdd.hAdd a b) c)","decl":"@[to_additive]\ntheorem le_div_iff_mul_le : a ≤ c / b ↔ a * b ≤ c := by\n  rw [← mul_le_mul_iff_right b, div_eq_mul_inv, inv_mul_cancel_right]\n\n"}
{"name":"le_sub_right_of_add_le","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddRightMono α\na b c : α\na✝ : LE.le (HAdd.hAdd a b) c\n⊢ LE.le a (HSub.hSub c b)","decl":"alias ⟨add_le_of_le_sub_right, le_sub_right_of_add_le⟩ := le_sub_iff_add_le\n\n"}
{"name":"add_le_of_le_sub_right","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddRightMono α\na b c : α\na✝ : LE.le a (HSub.hSub c b)\n⊢ LE.le (HAdd.hAdd a b) c","decl":"alias ⟨add_le_of_le_sub_right, le_sub_right_of_add_le⟩ := le_sub_iff_add_le\n\n"}
{"name":"sub_le_iff_le_add","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddRightMono α\na b c : α\n⊢ Iff (LE.le (HSub.hSub a c) b) (LE.le a (HAdd.hAdd b c))","decl":"@[to_additive]\ntheorem div_le_iff_le_mul : a / c ≤ b ↔ a ≤ b * c := by\n  rw [← mul_le_mul_iff_right c, div_eq_mul_inv, inv_mul_cancel_right]\n\n-- Note: we intentionally don't have `@[simp]` for the additive version,\n-- since the LHS simplifies with `tsub_le_iff_right`\n"}
{"name":"div_le_iff_le_mul","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LE α\ninst✝ : MulRightMono α\na b c : α\n⊢ Iff (LE.le (HDiv.hDiv a c) b) (LE.le a (HMul.hMul b c))","decl":"@[to_additive]\ntheorem div_le_iff_le_mul : a / c ≤ b ↔ a ≤ b * c := by\n  rw [← mul_le_mul_iff_right c, div_eq_mul_inv, inv_mul_cancel_right]\n\n-- Note: we intentionally don't have `@[simp]` for the additive version,\n-- since the LHS simplifies with `tsub_le_iff_right`\n"}
{"name":"AddGroup.toOrderedSub","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝² : AddGroup α\ninst✝¹ : LE α\ninst✝ : AddRightMono α\n⊢ OrderedSub α","decl":"instance (priority := 100) AddGroup.toOrderedSub {α : Type*} [AddGroup α] [LE α]\n    [AddRightMono α] : OrderedSub α :=\n  ⟨fun _ _ _ => sub_le_iff_le_add⟩\n\n"}
{"name":"div_le_div_iff_left","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : Group α\ninst✝² : LE α\ninst✝¹ : MulLeftMono α\ninst✝ : MulRightMono α\nb c a : α\n⊢ Iff (LE.le (HDiv.hDiv a b) (HDiv.hDiv a c)) (LE.le c b)","decl":"@[to_additive]\ntheorem div_le_div_iff_left (a : α) : a / b ≤ a / c ↔ c ≤ b := by\n  rw [div_eq_mul_inv, div_eq_mul_inv, ← mul_le_mul_iff_left a⁻¹, inv_mul_cancel_left,\n    inv_mul_cancel_left, inv_le_inv_iff]\n\n"}
{"name":"sub_le_sub_iff_left","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : AddGroup α\ninst✝² : LE α\ninst✝¹ : AddLeftMono α\ninst✝ : AddRightMono α\nb c a : α\n⊢ Iff (LE.le (HSub.hSub a b) (HSub.hSub a c)) (LE.le c b)","decl":"@[to_additive]\ntheorem div_le_div_iff_left (a : α) : a / b ≤ a / c ↔ c ≤ b := by\n  rw [div_eq_mul_inv, div_eq_mul_inv, ← mul_le_mul_iff_left a⁻¹, inv_mul_cancel_left,\n    inv_mul_cancel_left, inv_le_inv_iff]\n\n"}
{"name":"div_le_div_left'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : Group α\ninst✝² : LE α\ninst✝¹ : MulLeftMono α\ninst✝ : MulRightMono α\na b : α\nh : LE.le a b\nc : α\n⊢ LE.le (HDiv.hDiv c b) (HDiv.hDiv c a)","decl":"@[to_additive (attr := gcongr) sub_le_sub_left]\ntheorem div_le_div_left' (h : a ≤ b) (c : α) : c / b ≤ c / a :=\n  (div_le_div_iff_left c).2 h\n\n"}
{"name":"sub_le_sub_left","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : AddGroup α\ninst✝² : LE α\ninst✝¹ : AddLeftMono α\ninst✝ : AddRightMono α\na b : α\nh : LE.le a b\nc : α\n⊢ LE.le (HSub.hSub c b) (HSub.hSub c a)","decl":"@[to_additive (attr := gcongr) sub_le_sub_left]\ntheorem div_le_div_left' (h : a ≤ b) (c : α) : c / b ≤ c / a :=\n  (div_le_div_iff_left c).2 h\n\n"}
{"name":"div_le_div_iff'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : CommGroup α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na b c d : α\n⊢ Iff (LE.le (HDiv.hDiv a b) (HDiv.hDiv c d)) (LE.le (HMul.hMul a d) (HMul.hMul c b))","decl":"/-- See also `div_le_div_iff` for a version that works for `LinearOrderedSemifield` with\nadditional assumptions. -/\n@[to_additive sub_le_sub_iff]\ntheorem div_le_div_iff' : a / b ≤ c / d ↔ a * d ≤ c * b := by\n  simpa only [div_eq_mul_inv] using mul_inv_le_mul_inv_iff'\n\n"}
{"name":"sub_le_sub_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na b c d : α\n⊢ Iff (LE.le (HSub.hSub a b) (HSub.hSub c d)) (LE.le (HAdd.hAdd a d) (HAdd.hAdd c b))","decl":"/-- See also `div_le_div_iff` for a version that works for `LinearOrderedSemifield` with\nadditional assumptions. -/\n@[to_additive sub_le_sub_iff]\ntheorem div_le_div_iff' : a / b ≤ c / d ↔ a * d ≤ c * b := by\n  simpa only [div_eq_mul_inv] using mul_inv_le_mul_inv_iff'\n\n"}
{"name":"le_sub_iff_add_le'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na b c : α\n⊢ Iff (LE.le b (HSub.hSub c a)) (LE.le (HAdd.hAdd a b) c)","decl":"@[to_additive]\ntheorem le_div_iff_mul_le' : b ≤ c / a ↔ a * b ≤ c := by rw [le_div_iff_mul_le, mul_comm]\n\n"}
{"name":"le_div_iff_mul_le'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : CommGroup α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na b c : α\n⊢ Iff (LE.le b (HDiv.hDiv c a)) (LE.le (HMul.hMul a b) c)","decl":"@[to_additive]\ntheorem le_div_iff_mul_le' : b ≤ c / a ↔ a * b ≤ c := by rw [le_div_iff_mul_le, mul_comm]\n\n"}
{"name":"le_sub_left_of_add_le","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na b c : α\na✝ : LE.le (HAdd.hAdd a b) c\n⊢ LE.le b (HSub.hSub c a)","decl":"alias ⟨add_le_of_le_sub_left, le_sub_left_of_add_le⟩ := le_sub_iff_add_le'\n\n"}
{"name":"add_le_of_le_sub_left","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na b c : α\na✝ : LE.le b (HSub.hSub c a)\n⊢ LE.le (HAdd.hAdd a b) c","decl":"alias ⟨add_le_of_le_sub_left, le_sub_left_of_add_le⟩ := le_sub_iff_add_le'\n\n"}
{"name":"div_le_iff_le_mul'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : CommGroup α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na b c : α\n⊢ Iff (LE.le (HDiv.hDiv a b) c) (LE.le a (HMul.hMul b c))","decl":"@[to_additive]\ntheorem div_le_iff_le_mul' : a / b ≤ c ↔ a ≤ b * c := by rw [div_le_iff_le_mul, mul_comm]\n\n"}
{"name":"sub_le_iff_le_add'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na b c : α\n⊢ Iff (LE.le (HSub.hSub a b) c) (LE.le a (HAdd.hAdd b c))","decl":"@[to_additive]\ntheorem div_le_iff_le_mul' : a / b ≤ c ↔ a ≤ b * c := by rw [div_le_iff_le_mul, mul_comm]\n\n"}
{"name":"le_add_of_sub_left_le","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na b c : α\na✝ : LE.le (HSub.hSub a b) c\n⊢ LE.le a (HAdd.hAdd b c)","decl":"alias ⟨le_add_of_sub_left_le, sub_left_le_of_le_add⟩ := sub_le_iff_le_add'\n\n"}
{"name":"sub_left_le_of_le_add","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na b c : α\na✝ : LE.le a (HAdd.hAdd b c)\n⊢ LE.le (HSub.hSub a b) c","decl":"alias ⟨le_add_of_sub_left_le, sub_left_le_of_le_add⟩ := sub_le_iff_le_add'\n\n"}
{"name":"neg_le_sub_iff_le_add","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na b c : α\n⊢ Iff (LE.le (Neg.neg b) (HSub.hSub a c)) (LE.le c (HAdd.hAdd a b))","decl":"@[to_additive (attr := simp)]\ntheorem inv_le_div_iff_le_mul : b⁻¹ ≤ a / c ↔ c ≤ a * b :=\n  le_div_iff_mul_le.trans inv_mul_le_iff_le_mul'\n\n"}
{"name":"inv_le_div_iff_le_mul","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : CommGroup α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na b c : α\n⊢ Iff (LE.le (Inv.inv b) (HDiv.hDiv a c)) (LE.le c (HMul.hMul a b))","decl":"@[to_additive (attr := simp)]\ntheorem inv_le_div_iff_le_mul : b⁻¹ ≤ a / c ↔ c ≤ a * b :=\n  le_div_iff_mul_le.trans inv_mul_le_iff_le_mul'\n\n"}
{"name":"inv_le_div_iff_le_mul'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : CommGroup α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na b c : α\n⊢ Iff (LE.le (Inv.inv a) (HDiv.hDiv b c)) (LE.le c (HMul.hMul a b))","decl":"@[to_additive]\ntheorem inv_le_div_iff_le_mul' : a⁻¹ ≤ b / c ↔ c ≤ a * b := by rw [inv_le_div_iff_le_mul, mul_comm]\n\n"}
{"name":"neg_le_sub_iff_le_add'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na b c : α\n⊢ Iff (LE.le (Neg.neg a) (HSub.hSub b c)) (LE.le c (HAdd.hAdd a b))","decl":"@[to_additive]\ntheorem inv_le_div_iff_le_mul' : a⁻¹ ≤ b / c ↔ c ≤ a * b := by rw [inv_le_div_iff_le_mul, mul_comm]\n\n"}
{"name":"sub_le_comm","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na b c : α\n⊢ Iff (LE.le (HSub.hSub a b) c) (LE.le (HSub.hSub a c) b)","decl":"@[to_additive]\ntheorem div_le_comm : a / b ≤ c ↔ a / c ≤ b :=\n  div_le_iff_le_mul'.trans div_le_iff_le_mul.symm\n\n"}
{"name":"div_le_comm","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : CommGroup α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na b c : α\n⊢ Iff (LE.le (HDiv.hDiv a b) c) (LE.le (HDiv.hDiv a c) b)","decl":"@[to_additive]\ntheorem div_le_comm : a / b ≤ c ↔ a / c ≤ b :=\n  div_le_iff_le_mul'.trans div_le_iff_le_mul.symm\n\n"}
{"name":"le_sub_comm","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LE α\ninst✝ : AddLeftMono α\na b c : α\n⊢ Iff (LE.le a (HSub.hSub b c)) (LE.le c (HSub.hSub b a))","decl":"@[to_additive]\ntheorem le_div_comm : a ≤ b / c ↔ c ≤ b / a :=\n  le_div_iff_mul_le'.trans le_div_iff_mul_le.symm\n\n"}
{"name":"le_div_comm","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : CommGroup α\ninst✝¹ : LE α\ninst✝ : MulLeftMono α\na b c : α\n⊢ Iff (LE.le a (HDiv.hDiv b c)) (LE.le c (HDiv.hDiv b a))","decl":"@[to_additive]\ntheorem le_div_comm : a ≤ b / c ↔ c ≤ b / a :=\n  le_div_iff_mul_le'.trans le_div_iff_mul_le.symm\n\n"}
{"name":"sub_le_sub","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : Preorder α\ninst✝ : AddLeftMono α\na b c d : α\nhab : LE.le a b\nhcd : LE.le c d\n⊢ LE.le (HSub.hSub a d) (HSub.hSub b c)","decl":"@[to_additive (attr := gcongr) sub_le_sub]\ntheorem div_le_div'' (hab : a ≤ b) (hcd : c ≤ d) : a / d ≤ b / c := by\n  rw [div_eq_mul_inv, div_eq_mul_inv, mul_comm b, mul_inv_le_inv_mul_iff, mul_comm]\n  exact mul_le_mul' hab hcd\n\n"}
{"name":"div_le_div''","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : CommGroup α\ninst✝¹ : Preorder α\ninst✝ : MulLeftMono α\na b c d : α\nhab : LE.le a b\nhcd : LE.le c d\n⊢ LE.le (HDiv.hDiv a d) (HDiv.hDiv b c)","decl":"@[to_additive (attr := gcongr) sub_le_sub]\ntheorem div_le_div'' (hab : a ≤ b) (hcd : c ≤ d) : a / d ≤ b / c := by\n  rw [div_eq_mul_inv, div_eq_mul_inv, mul_comm b, mul_inv_le_inv_mul_iff, mul_comm]\n  exact mul_le_mul' hab hcd\n\n"}
{"name":"sub_lt_sub_iff_right","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddRightStrictMono α\na b c : α\n⊢ Iff (LT.lt (HSub.hSub a c) (HSub.hSub b c)) (LT.lt a b)","decl":"@[to_additive (attr := simp)]\ntheorem div_lt_div_iff_right (c : α) : a / c < b / c ↔ a < b := by\n  simpa only [div_eq_mul_inv] using mul_lt_mul_iff_right _\n\n"}
{"name":"div_lt_div_iff_right","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulRightStrictMono α\na b c : α\n⊢ Iff (LT.lt (HDiv.hDiv a c) (HDiv.hDiv b c)) (LT.lt a b)","decl":"@[to_additive (attr := simp)]\ntheorem div_lt_div_iff_right (c : α) : a / c < b / c ↔ a < b := by\n  simpa only [div_eq_mul_inv] using mul_lt_mul_iff_right _\n\n"}
{"name":"sub_lt_sub_right","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddRightStrictMono α\na b : α\nh : LT.lt a b\nc : α\n⊢ LT.lt (HSub.hSub a c) (HSub.hSub b c)","decl":"@[to_additive (attr := gcongr) sub_lt_sub_right]\ntheorem div_lt_div_right' (h : a < b) (c : α) : a / c < b / c :=\n  (div_lt_div_iff_right c).2 h\n\n"}
{"name":"div_lt_div_right'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulRightStrictMono α\na b : α\nh : LT.lt a b\nc : α\n⊢ LT.lt (HDiv.hDiv a c) (HDiv.hDiv b c)","decl":"@[to_additive (attr := gcongr) sub_lt_sub_right]\ntheorem div_lt_div_right' (h : a < b) (c : α) : a / c < b / c :=\n  (div_lt_div_iff_right c).2 h\n\n"}
{"name":"sub_pos","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddRightStrictMono α\na b : α\n⊢ Iff (LT.lt 0 (HSub.hSub a b)) (LT.lt b a)","decl":"@[to_additive (attr := simp) sub_pos]\ntheorem one_lt_div' : 1 < a / b ↔ b < a := by\n  rw [← mul_lt_mul_iff_right b, one_mul, div_eq_mul_inv, inv_mul_cancel_right]\n\n"}
{"name":"one_lt_div'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulRightStrictMono α\na b : α\n⊢ Iff (LT.lt 1 (HDiv.hDiv a b)) (LT.lt b a)","decl":"@[to_additive (attr := simp) sub_pos]\ntheorem one_lt_div' : 1 < a / b ↔ b < a := by\n  rw [← mul_lt_mul_iff_right b, one_mul, div_eq_mul_inv, inv_mul_cancel_right]\n\n"}
{"name":"lt_of_sub_pos","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddRightStrictMono α\na b : α\na✝ : LT.lt 0 (HSub.hSub a b)\n⊢ LT.lt b a","decl":"alias ⟨lt_of_sub_pos, sub_pos_of_lt⟩ := sub_pos\n\n"}
{"name":"sub_pos_of_lt","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddRightStrictMono α\na b : α\na✝ : LT.lt b a\n⊢ LT.lt 0 (HSub.hSub a b)","decl":"alias ⟨lt_of_sub_pos, sub_pos_of_lt⟩ := sub_pos\n\n"}
{"name":"div_lt_one'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulRightStrictMono α\na b : α\n⊢ Iff (LT.lt (HDiv.hDiv a b) 1) (LT.lt a b)","decl":"@[to_additive (attr := simp) sub_neg \"For `a - -b = a + b`, see `sub_neg_eq_add`.\"]\ntheorem div_lt_one' : a / b < 1 ↔ a < b := by\n  rw [← mul_lt_mul_iff_right b, one_mul, div_eq_mul_inv, inv_mul_cancel_right]\n\n"}
{"name":"sub_neg","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddRightStrictMono α\na b : α\n⊢ Iff (LT.lt (HSub.hSub a b) 0) (LT.lt a b)","decl":"@[to_additive (attr := simp) sub_neg \"For `a - -b = a + b`, see `sub_neg_eq_add`.\"]\ntheorem div_lt_one' : a / b < 1 ↔ a < b := by\n  rw [← mul_lt_mul_iff_right b, one_mul, div_eq_mul_inv, inv_mul_cancel_right]\n\n"}
{"name":"sub_neg_of_lt","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddRightStrictMono α\na b : α\na✝ : LT.lt a b\n⊢ LT.lt (HSub.hSub a b) 0","decl":"alias ⟨lt_of_sub_neg, sub_neg_of_lt⟩ := sub_neg\n\n"}
{"name":"lt_of_sub_neg","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddRightStrictMono α\na b : α\na✝ : LT.lt (HSub.hSub a b) 0\n⊢ LT.lt a b","decl":"alias ⟨lt_of_sub_neg, sub_neg_of_lt⟩ := sub_neg\n\n"}
{"name":"sub_lt_zero","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddRightStrictMono α\na b : α\n⊢ Iff (LT.lt (HSub.hSub a b) 0) (LT.lt a b)","decl":"alias sub_lt_zero := sub_neg\n\n"}
{"name":"lt_sub_iff_add_lt","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddRightStrictMono α\na b c : α\n⊢ Iff (LT.lt a (HSub.hSub c b)) (LT.lt (HAdd.hAdd a b) c)","decl":"@[to_additive]\ntheorem lt_div_iff_mul_lt : a < c / b ↔ a * b < c := by\n  rw [← mul_lt_mul_iff_right b, div_eq_mul_inv, inv_mul_cancel_right]\n\n"}
{"name":"lt_div_iff_mul_lt","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulRightStrictMono α\na b c : α\n⊢ Iff (LT.lt a (HDiv.hDiv c b)) (LT.lt (HMul.hMul a b) c)","decl":"@[to_additive]\ntheorem lt_div_iff_mul_lt : a < c / b ↔ a * b < c := by\n  rw [← mul_lt_mul_iff_right b, div_eq_mul_inv, inv_mul_cancel_right]\n\n"}
{"name":"add_lt_of_lt_sub_right","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddRightStrictMono α\na b c : α\na✝ : LT.lt a (HSub.hSub c b)\n⊢ LT.lt (HAdd.hAdd a b) c","decl":"alias ⟨add_lt_of_lt_sub_right, lt_sub_right_of_add_lt⟩ := lt_sub_iff_add_lt\n\n"}
{"name":"lt_sub_right_of_add_lt","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddRightStrictMono α\na b c : α\na✝ : LT.lt (HAdd.hAdd a b) c\n⊢ LT.lt a (HSub.hSub c b)","decl":"alias ⟨add_lt_of_lt_sub_right, lt_sub_right_of_add_lt⟩ := lt_sub_iff_add_lt\n\n"}
{"name":"sub_lt_iff_lt_add","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddRightStrictMono α\na b c : α\n⊢ Iff (LT.lt (HSub.hSub a c) b) (LT.lt a (HAdd.hAdd b c))","decl":"@[to_additive]\ntheorem div_lt_iff_lt_mul : a / c < b ↔ a < b * c := by\n  rw [← mul_lt_mul_iff_right c, div_eq_mul_inv, inv_mul_cancel_right]\n\n"}
{"name":"div_lt_iff_lt_mul","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LT α\ninst✝ : MulRightStrictMono α\na b c : α\n⊢ Iff (LT.lt (HDiv.hDiv a c) b) (LT.lt a (HMul.hMul b c))","decl":"@[to_additive]\ntheorem div_lt_iff_lt_mul : a / c < b ↔ a < b * c := by\n  rw [← mul_lt_mul_iff_right c, div_eq_mul_inv, inv_mul_cancel_right]\n\n"}
{"name":"sub_right_lt_of_lt_add","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddRightStrictMono α\na b c : α\na✝ : LT.lt a (HAdd.hAdd b c)\n⊢ LT.lt (HSub.hSub a c) b","decl":"alias ⟨lt_add_of_sub_right_lt, sub_right_lt_of_lt_add⟩ := sub_lt_iff_lt_add\n\n"}
{"name":"lt_add_of_sub_right_lt","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LT α\ninst✝ : AddRightStrictMono α\na b c : α\na✝ : LT.lt (HSub.hSub a c) b\n⊢ LT.lt a (HAdd.hAdd b c)","decl":"alias ⟨lt_add_of_sub_right_lt, sub_right_lt_of_lt_add⟩ := sub_lt_iff_lt_add\n\n"}
{"name":"sub_lt_sub_iff_left","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : AddGroup α\ninst✝² : LT α\ninst✝¹ : AddLeftStrictMono α\ninst✝ : AddRightStrictMono α\nb c a : α\n⊢ Iff (LT.lt (HSub.hSub a b) (HSub.hSub a c)) (LT.lt c b)","decl":"@[to_additive (attr := simp)]\ntheorem div_lt_div_iff_left (a : α) : a / b < a / c ↔ c < b := by\n  rw [div_eq_mul_inv, div_eq_mul_inv, ← mul_lt_mul_iff_left a⁻¹, inv_mul_cancel_left,\n    inv_mul_cancel_left, inv_lt_inv_iff]\n\n"}
{"name":"div_lt_div_iff_left","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : Group α\ninst✝² : LT α\ninst✝¹ : MulLeftStrictMono α\ninst✝ : MulRightStrictMono α\nb c a : α\n⊢ Iff (LT.lt (HDiv.hDiv a b) (HDiv.hDiv a c)) (LT.lt c b)","decl":"@[to_additive (attr := simp)]\ntheorem div_lt_div_iff_left (a : α) : a / b < a / c ↔ c < b := by\n  rw [div_eq_mul_inv, div_eq_mul_inv, ← mul_lt_mul_iff_left a⁻¹, inv_mul_cancel_left,\n    inv_mul_cancel_left, inv_lt_inv_iff]\n\n"}
{"name":"inv_lt_div_iff_lt_mul","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : Group α\ninst✝² : LT α\ninst✝¹ : MulLeftStrictMono α\ninst✝ : MulRightStrictMono α\na b c : α\n⊢ Iff (LT.lt (Inv.inv a) (HDiv.hDiv b c)) (LT.lt c (HMul.hMul a b))","decl":"@[to_additive (attr := simp)]\ntheorem inv_lt_div_iff_lt_mul : a⁻¹ < b / c ↔ c < a * b := by\n  rw [div_eq_mul_inv, lt_mul_inv_iff_mul_lt, inv_mul_lt_iff_lt_mul]\n\n"}
{"name":"neg_lt_sub_iff_lt_add","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : AddGroup α\ninst✝² : LT α\ninst✝¹ : AddLeftStrictMono α\ninst✝ : AddRightStrictMono α\na b c : α\n⊢ Iff (LT.lt (Neg.neg a) (HSub.hSub b c)) (LT.lt c (HAdd.hAdd a b))","decl":"@[to_additive (attr := simp)]\ntheorem inv_lt_div_iff_lt_mul : a⁻¹ < b / c ↔ c < a * b := by\n  rw [div_eq_mul_inv, lt_mul_inv_iff_mul_lt, inv_mul_lt_iff_lt_mul]\n\n"}
{"name":"div_lt_div_left'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : Group α\ninst✝² : LT α\ninst✝¹ : MulLeftStrictMono α\ninst✝ : MulRightStrictMono α\na b : α\nh : LT.lt a b\nc : α\n⊢ LT.lt (HDiv.hDiv c b) (HDiv.hDiv c a)","decl":"@[to_additive (attr := gcongr) sub_lt_sub_left]\ntheorem div_lt_div_left' (h : a < b) (c : α) : c / b < c / a :=\n  (div_lt_div_iff_left c).2 h\n\n"}
{"name":"sub_lt_sub_left","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : AddGroup α\ninst✝² : LT α\ninst✝¹ : AddLeftStrictMono α\ninst✝ : AddRightStrictMono α\na b : α\nh : LT.lt a b\nc : α\n⊢ LT.lt (HSub.hSub c b) (HSub.hSub c a)","decl":"@[to_additive (attr := gcongr) sub_lt_sub_left]\ntheorem div_lt_div_left' (h : a < b) (c : α) : c / b < c / a :=\n  (div_lt_div_iff_left c).2 h\n\n"}
{"name":"sub_lt_sub_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na b c d : α\n⊢ Iff (LT.lt (HSub.hSub a b) (HSub.hSub c d)) (LT.lt (HAdd.hAdd a d) (HAdd.hAdd c b))","decl":"@[to_additive sub_lt_sub_iff]\ntheorem div_lt_div_iff' : a / b < c / d ↔ a * d < c * b := by\n  simpa only [div_eq_mul_inv] using mul_inv_lt_mul_inv_iff'\n\n"}
{"name":"div_lt_div_iff'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : CommGroup α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na b c d : α\n⊢ Iff (LT.lt (HDiv.hDiv a b) (HDiv.hDiv c d)) (LT.lt (HMul.hMul a d) (HMul.hMul c b))","decl":"@[to_additive sub_lt_sub_iff]\ntheorem div_lt_div_iff' : a / b < c / d ↔ a * d < c * b := by\n  simpa only [div_eq_mul_inv] using mul_inv_lt_mul_inv_iff'\n\n"}
{"name":"lt_sub_iff_add_lt'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na b c : α\n⊢ Iff (LT.lt b (HSub.hSub c a)) (LT.lt (HAdd.hAdd a b) c)","decl":"@[to_additive]\ntheorem lt_div_iff_mul_lt' : b < c / a ↔ a * b < c := by rw [lt_div_iff_mul_lt, mul_comm]\n\n"}
{"name":"lt_div_iff_mul_lt'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : CommGroup α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na b c : α\n⊢ Iff (LT.lt b (HDiv.hDiv c a)) (LT.lt (HMul.hMul a b) c)","decl":"@[to_additive]\ntheorem lt_div_iff_mul_lt' : b < c / a ↔ a * b < c := by rw [lt_div_iff_mul_lt, mul_comm]\n\n"}
{"name":"lt_sub_left_of_add_lt","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na b c : α\na✝ : LT.lt (HAdd.hAdd a b) c\n⊢ LT.lt b (HSub.hSub c a)","decl":"alias ⟨add_lt_of_lt_sub_left, lt_sub_left_of_add_lt⟩ := lt_sub_iff_add_lt'\n\n"}
{"name":"add_lt_of_lt_sub_left","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na b c : α\na✝ : LT.lt b (HSub.hSub c a)\n⊢ LT.lt (HAdd.hAdd a b) c","decl":"alias ⟨add_lt_of_lt_sub_left, lt_sub_left_of_add_lt⟩ := lt_sub_iff_add_lt'\n\n"}
{"name":"div_lt_iff_lt_mul'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : CommGroup α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na b c : α\n⊢ Iff (LT.lt (HDiv.hDiv a b) c) (LT.lt a (HMul.hMul b c))","decl":"@[to_additive]\ntheorem div_lt_iff_lt_mul' : a / b < c ↔ a < b * c := by rw [div_lt_iff_lt_mul, mul_comm]\n\n"}
{"name":"sub_lt_iff_lt_add'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na b c : α\n⊢ Iff (LT.lt (HSub.hSub a b) c) (LT.lt a (HAdd.hAdd b c))","decl":"@[to_additive]\ntheorem div_lt_iff_lt_mul' : a / b < c ↔ a < b * c := by rw [div_lt_iff_lt_mul, mul_comm]\n\n"}
{"name":"sub_left_lt_of_lt_add","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na b c : α\na✝ : LT.lt a (HAdd.hAdd b c)\n⊢ LT.lt (HSub.hSub a b) c","decl":"alias ⟨lt_add_of_sub_left_lt, sub_left_lt_of_lt_add⟩ := sub_lt_iff_lt_add'\n\n"}
{"name":"lt_add_of_sub_left_lt","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na b c : α\na✝ : LT.lt (HSub.hSub a b) c\n⊢ LT.lt a (HAdd.hAdd b c)","decl":"alias ⟨lt_add_of_sub_left_lt, sub_left_lt_of_lt_add⟩ := sub_lt_iff_lt_add'\n\n"}
{"name":"neg_lt_sub_iff_lt_add'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na b c : α\n⊢ Iff (LT.lt (Neg.neg b) (HSub.hSub a c)) (LT.lt c (HAdd.hAdd a b))","decl":"@[to_additive]\ntheorem inv_lt_div_iff_lt_mul' : b⁻¹ < a / c ↔ c < a * b :=\n  lt_div_iff_mul_lt.trans inv_mul_lt_iff_lt_mul'\n\n"}
{"name":"inv_lt_div_iff_lt_mul'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : CommGroup α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na b c : α\n⊢ Iff (LT.lt (Inv.inv b) (HDiv.hDiv a c)) (LT.lt c (HMul.hMul a b))","decl":"@[to_additive]\ntheorem inv_lt_div_iff_lt_mul' : b⁻¹ < a / c ↔ c < a * b :=\n  lt_div_iff_mul_lt.trans inv_mul_lt_iff_lt_mul'\n\n"}
{"name":"sub_lt_comm","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na b c : α\n⊢ Iff (LT.lt (HSub.hSub a b) c) (LT.lt (HSub.hSub a c) b)","decl":"@[to_additive]\ntheorem div_lt_comm : a / b < c ↔ a / c < b :=\n  div_lt_iff_lt_mul'.trans div_lt_iff_lt_mul.symm\n\n"}
{"name":"div_lt_comm","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : CommGroup α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na b c : α\n⊢ Iff (LT.lt (HDiv.hDiv a b) c) (LT.lt (HDiv.hDiv a c) b)","decl":"@[to_additive]\ntheorem div_lt_comm : a / b < c ↔ a / c < b :=\n  div_lt_iff_lt_mul'.trans div_lt_iff_lt_mul.symm\n\n"}
{"name":"lt_div_comm","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : CommGroup α\ninst✝¹ : LT α\ninst✝ : MulLeftStrictMono α\na b c : α\n⊢ Iff (LT.lt a (HDiv.hDiv b c)) (LT.lt c (HDiv.hDiv b a))","decl":"@[to_additive]\ntheorem lt_div_comm : a < b / c ↔ c < b / a :=\n  lt_div_iff_mul_lt'.trans lt_div_iff_mul_lt.symm\n\n"}
{"name":"lt_sub_comm","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LT α\ninst✝ : AddLeftStrictMono α\na b c : α\n⊢ Iff (LT.lt a (HSub.hSub b c)) (LT.lt c (HSub.hSub b a))","decl":"@[to_additive]\ntheorem lt_div_comm : a < b / c ↔ c < b / a :=\n  lt_div_iff_mul_lt'.trans lt_div_iff_mul_lt.symm\n\n"}
{"name":"div_lt_div''","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : CommGroup α\ninst✝¹ : Preorder α\ninst✝ : MulLeftStrictMono α\na b c d : α\nhab : LT.lt a b\nhcd : LT.lt c d\n⊢ LT.lt (HDiv.hDiv a d) (HDiv.hDiv b c)","decl":"@[to_additive (attr := gcongr) sub_lt_sub]\ntheorem div_lt_div'' (hab : a < b) (hcd : c < d) : a / d < b / c := by\n  rw [div_eq_mul_inv, div_eq_mul_inv, mul_comm b, mul_inv_lt_inv_mul_iff, mul_comm]\n  exact mul_lt_mul_of_lt_of_lt hab hcd\n\n"}
{"name":"sub_lt_sub","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : Preorder α\ninst✝ : AddLeftStrictMono α\na b c d : α\nhab : LT.lt a b\nhcd : LT.lt c d\n⊢ LT.lt (HSub.hSub a d) (HSub.hSub b c)","decl":"@[to_additive (attr := gcongr) sub_lt_sub]\ntheorem div_lt_div'' (hab : a < b) (hcd : c < d) : a / d < b / c := by\n  rw [div_eq_mul_inv, div_eq_mul_inv, mul_comm b, mul_inv_lt_inv_mul_iff, mul_comm]\n  exact mul_lt_mul_of_lt_of_lt hab hcd\n\n"}
{"name":"lt_or_lt_of_div_lt_div","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : CommGroup α\ninst✝¹ : LinearOrder α\ninst✝ : MulLeftMono α\na b c d : α\na✝ : LT.lt (HDiv.hDiv a d) (HDiv.hDiv b c)\n⊢ Or (LT.lt a b) (LT.lt c d)","decl":"@[to_additive] lemma lt_or_lt_of_div_lt_div : a / d < b / c → a < b ∨ c < d := by\n  contrapose!; exact fun h ↦ div_le_div'' h.1 h.2\n\n"}
{"name":"lt_or_lt_of_sub_lt_sub","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddCommGroup α\ninst✝¹ : LinearOrder α\ninst✝ : AddLeftMono α\na b c d : α\na✝ : LT.lt (HSub.hSub a d) (HSub.hSub b c)\n⊢ Or (LT.lt a b) (LT.lt c d)","decl":"@[to_additive] lemma lt_or_lt_of_div_lt_div : a / d < b / c → a < b ∨ c < d := by\n  contrapose!; exact fun h ↦ div_le_div'' h.1 h.2\n\n"}
{"name":"cmp_div_one'","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LinearOrder α\ninst✝ : MulRightMono α\na b : α\n⊢ Eq (cmp (HDiv.hDiv a b) 1) (cmp a b)","decl":"@[to_additive (attr := simp) cmp_sub_zero]\ntheorem cmp_div_one' [MulRightMono α] (a b : α) :\n    cmp (a / b) 1 = cmp a b := by rw [← cmp_mul_right' _ _ b, one_mul, div_mul_cancel]\n\n"}
{"name":"cmp_sub_zero","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LinearOrder α\ninst✝ : AddRightMono α\na b : α\n⊢ Eq (cmp (HSub.hSub a b) 0) (cmp a b)","decl":"@[to_additive (attr := simp) cmp_sub_zero]\ntheorem cmp_div_one' [MulRightMono α] (a b : α) :\n    cmp (a / b) 1 = cmp a b := by rw [← cmp_mul_right' _ _ b, one_mul, div_mul_cancel]\n\n"}
{"name":"le_of_forall_pos_lt_add","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LinearOrder α\ninst✝ : AddLeftMono α\na b : α\nh : ∀ (ε : α), LT.lt 0 ε → LT.lt a (HAdd.hAdd b ε)\n⊢ LE.le a b","decl":"@[to_additive]\ntheorem le_of_forall_one_lt_lt_mul (h : ∀ ε : α, 1 < ε → a < b * ε) : a ≤ b :=\n  le_of_not_lt fun h₁ => lt_irrefl a (by simpa using h _ (lt_inv_mul_iff_lt.mpr h₁))\n\n"}
{"name":"le_of_forall_one_lt_lt_mul","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LinearOrder α\ninst✝ : MulLeftMono α\na b : α\nh : ∀ (ε : α), LT.lt 1 ε → LT.lt a (HMul.hMul b ε)\n⊢ LE.le a b","decl":"@[to_additive]\ntheorem le_of_forall_one_lt_lt_mul (h : ∀ ε : α, 1 < ε → a < b * ε) : a ≤ b :=\n  le_of_not_lt fun h₁ => lt_irrefl a (by simpa using h _ (lt_inv_mul_iff_lt.mpr h₁))\n\n"}
{"name":"le_iff_forall_one_lt_lt_mul","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : Group α\ninst✝¹ : LinearOrder α\ninst✝ : MulLeftMono α\na b : α\n⊢ Iff (LE.le a b) (∀ (ε : α), LT.lt 1 ε → LT.lt a (HMul.hMul b ε))","decl":"@[to_additive]\ntheorem le_iff_forall_one_lt_lt_mul : a ≤ b ↔ ∀ ε, 1 < ε → a < b * ε :=\n  ⟨fun h _ => lt_mul_of_le_of_one_lt h, le_of_forall_one_lt_lt_mul⟩\n\n/-  I (DT) introduced this lemma to prove (the additive version `sub_le_sub_flip` of)\n`div_le_div_flip` below.  Now I wonder what is the point of either of these lemmas... -/\n"}
{"name":"le_iff_forall_pos_lt_add","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝² : AddGroup α\ninst✝¹ : LinearOrder α\ninst✝ : AddLeftMono α\na b : α\n⊢ Iff (LE.le a b) (∀ (ε : α), LT.lt 0 ε → LT.lt a (HAdd.hAdd b ε))","decl":"@[to_additive]\ntheorem le_iff_forall_one_lt_lt_mul : a ≤ b ↔ ∀ ε, 1 < ε → a < b * ε :=\n  ⟨fun h _ => lt_mul_of_le_of_one_lt h, le_of_forall_one_lt_lt_mul⟩\n\n/-  I (DT) introduced this lemma to prove (the additive version `sub_le_sub_flip` of)\n`div_le_div_flip` below.  Now I wonder what is the point of either of these lemmas... -/\n"}
{"name":"sub_le_neg_add_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : AddGroup α\ninst✝² : LinearOrder α\ninst✝¹ : AddLeftMono α\na b : α\ninst✝ : AddRightMono α\n⊢ Iff (LE.le (HSub.hSub a b) (HAdd.hAdd (Neg.neg a) b)) (LE.le a b)","decl":"@[to_additive]\ntheorem div_le_inv_mul_iff [MulRightMono α] :\n    a / b ≤ a⁻¹ * b ↔ a ≤ b := by\n  rw [div_eq_mul_inv, mul_inv_le_inv_mul_iff]\n  exact\n    ⟨fun h => not_lt.mp fun k => not_lt.mpr h (mul_lt_mul_of_lt_of_lt k k), fun h =>\n      mul_le_mul' h h⟩\n\n-- What is the point of this lemma?  See comment about `div_le_inv_mul_iff` above.\n-- Note: we intentionally don't have `@[simp]` for the additive version,\n-- since the LHS simplifies with `tsub_le_iff_right`\n"}
{"name":"div_le_inv_mul_iff","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\ninst✝³ : Group α\ninst✝² : LinearOrder α\ninst✝¹ : MulLeftMono α\na b : α\ninst✝ : MulRightMono α\n⊢ Iff (LE.le (HDiv.hDiv a b) (HMul.hMul (Inv.inv a) b)) (LE.le a b)","decl":"@[to_additive]\ntheorem div_le_inv_mul_iff [MulRightMono α] :\n    a / b ≤ a⁻¹ * b ↔ a ≤ b := by\n  rw [div_eq_mul_inv, mul_inv_le_inv_mul_iff]\n  exact\n    ⟨fun h => not_lt.mp fun k => not_lt.mpr h (mul_lt_mul_of_lt_of_lt k k), fun h =>\n      mul_le_mul' h h⟩\n\n-- What is the point of this lemma?  See comment about `div_le_inv_mul_iff` above.\n-- Note: we intentionally don't have `@[simp]` for the additive version,\n-- since the LHS simplifies with `tsub_le_iff_right`\n"}
{"name":"div_le_div_flip","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝² : CommGroup α\ninst✝¹ : LinearOrder α\ninst✝ : MulLeftMono α\na b : α\n⊢ Iff (LE.le (HDiv.hDiv a b) (HDiv.hDiv b a)) (LE.le a b)","decl":"@[to_additive]\ntheorem div_le_div_flip {α : Type*} [CommGroup α] [LinearOrder α]\n    [MulLeftMono α] {a b : α} : a / b ≤ b / a ↔ a ≤ b := by\n  rw [div_eq_mul_inv b, mul_comm]\n  exact div_le_inv_mul_iff\n\n"}
{"name":"sub_le_sub_flip","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u_1\ninst✝² : AddCommGroup α\ninst✝¹ : LinearOrder α\ninst✝ : AddLeftMono α\na b : α\n⊢ Iff (LE.le (HSub.hSub a b) (HSub.hSub b a)) (LE.le a b)","decl":"@[to_additive]\ntheorem div_le_div_flip {α : Type*} [CommGroup α] [LinearOrder α]\n    [MulLeftMono α] {a b : α} : a / b ≤ b / a ↔ a ≤ b := by\n  rw [div_eq_mul_inv b, mul_comm]\n  exact div_le_inv_mul_iff\n\n"}
{"name":"Monotone.neg","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\nβ : Type u_1\ninst✝⁴ : AddGroup α\ninst✝³ : Preorder α\ninst✝² : AddLeftMono α\ninst✝¹ : AddRightMono α\ninst✝ : Preorder β\nf : β → α\nhf : Monotone f\n⊢ Antitone fun x => Neg.neg (f x)","decl":"@[to_additive]\ntheorem Monotone.inv (hf : Monotone f) : Antitone fun x => (f x)⁻¹ := fun _ _ hxy =>\n  inv_le_inv_iff.2 (hf hxy)\n\n"}
{"name":"Monotone.inv","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\nβ : Type u_1\ninst✝⁴ : Group α\ninst✝³ : Preorder α\ninst✝² : MulLeftMono α\ninst✝¹ : MulRightMono α\ninst✝ : Preorder β\nf : β → α\nhf : Monotone f\n⊢ Antitone fun x => Inv.inv (f x)","decl":"@[to_additive]\ntheorem Monotone.inv (hf : Monotone f) : Antitone fun x => (f x)⁻¹ := fun _ _ hxy =>\n  inv_le_inv_iff.2 (hf hxy)\n\n"}
{"name":"Antitone.neg","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\nβ : Type u_1\ninst✝⁴ : AddGroup α\ninst✝³ : Preorder α\ninst✝² : AddLeftMono α\ninst✝¹ : AddRightMono α\ninst✝ : Preorder β\nf : β → α\nhf : Antitone f\n⊢ Monotone fun x => Neg.neg (f x)","decl":"@[to_additive]\ntheorem Antitone.inv (hf : Antitone f) : Monotone fun x => (f x)⁻¹ := fun _ _ hxy =>\n  inv_le_inv_iff.2 (hf hxy)\n\n"}
{"name":"Antitone.inv","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\nβ : Type u_1\ninst✝⁴ : Group α\ninst✝³ : Preorder α\ninst✝² : MulLeftMono α\ninst✝¹ : MulRightMono α\ninst✝ : Preorder β\nf : β → α\nhf : Antitone f\n⊢ Monotone fun x => Inv.inv (f x)","decl":"@[to_additive]\ntheorem Antitone.inv (hf : Antitone f) : Monotone fun x => (f x)⁻¹ := fun _ _ hxy =>\n  inv_le_inv_iff.2 (hf hxy)\n\n"}
{"name":"MonotoneOn.inv","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\nβ : Type u_1\ninst✝⁴ : Group α\ninst✝³ : Preorder α\ninst✝² : MulLeftMono α\ninst✝¹ : MulRightMono α\ninst✝ : Preorder β\nf : β → α\ns : Set β\nhf : MonotoneOn f s\n⊢ AntitoneOn (fun x => Inv.inv (f x)) s","decl":"@[to_additive]\ntheorem MonotoneOn.inv (hf : MonotoneOn f s) : AntitoneOn (fun x => (f x)⁻¹) s :=\n  fun _ hx _ hy hxy => inv_le_inv_iff.2 (hf hx hy hxy)\n\n"}
{"name":"MonotoneOn.neg","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\nβ : Type u_1\ninst✝⁴ : AddGroup α\ninst✝³ : Preorder α\ninst✝² : AddLeftMono α\ninst✝¹ : AddRightMono α\ninst✝ : Preorder β\nf : β → α\ns : Set β\nhf : MonotoneOn f s\n⊢ AntitoneOn (fun x => Neg.neg (f x)) s","decl":"@[to_additive]\ntheorem MonotoneOn.inv (hf : MonotoneOn f s) : AntitoneOn (fun x => (f x)⁻¹) s :=\n  fun _ hx _ hy hxy => inv_le_inv_iff.2 (hf hx hy hxy)\n\n"}
{"name":"AntitoneOn.inv","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\nβ : Type u_1\ninst✝⁴ : Group α\ninst✝³ : Preorder α\ninst✝² : MulLeftMono α\ninst✝¹ : MulRightMono α\ninst✝ : Preorder β\nf : β → α\ns : Set β\nhf : AntitoneOn f s\n⊢ MonotoneOn (fun x => Inv.inv (f x)) s","decl":"@[to_additive]\ntheorem AntitoneOn.inv (hf : AntitoneOn f s) : MonotoneOn (fun x => (f x)⁻¹) s :=\n  fun _ hx _ hy hxy => inv_le_inv_iff.2 (hf hx hy hxy)\n\n"}
{"name":"AntitoneOn.neg","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\nβ : Type u_1\ninst✝⁴ : AddGroup α\ninst✝³ : Preorder α\ninst✝² : AddLeftMono α\ninst✝¹ : AddRightMono α\ninst✝ : Preorder β\nf : β → α\ns : Set β\nhf : AntitoneOn f s\n⊢ MonotoneOn (fun x => Neg.neg (f x)) s","decl":"@[to_additive]\ntheorem AntitoneOn.inv (hf : AntitoneOn f s) : MonotoneOn (fun x => (f x)⁻¹) s :=\n  fun _ hx _ hy hxy => inv_le_inv_iff.2 (hf hx hy hxy)\n\n"}
{"name":"StrictMono.neg","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\nβ : Type u_1\ninst✝⁴ : AddGroup α\ninst✝³ : Preorder α\ninst✝² : AddLeftStrictMono α\ninst✝¹ : AddRightStrictMono α\ninst✝ : Preorder β\nf : β → α\nhf : StrictMono f\n⊢ StrictAnti fun x => Neg.neg (f x)","decl":"@[to_additive]\ntheorem StrictMono.inv (hf : StrictMono f) : StrictAnti fun x => (f x)⁻¹ := fun _ _ hxy =>\n  inv_lt_inv_iff.2 (hf hxy)\n\n"}
{"name":"StrictMono.inv","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\nβ : Type u_1\ninst✝⁴ : Group α\ninst✝³ : Preorder α\ninst✝² : MulLeftStrictMono α\ninst✝¹ : MulRightStrictMono α\ninst✝ : Preorder β\nf : β → α\nhf : StrictMono f\n⊢ StrictAnti fun x => Inv.inv (f x)","decl":"@[to_additive]\ntheorem StrictMono.inv (hf : StrictMono f) : StrictAnti fun x => (f x)⁻¹ := fun _ _ hxy =>\n  inv_lt_inv_iff.2 (hf hxy)\n\n"}
{"name":"StrictAnti.inv","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\nβ : Type u_1\ninst✝⁴ : Group α\ninst✝³ : Preorder α\ninst✝² : MulLeftStrictMono α\ninst✝¹ : MulRightStrictMono α\ninst✝ : Preorder β\nf : β → α\nhf : StrictAnti f\n⊢ StrictMono fun x => Inv.inv (f x)","decl":"@[to_additive]\ntheorem StrictAnti.inv (hf : StrictAnti f) : StrictMono fun x => (f x)⁻¹ := fun _ _ hxy =>\n  inv_lt_inv_iff.2 (hf hxy)\n\n"}
{"name":"StrictAnti.neg","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\nβ : Type u_1\ninst✝⁴ : AddGroup α\ninst✝³ : Preorder α\ninst✝² : AddLeftStrictMono α\ninst✝¹ : AddRightStrictMono α\ninst✝ : Preorder β\nf : β → α\nhf : StrictAnti f\n⊢ StrictMono fun x => Neg.neg (f x)","decl":"@[to_additive]\ntheorem StrictAnti.inv (hf : StrictAnti f) : StrictMono fun x => (f x)⁻¹ := fun _ _ hxy =>\n  inv_lt_inv_iff.2 (hf hxy)\n\n"}
{"name":"StrictMonoOn.neg","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\nβ : Type u_1\ninst✝⁴ : AddGroup α\ninst✝³ : Preorder α\ninst✝² : AddLeftStrictMono α\ninst✝¹ : AddRightStrictMono α\ninst✝ : Preorder β\nf : β → α\ns : Set β\nhf : StrictMonoOn f s\n⊢ StrictAntiOn (fun x => Neg.neg (f x)) s","decl":"@[to_additive]\ntheorem StrictMonoOn.inv (hf : StrictMonoOn f s) : StrictAntiOn (fun x => (f x)⁻¹) s :=\n  fun _ hx _ hy hxy => inv_lt_inv_iff.2 (hf hx hy hxy)\n\n"}
{"name":"StrictMonoOn.inv","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\nβ : Type u_1\ninst✝⁴ : Group α\ninst✝³ : Preorder α\ninst✝² : MulLeftStrictMono α\ninst✝¹ : MulRightStrictMono α\ninst✝ : Preorder β\nf : β → α\ns : Set β\nhf : StrictMonoOn f s\n⊢ StrictAntiOn (fun x => Inv.inv (f x)) s","decl":"@[to_additive]\ntheorem StrictMonoOn.inv (hf : StrictMonoOn f s) : StrictAntiOn (fun x => (f x)⁻¹) s :=\n  fun _ hx _ hy hxy => inv_lt_inv_iff.2 (hf hx hy hxy)\n\n"}
{"name":"StrictAntiOn.neg","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\nβ : Type u_1\ninst✝⁴ : AddGroup α\ninst✝³ : Preorder α\ninst✝² : AddLeftStrictMono α\ninst✝¹ : AddRightStrictMono α\ninst✝ : Preorder β\nf : β → α\ns : Set β\nhf : StrictAntiOn f s\n⊢ StrictMonoOn (fun x => Neg.neg (f x)) s","decl":"@[to_additive]\ntheorem StrictAntiOn.inv (hf : StrictAntiOn f s) : StrictMonoOn (fun x => (f x)⁻¹) s :=\n  fun _ hx _ hy hxy => inv_lt_inv_iff.2 (hf hx hy hxy)\n\n"}
{"name":"StrictAntiOn.inv","module":"Mathlib.Algebra.Order.Group.Unbundled.Basic","initialProofState":"α : Type u\nβ : Type u_1\ninst✝⁴ : Group α\ninst✝³ : Preorder α\ninst✝² : MulLeftStrictMono α\ninst✝¹ : MulRightStrictMono α\ninst✝ : Preorder β\nf : β → α\ns : Set β\nhf : StrictAntiOn f s\n⊢ StrictMonoOn (fun x => Inv.inv (f x)) s","decl":"@[to_additive]\ntheorem StrictAntiOn.inv (hf : StrictAntiOn f s) : StrictMonoOn (fun x => (f x)⁻¹) s :=\n  fun _ hx _ hy hxy => inv_lt_inv_iff.2 (hf hx hy hxy)\n\n"}
