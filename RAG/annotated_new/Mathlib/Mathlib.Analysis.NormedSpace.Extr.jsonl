{"name":"IsMaxFilter.norm_add_sameRay","module":"Mathlib.Analysis.NormedSpace.Extr","initialProofState":"α : Type u_1\nE : Type u_3\ninst✝¹ : SeminormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : α → E\nl : Filter α\nc : α\ny : E\nh : IsMaxFilter (Function.comp Norm.norm f) l c\nhy : SameRay Real (f c) y\n⊢ IsMaxFilter (fun x => Norm.norm (HAdd.hAdd (f x) y)) l c","decl":"/-- If `f : α → E` is a function such that `norm ∘ f` has a maximum along a filter `l` at a point\n`c` and `y` is a vector on the same ray as `f c`, then the function `fun x => ‖f x + y‖` has\na maximum along `l` at `c`. -/\ntheorem IsMaxFilter.norm_add_sameRay (h : IsMaxFilter (norm ∘ f) l c) (hy : SameRay ℝ (f c) y) :\n    IsMaxFilter (fun x => ‖f x + y‖) l c :=\n  h.mono fun x hx =>\n    calc\n      ‖f x + y‖ ≤ ‖f x‖ + ‖y‖ := norm_add_le _ _\n      _ ≤ ‖f c‖ + ‖y‖ := add_le_add_right hx _\n      _ = ‖f c + y‖ := hy.norm_add.symm\n\n"}
{"name":"IsMaxFilter.norm_add_self","module":"Mathlib.Analysis.NormedSpace.Extr","initialProofState":"α : Type u_1\nE : Type u_3\ninst✝¹ : SeminormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : α → E\nl : Filter α\nc : α\nh : IsMaxFilter (Function.comp Norm.norm f) l c\n⊢ IsMaxFilter (fun x => Norm.norm (HAdd.hAdd (f x) (f c))) l c","decl":"/-- If `f : α → E` is a function such that `norm ∘ f` has a maximum along a filter `l` at a point\n`c`, then the function `fun x => ‖f x + f c‖` has a maximum along `l` at `c`. -/\ntheorem IsMaxFilter.norm_add_self (h : IsMaxFilter (norm ∘ f) l c) :\n    IsMaxFilter (fun x => ‖f x + f c‖) l c :=\n  IsMaxFilter.norm_add_sameRay h SameRay.rfl\n\n"}
{"name":"IsMaxOn.norm_add_sameRay","module":"Mathlib.Analysis.NormedSpace.Extr","initialProofState":"α : Type u_1\nE : Type u_3\ninst✝¹ : SeminormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : α → E\ns : Set α\nc : α\ny : E\nh : IsMaxOn (Function.comp Norm.norm f) s c\nhy : SameRay Real (f c) y\n⊢ IsMaxOn (fun x => Norm.norm (HAdd.hAdd (f x) y)) s c","decl":"/-- If `f : α → E` is a function such that `norm ∘ f` has a maximum on a set `s` at a point `c` and\n`y` is a vector on the same ray as `f c`, then the function `fun x => ‖f x + y‖` has a maximum\non `s` at `c`. -/\ntheorem IsMaxOn.norm_add_sameRay (h : IsMaxOn (norm ∘ f) s c) (hy : SameRay ℝ (f c) y) :\n    IsMaxOn (fun x => ‖f x + y‖) s c :=\n  IsMaxFilter.norm_add_sameRay h hy\n\n"}
{"name":"IsMaxOn.norm_add_self","module":"Mathlib.Analysis.NormedSpace.Extr","initialProofState":"α : Type u_1\nE : Type u_3\ninst✝¹ : SeminormedAddCommGroup E\ninst✝ : NormedSpace Real E\nf : α → E\ns : Set α\nc : α\nh : IsMaxOn (Function.comp Norm.norm f) s c\n⊢ IsMaxOn (fun x => Norm.norm (HAdd.hAdd (f x) (f c))) s c","decl":"/-- If `f : α → E` is a function such that `norm ∘ f` has a maximum on a set `s` at a point `c`,\nthen the function `fun x => ‖f x + f c‖` has a maximum on `s` at `c`. -/\ntheorem IsMaxOn.norm_add_self (h : IsMaxOn (norm ∘ f) s c) : IsMaxOn (fun x => ‖f x + f c‖) s c :=\n  IsMaxFilter.norm_add_self h\n\n"}
{"name":"IsLocalMaxOn.norm_add_sameRay","module":"Mathlib.Analysis.NormedSpace.Extr","initialProofState":"X : Type u_2\nE : Type u_3\ninst✝² : SeminormedAddCommGroup E\ninst✝¹ : NormedSpace Real E\ninst✝ : TopologicalSpace X\nf : X → E\ns : Set X\nc : X\ny : E\nh : IsLocalMaxOn (Function.comp Norm.norm f) s c\nhy : SameRay Real (f c) y\n⊢ IsLocalMaxOn (fun x => Norm.norm (HAdd.hAdd (f x) y)) s c","decl":"/-- If `f : α → E` is a function such that `norm ∘ f` has a local maximum on a set `s` at a point\n`c` and `y` is a vector on the same ray as `f c`, then the function `fun x => ‖f x + y‖` has a local\nmaximum on `s` at `c`. -/\ntheorem IsLocalMaxOn.norm_add_sameRay (h : IsLocalMaxOn (norm ∘ f) s c) (hy : SameRay ℝ (f c) y) :\n    IsLocalMaxOn (fun x => ‖f x + y‖) s c :=\n  IsMaxFilter.norm_add_sameRay h hy\n\n"}
{"name":"IsLocalMaxOn.norm_add_self","module":"Mathlib.Analysis.NormedSpace.Extr","initialProofState":"X : Type u_2\nE : Type u_3\ninst✝² : SeminormedAddCommGroup E\ninst✝¹ : NormedSpace Real E\ninst✝ : TopologicalSpace X\nf : X → E\ns : Set X\nc : X\nh : IsLocalMaxOn (Function.comp Norm.norm f) s c\n⊢ IsLocalMaxOn (fun x => Norm.norm (HAdd.hAdd (f x) (f c))) s c","decl":"/-- If `f : α → E` is a function such that `norm ∘ f` has a local maximum on a set `s` at a point\n`c`, then the function `fun x => ‖f x + f c‖` has a local maximum on `s` at `c`. -/\ntheorem IsLocalMaxOn.norm_add_self (h : IsLocalMaxOn (norm ∘ f) s c) :\n    IsLocalMaxOn (fun x => ‖f x + f c‖) s c :=\n  IsMaxFilter.norm_add_self h\n\n"}
{"name":"IsLocalMax.norm_add_sameRay","module":"Mathlib.Analysis.NormedSpace.Extr","initialProofState":"X : Type u_2\nE : Type u_3\ninst✝² : SeminormedAddCommGroup E\ninst✝¹ : NormedSpace Real E\ninst✝ : TopologicalSpace X\nf : X → E\nc : X\ny : E\nh : IsLocalMax (Function.comp Norm.norm f) c\nhy : SameRay Real (f c) y\n⊢ IsLocalMax (fun x => Norm.norm (HAdd.hAdd (f x) y)) c","decl":"/-- If `f : α → E` is a function such that `norm ∘ f` has a local maximum at a point `c` and `y` is\na vector on the same ray as `f c`, then the function `fun x => ‖f x + y‖` has a local maximum\nat `c`. -/\ntheorem IsLocalMax.norm_add_sameRay (h : IsLocalMax (norm ∘ f) c) (hy : SameRay ℝ (f c) y) :\n    IsLocalMax (fun x => ‖f x + y‖) c :=\n  IsMaxFilter.norm_add_sameRay h hy\n\n"}
{"name":"IsLocalMax.norm_add_self","module":"Mathlib.Analysis.NormedSpace.Extr","initialProofState":"X : Type u_2\nE : Type u_3\ninst✝² : SeminormedAddCommGroup E\ninst✝¹ : NormedSpace Real E\ninst✝ : TopologicalSpace X\nf : X → E\nc : X\nh : IsLocalMax (Function.comp Norm.norm f) c\n⊢ IsLocalMax (fun x => Norm.norm (HAdd.hAdd (f x) (f c))) c","decl":"/-- If `f : α → E` is a function such that `norm ∘ f` has a local maximum at a point `c`, then the\nfunction `fun x => ‖f x + f c‖` has a local maximum at `c`. -/\ntheorem IsLocalMax.norm_add_self (h : IsLocalMax (norm ∘ f) c) :\n    IsLocalMax (fun x => ‖f x + f c‖) c :=\n  IsMaxFilter.norm_add_self h\n"}
