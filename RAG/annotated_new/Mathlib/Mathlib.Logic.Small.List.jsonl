{"name":"smallVector","module":"Mathlib.Logic.Small.List","initialProofState":"α : Type v\nn : Nat\ninst✝ : Small.{u, v} α\n⊢ Small.{u, v} (List.Vector α n)","decl":"instance smallVector {α : Type v} {n : ℕ} [Small.{u} α] : Small.{u} (List.Vector α n) :=\n  small_of_injective (Equiv.vectorEquivFin α n).injective\n\n"}
{"name":"smallList","module":"Mathlib.Logic.Small.List","initialProofState":"α : Type v\ninst✝ : Small.{u, v} α\n⊢ Small.{u, v} (List α)","decl":"instance smallList {α : Type v} [Small.{u} α] : Small.{u} (List α) := by\n  let e : (Σn, List.Vector α n) ≃ List α := Equiv.sigmaFiberEquiv List.length\n  exact small_of_surjective e.surjective\n"}
