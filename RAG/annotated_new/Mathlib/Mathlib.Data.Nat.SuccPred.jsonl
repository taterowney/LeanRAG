{"name":"Nat.succ_eq_succ","module":"Mathlib.Data.Nat.SuccPred","initialProofState":"⊢ Eq Order.succ Nat.succ","decl":"@[simp]\ntheorem succ_eq_succ : Order.succ = succ :=\n  rfl\n\n"}
{"name":"Nat.pred_eq_pred","module":"Mathlib.Data.Nat.SuccPred","initialProofState":"⊢ Eq Order.pred Nat.pred","decl":"@[simp]\ntheorem pred_eq_pred : Order.pred = pred :=\n  rfl\n\n"}
{"name":"Nat.succ_iterate","module":"Mathlib.Data.Nat.SuccPred","initialProofState":"a n : Nat\n⊢ Eq (Nat.iterate Nat.succ n a) (HAdd.hAdd a n)","decl":"protected theorem succ_iterate (a : ℕ) : ∀ n, succ^[n] a = a + n :=\n  Order.succ_iterate a\n\n"}
{"name":"Nat.pred_iterate","module":"Mathlib.Data.Nat.SuccPred","initialProofState":"a n : Nat\n⊢ Eq (Nat.iterate Nat.pred n a) (HSub.hSub a n)","decl":"protected theorem pred_iterate (a : ℕ) : ∀ n, pred^[n] a = a - n\n  | 0 => rfl\n  | n + 1 => by\n    rw [Function.iterate_succ', sub_succ]\n    exact congr_arg _ (Nat.pred_iterate a n)\n\n"}
{"name":"Nat.le_succ_iff_eq_or_le","module":"Mathlib.Data.Nat.SuccPred","initialProofState":"m n : Nat\n⊢ Iff (LE.le m n.succ) (Or (Eq m n.succ) (LE.le m n))","decl":"lemma le_succ_iff_eq_or_le : m ≤ n.succ ↔ m = n.succ ∨ m ≤ n := Order.le_succ_iff_eq_or_le\n\n"}
{"name":"Nat.instIsSuccArchimedean","module":"Mathlib.Data.Nat.SuccPred","initialProofState":"⊢ IsSuccArchimedean Nat","decl":"instance : IsSuccArchimedean ℕ :=\n  ⟨fun {a} {b} h => ⟨b - a, by rw [succ_eq_succ, Nat.succ_iterate, add_tsub_cancel_of_le h]⟩⟩\n\n"}
{"name":"Nat.instIsPredArchimedean","module":"Mathlib.Data.Nat.SuccPred","initialProofState":"⊢ IsPredArchimedean Nat","decl":"instance : IsPredArchimedean ℕ :=\n  ⟨fun {a} {b} h => ⟨b - a, by rw [pred_eq_pred, Nat.pred_iterate, tsub_tsub_cancel_of_le h]⟩⟩\n\n"}
{"name":"Nat.forall_ne_zero_iff","module":"Mathlib.Data.Nat.SuccPred","initialProofState":"P : Nat → Prop\n⊢ Iff (∀ (i : Nat), Ne i 0 → P i) (∀ (i : Nat), P (HAdd.hAdd i 1))","decl":"lemma forall_ne_zero_iff (P : ℕ → Prop) :\n    (∀ i, i ≠ 0 → P i) ↔ (∀ i, P (i + 1)) :=\n  SuccOrder.forall_ne_bot_iff P\n\n"}
{"name":"Nat.covBy_iff_succ_eq","module":"Mathlib.Data.Nat.SuccPred","initialProofState":"m n : Nat\n⊢ Iff (CovBy m n) (Eq (HAdd.hAdd m 1) n)","decl":"@[deprecated Order.covBy_iff_add_one_eq (since := \"2024-09-04\")]\nprotected theorem covBy_iff_succ_eq {m n : ℕ} : m ⋖ n ↔ m + 1 = n :=\n  covBy_iff_add_one_eq\n\n"}
{"name":"Fin.coe_covBy_iff","module":"Mathlib.Data.Nat.SuccPred","initialProofState":"n : Nat\na b : Fin n\n⊢ Iff (CovBy ↑a ↑b) (CovBy a b)","decl":"@[simp, norm_cast]\ntheorem Fin.coe_covBy_iff {n : ℕ} {a b : Fin n} : (a : ℕ) ⋖ b ↔ a ⋖ b :=\n  and_congr_right' ⟨fun h _c hc => h hc, fun h c ha hb => @h ⟨c, hb.trans b.prop⟩ ha hb⟩\n\n"}
{"name":"CovBy.coe_fin","module":"Mathlib.Data.Nat.SuccPred","initialProofState":"n : Nat\na b : Fin n\na✝ : CovBy a b\n⊢ CovBy ↑a ↑b","decl":"alias ⟨_, CovBy.coe_fin⟩ := Fin.coe_covBy_iff\n"}
