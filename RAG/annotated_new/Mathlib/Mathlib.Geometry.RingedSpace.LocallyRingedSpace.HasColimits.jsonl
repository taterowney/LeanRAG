{"name":"AlgebraicGeometry.SheafedSpace.isColimit_exists_rep","module":"Mathlib.Geometry.RingedSpace.LocallyRingedSpace.HasColimits","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Limits.HasLimits C\nJ : Type v\ninst✝ : CategoryTheory.Category.{v, v} J\nF : CategoryTheory.Functor J (AlgebraicGeometry.SheafedSpace C)\nc : CategoryTheory.Limits.Cocone F\nhc : CategoryTheory.Limits.IsColimit c\nx : ↑↑c.pt.toPresheafedSpace\n⊢ Exists fun i => Exists fun y => Eq ((c.ι.app i).base y) x","decl":"theorem isColimit_exists_rep {c : Cocone F} (hc : IsColimit c) (x : c.pt) :\n    ∃ (i : J) (y : F.obj i), (c.ι.app i).base y = x :=\n  Concrete.isColimit_exists_rep (F ⋙ forget C) (isColimitOfPreserves (forget C) hc) x\n\n-- Porting note: argument `C` of colimit need to be made explicit, odd\n"}
{"name":"AlgebraicGeometry.SheafedSpace.colimit_exists_rep","module":"Mathlib.Geometry.RingedSpace.LocallyRingedSpace.HasColimits","initialProofState":"C : Type u\ninst✝² : CategoryTheory.Category.{v, u} C\ninst✝¹ : CategoryTheory.Limits.HasLimits C\nJ : Type v\ninst✝ : CategoryTheory.Category.{v, v} J\nF : CategoryTheory.Functor J (AlgebraicGeometry.SheafedSpace C)\nx : ↑↑(CategoryTheory.Limits.colimit F).toPresheafedSpace\n⊢ Exists fun i => Exists fun y => Eq ((CategoryTheory.Limits.colimit.ι F i).base y) x","decl":"theorem colimit_exists_rep (x : colimit (C := SheafedSpace C) F) :\n    ∃ (i : J) (y : F.obj i), (colimit.ι F i).base y = x :=\n  Concrete.isColimit_exists_rep (F ⋙ SheafedSpace.forget C)\n    (isColimitOfPreserves (SheafedSpace.forget _) (colimit.isColimit F)) x\n\n"}
{"name":"AlgebraicGeometry.SheafedSpace.instEpiTopCatBaseπ","module":"Mathlib.Geometry.RingedSpace.LocallyRingedSpace.HasColimits","initialProofState":"C : Type u\ninst✝¹ : CategoryTheory.Category.{v, u} C\ninst✝ : CategoryTheory.Limits.HasLimits C\nX Y : AlgebraicGeometry.SheafedSpace C\nf g : Quiver.Hom X Y\n⊢ CategoryTheory.Epi (CategoryTheory.Limits.coequalizer.π f g).base","decl":"instance {X Y : SheafedSpace C} (f g : X ⟶ Y) : Epi (coequalizer.π f g).base := by\n  rw [← show _ = (coequalizer.π f g).base from\n      ι_comp_coequalizerComparison f g (SheafedSpace.forget C),\n      ← PreservesCoequalizer.iso_hom]\n  apply epi_comp\n\n"}
{"name":"AlgebraicGeometry.LocallyRingedSpace.instHasCoproducts","module":"Mathlib.Geometry.RingedSpace.LocallyRingedSpace.HasColimits","initialProofState":"⊢ CategoryTheory.Limits.HasCoproducts AlgebraicGeometry.LocallyRingedSpace","decl":"instance : HasCoproducts.{u} LocallyRingedSpace.{u} := fun _ =>\n  ⟨fun F => ⟨⟨⟨_, coproductCofanIsColimit F⟩⟩⟩⟩\n\n"}
{"name":"AlgebraicGeometry.LocallyRingedSpace.instPreservesColimitsOfShapeSheafedSpaceCommRingCatDiscreteForgetToSheafedSpace","module":"Mathlib.Geometry.RingedSpace.LocallyRingedSpace.HasColimits","initialProofState":"J : Type u\n⊢ CategoryTheory.Limits.PreservesColimitsOfShape (CategoryTheory.Discrete J) AlgebraicGeometry.LocallyRingedSpace.forgetToSheafedSpace","decl":"noncomputable instance (J : Type _) :\n    PreservesColimitsOfShape (Discrete.{u} J) forgetToSheafedSpace.{u} :=\n  ⟨fun {G} =>\n    preservesColimit_of_preserves_colimit_cocone (coproductCofanIsColimit G)\n      ((colimit.isColimit (C := SheafedSpace.{u+1, u, u} CommRingCatMax.{u, u}) _).ofIsoColimit\n        (Cocones.ext (Iso.refl _) fun _ => Category.comp_id _))⟩\n\n"}
{"name":"AlgebraicGeometry.LocallyRingedSpace.HasCoequalizer.coequalizer_π_app_isLocalHom","module":"Mathlib.Geometry.RingedSpace.LocallyRingedSpace.HasColimits","initialProofState":"X Y : AlgebraicGeometry.LocallyRingedSpace\nf g : Quiver.Hom X Y\nU : TopologicalSpace.Opens ↑↑(CategoryTheory.Limits.coequalizer (AlgebraicGeometry.LocallyRingedSpace.Hom.toShHom f) (AlgebraicGeometry.LocallyRingedSpace.Hom.toShHom g)).toPresheafedSpace\n⊢ IsLocalHom (CommRingCat.Hom.hom ((CategoryTheory.Limits.coequalizer.π (AlgebraicGeometry.LocallyRingedSpace.Hom.toShHom f) (AlgebraicGeometry.LocallyRingedSpace.Hom.toShHom g)).c.app { unop := U }))","decl":"@[instance]\ntheorem coequalizer_π_app_isLocalHom\n    (U : TopologicalSpace.Opens (coequalizer f.toShHom g.toShHom).carrier) :\n    IsLocalHom ((coequalizer.π f.toShHom g.toShHom :).c.app (op U)).hom := by\n  have := ι_comp_coequalizerComparison f.toShHom g.toShHom SheafedSpace.forgetToPresheafedSpace\n  rw [← PreservesCoequalizer.iso_hom] at this\n  erw [SheafedSpace.congr_app this.symm (op U)]\n  rw [PresheafedSpace.comp_c_app, ← PresheafedSpace.colimitPresheafObjIsoComponentwiseLimit_hom_π]\n  -- Porting note (https://github.com/leanprover-community/mathlib4/issues/10754): this instance has to be manually added\n  haveI : IsIso (PreservesCoequalizer.iso\n      SheafedSpace.forgetToPresheafedSpace f.toShHom g.toShHom).hom.c :=\n    PresheafedSpace.c_isIso_of_iso _\n  -- Had to add this instance too.\n  have := CommRingCat.equalizer_ι_is_local_ring_hom' (PresheafedSpace.componentwiseDiagram _\n        ((Opens.map\n              (PreservesCoequalizer.iso SheafedSpace.forgetToPresheafedSpace (Hom.toShHom f)\n                    (Hom.toShHom g)).hom.base).obj\n          (unop (op U))))\n  infer_instance\n\n"}
{"name":"AlgebraicGeometry.LocallyRingedSpace.HasCoequalizer.coequalizer_π_app_isLocalRingHom","module":"Mathlib.Geometry.RingedSpace.LocallyRingedSpace.HasColimits","initialProofState":"X Y : AlgebraicGeometry.LocallyRingedSpace\nf g : Quiver.Hom X Y\nU : TopologicalSpace.Opens ↑↑(CategoryTheory.Limits.coequalizer (AlgebraicGeometry.LocallyRingedSpace.Hom.toShHom f) (AlgebraicGeometry.LocallyRingedSpace.Hom.toShHom g)).toPresheafedSpace\n⊢ IsLocalHom (CommRingCat.Hom.hom ((CategoryTheory.Limits.coequalizer.π (AlgebraicGeometry.LocallyRingedSpace.Hom.toShHom f) (AlgebraicGeometry.LocallyRingedSpace.Hom.toShHom g)).c.app { unop := U }))","decl":"@[deprecated (since := \"2024-10-10\")]\nalias coequalizer_π_app_isLocalRingHom := coequalizer_π_app_isLocalHom\n\n"}
{"name":"AlgebraicGeometry.LocallyRingedSpace.HasCoequalizer.imageBasicOpen_image_preimage","module":"Mathlib.Geometry.RingedSpace.LocallyRingedSpace.HasColimits","initialProofState":"X Y : AlgebraicGeometry.LocallyRingedSpace\nf g : Quiver.Hom X Y\nU : TopologicalSpace.Opens ↑↑(CategoryTheory.Limits.coequalizer (AlgebraicGeometry.LocallyRingedSpace.Hom.toShHom f) (AlgebraicGeometry.LocallyRingedSpace.Hom.toShHom g)).toPresheafedSpace\ns : ↑((CategoryTheory.Limits.coequalizer (AlgebraicGeometry.LocallyRingedSpace.Hom.toShHom f) (AlgebraicGeometry.LocallyRingedSpace.Hom.toShHom g)).presheaf.obj { unop := U })\n⊢ Eq (Set.preimage (⇑(CategoryTheory.Limits.coequalizer.π (AlgebraicGeometry.LocallyRingedSpace.Hom.toShHom f) (AlgebraicGeometry.LocallyRingedSpace.Hom.toShHom g)).base) (Set.image (⇑(CategoryTheory.Limits.coequalizer.π (AlgebraicGeometry.LocallyRingedSpace.Hom.toShHom f) (AlgebraicGeometry.LocallyRingedSpace.Hom.toShHom g)).base) (AlgebraicGeometry.LocallyRingedSpace.HasCoequalizer.imageBasicOpen f g U s).carrier)) (AlgebraicGeometry.LocallyRingedSpace.HasCoequalizer.imageBasicOpen f g U s).carrier","decl":"theorem imageBasicOpen_image_preimage :\n    (coequalizer.π f.toShHom g.toShHom).base ⁻¹' ((coequalizer.π f.toShHom g.toShHom).base ''\n      (imageBasicOpen f g U s).1) = (imageBasicOpen f g U s).1 := by\n  fapply Types.coequalizer_preimage_image_eq_of_preimage_eq f.base\n    -- Porting note: Type of `f.base` and `g.base` needs to be explicit\n    (g.base : X.carrier.1 ⟶ Y.carrier.1)\n  · ext\n    simp_rw [types_comp_apply, ← TopCat.comp_app, ← PresheafedSpace.comp_base]\n    congr 2\n    exact coequalizer.condition f.toShHom g.toShHom\n  · apply isColimitCoforkMapOfIsColimit (forget TopCat)\n    apply isColimitCoforkMapOfIsColimit (SheafedSpace.forget _)\n    exact coequalizerIsCoequalizer f.toShHom g.toShHom\n  · suffices\n      (TopologicalSpace.Opens.map f.base).obj (imageBasicOpen f g U s) =\n        (TopologicalSpace.Opens.map g.base).obj (imageBasicOpen f g U s)\n      by injection this\n    delta imageBasicOpen\n    rw [preimage_basicOpen f, preimage_basicOpen g]\n    dsimp only [Functor.op, unop_op]\n    -- Porting note (https://github.com/leanprover-community/mathlib4/issues/11224): change `rw` to `erw`\n    erw [← CommRingCat.comp_apply, ← SheafedSpace.comp_c_app', ← CommRingCat.comp_apply,\n      ← SheafedSpace.comp_c_app',\n      SheafedSpace.congr_app (coequalizer.condition f.toShHom g.toShHom),\n      CommRingCat.comp_apply, X.toRingedSpace.basicOpen_res]\n    apply inf_eq_right.mpr\n    refine (RingedSpace.basicOpen_le _ _).trans ?_\n    rw [coequalizer.condition f.toShHom g.toShHom]\n\n"}
{"name":"AlgebraicGeometry.LocallyRingedSpace.HasCoequalizer.imageBasicOpen_image_open","module":"Mathlib.Geometry.RingedSpace.LocallyRingedSpace.HasColimits","initialProofState":"X Y : AlgebraicGeometry.LocallyRingedSpace\nf g : Quiver.Hom X Y\nU : TopologicalSpace.Opens ↑↑(CategoryTheory.Limits.coequalizer (AlgebraicGeometry.LocallyRingedSpace.Hom.toShHom f) (AlgebraicGeometry.LocallyRingedSpace.Hom.toShHom g)).toPresheafedSpace\ns : ↑((CategoryTheory.Limits.coequalizer (AlgebraicGeometry.LocallyRingedSpace.Hom.toShHom f) (AlgebraicGeometry.LocallyRingedSpace.Hom.toShHom g)).presheaf.obj { unop := U })\n⊢ IsOpen (Set.image (⇑(CategoryTheory.Limits.coequalizer.π (AlgebraicGeometry.LocallyRingedSpace.Hom.toShHom f) (AlgebraicGeometry.LocallyRingedSpace.Hom.toShHom g)).base) (AlgebraicGeometry.LocallyRingedSpace.HasCoequalizer.imageBasicOpen f g U s).carrier)","decl":"theorem imageBasicOpen_image_open :\n    IsOpen ((coequalizer.π f.toShHom g.toShHom).base '' (imageBasicOpen f g U s).1) := by\n  rw [← (TopCat.homeoOfIso (PreservesCoequalizer.iso (SheafedSpace.forget _) f.toShHom\n    g.toShHom)).isOpen_preimage, TopCat.coequalizer_isOpen_iff, ← Set.preimage_comp]\n  erw [← TopCat.coe_comp]\n  rw [PreservesCoequalizer.iso_hom, ι_comp_coequalizerComparison]\n  dsimp only [SheafedSpace.forget]\n  -- Porting note (https://github.com/leanprover-community/mathlib4/issues/11224): change `rw` to `erw`\n  erw [imageBasicOpen_image_preimage]\n  exact (imageBasicOpen f g U s).2\n\n"}
{"name":"AlgebraicGeometry.LocallyRingedSpace.HasCoequalizer.coequalizer_π_stalk_isLocalHom","module":"Mathlib.Geometry.RingedSpace.LocallyRingedSpace.HasColimits","initialProofState":"X Y : AlgebraicGeometry.LocallyRingedSpace\nf g : Quiver.Hom X Y\nx : ↑Y.toTopCat\n⊢ IsLocalHom (CommRingCat.Hom.hom (AlgebraicGeometry.PresheafedSpace.Hom.stalkMap (CategoryTheory.Limits.coequalizer.π (AlgebraicGeometry.LocallyRingedSpace.Hom.toShHom f) (AlgebraicGeometry.LocallyRingedSpace.Hom.toShHom g)) x))","decl":"@[instance]\ntheorem coequalizer_π_stalk_isLocalHom (x : Y) :\n    IsLocalHom ((coequalizer.π f.toShHom g.toShHom :).stalkMap x).hom := by\n  constructor\n  rintro a ha\n  rcases TopCat.Presheaf.germ_exist _ _ a with ⟨U, hU, s, rfl⟩\n  rw [← CommRingCat.forget_map_apply, forget_map_eq_coe,\n    PresheafedSpace.stalkMap_germ_apply\n      (coequalizer.π (C := SheafedSpace _) f.toShHom g.toShHom) U _ hU] at ha\n  rw [coe_toHasForget_instFunLike]\n  let V := imageBasicOpen f g U s\n  have hV : (coequalizer.π f.toShHom g.toShHom).base ⁻¹'\n      ((coequalizer.π f.toShHom g.toShHom).base '' V.1) = V.1 :=\n    imageBasicOpen_image_preimage f g U s\n  have hV' : V = ⟨(coequalizer.π f.toShHom g.toShHom).base ⁻¹'\n      ((coequalizer.π f.toShHom g.toShHom).base '' V.1), hV.symm ▸ V.2⟩ :=\n    SetLike.ext' hV.symm\n  have V_open : IsOpen ((coequalizer.π f.toShHom g.toShHom).base '' V.1) :=\n    imageBasicOpen_image_open f g U s\n  have VleU : ⟨(coequalizer.π f.toShHom g.toShHom).base '' V.1, V_open⟩ ≤ U :=\n    Set.image_subset_iff.mpr (Y.toRingedSpace.basicOpen_le _)\n  have hxV : x ∈ V := ⟨hU, ha⟩\n  rw [← CommRingCat.germ_res_apply (coequalizer f.toShHom g.toShHom).presheaf (homOfLE VleU) _\n      (@Set.mem_image_of_mem _ _ (coequalizer.π f.toShHom g.toShHom).base x V.1 hxV) s]\n  apply RingHom.isUnit_map\n  rw [← isUnit_map_iff ((coequalizer.π f.toShHom g.toShHom :).c.app _).hom,\n    ← CommRingCat.comp_apply, NatTrans.naturality, CommRingCat.comp_apply,\n    ← isUnit_map_iff (Y.presheaf.map (eqToHom hV').op).hom]\n  -- Porting note (https://github.com/leanprover-community/mathlib4/issues/11224): change `rw` to `erw`\n  erw [← CommRingCat.comp_apply, ← CommRingCat.comp_apply, ← Y.presheaf.map_comp]\n  convert @RingedSpace.isUnit_res_basicOpen Y.toRingedSpace (unop _)\n      (((coequalizer.π f.toShHom g.toShHom).c.app (op U)) s)\n\n"}
{"name":"AlgebraicGeometry.LocallyRingedSpace.HasCoequalizer.coequalizer_π_stalk_isLocalRingHom","module":"Mathlib.Geometry.RingedSpace.LocallyRingedSpace.HasColimits","initialProofState":"X Y : AlgebraicGeometry.LocallyRingedSpace\nf g : Quiver.Hom X Y\nx : ↑Y.toTopCat\n⊢ IsLocalHom (CommRingCat.Hom.hom (AlgebraicGeometry.PresheafedSpace.Hom.stalkMap (CategoryTheory.Limits.coequalizer.π (AlgebraicGeometry.LocallyRingedSpace.Hom.toShHom f) (AlgebraicGeometry.LocallyRingedSpace.Hom.toShHom g)) x))","decl":"@[deprecated (since := \"2024-10-10\")]\nalias coequalizer_π_stalk_isLocalRingHom := coequalizer_π_stalk_isLocalHom\n\n"}
{"name":"AlgebraicGeometry.LocallyRingedSpace.isLocalHom_stalkMap_congr","module":"Mathlib.Geometry.RingedSpace.LocallyRingedSpace.HasColimits","initialProofState":"X Y : AlgebraicGeometry.RingedSpace\nf g : Quiver.Hom X Y\nH : Eq f g\nx : ↑↑X.toPresheafedSpace\nh : IsLocalHom (CommRingCat.Hom.hom (AlgebraicGeometry.PresheafedSpace.Hom.stalkMap f x))\n⊢ IsLocalHom (CommRingCat.Hom.hom (AlgebraicGeometry.PresheafedSpace.Hom.stalkMap g x))","decl":"theorem isLocalHom_stalkMap_congr {X Y : RingedSpace} (f g : X ⟶ Y) (H : f = g) (x)\n    (h : IsLocalHom (f.stalkMap x).hom) :\n    IsLocalHom (g.stalkMap x).hom := by\n  rw [PresheafedSpace.stalkMap.congr_hom _ _ H.symm x]; infer_instance\n\n"}
{"name":"AlgebraicGeometry.LocallyRingedSpace.instHasCoequalizer","module":"Mathlib.Geometry.RingedSpace.LocallyRingedSpace.HasColimits","initialProofState":"X Y : AlgebraicGeometry.LocallyRingedSpace\nf g : Quiver.Hom X Y\n⊢ CategoryTheory.Limits.HasCoequalizer f g","decl":"instance : HasCoequalizer f g :=\n  ⟨⟨⟨_, coequalizerCoforkIsColimit f g⟩⟩⟩\n\n"}
{"name":"AlgebraicGeometry.LocallyRingedSpace.instHasCoequalizers","module":"Mathlib.Geometry.RingedSpace.LocallyRingedSpace.HasColimits","initialProofState":"⊢ CategoryTheory.Limits.HasCoequalizers AlgebraicGeometry.LocallyRingedSpace","decl":"instance : HasCoequalizers LocallyRingedSpace :=\n  hasCoequalizers_of_hasColimit_parallelPair _\n\n"}
{"name":"AlgebraicGeometry.LocallyRingedSpace.preservesCoequalizer","module":"Mathlib.Geometry.RingedSpace.LocallyRingedSpace.HasColimits","initialProofState":"⊢ CategoryTheory.Limits.PreservesColimitsOfShape CategoryTheory.Limits.WalkingParallelPair AlgebraicGeometry.LocallyRingedSpace.forgetToSheafedSpace","decl":"noncomputable instance preservesCoequalizer :\n    PreservesColimitsOfShape WalkingParallelPair forgetToSheafedSpace.{v} :=\n  ⟨fun {F} => by\n    -- Porting note: was `apply preservesColimitOfIsoDiagram ...` and the proof that preservation\n    -- of colimit is provided later\n    suffices PreservesColimit (parallelPair (F.map WalkingParallelPairHom.left)\n        (F.map WalkingParallelPairHom.right)) forgetToSheafedSpace from\n      preservesColimit_of_iso_diagram _ (diagramIsoParallelPair F).symm\n    apply preservesColimit_of_preserves_colimit_cocone (coequalizerCoforkIsColimit _ _)\n    apply (isColimitMapCoconeCoforkEquiv _ _).symm _\n    dsimp only [forgetToSheafedSpace]\n    exact coequalizerIsCoequalizer _ _⟩\n\n"}
{"name":"AlgebraicGeometry.LocallyRingedSpace.instHasColimits","module":"Mathlib.Geometry.RingedSpace.LocallyRingedSpace.HasColimits","initialProofState":"⊢ CategoryTheory.Limits.HasColimits AlgebraicGeometry.LocallyRingedSpace","decl":"instance : HasColimits LocallyRingedSpace :=\n  has_colimits_of_hasCoequalizers_and_coproducts\n\n"}
{"name":"AlgebraicGeometry.LocallyRingedSpace.preservesColimits_forgetToSheafedSpace","module":"Mathlib.Geometry.RingedSpace.LocallyRingedSpace.HasColimits","initialProofState":"⊢ CategoryTheory.Limits.PreservesColimits AlgebraicGeometry.LocallyRingedSpace.forgetToSheafedSpace","decl":"noncomputable instance preservesColimits_forgetToSheafedSpace :\n    PreservesColimits LocallyRingedSpace.forgetToSheafedSpace.{u} :=\n  preservesColimits_of_preservesCoequalizers_and_coproducts _\n\n"}
