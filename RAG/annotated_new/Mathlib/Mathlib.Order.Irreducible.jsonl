{"name":"SupIrred.not_isMin","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\na : α\nha : SupIrred a\n⊢ Not (IsMin a)","decl":"theorem SupIrred.not_isMin (ha : SupIrred a) : ¬IsMin a :=\n  ha.1\n\n"}
{"name":"SupPrime.not_isMin","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\na : α\nha : SupPrime a\n⊢ Not (IsMin a)","decl":"theorem SupPrime.not_isMin (ha : SupPrime a) : ¬IsMin a :=\n  ha.1\n\n"}
{"name":"IsMin.not_supIrred","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\na : α\nha : IsMin a\n⊢ Not (SupIrred a)","decl":"theorem IsMin.not_supIrred (ha : IsMin a) : ¬SupIrred a := fun h => h.1 ha\n\n"}
{"name":"IsMin.not_supPrime","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\na : α\nha : IsMin a\n⊢ Not (SupPrime a)","decl":"theorem IsMin.not_supPrime (ha : IsMin a) : ¬SupPrime a := fun h => h.1 ha\n\n"}
{"name":"not_supIrred","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\na : α\n⊢ Iff (Not (SupIrred a)) (Or (IsMin a) (Exists fun b => Exists fun c => And (Eq (Max.max b c) a) (And (LT.lt b a) (LT.lt c a))))","decl":"@[simp]\ntheorem not_supIrred : ¬SupIrred a ↔ IsMin a ∨ ∃ b c, b ⊔ c = a ∧ b < a ∧ c < a := by\n  rw [SupIrred, not_and_or]\n  push_neg\n  rw [exists₂_congr]\n  simp +contextual [@eq_comm _ _ a]\n\n"}
{"name":"not_supPrime","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\na : α\n⊢ Iff (Not (SupPrime a)) (Or (IsMin a) (Exists fun b => Exists fun c => And (LE.le a (Max.max b c)) (And (Not (LE.le a b)) (Not (LE.le a c)))))","decl":"@[simp]\ntheorem not_supPrime : ¬SupPrime a ↔ IsMin a ∨ ∃ b c, a ≤ b ⊔ c ∧ ¬a ≤ b ∧ ¬a ≤ c := by\n  rw [SupPrime, not_and_or]; push_neg; rfl\n\n"}
{"name":"SupPrime.supIrred","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\na : α\na✝ : SupPrime a\n⊢ SupIrred a","decl":"protected theorem SupPrime.supIrred : SupPrime a → SupIrred a :=\n  And.imp_right fun h b c ha => by simpa [← ha] using h ha.ge\n\n"}
{"name":"SupPrime.le_sup","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\na b c : α\nha : SupPrime a\n⊢ Iff (LE.le a (Max.max b c)) (Or (LE.le a b) (LE.le a c))","decl":"theorem SupPrime.le_sup (ha : SupPrime a) : a ≤ b ⊔ c ↔ a ≤ b ∨ a ≤ c :=\n  ⟨fun h => ha.2 h, fun h => h.elim le_sup_of_le_left le_sup_of_le_right⟩\n\n"}
{"name":"not_supIrred_bot","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝¹ : SemilatticeSup α\ninst✝ : OrderBot α\n⊢ Not (SupIrred Bot.bot)","decl":"@[simp]\ntheorem not_supIrred_bot : ¬SupIrred (⊥ : α) :=\n  isMin_bot.not_supIrred\n\n"}
{"name":"not_supPrime_bot","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝¹ : SemilatticeSup α\ninst✝ : OrderBot α\n⊢ Not (SupPrime Bot.bot)","decl":"@[simp]\ntheorem not_supPrime_bot : ¬SupPrime (⊥ : α) :=\n  isMin_bot.not_supPrime\n\n"}
{"name":"SupIrred.ne_bot","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝¹ : SemilatticeSup α\na : α\ninst✝ : OrderBot α\nha : SupIrred a\n⊢ Ne a Bot.bot","decl":"theorem SupIrred.ne_bot (ha : SupIrred a) : a ≠ ⊥ := by rintro rfl; exact not_supIrred_bot ha\n\n"}
{"name":"SupPrime.ne_bot","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝¹ : SemilatticeSup α\na : α\ninst✝ : OrderBot α\nha : SupPrime a\n⊢ Ne a Bot.bot","decl":"theorem SupPrime.ne_bot (ha : SupPrime a) : a ≠ ⊥ := by rintro rfl; exact not_supPrime_bot ha\n\n"}
{"name":"SupIrred.finset_sup_eq","module":"Mathlib.Order.Irreducible","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝¹ : SemilatticeSup α\na : α\ninst✝ : OrderBot α\ns : Finset ι\nf : ι → α\nha : SupIrred a\nh : Eq (s.sup f) a\n⊢ Exists fun i => And (Membership.mem s i) (Eq (f i) a)","decl":"theorem SupIrred.finset_sup_eq (ha : SupIrred a) (h : s.sup f = a) : ∃ i ∈ s, f i = a := by\n  classical\n  induction' s using Finset.induction with i s _ ih\n  · simpa [ha.ne_bot] using h.symm\n  simp only [exists_prop, exists_mem_insert] at ih ⊢\n  rw [sup_insert] at h\n  exact (ha.2 h).imp_right ih\n\n"}
{"name":"SupPrime.le_finset_sup","module":"Mathlib.Order.Irreducible","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝¹ : SemilatticeSup α\na : α\ninst✝ : OrderBot α\ns : Finset ι\nf : ι → α\nha : SupPrime a\n⊢ Iff (LE.le a (s.sup f)) (Exists fun i => And (Membership.mem s i) (LE.le a (f i)))","decl":"theorem SupPrime.le_finset_sup (ha : SupPrime a) : a ≤ s.sup f ↔ ∃ i ∈ s, a ≤ f i := by\n  classical\n  induction' s using Finset.induction with i s _ ih\n  · simp [ha.ne_bot]\n  · simp only [exists_prop, exists_mem_insert, sup_insert, ha.le_sup, ih]\n\n"}
{"name":"exists_supIrred_decomposition","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝² : SemilatticeSup α\ninst✝¹ : OrderBot α\ninst✝ : WellFoundedLT α\na : α\n⊢ Exists fun s => And (Eq (s.sup id) a) (∀ ⦃b : α⦄, Membership.mem s b → SupIrred b)","decl":"/-- In a well-founded lattice, any element is the supremum of finitely many sup-irreducible\nelements. This is the order-theoretic analogue of prime factorisation. -/\ntheorem exists_supIrred_decomposition (a : α) :\n    ∃ s : Finset α, s.sup id = a ∧ ∀ ⦃b⦄, b ∈ s → SupIrred b := by\n  classical\n  apply WellFoundedLT.induction a _\n  clear a\n  rintro a ih\n  by_cases ha : SupIrred a\n  · exact ⟨{a}, by simp [ha]⟩\n  rw [not_supIrred] at ha\n  obtain ha | ⟨b, c, rfl, hb, hc⟩ := ha\n  · exact ⟨∅, by simp [ha.eq_bot]⟩\n  obtain ⟨s, rfl, hs⟩ := ih _ hb\n  obtain ⟨t, rfl, ht⟩ := ih _ hc\n  exact ⟨s ∪ t, sup_union, forall_mem_union.2 ⟨hs, ht⟩⟩\n\n"}
{"name":"IsMax.not_infIrred","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\na : α\nha : IsMax a\n⊢ Not (InfIrred a)","decl":"@[simp]\ntheorem IsMax.not_infIrred (ha : IsMax a) : ¬InfIrred a := fun h => h.1 ha\n\n"}
{"name":"IsMax.not_infPrime","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\na : α\nha : IsMax a\n⊢ Not (InfPrime a)","decl":"@[simp]\ntheorem IsMax.not_infPrime (ha : IsMax a) : ¬InfPrime a := fun h => h.1 ha\n\n"}
{"name":"not_infIrred","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\na : α\n⊢ Iff (Not (InfIrred a)) (Or (IsMax a) (Exists fun b => Exists fun c => And (Eq (Min.min b c) a) (And (LT.lt a b) (LT.lt a c))))","decl":"@[simp]\ntheorem not_infIrred : ¬InfIrred a ↔ IsMax a ∨ ∃ b c, b ⊓ c = a ∧ a < b ∧ a < c :=\n  @not_supIrred αᵒᵈ _ _\n\n"}
{"name":"not_infPrime","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\na : α\n⊢ Iff (Not (InfPrime a)) (Or (IsMax a) (Exists fun b => Exists fun c => And (LE.le (Min.min b c) a) (And (Not (LE.le b a)) (Not (LE.le c a)))))","decl":"@[simp]\ntheorem not_infPrime : ¬InfPrime a ↔ IsMax a ∨ ∃ b c, b ⊓ c ≤ a ∧ ¬b ≤ a ∧ ¬c ≤ a :=\n  @not_supPrime αᵒᵈ _ _\n\n"}
{"name":"InfPrime.infIrred","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\na : α\na✝ : InfPrime a\n⊢ InfIrred a","decl":"protected theorem InfPrime.infIrred : InfPrime a → InfIrred a :=\n  And.imp_right fun h b c ha => by simpa [← ha] using h ha.le\n\n"}
{"name":"InfPrime.inf_le","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\na b c : α\nha : InfPrime a\n⊢ Iff (LE.le (Min.min b c) a) (Or (LE.le b a) (LE.le c a))","decl":"theorem InfPrime.inf_le (ha : InfPrime a) : b ⊓ c ≤ a ↔ b ≤ a ∨ c ≤ a :=\n  ⟨fun h => ha.2 h, fun h => h.elim inf_le_of_left_le inf_le_of_right_le⟩\n\n"}
{"name":"not_infIrred_top","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝¹ : SemilatticeInf α\ninst✝ : OrderTop α\n⊢ Not (InfIrred Top.top)","decl":"theorem not_infIrred_top : ¬InfIrred (⊤ : α) :=\n  isMax_top.not_infIrred\n\n"}
{"name":"not_infPrime_top","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝¹ : SemilatticeInf α\ninst✝ : OrderTop α\n⊢ Not (InfPrime Top.top)","decl":"theorem not_infPrime_top : ¬InfPrime (⊤ : α) :=\n  isMax_top.not_infPrime\n\n"}
{"name":"InfIrred.ne_top","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝¹ : SemilatticeInf α\na : α\ninst✝ : OrderTop α\nha : InfIrred a\n⊢ Ne a Top.top","decl":"theorem InfIrred.ne_top (ha : InfIrred a) : a ≠ ⊤ := by rintro rfl; exact not_infIrred_top ha\n\n"}
{"name":"InfPrime.ne_top","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝¹ : SemilatticeInf α\na : α\ninst✝ : OrderTop α\nha : InfPrime a\n⊢ Ne a Top.top","decl":"theorem InfPrime.ne_top (ha : InfPrime a) : a ≠ ⊤ := by rintro rfl; exact not_infPrime_top ha\n\n"}
{"name":"InfIrred.finset_inf_eq","module":"Mathlib.Order.Irreducible","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝¹ : SemilatticeInf α\na : α\ninst✝ : OrderTop α\ns : Finset ι\nf : ι → α\na✝¹ : InfIrred a\na✝ : Eq (s.inf f) a\n⊢ Exists fun i => And (Membership.mem s i) (Eq (f i) a)","decl":"theorem InfIrred.finset_inf_eq : InfIrred a → s.inf f = a → ∃ i ∈ s, f i = a :=\n  @SupIrred.finset_sup_eq _ αᵒᵈ _ _ _ _ _\n\n"}
{"name":"InfPrime.finset_inf_le","module":"Mathlib.Order.Irreducible","initialProofState":"ι : Type u_1\nα : Type u_2\ninst✝¹ : SemilatticeInf α\na : α\ninst✝ : OrderTop α\ns : Finset ι\nf : ι → α\nha : InfPrime a\n⊢ Iff (LE.le (s.inf f) a) (Exists fun i => And (Membership.mem s i) (LE.le (f i) a))","decl":"theorem InfPrime.finset_inf_le (ha : InfPrime a) : s.inf f ≤ a ↔ ∃ i ∈ s, f i ≤ a :=\n  @SupPrime.le_finset_sup _ αᵒᵈ _ _ _ _ _ ha\n\n"}
{"name":"exists_infIrred_decomposition","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝² : SemilatticeInf α\ninst✝¹ : OrderTop α\ninst✝ : WellFoundedGT α\na : α\n⊢ Exists fun s => And (Eq (s.inf id) a) (∀ ⦃b : α⦄, Membership.mem s b → InfIrred b)","decl":"/-- In a cowell-founded lattice, any element is the infimum of finitely many inf-irreducible\nelements. This is the order-theoretic analogue of prime factorisation. -/\ntheorem exists_infIrred_decomposition (a : α) :\n    ∃ s : Finset α, s.inf id = a ∧ ∀ ⦃b⦄, b ∈ s → InfIrred b :=\n  exists_supIrred_decomposition (α := αᵒᵈ) _\n\n"}
{"name":"infIrred_toDual","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\na : α\n⊢ Iff (InfIrred (OrderDual.toDual a)) (SupIrred a)","decl":"@[simp]\ntheorem infIrred_toDual {a : α} : InfIrred (toDual a) ↔ SupIrred a :=\n  Iff.rfl\n\n"}
{"name":"infPrime_toDual","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\na : α\n⊢ Iff (InfPrime (OrderDual.toDual a)) (SupPrime a)","decl":"@[simp]\ntheorem infPrime_toDual {a : α} : InfPrime (toDual a) ↔ SupPrime a :=\n  Iff.rfl\n\n"}
{"name":"supIrred_ofDual","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\na : OrderDual α\n⊢ Iff (SupIrred (OrderDual.ofDual a)) (InfIrred a)","decl":"@[simp]\ntheorem supIrred_ofDual {a : αᵒᵈ} : SupIrred (ofDual a) ↔ InfIrred a :=\n  Iff.rfl\n\n"}
{"name":"supPrime_ofDual","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\na : OrderDual α\n⊢ Iff (SupPrime (OrderDual.ofDual a)) (InfPrime a)","decl":"@[simp]\ntheorem supPrime_ofDual {a : αᵒᵈ} : SupPrime (ofDual a) ↔ InfPrime a :=\n  Iff.rfl\n\n"}
{"name":"SupIrred.dual","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\na : α\na✝ : SupIrred a\n⊢ InfIrred (OrderDual.toDual a)","decl":"alias ⟨_, SupIrred.dual⟩ := infIrred_toDual\n\n"}
{"name":"SupPrime.dual","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\na : α\na✝ : SupPrime a\n⊢ InfPrime (OrderDual.toDual a)","decl":"alias ⟨_, SupPrime.dual⟩ := infPrime_toDual\n\n"}
{"name":"InfIrred.ofDual","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\na : OrderDual α\na✝ : InfIrred a\n⊢ SupIrred (OrderDual.ofDual a)","decl":"alias ⟨_, InfIrred.ofDual⟩ := supIrred_ofDual\n\n"}
{"name":"InfPrime.ofDual","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeSup α\na : OrderDual α\na✝ : InfPrime a\n⊢ SupPrime (OrderDual.ofDual a)","decl":"alias ⟨_, InfPrime.ofDual⟩ := supPrime_ofDual\n\n"}
{"name":"supIrred_toDual","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\na : α\n⊢ Iff (SupIrred (OrderDual.toDual a)) (InfIrred a)","decl":"@[simp]\ntheorem supIrred_toDual {a : α} : SupIrred (toDual a) ↔ InfIrred a :=\n  Iff.rfl\n\n"}
{"name":"supPrime_toDual","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\na : α\n⊢ Iff (SupPrime (OrderDual.toDual a)) (InfPrime a)","decl":"@[simp]\ntheorem supPrime_toDual {a : α} : SupPrime (toDual a) ↔ InfPrime a :=\n  Iff.rfl\n\n"}
{"name":"infIrred_ofDual","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\na : OrderDual α\n⊢ Iff (InfIrred (OrderDual.ofDual a)) (SupIrred a)","decl":"@[simp]\ntheorem infIrred_ofDual {a : αᵒᵈ} : InfIrred (ofDual a) ↔ SupIrred a :=\n  Iff.rfl\n\n"}
{"name":"infPrime_ofDual","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\na : OrderDual α\n⊢ Iff (InfPrime (OrderDual.ofDual a)) (SupPrime a)","decl":"@[simp]\ntheorem infPrime_ofDual {a : αᵒᵈ} : InfPrime (ofDual a) ↔ SupPrime a :=\n  Iff.rfl\n\n"}
{"name":"InfIrred.dual","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\na : α\na✝ : InfIrred a\n⊢ SupIrred (OrderDual.toDual a)","decl":"alias ⟨_, InfIrred.dual⟩ := supIrred_toDual\n\n"}
{"name":"InfPrime.dual","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\na : α\na✝ : InfPrime a\n⊢ SupPrime (OrderDual.toDual a)","decl":"alias ⟨_, InfPrime.dual⟩ := supPrime_toDual\n\n"}
{"name":"SupIrred.ofDual","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\na : OrderDual α\na✝ : SupIrred a\n⊢ InfIrred (OrderDual.ofDual a)","decl":"alias ⟨_, SupIrred.ofDual⟩ := infIrred_ofDual\n\n"}
{"name":"SupPrime.ofDual","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : SemilatticeInf α\na : OrderDual α\na✝ : SupPrime a\n⊢ InfPrime (OrderDual.ofDual a)","decl":"alias ⟨_, SupPrime.ofDual⟩ := infPrime_ofDual\n\n"}
{"name":"supPrime_iff_supIrred","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : DistribLattice α\na : α\n⊢ Iff (SupPrime a) (SupIrred a)","decl":"@[simp]\ntheorem supPrime_iff_supIrred : SupPrime a ↔ SupIrred a :=\n  ⟨SupPrime.supIrred,\n    And.imp_right fun h b c => by simp_rw [← inf_eq_left, inf_sup_left]; exact @h _ _⟩\n\n"}
{"name":"infPrime_iff_infIrred","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : DistribLattice α\na : α\n⊢ Iff (InfPrime a) (InfIrred a)","decl":"@[simp]\ntheorem infPrime_iff_infIrred : InfPrime a ↔ InfIrred a :=\n  ⟨InfPrime.infIrred,\n    And.imp_right fun h b c => by simp_rw [← sup_eq_left, sup_inf_left]; exact @h _ _⟩\n\n"}
{"name":"SupIrred.supPrime","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : DistribLattice α\na : α\na✝ : SupIrred a\n⊢ SupPrime a","decl":"protected alias ⟨_, SupIrred.supPrime⟩ := supPrime_iff_supIrred\n"}
{"name":"InfIrred.infPrime","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : DistribLattice α\na : α\na✝ : InfIrred a\n⊢ InfPrime a","decl":"protected alias ⟨_, InfIrred.infPrime⟩ := infPrime_iff_infIrred\n\n"}
{"name":"supPrime_iff_not_isMin","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : LinearOrder α\na : α\n⊢ Iff (SupPrime a) (Not (IsMin a))","decl":"theorem supPrime_iff_not_isMin : SupPrime a ↔ ¬IsMin a :=\n  and_iff_left <| by simp\n\n"}
{"name":"infPrime_iff_not_isMax","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : LinearOrder α\na : α\n⊢ Iff (InfPrime a) (Not (IsMax a))","decl":"theorem infPrime_iff_not_isMax : InfPrime a ↔ ¬IsMax a :=\n  and_iff_left <| by simp\n\n"}
{"name":"supIrred_iff_not_isMin","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : LinearOrder α\na : α\n⊢ Iff (SupIrred a) (Not (IsMin a))","decl":"@[simp]\ntheorem supIrred_iff_not_isMin : SupIrred a ↔ ¬IsMin a :=\n  and_iff_left fun _ _ => by simpa only [max_eq_iff] using Or.imp And.left And.left\n\n"}
{"name":"infIrred_iff_not_isMax","module":"Mathlib.Order.Irreducible","initialProofState":"α : Type u_2\ninst✝ : LinearOrder α\na : α\n⊢ Iff (InfIrred a) (Not (IsMax a))","decl":"@[simp]\ntheorem infIrred_iff_not_isMax : InfIrred a ↔ ¬IsMax a :=\n  and_iff_left fun _ _ => by simpa only [min_eq_iff] using Or.imp And.left And.left\n\n"}
