{"name":"Subtype.ext_val_iff","module":"Mathlib.Algebra.Category.ModuleCat.Images","initialProofState":"α : Sort u_1\np : α → Prop\na1 a2 : Subtype fun x => p x\n⊢ Iff (Eq a1 a2) (Eq ↑a1 ↑a2)","decl":"attribute [local ext] Subtype.ext_val\n\n"}
{"name":"ModuleCat.instMonoι","module":"Mathlib.Algebra.Category.ModuleCat.Images","initialProofState":"R : Type u\ninst✝ : Ring R\nG H : ModuleCat R\nf : Quiver.Hom G H\n⊢ CategoryTheory.Mono (ModuleCat.image.ι f)","decl":"instance : Mono (image.ι f) :=\n  ConcreteCategory.mono_of_injective (image.ι f) Subtype.val_injective\n\n"}
{"name":"ModuleCat.image.fac","module":"Mathlib.Algebra.Category.ModuleCat.Images","initialProofState":"R : Type u\ninst✝ : Ring R\nG H : ModuleCat R\nf : Quiver.Hom G H\n⊢ Eq (CategoryTheory.CategoryStruct.comp (ModuleCat.factorThruImage f) (ModuleCat.image.ι f)) f","decl":"theorem image.fac : factorThruImage f ≫ image.ι f = f :=\n  rfl\n\n"}
{"name":"ModuleCat.image.lift_fac","module":"Mathlib.Algebra.Category.ModuleCat.Images","initialProofState":"R : Type u\ninst✝ : Ring R\nG H : ModuleCat R\nf : Quiver.Hom G H\nF' : CategoryTheory.Limits.MonoFactorisation f\n⊢ Eq (CategoryTheory.CategoryStruct.comp (ModuleCat.image.lift F') F'.m) (ModuleCat.image.ι f)","decl":"theorem image.lift_fac (F' : MonoFactorisation f) : image.lift F' ≫ F'.m = image.ι f := by\n  ext x\n  change (F'.e ≫ F'.m) _ = _\n  rw [F'.fac, (Classical.indefiniteDescription _ x.2).2]\n  rfl\n\n"}
{"name":"ModuleCat.imageIsoRange_inv_image_ι_apply","module":"Mathlib.Algebra.Category.ModuleCat.Images","initialProofState":"R : Type u\ninst✝ : Ring R\nG H : ModuleCat R\nf : Quiver.Hom G H\nx : CategoryTheory.ToType (ModuleCat.of R (Subtype fun x => Membership.mem (LinearMap.range (ModuleCat.Hom.hom f)) x))\n⊢ Eq ((CategoryTheory.ConcreteCategory.hom (CategoryTheory.Limits.image.ι f)) ((CategoryTheory.ConcreteCategory.hom (ModuleCat.imageIsoRange f).inv) x)) ↑x","decl":"@[simp, reassoc, elementwise]\ntheorem imageIsoRange_inv_image_ι {G H : ModuleCat.{v} R} (f : G ⟶ H) :\n    (imageIsoRange f).inv ≫ Limits.image.ι f = ModuleCat.ofHom f.hom.range.subtype :=\n  IsImage.isoExt_inv_m _ _\n\n"}
{"name":"ModuleCat.imageIsoRange_inv_image_ι_assoc","module":"Mathlib.Algebra.Category.ModuleCat.Images","initialProofState":"R : Type u\ninst✝ : Ring R\nG H : ModuleCat R\nf : Quiver.Hom G H\nZ : ModuleCat R\nh : Quiver.Hom H Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (ModuleCat.imageIsoRange f).inv (CategoryTheory.CategoryStruct.comp (CategoryTheory.Limits.image.ι f) h)) (CategoryTheory.CategoryStruct.comp (ModuleCat.ofHom (LinearMap.range (ModuleCat.Hom.hom f)).subtype) h)","decl":"@[simp, reassoc, elementwise]\ntheorem imageIsoRange_inv_image_ι {G H : ModuleCat.{v} R} (f : G ⟶ H) :\n    (imageIsoRange f).inv ≫ Limits.image.ι f = ModuleCat.ofHom f.hom.range.subtype :=\n  IsImage.isoExt_inv_m _ _\n\n"}
{"name":"ModuleCat.imageIsoRange_inv_image_ι","module":"Mathlib.Algebra.Category.ModuleCat.Images","initialProofState":"R : Type u\ninst✝ : Ring R\nG H : ModuleCat R\nf : Quiver.Hom G H\n⊢ Eq (CategoryTheory.CategoryStruct.comp (ModuleCat.imageIsoRange f).inv (CategoryTheory.Limits.image.ι f)) (ModuleCat.ofHom (LinearMap.range (ModuleCat.Hom.hom f)).subtype)","decl":"@[simp, reassoc, elementwise]\ntheorem imageIsoRange_inv_image_ι {G H : ModuleCat.{v} R} (f : G ⟶ H) :\n    (imageIsoRange f).inv ≫ Limits.image.ι f = ModuleCat.ofHom f.hom.range.subtype :=\n  IsImage.isoExt_inv_m _ _\n\n"}
{"name":"ModuleCat.imageIsoRange_hom_subtype","module":"Mathlib.Algebra.Category.ModuleCat.Images","initialProofState":"R : Type u\ninst✝ : Ring R\nG H : ModuleCat R\nf : Quiver.Hom G H\n⊢ Eq (CategoryTheory.CategoryStruct.comp (ModuleCat.imageIsoRange f).hom (ModuleCat.ofHom (LinearMap.range (ModuleCat.Hom.hom f)).subtype)) (CategoryTheory.Limits.image.ι f)","decl":"@[simp, reassoc, elementwise]\ntheorem imageIsoRange_hom_subtype {G H : ModuleCat.{v} R} (f : G ⟶ H) :\n    (imageIsoRange f).hom ≫ ModuleCat.ofHom f.hom.range.subtype = Limits.image.ι f := by\n  rw [← imageIsoRange_inv_image_ι f, Iso.hom_inv_id_assoc]\n\n"}
{"name":"ModuleCat.imageIsoRange_hom_subtype_assoc","module":"Mathlib.Algebra.Category.ModuleCat.Images","initialProofState":"R : Type u\ninst✝ : Ring R\nG H : ModuleCat R\nf : Quiver.Hom G H\nZ : ModuleCat R\nh : Quiver.Hom (ModuleCat.of R ↑H) Z\n⊢ Eq (CategoryTheory.CategoryStruct.comp (ModuleCat.imageIsoRange f).hom (CategoryTheory.CategoryStruct.comp (ModuleCat.ofHom (LinearMap.range (ModuleCat.Hom.hom f)).subtype) h)) (CategoryTheory.CategoryStruct.comp (CategoryTheory.Limits.image.ι f) h)","decl":"@[simp, reassoc, elementwise]\ntheorem imageIsoRange_hom_subtype {G H : ModuleCat.{v} R} (f : G ⟶ H) :\n    (imageIsoRange f).hom ≫ ModuleCat.ofHom f.hom.range.subtype = Limits.image.ι f := by\n  rw [← imageIsoRange_inv_image_ι f, Iso.hom_inv_id_assoc]\n\n"}
{"name":"ModuleCat.imageIsoRange_hom_subtype_apply","module":"Mathlib.Algebra.Category.ModuleCat.Images","initialProofState":"R : Type u\ninst✝ : Ring R\nG H : ModuleCat R\nf : Quiver.Hom G H\nx : CategoryTheory.ToType (CategoryTheory.Limits.image f)\n⊢ Eq (↑((CategoryTheory.ConcreteCategory.hom (ModuleCat.imageIsoRange f).hom) x)) ((CategoryTheory.ConcreteCategory.hom (CategoryTheory.Limits.image.ι f)) x)","decl":"@[simp, reassoc, elementwise]\ntheorem imageIsoRange_hom_subtype {G H : ModuleCat.{v} R} (f : G ⟶ H) :\n    (imageIsoRange f).hom ≫ ModuleCat.ofHom f.hom.range.subtype = Limits.image.ι f := by\n  rw [← imageIsoRange_inv_image_ι f, Iso.hom_inv_id_assoc]\n\n"}
