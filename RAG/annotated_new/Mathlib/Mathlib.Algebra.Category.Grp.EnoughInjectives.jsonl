{"name":"AddCommGrp.enoughInjectives","module":"Mathlib.Algebra.Category.Grp.EnoughInjectives","initialProofState":"⊢ CategoryTheory.EnoughInjectives AddCommGrp","decl":"instance enoughInjectives : EnoughInjectives AddCommGrp.{u} where\n  presentation A_ := Nonempty.intro\n    { J := of <| (CharacterModule A_) → ULift.{u} (AddCircle (1 : ℚ))\n      injective := injective_of_divisible _\n      f := ofHom ⟨⟨fun a i ↦ ULift.up (i a), by aesop⟩, by aesop⟩\n      mono := (AddCommGrp.mono_iff_injective _).mpr <| (injective_iff_map_eq_zero _).mpr\n        fun _ h0 ↦ eq_zero_of_character_apply (congr_arg ULift.down <| congr_fun h0 ·) }\n\n"}
{"name":"CommGrp.enoughInjectives","module":"Mathlib.Algebra.Category.Grp.EnoughInjectives","initialProofState":"⊢ CategoryTheory.EnoughInjectives CommGrp","decl":"instance enoughInjectives : EnoughInjectives CommGrp.{u} :=\n  EnoughInjectives.of_equivalence commGroupAddCommGroupEquivalence.functor\n\n"}
