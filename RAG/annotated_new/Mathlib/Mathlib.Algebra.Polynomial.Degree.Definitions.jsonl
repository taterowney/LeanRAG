{"name":"Polynomial.Monic.def","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\n⊢ Iff p.Monic (Eq p.leadingCoeff 1)","decl":"theorem Monic.def : Monic p ↔ leadingCoeff p = 1 :=\n  Iff.rfl\n\n"}
{"name":"Polynomial.Monic.leadingCoeff","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\nhp : p.Monic\n⊢ Eq p.leadingCoeff 1","decl":"@[simp]\ntheorem Monic.leadingCoeff {p : R[X]} (hp : p.Monic) : leadingCoeff p = 1 :=\n  hp\n\n"}
{"name":"Polynomial.Monic.coeff_natDegree","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\nhp : p.Monic\n⊢ Eq (p.coeff p.natDegree) 1","decl":"theorem Monic.coeff_natDegree {p : R[X]} (hp : p.Monic) : p.coeff p.natDegree = 1 :=\n  hp\n\n"}
{"name":"Polynomial.degree_zero","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\n⊢ Eq (Polynomial.degree 0) Bot.bot","decl":"@[simp]\ntheorem degree_zero : degree (0 : R[X]) = ⊥ :=\n  rfl\n\n"}
{"name":"Polynomial.natDegree_zero","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\n⊢ Eq (Polynomial.natDegree 0) 0","decl":"@[simp]\ntheorem natDegree_zero : natDegree (0 : R[X]) = 0 :=\n  rfl\n\n"}
{"name":"Polynomial.coeff_natDegree","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\n⊢ Eq (p.coeff p.natDegree) p.leadingCoeff","decl":"@[simp]\ntheorem coeff_natDegree : coeff p (natDegree p) = leadingCoeff p :=\n  rfl\n\n"}
{"name":"Polynomial.degree_eq_bot","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\n⊢ Iff (Eq p.degree Bot.bot) (Eq p 0)","decl":"@[simp]\ntheorem degree_eq_bot : degree p = ⊥ ↔ p = 0 :=\n  ⟨fun h => support_eq_empty.1 (Finset.max_eq_bot.1 h), fun h => h.symm ▸ rfl⟩\n\n"}
{"name":"Polynomial.degree_ne_bot","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\n⊢ Iff (Ne p.degree Bot.bot) (Ne p 0)","decl":"theorem degree_ne_bot : degree p ≠ ⊥ ↔ p ≠ 0 := degree_eq_bot.not\n\n"}
{"name":"Polynomial.degree_eq_natDegree","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\nhp : Ne p 0\n⊢ Eq p.degree ↑p.natDegree","decl":"theorem degree_eq_natDegree (hp : p ≠ 0) : degree p = (natDegree p : WithBot ℕ) := by\n  let ⟨n, hn⟩ := not_forall.1 (mt Option.eq_none_iff_forall_not_mem.2 (mt degree_eq_bot.1 hp))\n  have hn : degree p = some n := Classical.not_not.1 hn\n  rw [natDegree, hn]; rfl\n\n"}
{"name":"Polynomial.degree_eq_iff_natDegree_eq","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\nn : Nat\nhp : Ne p 0\n⊢ Iff (Eq p.degree ↑n) (Eq p.natDegree n)","decl":"theorem degree_eq_iff_natDegree_eq {p : R[X]} {n : ℕ} (hp : p ≠ 0) :\n    p.degree = n ↔ p.natDegree = n := by rw [degree_eq_natDegree hp]; exact WithBot.coe_eq_coe\n\n"}
{"name":"Polynomial.degree_eq_iff_natDegree_eq_of_pos","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\nn : Nat\nhn : LT.lt 0 n\n⊢ Iff (Eq p.degree ↑n) (Eq p.natDegree n)","decl":"theorem degree_eq_iff_natDegree_eq_of_pos {p : R[X]} {n : ℕ} (hn : 0 < n) :\n    p.degree = n ↔ p.natDegree = n := by\n  obtain rfl|h := eq_or_ne p 0\n  · simp [hn.ne]\n  · exact degree_eq_iff_natDegree_eq h\n\n"}
{"name":"Polynomial.natDegree_eq_of_degree_eq_some","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\nn : Nat\nh : Eq p.degree ↑n\n⊢ Eq p.natDegree n","decl":"theorem natDegree_eq_of_degree_eq_some {p : R[X]} {n : ℕ} (h : degree p = n) : natDegree p = n := by\n  -- Porting note: `Nat.cast_withBot` is required.\n  rw [natDegree, h, Nat.cast_withBot, WithBot.unbot'_coe]\n\n"}
{"name":"Polynomial.degree_ne_of_natDegree_ne","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\nn : Nat\na✝ : Ne p.natDegree n\n⊢ Ne p.degree ↑n","decl":"theorem degree_ne_of_natDegree_ne {n : ℕ} : p.natDegree ≠ n → degree p ≠ n :=\n  mt natDegree_eq_of_degree_eq_some\n\n"}
{"name":"Polynomial.degree_le_natDegree","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\n⊢ LE.le p.degree ↑p.natDegree","decl":"@[simp]\ntheorem degree_le_natDegree : degree p ≤ natDegree p :=\n  WithBot.giUnbot'Bot.gc.le_u_l _\n\n"}
{"name":"Polynomial.natDegree_eq_of_degree_eq","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\nS : Type v\ninst✝¹ : Semiring R\np : Polynomial R\ninst✝ : Semiring S\nq : Polynomial S\nh : Eq p.degree q.degree\n⊢ Eq p.natDegree q.natDegree","decl":"theorem natDegree_eq_of_degree_eq [Semiring S] {q : S[X]} (h : degree p = degree q) :\n    natDegree p = natDegree q := by unfold natDegree; rw [h]\n\n"}
{"name":"Polynomial.le_degree_of_ne_zero","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\nn : Nat\ninst✝ : Semiring R\np : Polynomial R\nh : Ne (p.coeff n) 0\n⊢ LE.le (↑n) p.degree","decl":"theorem le_degree_of_ne_zero (h : coeff p n ≠ 0) : (n : WithBot ℕ) ≤ degree p := by\n  rw [Nat.cast_withBot]\n  exact Finset.le_sup (mem_support_iff.2 h)\n\n"}
{"name":"Polynomial.degree_mono","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\nS : Type v\ninst✝¹ : Semiring R\ninst✝ : Semiring S\nf : Polynomial R\ng : Polynomial S\nh : HasSubset.Subset f.support g.support\n⊢ LE.le f.degree g.degree","decl":"theorem degree_mono [Semiring S] {f : R[X]} {g : S[X]} (h : f.support ⊆ g.support) :\n    f.degree ≤ g.degree :=\n  Finset.sup_mono h\n\n"}
{"name":"Polynomial.degree_le_degree","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np q : Polynomial R\nh : Ne (q.coeff p.natDegree) 0\n⊢ LE.le p.degree q.degree","decl":"theorem degree_le_degree (h : coeff q (natDegree p) ≠ 0) : degree p ≤ degree q := by\n  by_cases hp : p = 0\n  · rw [hp, degree_zero]\n    exact bot_le\n  · rw [degree_eq_natDegree hp]\n    exact le_degree_of_ne_zero h\n\n"}
{"name":"Polynomial.natDegree_le_iff_degree_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\nn : Nat\n⊢ Iff (LE.le p.natDegree n) (LE.le p.degree ↑n)","decl":"theorem natDegree_le_iff_degree_le {n : ℕ} : natDegree p ≤ n ↔ degree p ≤ n :=\n  WithBot.unbot'_le_iff (fun _ ↦ bot_le)\n\n"}
{"name":"Polynomial.natDegree_lt_iff_degree_lt","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\nn : Nat\ninst✝ : Semiring R\np : Polynomial R\nhp : Ne p 0\n⊢ Iff (LT.lt p.natDegree n) (LT.lt p.degree ↑n)","decl":"theorem natDegree_lt_iff_degree_lt (hp : p ≠ 0) : p.natDegree < n ↔ p.degree < ↑n :=\n  WithBot.unbot'_lt_iff (absurd · (degree_eq_bot.not.mpr hp))\n\n"}
{"name":"Polynomial.degree_le_of_natDegree_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\nn : Nat\na✝ : LE.le p.natDegree n\n⊢ LE.le p.degree ↑n","decl":"alias ⟨degree_le_of_natDegree_le, natDegree_le_of_degree_le⟩ := natDegree_le_iff_degree_le\n\n"}
{"name":"Polynomial.natDegree_le_of_degree_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\nn : Nat\na✝ : LE.le p.degree ↑n\n⊢ LE.le p.natDegree n","decl":"alias ⟨degree_le_of_natDegree_le, natDegree_le_of_degree_le⟩ := natDegree_le_iff_degree_le\n\n"}
{"name":"Polynomial.natDegree_le_natDegree","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\nS : Type v\ninst✝¹ : Semiring R\np : Polynomial R\ninst✝ : Semiring S\nq : Polynomial S\nhpq : LE.le p.degree q.degree\n⊢ LE.le p.natDegree q.natDegree","decl":"theorem natDegree_le_natDegree [Semiring S] {q : S[X]} (hpq : p.degree ≤ q.degree) :\n    p.natDegree ≤ q.natDegree :=\n  WithBot.giUnbot'Bot.gc.monotone_l hpq\n\n"}
{"name":"Polynomial.degree_C","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\na : R\ninst✝ : Semiring R\nha : Ne a 0\n⊢ Eq (Polynomial.C a).degree 0","decl":"@[simp]\ntheorem degree_C (ha : a ≠ 0) : degree (C a) = (0 : WithBot ℕ) := by\n  rw [degree, ← monomial_zero_left, support_monomial 0 ha, max_eq_sup_coe, sup_singleton,\n    WithBot.coe_zero]\n\n"}
{"name":"Polynomial.degree_C_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\na : R\ninst✝ : Semiring R\n⊢ LE.le (Polynomial.C a).degree 0","decl":"theorem degree_C_le : degree (C a) ≤ 0 := by\n  by_cases h : a = 0\n  · rw [h, C_0]\n    exact bot_le\n  · rw [degree_C h]\n\n"}
{"name":"Polynomial.degree_C_lt","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\na : R\ninst✝ : Semiring R\n⊢ LT.lt (Polynomial.C a).degree 1","decl":"theorem degree_C_lt : degree (C a) < 1 :=\n  degree_C_le.trans_lt <| WithBot.coe_lt_coe.mpr zero_lt_one\n\n"}
{"name":"Polynomial.degree_one_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\n⊢ LE.le (Polynomial.degree 1) 0","decl":"theorem degree_one_le : degree (1 : R[X]) ≤ (0 : WithBot ℕ) := by rw [← C_1]; exact degree_C_le\n\n"}
{"name":"Polynomial.natDegree_C","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\na : R\n⊢ Eq (Polynomial.C a).natDegree 0","decl":"@[simp]\ntheorem natDegree_C (a : R) : natDegree (C a) = 0 := by\n  by_cases ha : a = 0\n  · have : C a = 0 := by rw [ha, C_0]\n    rw [natDegree, degree_eq_bot.2 this, WithBot.unbot'_bot]\n  · rw [natDegree, degree_C ha, WithBot.unbot_zero']\n\n"}
{"name":"Polynomial.natDegree_one","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\n⊢ Eq (Polynomial.natDegree 1) 0","decl":"@[simp]\ntheorem natDegree_one : natDegree (1 : R[X]) = 0 :=\n  natDegree_C 1\n\n"}
{"name":"Polynomial.natDegree_natCast","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\nn : Nat\n⊢ Eq (↑n).natDegree 0","decl":"@[simp]\ntheorem natDegree_natCast (n : ℕ) : natDegree (n : R[X]) = 0 := by\n  simp only [← C_eq_natCast, natDegree_C]\n\n"}
{"name":"Polynomial.natDegree_ofNat","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝¹ : Semiring R\nn : Nat\ninst✝ : n.AtLeastTwo\n⊢ Eq (OfNat.ofNat n).natDegree 0","decl":"@[simp]\ntheorem natDegree_ofNat (n : ℕ) [Nat.AtLeastTwo n] :\n    natDegree (ofNat(n) : R[X]) = 0 :=\n  natDegree_natCast _\n\n"}
{"name":"Polynomial.degree_natCast_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\nn : Nat\n⊢ LE.le (↑n).degree 0","decl":"theorem degree_natCast_le (n : ℕ) : degree (n : R[X]) ≤ 0 := degree_le_of_natDegree_le (by simp)\n\n"}
{"name":"Polynomial.degree_monomial","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\na : R\ninst✝ : Semiring R\nn : Nat\nha : Ne a 0\n⊢ Eq ((Polynomial.monomial n) a).degree ↑n","decl":"@[simp]\ntheorem degree_monomial (n : ℕ) (ha : a ≠ 0) : degree (monomial n a) = n := by\n  rw [degree, support_monomial n ha, max_singleton, Nat.cast_withBot]\n\n"}
{"name":"Polynomial.degree_C_mul_X_pow","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\na : R\ninst✝ : Semiring R\nn : Nat\nha : Ne a 0\n⊢ Eq (HMul.hMul (Polynomial.C a) (HPow.hPow Polynomial.X n)).degree ↑n","decl":"@[simp]\ntheorem degree_C_mul_X_pow (n : ℕ) (ha : a ≠ 0) : degree (C a * X ^ n) = n := by\n  rw [C_mul_X_pow_eq_monomial, degree_monomial n ha]\n\n"}
{"name":"Polynomial.degree_C_mul_X","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\na : R\ninst✝ : Semiring R\nha : Ne a 0\n⊢ Eq (HMul.hMul (Polynomial.C a) Polynomial.X).degree 1","decl":"theorem degree_C_mul_X (ha : a ≠ 0) : degree (C a * X) = 1 := by\n  simpa only [pow_one] using degree_C_mul_X_pow 1 ha\n\n"}
{"name":"Polynomial.degree_monomial_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\nn : Nat\na : R\n⊢ LE.le ((Polynomial.monomial n) a).degree ↑n","decl":"theorem degree_monomial_le (n : ℕ) (a : R) : degree (monomial n a) ≤ n :=\n  letI := Classical.decEq R\n  if h : a = 0 then by rw [h, (monomial n).map_zero, degree_zero]; exact bot_le\n  else le_of_eq (degree_monomial n h)\n\n"}
{"name":"Polynomial.degree_C_mul_X_pow_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\nn : Nat\na : R\n⊢ LE.le (HMul.hMul (Polynomial.C a) (HPow.hPow Polynomial.X n)).degree ↑n","decl":"theorem degree_C_mul_X_pow_le (n : ℕ) (a : R) : degree (C a * X ^ n) ≤ n := by\n  rw [C_mul_X_pow_eq_monomial]\n  apply degree_monomial_le\n\n"}
{"name":"Polynomial.degree_C_mul_X_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\na : R\n⊢ LE.le (HMul.hMul (Polynomial.C a) Polynomial.X).degree 1","decl":"theorem degree_C_mul_X_le (a : R) : degree (C a * X) ≤ 1 := by\n  simpa only [pow_one] using degree_C_mul_X_pow_le 1 a\n\n"}
{"name":"Polynomial.natDegree_C_mul_X_pow","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\nn : Nat\na : R\nha : Ne a 0\n⊢ Eq (HMul.hMul (Polynomial.C a) (HPow.hPow Polynomial.X n)).natDegree n","decl":"@[simp]\ntheorem natDegree_C_mul_X_pow (n : ℕ) (a : R) (ha : a ≠ 0) : natDegree (C a * X ^ n) = n :=\n  natDegree_eq_of_degree_eq_some (degree_C_mul_X_pow n ha)\n\n"}
{"name":"Polynomial.natDegree_C_mul_X","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\na : R\nha : Ne a 0\n⊢ Eq (HMul.hMul (Polynomial.C a) Polynomial.X).natDegree 1","decl":"@[simp]\ntheorem natDegree_C_mul_X (a : R) (ha : a ≠ 0) : natDegree (C a * X) = 1 := by\n  simpa only [pow_one] using natDegree_C_mul_X_pow 1 a ha\n\n"}
{"name":"Polynomial.natDegree_monomial","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝¹ : Semiring R\ninst✝ : DecidableEq R\ni : Nat\nr : R\n⊢ Eq ((Polynomial.monomial i) r).natDegree (ite (Eq r 0) 0 i)","decl":"@[simp]\ntheorem natDegree_monomial [DecidableEq R] (i : ℕ) (r : R) :\n    natDegree (monomial i r) = if r = 0 then 0 else i := by\n  split_ifs with hr\n  · simp [hr]\n  · rw [← C_mul_X_pow_eq_monomial, natDegree_C_mul_X_pow i r hr]\n\n"}
{"name":"Polynomial.natDegree_monomial_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\na : R\nm : Nat\n⊢ LE.le ((Polynomial.monomial m) a).natDegree m","decl":"theorem natDegree_monomial_le (a : R) {m : ℕ} : (monomial m a).natDegree ≤ m := by\n  classical\n  rw [Polynomial.natDegree_monomial]\n  split_ifs\n  exacts [Nat.zero_le _, le_rfl]\n\n"}
{"name":"Polynomial.natDegree_monomial_eq","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\ni : Nat\nr : R\nr0 : Ne r 0\n⊢ Eq ((Polynomial.monomial i) r).natDegree i","decl":"theorem natDegree_monomial_eq (i : ℕ) {r : R} (r0 : r ≠ 0) : (monomial i r).natDegree = i :=\n  letI := Classical.decEq R\n  Eq.trans (natDegree_monomial _ _) (if_neg r0)\n\n"}
{"name":"Polynomial.coeff_ne_zero_of_eq_degree","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\nn : Nat\ninst✝ : Semiring R\np : Polynomial R\nhn : Eq p.degree ↑n\n⊢ Ne (p.coeff n) 0","decl":"theorem coeff_ne_zero_of_eq_degree (hn : degree p = n) : coeff p n ≠ 0 := fun h =>\n  mem_support_iff.mp (mem_of_max hn) h\n\n"}
{"name":"Polynomial.degree_X_pow_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\nn : Nat\n⊢ LE.le (HPow.hPow Polynomial.X n).degree ↑n","decl":"theorem degree_X_pow_le (n : ℕ) : degree (X ^ n : R[X]) ≤ n := by\n  simpa only [C_1, one_mul] using degree_C_mul_X_pow_le n (1 : R)\n\n"}
{"name":"Polynomial.degree_X_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\n⊢ LE.le Polynomial.X.degree 1","decl":"theorem degree_X_le : degree (X : R[X]) ≤ 1 :=\n  degree_monomial_le _ _\n\n"}
{"name":"Polynomial.natDegree_X_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\n⊢ LE.le Polynomial.X.natDegree 1","decl":"theorem natDegree_X_le : (X : R[X]).natDegree ≤ 1 :=\n  natDegree_le_of_degree_le degree_X_le\n\n"}
{"name":"Polynomial.degree_one","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝¹ : Semiring R\ninst✝ : Nontrivial R\n⊢ Eq (Polynomial.degree 1) 0","decl":"@[simp]\ntheorem degree_one : degree (1 : R[X]) = (0 : WithBot ℕ) :=\n  degree_C one_ne_zero\n\n"}
{"name":"Polynomial.degree_X","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝¹ : Semiring R\ninst✝ : Nontrivial R\n⊢ Eq Polynomial.X.degree 1","decl":"@[simp]\ntheorem degree_X : degree (X : R[X]) = 1 :=\n  degree_monomial _ one_ne_zero\n\n"}
{"name":"Polynomial.natDegree_X","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝¹ : Semiring R\ninst✝ : Nontrivial R\n⊢ Eq Polynomial.X.natDegree 1","decl":"@[simp]\ntheorem natDegree_X : (X : R[X]).natDegree = 1 :=\n  natDegree_eq_of_degree_eq_some degree_X\n\n"}
{"name":"Polynomial.degree_neg","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Ring R\np : Polynomial R\n⊢ Eq (Neg.neg p).degree p.degree","decl":"@[simp]\ntheorem degree_neg (p : R[X]) : degree (-p) = degree p := by unfold degree; rw [support_neg]\n\n"}
{"name":"Polynomial.degree_neg_le_of_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Ring R\na : WithBot Nat\np : Polynomial R\nhp : LE.le p.degree a\n⊢ LE.le (Neg.neg p).degree a","decl":"theorem degree_neg_le_of_le {a : WithBot ℕ} {p : R[X]} (hp : degree p ≤ a) : degree (-p) ≤ a :=\n  p.degree_neg.le.trans hp\n\n"}
{"name":"Polynomial.natDegree_neg","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Ring R\np : Polynomial R\n⊢ Eq (Neg.neg p).natDegree p.natDegree","decl":"@[simp]\ntheorem natDegree_neg (p : R[X]) : natDegree (-p) = natDegree p := by simp [natDegree]\n\n"}
{"name":"Polynomial.natDegree_neg_le_of_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\nm : Nat\ninst✝ : Ring R\np : Polynomial R\nhp : LE.le p.natDegree m\n⊢ LE.le (Neg.neg p).natDegree m","decl":"theorem natDegree_neg_le_of_le {p : R[X]} (hp : natDegree p ≤ m) : natDegree (-p) ≤ m :=\n  (natDegree_neg p).le.trans hp\n\n"}
{"name":"Polynomial.natDegree_intCast","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Ring R\nn : Int\n⊢ Eq (↑n).natDegree 0","decl":"@[simp]\ntheorem natDegree_intCast (n : ℤ) : natDegree (n : R[X]) = 0 := by\n  rw [← C_eq_intCast, natDegree_C]\n\n"}
{"name":"Polynomial.degree_intCast_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Ring R\nn : Int\n⊢ LE.le (↑n).degree 0","decl":"theorem degree_intCast_le (n : ℤ) : degree (n : R[X]) ≤ 0 := degree_le_of_natDegree_le (by simp)\n\n"}
{"name":"Polynomial.leadingCoeff_neg","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Ring R\np : Polynomial R\n⊢ Eq (Neg.neg p).leadingCoeff (Neg.neg p.leadingCoeff)","decl":"@[simp]\ntheorem leadingCoeff_neg (p : R[X]) : (-p).leadingCoeff = -p.leadingCoeff := by\n  rw [leadingCoeff, leadingCoeff, natDegree_neg, coeff_neg]\n\n"}
{"name":"Polynomial.nextCoeff_eq_zero","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\n⊢ Iff (Eq p.nextCoeff 0) (Or (Eq p.natDegree 0) (And (LT.lt 0 p.natDegree) (Eq (p.coeff (HSub.hSub p.natDegree 1)) 0)))","decl":"lemma nextCoeff_eq_zero :\n    p.nextCoeff = 0 ↔ p.natDegree = 0 ∨ 0 < p.natDegree ∧ p.coeff (p.natDegree - 1) = 0 := by\n  simp [nextCoeff, or_iff_not_imp_left, pos_iff_ne_zero]; aesop\n\n"}
{"name":"Polynomial.nextCoeff_ne_zero","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\n⊢ Iff (Ne p.nextCoeff 0) (And (Ne p.natDegree 0) (Ne (p.coeff (HSub.hSub p.natDegree 1)) 0))","decl":"lemma nextCoeff_ne_zero : p.nextCoeff ≠ 0 ↔ p.natDegree ≠ 0 ∧ p.coeff (p.natDegree - 1) ≠ 0 := by\n  simp [nextCoeff]\n\n"}
{"name":"Polynomial.nextCoeff_C_eq_zero","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\nc : R\n⊢ Eq (Polynomial.C c).nextCoeff 0","decl":"@[simp]\ntheorem nextCoeff_C_eq_zero (c : R) : nextCoeff (C c) = 0 := by\n  rw [nextCoeff]\n  simp\n\n"}
{"name":"Polynomial.nextCoeff_of_natDegree_pos","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\nhp : LT.lt 0 p.natDegree\n⊢ Eq p.nextCoeff (p.coeff (HSub.hSub p.natDegree 1))","decl":"theorem nextCoeff_of_natDegree_pos (hp : 0 < p.natDegree) :\n    nextCoeff p = p.coeff (p.natDegree - 1) := by\n  rw [nextCoeff, if_neg]\n  contrapose! hp\n  simpa\n\n"}
{"name":"Polynomial.degree_add_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np q : Polynomial R\n⊢ LE.le (HAdd.hAdd p q).degree (Max.max p.degree q.degree)","decl":"theorem degree_add_le (p q : R[X]) : degree (p + q) ≤ max (degree p) (degree q) := by\n  simpa only [degree, ← support_toFinsupp, toFinsupp_add]\n    using AddMonoidAlgebra.sup_support_add_le _ _ _\n\n"}
{"name":"Polynomial.degree_add_le_of_degree_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np q : Polynomial R\nn : Nat\nhp : LE.le p.degree ↑n\nhq : LE.le q.degree ↑n\n⊢ LE.le (HAdd.hAdd p q).degree ↑n","decl":"theorem degree_add_le_of_degree_le {p q : R[X]} {n : ℕ} (hp : degree p ≤ n) (hq : degree q ≤ n) :\n    degree (p + q) ≤ n :=\n  (degree_add_le p q).trans <| max_le hp hq\n\n"}
{"name":"Polynomial.degree_add_le_of_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np q : Polynomial R\na b : WithBot Nat\nhp : LE.le p.degree a\nhq : LE.le q.degree b\n⊢ LE.le (HAdd.hAdd p q).degree (Max.max a b)","decl":"theorem degree_add_le_of_le {a b : WithBot ℕ} (hp : degree p ≤ a) (hq : degree q ≤ b) :\n    degree (p + q) ≤ max a b :=\n  (p.degree_add_le q).trans <| max_le_max ‹_› ‹_›\n\n"}
{"name":"Polynomial.natDegree_add_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np q : Polynomial R\n⊢ LE.le (HAdd.hAdd p q).natDegree (Max.max p.natDegree q.natDegree)","decl":"theorem natDegree_add_le (p q : R[X]) : natDegree (p + q) ≤ max (natDegree p) (natDegree q) := by\n  cases' le_max_iff.1 (degree_add_le p q) with h h <;> simp [natDegree_le_natDegree h]\n\n"}
{"name":"Polynomial.natDegree_add_le_of_degree_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np q : Polynomial R\nn : Nat\nhp : LE.le p.natDegree n\nhq : LE.le q.natDegree n\n⊢ LE.le (HAdd.hAdd p q).natDegree n","decl":"theorem natDegree_add_le_of_degree_le {p q : R[X]} {n : ℕ} (hp : natDegree p ≤ n)\n    (hq : natDegree q ≤ n) : natDegree (p + q) ≤ n :=\n  (natDegree_add_le p q).trans <| max_le hp hq\n\n"}
{"name":"Polynomial.natDegree_add_le_of_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\nn m : Nat\ninst✝ : Semiring R\np q : Polynomial R\nhp : LE.le p.natDegree m\nhq : LE.le q.natDegree n\n⊢ LE.le (HAdd.hAdd p q).natDegree (Max.max m n)","decl":"theorem natDegree_add_le_of_le (hp : natDegree p ≤ m) (hq : natDegree q ≤ n) :\n    natDegree (p + q) ≤ max m n :=\n  (p.natDegree_add_le q).trans <| max_le_max ‹_› ‹_›\n\n"}
{"name":"Polynomial.leadingCoeff_zero","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\n⊢ Eq (Polynomial.leadingCoeff 0) 0","decl":"@[simp]\ntheorem leadingCoeff_zero : leadingCoeff (0 : R[X]) = 0 :=\n  rfl\n\n"}
{"name":"Polynomial.leadingCoeff_eq_zero","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\n⊢ Iff (Eq p.leadingCoeff 0) (Eq p 0)","decl":"@[simp]\ntheorem leadingCoeff_eq_zero : leadingCoeff p = 0 ↔ p = 0 :=\n  ⟨fun h =>\n    Classical.by_contradiction fun hp =>\n      mt mem_support_iff.1 (Classical.not_not.2 h) (mem_of_max (degree_eq_natDegree hp)),\n    fun h => h.symm ▸ leadingCoeff_zero⟩\n\n"}
{"name":"Polynomial.leadingCoeff_ne_zero","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\n⊢ Iff (Ne p.leadingCoeff 0) (Ne p 0)","decl":"theorem leadingCoeff_ne_zero : leadingCoeff p ≠ 0 ↔ p ≠ 0 := by rw [Ne, leadingCoeff_eq_zero]\n\n"}
{"name":"Polynomial.leadingCoeff_eq_zero_iff_deg_eq_bot","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\n⊢ Iff (Eq p.leadingCoeff 0) (Eq p.degree Bot.bot)","decl":"theorem leadingCoeff_eq_zero_iff_deg_eq_bot : leadingCoeff p = 0 ↔ degree p = ⊥ := by\n  rw [leadingCoeff_eq_zero, degree_eq_bot]\n\n"}
{"name":"Polynomial.natDegree_C_mul_X_pow_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\na : R\nn : Nat\n⊢ LE.le (HMul.hMul (Polynomial.C a) (HPow.hPow Polynomial.X n)).natDegree n","decl":"theorem natDegree_C_mul_X_pow_le (a : R) (n : ℕ) : natDegree (C a * X ^ n) ≤ n :=\n  natDegree_le_iff_degree_le.2 <| degree_C_mul_X_pow_le _ _\n\n"}
{"name":"Polynomial.degree_erase_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\nn : Nat\n⊢ LE.le (Polynomial.erase n p).degree p.degree","decl":"theorem degree_erase_le (p : R[X]) (n : ℕ) : degree (p.erase n) ≤ degree p := by\n  rcases p with ⟨p⟩\n  simp only [erase_def, degree, coeff, support]\n  -- Porting note: simpler convert-free proof to be explicit about definition unfolding\n  apply sup_mono\n  rw [Finsupp.support_erase]\n  apply Finset.erase_subset\n\n"}
{"name":"Polynomial.degree_erase_lt","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\nhp : Ne p 0\n⊢ LT.lt (Polynomial.erase p.natDegree p).degree p.degree","decl":"theorem degree_erase_lt (hp : p ≠ 0) : degree (p.erase (natDegree p)) < degree p := by\n  apply lt_of_le_of_ne (degree_erase_le _ _)\n  rw [degree_eq_natDegree hp, degree, support_erase]\n  exact fun h => not_mem_erase _ _ (mem_of_max h)\n\n"}
{"name":"Polynomial.degree_update_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\nn : Nat\na : R\n⊢ LE.le (p.update n a).degree (Max.max p.degree ↑n)","decl":"theorem degree_update_le (p : R[X]) (n : ℕ) (a : R) : degree (p.update n a) ≤ max (degree p) n := by\n  classical\n  rw [degree, support_update]\n  split_ifs\n  · exact (Finset.max_mono (erase_subset _ _)).trans (le_max_left _ _)\n  · rw [max_insert, max_comm]\n    exact le_rfl\n\n"}
{"name":"Polynomial.degree_sum_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\nι : Type u_1\ns : Finset ι\nf : ι → Polynomial R\n⊢ LE.le (s.sum fun i => f i).degree (s.sup fun b => (f b).degree)","decl":"theorem degree_sum_le (s : Finset ι) (f : ι → R[X]) :\n    degree (∑ i ∈ s, f i) ≤ s.sup fun b => degree (f b) :=\n  Finset.cons_induction_on s (by simp only [sum_empty, sup_empty, degree_zero, le_refl])\n    fun a s has ih =>\n    calc\n      degree (∑ i ∈ cons a s has, f i) ≤ max (degree (f a)) (degree (∑ i ∈ s, f i)) := by\n        rw [Finset.sum_cons]; exact degree_add_le _ _\n      _ ≤ _ := by rw [sup_cons]; exact max_le_max le_rfl ih\n\n"}
{"name":"Polynomial.degree_mul_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np q : Polynomial R\n⊢ LE.le (HMul.hMul p q).degree (HAdd.hAdd p.degree q.degree)","decl":"theorem degree_mul_le (p q : R[X]) : degree (p * q) ≤ degree p + degree q := by\n  simpa only [degree, ← support_toFinsupp, toFinsupp_mul]\n    using AddMonoidAlgebra.sup_support_mul_le (WithBot.coe_add _ _).le _ _\n\n"}
{"name":"Polynomial.degree_mul_le_of_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np q : Polynomial R\na b : WithBot Nat\nhp : LE.le p.degree a\nhq : LE.le q.degree b\n⊢ LE.le (HMul.hMul p q).degree (HAdd.hAdd a b)","decl":"theorem degree_mul_le_of_le {a b : WithBot ℕ} (hp : degree p ≤ a) (hq : degree q ≤ b) :\n    degree (p * q) ≤ a + b :=\n  (p.degree_mul_le _).trans <| add_le_add ‹_› ‹_›\n\n"}
{"name":"Polynomial.degree_pow_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\nn : Nat\n⊢ LE.le (HPow.hPow p n).degree (HSMul.hSMul n p.degree)","decl":"theorem degree_pow_le (p : R[X]) : ∀ n : ℕ, degree (p ^ n) ≤ n • degree p\n  | 0 => by rw [pow_zero, zero_nsmul]; exact degree_one_le\n  | n + 1 =>\n    calc\n      degree (p ^ (n + 1)) ≤ degree (p ^ n) + degree p := by\n        rw [pow_succ]; exact degree_mul_le _ _\n      _ ≤ _ := by rw [succ_nsmul]; exact add_le_add_right (degree_pow_le _ _) _\n\n"}
{"name":"Polynomial.degree_pow_le_of_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\na : WithBot Nat\nb : Nat\nhp : LE.le p.degree a\n⊢ LE.le (HPow.hPow p b).degree (HMul.hMul (↑b) a)","decl":"theorem degree_pow_le_of_le {a : WithBot ℕ} (b : ℕ) (hp : degree p ≤ a) :\n    degree (p ^ b) ≤ b * a := by\n  induction b with\n  | zero => simp [degree_one_le]\n  | succ n hn =>\n      rw [Nat.cast_succ, add_mul, one_mul, pow_succ]\n      exact degree_mul_le_of_le hn hp\n\n"}
{"name":"Polynomial.leadingCoeff_monomial","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\na : R\nn : Nat\n⊢ Eq ((Polynomial.monomial n) a).leadingCoeff a","decl":"@[simp]\ntheorem leadingCoeff_monomial (a : R) (n : ℕ) : leadingCoeff (monomial n a) = a := by\n  classical\n  by_cases ha : a = 0\n  · simp only [ha, (monomial n).map_zero, leadingCoeff_zero]\n  · rw [leadingCoeff, natDegree_monomial, if_neg ha, coeff_monomial]\n    simp\n\n"}
{"name":"Polynomial.leadingCoeff_C_mul_X_pow","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\na : R\nn : Nat\n⊢ Eq (HMul.hMul (Polynomial.C a) (HPow.hPow Polynomial.X n)).leadingCoeff a","decl":"theorem leadingCoeff_C_mul_X_pow (a : R) (n : ℕ) : leadingCoeff (C a * X ^ n) = a := by\n  rw [C_mul_X_pow_eq_monomial, leadingCoeff_monomial]\n\n"}
{"name":"Polynomial.leadingCoeff_C_mul_X","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\na : R\n⊢ Eq (HMul.hMul (Polynomial.C a) Polynomial.X).leadingCoeff a","decl":"theorem leadingCoeff_C_mul_X (a : R) : leadingCoeff (C a * X) = a := by\n  simpa only [pow_one] using leadingCoeff_C_mul_X_pow a 1\n\n"}
{"name":"Polynomial.leadingCoeff_C","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\na : R\n⊢ Eq (Polynomial.C a).leadingCoeff a","decl":"@[simp]\ntheorem leadingCoeff_C (a : R) : leadingCoeff (C a) = a :=\n  leadingCoeff_monomial a 0\n\n"}
{"name":"Polynomial.leadingCoeff_X_pow","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\nn : Nat\n⊢ Eq (HPow.hPow Polynomial.X n).leadingCoeff 1","decl":"theorem leadingCoeff_X_pow (n : ℕ) : leadingCoeff ((X : R[X]) ^ n) = 1 := by\n  simpa only [C_1, one_mul] using leadingCoeff_C_mul_X_pow (1 : R) n\n\n"}
{"name":"Polynomial.leadingCoeff_X","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\n⊢ Eq Polynomial.X.leadingCoeff 1","decl":"theorem leadingCoeff_X : leadingCoeff (X : R[X]) = 1 := by\n  simpa only [pow_one] using @leadingCoeff_X_pow R _ 1\n\n"}
{"name":"Polynomial.monic_X_pow","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\nn : Nat\n⊢ (HPow.hPow Polynomial.X n).Monic","decl":"@[simp]\ntheorem monic_X_pow (n : ℕ) : Monic (X ^ n : R[X]) :=\n  leadingCoeff_X_pow n\n\n"}
{"name":"Polynomial.monic_X","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\n⊢ Polynomial.X.Monic","decl":"@[simp]\ntheorem monic_X : Monic (X : R[X]) :=\n  leadingCoeff_X\n\n"}
{"name":"Polynomial.leadingCoeff_one","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\n⊢ Eq (Polynomial.leadingCoeff 1) 1","decl":"theorem leadingCoeff_one : leadingCoeff (1 : R[X]) = 1 :=\n  leadingCoeff_C 1\n\n"}
{"name":"Polynomial.monic_one","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\n⊢ Polynomial.Monic 1","decl":"@[simp]\ntheorem monic_one : Monic (1 : R[X]) :=\n  leadingCoeff_C _\n\n"}
{"name":"Polynomial.Monic.ne_zero","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u_2\ninst✝¹ : Semiring R\ninst✝ : Nontrivial R\np : Polynomial R\nhp : p.Monic\n⊢ Ne p 0","decl":"theorem Monic.ne_zero {R : Type*} [Semiring R] [Nontrivial R] {p : R[X]} (hp : p.Monic) :\n    p ≠ 0 := by\n  rintro rfl\n  simp [Monic] at hp\n\n"}
{"name":"Polynomial.Monic.ne_zero_of_ne","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\nh : Ne 0 1\np : Polynomial R\nhp : p.Monic\n⊢ Ne p 0","decl":"theorem Monic.ne_zero_of_ne (h : (0 : R) ≠ 1) {p : R[X]} (hp : p.Monic) : p ≠ 0 := by\n  nontriviality R\n  exact hp.ne_zero\n\n"}
{"name":"Polynomial.Monic.ne_zero_of_polynomial_ne","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np q r : Polynomial R\nhp : p.Monic\nhne : Ne q r\n⊢ Ne p 0","decl":"theorem Monic.ne_zero_of_polynomial_ne {r} (hp : Monic p) (hne : q ≠ r) : p ≠ 0 :=\n  haveI := Nontrivial.of_polynomial_ne hne\n  hp.ne_zero\n\n"}
{"name":"Polynomial.natDegree_mul_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np q : Polynomial R\n⊢ LE.le (HMul.hMul p q).natDegree (HAdd.hAdd p.natDegree q.natDegree)","decl":"theorem natDegree_mul_le {p q : R[X]} : natDegree (p * q) ≤ natDegree p + natDegree q := by\n  apply natDegree_le_of_degree_le\n  apply le_trans (degree_mul_le p q)\n  rw [Nat.cast_add]\n  apply add_le_add <;> apply degree_le_natDegree\n\n"}
{"name":"Polynomial.natDegree_mul_le_of_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\nn m : Nat\ninst✝ : Semiring R\np q : Polynomial R\nhp : LE.le p.natDegree m\nhg : LE.le q.natDegree n\n⊢ LE.le (HMul.hMul p q).natDegree (HAdd.hAdd m n)","decl":"theorem natDegree_mul_le_of_le (hp : natDegree p ≤ m) (hg : natDegree q ≤ n) :\n    natDegree (p * q) ≤ m + n :=\nnatDegree_mul_le.trans <| add_le_add ‹_› ‹_›\n\n"}
{"name":"Polynomial.natDegree_pow_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\nn : Nat\n⊢ LE.le (HPow.hPow p n).natDegree (HMul.hMul n p.natDegree)","decl":"theorem natDegree_pow_le {p : R[X]} {n : ℕ} : (p ^ n).natDegree ≤ n * p.natDegree := by\n  induction n with\n  | zero => simp\n  | succ i hi =>\n    rw [pow_succ, Nat.succ_mul]\n    apply le_trans natDegree_mul_le (add_le_add_right hi _)\n\n"}
{"name":"Polynomial.natDegree_pow_le_of_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\nm : Nat\ninst✝ : Semiring R\np : Polynomial R\nn : Nat\nhp : LE.le p.natDegree m\n⊢ LE.le (HPow.hPow p n).natDegree (HMul.hMul n m)","decl":"theorem natDegree_pow_le_of_le (n : ℕ) (hp : natDegree p ≤ m) :\n    natDegree (p ^ n) ≤ n * m :=\n  natDegree_pow_le.trans (Nat.mul_le_mul le_rfl ‹_›)\n\n"}
{"name":"Polynomial.natDegree_eq_zero_iff_degree_le_zero","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\n⊢ Iff (Eq p.natDegree 0) (LE.le p.degree 0)","decl":"theorem natDegree_eq_zero_iff_degree_le_zero : p.natDegree = 0 ↔ p.degree ≤ 0 := by\n  rw [← nonpos_iff_eq_zero, natDegree_le_iff_degree_le, Nat.cast_zero]\n\n"}
{"name":"Polynomial.degree_zero_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\n⊢ LE.le (Polynomial.degree 0) 0","decl":"theorem degree_zero_le : degree (0 : R[X]) ≤ 0 := natDegree_eq_zero_iff_degree_le_zero.mp rfl\n\n"}
{"name":"Polynomial.degree_le_iff_coeff_zero","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\nf : Polynomial R\nn : WithBot Nat\n⊢ Iff (LE.le f.degree n) (∀ (m : Nat), LT.lt n ↑m → Eq (f.coeff m) 0)","decl":"theorem degree_le_iff_coeff_zero (f : R[X]) (n : WithBot ℕ) :\n    degree f ≤ n ↔ ∀ m : ℕ, n < m → coeff f m = 0 := by\n  -- Porting note: `Nat.cast_withBot` is required.\n  simp only [degree, Finset.max, Finset.sup_le_iff, mem_support_iff, Ne, ← not_le,\n    not_imp_comm, Nat.cast_withBot]\n\n"}
{"name":"Polynomial.degree_lt_iff_coeff_zero","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\nf : Polynomial R\nn : Nat\n⊢ Iff (LT.lt f.degree ↑n) (∀ (m : Nat), LE.le n m → Eq (f.coeff m) 0)","decl":"theorem degree_lt_iff_coeff_zero (f : R[X]) (n : ℕ) :\n    degree f < n ↔ ∀ m : ℕ, n ≤ m → coeff f m = 0 := by\n  simp only [degree, Finset.sup_lt_iff (WithBot.bot_lt_coe n), mem_support_iff,\n    WithBot.coe_lt_coe, ← @not_le ℕ, max_eq_sup_coe, Nat.cast_withBot, Ne, not_imp_not]\n\n"}
{"name":"Polynomial.natDegree_pos_iff_degree_pos","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Semiring R\np : Polynomial R\n⊢ Iff (LT.lt 0 p.natDegree) (LT.lt 0 p.degree)","decl":"theorem natDegree_pos_iff_degree_pos : 0 < natDegree p ↔ 0 < degree p :=\n  lt_iff_lt_of_le_iff_le natDegree_le_iff_degree_le\n\n"}
{"name":"Polynomial.degree_X_pow","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝¹ : Semiring R\ninst✝ : Nontrivial R\nn : Nat\n⊢ Eq (HPow.hPow Polynomial.X n).degree ↑n","decl":"@[simp]\ntheorem degree_X_pow : degree ((X : R[X]) ^ n) = n := by\n  rw [X_pow_eq_monomial, degree_monomial _ (one_ne_zero' R)]\n\n"}
{"name":"Polynomial.natDegree_X_pow","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝¹ : Semiring R\ninst✝ : Nontrivial R\nn : Nat\n⊢ Eq (HPow.hPow Polynomial.X n).natDegree n","decl":"@[simp]\ntheorem natDegree_X_pow : natDegree ((X : R[X]) ^ n) = n :=\n  natDegree_eq_of_degree_eq_some (degree_X_pow n)\n\n"}
{"name":"Polynomial.degree_sub_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Ring R\np q : Polynomial R\n⊢ LE.le (HSub.hSub p q).degree (Max.max p.degree q.degree)","decl":"theorem degree_sub_le (p q : R[X]) : degree (p - q) ≤ max (degree p) (degree q) := by\n  simpa only [degree_neg q] using degree_add_le p (-q)\n\n"}
{"name":"Polynomial.degree_sub_le_of_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Ring R\np q : Polynomial R\na b : WithBot Nat\nhp : LE.le p.degree a\nhq : LE.le q.degree b\n⊢ LE.le (HSub.hSub p q).degree (Max.max a b)","decl":"theorem degree_sub_le_of_le {a b : WithBot ℕ} (hp : degree p ≤ a) (hq : degree q ≤ b) :\n    degree (p - q) ≤ max a b :=\n  (p.degree_sub_le q).trans <| max_le_max ‹_› ‹_›\n\n"}
{"name":"Polynomial.natDegree_sub_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Ring R\np q : Polynomial R\n⊢ LE.le (HSub.hSub p q).natDegree (Max.max p.natDegree q.natDegree)","decl":"theorem natDegree_sub_le (p q : R[X]) : natDegree (p - q) ≤ max (natDegree p) (natDegree q) := by\n  simpa only [← natDegree_neg q] using natDegree_add_le p (-q)\n\n"}
{"name":"Polynomial.natDegree_sub_le_of_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\nn m : Nat\ninst✝ : Ring R\np q : Polynomial R\nhp : LE.le p.natDegree m\nhq : LE.le q.natDegree n\n⊢ LE.le (HSub.hSub p q).natDegree (Max.max m n)","decl":"theorem natDegree_sub_le_of_le (hp : natDegree p ≤ m) (hq : natDegree q ≤ n) :\n    natDegree (p - q) ≤ max m n :=\n  (p.natDegree_sub_le q).trans <| max_le_max ‹_› ‹_›\n\n"}
{"name":"Polynomial.degree_sub_lt","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Ring R\np q : Polynomial R\nhd : Eq p.degree q.degree\nhp0 : Ne p 0\nhlc : Eq p.leadingCoeff q.leadingCoeff\n⊢ LT.lt (HSub.hSub p q).degree p.degree","decl":"theorem degree_sub_lt (hd : degree p = degree q) (hp0 : p ≠ 0)\n    (hlc : leadingCoeff p = leadingCoeff q) : degree (p - q) < degree p :=\n  have hp : monomial (natDegree p) (leadingCoeff p) + p.erase (natDegree p) = p :=\n    monomial_add_erase _ _\n  have hq : monomial (natDegree q) (leadingCoeff q) + q.erase (natDegree q) = q :=\n    monomial_add_erase _ _\n  have hd' : natDegree p = natDegree q := by unfold natDegree; rw [hd]\n  have hq0 : q ≠ 0 := mt degree_eq_bot.2 (hd ▸ mt degree_eq_bot.1 hp0)\n  calc\n    degree (p - q) = degree (erase (natDegree q) p + -erase (natDegree q) q) := by\n      conv =>\n        lhs\n        rw [← hp, ← hq, hlc, hd', add_sub_add_left_eq_sub, sub_eq_add_neg]\n    _ ≤ max (degree (erase (natDegree q) p)) (degree (erase (natDegree q) q)) :=\n      (degree_neg (erase (natDegree q) q) ▸ degree_add_le _ _)\n    _ < degree p := max_lt_iff.2 ⟨hd' ▸ degree_erase_lt hp0, hd.symm ▸ degree_erase_lt hq0⟩\n\n"}
{"name":"Polynomial.degree_X_sub_C_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Ring R\nr : R\n⊢ LE.le (HSub.hSub Polynomial.X (Polynomial.C r)).degree 1","decl":"theorem degree_X_sub_C_le (r : R) : (X - C r).degree ≤ 1 :=\n  (degree_sub_le _ _).trans (max_le degree_X_le (degree_C_le.trans zero_le_one))\n\n"}
{"name":"Polynomial.natDegree_X_sub_C_le","module":"Mathlib.Algebra.Polynomial.Degree.Definitions","initialProofState":"R : Type u\ninst✝ : Ring R\nr : R\n⊢ LE.le (HSub.hSub Polynomial.X (Polynomial.C r)).natDegree 1","decl":"theorem natDegree_X_sub_C_le (r : R) : (X - C r).natDegree ≤ 1 :=\n  natDegree_le_iff_degree_le.2 <| degree_X_sub_C_le r\n\n"}
