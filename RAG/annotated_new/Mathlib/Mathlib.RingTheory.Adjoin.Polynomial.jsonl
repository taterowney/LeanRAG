{"name":"Polynomial.adjoin_X","module":"Mathlib.RingTheory.Adjoin.Polynomial","initialProofState":"R : Type u\ninst✝ : CommSemiring R\n⊢ Eq (Algebra.adjoin R (Singleton.singleton Polynomial.X)) Top.top","decl":"@[simp]\ntheorem adjoin_X : Algebra.adjoin R ({X} : Set R[X]) = ⊤ := by\n  refine top_unique fun p _hp => ?_\n  set S := Algebra.adjoin R ({X} : Set R[X])\n  rw [← sum_monomial_eq p]; simp only [← smul_X_eq_monomial, Sum]\n  exact S.sum_mem fun n _hn => S.smul_mem (S.pow_mem (Algebra.subset_adjoin rfl) _) _\n\n"}
{"name":"Algebra.adjoin_singleton_eq_range_aeval","module":"Mathlib.RingTheory.Adjoin.Polynomial","initialProofState":"R : Type u\nA : Type z\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\nx : A\n⊢ Eq (Algebra.adjoin R (Singleton.singleton x)) (Polynomial.aeval x).range","decl":"theorem _root_.Algebra.adjoin_singleton_eq_range_aeval (x : A) :\n    Algebra.adjoin R {x} = (Polynomial.aeval x).range := by\n  rw [← Algebra.map_top, ← adjoin_X, AlgHom.map_adjoin, Set.image_singleton, aeval_X]\n\n"}
{"name":"Polynomial.aeval_mem_adjoin_singleton","module":"Mathlib.RingTheory.Adjoin.Polynomial","initialProofState":"R : Type u\nA : Type z\ninst✝² : CommSemiring R\ninst✝¹ : Semiring A\ninst✝ : Algebra R A\np : Polynomial R\nx : A\n⊢ Membership.mem (Algebra.adjoin R (Singleton.singleton x)) ((Polynomial.aeval x) p)","decl":"@[simp]\ntheorem aeval_mem_adjoin_singleton :\n    aeval x p ∈ Algebra.adjoin R {x} := by\n  simpa only [Algebra.adjoin_singleton_eq_range_aeval] using Set.mem_range_self p\n\n"}
