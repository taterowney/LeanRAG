{"name":"Condensed.instIsRightKanExtensionFintypeCatCondensedModProfiniteProfiniteSolidProfiniteSolidCounit","module":"Mathlib.Condensed.Solid","initialProofState":"R : Type (u + 1)\ninst✝ : Ring R\n⊢ (Condensed.profiniteSolid R).IsRightKanExtension (Condensed.profiniteSolidCounit R)","decl":"instance : (profiniteSolid R).IsRightKanExtension (profiniteSolidCounit R) := by\n  dsimp only [profiniteSolidCounit, profiniteSolid]\n  infer_instance\n\n"}
{"name":"CondensedMod.IsSolid.isIso_solidification_map","module":"Mathlib.Condensed.Solid","initialProofState":"R : Type (u + 1)\ninst✝ : Ring R\nA : CondensedMod R\nself : CondensedMod.IsSolid R A\nX : Profinite\n⊢ CategoryTheory.IsIso ((CategoryTheory.yoneda.obj A).map ((Condensed.profiniteSolidification R).app X).op)","decl":"/-- The predicate on condensed abelian groups describing the property of being solid. -/\nclass CondensedMod.IsSolid (A : CondensedMod.{u} R) : Prop where\n  isIso_solidification_map : ∀ X : Profinite.{u}, IsIso ((yoneda.obj A).map\n    ((profiniteSolidification R).app X).op)\n"}
