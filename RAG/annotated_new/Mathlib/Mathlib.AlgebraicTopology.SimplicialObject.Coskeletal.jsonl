{"name":"CategoryTheory.SimplicialObject.Truncated.rightExtensionInclusion_hom_app","module":"Mathlib.AlgebraicTopology.SimplicialObject.Coskeletal","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX‚úù : CategoryTheory.SimplicialObject C\nn : Nat\nX : Opposite (SimplexCategory.Truncated n)\n‚ä¢ Eq ((CategoryTheory.SimplicialObject.Truncated.rightExtensionInclusion X‚úù n).hom.app X) (CategoryTheory.CategoryStruct.id (X‚úù.obj { unop := (SimplexCategory.Truncated.inclusion n).obj (Opposite.unop X) }))","decl":"/-- The identity natural transformation exhibits a simplicial set as a right extension of its\nrestriction along `(Truncated.inclusion n).op`.-/\n@[simps!]\ndef rightExtensionInclusion :\n    RightExtension (Truncated.inclusion n).op\n      ((Truncated.inclusion n).op ‚ãô X) := RightExtension.mk _ (ùüô _)\n\n"}
{"name":"CategoryTheory.SimplicialObject.Truncated.rightExtensionInclusion_right_as","module":"Mathlib.AlgebraicTopology.SimplicialObject.Coskeletal","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX : CategoryTheory.SimplicialObject C\nn : Nat\n‚ä¢ Eq (CategoryTheory.SimplicialObject.Truncated.rightExtensionInclusion X n).right.as PUnit.unit","decl":"/-- The identity natural transformation exhibits a simplicial set as a right extension of its\nrestriction along `(Truncated.inclusion n).op`.-/\n@[simps!]\ndef rightExtensionInclusion :\n    RightExtension (Truncated.inclusion n).op\n      ((Truncated.inclusion n).op ‚ãô X) := RightExtension.mk _ (ùüô _)\n\n"}
{"name":"CategoryTheory.SimplicialObject.Truncated.rightExtensionInclusion_left","module":"Mathlib.AlgebraicTopology.SimplicialObject.Coskeletal","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX : CategoryTheory.SimplicialObject C\nn : Nat\n‚ä¢ Eq (CategoryTheory.SimplicialObject.Truncated.rightExtensionInclusion X n).left X","decl":"/-- The identity natural transformation exhibits a simplicial set as a right extension of its\nrestriction along `(Truncated.inclusion n).op`.-/\n@[simps!]\ndef rightExtensionInclusion :\n    RightExtension (Truncated.inclusion n).op\n      ((Truncated.inclusion n).op ‚ãô X) := RightExtension.mk _ (ùüô _)\n\n"}
{"name":"CategoryTheory.SimplicialObject.IsCoskeletal.isRightKanExtension","module":"Mathlib.AlgebraicTopology.SimplicialObject.Coskeletal","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX : CategoryTheory.SimplicialObject C\nn : Nat\nself : X.IsCoskeletal n\n‚ä¢ CategoryTheory.Functor.IsRightKanExtension X (CategoryTheory.CategoryStruct.id ((SimplexCategory.Truncated.inclusion n).op.comp X))","decl":"/-- A simplicial object `X` is `n`-coskeletal when it is the right Kan extension of its restriction\nalong `(Truncated.inclusion n).op` via the identity natural transformation. -/\n@[mk_iff]\nclass IsCoskeletal : Prop where\n  isRightKanExtension : IsRightKanExtension X (ùüô ((Truncated.inclusion n).op ‚ãô X))\n\n"}
{"name":"CategoryTheory.SimplicialObject.isCoskeletal_iff","module":"Mathlib.AlgebraicTopology.SimplicialObject.Coskeletal","initialProofState":"C : Type u\ninst‚úù : CategoryTheory.Category.{v, u} C\nX : CategoryTheory.SimplicialObject C\nn : Nat\n‚ä¢ Iff (X.IsCoskeletal n) (CategoryTheory.Functor.IsRightKanExtension X (CategoryTheory.CategoryStruct.id ((SimplexCategory.Truncated.inclusion n).op.comp X)))","decl":"/-- A simplicial object `X` is `n`-coskeletal when it is the right Kan extension of its restriction\nalong `(Truncated.inclusion n).op` via the identity natural transformation. -/\n@[mk_iff]\nclass IsCoskeletal : Prop where\n  isRightKanExtension : IsRightKanExtension X (ùüô ((Truncated.inclusion n).op ‚ãô X))\n\n"}
{"name":"CategoryTheory.SimplicialObject.isCoskeletal_iff_isIso","module":"Mathlib.AlgebraicTopology.SimplicialObject.Coskeletal","initialProofState":"C : Type u\ninst‚úù¬π : CategoryTheory.Category.{v, u} C\nX : CategoryTheory.SimplicialObject C\nn : Nat\ninst‚úù : ‚àÄ (F : CategoryTheory.Functor (Opposite (SimplexCategory.Truncated n)) C), (SimplexCategory.Truncated.inclusion n).op.HasRightKanExtension F\n‚ä¢ Iff (X.IsCoskeletal n) (CategoryTheory.IsIso ((CategoryTheory.SimplicialObject.coskAdj n).unit.app X))","decl":"theorem isCoskeletal_iff_isIso : X.IsCoskeletal n ‚Üî IsIso ((coskAdj n).unit.app X) := by\n  rw [isCoskeletal_iff]\n  exact isRightKanExtension_iff_isIso ((coskAdj n).unit.app X)\n    ((coskAdj n).counit.app _) (ùüô _) ((coskAdj n).left_triangle_components X)\n\n"}
{"name":"CategoryTheory.SimplicialObject.instIsIsoAppUnitTruncatedCoskAdj","module":"Mathlib.AlgebraicTopology.SimplicialObject.Coskeletal","initialProofState":"C : Type u\ninst‚úù¬≤ : CategoryTheory.Category.{v, u} C\nX : CategoryTheory.SimplicialObject C\nn : Nat\ninst‚úù¬π : ‚àÄ (F : CategoryTheory.Functor (Opposite (SimplexCategory.Truncated n)) C), (SimplexCategory.Truncated.inclusion n).op.HasRightKanExtension F\ninst‚úù : X.IsCoskeletal n\n‚ä¢ CategoryTheory.IsIso ((CategoryTheory.SimplicialObject.coskAdj n).unit.app X)","decl":"instance [X.IsCoskeletal n] : IsIso ((coskAdj n).unit.app X) := by\n  rw [‚Üê isCoskeletal_iff_isIso]\n  infer_instance\n\n"}
{"name":"CategoryTheory.SimplicialObject.isoCoskOfIsCoskeletal_hom","module":"Mathlib.AlgebraicTopology.SimplicialObject.Coskeletal","initialProofState":"C : Type u\ninst‚úù¬≤ : CategoryTheory.Category.{v, u} C\nX : CategoryTheory.SimplicialObject C\nn : Nat\ninst‚úù¬π : ‚àÄ (F : CategoryTheory.Functor (Opposite (SimplexCategory.Truncated n)) C), (SimplexCategory.Truncated.inclusion n).op.HasRightKanExtension F\ninst‚úù : X.IsCoskeletal n\n‚ä¢ Eq (X.isoCoskOfIsCoskeletal n).hom ((CategoryTheory.SimplicialObject.coskAdj n).unit.app X)","decl":"/-- The canonical isomorphism `X ‚âÖ (cosk n).obj X` defined when `X` is coskeletal and the\n`n`-coskeleton functor exists.-/\n@[simps! hom]\nnoncomputable def isoCoskOfIsCoskeletal [X.IsCoskeletal n] : X ‚âÖ (cosk n).obj X :=\n  asIso ((coskAdj n).unit.app X)\n\n"}
