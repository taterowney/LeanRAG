{"name":"Asymptotics.SuperpolynomialDecay.congr'","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f g : α → β\ninst✝¹ : TopologicalSpace β\ninst✝ : CommSemiring β\nhf : Asymptotics.SuperpolynomialDecay l k f\nhfg : l.EventuallyEq f g\n⊢ Asymptotics.SuperpolynomialDecay l k g","decl":"theorem SuperpolynomialDecay.congr' (hf : SuperpolynomialDecay l k f) (hfg : f =ᶠ[l] g) :\n    SuperpolynomialDecay l k g := fun z =>\n  (hf z).congr' (EventuallyEq.mul (EventuallyEq.refl l _) hfg)\n\n"}
{"name":"Asymptotics.SuperpolynomialDecay.congr","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f g : α → β\ninst✝¹ : TopologicalSpace β\ninst✝ : CommSemiring β\nhf : Asymptotics.SuperpolynomialDecay l k f\nhfg : ∀ (x : α), Eq (f x) (g x)\n⊢ Asymptotics.SuperpolynomialDecay l k g","decl":"theorem SuperpolynomialDecay.congr (hf : SuperpolynomialDecay l k f) (hfg : ∀ x, f x = g x) :\n    SuperpolynomialDecay l k g := fun z =>\n  (hf z).congr fun x => (congr_arg fun a => k x ^ z * a) <| hfg x\n\n"}
{"name":"Asymptotics.superpolynomialDecay_zero","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝¹ : TopologicalSpace β\ninst✝ : CommSemiring β\nl : Filter α\nk : α → β\n⊢ Asymptotics.SuperpolynomialDecay l k 0","decl":"@[simp]\ntheorem superpolynomialDecay_zero (l : Filter α) (k : α → β) : SuperpolynomialDecay l k 0 :=\n  fun z => by simpa only [Pi.zero_apply, mul_zero] using tendsto_const_nhds\n\n"}
{"name":"Asymptotics.SuperpolynomialDecay.add","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f g : α → β\ninst✝² : TopologicalSpace β\ninst✝¹ : CommSemiring β\ninst✝ : ContinuousAdd β\nhf : Asymptotics.SuperpolynomialDecay l k f\nhg : Asymptotics.SuperpolynomialDecay l k g\n⊢ Asymptotics.SuperpolynomialDecay l k (HAdd.hAdd f g)","decl":"theorem SuperpolynomialDecay.add [ContinuousAdd β] (hf : SuperpolynomialDecay l k f)\n    (hg : SuperpolynomialDecay l k g) : SuperpolynomialDecay l k (f + g) := fun z => by\n  simpa only [mul_add, add_zero, Pi.add_apply] using (hf z).add (hg z)\n\n"}
{"name":"Asymptotics.SuperpolynomialDecay.mul","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f g : α → β\ninst✝² : TopologicalSpace β\ninst✝¹ : CommSemiring β\ninst✝ : ContinuousMul β\nhf : Asymptotics.SuperpolynomialDecay l k f\nhg : Asymptotics.SuperpolynomialDecay l k g\n⊢ Asymptotics.SuperpolynomialDecay l k (HMul.hMul f g)","decl":"theorem SuperpolynomialDecay.mul [ContinuousMul β] (hf : SuperpolynomialDecay l k f)\n    (hg : SuperpolynomialDecay l k g) : SuperpolynomialDecay l k (f * g) := fun z => by\n  simpa only [mul_assoc, one_mul, mul_zero, pow_zero] using (hf z).mul (hg 0)\n\n"}
{"name":"Asymptotics.SuperpolynomialDecay.mul_const","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f : α → β\ninst✝² : TopologicalSpace β\ninst✝¹ : CommSemiring β\ninst✝ : ContinuousMul β\nhf : Asymptotics.SuperpolynomialDecay l k f\nc : β\n⊢ Asymptotics.SuperpolynomialDecay l k fun n => HMul.hMul (f n) c","decl":"theorem SuperpolynomialDecay.mul_const [ContinuousMul β] (hf : SuperpolynomialDecay l k f) (c : β) :\n    SuperpolynomialDecay l k fun n => f n * c := fun z => by\n  simpa only [← mul_assoc, zero_mul] using Tendsto.mul_const c (hf z)\n\n"}
{"name":"Asymptotics.SuperpolynomialDecay.const_mul","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f : α → β\ninst✝² : TopologicalSpace β\ninst✝¹ : CommSemiring β\ninst✝ : ContinuousMul β\nhf : Asymptotics.SuperpolynomialDecay l k f\nc : β\n⊢ Asymptotics.SuperpolynomialDecay l k fun n => HMul.hMul c (f n)","decl":"theorem SuperpolynomialDecay.const_mul [ContinuousMul β] (hf : SuperpolynomialDecay l k f) (c : β) :\n    SuperpolynomialDecay l k fun n => c * f n :=\n  (hf.mul_const c).congr fun _ => mul_comm _ _\n\n"}
{"name":"Asymptotics.SuperpolynomialDecay.param_mul","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f : α → β\ninst✝¹ : TopologicalSpace β\ninst✝ : CommSemiring β\nhf : Asymptotics.SuperpolynomialDecay l k f\n⊢ Asymptotics.SuperpolynomialDecay l k (HMul.hMul k f)","decl":"theorem SuperpolynomialDecay.param_mul (hf : SuperpolynomialDecay l k f) :\n    SuperpolynomialDecay l k (k * f) := fun z =>\n  tendsto_nhds.2 fun s hs hs0 =>\n    l.sets_of_superset ((tendsto_nhds.1 (hf <| z + 1)) s hs hs0) fun x hx => by\n      simpa only [Set.mem_preimage, Pi.mul_apply, ← mul_assoc, ← pow_succ] using hx\n\n"}
{"name":"Asymptotics.SuperpolynomialDecay.mul_param","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f : α → β\ninst✝¹ : TopologicalSpace β\ninst✝ : CommSemiring β\nhf : Asymptotics.SuperpolynomialDecay l k f\n⊢ Asymptotics.SuperpolynomialDecay l k (HMul.hMul f k)","decl":"theorem SuperpolynomialDecay.mul_param (hf : SuperpolynomialDecay l k f) :\n    SuperpolynomialDecay l k (f * k) :=\n  hf.param_mul.congr fun _ => mul_comm _ _\n\n"}
{"name":"Asymptotics.SuperpolynomialDecay.param_pow_mul","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f : α → β\ninst✝¹ : TopologicalSpace β\ninst✝ : CommSemiring β\nhf : Asymptotics.SuperpolynomialDecay l k f\nn : Nat\n⊢ Asymptotics.SuperpolynomialDecay l k (HMul.hMul (HPow.hPow k n) f)","decl":"theorem SuperpolynomialDecay.param_pow_mul (hf : SuperpolynomialDecay l k f) (n : ℕ) :\n    SuperpolynomialDecay l k (k ^ n * f) := by\n  induction n with\n  | zero => simpa only [one_mul, pow_zero] using hf\n  | succ n hn => simpa only [pow_succ', mul_assoc] using hn.param_mul\n\n"}
{"name":"Asymptotics.SuperpolynomialDecay.mul_param_pow","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f : α → β\ninst✝¹ : TopologicalSpace β\ninst✝ : CommSemiring β\nhf : Asymptotics.SuperpolynomialDecay l k f\nn : Nat\n⊢ Asymptotics.SuperpolynomialDecay l k (HMul.hMul f (HPow.hPow k n))","decl":"theorem SuperpolynomialDecay.mul_param_pow (hf : SuperpolynomialDecay l k f) (n : ℕ) :\n    SuperpolynomialDecay l k (f * k ^ n) :=\n  (hf.param_pow_mul n).congr fun _ => mul_comm _ _\n\n"}
{"name":"Asymptotics.SuperpolynomialDecay.polynomial_mul","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f : α → β\ninst✝³ : TopologicalSpace β\ninst✝² : CommSemiring β\ninst✝¹ : ContinuousAdd β\ninst✝ : ContinuousMul β\nhf : Asymptotics.SuperpolynomialDecay l k f\np : Polynomial β\n⊢ Asymptotics.SuperpolynomialDecay l k fun x => HMul.hMul (Polynomial.eval (k x) p) (f x)","decl":"theorem SuperpolynomialDecay.polynomial_mul [ContinuousAdd β] [ContinuousMul β]\n    (hf : SuperpolynomialDecay l k f) (p : β[X]) :\n    SuperpolynomialDecay l k fun x => (p.eval <| k x) * f x :=\n  Polynomial.induction_on' p (fun p q hp hq => by simpa [add_mul] using hp.add hq) fun n c => by\n    simpa [mul_assoc] using (hf.param_pow_mul n).const_mul c\n\n"}
{"name":"Asymptotics.SuperpolynomialDecay.mul_polynomial","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f : α → β\ninst✝³ : TopologicalSpace β\ninst✝² : CommSemiring β\ninst✝¹ : ContinuousAdd β\ninst✝ : ContinuousMul β\nhf : Asymptotics.SuperpolynomialDecay l k f\np : Polynomial β\n⊢ Asymptotics.SuperpolynomialDecay l k fun x => HMul.hMul (f x) (Polynomial.eval (k x) p)","decl":"theorem SuperpolynomialDecay.mul_polynomial [ContinuousAdd β] [ContinuousMul β]\n    (hf : SuperpolynomialDecay l k f) (p : β[X]) :\n    SuperpolynomialDecay l k fun x => f x * (p.eval <| k x) :=\n  (hf.polynomial_mul p).congr fun _ => mul_comm _ _\n\n"}
{"name":"Asymptotics.SuperpolynomialDecay.trans_eventuallyLE","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f g g' : α → β\ninst✝² : TopologicalSpace β\ninst✝¹ : OrderedCommSemiring β\ninst✝ : OrderTopology β\nhk : l.EventuallyLE 0 k\nhg : Asymptotics.SuperpolynomialDecay l k g\nhg' : Asymptotics.SuperpolynomialDecay l k g'\nhfg : l.EventuallyLE g f\nhfg' : l.EventuallyLE f g'\n⊢ Asymptotics.SuperpolynomialDecay l k f","decl":"theorem SuperpolynomialDecay.trans_eventuallyLE (hk : 0 ≤ᶠ[l] k) (hg : SuperpolynomialDecay l k g)\n    (hg' : SuperpolynomialDecay l k g') (hfg : g ≤ᶠ[l] f) (hfg' : f ≤ᶠ[l] g') :\n    SuperpolynomialDecay l k f := fun z =>\n  tendsto_of_tendsto_of_tendsto_of_le_of_le' (hg z) (hg' z)\n    (hfg.mp (hk.mono fun _ hx hx' => mul_le_mul_of_nonneg_left hx' (pow_nonneg hx z)))\n    (hfg'.mp (hk.mono fun _ hx hx' => mul_le_mul_of_nonneg_left hx' (pow_nonneg hx z)))\n\n"}
{"name":"Asymptotics.superpolynomialDecay_iff_abs_tendsto_zero","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f : α → β\ninst✝² : TopologicalSpace β\ninst✝¹ : LinearOrderedCommRing β\ninst✝ : OrderTopology β\n⊢ Iff (Asymptotics.SuperpolynomialDecay l k f) (∀ (n : Nat), Filter.Tendsto (fun a => abs (HMul.hMul (HPow.hPow (k a) n) (f a))) l (nhds 0))","decl":"theorem superpolynomialDecay_iff_abs_tendsto_zero :\n    SuperpolynomialDecay l k f ↔ ∀ n : ℕ, Tendsto (fun a : α => |k a ^ n * f a|) l (𝓝 0) :=\n  ⟨fun h z => (tendsto_zero_iff_abs_tendsto_zero _).1 (h z), fun h z =>\n    (tendsto_zero_iff_abs_tendsto_zero _).2 (h z)⟩\n\n"}
{"name":"Asymptotics.superpolynomialDecay_iff_superpolynomialDecay_abs","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f : α → β\ninst✝² : TopologicalSpace β\ninst✝¹ : LinearOrderedCommRing β\ninst✝ : OrderTopology β\n⊢ Iff (Asymptotics.SuperpolynomialDecay l k f) (Asymptotics.SuperpolynomialDecay l (fun a => abs (k a)) fun a => abs (f a))","decl":"theorem superpolynomialDecay_iff_superpolynomialDecay_abs :\n    SuperpolynomialDecay l k f ↔ SuperpolynomialDecay l (fun a => |k a|) fun a => |f a| :=\n  (superpolynomialDecay_iff_abs_tendsto_zero l k f).trans\n    (by simp_rw [SuperpolynomialDecay, abs_mul, abs_pow])\n\n"}
{"name":"Asymptotics.SuperpolynomialDecay.trans_eventually_abs_le","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f g : α → β\ninst✝² : TopologicalSpace β\ninst✝¹ : LinearOrderedCommRing β\ninst✝ : OrderTopology β\nhf : Asymptotics.SuperpolynomialDecay l k f\nhfg : l.EventuallyLE (Function.comp abs g) (Function.comp abs f)\n⊢ Asymptotics.SuperpolynomialDecay l k g","decl":"theorem SuperpolynomialDecay.trans_eventually_abs_le (hf : SuperpolynomialDecay l k f)\n    (hfg : abs ∘ g ≤ᶠ[l] abs ∘ f) : SuperpolynomialDecay l k g := by\n  rw [superpolynomialDecay_iff_abs_tendsto_zero] at hf ⊢\n  refine fun z =>\n    tendsto_of_tendsto_of_tendsto_of_le_of_le' tendsto_const_nhds (hf z)\n      (Eventually.of_forall fun x => abs_nonneg _) (hfg.mono fun x hx => ?_)\n  calc\n    |k x ^ z * g x| = |k x ^ z| * |g x| := abs_mul (k x ^ z) (g x)\n    _ ≤ |k x ^ z| * |f x| := by gcongr _ * ?_; exact hx\n    _ = |k x ^ z * f x| := (abs_mul (k x ^ z) (f x)).symm\n\n"}
{"name":"Asymptotics.SuperpolynomialDecay.trans_abs_le","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f g : α → β\ninst✝² : TopologicalSpace β\ninst✝¹ : LinearOrderedCommRing β\ninst✝ : OrderTopology β\nhf : Asymptotics.SuperpolynomialDecay l k f\nhfg : ∀ (x : α), LE.le (abs (g x)) (abs (f x))\n⊢ Asymptotics.SuperpolynomialDecay l k g","decl":"theorem SuperpolynomialDecay.trans_abs_le (hf : SuperpolynomialDecay l k f)\n    (hfg : ∀ x, |g x| ≤ |f x|) : SuperpolynomialDecay l k g :=\n  hf.trans_eventually_abs_le (Eventually.of_forall hfg)\n\n"}
{"name":"Asymptotics.superpolynomialDecay_mul_const_iff","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f : α → β\ninst✝² : TopologicalSpace β\ninst✝¹ : Field β\ninst✝ : ContinuousMul β\nc : β\nhc0 : Ne c 0\n⊢ Iff (Asymptotics.SuperpolynomialDecay l k fun n => HMul.hMul (f n) c) (Asymptotics.SuperpolynomialDecay l k f)","decl":"theorem superpolynomialDecay_mul_const_iff [ContinuousMul β] {c : β} (hc0 : c ≠ 0) :\n    (SuperpolynomialDecay l k fun n => f n * c) ↔ SuperpolynomialDecay l k f :=\n  ⟨fun h => (h.mul_const c⁻¹).congr fun x => by simp [mul_assoc, mul_inv_cancel₀ hc0], fun h =>\n    h.mul_const c⟩\n\n"}
{"name":"Asymptotics.superpolynomialDecay_const_mul_iff","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f : α → β\ninst✝² : TopologicalSpace β\ninst✝¹ : Field β\ninst✝ : ContinuousMul β\nc : β\nhc0 : Ne c 0\n⊢ Iff (Asymptotics.SuperpolynomialDecay l k fun n => HMul.hMul c (f n)) (Asymptotics.SuperpolynomialDecay l k f)","decl":"theorem superpolynomialDecay_const_mul_iff [ContinuousMul β] {c : β} (hc0 : c ≠ 0) :\n    (SuperpolynomialDecay l k fun n => c * f n) ↔ SuperpolynomialDecay l k f :=\n  ⟨fun h => (h.const_mul c⁻¹).congr fun x => by simp [← mul_assoc, inv_mul_cancel₀ hc0], fun h =>\n    h.const_mul c⟩\n\n"}
{"name":"Asymptotics.superpolynomialDecay_iff_abs_isBoundedUnder","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f : α → β\ninst✝² : TopologicalSpace β\ninst✝¹ : LinearOrderedField β\ninst✝ : OrderTopology β\nhk : Filter.Tendsto k l Filter.atTop\n⊢ Iff (Asymptotics.SuperpolynomialDecay l k f) (∀ (z : Nat), Filter.IsBoundedUnder (fun x1 x2 => LE.le x1 x2) l fun a => abs (HMul.hMul (HPow.hPow (k a) z) (f a)))","decl":"theorem superpolynomialDecay_iff_abs_isBoundedUnder (hk : Tendsto k l atTop) :\n    SuperpolynomialDecay l k f ↔\n    ∀ z : ℕ, IsBoundedUnder (· ≤ ·) l fun a : α => |k a ^ z * f a| := by\n  refine\n    ⟨fun h z => Tendsto.isBoundedUnder_le (Tendsto.abs (h z)), fun h =>\n      (superpolynomialDecay_iff_abs_tendsto_zero l k f).2 fun z => ?_⟩\n  obtain ⟨m, hm⟩ := h (z + 1)\n  have h1 : Tendsto (fun _ : α => (0 : β)) l (𝓝 0) := tendsto_const_nhds\n  have h2 : Tendsto (fun a : α => |(k a)⁻¹| * m) l (𝓝 0) :=\n    zero_mul m ▸\n      Tendsto.mul_const m ((tendsto_zero_iff_abs_tendsto_zero _).1 hk.inv_tendsto_atTop)\n  refine\n    tendsto_of_tendsto_of_tendsto_of_le_of_le' h1 h2 (Eventually.of_forall fun x => abs_nonneg _)\n      ((eventually_map.1 hm).mp ?_)\n  refine (hk.eventually_ne_atTop 0).mono fun x hk0 hx => ?_\n  refine Eq.trans_le ?_ (mul_le_mul_of_nonneg_left hx <| abs_nonneg (k x)⁻¹)\n  rw [← abs_mul, ← mul_assoc, pow_succ', ← mul_assoc, inv_mul_cancel₀ hk0, one_mul]\n\n"}
{"name":"Asymptotics.superpolynomialDecay_iff_zpow_tendsto_zero","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f : α → β\ninst✝² : TopologicalSpace β\ninst✝¹ : LinearOrderedField β\ninst✝ : OrderTopology β\nhk : Filter.Tendsto k l Filter.atTop\n⊢ Iff (Asymptotics.SuperpolynomialDecay l k f) (∀ (z : Int), Filter.Tendsto (fun a => HMul.hMul (HPow.hPow (k a) z) (f a)) l (nhds 0))","decl":"theorem superpolynomialDecay_iff_zpow_tendsto_zero (hk : Tendsto k l atTop) :\n    SuperpolynomialDecay l k f ↔ ∀ z : ℤ, Tendsto (fun a : α => k a ^ z * f a) l (𝓝 0) := by\n  refine ⟨fun h z => ?_, fun h n => by simpa only [zpow_natCast] using h (n : ℤ)⟩\n  by_cases hz : 0 ≤ z\n  · unfold Tendsto\n    lift z to ℕ using hz\n    simpa using h z\n  · have : Tendsto (fun a => k a ^ z) l (𝓝 0) :=\n      Tendsto.comp (tendsto_zpow_atTop_zero (not_le.1 hz)) hk\n    have h : Tendsto f l (𝓝 0) := by simpa using h 0\n    exact zero_mul (0 : β) ▸ this.mul h\n\n"}
{"name":"Asymptotics.SuperpolynomialDecay.param_zpow_mul","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f : α → β\ninst✝² : TopologicalSpace β\ninst✝¹ : LinearOrderedField β\ninst✝ : OrderTopology β\nhk : Filter.Tendsto k l Filter.atTop\nhf : Asymptotics.SuperpolynomialDecay l k f\nz : Int\n⊢ Asymptotics.SuperpolynomialDecay l k fun a => HMul.hMul (HPow.hPow (k a) z) (f a)","decl":"theorem SuperpolynomialDecay.param_zpow_mul (hk : Tendsto k l atTop)\n    (hf : SuperpolynomialDecay l k f) (z : ℤ) :\n    SuperpolynomialDecay l k fun a => k a ^ z * f a := by\n  rw [superpolynomialDecay_iff_zpow_tendsto_zero _ hk] at hf ⊢\n  refine fun z' => (hf <| z' + z).congr' ((hk.eventually_ne_atTop 0).mono fun x hx => ?_)\n  simp [zpow_add₀ hx, mul_assoc, Pi.mul_apply]\n\n"}
{"name":"Asymptotics.SuperpolynomialDecay.mul_param_zpow","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f : α → β\ninst✝² : TopologicalSpace β\ninst✝¹ : LinearOrderedField β\ninst✝ : OrderTopology β\nhk : Filter.Tendsto k l Filter.atTop\nhf : Asymptotics.SuperpolynomialDecay l k f\nz : Int\n⊢ Asymptotics.SuperpolynomialDecay l k fun a => HMul.hMul (f a) (HPow.hPow (k a) z)","decl":"theorem SuperpolynomialDecay.mul_param_zpow (hk : Tendsto k l atTop)\n    (hf : SuperpolynomialDecay l k f) (z : ℤ) : SuperpolynomialDecay l k fun a => f a * k a ^ z :=\n  (hf.param_zpow_mul hk z).congr fun _ => mul_comm _ _\n\n"}
{"name":"Asymptotics.SuperpolynomialDecay.inv_param_mul","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f : α → β\ninst✝² : TopologicalSpace β\ninst✝¹ : LinearOrderedField β\ninst✝ : OrderTopology β\nhk : Filter.Tendsto k l Filter.atTop\nhf : Asymptotics.SuperpolynomialDecay l k f\n⊢ Asymptotics.SuperpolynomialDecay l k (HMul.hMul (Inv.inv k) f)","decl":"theorem SuperpolynomialDecay.inv_param_mul (hk : Tendsto k l atTop)\n    (hf : SuperpolynomialDecay l k f) : SuperpolynomialDecay l k (k⁻¹ * f) := by\n  simpa using hf.param_zpow_mul hk (-1)\n\n"}
{"name":"Asymptotics.SuperpolynomialDecay.param_inv_mul","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f : α → β\ninst✝² : TopologicalSpace β\ninst✝¹ : LinearOrderedField β\ninst✝ : OrderTopology β\nhk : Filter.Tendsto k l Filter.atTop\nhf : Asymptotics.SuperpolynomialDecay l k f\n⊢ Asymptotics.SuperpolynomialDecay l k (HMul.hMul f (Inv.inv k))","decl":"theorem SuperpolynomialDecay.param_inv_mul (hk : Tendsto k l atTop)\n    (hf : SuperpolynomialDecay l k f) : SuperpolynomialDecay l k (f * k⁻¹) :=\n  (hf.inv_param_mul hk).congr fun _ => mul_comm _ _\n\n"}
{"name":"Asymptotics.superpolynomialDecay_param_mul_iff","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f : α → β\ninst✝² : TopologicalSpace β\ninst✝¹ : LinearOrderedField β\ninst✝ : OrderTopology β\nhk : Filter.Tendsto k l Filter.atTop\n⊢ Iff (Asymptotics.SuperpolynomialDecay l k (HMul.hMul k f)) (Asymptotics.SuperpolynomialDecay l k f)","decl":"theorem superpolynomialDecay_param_mul_iff (hk : Tendsto k l atTop) :\n    SuperpolynomialDecay l k (k * f) ↔ SuperpolynomialDecay l k f :=\n  ⟨fun h =>\n    (h.inv_param_mul hk).congr'\n      ((hk.eventually_ne_atTop 0).mono fun x hx => by simp [← mul_assoc, inv_mul_cancel₀ hx]),\n    fun h => h.param_mul⟩\n\n"}
{"name":"Asymptotics.superpolynomialDecay_mul_param_iff","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f : α → β\ninst✝² : TopologicalSpace β\ninst✝¹ : LinearOrderedField β\ninst✝ : OrderTopology β\nhk : Filter.Tendsto k l Filter.atTop\n⊢ Iff (Asymptotics.SuperpolynomialDecay l k (HMul.hMul f k)) (Asymptotics.SuperpolynomialDecay l k f)","decl":"theorem superpolynomialDecay_mul_param_iff (hk : Tendsto k l atTop) :\n    SuperpolynomialDecay l k (f * k) ↔ SuperpolynomialDecay l k f := by\n  simpa [mul_comm k] using superpolynomialDecay_param_mul_iff f hk\n\n"}
{"name":"Asymptotics.superpolynomialDecay_param_pow_mul_iff","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f : α → β\ninst✝² : TopologicalSpace β\ninst✝¹ : LinearOrderedField β\ninst✝ : OrderTopology β\nhk : Filter.Tendsto k l Filter.atTop\nn : Nat\n⊢ Iff (Asymptotics.SuperpolynomialDecay l k (HMul.hMul (HPow.hPow k n) f)) (Asymptotics.SuperpolynomialDecay l k f)","decl":"theorem superpolynomialDecay_param_pow_mul_iff (hk : Tendsto k l atTop) (n : ℕ) :\n    SuperpolynomialDecay l k (k ^ n * f) ↔ SuperpolynomialDecay l k f := by\n  induction n with\n  | zero => simp\n  | succ n hn =>\n    simpa [pow_succ, ← mul_comm k, mul_assoc,\n      superpolynomialDecay_param_mul_iff (k ^ n * f) hk] using hn\n\n"}
{"name":"Asymptotics.superpolynomialDecay_mul_param_pow_iff","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f : α → β\ninst✝² : TopologicalSpace β\ninst✝¹ : LinearOrderedField β\ninst✝ : OrderTopology β\nhk : Filter.Tendsto k l Filter.atTop\nn : Nat\n⊢ Iff (Asymptotics.SuperpolynomialDecay l k (HMul.hMul f (HPow.hPow k n))) (Asymptotics.SuperpolynomialDecay l k f)","decl":"theorem superpolynomialDecay_mul_param_pow_iff (hk : Tendsto k l atTop) (n : ℕ) :\n    SuperpolynomialDecay l k (f * k ^ n) ↔ SuperpolynomialDecay l k f := by\n  simpa [mul_comm f] using superpolynomialDecay_param_pow_mul_iff f hk n\n\n"}
{"name":"Asymptotics.superpolynomialDecay_iff_norm_tendsto_zero","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f : α → β\ninst✝ : NormedLinearOrderedField β\n⊢ Iff (Asymptotics.SuperpolynomialDecay l k f) (∀ (n : Nat), Filter.Tendsto (fun a => Norm.norm (HMul.hMul (HPow.hPow (k a) n) (f a))) l (nhds 0))","decl":"theorem superpolynomialDecay_iff_norm_tendsto_zero :\n    SuperpolynomialDecay l k f ↔ ∀ n : ℕ, Tendsto (fun a : α => ‖k a ^ n * f a‖) l (𝓝 0) :=\n  ⟨fun h z => tendsto_zero_iff_norm_tendsto_zero.1 (h z), fun h z =>\n    tendsto_zero_iff_norm_tendsto_zero.2 (h z)⟩\n\n"}
{"name":"Asymptotics.superpolynomialDecay_iff_superpolynomialDecay_norm","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f : α → β\ninst✝ : NormedLinearOrderedField β\n⊢ Iff (Asymptotics.SuperpolynomialDecay l k f) (Asymptotics.SuperpolynomialDecay l (fun a => Norm.norm (k a)) fun a => Norm.norm (f a))","decl":"theorem superpolynomialDecay_iff_superpolynomialDecay_norm :\n    SuperpolynomialDecay l k f ↔ SuperpolynomialDecay l (fun a => ‖k a‖) fun a => ‖f a‖ :=\n  (superpolynomialDecay_iff_norm_tendsto_zero l k f).trans (by simp [SuperpolynomialDecay])\n\n"}
{"name":"Asymptotics.superpolynomialDecay_iff_isBigO","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f : α → β\ninst✝¹ : NormedLinearOrderedField β\ninst✝ : OrderTopology β\nhk : Filter.Tendsto k l Filter.atTop\n⊢ Iff (Asymptotics.SuperpolynomialDecay l k f) (∀ (z : Int), Asymptotics.IsBigO l f fun a => HPow.hPow (k a) z)","decl":"theorem superpolynomialDecay_iff_isBigO (hk : Tendsto k l atTop) :\n    SuperpolynomialDecay l k f ↔ ∀ z : ℤ, f =O[l] fun a : α => k a ^ z := by\n  refine (superpolynomialDecay_iff_zpow_tendsto_zero f hk).trans ?_\n  have hk0 : ∀ᶠ x in l, k x ≠ 0 := hk.eventually_ne_atTop 0\n  refine ⟨fun h z => ?_, fun h z => ?_⟩\n  · refine isBigO_of_div_tendsto_nhds (hk0.mono fun x hx hxz ↦ absurd hxz (zpow_ne_zero _ hx)) 0 ?_\n    have : (fun a : α => k a ^ z)⁻¹ = fun a : α => k a ^ (-z) := funext fun x => by simp\n    rw [div_eq_mul_inv, mul_comm f, this]\n    exact h (-z)\n  · suffices (fun a : α => k a ^ z * f a) =O[l] fun a : α => (k a)⁻¹ from\n      IsBigO.trans_tendsto this hk.inv_tendsto_atTop\n    refine ((isBigO_refl (fun a => k a ^ z) l).mul (h (-(z + 1)))).trans ?_\n    refine .of_bound' <| hk0.mono fun a ha0 => ?_\n    simp [← zpow_add₀ ha0]\n\n"}
{"name":"Asymptotics.superpolynomialDecay_iff_isLittleO","module":"Mathlib.Analysis.Asymptotics.SuperpolynomialDecay","initialProofState":"α : Type u_1\nβ : Type u_2\nl : Filter α\nk f : α → β\ninst✝¹ : NormedLinearOrderedField β\ninst✝ : OrderTopology β\nhk : Filter.Tendsto k l Filter.atTop\n⊢ Iff (Asymptotics.SuperpolynomialDecay l k f) (∀ (z : Int), Asymptotics.IsLittleO l f fun a => HPow.hPow (k a) z)","decl":"theorem superpolynomialDecay_iff_isLittleO (hk : Tendsto k l atTop) :\n    SuperpolynomialDecay l k f ↔ ∀ z : ℤ, f =o[l] fun a : α => k a ^ z := by\n  refine ⟨fun h z => ?_, fun h => (superpolynomialDecay_iff_isBigO f hk).2 fun z => (h z).isBigO⟩\n  have hk0 : ∀ᶠ x in l, k x ≠ 0 := hk.eventually_ne_atTop 0\n  have : (fun _ : α => (1 : β)) =o[l] k :=\n    isLittleO_of_tendsto' (hk0.mono fun x hkx hkx' => absurd hkx' hkx)\n      (by simpa using hk.inv_tendsto_atTop)\n  have : f =o[l] fun x : α => k x * k x ^ (z - 1) := by\n    simpa using this.mul_isBigO ((superpolynomialDecay_iff_isBigO f hk).1 h <| z - 1)\n  refine this.trans_isBigO <| IsBigO.of_bound' <| hk0.mono fun x hkx => le_of_eq ?_\n  simp [← zpow_one_add₀ hkx]\n\n"}
