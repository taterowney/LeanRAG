{"name":"CommRingCat.epi_iff_tmul_eq_tmul","module":"Mathlib.Algebra.Category.Ring.Epi","initialProofState":"R S : Type u\ninst✝² : CommRing R\ninst✝¹ : CommRing S\ninst✝ : Algebra R S\n⊢ Iff (CategoryTheory.Epi (CommRingCat.ofHom (algebraMap R S))) (∀ (s : S), Eq (TensorProduct.tmul R s 1) (TensorProduct.tmul R 1 s))","decl":"lemma CommRingCat.epi_iff_tmul_eq_tmul {R S : Type u} [CommRing R] [CommRing S] [Algebra R S] :\n    Epi (CommRingCat.ofHom (algebraMap R S)) ↔\n      ∀ s : S, s ⊗ₜ[R] 1 = 1 ⊗ₜ s := by\n  constructor\n  · intro H\n    #adaptation_note /-- https://github.com/leanprover/lean4/pull/6024\n    we need to add `(R := R) (A := S)` in the next line to deal with unification issues. -/\n    have := H.1 (CommRingCat.ofHom <| Algebra.TensorProduct.includeLeftRingHom (R := R))\n      (CommRingCat.ofHom <| (Algebra.TensorProduct.includeRight (R := R) (A := S)).toRingHom)\n      (by ext r; show algebraMap R S r ⊗ₜ 1 = 1 ⊗ₜ algebraMap R S r;\n          simp only [Algebra.algebraMap_eq_smul_one, smul_tmul])\n    exact RingHom.congr_fun (congrArg Hom.hom this)\n  · refine fun H ↦ ⟨fun {T} f g e ↦ ?_⟩\n    letI : Algebra R T := (ofHom (algebraMap R S) ≫ g).hom.toAlgebra\n    let f' : S →ₐ[R] T := ⟨f.hom, RingHom.congr_fun (congrArg Hom.hom e)⟩\n    let g' : S →ₐ[R] T := ⟨g.hom, fun _ ↦ rfl⟩\n    ext s\n    simpa using congr(Algebra.TensorProduct.lift f' g' (fun _ _ ↦ .all _ _) $(H s))\n\n"}
{"name":"RingHom.surjective_of_epi_of_finite","module":"Mathlib.Algebra.Category.Ring.Epi","initialProofState":"R S : CommRingCat\nf : Quiver.Hom R S\ninst✝ : CategoryTheory.Epi f\nh₂ : (CommRingCat.Hom.hom f).Finite\n⊢ Function.Surjective ⇑(CategoryTheory.ConcreteCategory.hom f)","decl":"lemma RingHom.surjective_of_epi_of_finite {R S : CommRingCat} (f : R ⟶ S) [Epi f]\n    (h₂ : RingHom.Finite f.hom) : Function.Surjective f := by\n  algebraize [f.hom]\n  apply RingHom.surjective_of_tmul_eq_tmul_of_finite\n  rwa [← CommRingCat.epi_iff_tmul_eq_tmul]\n\n"}
{"name":"RingHom.surjective_iff_epi_and_finite","module":"Mathlib.Algebra.Category.Ring.Epi","initialProofState":"R S : CommRingCat\nf : Quiver.Hom R S\n⊢ Iff (Function.Surjective ⇑(CategoryTheory.ConcreteCategory.hom f)) (And (CategoryTheory.Epi f) (CommRingCat.Hom.hom f).Finite)","decl":"lemma RingHom.surjective_iff_epi_and_finite {R S : CommRingCat} {f : R ⟶ S} :\n    Function.Surjective f ↔ Epi f ∧ RingHom.Finite f.hom where\n  mp h := ⟨ConcreteCategory.epi_of_surjective f h, .of_surjective f.hom h⟩\n  mpr := fun ⟨_, h⟩ ↦ surjective_of_epi_of_finite f h\n"}
