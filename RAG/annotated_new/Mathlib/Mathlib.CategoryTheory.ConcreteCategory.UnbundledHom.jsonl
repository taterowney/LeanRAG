{"name":"CategoryTheory.UnbundledHom.hom_id","module":"Mathlib.CategoryTheory.ConcreteCategory.UnbundledHom","initialProofState":"c : Type u → Type u\nhom : ⦃α β : Type u⦄ → c α → c β → (α → β) → Prop\nself : CategoryTheory.UnbundledHom hom\nα : Type u\nia : c α\n⊢ hom ia ia id","decl":"/-- A class for unbundled homs used to define a category. `hom` must\ntake two types `α`, `β` and instances of the corresponding structures,\nand return a predicate on `α → β`. -/\nclass UnbundledHom {c : Type u → Type u} (hom : ∀ ⦃α β⦄, c α → c β → (α → β) → Prop) : Prop where\n  hom_id : ∀ {α} (ia : c α), hom ia ia id\n  hom_comp : ∀ {α β γ} {Iα : c α} {Iβ : c β} {Iγ : c γ} {g : β → γ} {f : α → β} (_ : hom Iβ Iγ g)\n      (_ : hom Iα Iβ f), hom Iα Iγ (g ∘ f)\n\n"}
{"name":"CategoryTheory.UnbundledHom.hom_comp","module":"Mathlib.CategoryTheory.ConcreteCategory.UnbundledHom","initialProofState":"c : Type u → Type u\nhom : ⦃α β : Type u⦄ → c α → c β → (α → β) → Prop\nself : CategoryTheory.UnbundledHom hom\nα β γ : Type u\nIα : c α\nIβ : c β\nIγ : c γ\ng : β → γ\nf : α → β\nx✝¹ : hom Iβ Iγ g\nx✝ : hom Iα Iβ f\n⊢ hom Iα Iγ (Function.comp g f)","decl":"/-- A class for unbundled homs used to define a category. `hom` must\ntake two types `α`, `β` and instances of the corresponding structures,\nand return a predicate on `α → β`. -/\nclass UnbundledHom {c : Type u → Type u} (hom : ∀ ⦃α β⦄, c α → c β → (α → β) → Prop) : Prop where\n  hom_id : ∀ {α} (ia : c α), hom ia ia id\n  hom_comp : ∀ {α β γ} {Iα : c α} {Iβ : c β} {Iγ : c γ} {g : β → γ} {f : α → β} (_ : hom Iβ Iγ g)\n      (_ : hom Iα Iβ f), hom Iα Iγ (g ∘ f)\n\n"}
