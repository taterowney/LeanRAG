{"name":"AdicCompletion.transitionMap_ideal_mk","module":"Mathlib.RingTheory.AdicCompletion.Algebra","initialProofState":"R : Type u_1\ninst✝ : CommRing R\nI : Ideal R\nm n : Nat\nhmn : LE.le m n\nx : R\n⊢ Eq ((AdicCompletion.transitionMap I R hmn) ((Ideal.Quotient.mk (HSMul.hSMul (HPow.hPow I n) Top.top)) x)) ((Ideal.Quotient.mk (HSMul.hSMul (HPow.hPow I m) Top.top)) x)","decl":"@[local simp]\ntheorem transitionMap_ideal_mk {m n : ℕ} (hmn : m ≤ n) (x : R) :\n    transitionMap I R hmn (Ideal.Quotient.mk (I ^ n • ⊤ : Ideal R) x) =\n      Ideal.Quotient.mk (I ^ m • ⊤ : Ideal R) x :=\n  rfl\n\n"}
{"name":"AdicCompletion.transitionMap_map_one","module":"Mathlib.RingTheory.AdicCompletion.Algebra","initialProofState":"R : Type u_1\ninst✝ : CommRing R\nI : Ideal R\nm n : Nat\nhmn : LE.le m n\n⊢ Eq ((AdicCompletion.transitionMap I R hmn) 1) 1","decl":"@[local simp]\ntheorem transitionMap_map_one {m n : ℕ} (hmn : m ≤ n) : transitionMap I R hmn 1 = 1 :=\n  rfl\n\n"}
{"name":"AdicCompletion.transitionMap_map_mul","module":"Mathlib.RingTheory.AdicCompletion.Algebra","initialProofState":"R : Type u_1\ninst✝ : CommRing R\nI : Ideal R\nm n : Nat\nhmn : LE.le m n\nx : HasQuotient.Quotient R (HSMul.hSMul (HPow.hPow I n) Top.top)\ny : HasQuotient.Quotient R (HSMul.hSMul (HPow.hPow I n) Top.top)\n⊢ Eq ((AdicCompletion.transitionMap I R hmn) (HMul.hMul x y)) (HMul.hMul ((AdicCompletion.transitionMap I R hmn) x) ((AdicCompletion.transitionMap I R hmn) y))","decl":"@[local simp]\ntheorem transitionMap_map_mul {m n : ℕ} (hmn : m ≤ n) (x y : R ⧸ (I ^ n • ⊤ : Ideal R)) :\n    transitionMap I R hmn (x * y) = transitionMap I R hmn x * transitionMap I R hmn y :=\n  Quotient.inductionOn₂' x y (fun _ _ ↦ rfl)\n\n"}
{"name":"AdicCompletion.transitionMap_map_pow","module":"Mathlib.RingTheory.AdicCompletion.Algebra","initialProofState":"R : Type u_1\ninst✝ : CommRing R\nI : Ideal R\nm n a : Nat\nhmn : LE.le m n\nx : HasQuotient.Quotient R (HSMul.hSMul (HPow.hPow I n) Top.top)\n⊢ Eq ((AdicCompletion.transitionMap I R hmn) (HPow.hPow x a)) (HPow.hPow ((AdicCompletion.transitionMap I R hmn) x) a)","decl":"@[local simp]\ntheorem transitionMap_map_pow {m n a : ℕ} (hmn : m ≤ n) (x : R ⧸ (I ^ n • ⊤ : Ideal R)) :\n    transitionMap I R hmn (x ^ a) = transitionMap I R hmn x ^ a :=\n  Quotient.inductionOn' x (fun _ ↦ rfl)\n\n"}
{"name":"AdicCompletion.val_one","module":"Mathlib.RingTheory.AdicCompletion.Algebra","initialProofState":"R : Type u_1\ninst✝ : CommRing R\nI : Ideal R\nn : Nat\n⊢ Eq (↑1 n) 1","decl":"@[simp]\ntheorem val_one (n : ℕ) : (1 : AdicCompletion I R).val n = 1 :=\n  rfl\n\n"}
{"name":"AdicCompletion.val_mul","module":"Mathlib.RingTheory.AdicCompletion.Algebra","initialProofState":"R : Type u_1\ninst✝ : CommRing R\nI : Ideal R\nn : Nat\nx y : AdicCompletion I R\n⊢ Eq (↑(HMul.hMul x y) n) (HMul.hMul (↑x n) (↑y n))","decl":"@[simp]\ntheorem val_mul (n : ℕ) (x y : AdicCompletion I R) : (x * y).val n = x.val n * y.val n :=\n  rfl\n\n"}
{"name":"AdicCompletion.evalₐ_mk","module":"Mathlib.RingTheory.AdicCompletion.Algebra","initialProofState":"R : Type u_1\ninst✝ : CommRing R\nI : Ideal R\nn : Nat\nx : AdicCompletion.AdicCauchySequence I R\n⊢ Eq ((AdicCompletion.evalₐ I n) ((AdicCompletion.mk I R) x)) ((Ideal.Quotient.mk (HPow.hPow I n)) (↑x n))","decl":"@[simp]\ntheorem evalₐ_mk (n : ℕ) (x : AdicCauchySequence I R) :\n    evalₐ I n (mk I R x) = Ideal.Quotient.mk (I ^ n) (x.val n) := by\n  simp [evalₐ]\n\n"}
{"name":"AdicCompletion.one_apply","module":"Mathlib.RingTheory.AdicCompletion.Algebra","initialProofState":"R : Type u_1\ninst✝ : CommRing R\nI : Ideal R\nn : Nat\n⊢ Eq (↑1 n) 1","decl":"@[simp]\ntheorem one_apply (n : ℕ) : (1 : AdicCauchySequence I R) n = 1 :=\n  rfl\n\n"}
{"name":"AdicCompletion.mul_apply","module":"Mathlib.RingTheory.AdicCompletion.Algebra","initialProofState":"R : Type u_1\ninst✝ : CommRing R\nI : Ideal R\nn : Nat\nf g : AdicCompletion.AdicCauchySequence I R\n⊢ Eq (↑(HMul.hMul f g) n) (HMul.hMul (↑f n) (↑g n))","decl":"@[simp]\ntheorem mul_apply (n : ℕ) (f g : AdicCauchySequence I R) : (f * g) n = f n * g n :=\n  rfl\n\n"}
{"name":"AdicCompletion.mkₐ_apply_coe","module":"Mathlib.RingTheory.AdicCompletion.Algebra","initialProofState":"R : Type u_1\ninst✝ : CommRing R\nI : Ideal R\na : AdicCompletion.AdicCauchySequence I R\nn : Nat\n⊢ Eq (↑((AdicCompletion.mkₐ I) a) n) ((Ideal.Quotient.mk (HSMul.hSMul (HPow.hPow I n) Top.top)) (↑a n))","decl":"/-- The canonical algebra map from adic cauchy sequences to the adic completion. -/\n@[simps!]\ndef mkₐ : AdicCauchySequence I R →ₐ[R] AdicCompletion I R :=\n  AlgHom.ofLinearMap (mk I R) rfl (fun _ _ ↦ rfl)\n\n"}
{"name":"AdicCompletion.evalₐ_mkₐ","module":"Mathlib.RingTheory.AdicCompletion.Algebra","initialProofState":"R : Type u_1\ninst✝ : CommRing R\nI : Ideal R\nn : Nat\nx : AdicCompletion.AdicCauchySequence I R\n⊢ Eq ((AdicCompletion.evalₐ I n) ((AdicCompletion.mkₐ I) x)) ((Ideal.Quotient.mk (HPow.hPow I n)) (↑x n))","decl":"@[simp]\ntheorem evalₐ_mkₐ (n : ℕ) (x : AdicCauchySequence I R) :\n    evalₐ I n (mkₐ I x) = Ideal.Quotient.mk (I ^ n) (x.val n) := by\n  simp [mkₐ]\n\n"}
{"name":"AdicCompletion.Ideal.mk_eq_mk","module":"Mathlib.RingTheory.AdicCompletion.Algebra","initialProofState":"R : Type u_1\ninst✝ : CommRing R\nI : Ideal R\nm n : Nat\nhmn : LE.le m n\nr : AdicCompletion.AdicCauchySequence I R\n⊢ Eq ((Ideal.Quotient.mk (HPow.hPow I m)) (↑r n)) ((Ideal.Quotient.mk (HPow.hPow I m)) (↑r m))","decl":"theorem Ideal.mk_eq_mk {m n : ℕ} (hmn : m ≤ n) (r : AdicCauchySequence I R) :\n    Ideal.Quotient.mk (I ^ m) (r.val n) = Ideal.Quotient.mk (I ^ m) (r.val m) := by\n  have h : I ^ m = I ^ m • ⊤ := by simp\n  rw [h, ← Ideal.Quotient.mk_eq_mk, ← Ideal.Quotient.mk_eq_mk]\n  exact (r.property hmn).symm\n\n"}
{"name":"AdicCompletion.smul_mk","module":"Mathlib.RingTheory.AdicCompletion.Algebra","initialProofState":"R : Type u_1\ninst✝² : CommRing R\nI : Ideal R\nM : Type u_3\ninst✝¹ : AddCommGroup M\ninst✝ : Module R M\nm n : Nat\nhmn : LE.le m n\nr : AdicCompletion.AdicCauchySequence I R\nx : AdicCompletion.AdicCauchySequence I M\n⊢ Eq (HSMul.hSMul (↑r n) (Submodule.Quotient.mk (↑x n))) (HSMul.hSMul (↑r m) (Submodule.Quotient.mk (↑x m)))","decl":"theorem smul_mk {m n : ℕ} (hmn : m ≤ n) (r : AdicCauchySequence I R)\n    (x : AdicCauchySequence I M) :\n    r.val n • Submodule.Quotient.mk (p := (I ^ m • ⊤ : Submodule R M)) (x.val n) =\n      r.val m • Submodule.Quotient.mk (p := (I ^ m • ⊤ : Submodule R M)) (x.val m) := by\n  rw [← Submodule.Quotient.mk_smul, ← Module.Quotient.mk_smul_mk,\n    AdicCauchySequence.mk_eq_mk hmn, Ideal.mk_eq_mk I hmn, Module.Quotient.mk_smul_mk,\n    Submodule.Quotient.mk_smul]\n\n"}
{"name":"AdicCompletion.mk_smul_mk","module":"Mathlib.RingTheory.AdicCompletion.Algebra","initialProofState":"R : Type u_1\ninst✝² : CommRing R\nI : Ideal R\nM : Type u_3\ninst✝¹ : AddCommGroup M\ninst✝ : Module R M\nr : R\nx : M\n⊢ Eq (HSMul.hSMul ((Ideal.Quotient.mk (HSMul.hSMul I Top.top)) r) (Submodule.Quotient.mk x)) (HSMul.hSMul r (Submodule.Quotient.mk x))","decl":"@[local simp]\ntheorem mk_smul_mk (r : R) (x : M) :\n    Ideal.Quotient.mk (I • ⊤) r • Submodule.Quotient.mk (p := (I • ⊤ : Submodule R M)) x\n      = r • Submodule.Quotient.mk (p := (I • ⊤ : Submodule R M)) x :=\n  rfl\n\n"}
{"name":"AdicCompletion.val_smul_eq_evalₐ_smul","module":"Mathlib.RingTheory.AdicCompletion.Algebra","initialProofState":"R : Type u_1\ninst✝² : CommRing R\nI : Ideal R\nM : Type u_3\ninst✝¹ : AddCommGroup M\ninst✝ : Module R M\nn : Nat\nr : AdicCompletion I R\nx : HasQuotient.Quotient M (HSMul.hSMul (HPow.hPow I n) Top.top)\n⊢ Eq (HSMul.hSMul (↑r n) x) (HSMul.hSMul ((AdicCompletion.evalₐ I n) r) x)","decl":"theorem val_smul_eq_evalₐ_smul (n : ℕ) (r : AdicCompletion I R)\n    (x : M ⧸ (I ^ n • ⊤ : Submodule R M)) : r.val n • x = evalₐ I n r • x := by\n  apply induction_on I R r (fun r ↦ ?_)\n  exact Quotient.inductionOn' x (fun x ↦ rfl)\n\n"}
{"name":"AdicCompletion.instIsScalarTowerQuotientIdealHSMulTopSubmodule","module":"Mathlib.RingTheory.AdicCompletion.Algebra","initialProofState":"R : Type u_1\ninst✝² : CommRing R\nI : Ideal R\nM : Type u_3\ninst✝¹ : AddCommGroup M\ninst✝ : Module R M\n⊢ IsScalarTower R (HasQuotient.Quotient R (HSMul.hSMul I Top.top)) (HasQuotient.Quotient M (HSMul.hSMul I Top.top))","decl":"instance : IsScalarTower R (R ⧸ (I • ⊤ : Ideal R)) (M ⧸ (I • ⊤ : Submodule R M)) where\n  smul_assoc r s x := by\n    refine Quotient.inductionOn' s (fun s ↦ ?_)\n    refine Quotient.inductionOn' x (fun x ↦ ?_)\n    simp only [Submodule.Quotient.mk''_eq_mk]\n    rw [← Submodule.Quotient.mk_smul, Ideal.Quotient.mk_eq_mk, mk_smul_mk, smul_assoc]\n    rfl\n\n"}
{"name":"AdicCompletion.smul_eval","module":"Mathlib.RingTheory.AdicCompletion.Algebra","initialProofState":"R : Type u_1\ninst✝² : CommRing R\nI : Ideal R\nM : Type u_3\ninst✝¹ : AddCommGroup M\ninst✝ : Module R M\nn : Nat\nr : AdicCompletion I R\nx : AdicCompletion I M\n⊢ Eq (↑(HSMul.hSMul r x) n) (HSMul.hSMul (↑r n) (↑x n))","decl":"@[simp]\ntheorem smul_eval (n : ℕ) (r : AdicCompletion I R) (x : AdicCompletion I M) :\n    (r • x).val n = r.val n • x.val n :=\n  rfl\n\n"}
{"name":"AdicCompletion.instIsScalarTower_1","module":"Mathlib.RingTheory.AdicCompletion.Algebra","initialProofState":"R : Type u_1\ninst✝² : CommRing R\nI : Ideal R\nM : Type u_3\ninst✝¹ : AddCommGroup M\ninst✝ : Module R M\n⊢ IsScalarTower R (AdicCompletion I R) (AdicCompletion I M)","decl":"instance : IsScalarTower R (AdicCompletion I R) (AdicCompletion I M) where\n  smul_assoc r s x := by\n    ext n\n    rw [smul_eval, val_smul_apply, val_smul_apply, smul_eval, smul_assoc]\n\n"}
