{"name":"CategoryTheory.Limits.hasBinaryProduct_zero_left","module":"Mathlib.CategoryTheory.Limits.Constructions.ZeroObjects","initialProofState":"C : Type u_1\ninst‚úù¬≤ : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroObject C\ninst‚úù : CategoryTheory.Limits.HasZeroMorphisms C\nX : C\n‚ä¢ CategoryTheory.Limits.HasBinaryProduct 0 X","decl":"instance hasBinaryProduct_zero_left (X : C) : HasBinaryProduct (0 : C) X :=\n  HasLimit.mk ‚ü®_, binaryFanZeroLeftIsLimit X‚ü©\n\n"}
{"name":"CategoryTheory.Limits.zeroProdIso_hom","module":"Mathlib.CategoryTheory.Limits.Constructions.ZeroObjects","initialProofState":"C : Type u_1\ninst‚úù¬≤ : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroObject C\ninst‚úù : CategoryTheory.Limits.HasZeroMorphisms C\nX : C\n‚ä¢ Eq (CategoryTheory.Limits.zeroProdIso X).hom CategoryTheory.Limits.prod.snd","decl":"@[simp]\ntheorem zeroProdIso_hom (X : C) : (zeroProdIso X).hom = prod.snd :=\n  rfl\n\n"}
{"name":"CategoryTheory.Limits.zeroProdIso_inv_snd","module":"Mathlib.CategoryTheory.Limits.Constructions.ZeroObjects","initialProofState":"C : Type u_1\ninst‚úù¬≤ : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroObject C\ninst‚úù : CategoryTheory.Limits.HasZeroMorphisms C\nX : C\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Limits.zeroProdIso X).inv CategoryTheory.Limits.prod.snd) (CategoryTheory.CategoryStruct.id X)","decl":"@[simp]\ntheorem zeroProdIso_inv_snd (X : C) : (zeroProdIso X).inv ‚â´ prod.snd = ùüô X := by\n  dsimp [zeroProdIso, binaryFanZeroLeft]\n  simp\n\n"}
{"name":"CategoryTheory.Limits.hasBinaryProduct_zero_right","module":"Mathlib.CategoryTheory.Limits.Constructions.ZeroObjects","initialProofState":"C : Type u_1\ninst‚úù¬≤ : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroObject C\ninst‚úù : CategoryTheory.Limits.HasZeroMorphisms C\nX : C\n‚ä¢ CategoryTheory.Limits.HasBinaryProduct X 0","decl":"instance hasBinaryProduct_zero_right (X : C) : HasBinaryProduct X (0 : C) :=\n  HasLimit.mk ‚ü®_, binaryFanZeroRightIsLimit X‚ü©\n\n"}
{"name":"CategoryTheory.Limits.prodZeroIso_hom","module":"Mathlib.CategoryTheory.Limits.Constructions.ZeroObjects","initialProofState":"C : Type u_1\ninst‚úù¬≤ : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroObject C\ninst‚úù : CategoryTheory.Limits.HasZeroMorphisms C\nX : C\n‚ä¢ Eq (CategoryTheory.Limits.prodZeroIso X).hom CategoryTheory.Limits.prod.fst","decl":"@[simp]\ntheorem prodZeroIso_hom (X : C) : (prodZeroIso X).hom = prod.fst :=\n  rfl\n\n"}
{"name":"CategoryTheory.Limits.prodZeroIso_iso_inv_snd","module":"Mathlib.CategoryTheory.Limits.Constructions.ZeroObjects","initialProofState":"C : Type u_1\ninst‚úù¬≤ : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroObject C\ninst‚úù : CategoryTheory.Limits.HasZeroMorphisms C\nX : C\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Limits.prodZeroIso X).inv CategoryTheory.Limits.prod.fst) (CategoryTheory.CategoryStruct.id X)","decl":"@[simp]\ntheorem prodZeroIso_iso_inv_snd (X : C) : (prodZeroIso X).inv ‚â´ prod.fst = ùüô X := by\n  dsimp [prodZeroIso, binaryFanZeroRight]\n  simp\n\n"}
{"name":"CategoryTheory.Limits.hasBinaryCoproduct_zero_left","module":"Mathlib.CategoryTheory.Limits.Constructions.ZeroObjects","initialProofState":"C : Type u_1\ninst‚úù¬≤ : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroObject C\ninst‚úù : CategoryTheory.Limits.HasZeroMorphisms C\nX : C\n‚ä¢ CategoryTheory.Limits.HasBinaryCoproduct 0 X","decl":"instance hasBinaryCoproduct_zero_left (X : C) : HasBinaryCoproduct (0 : C) X :=\n  HasColimit.mk ‚ü®_, binaryCofanZeroLeftIsColimit X‚ü©\n\n"}
{"name":"CategoryTheory.Limits.inr_zeroCoprodIso_hom","module":"Mathlib.CategoryTheory.Limits.Constructions.ZeroObjects","initialProofState":"C : Type u_1\ninst‚úù¬≤ : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroObject C\ninst‚úù : CategoryTheory.Limits.HasZeroMorphisms C\nX : C\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp CategoryTheory.Limits.coprod.inr (CategoryTheory.Limits.zeroCoprodIso X).hom) (CategoryTheory.CategoryStruct.id X)","decl":"@[simp]\ntheorem inr_zeroCoprodIso_hom (X : C) : coprod.inr ‚â´ (zeroCoprodIso X).hom = ùüô X := by\n  dsimp [zeroCoprodIso, binaryCofanZeroLeft]\n  simp\n\n"}
{"name":"CategoryTheory.Limits.zeroCoprodIso_inv","module":"Mathlib.CategoryTheory.Limits.Constructions.ZeroObjects","initialProofState":"C : Type u_1\ninst‚úù¬≤ : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroObject C\ninst‚úù : CategoryTheory.Limits.HasZeroMorphisms C\nX : C\n‚ä¢ Eq (CategoryTheory.Limits.zeroCoprodIso X).inv CategoryTheory.Limits.coprod.inr","decl":"@[simp]\ntheorem zeroCoprodIso_inv (X : C) : (zeroCoprodIso X).inv = coprod.inr :=\n  rfl\n\n"}
{"name":"CategoryTheory.Limits.hasBinaryCoproduct_zero_right","module":"Mathlib.CategoryTheory.Limits.Constructions.ZeroObjects","initialProofState":"C : Type u_1\ninst‚úù¬≤ : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroObject C\ninst‚úù : CategoryTheory.Limits.HasZeroMorphisms C\nX : C\n‚ä¢ CategoryTheory.Limits.HasBinaryCoproduct X 0","decl":"instance hasBinaryCoproduct_zero_right (X : C) : HasBinaryCoproduct X (0 : C) :=\n  HasColimit.mk ‚ü®_, binaryCofanZeroRightIsColimit X‚ü©\n\n"}
{"name":"CategoryTheory.Limits.inr_coprodZeroIso_hom","module":"Mathlib.CategoryTheory.Limits.Constructions.ZeroObjects","initialProofState":"C : Type u_1\ninst‚úù¬≤ : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroObject C\ninst‚úù : CategoryTheory.Limits.HasZeroMorphisms C\nX : C\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp CategoryTheory.Limits.coprod.inl (CategoryTheory.Limits.coprodZeroIso X).hom) (CategoryTheory.CategoryStruct.id X)","decl":"@[simp]\ntheorem inr_coprodZeroIso_hom (X : C) : coprod.inl ‚â´ (coprodZeroIso X).hom = ùüô X := by\n  dsimp [coprodZeroIso, binaryCofanZeroRight]\n  simp\n\n"}
{"name":"CategoryTheory.Limits.coprodZeroIso_inv","module":"Mathlib.CategoryTheory.Limits.Constructions.ZeroObjects","initialProofState":"C : Type u_1\ninst‚úù¬≤ : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroObject C\ninst‚úù : CategoryTheory.Limits.HasZeroMorphisms C\nX : C\n‚ä¢ Eq (CategoryTheory.Limits.coprodZeroIso X).inv CategoryTheory.Limits.coprod.inl","decl":"@[simp]\ntheorem coprodZeroIso_inv (X : C) : (coprodZeroIso X).inv = coprod.inl :=\n  rfl\n\n"}
{"name":"CategoryTheory.Limits.hasPullback_over_zero","module":"Mathlib.CategoryTheory.Limits.Constructions.ZeroObjects","initialProofState":"C : Type u_1\ninst‚úù¬≥ : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù¬≤ : CategoryTheory.Limits.HasZeroObject C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\nX Y : C\ninst‚úù : CategoryTheory.Limits.HasBinaryProduct X Y\n‚ä¢ CategoryTheory.Limits.HasPullback 0 0","decl":"instance hasPullback_over_zero (X Y : C) [HasBinaryProduct X Y] :\n    HasPullback (0 : X ‚ü∂ 0) (0 : Y ‚ü∂ 0) :=\n  HasLimit.mk\n    ‚ü®_, isPullbackOfIsTerminalIsProduct _ _ _ _ HasZeroObject.zeroIsTerminal (prodIsProd X Y)‚ü©\n\n"}
{"name":"CategoryTheory.Limits.pullbackZeroZeroIso_inv_fst","module":"Mathlib.CategoryTheory.Limits.Constructions.ZeroObjects","initialProofState":"C : Type u_1\ninst‚úù¬≥ : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù¬≤ : CategoryTheory.Limits.HasZeroObject C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\nX Y : C\ninst‚úù : CategoryTheory.Limits.HasBinaryProduct X Y\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Limits.pullbackZeroZeroIso X Y).inv (CategoryTheory.Limits.pullback.fst 0 0)) CategoryTheory.Limits.prod.fst","decl":"@[simp]\ntheorem pullbackZeroZeroIso_inv_fst (X Y : C) [HasBinaryProduct X Y] :\n    (pullbackZeroZeroIso X Y).inv ‚â´ pullback.fst 0 0 = prod.fst := by\n  dsimp [pullbackZeroZeroIso]\n  simp\n\n"}
{"name":"CategoryTheory.Limits.pullbackZeroZeroIso_inv_snd","module":"Mathlib.CategoryTheory.Limits.Constructions.ZeroObjects","initialProofState":"C : Type u_1\ninst‚úù¬≥ : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù¬≤ : CategoryTheory.Limits.HasZeroObject C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\nX Y : C\ninst‚úù : CategoryTheory.Limits.HasBinaryProduct X Y\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Limits.pullbackZeroZeroIso X Y).inv (CategoryTheory.Limits.pullback.snd 0 0)) CategoryTheory.Limits.prod.snd","decl":"@[simp]\ntheorem pullbackZeroZeroIso_inv_snd (X Y : C) [HasBinaryProduct X Y] :\n    (pullbackZeroZeroIso X Y).inv ‚â´ pullback.snd 0 0 = prod.snd := by\n  dsimp [pullbackZeroZeroIso]\n  simp\n\n"}
{"name":"CategoryTheory.Limits.pullbackZeroZeroIso_hom_fst","module":"Mathlib.CategoryTheory.Limits.Constructions.ZeroObjects","initialProofState":"C : Type u_1\ninst‚úù¬≥ : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù¬≤ : CategoryTheory.Limits.HasZeroObject C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\nX Y : C\ninst‚úù : CategoryTheory.Limits.HasBinaryProduct X Y\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Limits.pullbackZeroZeroIso X Y).hom CategoryTheory.Limits.prod.fst) (CategoryTheory.Limits.pullback.fst 0 0)","decl":"@[simp]\ntheorem pullbackZeroZeroIso_hom_fst (X Y : C) [HasBinaryProduct X Y] :\n    (pullbackZeroZeroIso X Y).hom ‚â´ prod.fst = pullback.fst 0 0 := by simp [‚Üê Iso.eq_inv_comp]\n\n"}
{"name":"CategoryTheory.Limits.pullbackZeroZeroIso_hom_snd","module":"Mathlib.CategoryTheory.Limits.Constructions.ZeroObjects","initialProofState":"C : Type u_1\ninst‚úù¬≥ : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù¬≤ : CategoryTheory.Limits.HasZeroObject C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\nX Y : C\ninst‚úù : CategoryTheory.Limits.HasBinaryProduct X Y\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Limits.pullbackZeroZeroIso X Y).hom CategoryTheory.Limits.prod.snd) (CategoryTheory.Limits.pullback.snd 0 0)","decl":"@[simp]\ntheorem pullbackZeroZeroIso_hom_snd (X Y : C) [HasBinaryProduct X Y] :\n    (pullbackZeroZeroIso X Y).hom ‚â´ prod.snd = pullback.snd 0 0 := by simp [‚Üê Iso.eq_inv_comp]\n\n"}
{"name":"CategoryTheory.Limits.hasPushout_over_zero","module":"Mathlib.CategoryTheory.Limits.Constructions.ZeroObjects","initialProofState":"C : Type u_1\ninst‚úù¬≥ : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù¬≤ : CategoryTheory.Limits.HasZeroObject C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\nX Y : C\ninst‚úù : CategoryTheory.Limits.HasBinaryCoproduct X Y\n‚ä¢ CategoryTheory.Limits.HasPushout 0 0","decl":"instance hasPushout_over_zero (X Y : C) [HasBinaryCoproduct X Y] :\n    HasPushout (0 : 0 ‚ü∂ X) (0 : 0 ‚ü∂ Y) :=\n  HasColimit.mk\n    ‚ü®_, isPushoutOfIsInitialIsCoproduct _ _ _ _ HasZeroObject.zeroIsInitial (coprodIsCoprod X Y)‚ü©\n\n"}
{"name":"CategoryTheory.Limits.inl_pushoutZeroZeroIso_hom","module":"Mathlib.CategoryTheory.Limits.Constructions.ZeroObjects","initialProofState":"C : Type u_1\ninst‚úù¬≥ : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù¬≤ : CategoryTheory.Limits.HasZeroObject C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\nX Y : C\ninst‚úù : CategoryTheory.Limits.HasBinaryCoproduct X Y\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Limits.pushout.inl 0 0) (CategoryTheory.Limits.pushoutZeroZeroIso X Y).hom) CategoryTheory.Limits.coprod.inl","decl":"@[simp]\ntheorem inl_pushoutZeroZeroIso_hom (X Y : C) [HasBinaryCoproduct X Y] :\n    pushout.inl _ _ ‚â´ (pushoutZeroZeroIso X Y).hom = coprod.inl := by\n  dsimp [pushoutZeroZeroIso]\n  simp\n\n"}
{"name":"CategoryTheory.Limits.inr_pushoutZeroZeroIso_hom","module":"Mathlib.CategoryTheory.Limits.Constructions.ZeroObjects","initialProofState":"C : Type u_1\ninst‚úù¬≥ : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù¬≤ : CategoryTheory.Limits.HasZeroObject C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\nX Y : C\ninst‚úù : CategoryTheory.Limits.HasBinaryCoproduct X Y\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp (CategoryTheory.Limits.pushout.inr 0 0) (CategoryTheory.Limits.pushoutZeroZeroIso X Y).hom) CategoryTheory.Limits.coprod.inr","decl":"@[simp]\ntheorem inr_pushoutZeroZeroIso_hom (X Y : C) [HasBinaryCoproduct X Y] :\n    pushout.inr _ _ ‚â´ (pushoutZeroZeroIso X Y).hom = coprod.inr := by\n  dsimp [pushoutZeroZeroIso]\n  simp\n\n"}
{"name":"CategoryTheory.Limits.inl_pushoutZeroZeroIso_inv","module":"Mathlib.CategoryTheory.Limits.Constructions.ZeroObjects","initialProofState":"C : Type u_1\ninst‚úù¬≥ : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù¬≤ : CategoryTheory.Limits.HasZeroObject C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\nX Y : C\ninst‚úù : CategoryTheory.Limits.HasBinaryCoproduct X Y\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp CategoryTheory.Limits.coprod.inl (CategoryTheory.Limits.pushoutZeroZeroIso X Y).inv) (CategoryTheory.Limits.pushout.inl 0 0)","decl":"@[simp]\ntheorem inl_pushoutZeroZeroIso_inv (X Y : C) [HasBinaryCoproduct X Y] :\n    coprod.inl ‚â´ (pushoutZeroZeroIso X Y).inv = pushout.inl _ _ := by simp [Iso.comp_inv_eq]\n\n"}
{"name":"CategoryTheory.Limits.inr_pushoutZeroZeroIso_inv","module":"Mathlib.CategoryTheory.Limits.Constructions.ZeroObjects","initialProofState":"C : Type u_1\ninst‚úù¬≥ : CategoryTheory.Category.{u_2, u_1} C\ninst‚úù¬≤ : CategoryTheory.Limits.HasZeroObject C\ninst‚úù¬π : CategoryTheory.Limits.HasZeroMorphisms C\nX Y : C\ninst‚úù : CategoryTheory.Limits.HasBinaryCoproduct X Y\n‚ä¢ Eq (CategoryTheory.CategoryStruct.comp CategoryTheory.Limits.coprod.inr (CategoryTheory.Limits.pushoutZeroZeroIso X Y).inv) (CategoryTheory.Limits.pushout.inr 0 0)","decl":"@[simp]\ntheorem inr_pushoutZeroZeroIso_inv (X Y : C) [HasBinaryCoproduct X Y] :\n    coprod.inr ‚â´ (pushoutZeroZeroIso X Y).inv = pushout.inr _ _ := by simp [Iso.comp_inv_eq]\n\n"}
