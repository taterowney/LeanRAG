{"name":"Measurable.lmarginal","module":"Mathlib.MeasureTheory.Integral.Marginal","initialProofState":"δ : Type u_1\nπ : δ → Type u_3\ninst✝² : (x : δ) → MeasurableSpace (π x)\nμ : (i : δ) → MeasureTheory.Measure (π i)\ninst✝¹ : DecidableEq δ\ns : Finset δ\nf : ((i : δ) → π i) → ENNReal\ninst✝ : ∀ (i : δ), MeasureTheory.SigmaFinite (μ i)\nhf : Measurable f\n⊢ Measurable (MeasureTheory.lmarginal μ s f)","decl":"theorem _root_.Measurable.lmarginal [∀ i, SigmaFinite (μ i)] (hf : Measurable f) :\n    Measurable (∫⋯∫⁻_s, f ∂μ) := by\n  refine Measurable.lintegral_prod_right ?_\n  refine hf.comp ?_\n  rw [measurable_pi_iff]; intro i\n  by_cases hi : i ∈ s\n  · simpa [hi, updateFinset] using measurable_pi_iff.1 measurable_snd _\n  · simpa [hi, updateFinset] using measurable_pi_iff.1 measurable_fst _\n\n"}
{"name":"MeasureTheory.lmarginal_empty","module":"Mathlib.MeasureTheory.Integral.Marginal","initialProofState":"δ : Type u_1\nπ : δ → Type u_3\ninst✝¹ : (x : δ) → MeasurableSpace (π x)\nμ : (i : δ) → MeasureTheory.Measure (π i)\ninst✝ : DecidableEq δ\nf : ((i : δ) → π i) → ENNReal\n⊢ Eq (MeasureTheory.lmarginal μ EmptyCollection.emptyCollection f) f","decl":"@[simp] theorem lmarginal_empty (f : (∀ i, π i) → ℝ≥0∞) : ∫⋯∫⁻_∅, f ∂μ = f := by\n  ext1 x\n  simp_rw [lmarginal, Measure.pi_of_empty fun i : (∅ : Finset δ) => μ i]\n  apply lintegral_dirac'\n  exact Subsingleton.measurable\n\n"}
{"name":"MeasureTheory.lmarginal_congr","module":"Mathlib.MeasureTheory.Integral.Marginal","initialProofState":"δ : Type u_1\nπ : δ → Type u_3\ninst✝¹ : (x : δ) → MeasurableSpace (π x)\nμ : (i : δ) → MeasureTheory.Measure (π i)\ninst✝ : DecidableEq δ\ns : Finset δ\nx y : (i : δ) → π i\nf : ((i : δ) → π i) → ENNReal\nh : ∀ (i : δ), Not (Membership.mem s i) → Eq (x i) (y i)\n⊢ Eq (MeasureTheory.lmarginal μ s f x) (MeasureTheory.lmarginal μ s f y)","decl":"/-- The marginal distribution is independent of the variables in `s`. -/\ntheorem lmarginal_congr {x y : ∀ i, π i} (f : (∀ i, π i) → ℝ≥0∞)\n    (h : ∀ i ∉ s, x i = y i) :\n    (∫⋯∫⁻_s, f ∂μ) x = (∫⋯∫⁻_s, f ∂μ) y := by\n  dsimp [lmarginal, updateFinset_def]; rcongr; exact h _ ‹_›\n\n"}
{"name":"MeasureTheory.lmarginal_update_of_mem","module":"Mathlib.MeasureTheory.Integral.Marginal","initialProofState":"δ : Type u_1\nπ : δ → Type u_3\ninst✝¹ : (x : δ) → MeasurableSpace (π x)\nμ : (i : δ) → MeasureTheory.Measure (π i)\ninst✝ : DecidableEq δ\ns : Finset δ\ni : δ\nhi : Membership.mem s i\nf : ((i : δ) → π i) → ENNReal\nx : (i : δ) → π i\ny : π i\n⊢ Eq (MeasureTheory.lmarginal μ s f (Function.update x i y)) (MeasureTheory.lmarginal μ s f x)","decl":"theorem lmarginal_update_of_mem {i : δ} (hi : i ∈ s)\n    (f : (∀ i, π i) → ℝ≥0∞) (x : ∀ i, π i) (y : π i) :\n    (∫⋯∫⁻_s, f ∂μ) (Function.update x i y) = (∫⋯∫⁻_s, f ∂μ) x := by\n  apply lmarginal_congr\n  intro j hj\n  have : j ≠ i := by rintro rfl; exact hj hi\n  apply update_of_ne this\n\n"}
{"name":"MeasureTheory.lmarginal_singleton","module":"Mathlib.MeasureTheory.Integral.Marginal","initialProofState":"δ : Type u_1\nπ : δ → Type u_3\ninst✝¹ : (x : δ) → MeasurableSpace (π x)\nμ : (i : δ) → MeasureTheory.Measure (π i)\ninst✝ : DecidableEq δ\nf : ((i : δ) → π i) → ENNReal\ni : δ\n⊢ Eq (MeasureTheory.lmarginal μ (Singleton.singleton i) f) fun x => MeasureTheory.lintegral (μ i) fun xᵢ => f (Function.update x i xᵢ)","decl":"variable {μ} in\ntheorem lmarginal_singleton (f : (∀ i, π i) → ℝ≥0∞) (i : δ) :\n    ∫⋯∫⁻_{i}, f ∂μ = fun x => ∫⁻ xᵢ, f (Function.update x i xᵢ) ∂μ i := by\n  let α : Type _ := ({i} : Finset δ)\n  let e := (MeasurableEquiv.piUnique fun j : α ↦ π j).symm\n  ext1 x\n  calc (∫⋯∫⁻_{i}, f ∂μ) x\n      = ∫⁻ (y : π (default : α)), f (updateFinset x {i} (e y)) ∂μ (default : α) := by\n        simp_rw [lmarginal,\n          measurePreserving_piUnique (fun j : ({i} : Finset δ) ↦ μ j) |>.symm _\n            |>.lintegral_map_equiv, e, α]\n    _ = ∫⁻ xᵢ, f (Function.update x i xᵢ) ∂μ i := by simp [update_eq_updateFinset]; rfl\n\n"}
{"name":"MeasureTheory.lmarginal_mono","module":"Mathlib.MeasureTheory.Integral.Marginal","initialProofState":"δ : Type u_1\nπ : δ → Type u_3\ninst✝¹ : (x : δ) → MeasurableSpace (π x)\nμ : (i : δ) → MeasureTheory.Measure (π i)\ninst✝ : DecidableEq δ\ns : Finset δ\nf g : ((i : δ) → π i) → ENNReal\nhfg : LE.le f g\n⊢ LE.le (MeasureTheory.lmarginal μ s f) (MeasureTheory.lmarginal μ s g)","decl":"variable {μ} in\n@[gcongr]\ntheorem lmarginal_mono {f g : (∀ i, π i) → ℝ≥0∞} (hfg : f ≤ g) : ∫⋯∫⁻_s, f ∂μ ≤ ∫⋯∫⁻_s, g ∂μ :=\n  fun _ => lintegral_mono fun _ => hfg _\n\n"}
{"name":"MeasureTheory.lmarginal_union","module":"Mathlib.MeasureTheory.Integral.Marginal","initialProofState":"δ : Type u_1\nπ : δ → Type u_3\ninst✝² : (x : δ) → MeasurableSpace (π x)\nμ : (i : δ) → MeasureTheory.Measure (π i)\ninst✝¹ : DecidableEq δ\ns t : Finset δ\ninst✝ : ∀ (i : δ), MeasureTheory.SigmaFinite (μ i)\nf : ((i : δ) → π i) → ENNReal\nhf : Measurable f\nhst : Disjoint s t\n⊢ Eq (MeasureTheory.lmarginal μ (Union.union s t) f) (MeasureTheory.lmarginal μ s (MeasureTheory.lmarginal μ t f))","decl":"theorem lmarginal_union (f : (∀ i, π i) → ℝ≥0∞) (hf : Measurable f)\n    (hst : Disjoint s t) : ∫⋯∫⁻_s ∪ t, f ∂μ = ∫⋯∫⁻_s, ∫⋯∫⁻_t, f ∂μ ∂μ := by\n  ext1 x\n  let e := MeasurableEquiv.piFinsetUnion π hst\n  calc (∫⋯∫⁻_s ∪ t, f ∂μ) x\n      = ∫⁻ (y : (i : ↥(s ∪ t)) → π i), f (updateFinset x (s ∪ t) y)\n          ∂.pi fun i' : ↥(s ∪ t) ↦ μ i' := rfl\n    _ = ∫⁻ (y : ((i : s) → π i) × ((j : t) → π j)), f (updateFinset x (s ∪ t) _)\n          ∂(Measure.pi fun i : s ↦ μ i).prod (.pi fun j : t ↦ μ j) := by\n        rw [measurePreserving_piFinsetUnion hst μ |>.lintegral_map_equiv]\n    _ = ∫⁻ (y : (i : s) → π i), ∫⁻ (z : (j : t) → π j), f (updateFinset x (s ∪ t) (e (y, z)))\n          ∂.pi fun j : t ↦ μ j ∂.pi fun i : s ↦ μ i := by\n        apply lintegral_prod\n        apply Measurable.aemeasurable\n        exact hf.comp <| measurable_updateFinset.comp e.measurable\n    _ = (∫⋯∫⁻_s, ∫⋯∫⁻_t, f ∂μ ∂μ) x := by\n        simp_rw [lmarginal, updateFinset_updateFinset hst]\n        rfl\n\n"}
{"name":"MeasureTheory.lmarginal_union'","module":"Mathlib.MeasureTheory.Integral.Marginal","initialProofState":"δ : Type u_1\nπ : δ → Type u_3\ninst✝² : (x : δ) → MeasurableSpace (π x)\nμ : (i : δ) → MeasureTheory.Measure (π i)\ninst✝¹ : DecidableEq δ\ninst✝ : ∀ (i : δ), MeasureTheory.SigmaFinite (μ i)\nf : ((i : δ) → π i) → ENNReal\nhf : Measurable f\ns t : Finset δ\nhst : Disjoint s t\n⊢ Eq (MeasureTheory.lmarginal μ (Union.union s t) f) (MeasureTheory.lmarginal μ t (MeasureTheory.lmarginal μ s f))","decl":"theorem lmarginal_union' (f : (∀ i, π i) → ℝ≥0∞) (hf : Measurable f) {s t : Finset δ}\n    (hst : Disjoint s t) : ∫⋯∫⁻_s ∪ t, f ∂μ = ∫⋯∫⁻_t, ∫⋯∫⁻_s, f ∂μ ∂μ := by\n  rw [Finset.union_comm, lmarginal_union μ f hf hst.symm]\n\n"}
{"name":"MeasureTheory.lmarginal_insert","module":"Mathlib.MeasureTheory.Integral.Marginal","initialProofState":"δ : Type u_1\nπ : δ → Type u_3\ninst✝² : (x : δ) → MeasurableSpace (π x)\nμ : (i : δ) → MeasureTheory.Measure (π i)\ninst✝¹ : DecidableEq δ\ns : Finset δ\ninst✝ : ∀ (i : δ), MeasureTheory.SigmaFinite (μ i)\nf : ((i : δ) → π i) → ENNReal\nhf : Measurable f\ni : δ\nhi : Not (Membership.mem s i)\nx : (i : δ) → π i\n⊢ Eq (MeasureTheory.lmarginal μ (Insert.insert i s) f x) (MeasureTheory.lintegral (μ i) fun xᵢ => MeasureTheory.lmarginal μ s f (Function.update x i xᵢ))","decl":"/-- Peel off a single integral from a `lmarginal` integral at the beginning (compare with\n`lmarginal_insert'`, which peels off an integral at the end). -/\ntheorem lmarginal_insert (f : (∀ i, π i) → ℝ≥0∞) (hf : Measurable f) {i : δ}\n    (hi : i ∉ s) (x : ∀ i, π i) :\n    (∫⋯∫⁻_insert i s, f ∂μ) x = ∫⁻ xᵢ, (∫⋯∫⁻_s, f ∂μ) (Function.update x i xᵢ) ∂μ i := by\n  rw [Finset.insert_eq, lmarginal_union μ f hf (Finset.disjoint_singleton_left.mpr hi),\n    lmarginal_singleton]\n\n"}
{"name":"MeasureTheory.lmarginal_erase","module":"Mathlib.MeasureTheory.Integral.Marginal","initialProofState":"δ : Type u_1\nπ : δ → Type u_3\ninst✝² : (x : δ) → MeasurableSpace (π x)\nμ : (i : δ) → MeasureTheory.Measure (π i)\ninst✝¹ : DecidableEq δ\ns : Finset δ\ninst✝ : ∀ (i : δ), MeasureTheory.SigmaFinite (μ i)\nf : ((i : δ) → π i) → ENNReal\nhf : Measurable f\ni : δ\nhi : Membership.mem s i\nx : (i : δ) → π i\n⊢ Eq (MeasureTheory.lmarginal μ s f x) (MeasureTheory.lintegral (μ i) fun xᵢ => MeasureTheory.lmarginal μ (s.erase i) f (Function.update x i xᵢ))","decl":"/-- Peel off a single integral from a `lmarginal` integral at the beginning (compare with\n`lmarginal_erase'`, which peels off an integral at the end). -/\ntheorem lmarginal_erase (f : (∀ i, π i) → ℝ≥0∞) (hf : Measurable f) {i : δ}\n    (hi : i ∈ s) (x : ∀ i, π i) :\n    (∫⋯∫⁻_s, f ∂μ) x = ∫⁻ xᵢ, (∫⋯∫⁻_(erase s i), f ∂μ) (Function.update x i xᵢ) ∂μ i := by\n  simpa [insert_erase hi] using lmarginal_insert _ hf (not_mem_erase i s) x\n\n"}
{"name":"MeasureTheory.lmarginal_insert'","module":"Mathlib.MeasureTheory.Integral.Marginal","initialProofState":"δ : Type u_1\nπ : δ → Type u_3\ninst✝² : (x : δ) → MeasurableSpace (π x)\nμ : (i : δ) → MeasureTheory.Measure (π i)\ninst✝¹ : DecidableEq δ\ns : Finset δ\ninst✝ : ∀ (i : δ), MeasureTheory.SigmaFinite (μ i)\nf : ((i : δ) → π i) → ENNReal\nhf : Measurable f\ni : δ\nhi : Not (Membership.mem s i)\n⊢ Eq (MeasureTheory.lmarginal μ (Insert.insert i s) f) (MeasureTheory.lmarginal μ s fun x => MeasureTheory.lintegral (μ i) fun xᵢ => f (Function.update x i xᵢ))","decl":"/-- Peel off a single integral from a `lmarginal` integral at the end (compare with\n`lmarginal_insert`, which peels off an integral at the beginning). -/\ntheorem lmarginal_insert' (f : (∀ i, π i) → ℝ≥0∞) (hf : Measurable f) {i : δ}\n    (hi : i ∉ s) :\n    ∫⋯∫⁻_insert i s, f ∂μ = ∫⋯∫⁻_s, (fun x ↦ ∫⁻ xᵢ, f (Function.update x i xᵢ) ∂μ i) ∂μ := by\n  rw [Finset.insert_eq, Finset.union_comm,\n    lmarginal_union (s := s) μ f hf (Finset.disjoint_singleton_right.mpr hi), lmarginal_singleton]\n\n"}
{"name":"MeasureTheory.lmarginal_erase'","module":"Mathlib.MeasureTheory.Integral.Marginal","initialProofState":"δ : Type u_1\nπ : δ → Type u_3\ninst✝² : (x : δ) → MeasurableSpace (π x)\nμ : (i : δ) → MeasureTheory.Measure (π i)\ninst✝¹ : DecidableEq δ\ns : Finset δ\ninst✝ : ∀ (i : δ), MeasureTheory.SigmaFinite (μ i)\nf : ((i : δ) → π i) → ENNReal\nhf : Measurable f\ni : δ\nhi : Membership.mem s i\n⊢ Eq (MeasureTheory.lmarginal μ s f) (MeasureTheory.lmarginal μ (s.erase i) fun x => MeasureTheory.lintegral (μ i) fun xᵢ => f (Function.update x i xᵢ))","decl":"/-- Peel off a single integral from a `lmarginal` integral at the end (compare with\n`lmarginal_erase`, which peels off an integral at the beginning). -/\ntheorem lmarginal_erase' (f : (∀ i, π i) → ℝ≥0∞) (hf : Measurable f) {i : δ}\n    (hi : i ∈ s) :\n    ∫⋯∫⁻_s, f ∂μ = ∫⋯∫⁻_(erase s i), (fun x ↦ ∫⁻ xᵢ, f (Function.update x i xᵢ) ∂μ i) ∂μ := by\n  simpa [insert_erase hi] using lmarginal_insert' _ hf (not_mem_erase i s)\n\n"}
{"name":"MeasureTheory.lmarginal_univ","module":"Mathlib.MeasureTheory.Integral.Marginal","initialProofState":"δ : Type u_1\nπ : δ → Type u_3\ninst✝³ : (x : δ) → MeasurableSpace (π x)\nμ : (i : δ) → MeasureTheory.Measure (π i)\ninst✝² : DecidableEq δ\ninst✝¹ : ∀ (i : δ), MeasureTheory.SigmaFinite (μ i)\ninst✝ : Fintype δ\nf : ((i : δ) → π i) → ENNReal\n⊢ Eq (MeasureTheory.lmarginal μ Finset.univ f) fun x => MeasureTheory.lintegral (MeasureTheory.Measure.pi μ) fun x => f x","decl":"@[simp] theorem lmarginal_univ [Fintype δ] {f : (∀ i, π i) → ℝ≥0∞} :\n    ∫⋯∫⁻_univ, f ∂μ = fun _ => ∫⁻ x, f x ∂Measure.pi μ := by\n  let e : { j // j ∈ Finset.univ } ≃ δ := Equiv.subtypeUnivEquiv mem_univ\n  ext1 x\n  simp_rw [lmarginal, measurePreserving_piCongrLeft μ e |>.lintegral_map_equiv, updateFinset_def]\n  simp\n  rfl\n\n"}
{"name":"MeasureTheory.lintegral_eq_lmarginal_univ","module":"Mathlib.MeasureTheory.Integral.Marginal","initialProofState":"δ : Type u_1\nπ : δ → Type u_3\ninst✝³ : (x : δ) → MeasurableSpace (π x)\nμ : (i : δ) → MeasureTheory.Measure (π i)\ninst✝² : DecidableEq δ\ninst✝¹ : ∀ (i : δ), MeasureTheory.SigmaFinite (μ i)\ninst✝ : Fintype δ\nf : ((i : δ) → π i) → ENNReal\nx : (i : δ) → π i\n⊢ Eq (MeasureTheory.lintegral (MeasureTheory.Measure.pi μ) fun x => f x) (MeasureTheory.lmarginal μ Finset.univ f x)","decl":"theorem lintegral_eq_lmarginal_univ [Fintype δ] {f : (∀ i, π i) → ℝ≥0∞} (x : ∀ i, π i) :\n    ∫⁻ x, f x ∂Measure.pi μ = (∫⋯∫⁻_univ, f ∂μ) x := by simp\n\n"}
{"name":"MeasureTheory.lmarginal_image","module":"Mathlib.MeasureTheory.Integral.Marginal","initialProofState":"δ : Type u_1\nδ' : Type u_2\nπ : δ → Type u_3\ninst✝³ : (x : δ) → MeasurableSpace (π x)\nμ : (i : δ) → MeasureTheory.Measure (π i)\ninst✝² : DecidableEq δ\ninst✝¹ : ∀ (i : δ), MeasureTheory.SigmaFinite (μ i)\ninst✝ : DecidableEq δ'\ne : δ' → δ\nhe : Function.Injective e\ns : Finset δ'\nf : ((i : δ') → π (e i)) → ENNReal\nhf : Measurable f\nx : (i : δ) → π i\n⊢ Eq (MeasureTheory.lmarginal μ (Finset.image e s) (Function.comp f fun x => Function.dcomp (fun {x_1} => x) e) x) (MeasureTheory.lmarginal (Function.dcomp (fun {x} => μ) e) s f (Function.dcomp (fun {x_1} => x) e))","decl":"theorem lmarginal_image [DecidableEq δ'] {e : δ' → δ} (he : Injective e) (s : Finset δ')\n    {f : (∀ i, π (e i)) → ℝ≥0∞} (hf : Measurable f) (x : ∀ i, π i) :\n      (∫⋯∫⁻_s.image e, f ∘ (· ∘' e) ∂μ) x = (∫⋯∫⁻_s, f ∂μ ∘' e) (x ∘' e) := by\n  have h : Measurable ((· ∘' e) : (∀ i, π i) → _) :=\n    measurable_pi_iff.mpr <| fun i ↦ measurable_pi_apply (e i)\n  induction s using Finset.induction generalizing x with\n  | empty => simp\n  | insert hi ih =>\n    rw [image_insert, lmarginal_insert _ (hf.comp h) (he.mem_finset_image.not.mpr hi),\n      lmarginal_insert _ hf hi]\n    simp_rw [ih, ← update_comp_eq_of_injective' x he]\n\n"}
{"name":"MeasureTheory.lmarginal_update_of_not_mem","module":"Mathlib.MeasureTheory.Integral.Marginal","initialProofState":"δ : Type u_1\nπ : δ → Type u_3\ninst✝² : (x : δ) → MeasurableSpace (π x)\nμ : (i : δ) → MeasureTheory.Measure (π i)\ninst✝¹ : DecidableEq δ\ns : Finset δ\ninst✝ : ∀ (i : δ), MeasureTheory.SigmaFinite (μ i)\ni : δ\nf : ((i : δ) → π i) → ENNReal\nhf : Measurable f\nhi : Not (Membership.mem s i)\nx : (i : δ) → π i\ny : π i\n⊢ Eq (MeasureTheory.lmarginal μ s f (Function.update x i y)) (MeasureTheory.lmarginal μ s (Function.comp f fun x => Function.update x i y) x)","decl":"theorem lmarginal_update_of_not_mem {i : δ}\n    {f : (∀ i, π i) → ℝ≥0∞} (hf : Measurable f) (hi : i ∉ s) (x : ∀ i, π i) (y : π i) :\n    (∫⋯∫⁻_s, f ∂μ) (Function.update x i y) = (∫⋯∫⁻_s, f ∘ (Function.update · i y) ∂μ) x := by\n  induction s using Finset.induction generalizing x with\n  | empty => simp\n  | @insert i' s hi' ih =>\n    rw [lmarginal_insert _ hf hi', lmarginal_insert _ (hf.comp measurable_update_left) hi']\n    have hii' : i ≠ i' := mt (by rintro rfl; exact mem_insert_self i s) hi\n    simp_rw [update_comm hii', ih (mt Finset.mem_insert_of_mem hi)]\n\n"}
{"name":"MeasureTheory.lmarginal_eq_of_subset","module":"Mathlib.MeasureTheory.Integral.Marginal","initialProofState":"δ : Type u_1\nπ : δ → Type u_3\ninst✝² : (x : δ) → MeasurableSpace (π x)\nμ : (i : δ) → MeasureTheory.Measure (π i)\ninst✝¹ : DecidableEq δ\ns t : Finset δ\ninst✝ : ∀ (i : δ), MeasureTheory.SigmaFinite (μ i)\nf g : ((i : δ) → π i) → ENNReal\nhst : HasSubset.Subset s t\nhf : Measurable f\nhg : Measurable g\nhfg : Eq (MeasureTheory.lmarginal μ s f) (MeasureTheory.lmarginal μ s g)\n⊢ Eq (MeasureTheory.lmarginal μ t f) (MeasureTheory.lmarginal μ t g)","decl":"theorem lmarginal_eq_of_subset {f g : (∀ i, π i) → ℝ≥0∞} (hst : s ⊆ t)\n    (hf : Measurable f) (hg : Measurable g) (hfg : ∫⋯∫⁻_s, f ∂μ = ∫⋯∫⁻_s, g ∂μ) :\n    ∫⋯∫⁻_t, f ∂μ = ∫⋯∫⁻_t, g ∂μ := by\n  rw [← union_sdiff_of_subset hst, lmarginal_union' μ f hf disjoint_sdiff,\n    lmarginal_union' μ g hg disjoint_sdiff, hfg]\n\n"}
{"name":"MeasureTheory.lmarginal_le_of_subset","module":"Mathlib.MeasureTheory.Integral.Marginal","initialProofState":"δ : Type u_1\nπ : δ → Type u_3\ninst✝² : (x : δ) → MeasurableSpace (π x)\nμ : (i : δ) → MeasureTheory.Measure (π i)\ninst✝¹ : DecidableEq δ\ns t : Finset δ\ninst✝ : ∀ (i : δ), MeasureTheory.SigmaFinite (μ i)\nf g : ((i : δ) → π i) → ENNReal\nhst : HasSubset.Subset s t\nhf : Measurable f\nhg : Measurable g\nhfg : LE.le (MeasureTheory.lmarginal μ s f) (MeasureTheory.lmarginal μ s g)\n⊢ LE.le (MeasureTheory.lmarginal μ t f) (MeasureTheory.lmarginal μ t g)","decl":"theorem lmarginal_le_of_subset {f g : (∀ i, π i) → ℝ≥0∞} (hst : s ⊆ t)\n    (hf : Measurable f) (hg : Measurable g) (hfg : ∫⋯∫⁻_s, f ∂μ ≤ ∫⋯∫⁻_s, g ∂μ) :\n    ∫⋯∫⁻_t, f ∂μ ≤ ∫⋯∫⁻_t, g ∂μ := by\n  rw [← union_sdiff_of_subset hst, lmarginal_union' μ f hf disjoint_sdiff,\n    lmarginal_union' μ g hg disjoint_sdiff]\n  exact lmarginal_mono hfg\n\n"}
{"name":"MeasureTheory.lintegral_eq_of_lmarginal_eq","module":"Mathlib.MeasureTheory.Integral.Marginal","initialProofState":"δ : Type u_1\nπ : δ → Type u_3\ninst✝³ : (x : δ) → MeasurableSpace (π x)\nμ : (i : δ) → MeasureTheory.Measure (π i)\ninst✝² : DecidableEq δ\ninst✝¹ : ∀ (i : δ), MeasureTheory.SigmaFinite (μ i)\ninst✝ : Fintype δ\ns : Finset δ\nf g : ((i : δ) → π i) → ENNReal\nhf : Measurable f\nhg : Measurable g\nhfg : Eq (MeasureTheory.lmarginal μ s f) (MeasureTheory.lmarginal μ s g)\n⊢ Eq (MeasureTheory.lintegral (MeasureTheory.Measure.pi μ) fun x => f x) (MeasureTheory.lintegral (MeasureTheory.Measure.pi μ) fun x => g x)","decl":"theorem lintegral_eq_of_lmarginal_eq [Fintype δ] (s : Finset δ) {f g : (∀ i, π i) → ℝ≥0∞}\n    (hf : Measurable f) (hg : Measurable g) (hfg : ∫⋯∫⁻_s, f ∂μ = ∫⋯∫⁻_s, g ∂μ) :\n    ∫⁻ x, f x ∂Measure.pi μ = ∫⁻ x, g x ∂Measure.pi μ := by\n  rcases isEmpty_or_nonempty (∀ i, π i) with h|⟨⟨x⟩⟩\n  · simp_rw [lintegral_of_isEmpty]\n  simp_rw [lintegral_eq_lmarginal_univ x, lmarginal_eq_of_subset (Finset.subset_univ s) hf hg hfg]\n\n"}
{"name":"MeasureTheory.lintegral_le_of_lmarginal_le","module":"Mathlib.MeasureTheory.Integral.Marginal","initialProofState":"δ : Type u_1\nπ : δ → Type u_3\ninst✝³ : (x : δ) → MeasurableSpace (π x)\nμ : (i : δ) → MeasureTheory.Measure (π i)\ninst✝² : DecidableEq δ\ninst✝¹ : ∀ (i : δ), MeasureTheory.SigmaFinite (μ i)\ninst✝ : Fintype δ\ns : Finset δ\nf g : ((i : δ) → π i) → ENNReal\nhf : Measurable f\nhg : Measurable g\nhfg : LE.le (MeasureTheory.lmarginal μ s f) (MeasureTheory.lmarginal μ s g)\n⊢ LE.le (MeasureTheory.lintegral (MeasureTheory.Measure.pi μ) fun x => f x) (MeasureTheory.lintegral (MeasureTheory.Measure.pi μ) fun x => g x)","decl":"theorem lintegral_le_of_lmarginal_le [Fintype δ] (s : Finset δ) {f g : (∀ i, π i) → ℝ≥0∞}\n    (hf : Measurable f) (hg : Measurable g) (hfg : ∫⋯∫⁻_s, f ∂μ ≤ ∫⋯∫⁻_s, g ∂μ) :\n    ∫⁻ x, f x ∂Measure.pi μ ≤ ∫⁻ x, g x ∂Measure.pi μ := by\n  rcases isEmpty_or_nonempty (∀ i, π i) with h|⟨⟨x⟩⟩\n  · simp_rw [lintegral_of_isEmpty, le_rfl]\n  simp_rw [lintegral_eq_lmarginal_univ x, lmarginal_le_of_subset (Finset.subset_univ s) hf hg hfg x]\n\n"}
