{"name":"nhds_def","module":"Mathlib.Topology.Defs.Filter","initialProofState":"X : Type u_3\ninst✝ : TopologicalSpace X\nx : X\n⊢ Eq (nhds x) (iInf fun s => iInf fun h => Filter.principal s)","decl":"/-- A set is called a neighborhood of `x` if it contains an open set around `x`. The set of all\nneighborhoods of `x` forms a filter, the neighborhood filter at `x`, is here defined as the\ninfimum over the principal filters of all open sets containing `x`. -/\nirreducible_def nhds (x : X) : Filter X :=\n  ⨅ s ∈ { s : Set X | x ∈ s ∧ IsOpen s }, 𝓟 s\n\n"}
{"name":"CompactSpace.isCompact_univ","module":"Mathlib.Topology.Defs.Filter","initialProofState":"X : Type u_1\ninst✝ : TopologicalSpace X\nself : CompactSpace X\n⊢ IsCompact Set.univ","decl":"variable (X) in\n/-- Type class for compact spaces. Separation is sometimes included in the definition, especially\nin the French literature, but we do not include it here. -/\nclass CompactSpace : Prop where\n  /-- In a compact space, `Set.univ` is a compact set. -/\n  isCompact_univ : IsCompact (Set.univ : Set X)\n\n"}
{"name":"NoncompactSpace.noncompact_univ","module":"Mathlib.Topology.Defs.Filter","initialProofState":"X : Type u_1\ninst✝ : TopologicalSpace X\nself : NoncompactSpace X\n⊢ Not (IsCompact Set.univ)","decl":"variable (X) in\n/-- `X` is a noncompact topological space if it is not a compact space. -/\nclass NoncompactSpace : Prop where\n  /-- In a noncompact space, `Set.univ` is not a compact set. -/\n  noncompact_univ : ¬IsCompact (Set.univ : Set X)\n\n"}
{"name":"WeaklyLocallyCompactSpace.exists_compact_mem_nhds","module":"Mathlib.Topology.Defs.Filter","initialProofState":"X : Type u_3\ninst✝ : TopologicalSpace X\nself : WeaklyLocallyCompactSpace X\nx : X\n⊢ Exists fun s => And (IsCompact s) (Membership.mem (nhds x) s)","decl":"/-- We say that a topological space is a *weakly locally compact space*,\nif each point of this space admits a compact neighborhood. -/\nclass WeaklyLocallyCompactSpace (X : Type*) [TopologicalSpace X] : Prop where\n  /-- Every point of a weakly locally compact space admits a compact neighborhood. -/\n  exists_compact_mem_nhds (x : X) : ∃ s, IsCompact s ∧ s ∈ 𝓝 x\n\n"}
{"name":"LocallyCompactSpace.local_compact_nhds","module":"Mathlib.Topology.Defs.Filter","initialProofState":"X : Type u_3\ninst✝ : TopologicalSpace X\nself : LocallyCompactSpace X\nx : X\nn : Set X\na✝ : Membership.mem (nhds x) n\n⊢ Exists fun s => And (Membership.mem (nhds x) s) (And (HasSubset.Subset s n) (IsCompact s))","decl":"/-- There are various definitions of \"locally compact space\" in the literature,\nwhich agree for Hausdorff spaces but not in general.\nThis one is the precise condition on X needed\nfor the evaluation map `C(X, Y) × X → Y` to be continuous for all `Y`\nwhen `C(X, Y)` is given the compact-open topology.\n\nSee also `WeaklyLocallyCompactSpace`, a typeclass that only assumes\nthat each point has a compact neighborhood. -/\nclass LocallyCompactSpace (X : Type*) [TopologicalSpace X] : Prop where\n  /-- In a locally compact space,\n    every neighbourhood of every point contains a compact neighbourhood of that same point. -/\n  local_compact_nhds : ∀ (x : X), ∀ n ∈ 𝓝 x, ∃ s ∈ 𝓝 x, s ⊆ n ∧ IsCompact s\n\n"}
{"name":"LocallyCompactPair.exists_mem_nhds_isCompact_mapsTo","module":"Mathlib.Topology.Defs.Filter","initialProofState":"X : Type u_3\nY : Type u_4\ninst✝¹ : TopologicalSpace X\ninst✝ : TopologicalSpace Y\nself : LocallyCompactPair X Y\nf : X → Y\nx : X\ns : Set Y\na✝¹ : Continuous f\na✝ : Membership.mem (nhds (f x)) s\n⊢ Exists fun K => And (Membership.mem (nhds x) K) (And (IsCompact K) (Set.MapsTo f K s))","decl":"/-- We say that `X` and `Y` are a locally compact pair of topological spaces,\nif for any continuous map `f : X → Y`, a point `x : X`, and a neighbourhood `s ∈ 𝓝 (f x)`,\nthere exists a compact neighbourhood `K ∈ 𝓝 x` such that `f` maps `K` to `s`.\n\nThis is a technical assumption that appears in several theorems,\nmost notably in `ContinuousMap.continuous_comp'` and `ContinuousMap.continuous_eval`.\nIt is satisfied in two cases:\n\n- if `X` is a locally compact topological space, for obvious reasons;\n- if `X` is a weakly locally compact topological space and `Y` is an R₁ space;\n  this fact is a simple generalization of the theorem\n  saying that a weakly locally compact R₁ topological space is locally compact.\n-/\nclass LocallyCompactPair (X Y : Type*) [TopologicalSpace X] [TopologicalSpace Y] : Prop where\n  /-- If `f : X → Y` is a continuous map in a locally compact pair of topological spaces\n  and `s : Set Y` is a neighbourhood of `f x`, `x : X`,\n  then there exists a compact neighbourhood `K` of `x` such that `f` maps `K` to `s`. -/\n  exists_mem_nhds_isCompact_mapsTo : ∀ {f : X → Y} {x : X} {s : Set Y},\n    Continuous f → s ∈ 𝓝 (f x) → ∃ K ∈ 𝓝 x, IsCompact K ∧ Set.MapsTo f K s\n\n"}
