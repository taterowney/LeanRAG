{"name":"TopCat.instContinuousMapClass","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X Y : TopCat\n⊢ ContinuousMapClass (Quiver.Hom X Y) ↑X ↑Y","decl":"instance instContinuousMapClass (X Y : TopCat) : ContinuousMapClass (X ⟶ Y) X Y :=\n  inferInstanceAs <| ContinuousMapClass C(X, Y) X Y\n\n"}
{"name":"TopCat.id_app","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X : TopCat\nx : ↑X\n⊢ Eq ((CategoryTheory.CategoryStruct.id X) x) x","decl":"@[simp]\ntheorem id_app (X : TopCat.{u}) (x : ↑X) : (𝟙 X : X ⟶ X) x = x := rfl\n\n"}
{"name":"TopCat.comp_app","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X Y Z : TopCat\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\nx : ↑X\n⊢ Eq ((CategoryTheory.CategoryStruct.comp f g) x) (g (f x))","decl":"@[simp]\ntheorem comp_app {X Y Z : TopCat.{u}} (f : X ⟶ Y) (g : Y ⟶ Z) (x : X) :\n    (f ≫ g : X → Z) x = g (f x) := rfl\n\n"}
{"name":"TopCat.coe_id","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X : TopCat\n⊢ Eq (⇑(CategoryTheory.CategoryStruct.id X)) id","decl":"@[simp] theorem coe_id (X : TopCat.{u}) : (𝟙 X : X → X) = id := rfl\n\n"}
{"name":"TopCat.coe_comp","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X Y Z : TopCat\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\n⊢ Eq (⇑(CategoryTheory.CategoryStruct.comp f g)) (Function.comp ⇑g ⇑f)","decl":"@[simp] theorem coe_comp {X Y Z : TopCat.{u}} (f : X ⟶ Y) (g : Y ⟶ Z) :\n    (f ≫ g : X → Z) = g ∘ f := rfl\n\n"}
{"name":"TopCat.hom_inv_id_apply","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X Y : TopCat\nf : CategoryTheory.Iso X Y\nx : ↑X\n⊢ Eq (f.inv (f.hom x)) x","decl":"@[simp]\nlemma hom_inv_id_apply {X Y : TopCat} (f : X ≅ Y) (x : X) : f.inv (f.hom x) = x :=\n  DFunLike.congr_fun f.hom_inv_id x\n\n"}
{"name":"TopCat.inv_hom_id_apply","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X Y : TopCat\nf : CategoryTheory.Iso X Y\ny : ↑Y\n⊢ Eq (f.hom (f.inv y)) y","decl":"@[simp]\nlemma inv_hom_id_apply {X Y : TopCat} (f : X ≅ Y) (y : Y) : f.hom (f.inv y) = y :=\n  DFunLike.congr_fun f.inv_hom_id y\n\n"}
{"name":"TopCat.coe_of","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X : Type u\ninst✝ : TopologicalSpace X\n⊢ Eq (↑(TopCat.of X)) X","decl":"@[simp]\ntheorem coe_of (X : Type u) [TopologicalSpace X] : (of X : Type u) = X := rfl\n\n"}
{"name":"TopCat.coe_of_of","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X Y : Type u\ninst✝¹ : TopologicalSpace X\ninst✝ : TopologicalSpace Y\nf : ContinuousMap X Y\nx : (CategoryTheory.forget TopCat).obj (TopCat.of X)\n⊢ Eq (f x) (f x)","decl":"/--\nReplace a function coercion for a morphism `TopCat.of X ⟶ TopCat.of Y` with the definitionally\nequal function coercion for a continuous map `C(X, Y)`.\n-/\n@[simp] theorem coe_of_of {X Y : Type u} [TopologicalSpace X] [TopologicalSpace Y]\n    {f : C(X, Y)} {x} :\n    @DFunLike.coe (TopCat.of X ⟶ TopCat.of Y) ((CategoryTheory.forget TopCat).obj (TopCat.of X))\n      (fun _ ↦ (CategoryTheory.forget TopCat).obj (TopCat.of Y)) HasForget.instFunLike\n      f x =\n    @DFunLike.coe C(X, Y) X\n      (fun _ ↦ Y) _\n      f x :=\n  rfl\n\n"}
{"name":"TopCat.hom_apply","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X Y : TopCat\nf : Quiver.Hom X Y\nx : ↑X\n⊢ Eq (f x) (f.toFun x)","decl":"lemma hom_apply {X Y : TopCat} (f : X ⟶ Y) (x : X) : f x = ContinuousMap.toFun f x := rfl\n\n"}
{"name":"TopCat.instDiscreteTopologyαTopologicalSpaceObjDiscrete","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X : Type u\n⊢ DiscreteTopology ↑(TopCat.discrete.obj X)","decl":"instance {X : Type u} : DiscreteTopology (discrete.obj X) :=\n  ⟨rfl⟩\n\n"}
{"name":"TopCat.isoOfHomeo_hom","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X Y : TopCat\nf : Homeomorph ↑X ↑Y\n⊢ Eq (TopCat.isoOfHomeo f).hom ↑f","decl":"/-- Any homeomorphisms induces an isomorphism in `Top`. -/\n@[simps]\ndef isoOfHomeo {X Y : TopCat.{u}} (f : X ≃ₜ Y) : X ≅ Y where\n  -- Porting note: previously ⟨f⟩ for hom (inv) and tidy closed proofs\n  hom := (f : C(X, Y))\n  inv := (f.symm : C(Y, X))\n  hom_inv_id := by ext; exact f.symm_apply_apply _\n  inv_hom_id := by ext; exact f.apply_symm_apply _\n\n"}
{"name":"TopCat.isoOfHomeo_inv","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X Y : TopCat\nf : Homeomorph ↑X ↑Y\n⊢ Eq (TopCat.isoOfHomeo f).inv ↑f.symm","decl":"/-- Any homeomorphisms induces an isomorphism in `Top`. -/\n@[simps]\ndef isoOfHomeo {X Y : TopCat.{u}} (f : X ≃ₜ Y) : X ≅ Y where\n  -- Porting note: previously ⟨f⟩ for hom (inv) and tidy closed proofs\n  hom := (f : C(X, Y))\n  inv := (f.symm : C(Y, X))\n  hom_inv_id := by ext; exact f.symm_apply_apply _\n  inv_hom_id := by ext; exact f.apply_symm_apply _\n\n"}
{"name":"TopCat.homeoOfIso_apply","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X Y : TopCat\nf : CategoryTheory.Iso X Y\na : ↑X\n⊢ Eq ((TopCat.homeoOfIso f) a) (f.hom a)","decl":"/-- Any isomorphism in `Top` induces a homeomorphism. -/\n@[simps]\ndef homeoOfIso {X Y : TopCat.{u}} (f : X ≅ Y) : X ≃ₜ Y where\n  toFun := f.hom\n  invFun := f.inv\n  left_inv x := by simp\n  right_inv x := by simp\n  continuous_toFun := f.hom.continuous\n  continuous_invFun := f.inv.continuous\n\n"}
{"name":"TopCat.homeoOfIso_symm_apply","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X Y : TopCat\nf : CategoryTheory.Iso X Y\na : ↑Y\n⊢ Eq ((TopCat.homeoOfIso f).symm a) (f.inv a)","decl":"/-- Any isomorphism in `Top` induces a homeomorphism. -/\n@[simps]\ndef homeoOfIso {X Y : TopCat.{u}} (f : X ≅ Y) : X ≃ₜ Y where\n  toFun := f.hom\n  invFun := f.inv\n  left_inv x := by simp\n  right_inv x := by simp\n  continuous_toFun := f.hom.continuous\n  continuous_invFun := f.inv.continuous\n\n"}
{"name":"TopCat.of_isoOfHomeo","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X Y : TopCat\nf : Homeomorph ↑X ↑Y\n⊢ Eq (TopCat.homeoOfIso (TopCat.isoOfHomeo f)) f","decl":"@[simp]\ntheorem of_isoOfHomeo {X Y : TopCat.{u}} (f : X ≃ₜ Y) : homeoOfIso (isoOfHomeo f) = f := by\n  -- Porting note: unfold some defs now\n  dsimp [homeoOfIso, isoOfHomeo]\n  ext\n  rfl\n\n"}
{"name":"TopCat.of_homeoOfIso","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X Y : TopCat\nf : CategoryTheory.Iso X Y\n⊢ Eq (TopCat.isoOfHomeo (TopCat.homeoOfIso f)) f","decl":"@[simp]\ntheorem of_homeoOfIso {X Y : TopCat.{u}} (f : X ≅ Y) : isoOfHomeo (homeoOfIso f) = f := by\n  -- Porting note: unfold some defs now\n  dsimp [homeoOfIso, isoOfHomeo]\n  ext\n  rfl\n\n"}
{"name":"TopCat.isIso_of_bijective_of_isOpenMap","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X Y : TopCat\nf : Quiver.Hom X Y\nhfbij : Function.Bijective ⇑f\nhfcl : IsOpenMap ⇑f\n⊢ CategoryTheory.IsIso f","decl":"lemma isIso_of_bijective_of_isOpenMap {X Y : TopCat.{u}} (f : X ⟶ Y)\n    (hfbij : Function.Bijective f) (hfcl : IsOpenMap f) : IsIso f :=\n  let e : X ≃ₜ Y := Homeomorph.homeomorphOfContinuousOpen\n    (Equiv.ofBijective f hfbij) f.continuous hfcl\n  inferInstanceAs <| IsIso (TopCat.isoOfHomeo e).hom\n\n"}
{"name":"TopCat.isIso_of_bijective_of_isClosedMap","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X Y : TopCat\nf : Quiver.Hom X Y\nhfbij : Function.Bijective ⇑f\nhfcl : IsClosedMap ⇑f\n⊢ CategoryTheory.IsIso f","decl":"lemma isIso_of_bijective_of_isClosedMap {X Y : TopCat.{u}} (f : X ⟶ Y)\n    (hfbij : Function.Bijective f) (hfcl : IsClosedMap f) : IsIso f :=\n  let e : X ≃ₜ Y := Homeomorph.homeomorphOfContinuousClosed\n    (Equiv.ofBijective f hfbij) f.continuous hfcl\n  inferInstanceAs <| IsIso (TopCat.isoOfHomeo e).hom\n\n"}
{"name":"TopCat.isOpenEmbedding_iff_comp_isIso","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X Y Z : TopCat\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\ninst✝ : CategoryTheory.IsIso g\n⊢ Iff (Topology.IsOpenEmbedding ⇑(CategoryTheory.CategoryStruct.comp f g)) (Topology.IsOpenEmbedding ⇑f)","decl":"theorem isOpenEmbedding_iff_comp_isIso {X Y Z : TopCat} (f : X ⟶ Y) (g : Y ⟶ Z) [IsIso g] :\n    IsOpenEmbedding (f ≫ g) ↔ IsOpenEmbedding f :=\n  (TopCat.homeoOfIso (asIso g)).isOpenEmbedding.of_comp_iff f\n\n"}
{"name":"TopCat.openEmbedding_iff_comp_isIso","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X Y Z : TopCat\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\ninst✝ : CategoryTheory.IsIso g\n⊢ Iff (Topology.IsOpenEmbedding ⇑(CategoryTheory.CategoryStruct.comp f g)) (Topology.IsOpenEmbedding ⇑f)","decl":"@[deprecated (since := \"2024-10-18\")]\nalias openEmbedding_iff_comp_isIso := isOpenEmbedding_iff_comp_isIso\n\n"}
{"name":"TopCat.isOpenEmbedding_iff_comp_isIso'","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X Y Z : TopCat\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\ninst✝ : CategoryTheory.IsIso g\n⊢ Iff (Topology.IsOpenEmbedding (CategoryTheory.CategoryStruct.comp ((CategoryTheory.forget TopCat).map f) ((CategoryTheory.forget TopCat).map g))) (Topology.IsOpenEmbedding ⇑f)","decl":"@[simp]\ntheorem isOpenEmbedding_iff_comp_isIso' {X Y Z : TopCat} (f : X ⟶ Y) (g : Y ⟶ Z) [IsIso g] :\n    IsOpenEmbedding ((forget TopCat).map f ≫ (forget TopCat).map g) ↔ IsOpenEmbedding f := by\n  simp only [← Functor.map_comp]\n  exact isOpenEmbedding_iff_comp_isIso f g\n\n"}
{"name":"TopCat.openEmbedding_iff_comp_isIso'","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X Y Z : TopCat\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\ninst✝ : CategoryTheory.IsIso g\n⊢ Iff (Topology.IsOpenEmbedding (CategoryTheory.CategoryStruct.comp ((CategoryTheory.forget TopCat).map f) ((CategoryTheory.forget TopCat).map g))) (Topology.IsOpenEmbedding ⇑f)","decl":"@[deprecated (since := \"2024-10-18\")]\nalias openEmbedding_iff_comp_isIso' := isOpenEmbedding_iff_comp_isIso'\n\n"}
{"name":"TopCat.isOpenEmbedding_iff_isIso_comp","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X Y Z : TopCat\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\ninst✝ : CategoryTheory.IsIso f\n⊢ Iff (Topology.IsOpenEmbedding ⇑(CategoryTheory.CategoryStruct.comp f g)) (Topology.IsOpenEmbedding ⇑g)","decl":"theorem isOpenEmbedding_iff_isIso_comp {X Y Z : TopCat} (f : X ⟶ Y) (g : Y ⟶ Z) [IsIso f] :\n    IsOpenEmbedding (f ≫ g) ↔ IsOpenEmbedding g := by\n  constructor\n  · intro h\n    convert h.comp (TopCat.homeoOfIso (asIso f).symm).isOpenEmbedding\n    exact congrArg _ (IsIso.inv_hom_id_assoc f g).symm\n  · exact fun h => h.comp (TopCat.homeoOfIso (asIso f)).isOpenEmbedding\n\n"}
{"name":"TopCat.openEmbedding_iff_isIso_comp","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X Y Z : TopCat\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\ninst✝ : CategoryTheory.IsIso f\n⊢ Iff (Topology.IsOpenEmbedding ⇑(CategoryTheory.CategoryStruct.comp f g)) (Topology.IsOpenEmbedding ⇑g)","decl":"@[deprecated (since := \"2024-10-18\")]\nalias openEmbedding_iff_isIso_comp := isOpenEmbedding_iff_isIso_comp\n\n"}
{"name":"TopCat.isOpenEmbedding_iff_isIso_comp'","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X Y Z : TopCat\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\ninst✝ : CategoryTheory.IsIso f\n⊢ Iff (Topology.IsOpenEmbedding (CategoryTheory.CategoryStruct.comp ((CategoryTheory.forget TopCat).map f) ((CategoryTheory.forget TopCat).map g))) (Topology.IsOpenEmbedding ⇑g)","decl":"@[simp]\ntheorem isOpenEmbedding_iff_isIso_comp' {X Y Z : TopCat} (f : X ⟶ Y) (g : Y ⟶ Z) [IsIso f] :\n    IsOpenEmbedding ((forget TopCat).map f ≫ (forget TopCat).map g) ↔ IsOpenEmbedding g := by\n  simp only [← Functor.map_comp]\n  exact isOpenEmbedding_iff_isIso_comp f g\n\n"}
{"name":"TopCat.openEmbedding_iff_isIso_comp'","module":"Mathlib.Topology.Category.TopCat.Basic","initialProofState":"X Y Z : TopCat\nf : Quiver.Hom X Y\ng : Quiver.Hom Y Z\ninst✝ : CategoryTheory.IsIso f\n⊢ Iff (Topology.IsOpenEmbedding (CategoryTheory.CategoryStruct.comp ((CategoryTheory.forget TopCat).map f) ((CategoryTheory.forget TopCat).map g))) (Topology.IsOpenEmbedding ⇑g)","decl":"@[deprecated (since := \"2024-10-18\")]\nalias openEmbedding_iff_isIso_comp' := isOpenEmbedding_iff_isIso_comp'\n\n"}
