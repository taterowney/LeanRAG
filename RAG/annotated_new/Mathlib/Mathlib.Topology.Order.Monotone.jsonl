{"name":"MonotoneOn.map_csSup_of_continuousWithinAt","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : ConditionallyCompleteLinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderClosedTopology β\nf : α → β\nA : Set α\nCf : ContinuousWithinAt f A (SupSet.sSup A)\nMf : MonotoneOn f A\nA_nonemp : A.Nonempty\nA_bdd : autoParam (BddAbove A) _auto✝\n⊢ Eq (f (SupSet.sSup A)) (SupSet.sSup (Set.image f A))","decl":"/-- A monotone function continuous at the supremum of a nonempty set sends this supremum to\nthe supremum of the image of this set. -/\ntheorem MonotoneOn.map_csSup_of_continuousWithinAt {f : α → β} {A : Set α}\n    (Cf : ContinuousWithinAt f A (sSup A))\n    (Mf : MonotoneOn f A) (A_nonemp : A.Nonempty) (A_bdd : BddAbove A := by bddDefault) :\n    f (sSup A) = sSup (f '' A) :=\n  --This is a particular case of the more general `IsLUB.isLUB_of_tendsto`\n  .symm <| ((isLUB_csSup A_nonemp A_bdd).isLUB_of_tendsto Mf A_nonemp <|\n    Cf.mono_left fun ⦃_⦄ a ↦ a).csSup_eq (A_nonemp.image f)\n\n"}
{"name":"Monotone.map_csSup_of_continuousAt","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : ConditionallyCompleteLinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderClosedTopology β\nf : α → β\nA : Set α\nCf : ContinuousAt f (SupSet.sSup A)\nMf : Monotone f\nA_nonemp : A.Nonempty\nA_bdd : autoParam (BddAbove A) _auto✝\n⊢ Eq (f (SupSet.sSup A)) (SupSet.sSup (Set.image f A))","decl":"/-- A monotone function continuous at the supremum of a nonempty set sends this supremum to\nthe supremum of the image of this set. -/\ntheorem Monotone.map_csSup_of_continuousAt {f : α → β} {A : Set α}\n    (Cf : ContinuousAt f (sSup A)) (Mf : Monotone f) (A_nonemp : A.Nonempty)\n    (A_bdd : BddAbove A := by bddDefault) : f (sSup A) = sSup (f '' A) :=\n  MonotoneOn.map_csSup_of_continuousWithinAt Cf.continuousWithinAt\n    (Mf.monotoneOn _) A_nonemp A_bdd\n\n"}
{"name":"Monotone.map_sSup_of_continuousAt'","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : ConditionallyCompleteLinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderClosedTopology β\nf : α → β\nA : Set α\nCf : ContinuousAt f (SupSet.sSup A)\nMf : Monotone f\nA_nonemp : A.Nonempty\nA_bdd : autoParam (BddAbove A) _auto✝\n⊢ Eq (f (SupSet.sSup A)) (SupSet.sSup (Set.image f A))","decl":"@[deprecated (since := \"2024-08-26\")] alias Monotone.map_sSup_of_continuousAt' :=\n  Monotone.map_csSup_of_continuousAt\n\n"}
{"name":"Monotone.map_ciSup_of_continuousAt","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁶ : ConditionallyCompleteLinearOrder α\ninst✝⁵ : TopologicalSpace α\ninst✝⁴ : OrderTopology α\ninst✝³ : ConditionallyCompleteLinearOrder β\ninst✝² : TopologicalSpace β\ninst✝¹ : OrderClosedTopology β\nι : Sort u_3\ninst✝ : Nonempty ι\nf : α → β\ng : ι → α\nCf : ContinuousAt f (iSup g)\nMf : Monotone f\nbdd : autoParam (BddAbove (Set.range g)) _auto✝\n⊢ Eq (f (iSup fun i => g i)) (iSup fun i => f (g i))","decl":"/-- A monotone function continuous at the indexed supremum over a nonempty `Sort` sends this indexed\nsupremum to the indexed supremum of the composition. -/\ntheorem Monotone.map_ciSup_of_continuousAt {ι : Sort*} [Nonempty ι] {f : α → β} {g : ι → α}\n    (Cf : ContinuousAt f (iSup g)) (Mf : Monotone f)\n    (bdd : BddAbove (range g) := by bddDefault) : f (⨆ i, g i) = ⨆ i, f (g i) := by\n  rw [iSup, Monotone.map_csSup_of_continuousAt Cf Mf (range_nonempty g) bdd, ← range_comp, iSup,\n    comp_def]\n\n"}
{"name":"Monotone.map_iSup_of_continuousAt'","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁶ : ConditionallyCompleteLinearOrder α\ninst✝⁵ : TopologicalSpace α\ninst✝⁴ : OrderTopology α\ninst✝³ : ConditionallyCompleteLinearOrder β\ninst✝² : TopologicalSpace β\ninst✝¹ : OrderClosedTopology β\nι : Sort u_3\ninst✝ : Nonempty ι\nf : α → β\ng : ι → α\nCf : ContinuousAt f (iSup g)\nMf : Monotone f\nbdd : autoParam (BddAbove (Set.range g)) _auto✝\n⊢ Eq (f (iSup fun i => g i)) (iSup fun i => f (g i))","decl":"@[deprecated (since := \"2024-08-26\")] alias Monotone.map_iSup_of_continuousAt' :=\n  Monotone.map_ciSup_of_continuousAt\n\n"}
{"name":"MonotoneOn.map_csInf_of_continuousWithinAt","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : ConditionallyCompleteLinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderClosedTopology β\nf : α → β\nA : Set α\nCf : ContinuousWithinAt f A (InfSet.sInf A)\nMf : MonotoneOn f A\nA_nonemp : A.Nonempty\nA_bdd : autoParam (BddBelow A) _auto✝\n⊢ Eq (f (InfSet.sInf A)) (InfSet.sInf (Set.image f A))","decl":"/-- A monotone function continuous at the infimum of a nonempty set sends this infimum to\nthe infimum of the image of this set. -/\ntheorem MonotoneOn.map_csInf_of_continuousWithinAt {f : α → β} {A : Set α}\n    (Cf : ContinuousWithinAt f A (sInf A))\n    (Mf : MonotoneOn f A) (A_nonemp : A.Nonempty) (A_bdd : BddBelow A := by bddDefault) :\n    f (sInf A) = sInf (f '' A) :=\n  MonotoneOn.map_csSup_of_continuousWithinAt (α := αᵒᵈ) (β := βᵒᵈ) Cf Mf.dual A_nonemp A_bdd\n\n"}
{"name":"Monotone.map_csInf_of_continuousAt","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : ConditionallyCompleteLinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderClosedTopology β\nf : α → β\nA : Set α\nCf : ContinuousAt f (InfSet.sInf A)\nMf : Monotone f\nA_nonemp : A.Nonempty\nA_bdd : autoParam (BddBelow A) _auto✝\n⊢ Eq (f (InfSet.sInf A)) (InfSet.sInf (Set.image f A))","decl":"/-- A monotone function continuous at the infimum of a nonempty set sends this infimum to\nthe infimum of the image of this set. -/\ntheorem Monotone.map_csInf_of_continuousAt {f : α → β} {A : Set α} (Cf : ContinuousAt f (sInf A))\n    (Mf : Monotone f) (A_nonemp : A.Nonempty) (A_bdd : BddBelow A := by bddDefault) :\n    f (sInf A) = sInf (f '' A) :=\n  Monotone.map_csSup_of_continuousAt (α := αᵒᵈ) (β := βᵒᵈ) Cf Mf.dual A_nonemp A_bdd\n\n"}
{"name":"Monotone.map_sInf_of_continuousAt'","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : ConditionallyCompleteLinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderClosedTopology β\nf : α → β\nA : Set α\nCf : ContinuousAt f (InfSet.sInf A)\nMf : Monotone f\nA_nonemp : A.Nonempty\nA_bdd : autoParam (BddBelow A) _auto✝\n⊢ Eq (f (InfSet.sInf A)) (InfSet.sInf (Set.image f A))","decl":"@[deprecated (since := \"2024-08-26\")] alias Monotone.map_sInf_of_continuousAt' :=\n  Monotone.map_csInf_of_continuousAt\n\n"}
{"name":"Monotone.map_ciInf_of_continuousAt","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁶ : ConditionallyCompleteLinearOrder α\ninst✝⁵ : TopologicalSpace α\ninst✝⁴ : OrderTopology α\ninst✝³ : ConditionallyCompleteLinearOrder β\ninst✝² : TopologicalSpace β\ninst✝¹ : OrderClosedTopology β\nι : Sort u_3\ninst✝ : Nonempty ι\nf : α → β\ng : ι → α\nCf : ContinuousAt f (iInf g)\nMf : Monotone f\nbdd : autoParam (BddBelow (Set.range g)) _auto✝\n⊢ Eq (f (iInf fun i => g i)) (iInf fun i => f (g i))","decl":"/-- A monotone function continuous at the indexed infimum over a nonempty `Sort` sends this indexed\ninfimum to the indexed infimum of the composition. -/\ntheorem Monotone.map_ciInf_of_continuousAt {ι : Sort*} [Nonempty ι] {f : α → β} {g : ι → α}\n    (Cf : ContinuousAt f (iInf g)) (Mf : Monotone f)\n    (bdd : BddBelow (range g) := by bddDefault) : f (⨅ i, g i) = ⨅ i, f (g i) := by\n  rw [iInf, Monotone.map_csInf_of_continuousAt Cf Mf (range_nonempty g) bdd, ← range_comp, iInf,\n    comp_def]\n\n"}
{"name":"Monotone.map_iInf_of_continuousAt'","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁶ : ConditionallyCompleteLinearOrder α\ninst✝⁵ : TopologicalSpace α\ninst✝⁴ : OrderTopology α\ninst✝³ : ConditionallyCompleteLinearOrder β\ninst✝² : TopologicalSpace β\ninst✝¹ : OrderClosedTopology β\nι : Sort u_3\ninst✝ : Nonempty ι\nf : α → β\ng : ι → α\nCf : ContinuousAt f (iInf g)\nMf : Monotone f\nbdd : autoParam (BddBelow (Set.range g)) _auto✝\n⊢ Eq (f (iInf fun i => g i)) (iInf fun i => f (g i))","decl":"@[deprecated (since := \"2024-08-26\")] alias Monotone.map_iInf_of_continuousAt' :=\n  Monotone.map_ciInf_of_continuousAt\n\n"}
{"name":"AntitoneOn.map_csInf_of_continuousWithinAt","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : ConditionallyCompleteLinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderClosedTopology β\nf : α → β\nA : Set α\nCf : ContinuousWithinAt f A (InfSet.sInf A)\nAf : AntitoneOn f A\nA_nonemp : A.Nonempty\nA_bdd : autoParam (BddBelow A) _auto✝\n⊢ Eq (f (InfSet.sInf A)) (SupSet.sSup (Set.image f A))","decl":"/-- An antitone function continuous at the infimum of a nonempty set sends this infimum to\nthe supremum of the image of this set. -/\ntheorem AntitoneOn.map_csInf_of_continuousWithinAt {f : α → β} {A : Set α}\n    (Cf : ContinuousWithinAt f A (sInf A))\n    (Af : AntitoneOn f A) (A_nonemp : A.Nonempty) (A_bdd : BddBelow A := by bddDefault) :\n    f (sInf A) = sSup (f '' A) :=\n  MonotoneOn.map_csInf_of_continuousWithinAt (β := βᵒᵈ) Cf Af.dual_right A_nonemp A_bdd\n\n"}
{"name":"Antitone.map_csInf_of_continuousAt","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : ConditionallyCompleteLinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderClosedTopology β\nf : α → β\nA : Set α\nCf : ContinuousAt f (InfSet.sInf A)\nAf : Antitone f\nA_nonemp : A.Nonempty\nA_bdd : autoParam (BddBelow A) _auto✝\n⊢ Eq (f (InfSet.sInf A)) (SupSet.sSup (Set.image f A))","decl":"/-- An antitone function continuous at the infimum of a nonempty set sends this infimum to\nthe supremum of the image of this set. -/\ntheorem Antitone.map_csInf_of_continuousAt {f : α → β} {A : Set α} (Cf : ContinuousAt f (sInf A))\n    (Af : Antitone f) (A_nonemp : A.Nonempty) (A_bdd : BddBelow A := by bddDefault) :\n    f (sInf A) = sSup (f '' A) :=\n  Monotone.map_csInf_of_continuousAt (β := βᵒᵈ) Cf Af.dual_right A_nonemp A_bdd\n\n"}
{"name":"Antitone.map_sInf_of_continuousAt'","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : ConditionallyCompleteLinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderClosedTopology β\nf : α → β\nA : Set α\nCf : ContinuousAt f (InfSet.sInf A)\nAf : Antitone f\nA_nonemp : A.Nonempty\nA_bdd : autoParam (BddBelow A) _auto✝\n⊢ Eq (f (InfSet.sInf A)) (SupSet.sSup (Set.image f A))","decl":"@[deprecated (since := \"2024-08-26\")] alias Antitone.map_sInf_of_continuousAt' :=\n  Antitone.map_csInf_of_continuousAt\n\n"}
{"name":"Antitone.map_ciInf_of_continuousAt","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁶ : ConditionallyCompleteLinearOrder α\ninst✝⁵ : TopologicalSpace α\ninst✝⁴ : OrderTopology α\ninst✝³ : ConditionallyCompleteLinearOrder β\ninst✝² : TopologicalSpace β\ninst✝¹ : OrderClosedTopology β\nι : Sort u_3\ninst✝ : Nonempty ι\nf : α → β\ng : ι → α\nCf : ContinuousAt f (iInf g)\nAf : Antitone f\nbdd : autoParam (BddBelow (Set.range g)) _auto✝\n⊢ Eq (f (iInf fun i => g i)) (iSup fun i => f (g i))","decl":"/-- An antitone function continuous at the indexed infimum over a nonempty `Sort` sends this indexed\ninfimum to the indexed supremum of the composition. -/\ntheorem Antitone.map_ciInf_of_continuousAt {ι : Sort*} [Nonempty ι] {f : α → β} {g : ι → α}\n    (Cf : ContinuousAt f (iInf g)) (Af : Antitone f)\n    (bdd : BddBelow (range g) := by bddDefault) : f (⨅ i, g i) = ⨆ i, f (g i) := by\n  rw [iInf, Antitone.map_csInf_of_continuousAt Cf Af (range_nonempty g) bdd, ← range_comp, iSup,\n    comp_def]\n\n"}
{"name":"Antitone.map_iInf_of_continuousAt'","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁶ : ConditionallyCompleteLinearOrder α\ninst✝⁵ : TopologicalSpace α\ninst✝⁴ : OrderTopology α\ninst✝³ : ConditionallyCompleteLinearOrder β\ninst✝² : TopologicalSpace β\ninst✝¹ : OrderClosedTopology β\nι : Sort u_3\ninst✝ : Nonempty ι\nf : α → β\ng : ι → α\nCf : ContinuousAt f (iInf g)\nAf : Antitone f\nbdd : autoParam (BddBelow (Set.range g)) _auto✝\n⊢ Eq (f (iInf fun i => g i)) (iSup fun i => f (g i))","decl":"@[deprecated (since := \"2024-08-26\")] alias Antitone.map_iInf_of_continuousAt' :=\n  Antitone.map_ciInf_of_continuousAt\n\n"}
{"name":"AntitoneOn.map_csSup_of_continuousWithinAt","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : ConditionallyCompleteLinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderClosedTopology β\nf : α → β\nA : Set α\nCf : ContinuousWithinAt f A (SupSet.sSup A)\nAf : AntitoneOn f A\nA_nonemp : A.Nonempty\nA_bdd : autoParam (BddAbove A) _auto✝\n⊢ Eq (f (SupSet.sSup A)) (InfSet.sInf (Set.image f A))","decl":"/-- An antitone function continuous at the supremum of a nonempty set sends this supremum to\nthe infimum of the image of this set. -/\ntheorem AntitoneOn.map_csSup_of_continuousWithinAt {f : α → β} {A : Set α}\n    (Cf : ContinuousWithinAt f A (sSup A))\n    (Af : AntitoneOn f A) (A_nonemp : A.Nonempty) (A_bdd : BddAbove A := by bddDefault) :\n    f (sSup A) = sInf (f '' A) :=\n  MonotoneOn.map_csSup_of_continuousWithinAt (β := βᵒᵈ) Cf Af.dual_right A_nonemp A_bdd\n\n"}
{"name":"Antitone.map_csSup_of_continuousAt","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : ConditionallyCompleteLinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderClosedTopology β\nf : α → β\nA : Set α\nCf : ContinuousAt f (SupSet.sSup A)\nAf : Antitone f\nA_nonemp : A.Nonempty\nA_bdd : autoParam (BddAbove A) _auto✝\n⊢ Eq (f (SupSet.sSup A)) (InfSet.sInf (Set.image f A))","decl":"/-- An antitone function continuous at the supremum of a nonempty set sends this supremum to\nthe infimum of the image of this set. -/\ntheorem Antitone.map_csSup_of_continuousAt {f : α → β} {A : Set α} (Cf : ContinuousAt f (sSup A))\n    (Af : Antitone f) (A_nonemp : A.Nonempty) (A_bdd : BddAbove A := by bddDefault) :\n    f (sSup A) = sInf (f '' A) :=\n  Monotone.map_csSup_of_continuousAt (β := βᵒᵈ) Cf Af.dual_right A_nonemp A_bdd\n\n"}
{"name":"Antitone.map_sSup_of_continuousAt'","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : ConditionallyCompleteLinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderClosedTopology β\nf : α → β\nA : Set α\nCf : ContinuousAt f (SupSet.sSup A)\nAf : Antitone f\nA_nonemp : A.Nonempty\nA_bdd : autoParam (BddAbove A) _auto✝\n⊢ Eq (f (SupSet.sSup A)) (InfSet.sInf (Set.image f A))","decl":"@[deprecated (since := \"2024-08-26\")] alias Antitone.map_sSup_of_continuousAt' :=\n  Antitone.map_csSup_of_continuousAt\n\n"}
{"name":"Antitone.map_ciSup_of_continuousAt","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁶ : ConditionallyCompleteLinearOrder α\ninst✝⁵ : TopologicalSpace α\ninst✝⁴ : OrderTopology α\ninst✝³ : ConditionallyCompleteLinearOrder β\ninst✝² : TopologicalSpace β\ninst✝¹ : OrderClosedTopology β\nι : Sort u_3\ninst✝ : Nonempty ι\nf : α → β\ng : ι → α\nCf : ContinuousAt f (iSup g)\nAf : Antitone f\nbdd : autoParam (BddAbove (Set.range g)) _auto✝\n⊢ Eq (f (iSup fun i => g i)) (iInf fun i => f (g i))","decl":"/-- An antitone function continuous at the indexed supremum over a nonempty `Sort` sends this\nindexed supremum to the indexed infimum of the composition. -/\ntheorem Antitone.map_ciSup_of_continuousAt {ι : Sort*} [Nonempty ι] {f : α → β} {g : ι → α}\n    (Cf : ContinuousAt f (iSup g)) (Af : Antitone f)\n    (bdd : BddAbove (range g) := by bddDefault) : f (⨆ i, g i) = ⨅ i, f (g i) := by\n  rw [iSup, Antitone.map_csSup_of_continuousAt Cf Af (range_nonempty g) bdd, ← range_comp, iInf,\n    comp_def]\n\n"}
{"name":"Antitone.map_iSup_of_continuousAt'","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁶ : ConditionallyCompleteLinearOrder α\ninst✝⁵ : TopologicalSpace α\ninst✝⁴ : OrderTopology α\ninst✝³ : ConditionallyCompleteLinearOrder β\ninst✝² : TopologicalSpace β\ninst✝¹ : OrderClosedTopology β\nι : Sort u_3\ninst✝ : Nonempty ι\nf : α → β\ng : ι → α\nCf : ContinuousAt f (iSup g)\nAf : Antitone f\nbdd : autoParam (BddAbove (Set.range g)) _auto✝\n⊢ Eq (f (iSup fun i => g i)) (iInf fun i => f (g i))","decl":"@[deprecated (since := \"2024-08-26\")] alias Antitone.map_iSup_of_continuousAt' :=\n  Antitone.map_ciSup_of_continuousAt\n\n"}
{"name":"sSup_mem_closure","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\ninst✝² : CompleteLinearOrder α\ninst✝¹ : TopologicalSpace α\ninst✝ : OrderTopology α\ns : Set α\nhs : s.Nonempty\n⊢ Membership.mem (closure s) (SupSet.sSup s)","decl":"theorem sSup_mem_closure {s : Set α} (hs : s.Nonempty) : sSup s ∈ closure s :=\n  (isLUB_sSup s).mem_closure hs\n\n"}
{"name":"sInf_mem_closure","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\ninst✝² : CompleteLinearOrder α\ninst✝¹ : TopologicalSpace α\ninst✝ : OrderTopology α\ns : Set α\nhs : s.Nonempty\n⊢ Membership.mem (closure s) (InfSet.sInf s)","decl":"theorem sInf_mem_closure {s : Set α} (hs : s.Nonempty) : sInf s ∈ closure s :=\n  (isGLB_sInf s).mem_closure hs\n\n"}
{"name":"IsClosed.sSup_mem","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\ninst✝² : CompleteLinearOrder α\ninst✝¹ : TopologicalSpace α\ninst✝ : OrderTopology α\ns : Set α\nhs : s.Nonempty\nhc : IsClosed s\n⊢ Membership.mem s (SupSet.sSup s)","decl":"theorem IsClosed.sSup_mem {s : Set α} (hs : s.Nonempty) (hc : IsClosed s) : sSup s ∈ s :=\n  (isLUB_sSup s).mem_of_isClosed hs hc\n\n"}
{"name":"IsClosed.sInf_mem","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\ninst✝² : CompleteLinearOrder α\ninst✝¹ : TopologicalSpace α\ninst✝ : OrderTopology α\ns : Set α\nhs : s.Nonempty\nhc : IsClosed s\n⊢ Membership.mem s (InfSet.sInf s)","decl":"theorem IsClosed.sInf_mem {s : Set α} (hs : s.Nonempty) (hc : IsClosed s) : sInf s ∈ s :=\n  (isGLB_sInf s).mem_of_isClosed hs hc\n\n"}
{"name":"MonotoneOn.map_sSup_of_continuousWithinAt","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : CompleteLinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : CompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderClosedTopology β\nf : α → β\ns : Set α\nCf : ContinuousWithinAt f s (SupSet.sSup s)\nMf : MonotoneOn f s\nfbot : Eq (f Bot.bot) Bot.bot\n⊢ Eq (f (SupSet.sSup s)) (SupSet.sSup (Set.image f s))","decl":"/-- A monotone function `f` sending `bot` to `bot` and continuous at the supremum of a set sends\nthis supremum to the supremum of the image of this set. -/\ntheorem MonotoneOn.map_sSup_of_continuousWithinAt {f : α → β} {s : Set α}\n    (Cf : ContinuousWithinAt f s (sSup s))\n    (Mf : MonotoneOn f s) (fbot : f ⊥ = ⊥) : f (sSup s) = sSup (f '' s) := by\n  rcases s.eq_empty_or_nonempty with h | h\n  · simp [h, fbot]\n  · exact Mf.map_csSup_of_continuousWithinAt Cf h\n\n"}
{"name":"Monotone.map_sSup_of_continuousAt","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : CompleteLinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : CompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderClosedTopology β\nf : α → β\ns : Set α\nCf : ContinuousAt f (SupSet.sSup s)\nMf : Monotone f\nfbot : Eq (f Bot.bot) Bot.bot\n⊢ Eq (f (SupSet.sSup s)) (SupSet.sSup (Set.image f s))","decl":"/-- A monotone function `f` sending `bot` to `bot` and continuous at the supremum of a set sends\nthis supremum to the supremum of the image of this set. -/\ntheorem Monotone.map_sSup_of_continuousAt {f : α → β} {s : Set α} (Cf : ContinuousAt f (sSup s))\n    (Mf : Monotone f) (fbot : f ⊥ = ⊥) : f (sSup s) = sSup (f '' s) :=\n  MonotoneOn.map_sSup_of_continuousWithinAt Cf.continuousWithinAt (Mf.monotoneOn _) fbot\n\n"}
{"name":"Monotone.map_iSup_of_continuousAt","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : CompleteLinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : CompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderClosedTopology β\nι : Sort u_3\nf : α → β\ng : ι → α\nCf : ContinuousAt f (iSup g)\nMf : Monotone f\nfbot : Eq (f Bot.bot) Bot.bot\n⊢ Eq (f (iSup fun i => g i)) (iSup fun i => f (g i))","decl":"/-- If a monotone function sending `bot` to `bot` is continuous at the indexed supremum over\na `Sort`, then it sends this indexed supremum to the indexed supremum of the composition. -/\ntheorem Monotone.map_iSup_of_continuousAt {ι : Sort*} {f : α → β} {g : ι → α}\n    (Cf : ContinuousAt f (iSup g)) (Mf : Monotone f) (fbot : f ⊥ = ⊥) :\n    f (⨆ i, g i) = ⨆ i, f (g i) := by\n  rw [iSup, Mf.map_sSup_of_continuousAt Cf fbot, ← range_comp, iSup, comp_def]\n\n"}
{"name":"MonotoneOn.map_sInf_of_continuousWithinAt","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : CompleteLinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : CompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderClosedTopology β\nf : α → β\ns : Set α\nCf : ContinuousWithinAt f s (InfSet.sInf s)\nMf : MonotoneOn f s\nftop : Eq (f Top.top) Top.top\n⊢ Eq (f (InfSet.sInf s)) (InfSet.sInf (Set.image f s))","decl":"/-- A monotone function `f` sending `top` to `top` and continuous at the infimum of a set sends\nthis infimum to the infimum of the image of this set. -/\ntheorem MonotoneOn.map_sInf_of_continuousWithinAt {f : α → β} {s : Set α}\n    (Cf : ContinuousWithinAt f s (sInf s)) (Mf : MonotoneOn f s) (ftop : f ⊤ = ⊤) :\n    f (sInf s) = sInf (f '' s) :=\n  MonotoneOn.map_sSup_of_continuousWithinAt (α := αᵒᵈ) (β := βᵒᵈ) Cf Mf.dual ftop\n\n"}
{"name":"Monotone.map_sInf_of_continuousAt","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : CompleteLinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : CompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderClosedTopology β\nf : α → β\ns : Set α\nCf : ContinuousAt f (InfSet.sInf s)\nMf : Monotone f\nftop : Eq (f Top.top) Top.top\n⊢ Eq (f (InfSet.sInf s)) (InfSet.sInf (Set.image f s))","decl":"/-- A monotone function `f` sending `top` to `top` and continuous at the infimum of a set sends\nthis infimum to the infimum of the image of this set. -/\ntheorem Monotone.map_sInf_of_continuousAt {f : α → β} {s : Set α} (Cf : ContinuousAt f (sInf s))\n    (Mf : Monotone f) (ftop : f ⊤ = ⊤) : f (sInf s) = sInf (f '' s) :=\n  Monotone.map_sSup_of_continuousAt (α := αᵒᵈ) (β := βᵒᵈ) Cf Mf.dual ftop\n\n"}
{"name":"Monotone.map_iInf_of_continuousAt","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : CompleteLinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : CompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderClosedTopology β\nι : Sort u_3\nf : α → β\ng : ι → α\nCf : ContinuousAt f (iInf g)\nMf : Monotone f\nftop : Eq (f Top.top) Top.top\n⊢ Eq (f (iInf g)) (iInf (Function.comp f g))","decl":"/-- If a monotone function sending `top` to `top` is continuous at the indexed infimum over\na `Sort`, then it sends this indexed infimum to the indexed infimum of the composition. -/\ntheorem Monotone.map_iInf_of_continuousAt {ι : Sort*} {f : α → β} {g : ι → α}\n    (Cf : ContinuousAt f (iInf g)) (Mf : Monotone f) (ftop : f ⊤ = ⊤) : f (iInf g) = iInf (f ∘ g) :=\n  Monotone.map_iSup_of_continuousAt (α := αᵒᵈ) (β := βᵒᵈ) Cf Mf.dual ftop\n\n"}
{"name":"AntitoneOn.map_sSup_of_continuousWithinAt","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : CompleteLinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : CompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderClosedTopology β\nf : α → β\ns : Set α\nCf : ContinuousWithinAt f s (SupSet.sSup s)\nAf : AntitoneOn f s\nfbot : Eq (f Bot.bot) Top.top\n⊢ Eq (f (SupSet.sSup s)) (InfSet.sInf (Set.image f s))","decl":"/-- An antitone function `f` sending `bot` to `top` and continuous at the supremum of a set sends\nthis supremum to the infimum of the image of this set. -/\ntheorem AntitoneOn.map_sSup_of_continuousWithinAt {f : α → β} {s : Set α}\n    (Cf : ContinuousWithinAt f s (sSup s)) (Af : AntitoneOn f s) (fbot : f ⊥ = ⊤) :\n    f (sSup s) = sInf (f '' s) :=\n  MonotoneOn.map_sSup_of_continuousWithinAt\n    (show ContinuousWithinAt (OrderDual.toDual ∘ f) s (sSup s) from Cf) Af fbot\n\n"}
{"name":"Antitone.map_sSup_of_continuousAt","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : CompleteLinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : CompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderClosedTopology β\nf : α → β\ns : Set α\nCf : ContinuousAt f (SupSet.sSup s)\nAf : Antitone f\nfbot : Eq (f Bot.bot) Top.top\n⊢ Eq (f (SupSet.sSup s)) (InfSet.sInf (Set.image f s))","decl":"/-- An antitone function `f` sending `bot` to `top` and continuous at the supremum of a set sends\nthis supremum to the infimum of the image of this set. -/\ntheorem Antitone.map_sSup_of_continuousAt {f : α → β} {s : Set α} (Cf : ContinuousAt f (sSup s))\n    (Af : Antitone f) (fbot : f ⊥ = ⊤) : f (sSup s) = sInf (f '' s) :=\n  Monotone.map_sSup_of_continuousAt (show ContinuousAt (OrderDual.toDual ∘ f) (sSup s) from Cf) Af\n    fbot\n\n"}
{"name":"Antitone.map_iSup_of_continuousAt","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : CompleteLinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : CompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderClosedTopology β\nι : Sort u_3\nf : α → β\ng : ι → α\nCf : ContinuousAt f (iSup g)\nAf : Antitone f\nfbot : Eq (f Bot.bot) Top.top\n⊢ Eq (f (iSup fun i => g i)) (iInf fun i => f (g i))","decl":"/-- An antitone function sending `bot` to `top` is continuous at the indexed supremum over\na `Sort`, then it sends this indexed supremum to the indexed supremum of the composition. -/\ntheorem Antitone.map_iSup_of_continuousAt {ι : Sort*} {f : α → β} {g : ι → α}\n    (Cf : ContinuousAt f (iSup g)) (Af : Antitone f) (fbot : f ⊥ = ⊤) :\n    f (⨆ i, g i) = ⨅ i, f (g i) :=\n  Monotone.map_iSup_of_continuousAt (show ContinuousAt (OrderDual.toDual ∘ f) (iSup g) from Cf) Af\n    fbot\n\n"}
{"name":"AntitoneOn.map_sInf_of_continuousWithinAt","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : CompleteLinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : CompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderClosedTopology β\nf : α → β\ns : Set α\nCf : ContinuousWithinAt f s (InfSet.sInf s)\nAf : AntitoneOn f s\nftop : Eq (f Top.top) Bot.bot\n⊢ Eq (f (InfSet.sInf s)) (SupSet.sSup (Set.image f s))","decl":"/-- An antitone function `f` sending `top` to `bot` and continuous at the infimum of a set sends\nthis infimum to the supremum of the image of this set. -/\ntheorem AntitoneOn.map_sInf_of_continuousWithinAt {f : α → β} {s : Set α}\n    (Cf : ContinuousWithinAt f s (sInf s)) (Af : AntitoneOn f s) (ftop : f ⊤ = ⊥) :\n    f (sInf s) = sSup (f '' s) :=\n  MonotoneOn.map_sInf_of_continuousWithinAt\n    (show ContinuousWithinAt (OrderDual.toDual ∘ f) s (sInf s) from Cf) Af ftop\n\n"}
{"name":"Antitone.map_sInf_of_continuousAt","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : CompleteLinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : CompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderClosedTopology β\nf : α → β\ns : Set α\nCf : ContinuousAt f (InfSet.sInf s)\nAf : Antitone f\nftop : Eq (f Top.top) Bot.bot\n⊢ Eq (f (InfSet.sInf s)) (SupSet.sSup (Set.image f s))","decl":"/-- An antitone function `f` sending `top` to `bot` and continuous at the infimum of a set sends\nthis infimum to the supremum of the image of this set. -/\ntheorem Antitone.map_sInf_of_continuousAt {f : α → β} {s : Set α} (Cf : ContinuousAt f (sInf s))\n    (Af : Antitone f) (ftop : f ⊤ = ⊥) : f (sInf s) = sSup (f '' s) :=\n  Monotone.map_sInf_of_continuousAt (show ContinuousAt (OrderDual.toDual ∘ f) (sInf s) from Cf) Af\n    ftop\n\n"}
{"name":"Antitone.map_iInf_of_continuousAt","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\nβ : Type u_2\ninst✝⁵ : CompleteLinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : CompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderClosedTopology β\nι : Sort u_3\nf : α → β\ng : ι → α\nCf : ContinuousAt f (iInf g)\nAf : Antitone f\nftop : Eq (f Top.top) Bot.bot\n⊢ Eq (f (iInf g)) (iSup (Function.comp f g))","decl":"/-- If an antitone function sending `top` to `bot` is continuous at the indexed infimum over\na `Sort`, then it sends this indexed infimum to the indexed supremum of the composition. -/\ntheorem Antitone.map_iInf_of_continuousAt {ι : Sort*} {f : α → β} {g : ι → α}\n    (Cf : ContinuousAt f (iInf g)) (Af : Antitone f) (ftop : f ⊤ = ⊥) : f (iInf g) = iSup (f ∘ g) :=\n  Monotone.map_iInf_of_continuousAt (show ContinuousAt (OrderDual.toDual ∘ f) (iInf g) from Cf) Af\n    ftop\n\n"}
{"name":"csSup_mem_closure","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\ninst✝² : ConditionallyCompleteLinearOrder α\ninst✝¹ : TopologicalSpace α\ninst✝ : OrderTopology α\ns : Set α\nhs : s.Nonempty\nB : BddAbove s\n⊢ Membership.mem (closure s) (SupSet.sSup s)","decl":"theorem csSup_mem_closure {s : Set α} (hs : s.Nonempty) (B : BddAbove s) : sSup s ∈ closure s :=\n  (isLUB_csSup hs B).mem_closure hs\n\n"}
{"name":"csInf_mem_closure","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\ninst✝² : ConditionallyCompleteLinearOrder α\ninst✝¹ : TopologicalSpace α\ninst✝ : OrderTopology α\ns : Set α\nhs : s.Nonempty\nB : BddBelow s\n⊢ Membership.mem (closure s) (InfSet.sInf s)","decl":"theorem csInf_mem_closure {s : Set α} (hs : s.Nonempty) (B : BddBelow s) : sInf s ∈ closure s :=\n  (isGLB_csInf hs B).mem_closure hs\n\n"}
{"name":"IsClosed.csSup_mem","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\ninst✝² : ConditionallyCompleteLinearOrder α\ninst✝¹ : TopologicalSpace α\ninst✝ : OrderTopology α\ns : Set α\nhc : IsClosed s\nhs : s.Nonempty\nB : BddAbove s\n⊢ Membership.mem s (SupSet.sSup s)","decl":"theorem IsClosed.csSup_mem {s : Set α} (hc : IsClosed s) (hs : s.Nonempty) (B : BddAbove s) :\n    sSup s ∈ s :=\n  (isLUB_csSup hs B).mem_of_isClosed hs hc\n\n"}
{"name":"IsClosed.csInf_mem","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\ninst✝² : ConditionallyCompleteLinearOrder α\ninst✝¹ : TopologicalSpace α\ninst✝ : OrderTopology α\ns : Set α\nhc : IsClosed s\nhs : s.Nonempty\nB : BddBelow s\n⊢ Membership.mem s (InfSet.sInf s)","decl":"theorem IsClosed.csInf_mem {s : Set α} (hc : IsClosed s) (hs : s.Nonempty) (B : BddBelow s) :\n    sInf s ∈ s :=\n  (isGLB_csInf hs B).mem_of_isClosed hs hc\n\n"}
{"name":"IsClosed.isLeast_csInf","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\ninst✝² : ConditionallyCompleteLinearOrder α\ninst✝¹ : TopologicalSpace α\ninst✝ : OrderTopology α\ns : Set α\nhc : IsClosed s\nhs : s.Nonempty\nB : BddBelow s\n⊢ IsLeast s (InfSet.sInf s)","decl":"theorem IsClosed.isLeast_csInf {s : Set α} (hc : IsClosed s) (hs : s.Nonempty) (B : BddBelow s) :\n    IsLeast s (sInf s) :=\n  ⟨hc.csInf_mem hs B, (isGLB_csInf hs B).1⟩\n\n"}
{"name":"IsClosed.isGreatest_csSup","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_1\ninst✝² : ConditionallyCompleteLinearOrder α\ninst✝¹ : TopologicalSpace α\ninst✝ : OrderTopology α\ns : Set α\nhc : IsClosed s\nhs : s.Nonempty\nB : BddAbove s\n⊢ IsGreatest s (SupSet.sSup s)","decl":"theorem IsClosed.isGreatest_csSup {s : Set α} (hc : IsClosed s) (hs : s.Nonempty) (B : BddAbove s) :\n    IsGreatest s (sSup s) :=\n  IsClosed.isLeast_csInf (α := αᵒᵈ) hc hs B\n\n"}
{"name":"MonotoneOn.tendsto_nhdsWithin_Ioo_left","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_3\nβ : Type u_4\ninst✝⁵ : LinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderTopology β\nf : α → β\nx y : α\nh_nonempty : (Set.Ioo y x).Nonempty\nMf : MonotoneOn f (Set.Ioo y x)\nh_bdd : BddAbove (Set.image f (Set.Ioo y x))\n⊢ Filter.Tendsto f (nhdsWithin x (Set.Iio x)) (nhds (SupSet.sSup (Set.image f (Set.Ioo y x))))","decl":"lemma MonotoneOn.tendsto_nhdsWithin_Ioo_left {α β : Type*} [LinearOrder α] [TopologicalSpace α]\n    [OrderTopology α] [ConditionallyCompleteLinearOrder β] [TopologicalSpace β] [OrderTopology β]\n    {f : α → β} {x y : α} (h_nonempty : (Ioo y x).Nonempty) (Mf : MonotoneOn f (Ioo y x))\n    (h_bdd : BddAbove (f '' Ioo y x)) :\n    Tendsto f (𝓝[<] x) (𝓝 (sSup (f '' Ioo y x))) := by\n  refine tendsto_order.2 ⟨fun l hl => ?_, fun m hm => ?_⟩\n  · obtain ⟨z, ⟨yz, zx⟩, lz⟩ : ∃ a : α, a ∈ Ioo y x ∧ l < f a := by\n      simpa only [mem_image, exists_prop, exists_exists_and_eq_and] using\n        exists_lt_of_lt_csSup (h_nonempty.image _) hl\n    filter_upwards [Ioo_mem_nhdsLT zx] with w hw\n    exact lz.trans_le <| Mf ⟨yz, zx⟩ ⟨yz.trans_le hw.1.le, hw.2⟩ hw.1.le\n  · rcases h_nonempty with ⟨_, hy, hx⟩\n    filter_upwards [Ioo_mem_nhdsLT (hy.trans hx)] with w hw\n    exact (le_csSup h_bdd (mem_image_of_mem _ hw)).trans_lt hm\n\n"}
{"name":"MonotoneOn.tendsto_nhdsWithin_Ioo_right","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_3\nβ : Type u_4\ninst✝⁵ : LinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderTopology β\nf : α → β\nx y : α\nh_nonempty : (Set.Ioo x y).Nonempty\nMf : MonotoneOn f (Set.Ioo x y)\nh_bdd : BddBelow (Set.image f (Set.Ioo x y))\n⊢ Filter.Tendsto f (nhdsWithin x (Set.Ioi x)) (nhds (InfSet.sInf (Set.image f (Set.Ioo x y))))","decl":"lemma MonotoneOn.tendsto_nhdsWithin_Ioo_right {α β : Type*} [LinearOrder α] [TopologicalSpace α]\n    [OrderTopology α] [ConditionallyCompleteLinearOrder β] [TopologicalSpace β] [OrderTopology β]\n    {f : α → β} {x y : α} (h_nonempty : (Ioo x y).Nonempty) (Mf : MonotoneOn f (Ioo x y))\n    (h_bdd : BddBelow (f '' Ioo x y)) :\n    Tendsto f (𝓝[>] x) (𝓝 (sInf (f '' Ioo x y))) := by\n  refine tendsto_order.2 ⟨fun l hl => ?_, fun m hm => ?_⟩\n  · rcases h_nonempty with ⟨p, hy, hx⟩\n    filter_upwards [Ioo_mem_nhdsGT (hy.trans hx)] with w hw\n    exact hl.trans_le <| csInf_le h_bdd (mem_image_of_mem _ hw)\n  · obtain ⟨z, ⟨xz, zy⟩, zm⟩ : ∃ a : α, a ∈ Ioo x y ∧ f a < m := by\n      simpa [mem_image, exists_prop, exists_exists_and_eq_and] using\n        exists_lt_of_csInf_lt (h_nonempty.image _) hm\n    filter_upwards [Ioo_mem_nhdsGT xz] with w hw\n    exact (Mf ⟨hw.1, hw.2.trans zy⟩ ⟨xz, zy⟩ hw.2.le).trans_lt zm\n\n"}
{"name":"MonotoneOn.tendsto_nhdsLT","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_3\nβ : Type u_4\ninst✝⁵ : LinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderTopology β\nf : α → β\nx : α\nMf : MonotoneOn f (Set.Iio x)\nh_bdd : BddAbove (Set.image f (Set.Iio x))\n⊢ Filter.Tendsto f (nhdsWithin x (Set.Iio x)) (nhds (SupSet.sSup (Set.image f (Set.Iio x))))","decl":"lemma MonotoneOn.tendsto_nhdsLT {α β : Type*} [LinearOrder α] [TopologicalSpace α] [OrderTopology α]\n    [ConditionallyCompleteLinearOrder β] [TopologicalSpace β] [OrderTopology β] {f : α → β} {x : α}\n    (Mf : MonotoneOn f (Iio x)) (h_bdd : BddAbove (f '' Iio x)) :\n    Tendsto f (𝓝[<] x) (𝓝 (sSup (f '' Iio x))) := by\n  rcases eq_empty_or_nonempty (Iio x) with (h | h); · simp [h]\n  refine tendsto_order.2 ⟨fun l hl => ?_, fun m hm => ?_⟩\n  · obtain ⟨z, zx, lz⟩ : ∃ a : α, a < x ∧ l < f a := by\n      simpa only [mem_image, exists_prop, exists_exists_and_eq_and] using\n        exists_lt_of_lt_csSup (h.image _) hl\n    filter_upwards [Ioo_mem_nhdsLT zx] with y hy using lz.trans_le (Mf zx hy.2 hy.1.le)\n  · refine mem_of_superset self_mem_nhdsWithin fun y hy => lt_of_le_of_lt ?_ hm\n    exact le_csSup h_bdd (mem_image_of_mem _ hy)\n\n"}
{"name":"MonotoneOn.tendsto_nhdsWithin_Iio","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_3\nβ : Type u_4\ninst✝⁵ : LinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderTopology β\nf : α → β\nx : α\nMf : MonotoneOn f (Set.Iio x)\nh_bdd : BddAbove (Set.image f (Set.Iio x))\n⊢ Filter.Tendsto f (nhdsWithin x (Set.Iio x)) (nhds (SupSet.sSup (Set.image f (Set.Iio x))))","decl":"@[deprecated (since := \"2024-12-22\")]\nalias MonotoneOn.tendsto_nhdsWithin_Iio := MonotoneOn.tendsto_nhdsLT\n\n"}
{"name":"MonotoneOn.tendsto_nhdsGT","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_3\nβ : Type u_4\ninst✝⁵ : LinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderTopology β\nf : α → β\nx : α\nMf : MonotoneOn f (Set.Ioi x)\nh_bdd : BddBelow (Set.image f (Set.Ioi x))\n⊢ Filter.Tendsto f (nhdsWithin x (Set.Ioi x)) (nhds (InfSet.sInf (Set.image f (Set.Ioi x))))","decl":"lemma MonotoneOn.tendsto_nhdsGT {α β : Type*} [LinearOrder α] [TopologicalSpace α] [OrderTopology α]\n    [ConditionallyCompleteLinearOrder β] [TopologicalSpace β] [OrderTopology β] {f : α → β} {x : α}\n    (Mf : MonotoneOn f (Ioi x)) (h_bdd : BddBelow (f '' Ioi x)) :\n    Tendsto f (𝓝[>] x) (𝓝 (sInf (f '' Ioi x))) :=\n  MonotoneOn.tendsto_nhdsLT (α := αᵒᵈ) (β := βᵒᵈ) Mf.dual h_bdd\n\n"}
{"name":"MonotoneOn.tendsto_nhdsWithin_Ioi","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_3\nβ : Type u_4\ninst✝⁵ : LinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderTopology β\nf : α → β\nx : α\nMf : MonotoneOn f (Set.Ioi x)\nh_bdd : BddBelow (Set.image f (Set.Ioi x))\n⊢ Filter.Tendsto f (nhdsWithin x (Set.Ioi x)) (nhds (InfSet.sInf (Set.image f (Set.Ioi x))))","decl":"@[deprecated (since := \"2024-12-22\")]\nalias MonotoneOn.tendsto_nhdsWithin_Ioi := MonotoneOn.tendsto_nhdsGT\n\n"}
{"name":"Monotone.tendsto_nhdsLT","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_3\nβ : Type u_4\ninst✝⁵ : LinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderTopology β\nf : α → β\nMf : Monotone f\nx : α\n⊢ Filter.Tendsto f (nhdsWithin x (Set.Iio x)) (nhds (SupSet.sSup (Set.image f (Set.Iio x))))","decl":"/-- A monotone map has a limit to the left of any point `x`, equal to `sSup (f '' (Iio x))`. -/\ntheorem Monotone.tendsto_nhdsLT {α β : Type*} [LinearOrder α] [TopologicalSpace α] [OrderTopology α]\n    [ConditionallyCompleteLinearOrder β] [TopologicalSpace β] [OrderTopology β] {f : α → β}\n    (Mf : Monotone f) (x : α) : Tendsto f (𝓝[<] x) (𝓝 (sSup (f '' Iio x))) :=\n  MonotoneOn.tendsto_nhdsLT (Mf.monotoneOn _) (Mf.map_bddAbove bddAbove_Iio)\n\n"}
{"name":"Monotone.tendsto_nhdsWithin_Iio","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_3\nβ : Type u_4\ninst✝⁵ : LinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderTopology β\nf : α → β\nMf : Monotone f\nx : α\n⊢ Filter.Tendsto f (nhdsWithin x (Set.Iio x)) (nhds (SupSet.sSup (Set.image f (Set.Iio x))))","decl":"@[deprecated (since := \"2024-12-22\")]\nalias Monotone.tendsto_nhdsWithin_Iio := Monotone.tendsto_nhdsLT\n\n"}
{"name":"Monotone.tendsto_nhdsGT","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_3\nβ : Type u_4\ninst✝⁵ : LinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderTopology β\nf : α → β\nMf : Monotone f\nx : α\n⊢ Filter.Tendsto f (nhdsWithin x (Set.Ioi x)) (nhds (InfSet.sInf (Set.image f (Set.Ioi x))))","decl":"/-- A monotone map has a limit to the right of any point `x`, equal to `sInf (f '' (Ioi x))`. -/\ntheorem Monotone.tendsto_nhdsGT {α β : Type*} [LinearOrder α] [TopologicalSpace α] [OrderTopology α]\n    [ConditionallyCompleteLinearOrder β] [TopologicalSpace β] [OrderTopology β] {f : α → β}\n    (Mf : Monotone f) (x : α) : Tendsto f (𝓝[>] x) (𝓝 (sInf (f '' Ioi x))) :=\n  Monotone.tendsto_nhdsLT (α := αᵒᵈ) (β := βᵒᵈ) Mf.dual x\n\n"}
{"name":"Monotone.tendsto_nhdsWithin_Ioi","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_3\nβ : Type u_4\ninst✝⁵ : LinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderTopology β\nf : α → β\nMf : Monotone f\nx : α\n⊢ Filter.Tendsto f (nhdsWithin x (Set.Ioi x)) (nhds (InfSet.sInf (Set.image f (Set.Ioi x))))","decl":"@[deprecated (since := \"2024-12-22\")]\nalias Monotone.tendsto_nhdsWithin_Ioi := Monotone.tendsto_nhdsGT\n\n"}
{"name":"AntitoneOn.tendsto_nhdsWithin_Ioo_left","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_3\nβ : Type u_4\ninst✝⁵ : LinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderTopology β\nf : α → β\nx y : α\nh_nonempty : (Set.Ioo y x).Nonempty\nAf : AntitoneOn f (Set.Ioo y x)\nh_bdd : BddBelow (Set.image f (Set.Ioo y x))\n⊢ Filter.Tendsto f (nhdsWithin x (Set.Iio x)) (nhds (InfSet.sInf (Set.image f (Set.Ioo y x))))","decl":"lemma AntitoneOn.tendsto_nhdsWithin_Ioo_left {α β : Type*} [LinearOrder α] [TopologicalSpace α]\n    [OrderTopology α] [ConditionallyCompleteLinearOrder β] [TopologicalSpace β] [OrderTopology β]\n    {f : α → β} {x y : α} (h_nonempty : (Ioo y x).Nonempty) (Af : AntitoneOn f (Ioo y x))\n    (h_bdd : BddBelow (f '' Ioo y x)) :\n    Tendsto f (𝓝[<] x) (𝓝 (sInf (f '' Ioo y x))) :=\n  MonotoneOn.tendsto_nhdsWithin_Ioo_left h_nonempty Af.dual_right h_bdd\n\n"}
{"name":"AntitoneOn.tendsto_nhdsWithin_Ioo_right","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_3\nβ : Type u_4\ninst✝⁵ : LinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderTopology β\nf : α → β\nx y : α\nh_nonempty : (Set.Ioo x y).Nonempty\nAf : AntitoneOn f (Set.Ioo x y)\nh_bdd : BddAbove (Set.image f (Set.Ioo x y))\n⊢ Filter.Tendsto f (nhdsWithin x (Set.Ioi x)) (nhds (SupSet.sSup (Set.image f (Set.Ioo x y))))","decl":"lemma AntitoneOn.tendsto_nhdsWithin_Ioo_right {α β : Type*} [LinearOrder α] [TopologicalSpace α]\n    [OrderTopology α] [ConditionallyCompleteLinearOrder β] [TopologicalSpace β] [OrderTopology β]\n    {f : α → β} {x y : α} (h_nonempty : (Ioo x y).Nonempty) (Af : AntitoneOn f (Ioo x y))\n    (h_bdd : BddAbove (f '' Ioo x y)) :\n    Tendsto f (𝓝[>] x) (𝓝 (sSup (f '' Ioo x y))) :=\n  MonotoneOn.tendsto_nhdsWithin_Ioo_right h_nonempty Af.dual_right h_bdd\n\n"}
{"name":"AntitoneOn.tendsto_nhdsLT","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_3\nβ : Type u_4\ninst✝⁵ : LinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderTopology β\nf : α → β\nx : α\nAf : AntitoneOn f (Set.Iio x)\nh_bdd : BddBelow (Set.image f (Set.Iio x))\n⊢ Filter.Tendsto f (nhdsWithin x (Set.Iio x)) (nhds (InfSet.sInf (Set.image f (Set.Iio x))))","decl":"lemma AntitoneOn.tendsto_nhdsLT {α β : Type*} [LinearOrder α] [TopologicalSpace α] [OrderTopology α]\n    [ConditionallyCompleteLinearOrder β] [TopologicalSpace β] [OrderTopology β] {f : α → β} {x : α}\n    (Af : AntitoneOn f (Iio x)) (h_bdd : BddBelow (f '' Iio x)) :\n    Tendsto f (𝓝[<] x) (𝓝 (sInf (f '' Iio x))) :=\n  MonotoneOn.tendsto_nhdsLT Af.dual_right h_bdd\n\n"}
{"name":"AntitoneOn.tendsto_nhdsWithin_Iio","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_3\nβ : Type u_4\ninst✝⁵ : LinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderTopology β\nf : α → β\nx : α\nAf : AntitoneOn f (Set.Iio x)\nh_bdd : BddBelow (Set.image f (Set.Iio x))\n⊢ Filter.Tendsto f (nhdsWithin x (Set.Iio x)) (nhds (InfSet.sInf (Set.image f (Set.Iio x))))","decl":"@[deprecated (since := \"2024-12-22\")]\nalias AntitoneOn.tendsto_nhdsWithin_Iio := AntitoneOn.tendsto_nhdsLT\n\n"}
{"name":"AntitoneOn.tendsto_nhdsGT","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_3\nβ : Type u_4\ninst✝⁵ : LinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderTopology β\nf : α → β\nx : α\nAf : AntitoneOn f (Set.Ioi x)\nh_bdd : BddAbove (Set.image f (Set.Ioi x))\n⊢ Filter.Tendsto f (nhdsWithin x (Set.Ioi x)) (nhds (SupSet.sSup (Set.image f (Set.Ioi x))))","decl":"lemma AntitoneOn.tendsto_nhdsGT {α β : Type*} [LinearOrder α] [TopologicalSpace α] [OrderTopology α]\n    [ConditionallyCompleteLinearOrder β] [TopologicalSpace β] [OrderTopology β] {f : α → β} {x : α}\n    (Af : AntitoneOn f (Ioi x)) (h_bdd : BddAbove (f '' Ioi x)) :\n    Tendsto f (𝓝[>] x) (𝓝 (sSup (f '' Ioi x))) :=\n  MonotoneOn.tendsto_nhdsGT Af.dual_right h_bdd\n\n"}
{"name":"AntitoneOn.tendsto_nhdsWithin_Ioi","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_3\nβ : Type u_4\ninst✝⁵ : LinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderTopology β\nf : α → β\nx : α\nAf : AntitoneOn f (Set.Ioi x)\nh_bdd : BddAbove (Set.image f (Set.Ioi x))\n⊢ Filter.Tendsto f (nhdsWithin x (Set.Ioi x)) (nhds (SupSet.sSup (Set.image f (Set.Ioi x))))","decl":"@[deprecated (since := \"2024-12-22\")]\nalias AntitoneOn.tendsto_nhdsWithin_Ioi := AntitoneOn.tendsto_nhdsGT\n\n"}
{"name":"Antitone.tendsto_nhdsLT","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_3\nβ : Type u_4\ninst✝⁵ : LinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderTopology β\nf : α → β\nAf : Antitone f\nx : α\n⊢ Filter.Tendsto f (nhdsWithin x (Set.Iio x)) (nhds (InfSet.sInf (Set.image f (Set.Iio x))))","decl":"/-- An antitone map has a limit to the left of any point `x`, equal to `sInf (f '' (Iio x))`. -/\ntheorem Antitone.tendsto_nhdsLT {α β : Type*} [LinearOrder α] [TopologicalSpace α] [OrderTopology α]\n    [ConditionallyCompleteLinearOrder β] [TopologicalSpace β] [OrderTopology β] {f : α → β}\n    (Af : Antitone f) (x : α) : Tendsto f (𝓝[<] x) (𝓝 (sInf (f '' Iio x))) :=\n  Monotone.tendsto_nhdsLT Af.dual_right x\n\n"}
{"name":"Antitone.tendsto_nhdsWithin_Iio","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_3\nβ : Type u_4\ninst✝⁵ : LinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderTopology β\nf : α → β\nAf : Antitone f\nx : α\n⊢ Filter.Tendsto f (nhdsWithin x (Set.Iio x)) (nhds (InfSet.sInf (Set.image f (Set.Iio x))))","decl":"@[deprecated (since := \"2024-12-22\")]\nalias Antitone.tendsto_nhdsWithin_Iio := Antitone.tendsto_nhdsLT\n\n"}
{"name":"Antitone.tendsto_nhdsGT","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_3\nβ : Type u_4\ninst✝⁵ : LinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderTopology β\nf : α → β\nAf : Antitone f\nx : α\n⊢ Filter.Tendsto f (nhdsWithin x (Set.Ioi x)) (nhds (SupSet.sSup (Set.image f (Set.Ioi x))))","decl":"/-- An antitone map has a limit to the right of any point `x`, equal to `sSup (f '' (Ioi x))`. -/\ntheorem Antitone.tendsto_nhdsGT {α β : Type*} [LinearOrder α] [TopologicalSpace α] [OrderTopology α]\n    [ConditionallyCompleteLinearOrder β] [TopologicalSpace β] [OrderTopology β] {f : α → β}\n    (Af : Antitone f) (x : α) : Tendsto f (𝓝[>] x) (𝓝 (sSup (f '' Ioi x))) :=\n  Monotone.tendsto_nhdsGT Af.dual_right x\n\n"}
{"name":"Antitone.tendsto_nhdsWithin_Ioi","module":"Mathlib.Topology.Order.Monotone","initialProofState":"α : Type u_3\nβ : Type u_4\ninst✝⁵ : LinearOrder α\ninst✝⁴ : TopologicalSpace α\ninst✝³ : OrderTopology α\ninst✝² : ConditionallyCompleteLinearOrder β\ninst✝¹ : TopologicalSpace β\ninst✝ : OrderTopology β\nf : α → β\nAf : Antitone f\nx : α\n⊢ Filter.Tendsto f (nhdsWithin x (Set.Ioi x)) (nhds (SupSet.sSup (Set.image f (Set.Ioi x))))","decl":"@[deprecated (since := \"2024-12-22\")]\nalias Antitone.tendsto_nhdsWithin_Ioi := Antitone.tendsto_nhdsGT\n\n"}
