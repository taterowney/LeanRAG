{"name":"MulOpposite.instNoZeroDivisors","module":"Mathlib.Algebra.GroupWithZero.Opposite","initialProofState":"α : Type u_1\ninst✝² : Zero α\ninst✝¹ : Mul α\ninst✝ : NoZeroDivisors α\n⊢ NoZeroDivisors (MulOpposite α)","decl":"instance instNoZeroDivisors [Zero α] [Mul α] [NoZeroDivisors α] : NoZeroDivisors αᵐᵒᵖ where\n  eq_zero_or_eq_zero_of_mul_eq_zero (H : op (_ * _) = op (0 : α)) :=\n      Or.casesOn (eq_zero_or_eq_zero_of_mul_eq_zero <| op_injective H)\n        (fun hy => Or.inr <| unop_injective <| hy) fun hx => Or.inl <| unop_injective <| hx\n\n"}
{"name":"AddOpposite.instNoZeroDivisors","module":"Mathlib.Algebra.GroupWithZero.Opposite","initialProofState":"α : Type u_1\ninst✝² : Zero α\ninst✝¹ : Mul α\ninst✝ : NoZeroDivisors α\n⊢ NoZeroDivisors (AddOpposite α)","decl":"instance instNoZeroDivisors [Zero α] [Mul α] [NoZeroDivisors α] : NoZeroDivisors αᵃᵒᵖ where\n  eq_zero_or_eq_zero_of_mul_eq_zero (H : op (_ * _) = op (0 : α)) :=\n    Or.imp (fun hx => unop_injective hx) (fun hy => unop_injective hy)\n    (@eq_zero_or_eq_zero_of_mul_eq_zero α _ _ _ _ _ <| op_injective H)\n\n"}
