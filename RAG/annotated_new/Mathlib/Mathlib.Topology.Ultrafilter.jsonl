{"name":"Ultrafilter.clusterPt_iff","module":"Mathlib.Topology.Ultrafilter","initialProofState":"X : Type u\nx : X\ninst✝ : TopologicalSpace X\nf : Ultrafilter X\n⊢ Iff (ClusterPt x ↑f) (LE.le (↑f) (nhds x))","decl":"theorem Ultrafilter.clusterPt_iff {f : Ultrafilter X} : ClusterPt x f ↔ ↑f ≤ 𝓝 x :=\n  ⟨f.le_of_inf_neBot', fun h => ClusterPt.of_le_nhds h⟩\n\n"}
{"name":"clusterPt_iff_ultrafilter","module":"Mathlib.Topology.Ultrafilter","initialProofState":"X : Type u\nx : X\ninst✝ : TopologicalSpace X\nf : Filter X\n⊢ Iff (ClusterPt x f) (Exists fun u => And (LE.le (↑u) f) (LE.le (↑u) (nhds x)))","decl":"theorem clusterPt_iff_ultrafilter {f : Filter X} : ClusterPt x f ↔\n    ∃ u : Ultrafilter X, u ≤ f ∧ u ≤ 𝓝 x := by\n  simp_rw [ClusterPt, ← le_inf_iff, exists_ultrafilter_iff, inf_comm]\n\n"}
{"name":"mapClusterPt_iff_ultrafilter","module":"Mathlib.Topology.Ultrafilter","initialProofState":"X : Type u\nα : Type u_1\nx : X\ninst✝ : TopologicalSpace X\nF : Filter α\nu : α → X\n⊢ Iff (MapClusterPt x F u) (Exists fun U => And (LE.le (↑U) F) (Filter.Tendsto u (↑U) (nhds x)))","decl":"theorem mapClusterPt_iff_ultrafilter :\n    MapClusterPt x F u ↔ ∃ U : Ultrafilter α, U ≤ F ∧ Tendsto u U (𝓝 x) := by\n  simp_rw [MapClusterPt, ClusterPt, ← Filter.push_pull', map_neBot_iff, tendsto_iff_comap,\n    ← le_inf_iff, exists_ultrafilter_iff, inf_comm]\n\n"}
{"name":"isOpen_iff_ultrafilter","module":"Mathlib.Topology.Ultrafilter","initialProofState":"X : Type u\ns : Set X\ninst✝ : TopologicalSpace X\n⊢ Iff (IsOpen s) (∀ (x : X), Membership.mem s x → ∀ (l : Ultrafilter X), LE.le (↑l) (nhds x) → Membership.mem l s)","decl":"theorem isOpen_iff_ultrafilter :\n    IsOpen s ↔ ∀ x ∈ s, ∀ (l : Ultrafilter X), ↑l ≤ 𝓝 x → s ∈ l := by\n  simp_rw [isOpen_iff_mem_nhds, ← mem_iff_ultrafilter]\n\n"}
{"name":"mem_closure_iff_ultrafilter","module":"Mathlib.Topology.Ultrafilter","initialProofState":"X : Type u\nx : X\ns : Set X\ninst✝ : TopologicalSpace X\n⊢ Iff (Membership.mem (closure s) x) (Exists fun u => And (Membership.mem u s) (LE.le (↑u) (nhds x)))","decl":"/-- `x` belongs to the closure of `s` if and only if some ultrafilter\n  supported on `s` converges to `x`. -/\ntheorem mem_closure_iff_ultrafilter :\n    x ∈ closure s ↔ ∃ u : Ultrafilter X, s ∈ u ∧ ↑u ≤ 𝓝 x := by\n  simp [closure_eq_cluster_pts, ClusterPt, ← exists_ultrafilter_iff, and_comm]\n\n"}
{"name":"isClosed_iff_ultrafilter","module":"Mathlib.Topology.Ultrafilter","initialProofState":"X : Type u\ns : Set X\ninst✝ : TopologicalSpace X\n⊢ Iff (IsClosed s) (∀ (x : X) (u : Ultrafilter X), LE.le (↑u) (nhds x) → Membership.mem u s → Membership.mem s x)","decl":"theorem isClosed_iff_ultrafilter : IsClosed s ↔\n    ∀ x, ∀ u : Ultrafilter X, ↑u ≤ 𝓝 x → s ∈ u → x ∈ s := by\n  simp [isClosed_iff_clusterPt, ClusterPt, ← exists_ultrafilter_iff]\n\n"}
{"name":"continuousAt_iff_ultrafilter","module":"Mathlib.Topology.Ultrafilter","initialProofState":"X : Type u\nY : Type v\nx : X\ninst✝¹ : TopologicalSpace X\ninst✝ : TopologicalSpace Y\nf : X → Y\n⊢ Iff (ContinuousAt f x) (∀ (g : Ultrafilter X), LE.le (↑g) (nhds x) → Filter.Tendsto f (↑g) (nhds (f x)))","decl":"theorem continuousAt_iff_ultrafilter :\n    ContinuousAt f x ↔ ∀ g : Ultrafilter X, ↑g ≤ 𝓝 x → Tendsto f g (𝓝 (f x)) :=\n  tendsto_iff_ultrafilter f (𝓝 x) (𝓝 (f x))\n\n"}
{"name":"continuous_iff_ultrafilter","module":"Mathlib.Topology.Ultrafilter","initialProofState":"X : Type u\nY : Type v\ninst✝¹ : TopologicalSpace X\ninst✝ : TopologicalSpace Y\nf : X → Y\n⊢ Iff (Continuous f) (∀ (x : X) (g : Ultrafilter X), LE.le (↑g) (nhds x) → Filter.Tendsto f (↑g) (nhds (f x)))","decl":"theorem continuous_iff_ultrafilter :\n    Continuous f ↔ ∀ (x) (g : Ultrafilter X), ↑g ≤ 𝓝 x → Tendsto f g (𝓝 (f x)) := by\n  simp only [continuous_iff_continuousAt, continuousAt_iff_ultrafilter]\n"}
