{"name":"mem_convexJoin","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns t : Set E\nx : E\n⊢ Iff (Membership.mem (convexJoin 𝕜 s t) x) (Exists fun a => And (Membership.mem s a) (Exists fun b => And (Membership.mem t b) (Membership.mem (segment 𝕜 a b) x)))","decl":"theorem mem_convexJoin : x ∈ convexJoin 𝕜 s t ↔ ∃ a ∈ s, ∃ b ∈ t, x ∈ segment 𝕜 a b := by\n  simp [convexJoin]\n\n"}
{"name":"convexJoin_comm","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns t : Set E\n⊢ Eq (convexJoin 𝕜 s t) (convexJoin 𝕜 t s)","decl":"theorem convexJoin_comm (s t : Set E) : convexJoin 𝕜 s t = convexJoin 𝕜 t s :=\n  (iUnion₂_comm _).trans <| by simp_rw [convexJoin, segment_symm]\n\n"}
{"name":"convexJoin_mono","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns₁ s₂ t₁ t₂ : Set E\nhs : HasSubset.Subset s₁ s₂\nht : HasSubset.Subset t₁ t₂\n⊢ HasSubset.Subset (convexJoin 𝕜 s₁ t₁) (convexJoin 𝕜 s₂ t₂)","decl":"theorem convexJoin_mono (hs : s₁ ⊆ s₂) (ht : t₁ ⊆ t₂) : convexJoin 𝕜 s₁ t₁ ⊆ convexJoin 𝕜 s₂ t₂ :=\n  biUnion_mono hs fun _ _ => biUnion_subset_biUnion_left ht\n\n"}
{"name":"convexJoin_mono_left","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\nt s₁ s₂ : Set E\nhs : HasSubset.Subset s₁ s₂\n⊢ HasSubset.Subset (convexJoin 𝕜 s₁ t) (convexJoin 𝕜 s₂ t)","decl":"theorem convexJoin_mono_left (hs : s₁ ⊆ s₂) : convexJoin 𝕜 s₁ t ⊆ convexJoin 𝕜 s₂ t :=\n  convexJoin_mono hs Subset.rfl\n\n"}
{"name":"convexJoin_mono_right","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns t₁ t₂ : Set E\nht : HasSubset.Subset t₁ t₂\n⊢ HasSubset.Subset (convexJoin 𝕜 s t₁) (convexJoin 𝕜 s t₂)","decl":"theorem convexJoin_mono_right (ht : t₁ ⊆ t₂) : convexJoin 𝕜 s t₁ ⊆ convexJoin 𝕜 s t₂ :=\n  convexJoin_mono Subset.rfl ht\n\n"}
{"name":"convexJoin_empty_left","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\nt : Set E\n⊢ Eq (convexJoin 𝕜 EmptyCollection.emptyCollection t) EmptyCollection.emptyCollection","decl":"@[simp]\ntheorem convexJoin_empty_left (t : Set E) : convexJoin 𝕜 ∅ t = ∅ := by simp [convexJoin]\n\n"}
{"name":"convexJoin_empty_right","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\n⊢ Eq (convexJoin 𝕜 s EmptyCollection.emptyCollection) EmptyCollection.emptyCollection","decl":"@[simp]\ntheorem convexJoin_empty_right (s : Set E) : convexJoin 𝕜 s ∅ = ∅ := by simp [convexJoin]\n\n"}
{"name":"convexJoin_singleton_left","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\nt : Set E\nx : E\n⊢ Eq (convexJoin 𝕜 (Singleton.singleton x) t) (Set.iUnion fun y => Set.iUnion fun h => segment 𝕜 x y)","decl":"@[simp]\ntheorem convexJoin_singleton_left (t : Set E) (x : E) :\n    convexJoin 𝕜 {x} t = ⋃ y ∈ t, segment 𝕜 x y := by simp [convexJoin]\n\n"}
{"name":"convexJoin_singleton_right","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\ny : E\n⊢ Eq (convexJoin 𝕜 s (Singleton.singleton y)) (Set.iUnion fun x => Set.iUnion fun h => segment 𝕜 x y)","decl":"@[simp]\ntheorem convexJoin_singleton_right (s : Set E) (y : E) :\n    convexJoin 𝕜 s {y} = ⋃ x ∈ s, segment 𝕜 x y := by simp [convexJoin]\n\n"}
{"name":"convexJoin_singletons","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ny x : E\n⊢ Eq (convexJoin 𝕜 (Singleton.singleton x) (Singleton.singleton y)) (segment 𝕜 x y)","decl":"theorem convexJoin_singletons (x : E) : convexJoin 𝕜 {x} {y} = segment 𝕜 x y := by simp\n\n"}
{"name":"convexJoin_union_left","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns₁ s₂ t : Set E\n⊢ Eq (convexJoin 𝕜 (Union.union s₁ s₂) t) (Union.union (convexJoin 𝕜 s₁ t) (convexJoin 𝕜 s₂ t))","decl":"@[simp]\ntheorem convexJoin_union_left (s₁ s₂ t : Set E) :\n    convexJoin 𝕜 (s₁ ∪ s₂) t = convexJoin 𝕜 s₁ t ∪ convexJoin 𝕜 s₂ t := by\n  simp_rw [convexJoin, mem_union, iUnion_or, iUnion_union_distrib]\n\n"}
{"name":"convexJoin_union_right","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns t₁ t₂ : Set E\n⊢ Eq (convexJoin 𝕜 s (Union.union t₁ t₂)) (Union.union (convexJoin 𝕜 s t₁) (convexJoin 𝕜 s t₂))","decl":"@[simp]\ntheorem convexJoin_union_right (s t₁ t₂ : Set E) :\n    convexJoin 𝕜 s (t₁ ∪ t₂) = convexJoin 𝕜 s t₁ ∪ convexJoin 𝕜 s t₂ := by\n  simp_rw [convexJoin_comm s, convexJoin_union_left]\n\n"}
{"name":"convexJoin_iUnion_left","module":"Mathlib.Analysis.Convex.Join","initialProofState":"ι : Sort u_1\n𝕜 : Type u_2\nE : Type u_3\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : ι → Set E\nt : Set E\n⊢ Eq (convexJoin 𝕜 (Set.iUnion fun i => s i) t) (Set.iUnion fun i => convexJoin 𝕜 (s i) t)","decl":"@[simp]\ntheorem convexJoin_iUnion_left (s : ι → Set E) (t : Set E) :\n    convexJoin 𝕜 (⋃ i, s i) t = ⋃ i, convexJoin 𝕜 (s i) t := by\n  simp_rw [convexJoin, mem_iUnion, iUnion_exists]\n  exact iUnion_comm _\n\n"}
{"name":"convexJoin_iUnion_right","module":"Mathlib.Analysis.Convex.Join","initialProofState":"ι : Sort u_1\n𝕜 : Type u_2\nE : Type u_3\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns : Set E\nt : ι → Set E\n⊢ Eq (convexJoin 𝕜 s (Set.iUnion fun i => t i)) (Set.iUnion fun i => convexJoin 𝕜 s (t i))","decl":"@[simp]\ntheorem convexJoin_iUnion_right (s : Set E) (t : ι → Set E) :\n    convexJoin 𝕜 s (⋃ i, t i) = ⋃ i, convexJoin 𝕜 s (t i) := by\n  simp_rw [convexJoin_comm s, convexJoin_iUnion_left]\n\n"}
{"name":"segment_subset_convexJoin","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns t : Set E\nx y : E\nhx : Membership.mem s x\nhy : Membership.mem t y\n⊢ HasSubset.Subset (segment 𝕜 x y) (convexJoin 𝕜 s t)","decl":"theorem segment_subset_convexJoin (hx : x ∈ s) (hy : y ∈ t) : segment 𝕜 x y ⊆ convexJoin 𝕜 s t :=\n  subset_iUnion₂_of_subset x hx <| subset_iUnion₂ (s := fun y _ ↦ segment 𝕜 x y) y hy\n\n"}
{"name":"subset_convexJoin_left","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns t : Set E\nh : t.Nonempty\n⊢ HasSubset.Subset s (convexJoin 𝕜 s t)","decl":"theorem subset_convexJoin_left (h : t.Nonempty) : s ⊆ convexJoin 𝕜 s t := fun _x hx =>\n  let ⟨_y, hy⟩ := h\n  segment_subset_convexJoin hx hy <| left_mem_segment _ _ _\n\n"}
{"name":"subset_convexJoin_right","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns t : Set E\nh : s.Nonempty\n⊢ HasSubset.Subset t (convexJoin 𝕜 s t)","decl":"theorem subset_convexJoin_right (h : s.Nonempty) : t ⊆ convexJoin 𝕜 s t :=\n  convexJoin_comm (𝕜 := 𝕜) t s ▸ subset_convexJoin_left h\n\n"}
{"name":"convexJoin_subset","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns t u : Set E\nhs : HasSubset.Subset s u\nht : HasSubset.Subset t u\nhu : Convex 𝕜 u\n⊢ HasSubset.Subset (convexJoin 𝕜 s t) u","decl":"theorem convexJoin_subset (hs : s ⊆ u) (ht : t ⊆ u) (hu : Convex 𝕜 u) : convexJoin 𝕜 s t ⊆ u :=\n  iUnion₂_subset fun _x hx => iUnion₂_subset fun _y hy => hu.segment_subset (hs hx) (ht hy)\n\n"}
{"name":"convexJoin_subset_convexHull","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : OrderedSemiring 𝕜\ninst✝¹ : AddCommMonoid E\ninst✝ : Module 𝕜 E\ns t : Set E\n⊢ HasSubset.Subset (convexJoin 𝕜 s t) ((convexHull 𝕜) (Union.union s t))","decl":"theorem convexJoin_subset_convexHull (s t : Set E) : convexJoin 𝕜 s t ⊆ convexHull 𝕜 (s ∪ t) :=\n  convexJoin_subset (subset_union_left.trans <| subset_convexHull _ _)\n      (subset_union_right.trans <| subset_convexHull _ _) <|\n    convex_convexHull _ _\n\n"}
{"name":"convexJoin_assoc_aux","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : LinearOrderedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns t u : Set E\n⊢ HasSubset.Subset (convexJoin 𝕜 (convexJoin 𝕜 s t) u) (convexJoin 𝕜 s (convexJoin 𝕜 t u))","decl":"theorem convexJoin_assoc_aux (s t u : Set E) :\n    convexJoin 𝕜 (convexJoin 𝕜 s t) u ⊆ convexJoin 𝕜 s (convexJoin 𝕜 t u) := by\n  simp_rw [subset_def, mem_convexJoin]\n  rintro _ ⟨z, ⟨x, hx, y, hy, a₁, b₁, ha₁, hb₁, hab₁, rfl⟩, z, hz, a₂, b₂, ha₂, hb₂, hab₂, rfl⟩\n  obtain rfl | hb₂ := hb₂.eq_or_lt\n  · refine ⟨x, hx, y, ⟨y, hy, z, hz, left_mem_segment 𝕜 _ _⟩, a₁, b₁, ha₁, hb₁, hab₁, ?_⟩\n    linear_combination (norm := module) -hab₂ • (a₁ • x + b₁ • y)\n  refine\n    ⟨x, hx, (a₂ * b₁ / (a₂ * b₁ + b₂)) • y + (b₂ / (a₂ * b₁ + b₂)) • z,\n      ⟨y, hy, z, hz, _, _, by positivity, by positivity, by field_simp, rfl⟩,\n      a₂ * a₁, a₂ * b₁ + b₂, by positivity, by positivity, ?_, ?_⟩\n  · linear_combination a₂ * hab₁ + hab₂\n  · match_scalars <;> field_simp\n\n"}
{"name":"convexJoin_assoc","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : LinearOrderedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns t u : Set E\n⊢ Eq (convexJoin 𝕜 (convexJoin 𝕜 s t) u) (convexJoin 𝕜 s (convexJoin 𝕜 t u))","decl":"theorem convexJoin_assoc (s t u : Set E) :\n    convexJoin 𝕜 (convexJoin 𝕜 s t) u = convexJoin 𝕜 s (convexJoin 𝕜 t u) := by\n  refine (convexJoin_assoc_aux _ _ _).antisymm ?_\n  simp_rw [convexJoin_comm s, convexJoin_comm _ u]\n  exact convexJoin_assoc_aux _ _ _\n\n"}
{"name":"convexJoin_left_comm","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : LinearOrderedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns t u : Set E\n⊢ Eq (convexJoin 𝕜 s (convexJoin 𝕜 t u)) (convexJoin 𝕜 t (convexJoin 𝕜 s u))","decl":"theorem convexJoin_left_comm (s t u : Set E) :\n    convexJoin 𝕜 s (convexJoin 𝕜 t u) = convexJoin 𝕜 t (convexJoin 𝕜 s u) := by\n  simp_rw [← convexJoin_assoc, convexJoin_comm]\n\n"}
{"name":"convexJoin_right_comm","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : LinearOrderedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns t u : Set E\n⊢ Eq (convexJoin 𝕜 (convexJoin 𝕜 s t) u) (convexJoin 𝕜 (convexJoin 𝕜 s u) t)","decl":"theorem convexJoin_right_comm (s t u : Set E) :\n    convexJoin 𝕜 (convexJoin 𝕜 s t) u = convexJoin 𝕜 (convexJoin 𝕜 s u) t := by\n  simp_rw [convexJoin_assoc, convexJoin_comm]\n\n"}
{"name":"convexJoin_convexJoin_convexJoin_comm","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : LinearOrderedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns t u v : Set E\n⊢ Eq (convexJoin 𝕜 (convexJoin 𝕜 s t) (convexJoin 𝕜 u v)) (convexJoin 𝕜 (convexJoin 𝕜 s u) (convexJoin 𝕜 t v))","decl":"theorem convexJoin_convexJoin_convexJoin_comm (s t u v : Set E) :\n    convexJoin 𝕜 (convexJoin 𝕜 s t) (convexJoin 𝕜 u v) =\n      convexJoin 𝕜 (convexJoin 𝕜 s u) (convexJoin 𝕜 t v) := by\n  simp_rw [← convexJoin_assoc, convexJoin_right_comm]\n\n-- Porting note: moved 3 lemmas from below to golf\n"}
{"name":"Convex.convexJoin","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : LinearOrderedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns t : Set E\nhs : Convex 𝕜 s\nht : Convex 𝕜 t\n⊢ Convex 𝕜 (convexJoin 𝕜 s t)","decl":"protected theorem Convex.convexJoin (hs : Convex 𝕜 s) (ht : Convex 𝕜 t) :\n    Convex 𝕜 (convexJoin 𝕜 s t) := by\n  simp only [Convex, StarConvex, convexJoin, mem_iUnion]\n  rintro _ ⟨x₁, hx₁, y₁, hy₁, a₁, b₁, ha₁, hb₁, hab₁, rfl⟩\n    _ ⟨x₂, hx₂, y₂, hy₂, a₂, b₂, ha₂, hb₂, hab₂, rfl⟩ p q hp hq hpq\n  rcases hs.exists_mem_add_smul_eq hx₁ hx₂ (mul_nonneg hp ha₁) (mul_nonneg hq ha₂) with ⟨x, hxs, hx⟩\n  rcases ht.exists_mem_add_smul_eq hy₁ hy₂ (mul_nonneg hp hb₁) (mul_nonneg hq hb₂) with ⟨y, hyt, hy⟩\n  refine ⟨_, hxs, _, hyt, p * a₁ + q * a₂, p * b₁ + q * b₂, ?_, ?_, ?_, ?_⟩ <;> try positivity\n  · linear_combination p * hab₁ + q * hab₂ + hpq\n  · rw [hx, hy]\n    module\n\n"}
{"name":"Convex.convexHull_union","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : LinearOrderedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns t : Set E\nhs : Convex 𝕜 s\nht : Convex 𝕜 t\nhs₀ : s.Nonempty\nht₀ : t.Nonempty\n⊢ Eq ((convexHull 𝕜) (Union.union s t)) (convexJoin 𝕜 s t)","decl":"protected theorem Convex.convexHull_union (hs : Convex 𝕜 s) (ht : Convex 𝕜 t) (hs₀ : s.Nonempty)\n    (ht₀ : t.Nonempty) : convexHull 𝕜 (s ∪ t) = convexJoin 𝕜 s t :=\n  (convexHull_min (union_subset (subset_convexJoin_left ht₀) <| subset_convexJoin_right hs₀) <|\n        hs.convexJoin ht).antisymm <|\n    convexJoin_subset_convexHull _ _\n\n"}
{"name":"convexHull_union","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : LinearOrderedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns t : Set E\nhs : s.Nonempty\nht : t.Nonempty\n⊢ Eq ((convexHull 𝕜) (Union.union s t)) (convexJoin 𝕜 ((convexHull 𝕜) s) ((convexHull 𝕜) t))","decl":"theorem convexHull_union (hs : s.Nonempty) (ht : t.Nonempty) :\n    convexHull 𝕜 (s ∪ t) = convexJoin 𝕜 (convexHull 𝕜 s) (convexHull 𝕜 t) := by\n  rw [← convexHull_convexHull_union_left, ← convexHull_convexHull_union_right]\n  exact (convex_convexHull 𝕜 s).convexHull_union (convex_convexHull 𝕜 t) hs.convexHull ht.convexHull\n\n"}
{"name":"convexHull_insert","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : LinearOrderedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\ns : Set E\nx : E\nhs : s.Nonempty\n⊢ Eq ((convexHull 𝕜) (Insert.insert x s)) (convexJoin 𝕜 (Singleton.singleton x) ((convexHull 𝕜) s))","decl":"theorem convexHull_insert (hs : s.Nonempty) :\n    convexHull 𝕜 (insert x s) = convexJoin 𝕜 {x} (convexHull 𝕜 s) := by\n  rw [insert_eq, convexHull_union (singleton_nonempty _) hs, convexHull_singleton]\n\n"}
{"name":"convexJoin_segments","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : LinearOrderedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\na b c d : E\n⊢ Eq (convexJoin 𝕜 (segment 𝕜 a b) (segment 𝕜 c d)) ((convexHull 𝕜) (Insert.insert a (Insert.insert b (Insert.insert c (Singleton.singleton d)))))","decl":"theorem convexJoin_segments (a b c d : E) :\n    convexJoin 𝕜 (segment 𝕜 a b) (segment 𝕜 c d) = convexHull 𝕜 {a, b, c, d} := by\n  simp_rw [← convexHull_pair, convexHull_insert (insert_nonempty _ _),\n    convexHull_insert (singleton_nonempty _), convexJoin_assoc,\n    convexHull_singleton]\n\n"}
{"name":"convexJoin_segment_singleton","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : LinearOrderedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\na b c : E\n⊢ Eq (convexJoin 𝕜 (segment 𝕜 a b) (Singleton.singleton c)) ((convexHull 𝕜) (Insert.insert a (Insert.insert b (Singleton.singleton c))))","decl":"theorem convexJoin_segment_singleton (a b c : E) :\n    convexJoin 𝕜 (segment 𝕜 a b) {c} = convexHull 𝕜 {a, b, c} := by\n  rw [← pair_eq_singleton, ← convexJoin_segments, segment_same, pair_eq_singleton]\n\n"}
{"name":"convexJoin_singleton_segment","module":"Mathlib.Analysis.Convex.Join","initialProofState":"𝕜 : Type u_2\nE : Type u_3\ninst✝² : LinearOrderedField 𝕜\ninst✝¹ : AddCommGroup E\ninst✝ : Module 𝕜 E\na b c : E\n⊢ Eq (convexJoin 𝕜 (Singleton.singleton a) (segment 𝕜 b c)) ((convexHull 𝕜) (Insert.insert a (Insert.insert b (Singleton.singleton c))))","decl":"theorem convexJoin_singleton_segment (a b c : E) :\n    convexJoin 𝕜 {a} (segment 𝕜 b c) = convexHull 𝕜 {a, b, c} := by\n  rw [← segment_same 𝕜, convexJoin_segments, insert_idem]\n\n-- Porting note: moved 3 lemmas up to golf\n\n"}
