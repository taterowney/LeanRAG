{"name":"Matrix.PosSemidef.diagonal","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝⁵ : Fintype n\ninst✝⁴ : CommRing R\ninst✝³ : PartialOrder R\ninst✝² : StarRing R\ninst✝¹ : StarOrderedRing R\ninst✝ : DecidableEq n\nd : n → R\nh : LE.le 0 d\n⊢ (Matrix.diagonal d).PosSemidef","decl":"protected theorem PosSemidef.diagonal [StarOrderedRing R] [DecidableEq n] {d : n → R} (h : 0 ≤ d) :\n    PosSemidef (diagonal d) :=\n  ⟨isHermitian_diagonal_of_self_adjoint _ <| funext fun i => IsSelfAdjoint.of_nonneg (h i),\n    fun x => by\n      refine Fintype.sum_nonneg fun i => ?_\n      simpa only [mulVec_diagonal, ← mul_assoc] using conjugate_nonneg (h i) _⟩\n\n"}
{"name":"Matrix.posSemidef_diagonal_iff","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝⁵ : Fintype n\ninst✝⁴ : CommRing R\ninst✝³ : PartialOrder R\ninst✝² : StarRing R\ninst✝¹ : StarOrderedRing R\ninst✝ : DecidableEq n\nd : n → R\n⊢ Iff (Matrix.diagonal d).PosSemidef (∀ (i : n), LE.le 0 (d i))","decl":"/-- A diagonal matrix is positive semidefinite iff its diagonal entries are nonnegative. -/\nlemma posSemidef_diagonal_iff [StarOrderedRing R] [DecidableEq n] {d : n → R} :\n    PosSemidef (diagonal d) ↔ (∀ i : n, 0 ≤ d i) :=\n  ⟨fun ⟨_, hP⟩ i ↦ by simpa using hP (Pi.single i 1), .diagonal⟩\n\n"}
{"name":"Matrix.PosSemidef.isHermitian","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝³ : Fintype n\ninst✝² : CommRing R\ninst✝¹ : PartialOrder R\ninst✝ : StarRing R\nM : Matrix n n R\nhM : M.PosSemidef\n⊢ M.IsHermitian","decl":"theorem isHermitian {M : Matrix n n R} (hM : M.PosSemidef) : M.IsHermitian :=\n  hM.1\n\n"}
{"name":"Matrix.PosSemidef.re_dotProduct_nonneg","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\n𝕜 : Type u_4\ninst✝¹ : Fintype n\ninst✝ : RCLike 𝕜\nM : Matrix n n 𝕜\nhM : M.PosSemidef\nx : n → 𝕜\n⊢ LE.le 0 (RCLike.re (dotProduct (Star.star x) (M.mulVec x)))","decl":"theorem re_dotProduct_nonneg {M : Matrix n n 𝕜} (hM : M.PosSemidef) (x : n → 𝕜) :\n    0 ≤ RCLike.re (dotProduct (star x) (M *ᵥ x)) :=\n  RCLike.nonneg_iff.mp (hM.2 _) |>.1\n\n"}
{"name":"Matrix.PosSemidef.conjTranspose_mul_mul_same","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝⁴ : Fintype n\ninst✝³ : CommRing R\ninst✝² : PartialOrder R\ninst✝¹ : StarRing R\nA : Matrix n n R\nhA : A.PosSemidef\nm : Type u_5\ninst✝ : Fintype m\nB : Matrix n m R\n⊢ (HMul.hMul (HMul.hMul B.conjTranspose A) B).PosSemidef","decl":"lemma conjTranspose_mul_mul_same {A : Matrix n n R} (hA : PosSemidef A)\n    {m : Type*} [Fintype m] (B : Matrix n m R) :\n    PosSemidef (Bᴴ * A * B) := by\n  constructor\n  · exact isHermitian_conjTranspose_mul_mul B hA.1\n  · intro x\n    simpa only [star_mulVec, dotProduct_mulVec, vecMul_vecMul] using hA.2 (B *ᵥ x)\n\n"}
{"name":"Matrix.PosSemidef.mul_mul_conjTranspose_same","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝⁴ : Fintype n\ninst✝³ : CommRing R\ninst✝² : PartialOrder R\ninst✝¹ : StarRing R\nA : Matrix n n R\nhA : A.PosSemidef\nm : Type u_5\ninst✝ : Fintype m\nB : Matrix m n R\n⊢ (HMul.hMul (HMul.hMul B A) B.conjTranspose).PosSemidef","decl":"lemma mul_mul_conjTranspose_same {A : Matrix n n R} (hA : PosSemidef A)\n    {m : Type*} [Fintype m] (B : Matrix m n R) :\n    PosSemidef (B * A * Bᴴ) := by\n  simpa only [conjTranspose_conjTranspose] using hA.conjTranspose_mul_mul_same Bᴴ\n\n"}
{"name":"Matrix.PosSemidef.submatrix","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"m : Type u_1\nn : Type u_2\nR : Type u_3\ninst✝⁴ : Fintype m\ninst✝³ : Fintype n\ninst✝² : CommRing R\ninst✝¹ : PartialOrder R\ninst✝ : StarRing R\nM : Matrix n n R\nhM : M.PosSemidef\ne : m → n\n⊢ (M.submatrix e e).PosSemidef","decl":"theorem submatrix {M : Matrix n n R} (hM : M.PosSemidef) (e : m → n) :\n    (M.submatrix e e).PosSemidef := by\n  classical\n  rw [(by simp : M = 1 * M * 1), submatrix_mul (he₂ := Function.bijective_id),\n    submatrix_mul (he₂ := Function.bijective_id), submatrix_id_id]\n  simpa only [conjTranspose_submatrix, conjTranspose_one] using\n    conjTranspose_mul_mul_same hM (Matrix.submatrix 1 id e)\n\n"}
{"name":"Matrix.PosSemidef.transpose","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝³ : Fintype n\ninst✝² : CommRing R\ninst✝¹ : PartialOrder R\ninst✝ : StarRing R\nM : Matrix n n R\nhM : M.PosSemidef\n⊢ M.transpose.PosSemidef","decl":"theorem transpose {M : Matrix n n R} (hM : M.PosSemidef) : Mᵀ.PosSemidef := by\n  refine ⟨IsHermitian.transpose hM.1, fun x => ?_⟩\n  convert hM.2 (star x) using 1\n  rw [mulVec_transpose, dotProduct_mulVec, star_star, dotProduct_comm]\n\n"}
{"name":"Matrix.PosSemidef.conjTranspose","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝³ : Fintype n\ninst✝² : CommRing R\ninst✝¹ : PartialOrder R\ninst✝ : StarRing R\nM : Matrix n n R\nhM : M.PosSemidef\n⊢ M.conjTranspose.PosSemidef","decl":"theorem conjTranspose {M : Matrix n n R} (hM : M.PosSemidef) : Mᴴ.PosSemidef := hM.1.symm ▸ hM\n\n"}
{"name":"Matrix.PosSemidef.zero","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝³ : Fintype n\ninst✝² : CommRing R\ninst✝¹ : PartialOrder R\ninst✝ : StarRing R\n⊢ Matrix.PosSemidef 0","decl":"protected lemma zero : PosSemidef (0 : Matrix n n R) :=\n  ⟨isHermitian_zero, by simp⟩\n\n"}
{"name":"Matrix.PosSemidef.one","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝⁵ : Fintype n\ninst✝⁴ : CommRing R\ninst✝³ : PartialOrder R\ninst✝² : StarRing R\ninst✝¹ : StarOrderedRing R\ninst✝ : DecidableEq n\n⊢ Matrix.PosSemidef 1","decl":"protected lemma one [StarOrderedRing R] [DecidableEq n] : PosSemidef (1 : Matrix n n R) :=\n  ⟨isHermitian_one, fun x => by\n    rw [one_mulVec]; exact Fintype.sum_nonneg fun i => star_mul_self_nonneg _⟩\n\n"}
{"name":"Matrix.PosSemidef.natCast","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝⁵ : Fintype n\ninst✝⁴ : CommRing R\ninst✝³ : PartialOrder R\ninst✝² : StarRing R\ninst✝¹ : StarOrderedRing R\ninst✝ : DecidableEq n\nd : Nat\n⊢ (↑d).PosSemidef","decl":"protected theorem natCast [StarOrderedRing R] [DecidableEq n] (d : ℕ) :\n    PosSemidef (d : Matrix n n R) :=\n  ⟨isHermitian_natCast _, fun x => by\n    simp only [natCast_mulVec, dotProduct_smul]\n    rw [Nat.cast_smul_eq_nsmul]\n    exact nsmul_nonneg (dotProduct_star_self_nonneg _) _⟩\n\n"}
{"name":"Matrix.PosSemidef.ofNat","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝⁶ : Fintype n\ninst✝⁵ : CommRing R\ninst✝⁴ : PartialOrder R\ninst✝³ : StarRing R\ninst✝² : StarOrderedRing R\ninst✝¹ : DecidableEq n\nd : Nat\ninst✝ : d.AtLeastTwo\n⊢ (OfNat.ofNat d).PosSemidef","decl":"protected theorem ofNat [StarOrderedRing R] [DecidableEq n] (d : ℕ) [d.AtLeastTwo] :\n    PosSemidef (ofNat(d) : Matrix n n R) :=\n  .natCast d\n\n"}
{"name":"Matrix.PosSemidef.intCast","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝⁵ : Fintype n\ninst✝⁴ : CommRing R\ninst✝³ : PartialOrder R\ninst✝² : StarRing R\ninst✝¹ : StarOrderedRing R\ninst✝ : DecidableEq n\nd : Int\nhd : LE.le 0 d\n⊢ (↑d).PosSemidef","decl":"protected theorem intCast [StarOrderedRing R] [DecidableEq n] (d : ℤ) (hd : 0 ≤ d) :\n    PosSemidef (d : Matrix n n R) :=\n  ⟨isHermitian_intCast _, fun x => by\n    simp only [intCast_mulVec, dotProduct_smul]\n    rw [Int.cast_smul_eq_zsmul]\n    exact zsmul_nonneg (dotProduct_star_self_nonneg _) hd⟩\n\n"}
{"name":"Matrix.posSemidef_intCast_iff","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝⁷ : Fintype n\ninst✝⁶ : CommRing R\ninst✝⁵ : PartialOrder R\ninst✝⁴ : StarRing R\ninst✝³ : StarOrderedRing R\ninst✝² : DecidableEq n\ninst✝¹ : Nonempty n\ninst✝ : Nontrivial R\nd : Int\n⊢ Iff (↑d).PosSemidef (LE.le 0 d)","decl":"@[simp]\nprotected theorem _root_.Matrix.posSemidef_intCast_iff\n    [StarOrderedRing R] [DecidableEq n] [Nonempty n] [Nontrivial R] (d : ℤ) :\n    PosSemidef (d : Matrix n n R) ↔ 0 ≤ d :=\n  posSemidef_diagonal_iff.trans <| by simp [Pi.le_def]\n\n"}
{"name":"Matrix.PosSemidef.pow","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝⁵ : Fintype n\ninst✝⁴ : CommRing R\ninst✝³ : PartialOrder R\ninst✝² : StarRing R\ninst✝¹ : StarOrderedRing R\ninst✝ : DecidableEq n\nM : Matrix n n R\nhM : M.PosSemidef\nk : Nat\n⊢ (HPow.hPow M k).PosSemidef","decl":"protected lemma pow [StarOrderedRing R] [DecidableEq n]\n    {M : Matrix n n R} (hM : M.PosSemidef) (k : ℕ) :\n    PosSemidef (M ^ k) :=\n  match k with\n  | 0 => .one\n  | 1 => by simpa using hM\n  | (k + 2) => by\n    rw [pow_succ, pow_succ']\n    simpa only [hM.isHermitian.eq] using (hM.pow k).mul_mul_conjTranspose_same M\n\n"}
{"name":"Matrix.PosSemidef.inv","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝⁴ : Fintype n\ninst✝³ : CommRing R\ninst✝² : PartialOrder R\ninst✝¹ : StarRing R\ninst✝ : DecidableEq n\nM : Matrix n n R\nhM : M.PosSemidef\n⊢ (Inv.inv M).PosSemidef","decl":"protected lemma inv [DecidableEq n] {M : Matrix n n R} (hM : M.PosSemidef) : M⁻¹.PosSemidef := by\n  by_cases h : IsUnit M.det\n  · have := (conjTranspose_mul_mul_same hM M⁻¹).conjTranspose\n    rwa [mul_nonsing_inv_cancel_right _ _ h, conjTranspose_conjTranspose] at this\n  · rw [nonsing_inv_apply_not_isUnit _ h]\n    exact .zero\n\n"}
{"name":"Matrix.PosSemidef.zpow","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝⁵ : Fintype n\ninst✝⁴ : CommRing R\ninst✝³ : PartialOrder R\ninst✝² : StarRing R\ninst✝¹ : StarOrderedRing R\ninst✝ : DecidableEq n\nM : Matrix n n R\nhM : M.PosSemidef\nz : Int\n⊢ (HPow.hPow M z).PosSemidef","decl":"protected lemma zpow [StarOrderedRing R] [DecidableEq n]\n    {M : Matrix n n R} (hM : M.PosSemidef) (z : ℤ) :\n    (M ^ z).PosSemidef := by\n  obtain ⟨n, rfl | rfl⟩ := z.eq_nat_or_neg\n  · simpa using hM.pow n\n  · simpa using (hM.pow n).inv\n\n"}
{"name":"Matrix.PosSemidef.add","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"m : Type u_1\nR : Type u_3\ninst✝⁴ : Fintype m\ninst✝³ : CommRing R\ninst✝² : PartialOrder R\ninst✝¹ : StarRing R\ninst✝ : AddLeftMono R\nA B : Matrix m m R\nhA : A.PosSemidef\nhB : B.PosSemidef\n⊢ (HAdd.hAdd A B).PosSemidef","decl":"protected lemma add [AddLeftMono R] {A : Matrix m m R} {B : Matrix m m R}\n    (hA : A.PosSemidef) (hB : B.PosSemidef) : (A + B).PosSemidef :=\n  ⟨hA.isHermitian.add hB.isHermitian, fun x => by\n    rw [add_mulVec, dotProduct_add]\n    exact add_nonneg (hA.2 x) (hB.2 x)⟩\n\n"}
{"name":"Matrix.PosSemidef.eigenvalues_nonneg","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\n𝕜 : Type u_4\ninst✝² : Fintype n\ninst✝¹ : RCLike 𝕜\ninst✝ : DecidableEq n\nA : Matrix n n 𝕜\nhA : A.PosSemidef\ni : n\n⊢ LE.le 0 (⋯.eigenvalues i)","decl":"/-- The eigenvalues of a positive semi-definite matrix are non-negative -/\nlemma eigenvalues_nonneg [DecidableEq n] {A : Matrix n n 𝕜}\n    (hA : Matrix.PosSemidef A) (i : n) : 0 ≤ hA.1.eigenvalues i :=\n  (hA.re_dotProduct_nonneg _).trans_eq (hA.1.eigenvalues_eq _).symm\n\n"}
{"name":"Matrix.PosSemidef.posSemidef_sqrt","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\n𝕜 : Type u_4\ninst✝² : Fintype n\ninst✝¹ : RCLike 𝕜\ninst✝ : DecidableEq n\nA : Matrix n n 𝕜\nhA : A.PosSemidef\n⊢ hA.sqrt.PosSemidef","decl":"lemma posSemidef_sqrt : PosSemidef hA.sqrt := by\n  apply PosSemidef.mul_mul_conjTranspose_same\n  refine posSemidef_diagonal_iff.mpr fun i ↦ ?_\n  rw [Function.comp_apply, RCLike.nonneg_iff]\n  constructor\n  · simp only [RCLike.ofReal_re]\n    exact Real.sqrt_nonneg _\n  · simp only [RCLike.ofReal_im]\n\n"}
{"name":"Matrix.PosSemidef.sq_sqrt","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\n𝕜 : Type u_4\ninst✝² : Fintype n\ninst✝¹ : RCLike 𝕜\ninst✝ : DecidableEq n\nA : Matrix n n 𝕜\nhA : A.PosSemidef\n⊢ Eq (HPow.hPow hA.sqrt 2) A","decl":"@[simp]\nlemma sq_sqrt : hA.sqrt ^ 2 = A := by\n  let C : Matrix n n 𝕜 := hA.1.eigenvectorUnitary\n  let E := diagonal ((↑) ∘ Real.sqrt ∘ hA.1.eigenvalues : n → 𝕜)\n  suffices C * (E * (star C * C) * E) * star C = A by\n    rw [Matrix.PosSemidef.sqrt, pow_two]\n    simpa only [← mul_assoc] using this\n  have : E * E = diagonal ((↑) ∘ hA.1.eigenvalues) := by\n    rw [diagonal_mul_diagonal]\n    congr! with v\n    simp [← pow_two, ← RCLike.ofReal_pow, Real.sq_sqrt (hA.eigenvalues_nonneg v)]\n  simpa [C, this] using hA.1.spectral_theorem.symm\n\n"}
{"name":"Matrix.PosSemidef.sqrt_mul_self","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\n𝕜 : Type u_4\ninst✝² : Fintype n\ninst✝¹ : RCLike 𝕜\ninst✝ : DecidableEq n\nA : Matrix n n 𝕜\nhA : A.PosSemidef\n⊢ Eq (HMul.hMul hA.sqrt hA.sqrt) A","decl":"@[simp]\nlemma sqrt_mul_self : hA.sqrt * hA.sqrt = A := by rw [← pow_two, sq_sqrt]\n\n"}
{"name":"Matrix.PosSemidef.eq_of_sq_eq_sq","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\n𝕜 : Type u_4\ninst✝² : Fintype n\ninst✝¹ : RCLike 𝕜\ninst✝ : DecidableEq n\nA : Matrix n n 𝕜\nhA : A.PosSemidef\nB : Matrix n n 𝕜\nhB : B.PosSemidef\nhAB : Eq (HPow.hPow A 2) (HPow.hPow B 2)\n⊢ Eq A B","decl":"include hA in\nlemma eq_of_sq_eq_sq {B : Matrix n n 𝕜} (hB : PosSemidef B) (hAB : A ^ 2 = B ^ 2) : A = B := by\n  /- This is deceptively hard, much more difficult than the positive *definite* case. We follow a\n  clever proof due to Koeber and Schäfer. The idea is that if `A ≠ B`, then `A - B` has a nonzero\n  real eigenvalue, with eigenvector `v`. Then a manipulation using the identity\n  `A ^ 2 - B ^ 2 = A * (A - B) + (A - B) * B` leads to the conclusion that\n  `⟨v, A v⟩ + ⟨v, B v⟩ = 0`. Since `A, B` are positive semidefinite, both terms must be zero. Thus\n  `⟨v, (A - B) v⟩ = 0`, but this is a nonzero scalar multiple of `⟨v, v⟩`, contradiction. -/\n  by_contra h_ne\n  let ⟨v, t, ht, hv, hv'⟩ := (hA.1.sub hB.1).exists_eigenvector_of_ne_zero (sub_ne_zero.mpr h_ne)\n  have h_sum : 0 = t * (star v ⬝ᵥ A *ᵥ v + star v ⬝ᵥ B *ᵥ v) := calc\n    0 = star v ⬝ᵥ (A ^ 2 - B ^ 2) *ᵥ v := by rw [hAB, sub_self, zero_mulVec, dotProduct_zero]\n    _ = star v ⬝ᵥ A *ᵥ (A - B) *ᵥ v + star v ⬝ᵥ (A - B) *ᵥ B *ᵥ v := by\n      rw [mulVec_mulVec, mulVec_mulVec, ← dotProduct_add, ← add_mulVec, mul_sub, sub_mul,\n        add_sub, sub_add_cancel, pow_two, pow_two]\n    _ = t * (star v ⬝ᵥ A *ᵥ v) + (star v) ᵥ* (A - B)ᴴ ⬝ᵥ B *ᵥ v := by\n      rw [hv', mulVec_smul, dotProduct_smul, RCLike.real_smul_eq_coe_mul,\n        dotProduct_mulVec _ (A - B), hA.1.sub hB.1]\n    _ = t * (star v ⬝ᵥ A *ᵥ v + star v ⬝ᵥ B *ᵥ v) := by\n      simp_rw [← star_mulVec, hv', mul_add, ← RCLike.real_smul_eq_coe_mul, ← smul_dotProduct]\n      congr 2 with i\n      simp only [Pi.star_apply, Pi.smul_apply, RCLike.real_smul_eq_coe_mul, star_mul',\n        RCLike.star_def, RCLike.conj_ofReal]\n  replace h_sum : star v ⬝ᵥ A *ᵥ v + star v ⬝ᵥ B *ᵥ v = 0 := by\n    rw [eq_comm, ← mul_zero (t : 𝕜)] at h_sum\n    exact mul_left_cancel₀ (RCLike.ofReal_ne_zero.mpr ht) h_sum\n  have h_van : star v ⬝ᵥ A *ᵥ v = 0 ∧ star v ⬝ᵥ B *ᵥ v = 0 := by\n    refine ⟨le_antisymm ?_ (hA.2 v), le_antisymm ?_ (hB.2 v)⟩\n    · rw [add_comm, add_eq_zero_iff_eq_neg] at h_sum\n      simpa only [h_sum, neg_nonneg] using hB.2 v\n    · simpa only [add_eq_zero_iff_eq_neg.mp h_sum, neg_nonneg] using hA.2 v\n  have aux : star v ⬝ᵥ (A - B) *ᵥ v = 0 := by\n    rw [sub_mulVec, dotProduct_sub, h_van.1, h_van.2, sub_zero]\n  rw [hv', dotProduct_smul, RCLike.real_smul_eq_coe_mul, ← mul_zero ↑t] at aux\n  exact hv <| dotProduct_star_self_eq_zero.mp <| mul_left_cancel₀\n    (RCLike.ofReal_ne_zero.mpr ht) aux\n\n"}
{"name":"Matrix.PosSemidef.sqrt_sq","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\n𝕜 : Type u_4\ninst✝² : Fintype n\ninst✝¹ : RCLike 𝕜\ninst✝ : DecidableEq n\nA : Matrix n n 𝕜\nhA : A.PosSemidef\n⊢ Eq ⋯.sqrt A","decl":"lemma sqrt_sq : (hA.pow 2 : PosSemidef (A ^ 2)).sqrt = A :=\n  (hA.pow 2).posSemidef_sqrt.eq_of_sq_eq_sq hA (hA.pow 2).sq_sqrt\n\n"}
{"name":"Matrix.PosSemidef.eq_sqrt_of_sq_eq","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\n𝕜 : Type u_4\ninst✝² : Fintype n\ninst✝¹ : RCLike 𝕜\ninst✝ : DecidableEq n\nA : Matrix n n 𝕜\nhA : A.PosSemidef\nB : Matrix n n 𝕜\nhB : B.PosSemidef\nhAB : Eq (HPow.hPow A 2) B\n⊢ Eq A hB.sqrt","decl":"include hA in\nlemma eq_sqrt_of_sq_eq {B : Matrix n n 𝕜} (hB : PosSemidef B) (hAB : A ^ 2 = B) : A = hB.sqrt := by\n  subst B\n  rw [hA.sqrt_sq]\n\n"}
{"name":"Matrix.posSemidef_submatrix_equiv","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"m : Type u_1\nn : Type u_2\nR : Type u_3\ninst✝⁴ : Fintype m\ninst✝³ : Fintype n\ninst✝² : CommRing R\ninst✝¹ : PartialOrder R\ninst✝ : StarRing R\nM : Matrix n n R\ne : Equiv m n\n⊢ Iff (M.submatrix ⇑e ⇑e).PosSemidef M.PosSemidef","decl":"@[simp]\ntheorem posSemidef_submatrix_equiv {M : Matrix n n R} (e : m ≃ n) :\n    (M.submatrix e e).PosSemidef ↔ M.PosSemidef :=\n  ⟨fun h => by simpa using h.submatrix e.symm, fun h => h.submatrix _⟩\n\n"}
{"name":"Matrix.posSemidef_conjTranspose_mul_self","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"m : Type u_1\nn : Type u_2\nR : Type u_3\ninst✝⁵ : Fintype m\ninst✝⁴ : Fintype n\ninst✝³ : CommRing R\ninst✝² : PartialOrder R\ninst✝¹ : StarRing R\ninst✝ : StarOrderedRing R\nA : Matrix m n R\n⊢ (HMul.hMul A.conjTranspose A).PosSemidef","decl":"/-- The conjugate transpose of a matrix multiplied by the matrix is positive semidefinite -/\ntheorem posSemidef_conjTranspose_mul_self [StarOrderedRing R] (A : Matrix m n R) :\n    PosSemidef (Aᴴ * A) := by\n  refine ⟨isHermitian_transpose_mul_self _, fun x => ?_⟩\n  rw [← mulVec_mulVec, dotProduct_mulVec, vecMul_conjTranspose, star_star]\n  exact Finset.sum_nonneg fun i _ => star_mul_self_nonneg _\n\n"}
{"name":"Matrix.posSemidef_self_mul_conjTranspose","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"m : Type u_1\nn : Type u_2\nR : Type u_3\ninst✝⁵ : Fintype m\ninst✝⁴ : Fintype n\ninst✝³ : CommRing R\ninst✝² : PartialOrder R\ninst✝¹ : StarRing R\ninst✝ : StarOrderedRing R\nA : Matrix m n R\n⊢ (HMul.hMul A A.conjTranspose).PosSemidef","decl":"/-- A matrix multiplied by its conjugate transpose is positive semidefinite -/\ntheorem posSemidef_self_mul_conjTranspose [StarOrderedRing R] (A : Matrix m n R) :\n    PosSemidef (A * Aᴴ) := by\n  simpa only [conjTranspose_conjTranspose] using posSemidef_conjTranspose_mul_self Aᴴ\n\n"}
{"name":"Matrix.eigenvalues_conjTranspose_mul_self_nonneg","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"m : Type u_1\nn : Type u_2\n𝕜 : Type u_4\ninst✝³ : Fintype m\ninst✝² : Fintype n\ninst✝¹ : RCLike 𝕜\nA : Matrix m n 𝕜\ninst✝ : DecidableEq n\ni : n\n⊢ LE.le 0 (⋯.eigenvalues i)","decl":"lemma eigenvalues_conjTranspose_mul_self_nonneg (A : Matrix m n 𝕜) [DecidableEq n] (i : n) :\n    0 ≤ (isHermitian_transpose_mul_self A).eigenvalues i :=\n  (posSemidef_conjTranspose_mul_self _).eigenvalues_nonneg _\n\n"}
{"name":"Matrix.eigenvalues_self_mul_conjTranspose_nonneg","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"m : Type u_1\nn : Type u_2\n𝕜 : Type u_4\ninst✝³ : Fintype m\ninst✝² : Fintype n\ninst✝¹ : RCLike 𝕜\nA : Matrix m n 𝕜\ninst✝ : DecidableEq m\ni : m\n⊢ LE.le 0 (⋯.eigenvalues i)","decl":"lemma eigenvalues_self_mul_conjTranspose_nonneg (A : Matrix m n 𝕜) [DecidableEq m] (i : m) :\n    0 ≤ (isHermitian_mul_conjTranspose_self A).eigenvalues i :=\n  (posSemidef_self_mul_conjTranspose _).eigenvalues_nonneg _\n\n"}
{"name":"Matrix.posSemidef_iff_eq_transpose_mul_self","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\n𝕜 : Type u_4\ninst✝¹ : Fintype n\ninst✝ : RCLike 𝕜\nA : Matrix n n 𝕜\n⊢ Iff A.PosSemidef (Exists fun B => Eq A (HMul.hMul B.conjTranspose B))","decl":"/-- A matrix is positive semidefinite if and only if it has the form `Bᴴ * B` for some `B`. -/\nlemma posSemidef_iff_eq_transpose_mul_self {A : Matrix n n 𝕜} :\n    PosSemidef A ↔ ∃ (B : Matrix n n 𝕜), A = Bᴴ * B := by\n  classical\n  refine ⟨fun hA ↦ ⟨hA.sqrt, ?_⟩, fun ⟨B, hB⟩ ↦ (hB ▸ posSemidef_conjTranspose_mul_self B)⟩\n  simp_rw [← PosSemidef.sq_sqrt hA, pow_two]\n  rw [hA.posSemidef_sqrt.1]\n\n"}
{"name":"Matrix.IsHermitian.posSemidef_of_eigenvalues_nonneg","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\n𝕜 : Type u_4\ninst✝² : Fintype n\ninst✝¹ : RCLike 𝕜\ninst✝ : DecidableEq n\nA : Matrix n n 𝕜\nhA : A.IsHermitian\nh : ∀ (i : n), LE.le 0 (hA.eigenvalues i)\n⊢ A.PosSemidef","decl":"lemma IsHermitian.posSemidef_of_eigenvalues_nonneg [DecidableEq n] {A : Matrix n n 𝕜}\n    (hA : IsHermitian A) (h : ∀ i : n, 0 ≤ hA.eigenvalues i) : PosSemidef A := by\n  rw [hA.spectral_theorem]\n  refine (posSemidef_diagonal_iff.mpr ?_).mul_mul_conjTranspose_same _\n  simpa using h\n\n"}
{"name":"Matrix.PosSemidef.dotProduct_mulVec_zero_iff","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\n𝕜 : Type u_4\ninst✝¹ : Fintype n\ninst✝ : RCLike 𝕜\nA : Matrix n n 𝕜\nhA : A.PosSemidef\nx : n → 𝕜\n⊢ Iff (Eq (dotProduct (Star.star x) (A.mulVec x)) 0) (Eq (A.mulVec x) 0)","decl":"/-- For `A` positive semidefinite, we have `x⋆ A x = 0` iff `A x = 0`. -/\ntheorem PosSemidef.dotProduct_mulVec_zero_iff\n    {A : Matrix n n 𝕜} (hA : PosSemidef A) (x : n → 𝕜) :\n    star x ⬝ᵥ A *ᵥ x = 0 ↔ A *ᵥ x = 0 := by\n  constructor\n  · obtain ⟨B, rfl⟩ := posSemidef_iff_eq_transpose_mul_self.mp hA\n    rw [← Matrix.mulVec_mulVec, dotProduct_mulVec,\n      vecMul_conjTranspose, star_star, dotProduct_star_self_eq_zero]\n    intro h0\n    rw [h0, mulVec_zero]\n  · intro h0\n    rw [h0, dotProduct_zero]\n\n"}
{"name":"Matrix.PosSemidef.toLinearMap₂'_zero_iff","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\n𝕜 : Type u_4\ninst✝² : Fintype n\ninst✝¹ : RCLike 𝕜\ninst✝ : DecidableEq n\nA : Matrix n n 𝕜\nhA : A.PosSemidef\nx : n → 𝕜\n⊢ Iff (Eq ((((Matrix.toLinearMap₂' 𝕜) A) (Star.star x)) x) 0) (Eq ((Matrix.toLin' A) x) 0)","decl":"/-- For `A` positive semidefinite, we have `x⋆ A x = 0` iff `A x = 0` (linear maps version). -/\ntheorem PosSemidef.toLinearMap₂'_zero_iff [DecidableEq n]\n    {A : Matrix n n 𝕜} (hA : PosSemidef A) (x : n → 𝕜) :\n    Matrix.toLinearMap₂' 𝕜 A (star x) x = 0 ↔ Matrix.toLin' A x = 0 := by\n  simpa only [toLinearMap₂'_apply', toLin'_apply] using hA.dotProduct_mulVec_zero_iff x\n\n"}
{"name":"Matrix.PosDef.isHermitian","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝³ : Fintype n\ninst✝² : CommRing R\ninst✝¹ : PartialOrder R\ninst✝ : StarRing R\nM : Matrix n n R\nhM : M.PosDef\n⊢ M.IsHermitian","decl":"theorem isHermitian {M : Matrix n n R} (hM : M.PosDef) : M.IsHermitian :=\n  hM.1\n\n"}
{"name":"Matrix.PosDef.re_dotProduct_pos","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\n𝕜 : Type u_4\ninst✝¹ : Fintype n\ninst✝ : RCLike 𝕜\nM : Matrix n n 𝕜\nhM : M.PosDef\nx : n → 𝕜\nhx : Ne x 0\n⊢ LT.lt 0 (RCLike.re (dotProduct (Star.star x) (M.mulVec x)))","decl":"theorem re_dotProduct_pos {M : Matrix n n 𝕜} (hM : M.PosDef) {x : n → 𝕜} (hx : x ≠ 0) :\n    0 < RCLike.re (dotProduct (star x) (M *ᵥ x)) :=\n  RCLike.pos_iff.mp (hM.2 _ hx) |>.1\n\n"}
{"name":"Matrix.PosDef.posSemidef","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝³ : Fintype n\ninst✝² : CommRing R\ninst✝¹ : PartialOrder R\ninst✝ : StarRing R\nM : Matrix n n R\nhM : M.PosDef\n⊢ M.PosSemidef","decl":"theorem posSemidef {M : Matrix n n R} (hM : M.PosDef) : M.PosSemidef := by\n  refine ⟨hM.1, ?_⟩\n  intro x\n  by_cases hx : x = 0\n  · simp only [hx, zero_dotProduct, star_zero, RCLike.zero_re']\n    exact le_rfl\n  · exact le_of_lt (hM.2 x hx)\n\n"}
{"name":"Matrix.PosDef.transpose","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝³ : Fintype n\ninst✝² : CommRing R\ninst✝¹ : PartialOrder R\ninst✝ : StarRing R\nM : Matrix n n R\nhM : M.PosDef\n⊢ M.transpose.PosDef","decl":"theorem transpose {M : Matrix n n R} (hM : M.PosDef) : Mᵀ.PosDef := by\n  refine ⟨IsHermitian.transpose hM.1, fun x hx => ?_⟩\n  convert hM.2 (star x) (star_ne_zero.2 hx) using 1\n  rw [mulVec_transpose, dotProduct_mulVec, star_star, dotProduct_comm]\n\n"}
{"name":"Matrix.PosDef.diagonal","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝⁶ : Fintype n\ninst✝⁵ : CommRing R\ninst✝⁴ : PartialOrder R\ninst✝³ : StarRing R\ninst✝² : StarOrderedRing R\ninst✝¹ : DecidableEq n\ninst✝ : NoZeroDivisors R\nd : n → R\nh : ∀ (i : n), LT.lt 0 (d i)\n⊢ (Matrix.diagonal d).PosDef","decl":"protected theorem diagonal [StarOrderedRing R] [DecidableEq n] [NoZeroDivisors R]\n    {d : n → R} (h : ∀ i, 0 < d i) :\n    PosDef (diagonal d) :=\n  ⟨isHermitian_diagonal_of_self_adjoint _ <| funext fun i => IsSelfAdjoint.of_nonneg (h i).le,\n    fun x hx => by\n      refine Fintype.sum_pos ?_\n      simp_rw [mulVec_diagonal, ← mul_assoc, Pi.lt_def]\n      obtain ⟨i, hi⟩ := Function.ne_iff.mp hx\n      exact ⟨fun i => conjugate_nonneg (h i).le _,\n        i, conjugate_pos (h _) (isRegular_of_ne_zero hi)⟩⟩\n\n"}
{"name":"Matrix.posDef_diagonal_iff","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝⁷ : Fintype n\ninst✝⁶ : CommRing R\ninst✝⁵ : PartialOrder R\ninst✝⁴ : StarRing R\ninst✝³ : StarOrderedRing R\ninst✝² : DecidableEq n\ninst✝¹ : NoZeroDivisors R\ninst✝ : Nontrivial R\nd : n → R\n⊢ Iff (Matrix.diagonal d).PosDef (∀ (i : n), LT.lt 0 (d i))","decl":"@[simp]\ntheorem _root_.Matrix.posDef_diagonal_iff\n    [StarOrderedRing R] [DecidableEq n] [NoZeroDivisors R] [Nontrivial R] {d : n → R} :\n    PosDef (diagonal d) ↔ ∀ i, 0 < d i := by\n  refine ⟨fun h i => ?_, .diagonal⟩\n  have := h.2 (Pi.single i 1)\n  simp_rw [mulVec_single_one, ← Pi.single_star, star_one, single_dotProduct, one_mul,\n    transpose_apply, diagonal_apply_eq, Function.ne_iff] at this\n  exact this ⟨i, by simp⟩\n\n"}
{"name":"Matrix.PosDef.one","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝⁶ : Fintype n\ninst✝⁵ : CommRing R\ninst✝⁴ : PartialOrder R\ninst✝³ : StarRing R\ninst✝² : StarOrderedRing R\ninst✝¹ : DecidableEq n\ninst✝ : NoZeroDivisors R\n⊢ Matrix.PosDef 1","decl":"protected theorem one [StarOrderedRing R] [DecidableEq n] [NoZeroDivisors R] :\n    PosDef (1 : Matrix n n R) :=\n  ⟨isHermitian_one, fun x hx => by simpa only [one_mulVec, dotProduct_star_self_pos_iff]⟩\n\n"}
{"name":"Matrix.PosDef.natCast","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝⁶ : Fintype n\ninst✝⁵ : CommRing R\ninst✝⁴ : PartialOrder R\ninst✝³ : StarRing R\ninst✝² : StarOrderedRing R\ninst✝¹ : DecidableEq n\ninst✝ : NoZeroDivisors R\nd : Nat\nhd : Ne d 0\n⊢ (↑d).PosDef","decl":"protected theorem natCast [StarOrderedRing R] [DecidableEq n] [NoZeroDivisors R]\n    (d : ℕ) (hd : d ≠ 0) :\n    PosDef (d : Matrix n n R) :=\n  ⟨isHermitian_natCast _, fun x hx => by\n    simp only [natCast_mulVec, dotProduct_smul]\n    rw [Nat.cast_smul_eq_nsmul]\n    exact nsmul_pos (dotProduct_star_self_pos_iff.mpr hx) hd⟩\n\n"}
{"name":"Matrix.posDef_natCast_iff","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝⁸ : Fintype n\ninst✝⁷ : CommRing R\ninst✝⁶ : PartialOrder R\ninst✝⁵ : StarRing R\ninst✝⁴ : StarOrderedRing R\ninst✝³ : DecidableEq n\ninst✝² : NoZeroDivisors R\ninst✝¹ : Nonempty n\ninst✝ : Nontrivial R\nd : Nat\n⊢ Iff (↑d).PosDef (LT.lt 0 d)","decl":"@[simp]\ntheorem _root_.Matrix.posDef_natCast_iff [StarOrderedRing R] [DecidableEq n] [NoZeroDivisors R]\n    [Nonempty n] [Nontrivial R] {d : ℕ} :\n    PosDef (d : Matrix n n R) ↔ 0 < d :=\n  posDef_diagonal_iff.trans <| by simp\n\n"}
{"name":"Matrix.PosDef.ofNat","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝⁷ : Fintype n\ninst✝⁶ : CommRing R\ninst✝⁵ : PartialOrder R\ninst✝⁴ : StarRing R\ninst✝³ : StarOrderedRing R\ninst✝² : DecidableEq n\ninst✝¹ : NoZeroDivisors R\nd : Nat\ninst✝ : d.AtLeastTwo\n⊢ (OfNat.ofNat d).PosDef","decl":"protected theorem ofNat [StarOrderedRing R] [DecidableEq n] [NoZeroDivisors R]\n    (d : ℕ) [d.AtLeastTwo] :\n    PosDef (ofNat(d) : Matrix n n R) :=\n  .natCast d (NeZero.ne _)\n\n"}
{"name":"Matrix.PosDef.intCast","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝⁶ : Fintype n\ninst✝⁵ : CommRing R\ninst✝⁴ : PartialOrder R\ninst✝³ : StarRing R\ninst✝² : StarOrderedRing R\ninst✝¹ : DecidableEq n\ninst✝ : NoZeroDivisors R\nd : Int\nhd : LT.lt 0 d\n⊢ (↑d).PosDef","decl":"protected theorem intCast [StarOrderedRing R] [DecidableEq n] [NoZeroDivisors R]\n    (d : ℤ) (hd : 0 < d) :\n    PosDef (d : Matrix n n R) :=\n  ⟨isHermitian_intCast _, fun x hx => by\n    simp only [intCast_mulVec, dotProduct_smul]\n    rw [Int.cast_smul_eq_zsmul]\n    exact zsmul_pos (dotProduct_star_self_pos_iff.mpr hx) hd⟩\n\n"}
{"name":"Matrix.posDef_intCast_iff","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\nR : Type u_3\ninst✝⁸ : Fintype n\ninst✝⁷ : CommRing R\ninst✝⁶ : PartialOrder R\ninst✝⁵ : StarRing R\ninst✝⁴ : StarOrderedRing R\ninst✝³ : DecidableEq n\ninst✝² : NoZeroDivisors R\ninst✝¹ : Nonempty n\ninst✝ : Nontrivial R\nd : Int\n⊢ Iff (↑d).PosDef (LT.lt 0 d)","decl":"@[simp]\ntheorem _root_.Matrix.posDef_intCast_iff [StarOrderedRing R] [DecidableEq n] [NoZeroDivisors R]\n    [Nonempty n] [Nontrivial R] {d : ℤ} :\n    PosDef (d : Matrix n n R) ↔ 0 < d :=\n  posDef_diagonal_iff.trans <| by simp\n\n"}
{"name":"Matrix.PosDef.add_posSemidef","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"m : Type u_1\nR : Type u_3\ninst✝⁴ : Fintype m\ninst✝³ : CommRing R\ninst✝² : PartialOrder R\ninst✝¹ : StarRing R\ninst✝ : AddLeftMono R\nA B : Matrix m m R\nhA : A.PosDef\nhB : B.PosSemidef\n⊢ (HAdd.hAdd A B).PosDef","decl":"protected lemma add_posSemidef [AddLeftMono R]\n    {A : Matrix m m R} {B : Matrix m m R}\n    (hA : A.PosDef) (hB : B.PosSemidef) : (A + B).PosDef :=\n  ⟨hA.isHermitian.add hB.isHermitian, fun x hx => by\n    rw [add_mulVec, dotProduct_add]\n    exact add_pos_of_pos_of_nonneg (hA.2 x hx) (hB.2 x)⟩\n\n"}
{"name":"Matrix.PosDef.posSemidef_add","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"m : Type u_1\nR : Type u_3\ninst✝⁴ : Fintype m\ninst✝³ : CommRing R\ninst✝² : PartialOrder R\ninst✝¹ : StarRing R\ninst✝ : AddLeftMono R\nA B : Matrix m m R\nhA : A.PosSemidef\nhB : B.PosDef\n⊢ (HAdd.hAdd A B).PosDef","decl":"protected lemma posSemidef_add [AddLeftMono R]\n    {A : Matrix m m R} {B : Matrix m m R}\n    (hA : A.PosSemidef) (hB : B.PosDef) : (A + B).PosDef :=\n  ⟨hA.isHermitian.add hB.isHermitian, fun x hx => by\n    rw [add_mulVec, dotProduct_add]\n    exact add_pos_of_nonneg_of_pos (hA.2 x) (hB.2 x hx)⟩\n\n"}
{"name":"Matrix.PosDef.add","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"m : Type u_1\nR : Type u_3\ninst✝⁴ : Fintype m\ninst✝³ : CommRing R\ninst✝² : PartialOrder R\ninst✝¹ : StarRing R\ninst✝ : AddLeftMono R\nA B : Matrix m m R\nhA : A.PosDef\nhB : B.PosDef\n⊢ (HAdd.hAdd A B).PosDef","decl":"protected lemma add [AddLeftMono R] {A : Matrix m m R} {B : Matrix m m R}\n    (hA : A.PosDef) (hB : B.PosDef) : (A + B).PosDef :=\n  hA.add_posSemidef hB.posSemidef\n\n"}
{"name":"Matrix.PosDef.of_toQuadraticForm'","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\ninst✝¹ : Fintype n\ninst✝ : DecidableEq n\nM : Matrix n n Real\nhM : M.IsSymm\nhMq : M.toQuadraticMap'.PosDef\n⊢ M.PosDef","decl":"theorem of_toQuadraticForm' [DecidableEq n] {M : Matrix n n ℝ} (hM : M.IsSymm)\n    (hMq : M.toQuadraticMap'.PosDef) : M.PosDef := by\n  refine ⟨hM, fun x hx => ?_⟩\n  simp only [toQuadraticMap', QuadraticMap.PosDef, LinearMap.BilinMap.toQuadraticMap_apply,\n    toLinearMap₂'_apply'] at hMq\n  apply hMq x hx\n\n"}
{"name":"Matrix.PosDef.toQuadraticForm'","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\ninst✝¹ : Fintype n\ninst✝ : DecidableEq n\nM : Matrix n n Real\nhM : M.PosDef\n⊢ M.toQuadraticMap'.PosDef","decl":"theorem toQuadraticForm' [DecidableEq n] {M : Matrix n n ℝ} (hM : M.PosDef) :\n    M.toQuadraticMap'.PosDef := by\n  intro x hx\n  simp only [Matrix.toQuadraticMap', LinearMap.BilinMap.toQuadraticMap_apply,\n    toLinearMap₂'_apply']\n  apply hM.2 x hx\n\n"}
{"name":"Matrix.PosDef.eigenvalues_pos","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\n𝕜 : Type u_4\ninst✝² : Fintype n\ninst✝¹ : RCLike 𝕜\ninst✝ : DecidableEq n\nA : Matrix n n 𝕜\nhA : A.PosDef\ni : n\n⊢ LT.lt 0 (⋯.eigenvalues i)","decl":"/-- The eigenvalues of a positive definite matrix are positive -/\nlemma eigenvalues_pos [DecidableEq n] {A : Matrix n n 𝕜}\n    (hA : Matrix.PosDef A) (i : n) : 0 < hA.1.eigenvalues i := by\n  simp only [hA.1.eigenvalues_eq]\n  exact hA.re_dotProduct_pos <| hA.1.eigenvectorBasis.orthonormal.ne_zero i\n\n"}
{"name":"Matrix.PosDef.det_pos","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\n𝕜 : Type u_4\ninst✝² : Fintype n\ninst✝¹ : RCLike 𝕜\ninst✝ : DecidableEq n\nM : Matrix n n 𝕜\nhM : M.PosDef\n⊢ LT.lt 0 M.det","decl":"theorem det_pos [DecidableEq n] {M : Matrix n n 𝕜} (hM : M.PosDef) : 0 < det M := by\n  rw [hM.isHermitian.det_eq_prod_eigenvalues]\n  apply Finset.prod_pos\n  intro i _\n  simpa using hM.eigenvalues_pos i\n\n"}
{"name":"Matrix.PosDef.isUnit","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\n𝕜 : Type u_4\ninst✝² : Fintype n\ninst✝¹ : RCLike 𝕜\ninst✝ : DecidableEq n\nM : Matrix n n 𝕜\nhM : M.PosDef\n⊢ IsUnit M","decl":"theorem isUnit [DecidableEq n] {M : Matrix n n 𝕜} (hM : M.PosDef) : IsUnit M :=\n  isUnit_iff_isUnit_det _ |>.2 <| hM.det_pos.ne'.isUnit\n\n"}
{"name":"Matrix.PosDef.inv","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\n𝕜 : Type u_4\ninst✝² : Fintype n\ninst✝¹ : RCLike 𝕜\ninst✝ : DecidableEq n\nM : Matrix n n 𝕜\nhM : M.PosDef\n⊢ (Inv.inv M).PosDef","decl":"protected theorem inv [DecidableEq n] {M : Matrix n n 𝕜} (hM : M.PosDef) : M⁻¹.PosDef := by\n  refine ⟨hM.isHermitian.inv, fun x hx => ?_⟩\n  have := hM.2 (M⁻¹ *ᵥ x) ((Matrix.mulVec_injective_iff_isUnit.mpr ?_ |>.ne_iff' ?_).2 hx)\n  · let _inst := hM.isUnit.invertible\n    rwa [star_mulVec, mulVec_mulVec, Matrix.mul_inv_of_invertible, one_mulVec,\n      ← star_pos_iff, ← star_mulVec, ← star_dotProduct] at this\n  · simpa using hM.isUnit\n  · simp\n\n"}
{"name":"Matrix.posDef_inv_iff","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_2\n𝕜 : Type u_4\ninst✝² : Fintype n\ninst✝¹ : RCLike 𝕜\ninst✝ : DecidableEq n\nM : Matrix n n 𝕜\n⊢ Iff (Inv.inv M).PosDef M.PosDef","decl":"@[simp]\ntheorem _root_.Matrix.posDef_inv_iff [DecidableEq n] {M : Matrix n n 𝕜} :\n    M⁻¹.PosDef ↔ M.PosDef :=\n  ⟨fun h =>\n    letI := (Matrix.isUnit_nonsing_inv_iff.1 <| h.isUnit).invertible\n    Matrix.inv_inv_of_invertible M ▸ h.inv, (·.inv)⟩\n\n"}
{"name":"QuadraticForm.posDef_of_toMatrix'","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_1\ninst✝¹ : Fintype n\ninst✝ : DecidableEq n\nQ : QuadraticForm Real (n → Real)\nhQ : (QuadraticMap.toMatrix' Q).PosDef\n⊢ QuadraticMap.PosDef Q","decl":"theorem posDef_of_toMatrix' [DecidableEq n] {Q : QuadraticForm ℝ (n → ℝ)}\n    (hQ : Q.toMatrix'.PosDef) : Q.PosDef := by\n  rw [← toQuadraticMap_associated ℝ Q,\n    ← (LinearMap.toMatrix₂' ℝ).left_inv ((associatedHom (R := ℝ) ℝ) Q)]\n  exact hQ.toQuadraticForm'\n\n"}
{"name":"QuadraticForm.posDef_toMatrix'","module":"Mathlib.LinearAlgebra.Matrix.PosDef","initialProofState":"n : Type u_1\ninst✝¹ : Fintype n\ninst✝ : DecidableEq n\nQ : QuadraticForm Real (n → Real)\nhQ : QuadraticMap.PosDef Q\n⊢ (QuadraticMap.toMatrix' Q).PosDef","decl":"theorem posDef_toMatrix' [DecidableEq n] {Q : QuadraticForm ℝ (n → ℝ)} (hQ : Q.PosDef) :\n    Q.toMatrix'.PosDef := by\n  rw [← toQuadraticMap_associated ℝ Q, ←\n    (LinearMap.toMatrix₂' ℝ).left_inv ((associatedHom (R := ℝ) ℝ) Q)] at hQ\n  exact .of_toQuadraticForm' (isSymm_toMatrix' Q) hQ\n\n"}
