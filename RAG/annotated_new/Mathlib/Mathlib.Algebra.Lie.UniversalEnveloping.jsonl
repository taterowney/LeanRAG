{"name":"UniversalEnvelopingAlgebra.ι_apply","module":"Mathlib.Algebra.Lie.UniversalEnveloping","initialProofState":"R : Type u₁\nL : Type u₂\ninst✝² : CommRing R\ninst✝¹ : LieRing L\ninst✝ : LieAlgebra R L\na✝ : L\n⊢ Eq ((UniversalEnvelopingAlgebra.ι R) a✝) ((UniversalEnvelopingAlgebra.mkAlgHom R L) ((TensorAlgebra.ι R) a✝))","decl":"/-- The natural Lie algebra morphism from a Lie algebra to its universal enveloping algebra. -/\n@[simps!] -- Porting note (https://github.com/leanprover-community/mathlib4/issues/11445): added\ndef ι : L →ₗ⁅R⁆ UniversalEnvelopingAlgebra R L :=\n  { (mkAlgHom R L).toLinearMap.comp ιₜ with\n    map_lie' := fun {x y} => by\n      suffices mkAlgHom R L (ιₜ ⁅x, y⁆ + ιₜ y * ιₜ x) = mkAlgHom R L (ιₜ x * ιₜ y) by\n        rw [map_mul] at this; simp [LieRing.of_associative_ring_bracket, ← this]\n      exact RingQuot.mkAlgHom_rel _ (Rel.lie_compat x y) }\n\n"}
{"name":"UniversalEnvelopingAlgebra.lift_symm_apply","module":"Mathlib.Algebra.Lie.UniversalEnveloping","initialProofState":"R : Type u₁\nL : Type u₂\ninst✝⁴ : CommRing R\ninst✝³ : LieRing L\ninst✝² : LieAlgebra R L\nA : Type u₃\ninst✝¹ : Ring A\ninst✝ : Algebra R A\nF : AlgHom R (UniversalEnvelopingAlgebra R L) A\n⊢ Eq ((UniversalEnvelopingAlgebra.lift R).symm F) (F.toLieHom.comp (UniversalEnvelopingAlgebra.ι R))","decl":"@[simp]\ntheorem lift_symm_apply (F : UniversalEnvelopingAlgebra R L →ₐ[R] A) :\n    (lift R).symm F = (F : UniversalEnvelopingAlgebra R L →ₗ⁅R⁆ A).comp (ι R) :=\n  rfl\n\n"}
{"name":"UniversalEnvelopingAlgebra.ι_comp_lift","module":"Mathlib.Algebra.Lie.UniversalEnveloping","initialProofState":"R : Type u₁\nL : Type u₂\ninst✝⁴ : CommRing R\ninst✝³ : LieRing L\ninst✝² : LieAlgebra R L\nA : Type u₃\ninst✝¹ : Ring A\ninst✝ : Algebra R A\nf : LieHom R L A\n⊢ Eq (Function.comp ⇑((UniversalEnvelopingAlgebra.lift R) f) ⇑(UniversalEnvelopingAlgebra.ι R)) ⇑f","decl":"@[simp]\ntheorem ι_comp_lift : lift R f ∘ ι R = f :=\n  funext <| LieHom.ext_iff.mp <| (lift R).symm_apply_apply f\n\n-- Porting note: moved `@[simp]` to the next theorem (LHS simplifies)\n"}
{"name":"UniversalEnvelopingAlgebra.lift_ι_apply","module":"Mathlib.Algebra.Lie.UniversalEnveloping","initialProofState":"R : Type u₁\nL : Type u₂\ninst✝⁴ : CommRing R\ninst✝³ : LieRing L\ninst✝² : LieAlgebra R L\nA : Type u₃\ninst✝¹ : Ring A\ninst✝ : Algebra R A\nf : LieHom R L A\nx : L\n⊢ Eq (((UniversalEnvelopingAlgebra.lift R) f) ((UniversalEnvelopingAlgebra.ι R) x)) (f x)","decl":"theorem lift_ι_apply (x : L) : lift R f (ι R x) = f x := by\n  rw [← Function.comp_apply (f := lift R f) (g := ι R) (x := x), ι_comp_lift]\n\n"}
{"name":"UniversalEnvelopingAlgebra.lift_ι_apply'","module":"Mathlib.Algebra.Lie.UniversalEnveloping","initialProofState":"R : Type u₁\nL : Type u₂\ninst✝⁴ : CommRing R\ninst✝³ : LieRing L\ninst✝² : LieAlgebra R L\nA : Type u₃\ninst✝¹ : Ring A\ninst✝ : Algebra R A\nf : LieHom R L A\nx : L\n⊢ Eq (((UniversalEnvelopingAlgebra.lift R) f) ((UniversalEnvelopingAlgebra.mkAlgHom R L) ((TensorAlgebra.ι R) x))) (f x)","decl":"@[simp]\ntheorem lift_ι_apply' (x : L) :\n    lift R f ((UniversalEnvelopingAlgebra.mkAlgHom R L) (ιₜ x)) = f x := by\n  simpa using lift_ι_apply R f x\n\n"}
{"name":"UniversalEnvelopingAlgebra.lift_unique","module":"Mathlib.Algebra.Lie.UniversalEnveloping","initialProofState":"R : Type u₁\nL : Type u₂\ninst✝⁴ : CommRing R\ninst✝³ : LieRing L\ninst✝² : LieAlgebra R L\nA : Type u₃\ninst✝¹ : Ring A\ninst✝ : Algebra R A\nf : LieHom R L A\ng : AlgHom R (UniversalEnvelopingAlgebra R L) A\n⊢ Iff (Eq (Function.comp ⇑g ⇑(UniversalEnvelopingAlgebra.ι R)) ⇑f) (Eq g ((UniversalEnvelopingAlgebra.lift R) f))","decl":"theorem lift_unique (g : UniversalEnvelopingAlgebra R L →ₐ[R] A) : g ∘ ι R = f ↔ g = lift R f := by\n  refine Iff.trans ?_ (lift R).symm_apply_eq\n  constructor <;> · intro h; ext; simp [← h]\n\n"}
{"name":"UniversalEnvelopingAlgebra.hom_ext_iff","module":"Mathlib.Algebra.Lie.UniversalEnveloping","initialProofState":"R : Type u₁\nL : Type u₂\ninst✝⁴ : CommRing R\ninst✝³ : LieRing L\ninst✝² : LieAlgebra R L\nA : Type u₃\ninst✝¹ : Ring A\ninst✝ : Algebra R A\ng₁ g₂ : AlgHom R (UniversalEnvelopingAlgebra R L) A\n⊢ Iff (Eq g₁ g₂) (Eq (g₁.toLieHom.comp (UniversalEnvelopingAlgebra.ι R)) (g₂.toLieHom.comp (UniversalEnvelopingAlgebra.ι R)))","decl":"/-- See note [partially-applied ext lemmas]. -/\n@[ext]\ntheorem hom_ext {g₁ g₂ : UniversalEnvelopingAlgebra R L →ₐ[R] A}\n    (h :\n      (g₁ : UniversalEnvelopingAlgebra R L →ₗ⁅R⁆ A).comp (ι R) =\n        (g₂ : UniversalEnvelopingAlgebra R L →ₗ⁅R⁆ A).comp (ι R)) :\n    g₁ = g₂ :=\n  have h' : (lift R).symm g₁ = (lift R).symm g₂ := by ext; simp [h]\n  (lift R).symm.injective h'\n\n"}
{"name":"UniversalEnvelopingAlgebra.hom_ext","module":"Mathlib.Algebra.Lie.UniversalEnveloping","initialProofState":"R : Type u₁\nL : Type u₂\ninst✝⁴ : CommRing R\ninst✝³ : LieRing L\ninst✝² : LieAlgebra R L\nA : Type u₃\ninst✝¹ : Ring A\ninst✝ : Algebra R A\ng₁ g₂ : AlgHom R (UniversalEnvelopingAlgebra R L) A\nh : Eq (g₁.toLieHom.comp (UniversalEnvelopingAlgebra.ι R)) (g₂.toLieHom.comp (UniversalEnvelopingAlgebra.ι R))\n⊢ Eq g₁ g₂","decl":"/-- See note [partially-applied ext lemmas]. -/\n@[ext]\ntheorem hom_ext {g₁ g₂ : UniversalEnvelopingAlgebra R L →ₐ[R] A}\n    (h :\n      (g₁ : UniversalEnvelopingAlgebra R L →ₗ⁅R⁆ A).comp (ι R) =\n        (g₂ : UniversalEnvelopingAlgebra R L →ₗ⁅R⁆ A).comp (ι R)) :\n    g₁ = g₂ :=\n  have h' : (lift R).symm g₁ = (lift R).symm g₂ := by ext; simp [h]\n  (lift R).symm.injective h'\n\n"}
