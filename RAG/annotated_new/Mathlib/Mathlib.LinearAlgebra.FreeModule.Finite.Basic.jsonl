{"name":"Module.Finite.of_basis","module":"Mathlib.LinearAlgebra.FreeModule.Finite.Basic","initialProofState":"R : Type u_1\nM : Type u_2\nι : Type u_3\ninst✝³ : Semiring R\ninst✝² : AddCommMonoid M\ninst✝¹ : Module R M\ninst✝ : Finite ι\nb : Basis ι R M\n⊢ Module.Finite R M","decl":"/-- A free module with a basis indexed by a `Fintype` is finite. -/\ntheorem Module.Finite.of_basis {R M ι : Type*} [Semiring R] [AddCommMonoid M] [Module R M]\n    [_root_.Finite ι] (b : Basis ι R M) : Module.Finite R M := by\n  cases nonempty_fintype ι\n  classical\n    refine ⟨⟨Finset.univ.image b, ?_⟩⟩\n    simp only [Set.image_univ, Finset.coe_univ, Finset.coe_image, Basis.span_eq]\n\n"}
{"name":"Module.Finite.matrix","module":"Mathlib.LinearAlgebra.FreeModule.Finite.Basic","initialProofState":"R : Type u_1\nι₁ : Type u_2\nι₂ : Type u_3\nM : Type u_4\ninst✝⁶ : Semiring R\ninst✝⁵ : AddCommMonoid M\ninst✝⁴ : Module R M\ninst✝³ : Module.Free R M\ninst✝² : Module.Finite R M\ninst✝¹ : Finite ι₁\ninst✝ : Finite ι₂\n⊢ Module.Finite R (Matrix ι₁ ι₂ M)","decl":"instance Module.Finite.matrix {R ι₁ ι₂ M : Type*}\n    [Semiring R] [AddCommMonoid M] [Module R M] [Module.Free R M] [Module.Finite R M]\n    [_root_.Finite ι₁] [_root_.Finite ι₂] :\n    Module.Finite R (Matrix ι₁ ι₂ M) := by\n  cases nonempty_fintype ι₁\n  cases nonempty_fintype ι₂\n  exact Module.Finite.of_basis <| (Free.chooseBasis _ _).matrix _ _\n\n"}
