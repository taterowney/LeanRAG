{"name":"StarSubalgebra.star_mem'","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nself : StarSubalgebra R A\na : A\na✝ : Membership.mem self.carrier a\n⊢ Membership.mem self.carrier (Star.star a)","decl":"/-- A *-subalgebra is a subalgebra of a *-algebra which is closed under *. -/\nstructure StarSubalgebra (R : Type u) (A : Type v) [CommSemiring R] [StarRing R] [Semiring A]\n  [StarRing A] [Algebra R A] [StarModule R A] extends Subalgebra R A : Type v where\n  /-- The `carrier` is closed under the `star` operation. -/\n  star_mem' {a} : a ∈ carrier → star a ∈ carrier\n\n"}
{"name":"StarSubalgebra.mk.injEq","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\ntoSubalgebra✝ : Subalgebra R A\nstar_mem'✝ : ∀ {a : A}, Membership.mem toSubalgebra✝.carrier a → Membership.mem toSubalgebra✝.carrier (Star.star a)\ntoSubalgebra : Subalgebra R A\nstar_mem' : ∀ {a : A}, Membership.mem toSubalgebra.carrier a → Membership.mem toSubalgebra.carrier (Star.star a)\n⊢ Eq (Eq { toSubalgebra := toSubalgebra✝, star_mem' := star_mem'✝ } { toSubalgebra := toSubalgebra, star_mem' := star_mem' }) (Eq toSubalgebra✝ toSubalgebra)","decl":"/-- A *-subalgebra is a subalgebra of a *-algebra which is closed under *. -/\nstructure StarSubalgebra (R : Type u) (A : Type v) [CommSemiring R] [StarRing R] [Semiring A]\n  [StarRing A] [Algebra R A] [StarModule R A] extends Subalgebra R A : Type v where\n  /-- The `carrier` is closed under the `star` operation. -/\n  star_mem' {a} : a ∈ carrier → star a ∈ carrier\n\n"}
{"name":"StarSubalgebra.mk.inj","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\ntoSubalgebra✝ : Subalgebra R A\nstar_mem'✝ : ∀ {a : A}, Membership.mem toSubalgebra✝.carrier a → Membership.mem toSubalgebra✝.carrier (Star.star a)\ntoSubalgebra : Subalgebra R A\nstar_mem' : ∀ {a : A}, Membership.mem toSubalgebra.carrier a → Membership.mem toSubalgebra.carrier (Star.star a)\nx✝ : Eq { toSubalgebra := toSubalgebra✝, star_mem' := star_mem'✝ } { toSubalgebra := toSubalgebra, star_mem' := star_mem' }\n⊢ Eq toSubalgebra✝ toSubalgebra","decl":"/-- A *-subalgebra is a subalgebra of a *-algebra which is closed under *. -/\nstructure StarSubalgebra (R : Type u) (A : Type v) [CommSemiring R] [StarRing R] [Semiring A]\n  [StarRing A] [Algebra R A] [StarModule R A] extends Subalgebra R A : Type v where\n  /-- The `carrier` is closed under the `star` operation. -/\n  star_mem' {a} : a ∈ carrier → star a ∈ carrier\n\n"}
{"name":"StarSubalgebra.mk.sizeOf_spec","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u\nA : Type v\ninst✝⁷ : CommSemiring R\ninst✝⁶ : StarRing R\ninst✝⁵ : Semiring A\ninst✝⁴ : StarRing A\ninst✝³ : Algebra R A\ninst✝² : StarModule R A\ninst✝¹ : SizeOf R\ninst✝ : SizeOf A\ntoSubalgebra : Subalgebra R A\nstar_mem' : ∀ {a : A}, Membership.mem toSubalgebra.carrier a → Membership.mem toSubalgebra.carrier (Star.star a)\n⊢ Eq (SizeOf.sizeOf { toSubalgebra := toSubalgebra, star_mem' := star_mem' }) (HAdd.hAdd 1 (SizeOf.sizeOf toSubalgebra))","decl":"/-- A *-subalgebra is a subalgebra of a *-algebra which is closed under *. -/\nstructure StarSubalgebra (R : Type u) (A : Type v) [CommSemiring R] [StarRing R] [Semiring A]\n  [StarRing A] [Algebra R A] [StarModule R A] extends Subalgebra R A : Type v where\n  /-- The `carrier` is closed under the `star` operation. -/\n  star_mem' {a} : a ∈ carrier → star a ∈ carrier\n\n"}
{"name":"StarSubalgebra.starMemClass","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\n⊢ StarMemClass (StarSubalgebra R A) A","decl":"instance starMemClass : StarMemClass (StarSubalgebra R A) A where\n  star_mem {s} := s.star_mem'\n\n\n"}
{"name":"StarSubalgebra.subsemiringClass","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\n⊢ SubsemiringClass (StarSubalgebra R A) A","decl":"instance subsemiringClass : SubsemiringClass (StarSubalgebra R A) A where\n  add_mem {s} := s.add_mem'\n  mul_mem {s} := s.mul_mem'\n  one_mem {s} := s.one_mem'\n  zero_mem {s} := s.zero_mem'\n\n"}
{"name":"StarSubalgebra.smulMemClass","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\n⊢ SMulMemClass (StarSubalgebra R A) R A","decl":"instance smulMemClass : SMulMemClass (StarSubalgebra R A) R A where\n  smul_mem {s} r a (ha : a ∈ s.toSubalgebra) :=\n    (SMulMemClass.smul_mem r ha : r • a ∈ s.toSubalgebra)\n\n"}
{"name":"StarSubalgebra.subringClass","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_6\nA : Type u_7\ninst✝⁵ : CommRing R\ninst✝⁴ : StarRing R\ninst✝³ : Ring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\n⊢ SubringClass (StarSubalgebra R A) A","decl":"instance subringClass {R A} [CommRing R] [StarRing R] [Ring A] [StarRing A] [Algebra R A]\n    [StarModule R A] : SubringClass (StarSubalgebra R A) A where\n  neg_mem {s a} ha := show -a ∈ s.toSubalgebra from neg_mem ha\n\n-- this uses the `Star` instance `s` inherits from `StarMemClass (StarSubalgebra R A) A`\n"}
{"name":"StarSubalgebra.starModule","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\ns : StarSubalgebra R A\n⊢ StarModule R (Subtype fun x => Membership.mem s x)","decl":"instance starModule (s : StarSubalgebra R A) : StarModule R s where\n  star_smul r a := Subtype.ext (star_smul r (a : A))\n\n"}
{"name":"StarSubalgebra.one_mem_toNonUnitalStarSubalgebra","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nS : StarSubalgebra R A\n⊢ Membership.mem S.toNonUnitalStarSubalgebra 1","decl":"lemma one_mem_toNonUnitalStarSubalgebra (S : StarSubalgebra R A) :\n    1 ∈ S.toNonUnitalStarSubalgebra := S.one_mem'\n\n"}
{"name":"StarSubalgebra.mem_carrier","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\ns : StarSubalgebra R A\nx : A\n⊢ Iff (Membership.mem s.carrier x) (Membership.mem s x)","decl":"theorem mem_carrier {s : StarSubalgebra R A} {x : A} : x ∈ s.carrier ↔ x ∈ s :=\n  Iff.rfl\n\n"}
{"name":"StarSubalgebra.ext_iff","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nS T : StarSubalgebra R A\n⊢ Iff (Eq S T) (∀ (x : A), Iff (Membership.mem S x) (Membership.mem T x))","decl":"@[ext]\ntheorem ext {S T : StarSubalgebra R A} (h : ∀ x : A, x ∈ S ↔ x ∈ T) : S = T :=\n  SetLike.ext h\n\n"}
{"name":"StarSubalgebra.ext","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nS T : StarSubalgebra R A\nh : ∀ (x : A), Iff (Membership.mem S x) (Membership.mem T x)\n⊢ Eq S T","decl":"@[ext]\ntheorem ext {S T : StarSubalgebra R A} (h : ∀ x : A, x ∈ S ↔ x ∈ T) : S = T :=\n  SetLike.ext h\n\n"}
{"name":"StarSubalgebra.coe_mk","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nS : Subalgebra R A\nh : ∀ {a : A}, Membership.mem S.carrier a → Membership.mem S.carrier (Star.star a)\n⊢ Eq ↑{ toSubalgebra := S, star_mem' := h } ↑S","decl":"@[simp]\nlemma coe_mk (S : Subalgebra R A) (h) : ((⟨S, h⟩ : StarSubalgebra R A) : Set A) = S := rfl\n\n"}
{"name":"StarSubalgebra.mem_toSubalgebra","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nS : StarSubalgebra R A\nx : A\n⊢ Iff (Membership.mem S.toSubalgebra x) (Membership.mem S x)","decl":"@[simp]\ntheorem mem_toSubalgebra {S : StarSubalgebra R A} {x} : x ∈ S.toSubalgebra ↔ x ∈ S :=\n  Iff.rfl\n\n"}
{"name":"StarSubalgebra.coe_toSubalgebra","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nS : StarSubalgebra R A\n⊢ Eq ↑S.toSubalgebra ↑S","decl":"@[simp]\ntheorem coe_toSubalgebra (S : StarSubalgebra R A) : (S.toSubalgebra : Set A) = S :=\n  rfl\n\n"}
{"name":"StarSubalgebra.toSubalgebra_injective","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\n⊢ Function.Injective StarSubalgebra.toSubalgebra","decl":"theorem toSubalgebra_injective :\n    Function.Injective (toSubalgebra : StarSubalgebra R A → Subalgebra R A) := fun S T h =>\n  ext fun x => by rw [← mem_toSubalgebra, ← mem_toSubalgebra, h]\n\n"}
{"name":"StarSubalgebra.toSubalgebra_inj","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nS U : StarSubalgebra R A\n⊢ Iff (Eq S.toSubalgebra U.toSubalgebra) (Eq S U)","decl":"theorem toSubalgebra_inj {S U : StarSubalgebra R A} : S.toSubalgebra = U.toSubalgebra ↔ S = U :=\n  toSubalgebra_injective.eq_iff\n\n"}
{"name":"StarSubalgebra.toSubalgebra_le_iff","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nS₁ S₂ : StarSubalgebra R A\n⊢ Iff (LE.le S₁.toSubalgebra S₂.toSubalgebra) (LE.le S₁ S₂)","decl":"theorem toSubalgebra_le_iff {S₁ S₂ : StarSubalgebra R A} :\n    S₁.toSubalgebra ≤ S₂.toSubalgebra ↔ S₁ ≤ S₂ :=\n  Iff.rfl\n\n"}
{"name":"StarSubalgebra.coe_copy","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nS : StarSubalgebra R A\ns : Set A\nhs : Eq s ↑S\n⊢ Eq (↑(S.copy s hs)) s","decl":"@[simp]\ntheorem coe_copy (S : StarSubalgebra R A) (s : Set A) (hs : s = ↑S) : (S.copy s hs : Set A) = s :=\n  rfl\n\n"}
{"name":"StarSubalgebra.copy_eq","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nS : StarSubalgebra R A\ns : Set A\nhs : Eq s ↑S\n⊢ Eq (S.copy s hs) S","decl":"theorem copy_eq (S : StarSubalgebra R A) (s : Set A) (hs : s = ↑S) : S.copy s hs = S :=\n  SetLike.coe_injective hs\n\n"}
{"name":"StarSubalgebra.algebraMap_mem","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nS : StarSubalgebra R A\nr : R\n⊢ Membership.mem S ((algebraMap R A) r)","decl":"theorem algebraMap_mem (r : R) : algebraMap R A r ∈ S :=\n  S.algebraMap_mem' r\n\n"}
{"name":"StarSubalgebra.rangeS_le","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nS : StarSubalgebra R A\n⊢ LE.le (algebraMap R A).rangeS S.toSubsemiring","decl":"theorem rangeS_le : (algebraMap R A).rangeS ≤ S.toSubalgebra.toSubsemiring := fun _x ⟨r, hr⟩ =>\n  hr ▸ S.algebraMap_mem r\n\n"}
{"name":"StarSubalgebra.range_subset","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nS : StarSubalgebra R A\n⊢ HasSubset.Subset (Set.range ⇑(algebraMap R A)) ↑S","decl":"theorem range_subset : Set.range (algebraMap R A) ⊆ S := fun _x ⟨r, hr⟩ => hr ▸ S.algebraMap_mem r\n\n"}
{"name":"StarSubalgebra.range_le","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nS : StarSubalgebra R A\n⊢ LE.le (Set.range ⇑(algebraMap R A)) ↑S","decl":"theorem range_le : Set.range (algebraMap R A) ≤ S :=\n  S.range_subset\n\n"}
{"name":"StarSubalgebra.smul_mem","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nS : StarSubalgebra R A\nx : A\nhx : Membership.mem S x\nr : R\n⊢ Membership.mem S (HSMul.hSMul r x)","decl":"protected theorem smul_mem {x : A} (hx : x ∈ S) (r : R) : r • x ∈ S :=\n  (Algebra.smul_def r x).symm ▸ mul_mem (S.algebraMap_mem r) hx\n\n"}
{"name":"StarSubalgebra.coe_subtype","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nS : StarSubalgebra R A\n⊢ Eq (⇑S.subtype) Subtype.val","decl":"@[simp]\ntheorem coe_subtype : (S.subtype : S → A) = Subtype.val :=\n  rfl\n\n"}
{"name":"StarSubalgebra.subtype_apply","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nS : StarSubalgebra R A\nx : Subtype fun x => Membership.mem S x\n⊢ Eq (S.subtype x) ↑x","decl":"theorem subtype_apply (x : S) : S.subtype x = (x : A) :=\n  rfl\n\n"}
{"name":"StarSubalgebra.toSubalgebra_subtype","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nS : StarSubalgebra R A\n⊢ Eq S.val S.subtype.toAlgHom","decl":"@[simp]\ntheorem toSubalgebra_subtype : S.toSubalgebra.val = S.subtype.toAlgHom :=\n  rfl\n\n"}
{"name":"StarSubalgebra.inclusion_apply","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nS₁ S₂ : StarSubalgebra R A\nh : LE.le S₁ S₂\na✝ : Subtype fun x => Membership.mem S₁ x\n⊢ Eq ((StarSubalgebra.inclusion h) a✝) (Subtype.map id h a✝)","decl":"/-- The inclusion map between `StarSubalgebra`s given by `Subtype.map id` as a `StarAlgHom`. -/\n@[simps]\ndef inclusion {S₁ S₂ : StarSubalgebra R A} (h : S₁ ≤ S₂) : S₁ →⋆ₐ[R] S₂ where\n  toFun := Subtype.map id h\n  map_one' := rfl\n  map_mul' _ _ := rfl\n  map_zero' := rfl\n  map_add' _ _ := rfl\n  commutes' _ := rfl\n  map_star' _ := rfl\n\n"}
{"name":"StarSubalgebra.inclusion_injective","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nS₁ S₂ : StarSubalgebra R A\nh : LE.le S₁ S₂\n⊢ Function.Injective ⇑(StarSubalgebra.inclusion h)","decl":"theorem inclusion_injective {S₁ S₂ : StarSubalgebra R A} (h : S₁ ≤ S₂) :\n    Function.Injective <| inclusion h :=\n  Set.inclusion_injective h\n\n"}
{"name":"StarSubalgebra.subtype_comp_inclusion","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nS₁ S₂ : StarSubalgebra R A\nh : LE.le S₁ S₂\n⊢ Eq (S₂.subtype.comp (StarSubalgebra.inclusion h)) S₁.subtype","decl":"@[simp]\ntheorem subtype_comp_inclusion {S₁ S₂ : StarSubalgebra R A} (h : S₁ ≤ S₂) :\n    S₂.subtype.comp (inclusion h) = S₁.subtype :=\n  rfl\n\n"}
{"name":"StarSubalgebra.map_mono","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : Semiring A\ninst✝⁶ : StarRing A\ninst✝⁵ : Algebra R A\ninst✝⁴ : StarModule R A\ninst✝³ : Semiring B\ninst✝² : StarRing B\ninst✝¹ : Algebra R B\ninst✝ : StarModule R B\nS₁ S₂ : StarSubalgebra R A\nf : StarAlgHom R A B\na✝ : LE.le S₁ S₂\n⊢ LE.le (StarSubalgebra.map f S₁) (StarSubalgebra.map f S₂)","decl":"theorem map_mono {S₁ S₂ : StarSubalgebra R A} {f : A →⋆ₐ[R] B} : S₁ ≤ S₂ → S₁.map f ≤ S₂.map f :=\n  Set.image_subset f\n\n"}
{"name":"StarSubalgebra.map_injective","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : Semiring A\ninst✝⁶ : StarRing A\ninst✝⁵ : Algebra R A\ninst✝⁴ : StarModule R A\ninst✝³ : Semiring B\ninst✝² : StarRing B\ninst✝¹ : Algebra R B\ninst✝ : StarModule R B\nf : StarAlgHom R A B\nhf : Function.Injective ⇑f\n⊢ Function.Injective (StarSubalgebra.map f)","decl":"theorem map_injective {f : A →⋆ₐ[R] B} (hf : Function.Injective f) : Function.Injective (map f) :=\n  fun _S₁ _S₂ ih =>\n  ext <| Set.ext_iff.1 <| Set.image_injective.2 hf <| Set.ext <| SetLike.ext_iff.mp ih\n\n"}
{"name":"StarSubalgebra.map_id","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nS : StarSubalgebra R A\n⊢ Eq (StarSubalgebra.map (StarAlgHom.id R A) S) S","decl":"@[simp]\ntheorem map_id (S : StarSubalgebra R A) : S.map (StarAlgHom.id R A) = S :=\n  SetLike.coe_injective <| Set.image_id _\n\n"}
{"name":"StarSubalgebra.map_map","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\nB : Type u_4\nC : Type u_5\ninst✝¹³ : CommSemiring R\ninst✝¹² : StarRing R\ninst✝¹¹ : Semiring A\ninst✝¹⁰ : StarRing A\ninst✝⁹ : Algebra R A\ninst✝⁸ : StarModule R A\ninst✝⁷ : Semiring B\ninst✝⁶ : StarRing B\ninst✝⁵ : Algebra R B\ninst✝⁴ : StarModule R B\ninst✝³ : Semiring C\ninst✝² : StarRing C\ninst✝¹ : Algebra R C\ninst✝ : StarModule R C\nS : StarSubalgebra R A\ng : StarAlgHom R B C\nf : StarAlgHom R A B\n⊢ Eq (StarSubalgebra.map g (StarSubalgebra.map f S)) (StarSubalgebra.map (g.comp f) S)","decl":"theorem map_map (S : StarSubalgebra R A) (g : B →⋆ₐ[R] C) (f : A →⋆ₐ[R] B) :\n    (S.map f).map g = S.map (g.comp f) :=\n  SetLike.coe_injective <| Set.image_image _ _ _\n\n"}
{"name":"StarSubalgebra.mem_map","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : Semiring A\ninst✝⁶ : StarRing A\ninst✝⁵ : Algebra R A\ninst✝⁴ : StarModule R A\ninst✝³ : Semiring B\ninst✝² : StarRing B\ninst✝¹ : Algebra R B\ninst✝ : StarModule R B\nS : StarSubalgebra R A\nf : StarAlgHom R A B\ny : B\n⊢ Iff (Membership.mem (StarSubalgebra.map f S) y) (Exists fun x => And (Membership.mem S x) (Eq (f x) y))","decl":"@[simp]\ntheorem mem_map {S : StarSubalgebra R A} {f : A →⋆ₐ[R] B} {y : B} :\n    y ∈ map f S ↔ ∃ x ∈ S, f x = y :=\n  Subsemiring.mem_map\n\n"}
{"name":"StarSubalgebra.map_toSubalgebra","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : Semiring A\ninst✝⁶ : StarRing A\ninst✝⁵ : Algebra R A\ninst✝⁴ : StarModule R A\ninst✝³ : Semiring B\ninst✝² : StarRing B\ninst✝¹ : Algebra R B\ninst✝ : StarModule R B\nS : StarSubalgebra R A\nf : StarAlgHom R A B\n⊢ Eq (StarSubalgebra.map f S).toSubalgebra (Subalgebra.map f.toAlgHom S.toSubalgebra)","decl":"theorem map_toSubalgebra {S : StarSubalgebra R A} {f : A →⋆ₐ[R] B} :\n    (S.map f).toSubalgebra = S.toSubalgebra.map f.toAlgHom :=\n  SetLike.coe_injective rfl\n\n"}
{"name":"StarSubalgebra.coe_map","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : Semiring A\ninst✝⁶ : StarRing A\ninst✝⁵ : Algebra R A\ninst✝⁴ : StarModule R A\ninst✝³ : Semiring B\ninst✝² : StarRing B\ninst✝¹ : Algebra R B\ninst✝ : StarModule R B\nS : StarSubalgebra R A\nf : StarAlgHom R A B\n⊢ Eq (↑(StarSubalgebra.map f S)) (Set.image ⇑f ↑S)","decl":"@[simp]\ntheorem coe_map (S : StarSubalgebra R A) (f : A →⋆ₐ[R] B) : (S.map f : Set B) = f '' S :=\n  rfl\n\n"}
{"name":"StarSubalgebra.map_le_iff_le_comap","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : Semiring A\ninst✝⁶ : StarRing A\ninst✝⁵ : Algebra R A\ninst✝⁴ : StarModule R A\ninst✝³ : Semiring B\ninst✝² : StarRing B\ninst✝¹ : Algebra R B\ninst✝ : StarModule R B\nS : StarSubalgebra R A\nf : StarAlgHom R A B\nU : StarSubalgebra R B\n⊢ Iff (LE.le (StarSubalgebra.map f S) U) (LE.le S (StarSubalgebra.comap f U))","decl":"theorem map_le_iff_le_comap {S : StarSubalgebra R A} {f : A →⋆ₐ[R] B} {U : StarSubalgebra R B} :\n    map f S ≤ U ↔ S ≤ comap f U :=\n  Set.image_subset_iff\n\n"}
{"name":"StarSubalgebra.gc_map_comap","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : Semiring A\ninst✝⁶ : StarRing A\ninst✝⁵ : Algebra R A\ninst✝⁴ : StarModule R A\ninst✝³ : Semiring B\ninst✝² : StarRing B\ninst✝¹ : Algebra R B\ninst✝ : StarModule R B\nf : StarAlgHom R A B\n⊢ GaloisConnection (StarSubalgebra.map f) (StarSubalgebra.comap f)","decl":"theorem gc_map_comap (f : A →⋆ₐ[R] B) : GaloisConnection (map f) (comap f) := fun _S _U =>\n  map_le_iff_le_comap\n\n"}
{"name":"StarSubalgebra.comap_mono","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : Semiring A\ninst✝⁶ : StarRing A\ninst✝⁵ : Algebra R A\ninst✝⁴ : StarModule R A\ninst✝³ : Semiring B\ninst✝² : StarRing B\ninst✝¹ : Algebra R B\ninst✝ : StarModule R B\nS₁ S₂ : StarSubalgebra R B\nf : StarAlgHom R A B\na✝ : LE.le S₁ S₂\n⊢ LE.le (StarSubalgebra.comap f S₁) (StarSubalgebra.comap f S₂)","decl":"theorem comap_mono {S₁ S₂ : StarSubalgebra R B} {f : A →⋆ₐ[R] B} :\n    S₁ ≤ S₂ → S₁.comap f ≤ S₂.comap f :=\n  Set.preimage_mono\n\n"}
{"name":"StarSubalgebra.comap_injective","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : Semiring A\ninst✝⁶ : StarRing A\ninst✝⁵ : Algebra R A\ninst✝⁴ : StarModule R A\ninst✝³ : Semiring B\ninst✝² : StarRing B\ninst✝¹ : Algebra R B\ninst✝ : StarModule R B\nf : StarAlgHom R A B\nhf : Function.Surjective ⇑f\n⊢ Function.Injective (StarSubalgebra.comap f)","decl":"theorem comap_injective {f : A →⋆ₐ[R] B} (hf : Function.Surjective f) :\n    Function.Injective (comap f) := fun _S₁ _S₂ h =>\n  ext fun b =>\n    let ⟨x, hx⟩ := hf b\n    let this := SetLike.ext_iff.1 h x\n    hx ▸ this\n\n"}
{"name":"StarSubalgebra.comap_id","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nS : StarSubalgebra R A\n⊢ Eq (StarSubalgebra.comap (StarAlgHom.id R A) S) S","decl":"@[simp]\ntheorem comap_id (S : StarSubalgebra R A) : S.comap (StarAlgHom.id R A) = S :=\n  SetLike.coe_injective <| Set.preimage_id\n\n"}
{"name":"StarSubalgebra.comap_comap","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\nB : Type u_4\nC : Type u_5\ninst✝¹³ : CommSemiring R\ninst✝¹² : StarRing R\ninst✝¹¹ : Semiring A\ninst✝¹⁰ : StarRing A\ninst✝⁹ : Algebra R A\ninst✝⁸ : StarModule R A\ninst✝⁷ : Semiring B\ninst✝⁶ : StarRing B\ninst✝⁵ : Algebra R B\ninst✝⁴ : StarModule R B\ninst✝³ : Semiring C\ninst✝² : StarRing C\ninst✝¹ : Algebra R C\ninst✝ : StarModule R C\nS : StarSubalgebra R C\ng : StarAlgHom R B C\nf : StarAlgHom R A B\n⊢ Eq (StarSubalgebra.comap f (StarSubalgebra.comap g S)) (StarSubalgebra.comap (g.comp f) S)","decl":"theorem comap_comap (S : StarSubalgebra R C) (g : B →⋆ₐ[R] C) (f : A →⋆ₐ[R] B) :\n    (S.comap g).comap f = S.comap (g.comp f) :=\n  SetLike.coe_injective <| by exact Set.preimage_preimage\n  -- Porting note: the `by exact` trick still works sometimes\n\n"}
{"name":"StarSubalgebra.mem_comap","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : Semiring A\ninst✝⁶ : StarRing A\ninst✝⁵ : Algebra R A\ninst✝⁴ : StarModule R A\ninst✝³ : Semiring B\ninst✝² : StarRing B\ninst✝¹ : Algebra R B\ninst✝ : StarModule R B\nS : StarSubalgebra R B\nf : StarAlgHom R A B\nx : A\n⊢ Iff (Membership.mem (StarSubalgebra.comap f S) x) (Membership.mem S (f x))","decl":"@[simp]\ntheorem mem_comap (S : StarSubalgebra R B) (f : A →⋆ₐ[R] B) (x : A) : x ∈ S.comap f ↔ f x ∈ S :=\n  Iff.rfl\n\n"}
{"name":"StarSubalgebra.coe_comap","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : Semiring A\ninst✝⁶ : StarRing A\ninst✝⁵ : Algebra R A\ninst✝⁴ : StarModule R A\ninst✝³ : Semiring B\ninst✝² : StarRing B\ninst✝¹ : Algebra R B\ninst✝ : StarModule R B\nS : StarSubalgebra R B\nf : StarAlgHom R A B\n⊢ Eq (↑(StarSubalgebra.comap f S)) (Set.preimage ⇑f ↑S)","decl":"@[simp, norm_cast]\ntheorem coe_comap (S : StarSubalgebra R B) (f : A →⋆ₐ[R] B) :\n    (S.comap f : Set A) = f ⁻¹' (S : Set B) :=\n  rfl\n\n"}
{"name":"StarSubalgebra.coe_centralizer","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\ns : Set A\n⊢ Eq (↑(StarSubalgebra.centralizer R s)) (Union.union s (Star.star s)).centralizer","decl":"@[simp, norm_cast]\ntheorem coe_centralizer (s : Set A) : (centralizer R s : Set A) = (s ∪ star s).centralizer :=\n  rfl\n\n"}
{"name":"StarSubalgebra.mem_centralizer_iff","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\ns : Set A\nz : A\n⊢ Iff (Membership.mem (StarSubalgebra.centralizer R s) z) (∀ (g : A), Membership.mem s g → And (Eq (HMul.hMul g z) (HMul.hMul z g)) (Eq (HMul.hMul (Star.star g) z) (HMul.hMul z (Star.star g))))","decl":"open Set in\nnonrec theorem mem_centralizer_iff {s : Set A} {z : A} :\n    z ∈ centralizer R s ↔ ∀ g ∈ s, g * z = z * g ∧ star g * z = z * star g := by\n  simp [← SetLike.mem_coe, centralizer_union, ← image_star, mem_centralizer_iff, forall_and]\n\n"}
{"name":"StarSubalgebra.centralizer_le","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\ns t : Set A\nh : HasSubset.Subset s t\n⊢ LE.le (StarSubalgebra.centralizer R t) (StarSubalgebra.centralizer R s)","decl":"theorem centralizer_le (s t : Set A) (h : s ⊆ t) : centralizer R t ≤ centralizer R s :=\n  Set.centralizer_subset (Set.union_subset_union h <| Set.preimage_mono h)\n\n"}
{"name":"StarSubalgebra.centralizer_toSubalgebra","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\ns : Set A\n⊢ Eq (StarSubalgebra.centralizer R s).toSubalgebra (Subalgebra.centralizer R (Union.union s (Star.star s)))","decl":"theorem centralizer_toSubalgebra (s : Set A) :\n    (centralizer R s).toSubalgebra = Subalgebra.centralizer R (s ∪ star s):=\n  rfl\n\n"}
{"name":"StarSubalgebra.coe_centralizer_centralizer","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\ns : Set A\n⊢ Eq (↑(StarSubalgebra.centralizer R ↑(StarSubalgebra.centralizer R s))) (Union.union s (Star.star s)).centralizer.centralizer","decl":"theorem coe_centralizer_centralizer (s : Set A) :\n    (centralizer R (centralizer R s : Set A)) = (s ∪ star s).centralizer.centralizer := by\n  rw [coe_centralizer, StarMemClass.star_coe_eq, Set.union_self, coe_centralizer]\n\n"}
{"name":"Subalgebra.mem_star_iff","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nS : Subalgebra R A\nx : A\n⊢ Iff (Membership.mem (Star.star S) x) (Membership.mem S (Star.star x))","decl":"@[simp]\ntheorem mem_star_iff (S : Subalgebra R A) (x : A) : x ∈ star S ↔ star x ∈ S :=\n  Iff.rfl\n\n"}
{"name":"Subalgebra.star_mem_star_iff","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nS : Subalgebra R A\nx : A\n⊢ Iff (Membership.mem (Star.star S) (Star.star x)) (Membership.mem S x)","decl":"theorem star_mem_star_iff (S : Subalgebra R A) (x : A) : star x ∈ star S ↔ x ∈ S := by\n  simp\n\n"}
{"name":"Subalgebra.coe_star","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nS : Subalgebra R A\n⊢ Eq (↑(Star.star S)) (Star.star ↑S)","decl":"@[simp]\ntheorem coe_star (S : Subalgebra R A) : ((star S : Subalgebra R A) : Set A) = star (S : Set A) :=\n  rfl\n\n"}
{"name":"Subalgebra.star_mono","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\n⊢ Monotone Star.star","decl":"theorem star_mono : Monotone (star : Subalgebra R A → Subalgebra R A) := fun _ _ h _ hx => h hx\n\n"}
{"name":"Subalgebra.star_adjoin_comm","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\ns : Set A\n⊢ Eq (Star.star (Algebra.adjoin R s)) (Algebra.adjoin R (Star.star s))","decl":"/-- The star operation on `Subalgebra` commutes with `Algebra.adjoin`. -/\ntheorem star_adjoin_comm (s : Set A) : star (Algebra.adjoin R s) = Algebra.adjoin R (star s) :=\n  have this : ∀ t : Set A, Algebra.adjoin R (star t) ≤ star (Algebra.adjoin R t) := fun _ =>\n    Algebra.adjoin_le fun _ hx => Algebra.subset_adjoin hx\n  le_antisymm (by simpa only [star_star] using Subalgebra.star_mono (this (star s))) (this s)\n\n"}
{"name":"Subalgebra.starClosure_carrier","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nS : Subalgebra R A\n⊢ Eq (↑S.starClosure) (Set.iInter fun t => Set.iInter fun x => ↑t)","decl":"/-- The `StarSubalgebra` obtained from `S : Subalgebra R A` by taking the smallest subalgebra\ncontaining both `S` and `star S`. -/\n@[simps!]\ndef starClosure (S : Subalgebra R A) : StarSubalgebra R A where\n  toSubalgebra := S ⊔ star S\n  star_mem' := fun {a} ha => by\n    simp only [Subalgebra.mem_carrier, ← (@Algebra.gi R A _ _ _).l_sup_u _ _] at *\n    rw [← mem_star_iff _ a, star_adjoin_comm, sup_comm]\n    simpa using ha\n\n"}
{"name":"Subalgebra.starClosure_toSubalgebra","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nS : Subalgebra R A\n⊢ Eq S.starClosure.toSubalgebra (Max.max S (Star.star S))","decl":"theorem starClosure_toSubalgebra (S : Subalgebra R A) : S.starClosure.toSubalgebra = S ⊔ star S :=\n  rfl\n\n"}
{"name":"Subalgebra.starClosure_le","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nS₁ : Subalgebra R A\nS₂ : StarSubalgebra R A\nh : LE.le S₁ S₂.toSubalgebra\n⊢ LE.le S₁.starClosure S₂","decl":"theorem starClosure_le {S₁ : Subalgebra R A} {S₂ : StarSubalgebra R A} (h : S₁ ≤ S₂.toSubalgebra) :\n    S₁.starClosure ≤ S₂ :=\n  StarSubalgebra.toSubalgebra_le_iff.1 <|\n    sup_le h fun x hx =>\n      (star_star x ▸ star_mem (show star x ∈ S₂ from h <| (S₁.mem_star_iff _).1 hx) : x ∈ S₂)\n\n"}
{"name":"Subalgebra.starClosure_le_iff","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nS₁ : Subalgebra R A\nS₂ : StarSubalgebra R A\n⊢ Iff (LE.le S₁.starClosure S₂) (LE.le S₁ S₂.toSubalgebra)","decl":"theorem starClosure_le_iff {S₁ : Subalgebra R A} {S₂ : StarSubalgebra R A} :\n    S₁.starClosure ≤ S₂ ↔ S₁ ≤ S₂.toSubalgebra :=\n  ⟨fun h => le_sup_left.trans h, starClosure_le⟩\n\n"}
{"name":"StarAlgebra.adjoin_carrier","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\ns : Set A\n⊢ Eq (↑(StarAlgebra.adjoin R s)) (Set.iInter fun t => Set.iInter fun x => ↑t)","decl":"/-- The minimal star subalgebra that contains `s`. -/\n@[simps!]\ndef adjoin (s : Set A) : StarSubalgebra R A :=\n  { Algebra.adjoin R (s ∪ star s) with\n    star_mem' := fun hx => by\n      rwa [Subalgebra.mem_carrier, ← Subalgebra.mem_star_iff, Subalgebra.star_adjoin_comm,\n        Set.union_star, star_star, Set.union_comm] }\n\n"}
{"name":"StarAlgebra.adjoin_eq_starClosure_adjoin","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\ns : Set A\n⊢ Eq (StarAlgebra.adjoin R s) (Algebra.adjoin R s).starClosure","decl":"theorem adjoin_eq_starClosure_adjoin (s : Set A) : adjoin R s = (Algebra.adjoin R s).starClosure :=\n  toSubalgebra_injective <|\n    show Algebra.adjoin R (s ∪ star s) = Algebra.adjoin R s ⊔ star (Algebra.adjoin R s) from\n      (Subalgebra.star_adjoin_comm R s).symm ▸ Algebra.adjoin_union s (star s)\n\n"}
{"name":"StarAlgebra.adjoin_toSubalgebra","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\ns : Set A\n⊢ Eq (StarAlgebra.adjoin R s).toSubalgebra (Algebra.adjoin R (Union.union s (Star.star s)))","decl":"theorem adjoin_toSubalgebra (s : Set A) :\n    (adjoin R s).toSubalgebra = Algebra.adjoin R (s ∪ star s) :=\n  rfl\n\n"}
{"name":"StarAlgebra.subset_adjoin","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\ns : Set A\n⊢ HasSubset.Subset s ↑(StarAlgebra.adjoin R s)","decl":"@[aesop safe 20 apply (rule_sets := [SetLike])]\ntheorem subset_adjoin (s : Set A) : s ⊆ adjoin R s :=\n  Set.subset_union_left.trans Algebra.subset_adjoin\n\n"}
{"name":"StarAlgebra.star_subset_adjoin","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\ns : Set A\n⊢ HasSubset.Subset (Star.star s) ↑(StarAlgebra.adjoin R s)","decl":"theorem star_subset_adjoin (s : Set A) : star s ⊆ adjoin R s :=\n  Set.subset_union_right.trans Algebra.subset_adjoin\n\n"}
{"name":"StarAlgebra.self_mem_adjoin_singleton","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nx : A\n⊢ Membership.mem (StarAlgebra.adjoin R (Singleton.singleton x)) x","decl":"theorem self_mem_adjoin_singleton (x : A) : x ∈ adjoin R ({x} : Set A) :=\n  Algebra.subset_adjoin <| Set.mem_union_left _ (Set.mem_singleton x)\n\n"}
{"name":"StarAlgebra.star_self_mem_adjoin_singleton","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nx : A\n⊢ Membership.mem (StarAlgebra.adjoin R (Singleton.singleton x)) (Star.star x)","decl":"theorem star_self_mem_adjoin_singleton (x : A) : star x ∈ adjoin R ({x} : Set A) :=\n  star_mem <| self_mem_adjoin_singleton R x\n\n"}
{"name":"StarAlgebra.gc","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\n⊢ GaloisConnection (StarAlgebra.adjoin R) SetLike.coe","decl":"protected theorem gc : GaloisConnection (adjoin R : Set A → StarSubalgebra R A) (↑) := by\n  intro s S\n  rw [← toSubalgebra_le_iff, adjoin_toSubalgebra, Algebra.adjoin_le_iff, coe_toSubalgebra]\n  exact\n    ⟨fun h => Set.subset_union_left.trans h, fun h =>\n      Set.union_subset h fun x hx => star_star x ▸ star_mem (show star x ∈ S from h hx)⟩\n\n"}
{"name":"StarAlgebra.adjoin_le","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nS : StarSubalgebra R A\ns : Set A\nhs : HasSubset.Subset s ↑S\n⊢ LE.le (StarAlgebra.adjoin R s) S","decl":"theorem adjoin_le {S : StarSubalgebra R A} {s : Set A} (hs : s ⊆ S) : adjoin R s ≤ S :=\n  StarAlgebra.gc.l_le hs\n\n"}
{"name":"StarAlgebra.adjoin_le_iff","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nS : StarSubalgebra R A\ns : Set A\n⊢ Iff (LE.le (StarAlgebra.adjoin R s) S) (HasSubset.Subset s ↑S)","decl":"theorem adjoin_le_iff {S : StarSubalgebra R A} {s : Set A} : adjoin R s ≤ S ↔ s ⊆ S :=\n  StarAlgebra.gc _ _\n\n"}
{"name":"StarAlgebra.adjoin_eq","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nS : StarSubalgebra R A\n⊢ Eq (StarAlgebra.adjoin R ↑S) S","decl":"lemma adjoin_eq (S : StarSubalgebra R A) : adjoin R (S : Set A) = S :=\n  le_antisymm (adjoin_le le_rfl) (subset_adjoin R (S : Set A))\n\n"}
{"name":"StarAlgebra.adjoin_eq_span","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\ns : Set A\n⊢ Eq (Subalgebra.toSubmodule (StarAlgebra.adjoin R s).toSubalgebra) (Submodule.span R ↑(Submonoid.closure (Union.union s (Star.star s))))","decl":"open Submodule in\nlemma adjoin_eq_span (s : Set A) :\n    Subalgebra.toSubmodule (adjoin R s).toSubalgebra = span R (Submonoid.closure (s ∪ star s)) := by\n  rw [adjoin_toSubalgebra, Algebra.adjoin_eq_span]\n\n"}
{"name":"StarAlgebra.adjoin_nonUnitalStarSubalgebra_eq_span","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\ns : NonUnitalStarSubalgebra R A\n⊢ Eq (Subalgebra.toSubmodule (StarAlgebra.adjoin R ↑s).toSubalgebra) (Max.max (Submodule.span R (Singleton.singleton 1)) s.toSubmodule)","decl":"open Submodule in\nlemma adjoin_nonUnitalStarSubalgebra_eq_span (s : NonUnitalStarSubalgebra R A) :\n    (adjoin R (s : Set A)).toSubalgebra.toSubmodule = span R {1} ⊔ s.toSubmodule := by\n  rw [adjoin_eq_span, Submonoid.closure_eq_one_union, span_union,\n    ← NonUnitalStarAlgebra.adjoin_eq_span, NonUnitalStarAlgebra.adjoin_eq]\n\n"}
{"name":"Subalgebra.starClosure_eq_adjoin","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nS : Subalgebra R A\n⊢ Eq S.starClosure (StarAlgebra.adjoin R ↑S)","decl":"theorem _root_.Subalgebra.starClosure_eq_adjoin (S : Subalgebra R A) :\n    S.starClosure = adjoin R (S : Set A) :=\n  le_antisymm (Subalgebra.starClosure_le_iff.2 <| subset_adjoin R (S : Set A))\n    (adjoin_le (le_sup_left : S ≤ S ⊔ star S))\n\n"}
{"name":"StarAlgebra.adjoin_induction","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\ns : Set A\np : (x : A) → Membership.mem (StarAlgebra.adjoin R s) x → Prop\nmem : ∀ (x : A) (h : Membership.mem s x), p x ⋯\nalgebraMap : ∀ (r : R), p ((_root_.algebraMap R A) r) ⋯\nadd : ∀ (x y : A) (hx : Membership.mem (StarAlgebra.adjoin R s) x) (hy : Membership.mem (StarAlgebra.adjoin R s) y), p x hx → p y hy → p (HAdd.hAdd x y) ⋯\nmul : ∀ (x y : A) (hx : Membership.mem (StarAlgebra.adjoin R s) x) (hy : Membership.mem (StarAlgebra.adjoin R s) y), p x hx → p y hy → p (HMul.hMul x y) ⋯\nstar : ∀ (x : A) (hx : Membership.mem (StarAlgebra.adjoin R s) x), p x hx → p (Star.star x) ⋯\na : A\nha : Membership.mem (StarAlgebra.adjoin R s) a\n⊢ p a ha","decl":"/-- If some predicate holds for all `x ∈ (s : Set A)` and this predicate is closed under the\n`algebraMap`, addition, multiplication and star operations, then it holds for `a ∈ adjoin R s`. -/\n@[elab_as_elim]\ntheorem adjoin_induction {s : Set A} {p : (x : A) → x ∈ adjoin R s → Prop}\n    (mem : ∀ (x) (h : x ∈ s), p x (subset_adjoin R s h))\n    (algebraMap : ∀ r, p (_root_.algebraMap R _ r) (_root_.algebraMap_mem _ r))\n    (add : ∀ x y hx hy, p x hx → p y hy → p (x + y) (add_mem hx hy))\n    (mul : ∀ x y hx hy, p x hx → p y hy → p (x * y) (mul_mem hx hy))\n    (star : ∀ x hx, p x hx → p (star x) (star_mem hx))\n    {a : A} (ha : a ∈ adjoin R s) : p a ha := by\n  refine Algebra.adjoin_induction (fun x hx ↦ ?_) algebraMap add mul ha\n  simp only [Set.mem_union, Set.mem_star] at hx\n  obtain (hx | hx) := hx\n  · exact mem x hx\n  · simpa using star _ (Algebra.subset_adjoin (by simpa using Or.inl hx)) (mem _ hx)\n\n"}
{"name":"StarAlgebra.adjoin_induction₂","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\ns : Set A\np : (x y : A) → Membership.mem (StarAlgebra.adjoin R s) x → Membership.mem (StarAlgebra.adjoin R s) y → Prop\nmem_mem : ∀ (x y : A) (hx : Membership.mem s x) (hy : Membership.mem s y), p x y ⋯ ⋯\nalgebraMap_both : ∀ (r₁ r₂ : R), p ((algebraMap R A) r₁) ((algebraMap R A) r₂) ⋯ ⋯\nalgebraMap_left : ∀ (r : R) (x : A) (hx : Membership.mem s x), p ((algebraMap R A) r) x ⋯ ⋯\nalgebraMap_right : ∀ (r : R) (x : A) (hx : Membership.mem s x), p x ((algebraMap R A) r) ⋯ ⋯\nadd_left : ∀ (x y z : A) (hx : Membership.mem (StarAlgebra.adjoin R s) x) (hy : Membership.mem (StarAlgebra.adjoin R s) y) (hz : Membership.mem (StarAlgebra.adjoin R s) z), p x z hx hz → p y z hy hz → p (HAdd.hAdd x y) z ⋯ hz\nadd_right : ∀ (x y z : A) (hx : Membership.mem (StarAlgebra.adjoin R s) x) (hy : Membership.mem (StarAlgebra.adjoin R s) y) (hz : Membership.mem (StarAlgebra.adjoin R s) z), p x y hx hy → p x z hx hz → p x (HAdd.hAdd y z) hx ⋯\nmul_left : ∀ (x y z : A) (hx : Membership.mem (StarAlgebra.adjoin R s) x) (hy : Membership.mem (StarAlgebra.adjoin R s) y) (hz : Membership.mem (StarAlgebra.adjoin R s) z), p x z hx hz → p y z hy hz → p (HMul.hMul x y) z ⋯ hz\nmul_right : ∀ (x y z : A) (hx : Membership.mem (StarAlgebra.adjoin R s) x) (hy : Membership.mem (StarAlgebra.adjoin R s) y) (hz : Membership.mem (StarAlgebra.adjoin R s) z), p x y hx hy → p x z hx hz → p x (HMul.hMul y z) hx ⋯\nstar_left : ∀ (x y : A) (hx : Membership.mem (StarAlgebra.adjoin R s) x) (hy : Membership.mem (StarAlgebra.adjoin R s) y), p x y hx hy → p (Star.star x) y ⋯ hy\nstar_right : ∀ (x y : A) (hx : Membership.mem (StarAlgebra.adjoin R s) x) (hy : Membership.mem (StarAlgebra.adjoin R s) y), p x y hx hy → p x (Star.star y) hx ⋯\na b : A\nha : Membership.mem (StarAlgebra.adjoin R s) a\nhb : Membership.mem (StarAlgebra.adjoin R s) b\n⊢ p a b ha hb","decl":"@[elab_as_elim]\ntheorem adjoin_induction₂ {s : Set A} {p : (x y : A) → x ∈ adjoin R s → y ∈ adjoin R s → Prop}\n    (mem_mem : ∀ (x) (y) (hx : x ∈ s) (hy : y ∈ s), p x y (subset_adjoin R s hx)\n      (subset_adjoin R s hy))\n    (algebraMap_both : ∀ r₁ r₂, p (algebraMap R A r₁) (algebraMap R A r₂)\n      (_root_.algebraMap_mem _ r₁) (_root_.algebraMap_mem _ r₂))\n    (algebraMap_left : ∀ (r) (x) (hx : x ∈ s), p (algebraMap R A r) x (_root_.algebraMap_mem _ r)\n      (subset_adjoin R s hx))\n    (algebraMap_right : ∀ (r) (x) (hx : x ∈ s), p x (algebraMap R A r) (subset_adjoin R s hx)\n      (_root_.algebraMap_mem _ r))\n    (add_left : ∀ x y z hx hy hz, p x z hx hz → p y z hy hz → p (x + y) z (add_mem hx hy) hz)\n    (add_right : ∀ x y z hx hy hz, p x y hx hy → p x z hx hz → p x (y + z) hx (add_mem hy hz))\n    (mul_left : ∀ x y z hx hy hz, p x z hx hz → p y z hy hz → p (x * y) z (mul_mem hx hy) hz)\n    (mul_right : ∀ x y z hx hy hz, p x y hx hy → p x z hx hz → p x (y * z) hx (mul_mem hy hz))\n    (star_left : ∀ x y hx hy, p x y hx hy → p (star x) y (star_mem hx) hy)\n    (star_right : ∀ x y hx hy, p x y hx hy → p x (star y) hx (star_mem hy))\n    {a b : A} (ha : a ∈ adjoin R s) (hb : b ∈ adjoin R s) :\n    p a b ha hb := by\n  induction hb using adjoin_induction with\n  | mem z hz => induction ha using adjoin_induction with\n    | mem _ h => exact mem_mem _ _ h hz\n    | algebraMap _ => exact algebraMap_left _ _ hz\n    | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ _ h₁ h₂\n    | add _ _ _ _ h₁ h₂ => exact add_left _ _ _ _ _ _ h₁ h₂\n    | star _ _ h => exact star_left _ _ _ _ h\n  | algebraMap r =>\n    induction ha using adjoin_induction with\n    | mem _ h => exact algebraMap_right _ _ h\n    | algebraMap _ => exact algebraMap_both _ _\n    | mul _ _ _ _ h₁ h₂ => exact mul_left _ _ _ _ _ _ h₁ h₂\n    | add _ _ _ _ h₁ h₂ => exact add_left _ _ _ _ _ _ h₁ h₂\n    | star _ _ h => exact star_left _ _ _ _ h\n  | mul _ _ _ _ h₁ h₂ => exact mul_right _ _ _ _ _ _ h₁ h₂\n  | add _ _ _ _ h₁ h₂ => exact add_right _ _ _ _ _ _ h₁ h₂\n  | star _ _ h => exact star_right _ _ _ _ h\n\n"}
{"name":"StarAlgebra.adjoin_induction_subtype","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\ns : Set A\np : (Subtype fun x => Membership.mem (StarAlgebra.adjoin R s) x) → Prop\na : Subtype fun x => Membership.mem (StarAlgebra.adjoin R s) x\nmem : ∀ (x : A) (h : Membership.mem s x), p ⟨x, ⋯⟩\nalgebraMap : ∀ (r : R), p ((_root_.algebraMap R (Subtype fun x => Membership.mem (StarAlgebra.adjoin R s) x)) r)\nadd : ∀ (x y : Subtype fun x => Membership.mem (StarAlgebra.adjoin R s) x), p x → p y → p (HAdd.hAdd x y)\nmul : ∀ (x y : Subtype fun x => Membership.mem (StarAlgebra.adjoin R s) x), p x → p y → p (HMul.hMul x y)\nstar : ∀ (x : Subtype fun x => Membership.mem (StarAlgebra.adjoin R s) x), p x → p (Star.star x)\n⊢ p a","decl":"/-- The difference with `StarSubalgebra.adjoin_induction` is that this acts on the subtype. -/\n@[elab_as_elim]\ntheorem adjoin_induction_subtype {s : Set A} {p : adjoin R s → Prop} (a : adjoin R s)\n    (mem : ∀ (x) (h : x ∈ s), p ⟨x, subset_adjoin R s h⟩) (algebraMap : ∀ r, p (algebraMap R _ r))\n    (add : ∀ x y, p x → p y → p (x + y)) (mul : ∀ x y, p x → p y → p (x * y))\n    (star : ∀ x, p x → p (star x)) : p a :=\n  Subtype.recOn a fun b hb => by\n    induction hb using adjoin_induction with\n    | mem _ h => exact mem _ h\n    | algebraMap _ => exact algebraMap _\n    | mul _ _ _ _ h₁ h₂ => exact mul _ _ h₁ h₂\n    | add _ _ _ _ h₁ h₂ => exact add _ _ h₁ h₂\n    | star _ _ h => exact star _ h\n\n"}
{"name":"StarAlgebra.adjoin_le_centralizer_centralizer","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\ns : Set A\n⊢ LE.le (StarAlgebra.adjoin R s) (StarSubalgebra.centralizer R ↑(StarSubalgebra.centralizer R s))","decl":"lemma adjoin_le_centralizer_centralizer (s : Set A) :\n    adjoin R s ≤ centralizer R (centralizer R s) := by\n  rw [← toSubalgebra_le_iff, centralizer_toSubalgebra, adjoin_toSubalgebra]\n  convert Algebra.adjoin_le_centralizer_centralizer R (s ∪ star s)\n  rw [StarMemClass.star_coe_eq]\n  simp\n\n"}
{"name":"StarSubalgebra.coe_top","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\n⊢ Eq (↑Top.top) Set.univ","decl":"@[simp]\ntheorem coe_top : (↑(⊤ : StarSubalgebra R A) : Set A) = Set.univ :=\n  rfl\n\n"}
{"name":"StarSubalgebra.mem_top","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nx : A\n⊢ Membership.mem Top.top x","decl":"@[simp]\ntheorem mem_top {x : A} : x ∈ (⊤ : StarSubalgebra R A) :=\n  Set.mem_univ x\n\n"}
{"name":"StarSubalgebra.top_toSubalgebra","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\n⊢ Eq Top.top.toSubalgebra Top.top","decl":"@[simp]\ntheorem top_toSubalgebra : (⊤ : StarSubalgebra R A).toSubalgebra = ⊤ := by ext; simp\n-- Porting note: Lean can no longer prove this by `rfl`, it times out\n\n"}
{"name":"StarSubalgebra.toSubalgebra_eq_top","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nS : StarSubalgebra R A\n⊢ Iff (Eq S.toSubalgebra Top.top) (Eq S Top.top)","decl":"@[simp]\ntheorem toSubalgebra_eq_top {S : StarSubalgebra R A} : S.toSubalgebra = ⊤ ↔ S = ⊤ :=\n  StarSubalgebra.toSubalgebra_injective.eq_iff' top_toSubalgebra\n\n"}
{"name":"StarSubalgebra.mem_sup_left","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nS T : StarSubalgebra R A\nx : A\na✝ : Membership.mem S x\n⊢ Membership.mem (Max.max S T) x","decl":"theorem mem_sup_left {S T : StarSubalgebra R A} : ∀ {x : A}, x ∈ S → x ∈ S ⊔ T :=\n  have : S ≤ S ⊔ T := le_sup_left; (this ·) -- Porting note: need `have` instead of `show`\n\n"}
{"name":"StarSubalgebra.mem_sup_right","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nS T : StarSubalgebra R A\nx : A\na✝ : Membership.mem T x\n⊢ Membership.mem (Max.max S T) x","decl":"theorem mem_sup_right {S T : StarSubalgebra R A} : ∀ {x : A}, x ∈ T → x ∈ S ⊔ T :=\n  have : T ≤ S ⊔ T := le_sup_right; (this ·) -- Porting note: need `have` instead of `show`\n\n"}
{"name":"StarSubalgebra.mul_mem_sup","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nS T : StarSubalgebra R A\nx y : A\nhx : Membership.mem S x\nhy : Membership.mem T y\n⊢ Membership.mem (Max.max S T) (HMul.hMul x y)","decl":"theorem mul_mem_sup {S T : StarSubalgebra R A} {x y : A} (hx : x ∈ S) (hy : y ∈ T) :\n    x * y ∈ S ⊔ T :=\n  mul_mem (mem_sup_left hx) (mem_sup_right hy)\n\n"}
{"name":"StarSubalgebra.map_sup","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : Semiring A\ninst✝⁶ : Algebra R A\ninst✝⁵ : StarRing A\ninst✝⁴ : StarModule R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : StarRing B\ninst✝ : StarModule R B\nf : StarAlgHom R A B\nS T : StarSubalgebra R A\n⊢ Eq (StarSubalgebra.map f (Max.max S T)) (Max.max (StarSubalgebra.map f S) (StarSubalgebra.map f T))","decl":"theorem map_sup (f : A →⋆ₐ[R] B) (S T : StarSubalgebra R A) : map f (S ⊔ T) = map f S ⊔ map f T :=\n  (StarSubalgebra.gc_map_comap f).l_sup\n\n"}
{"name":"StarSubalgebra.map_inf","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : Semiring A\ninst✝⁶ : Algebra R A\ninst✝⁵ : StarRing A\ninst✝⁴ : StarModule R A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : StarRing B\ninst✝ : StarModule R B\nf : StarAlgHom R A B\nhf : Function.Injective ⇑f\nS T : StarSubalgebra R A\n⊢ Eq (StarSubalgebra.map f (Min.min S T)) (Min.min (StarSubalgebra.map f S) (StarSubalgebra.map f T))","decl":"theorem map_inf (f : A →⋆ₐ[R] B) (hf : Function.Injective f) (S T : StarSubalgebra R A) :\n    map f (S ⊓ T) = map f S ⊓ map f T := SetLike.coe_injective (Set.image_inter hf)\n\n"}
{"name":"StarSubalgebra.coe_inf","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nS T : StarSubalgebra R A\n⊢ Eq (↑(Min.min S T)) (Inter.inter ↑S ↑T)","decl":"@[simp, norm_cast]\ntheorem coe_inf (S T : StarSubalgebra R A) : (↑(S ⊓ T) : Set A) = (S : Set A) ∩ T :=\n  rfl\n\n"}
{"name":"StarSubalgebra.mem_inf","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nS T : StarSubalgebra R A\nx : A\n⊢ Iff (Membership.mem (Min.min S T) x) (And (Membership.mem S x) (Membership.mem T x))","decl":"@[simp]\ntheorem mem_inf {S T : StarSubalgebra R A} {x : A} : x ∈ S ⊓ T ↔ x ∈ S ∧ x ∈ T :=\n  Iff.rfl\n\n"}
{"name":"StarSubalgebra.inf_toSubalgebra","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nS T : StarSubalgebra R A\n⊢ Eq (Min.min S T).toSubalgebra (Min.min S.toSubalgebra T.toSubalgebra)","decl":"@[simp]\ntheorem inf_toSubalgebra (S T : StarSubalgebra R A) :\n    (S ⊓ T).toSubalgebra = S.toSubalgebra ⊓ T.toSubalgebra := by\n  ext; simp\n-- Porting note: Lean can no longer prove this by `rfl`, it times out\n\n"}
{"name":"StarSubalgebra.coe_sInf","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nS : Set (StarSubalgebra R A)\n⊢ Eq (↑(InfSet.sInf S)) (Set.iInter fun s => Set.iInter fun h => ↑s)","decl":"@[simp, norm_cast]\ntheorem coe_sInf (S : Set (StarSubalgebra R A)) : (↑(sInf S) : Set A) = ⋂ s ∈ S, ↑s :=\n  sInf_image\n\n"}
{"name":"StarSubalgebra.mem_sInf","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nS : Set (StarSubalgebra R A)\nx : A\n⊢ Iff (Membership.mem (InfSet.sInf S) x) (∀ (p : StarSubalgebra R A), Membership.mem S p → Membership.mem p x)","decl":"theorem mem_sInf {S : Set (StarSubalgebra R A)} {x : A} : x ∈ sInf S ↔ ∀ p ∈ S, x ∈ p := by\n  simp only [← SetLike.mem_coe, coe_sInf, Set.mem_iInter₂]\n\n"}
{"name":"StarSubalgebra.sInf_toSubalgebra","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nS : Set (StarSubalgebra R A)\n⊢ Eq (InfSet.sInf S).toSubalgebra (InfSet.sInf (Set.image StarSubalgebra.toSubalgebra S))","decl":"@[simp]\ntheorem sInf_toSubalgebra (S : Set (StarSubalgebra R A)) :\n    (sInf S).toSubalgebra = sInf (StarSubalgebra.toSubalgebra '' S) :=\n  SetLike.coe_injective <| by simp\n\n"}
{"name":"StarSubalgebra.coe_iInf","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nι : Sort u_5\nS : ι → StarSubalgebra R A\n⊢ Eq (↑(iInf fun i => S i)) (Set.iInter fun i => ↑(S i))","decl":"@[simp, norm_cast]\ntheorem coe_iInf {ι : Sort*} {S : ι → StarSubalgebra R A} : (↑(⨅ i, S i) : Set A) = ⋂ i, S i := by\n  simp [iInf]\n\n"}
{"name":"StarSubalgebra.mem_iInf","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nι : Sort u_5\nS : ι → StarSubalgebra R A\nx : A\n⊢ Iff (Membership.mem (iInf fun i => S i) x) (∀ (i : ι), Membership.mem (S i) x)","decl":"theorem mem_iInf {ι : Sort*} {S : ι → StarSubalgebra R A} {x : A} :\n    (x ∈ ⨅ i, S i) ↔ ∀ i, x ∈ S i := by simp only [iInf, mem_sInf, Set.forall_mem_range]\n\n"}
{"name":"StarSubalgebra.map_iInf","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝¹⁰ : CommSemiring R\ninst✝⁹ : StarRing R\ninst✝⁸ : Semiring A\ninst✝⁷ : Algebra R A\ninst✝⁶ : StarRing A\ninst✝⁵ : StarModule R A\ninst✝⁴ : Semiring B\ninst✝³ : Algebra R B\ninst✝² : StarRing B\ninst✝¹ : StarModule R B\nι : Sort u_5\ninst✝ : Nonempty ι\nf : StarAlgHom R A B\nhf : Function.Injective ⇑f\ns : ι → StarSubalgebra R A\n⊢ Eq (StarSubalgebra.map f (iInf s)) (iInf fun i => StarSubalgebra.map f (s i))","decl":"theorem map_iInf {ι : Sort*} [Nonempty ι] (f : A →⋆ₐ[R] B) (hf : Function.Injective f)\n    (s : ι → StarSubalgebra R A) : map f (iInf s) = ⨅ (i : ι), map f (s i) := by\n  apply SetLike.coe_injective\n  simpa using (Set.injOn_of_injective hf).image_iInter_eq (s := SetLike.coe ∘ s)\n\n"}
{"name":"StarSubalgebra.iInf_toSubalgebra","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nι : Sort u_5\nS : ι → StarSubalgebra R A\n⊢ Eq (iInf fun i => S i).toSubalgebra (iInf fun i => (S i).toSubalgebra)","decl":"@[simp]\ntheorem iInf_toSubalgebra {ι : Sort*} (S : ι → StarSubalgebra R A) :\n    (⨅ i, S i).toSubalgebra = ⨅ i, (S i).toSubalgebra :=\n  SetLike.coe_injective <| by simp\n\n"}
{"name":"StarSubalgebra.bot_toSubalgebra","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\n⊢ Eq Bot.bot.toSubalgebra Bot.bot","decl":"theorem bot_toSubalgebra : (⊥ : StarSubalgebra R A).toSubalgebra = ⊥ := rfl\n\n"}
{"name":"StarSubalgebra.mem_bot","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nx : A\n⊢ Iff (Membership.mem Bot.bot x) (Membership.mem (Set.range ⇑(algebraMap R A)) x)","decl":"theorem mem_bot {x : A} : x ∈ (⊥ : StarSubalgebra R A) ↔ x ∈ Set.range (algebraMap R A) := Iff.rfl\n\n"}
{"name":"StarSubalgebra.coe_bot","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\n⊢ Eq (↑Bot.bot) (Set.range ⇑(algebraMap R A))","decl":"@[simp]\ntheorem coe_bot : ((⊥ : StarSubalgebra R A) : Set A) = Set.range (algebraMap R A) := rfl\n\n"}
{"name":"StarSubalgebra.eq_top_iff","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : Algebra R A\ninst✝¹ : StarRing A\ninst✝ : StarModule R A\nS : StarSubalgebra R A\n⊢ Iff (Eq S Top.top) (∀ (x : A), Membership.mem S x)","decl":"theorem eq_top_iff {S : StarSubalgebra R A} : S = ⊤ ↔ ∀ x : A, x ∈ S :=\n  ⟨fun h x => by rw [h]; exact mem_top,\n  fun h => by ext x; exact ⟨fun _ => mem_top, fun _ => h x⟩⟩\n\n"}
{"name":"StarAlgHom.ext_adjoin","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"F : Type u_1\nR : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : Semiring A\ninst✝⁸ : Algebra R A\ninst✝⁷ : StarRing A\ninst✝⁶ : Semiring B\ninst✝⁵ : Algebra R B\ninst✝⁴ : StarRing B\ninst✝³ : StarModule R A\ns : Set A\ninst✝² : FunLike F (Subtype fun x => Membership.mem (StarAlgebra.adjoin R s) x) B\ninst✝¹ : AlgHomClass F R (Subtype fun x => Membership.mem (StarAlgebra.adjoin R s) x) B\ninst✝ : StarHomClass F (Subtype fun x => Membership.mem (StarAlgebra.adjoin R s) x) B\nf g : F\nh : ∀ (x : Subtype fun x => Membership.mem (StarAlgebra.adjoin R s) x), Membership.mem s ↑x → Eq (f x) (g x)\n⊢ Eq f g","decl":"theorem ext_adjoin {s : Set A} [FunLike F (adjoin R s) B]\n    [AlgHomClass F R (adjoin R s) B] [StarHomClass F (adjoin R s) B] {f g : F}\n    (h : ∀ x : adjoin R s, (x : A) ∈ s → f x = g x) : f = g := by\n  refine DFunLike.ext f g fun a =>\n    adjoin_induction_subtype (p := fun y => f y = g y) a (fun x hx => ?_) (fun r => ?_)\n    (fun x y hx hy => ?_) (fun x y hx hy => ?_) fun x hx => ?_\n  · exact h ⟨x, subset_adjoin R s hx⟩ hx\n  · simp only [AlgHomClass.commutes]\n  · simp only [map_add, map_add, hx, hy]\n  · simp only [map_mul, map_mul, hx, hy]\n  · simp only [map_star, hx]\n\n"}
{"name":"StarAlgHom.ext_adjoin_singleton","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"F : Type u_1\nR : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : Semiring A\ninst✝⁸ : Algebra R A\ninst✝⁷ : StarRing A\ninst✝⁶ : Semiring B\ninst✝⁵ : Algebra R B\ninst✝⁴ : StarRing B\ninst✝³ : StarModule R A\na : A\ninst✝² : FunLike F (Subtype fun x => Membership.mem (StarAlgebra.adjoin R (Singleton.singleton a)) x) B\ninst✝¹ : AlgHomClass F R (Subtype fun x => Membership.mem (StarAlgebra.adjoin R (Singleton.singleton a)) x) B\ninst✝ : StarHomClass F (Subtype fun x => Membership.mem (StarAlgebra.adjoin R (Singleton.singleton a)) x) B\nf g : F\nh : Eq (f ⟨a, ⋯⟩) (g ⟨a, ⋯⟩)\n⊢ Eq f g","decl":"theorem ext_adjoin_singleton {a : A} [FunLike F (adjoin R ({a} : Set A)) B]\n    [AlgHomClass F R (adjoin R ({a} : Set A)) B] [StarHomClass F (adjoin R ({a} : Set A)) B]\n    {f g : F} (h : f ⟨a, self_mem_adjoin_singleton R a⟩ = g ⟨a, self_mem_adjoin_singleton R a⟩) :\n    f = g :=\n  ext_adjoin fun x hx =>\n    (show x = ⟨a, self_mem_adjoin_singleton R a⟩ from\n          Subtype.ext <| Set.mem_singleton_iff.mp hx).symm ▸\n      h\n\n"}
{"name":"StarAlgHom.mem_equalizer","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"F : Type u_1\nR : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : Semiring A\ninst✝⁸ : Algebra R A\ninst✝⁷ : StarRing A\ninst✝⁶ : Semiring B\ninst✝⁵ : Algebra R B\ninst✝⁴ : StarRing B\ninst✝³ : StarModule R A\ninst✝² : FunLike F A B\ninst✝¹ : AlgHomClass F R A B\ninst✝ : StarHomClass F A B\nf g : F\nx : A\n⊢ Iff (Membership.mem (StarAlgHom.equalizer f g) x) (Eq (f x) (g x))","decl":"@[simp]\ntheorem mem_equalizer (x : A) : x ∈ StarAlgHom.equalizer f g ↔ f x = g x :=\n  Iff.rfl\n\n"}
{"name":"StarAlgHom.adjoin_le_equalizer","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"F : Type u_1\nR : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : Semiring A\ninst✝⁸ : Algebra R A\ninst✝⁷ : StarRing A\ninst✝⁶ : Semiring B\ninst✝⁵ : Algebra R B\ninst✝⁴ : StarRing B\ninst✝³ : StarModule R A\ninst✝² : FunLike F A B\ninst✝¹ : AlgHomClass F R A B\ninst✝ : StarHomClass F A B\nf g : F\ns : Set A\nh : Set.EqOn (⇑f) (⇑g) s\n⊢ LE.le (StarAlgebra.adjoin R s) (StarAlgHom.equalizer f g)","decl":"theorem adjoin_le_equalizer {s : Set A} (h : s.EqOn f g) : adjoin R s ≤ StarAlgHom.equalizer f g :=\n  adjoin_le h\n\n"}
{"name":"StarAlgHom.ext_of_adjoin_eq_top","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"F : Type u_1\nR : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝¹¹ : CommSemiring R\ninst✝¹⁰ : StarRing R\ninst✝⁹ : Semiring A\ninst✝⁸ : Algebra R A\ninst✝⁷ : StarRing A\ninst✝⁶ : Semiring B\ninst✝⁵ : Algebra R B\ninst✝⁴ : StarRing B\ninst✝³ : StarModule R A\ninst✝² : FunLike F A B\ninst✝¹ : AlgHomClass F R A B\ninst✝ : StarHomClass F A B\ns : Set A\nh : Eq (StarAlgebra.adjoin R s) Top.top\nf g : F\nhs : Set.EqOn (⇑f) (⇑g) s\n⊢ Eq f g","decl":"theorem ext_of_adjoin_eq_top {s : Set A} (h : adjoin R s = ⊤) ⦃f g : F⦄ (hs : s.EqOn f g) : f = g :=\n  DFunLike.ext f g fun _x => StarAlgHom.adjoin_le_equalizer f g hs <| h.symm ▸ trivial\n\n\n"}
{"name":"StarAlgHom.map_adjoin","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : Semiring A\ninst✝⁶ : Algebra R A\ninst✝⁵ : StarRing A\ninst✝⁴ : Semiring B\ninst✝³ : Algebra R B\ninst✝² : StarRing B\ninst✝¹ : StarModule R A\ninst✝ : StarModule R B\nf : StarAlgHom R A B\ns : Set A\n⊢ Eq (StarSubalgebra.map f (StarAlgebra.adjoin R s)) (StarAlgebra.adjoin R (Set.image (⇑f) s))","decl":"theorem map_adjoin (f : A →⋆ₐ[R] B) (s : Set A) :\n    map f (adjoin R s) = adjoin R (f '' s) :=\n  GaloisConnection.l_comm_of_u_comm Set.image_preimage (gc_map_comap f) StarAlgebra.gc\n    StarAlgebra.gc fun _ => rfl\n\n"}
{"name":"StarAlgHom.range_eq_map_top","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝⁹ : CommSemiring R\ninst✝⁸ : StarRing R\ninst✝⁷ : Semiring A\ninst✝⁶ : Algebra R A\ninst✝⁵ : StarRing A\ninst✝⁴ : Semiring B\ninst✝³ : Algebra R B\ninst✝² : StarRing B\ninst✝¹ : StarModule R A\ninst✝ : StarModule R B\nφ : StarAlgHom R A B\n⊢ Eq φ.range (StarSubalgebra.map φ Top.top)","decl":"theorem range_eq_map_top (φ : A →⋆ₐ[R] B) : φ.range = (⊤ : StarSubalgebra R A).map φ :=\n  StarSubalgebra.ext fun x =>\n    ⟨by rintro ⟨a, ha⟩; exact ⟨a, by simp, ha⟩, by rintro ⟨a, -, ha⟩; exact ⟨a, ha⟩⟩\n\n"}
{"name":"StarAlgHom.coe_codRestrict","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : Semiring A\ninst✝⁵ : Algebra R A\ninst✝⁴ : StarRing A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : StarRing B\ninst✝ : StarModule R B\nf : StarAlgHom R A B\nS : StarSubalgebra R B\nhf : ∀ (x : A), Membership.mem S (f x)\nx : A\n⊢ Eq (↑((f.codRestrict S hf) x)) (f x)","decl":"@[simp]\ntheorem coe_codRestrict (f : A →⋆ₐ[R] B) (S : StarSubalgebra R B) (hf : ∀ x, f x ∈ S) (x : A) :\n    ↑(f.codRestrict S hf x) = f x :=\n  rfl\n\n"}
{"name":"StarAlgHom.subtype_comp_codRestrict","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : Semiring A\ninst✝⁵ : Algebra R A\ninst✝⁴ : StarRing A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : StarRing B\ninst✝ : StarModule R B\nf : StarAlgHom R A B\nS : StarSubalgebra R B\nhf : ∀ (x : A), Membership.mem S (f x)\n⊢ Eq (S.subtype.comp (f.codRestrict S hf)) f","decl":"@[simp]\ntheorem subtype_comp_codRestrict (f : A →⋆ₐ[R] B) (S : StarSubalgebra R B)\n    (hf : ∀ x : A, f x ∈ S) : S.subtype.comp (f.codRestrict S hf) = f :=\n  StarAlgHom.ext <| coe_codRestrict _ S hf\n\n"}
{"name":"StarAlgHom.injective_codRestrict","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : Semiring A\ninst✝⁵ : Algebra R A\ninst✝⁴ : StarRing A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : StarRing B\ninst✝ : StarModule R B\nf : StarAlgHom R A B\nS : StarSubalgebra R B\nhf : ∀ (x : A), Membership.mem S (f x)\n⊢ Iff (Function.Injective ⇑(f.codRestrict S hf)) (Function.Injective ⇑f)","decl":"theorem injective_codRestrict (f : A →⋆ₐ[R] B) (S : StarSubalgebra R B) (hf : ∀ x : A, f x ∈ S) :\n    Function.Injective (StarAlgHom.codRestrict f S hf) ↔ Function.Injective f :=\n  ⟨fun H _x _y hxy => H <| Subtype.eq hxy, fun H _x _y hxy => H (congr_arg Subtype.val hxy :)⟩\n\n"}
{"name":"StarAlgEquiv.ofInjective_symm_apply","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : Semiring A\ninst✝⁵ : Algebra R A\ninst✝⁴ : StarRing A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : StarRing B\ninst✝ : StarModule R B\nf : StarAlgHom R A B\nhf : Function.Injective ⇑f\na✝ : Subtype fun x => Membership.mem (↑f).range x\n⊢ Eq ((StarAlgEquiv.ofInjective f hf).symm a✝) ((AlgEquiv.ofInjective (↑f) hf).invFun a✝)","decl":"/-- The `StarAlgEquiv` onto the range corresponding to an injective `StarAlgHom`. -/\n@[simps]\nnoncomputable def _root_.StarAlgEquiv.ofInjective (f : A →⋆ₐ[R] B)\n    (hf : Function.Injective f) : A ≃⋆ₐ[R] f.range :=\n  { AlgEquiv.ofInjective (f : A →ₐ[R] B) hf with\n    toFun := f.rangeRestrict\n    map_star' := fun a => Subtype.ext (map_star f a)\n    map_smul' := fun r a => Subtype.ext (map_smul f r a) }\n"}
{"name":"StarAlgEquiv.ofInjective_apply","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝⁸ : CommSemiring R\ninst✝⁷ : StarRing R\ninst✝⁶ : Semiring A\ninst✝⁵ : Algebra R A\ninst✝⁴ : StarRing A\ninst✝³ : Semiring B\ninst✝² : Algebra R B\ninst✝¹ : StarRing B\ninst✝ : StarModule R B\nf : StarAlgHom R A B\nhf : Function.Injective ⇑f\na : A\n⊢ Eq ((StarAlgEquiv.ofInjective f hf) a) (f.rangeRestrict a)","decl":"/-- The `StarAlgEquiv` onto the range corresponding to an injective `StarAlgHom`. -/\n@[simps]\nnoncomputable def _root_.StarAlgEquiv.ofInjective (f : A →⋆ₐ[R] B)\n    (hf : Function.Injective f) : A ≃⋆ₐ[R] f.range :=\n  { AlgEquiv.ofInjective (f : A →ₐ[R] B) hf with\n    toFun := f.rangeRestrict\n    map_star' := fun a => Subtype.ext (map_star f a)\n    map_smul' := fun r a => Subtype.ext (map_smul f r a) }\n"}
{"name":"StarAlgHom.restrictScalars_apply","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_1\nS : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝¹² : CommSemiring R\ninst✝¹¹ : CommSemiring S\ninst✝¹⁰ : Semiring A\ninst✝⁹ : Semiring B\ninst✝⁸ : Algebra R S\ninst✝⁷ : Algebra S A\ninst✝⁶ : Algebra S B\ninst✝⁵ : Algebra R A\ninst✝⁴ : Algebra R B\ninst✝³ : IsScalarTower R S A\ninst✝² : IsScalarTower R S B\ninst✝¹ : Star A\ninst✝ : Star B\nf : StarAlgHom S A B\na✝ : A\n⊢ Eq ((StarAlgHom.restrictScalars R f) a✝) (f a✝)","decl":"@[simps!]\ndef StarAlgHom.restrictScalars (f : A →⋆ₐ[S] B) : A →⋆ₐ[R] B where\n  toAlgHom := f.toAlgHom.restrictScalars R\n  map_star' := map_star f\n\n"}
{"name":"StarAlgHom.restrictScalars_injective","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_1\nS : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝¹² : CommSemiring R\ninst✝¹¹ : CommSemiring S\ninst✝¹⁰ : Semiring A\ninst✝⁹ : Semiring B\ninst✝⁸ : Algebra R S\ninst✝⁷ : Algebra S A\ninst✝⁶ : Algebra S B\ninst✝⁵ : Algebra R A\ninst✝⁴ : Algebra R B\ninst✝³ : IsScalarTower R S A\ninst✝² : IsScalarTower R S B\ninst✝¹ : Star A\ninst✝ : Star B\n⊢ Function.Injective (StarAlgHom.restrictScalars R)","decl":"theorem StarAlgHom.restrictScalars_injective :\n    Function.Injective (StarAlgHom.restrictScalars R : (A →⋆ₐ[S] B) → A →⋆ₐ[R] B) :=\n  fun f g h => StarAlgHom.ext fun x =>\n    show f.restrictScalars R x = g.restrictScalars R x from DFunLike.congr_fun h x\n\n"}
{"name":"StarAlgEquiv.restrictScalars_symm_apply","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_1\nS : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝¹² : CommSemiring R\ninst✝¹¹ : CommSemiring S\ninst✝¹⁰ : Semiring A\ninst✝⁹ : Semiring B\ninst✝⁸ : Algebra R S\ninst✝⁷ : Algebra S A\ninst✝⁶ : Algebra S B\ninst✝⁵ : Algebra R A\ninst✝⁴ : Algebra R B\ninst✝³ : IsScalarTower R S A\ninst✝² : IsScalarTower R S B\ninst✝¹ : Star A\ninst✝ : Star B\nf : StarAlgEquiv S A B\na✝ : B\n⊢ Eq ((StarAlgEquiv.restrictScalars R f).symm a✝) (f.invFun a✝)","decl":"@[simps]\ndef StarAlgEquiv.restrictScalars (f : A ≃⋆ₐ[S] B) : A ≃⋆ₐ[R] B :=\n  { (f : A →⋆ₐ[S] B).restrictScalars R, f with\n    toFun := f\n    map_smul' := map_smul ((f : A →⋆ₐ[S] B).restrictScalars R) }\n\n"}
{"name":"StarAlgEquiv.restrictScalars_apply","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_1\nS : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝¹² : CommSemiring R\ninst✝¹¹ : CommSemiring S\ninst✝¹⁰ : Semiring A\ninst✝⁹ : Semiring B\ninst✝⁸ : Algebra R S\ninst✝⁷ : Algebra S A\ninst✝⁶ : Algebra S B\ninst✝⁵ : Algebra R A\ninst✝⁴ : Algebra R B\ninst✝³ : IsScalarTower R S A\ninst✝² : IsScalarTower R S B\ninst✝¹ : Star A\ninst✝ : Star B\nf : StarAlgEquiv S A B\na : A\n⊢ Eq ((StarAlgEquiv.restrictScalars R f) a) (f a)","decl":"@[simps]\ndef StarAlgEquiv.restrictScalars (f : A ≃⋆ₐ[S] B) : A ≃⋆ₐ[R] B :=\n  { (f : A →⋆ₐ[S] B).restrictScalars R, f with\n    toFun := f\n    map_smul' := map_smul ((f : A →⋆ₐ[S] B).restrictScalars R) }\n\n"}
{"name":"StarAlgEquiv.restrictScalars_injective","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_1\nS : Type u_2\nA : Type u_3\nB : Type u_4\ninst✝¹² : CommSemiring R\ninst✝¹¹ : CommSemiring S\ninst✝¹⁰ : Semiring A\ninst✝⁹ : Semiring B\ninst✝⁸ : Algebra R S\ninst✝⁷ : Algebra S A\ninst✝⁶ : Algebra S B\ninst✝⁵ : Algebra R A\ninst✝⁴ : Algebra R B\ninst✝³ : IsScalarTower R S A\ninst✝² : IsScalarTower R S B\ninst✝¹ : Star A\ninst✝ : Star B\n⊢ Function.Injective (StarAlgEquiv.restrictScalars R)","decl":"theorem StarAlgEquiv.restrictScalars_injective :\n    Function.Injective (StarAlgEquiv.restrictScalars R : (A ≃⋆ₐ[S] B) → A ≃⋆ₐ[R] B) :=\n  fun f g h => StarAlgEquiv.ext fun x =>\n    show f.restrictScalars R x = g.restrictScalars R x from DFunLike.congr_fun h x\n\n"}
{"name":"StarSubalgebra.toNonUnitalStarSubalgebra_toStarSubalgebra","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nS : StarSubalgebra R A\n⊢ Eq (S.toNonUnitalStarSubalgebra.toStarSubalgebra ⋯) S","decl":"lemma StarSubalgebra.toNonUnitalStarSubalgebra_toStarSubalgebra (S : StarSubalgebra R A) :\n    S.toNonUnitalStarSubalgebra.toStarSubalgebra S.one_mem' = S := by cases S; rfl\n\n"}
{"name":"NonUnitalStarSubalgebra.toStarSubalgebra_toNonUnitalStarSubalgebra","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\nS : NonUnitalStarSubalgebra R A\nh1 : Membership.mem S 1\n⊢ Eq (S.toStarSubalgebra h1).toNonUnitalStarSubalgebra S","decl":"lemma NonUnitalStarSubalgebra.toStarSubalgebra_toNonUnitalStarSubalgebra\n    (S : NonUnitalStarSubalgebra R A) (h1 : (1 : A) ∈ S) :\n    (S.toStarSubalgebra h1).toNonUnitalStarSubalgebra = S := by\n  cases S; rfl\n\n"}
{"name":"NonUnitalStarAlgebra.adjoin_le_starAlgebra_adjoin","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\ns : Set A\n⊢ LE.le (NonUnitalStarAlgebra.adjoin R s) (StarAlgebra.adjoin R s).toNonUnitalStarSubalgebra","decl":"lemma NonUnitalStarAlgebra.adjoin_le_starAlgebra_adjoin (s : Set A) :\n    adjoin R s ≤ (StarAlgebra.adjoin R s).toNonUnitalStarSubalgebra :=\n  adjoin_le <| StarAlgebra.subset_adjoin R s\n\n"}
{"name":"StarAlgebra.adjoin_nonUnitalStarSubalgebra","module":"Mathlib.Algebra.Star.Subalgebra","initialProofState":"R : Type u_1\nA : Type u_2\ninst✝⁵ : CommSemiring R\ninst✝⁴ : StarRing R\ninst✝³ : Semiring A\ninst✝² : StarRing A\ninst✝¹ : Algebra R A\ninst✝ : StarModule R A\ns : Set A\n⊢ Eq (StarAlgebra.adjoin R ↑(NonUnitalStarAlgebra.adjoin R s)) (StarAlgebra.adjoin R s)","decl":"lemma StarAlgebra.adjoin_nonUnitalStarSubalgebra (s : Set A) :\n    adjoin R (NonUnitalStarAlgebra.adjoin R s : Set A) = adjoin R s :=\n  le_antisymm\n    (adjoin_le <| NonUnitalStarAlgebra.adjoin_le_starAlgebra_adjoin R s)\n    (adjoin_le <| (NonUnitalStarAlgebra.subset_adjoin R s).trans <| subset_adjoin R _)\n"}
