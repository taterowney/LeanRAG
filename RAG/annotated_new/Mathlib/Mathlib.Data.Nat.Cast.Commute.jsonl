{"name":"Nat.cast_commute","module":"Mathlib.Data.Nat.Cast.Commute","initialProofState":"α : Type u_1\ninst✝ : NonAssocSemiring α\nn : Nat\nx : α\n⊢ Commute (↑n) x","decl":"theorem cast_commute (n : ℕ) (x : α) : Commute (n : α) x := by\n  induction n with\n  | zero => rw [Nat.cast_zero]; exact Commute.zero_left x\n  | succ n ihn => rw [Nat.cast_succ]; exact ihn.add_left (Commute.one_left x)\n\n"}
{"name":"Commute.ofNat_left","module":"Mathlib.Data.Nat.Cast.Commute","initialProofState":"α : Type u_1\ninst✝¹ : NonAssocSemiring α\nn : Nat\ninst✝ : n.AtLeastTwo\nx : α\n⊢ Commute (OfNat.ofNat n) x","decl":"theorem _root_.Commute.ofNat_left (n : ℕ) [n.AtLeastTwo] (x : α) : Commute (OfNat.ofNat n) x :=\n  n.cast_commute x\n\n"}
{"name":"Nat.cast_comm","module":"Mathlib.Data.Nat.Cast.Commute","initialProofState":"α : Type u_1\ninst✝ : NonAssocSemiring α\nn : Nat\nx : α\n⊢ Eq (HMul.hMul (↑n) x) (HMul.hMul x ↑n)","decl":"theorem cast_comm (n : ℕ) (x : α) : (n : α) * x = x * n :=\n  (cast_commute n x).eq\n\n"}
{"name":"Nat.commute_cast","module":"Mathlib.Data.Nat.Cast.Commute","initialProofState":"α : Type u_1\ninst✝ : NonAssocSemiring α\nx : α\nn : Nat\n⊢ Commute x ↑n","decl":"theorem commute_cast (x : α) (n : ℕ) : Commute x n :=\n  (n.cast_commute x).symm\n\n"}
{"name":"Commute.ofNat_right","module":"Mathlib.Data.Nat.Cast.Commute","initialProofState":"α : Type u_1\ninst✝¹ : NonAssocSemiring α\nx : α\nn : Nat\ninst✝ : n.AtLeastTwo\n⊢ Commute x (OfNat.ofNat n)","decl":"theorem _root_.Commute.ofNat_right (x : α) (n : ℕ) [n.AtLeastTwo] : Commute x (OfNat.ofNat n) :=\n  n.commute_cast x\n\n"}
{"name":"SemiconjBy.natCast_mul_right","module":"Mathlib.Data.Nat.Cast.Commute","initialProofState":"α : Type u_1\ninst✝ : Semiring α\na x y : α\nh : SemiconjBy a x y\nn : Nat\n⊢ SemiconjBy a (HMul.hMul (↑n) x) (HMul.hMul (↑n) y)","decl":"@[simp]\nlemma natCast_mul_right (h : SemiconjBy a x y) (n : ℕ) : SemiconjBy a (n * x) (n * y) :=\n  SemiconjBy.mul_right (Nat.commute_cast _ _) h\n\n"}
{"name":"SemiconjBy.natCast_mul_left","module":"Mathlib.Data.Nat.Cast.Commute","initialProofState":"α : Type u_1\ninst✝ : Semiring α\na x y : α\nh : SemiconjBy a x y\nn : Nat\n⊢ SemiconjBy (HMul.hMul (↑n) a) x y","decl":"@[simp]\nlemma natCast_mul_left (h : SemiconjBy a x y) (n : ℕ) : SemiconjBy (n * a) x y :=\n  SemiconjBy.mul_left (Nat.cast_commute _ _) h\n\n"}
{"name":"SemiconjBy.natCast_mul_natCast_mul","module":"Mathlib.Data.Nat.Cast.Commute","initialProofState":"α : Type u_1\ninst✝ : Semiring α\na x y : α\nh : SemiconjBy a x y\nm n : Nat\n⊢ SemiconjBy (HMul.hMul (↑m) a) (HMul.hMul (↑n) x) (HMul.hMul (↑n) y)","decl":"@[simp]\nlemma natCast_mul_natCast_mul (h : SemiconjBy a x y) (m n : ℕ) :\n    SemiconjBy (m * a) (n * x) (n * y) :=\n  (h.natCast_mul_left m).natCast_mul_right n\n\n"}
{"name":"Commute.natCast_mul_right","module":"Mathlib.Data.Nat.Cast.Commute","initialProofState":"α : Type u_1\ninst✝ : Semiring α\na b : α\nh : Commute a b\nn : Nat\n⊢ Commute a (HMul.hMul (↑n) b)","decl":"@[simp] lemma natCast_mul_right (h : Commute a b) (n : ℕ) : Commute a (n * b) :=\n  SemiconjBy.natCast_mul_right h n\n\n"}
{"name":"Commute.natCast_mul_left","module":"Mathlib.Data.Nat.Cast.Commute","initialProofState":"α : Type u_1\ninst✝ : Semiring α\na b : α\nh : Commute a b\nn : Nat\n⊢ Commute (HMul.hMul (↑n) a) b","decl":"@[simp] lemma natCast_mul_left (h : Commute a b) (n : ℕ) : Commute (n * a) b :=\n  SemiconjBy.natCast_mul_left h n\n\n"}
{"name":"Commute.natCast_mul_natCast_mul","module":"Mathlib.Data.Nat.Cast.Commute","initialProofState":"α : Type u_1\ninst✝ : Semiring α\na b : α\nh : Commute a b\nm n : Nat\n⊢ Commute (HMul.hMul (↑m) a) (HMul.hMul (↑n) b)","decl":"@[simp] lemma natCast_mul_natCast_mul (h : Commute a b) (m n : ℕ) : Commute (m * a) (n * b) :=\n  SemiconjBy.natCast_mul_natCast_mul h m n\n\n"}
{"name":"Commute.self_natCast_mul","module":"Mathlib.Data.Nat.Cast.Commute","initialProofState":"α : Type u_1\ninst✝ : Semiring α\na : α\nn : Nat\n⊢ Commute a (HMul.hMul (↑n) a)","decl":"lemma self_natCast_mul : Commute a (n * a) := (Commute.refl a).natCast_mul_right n\n\n"}
{"name":"Commute.natCast_mul_self","module":"Mathlib.Data.Nat.Cast.Commute","initialProofState":"α : Type u_1\ninst✝ : Semiring α\na : α\nn : Nat\n⊢ Commute (HMul.hMul (↑n) a) a","decl":"lemma natCast_mul_self : Commute (n * a) a := (Commute.refl a).natCast_mul_left n\n\n"}
{"name":"Commute.self_natCast_mul_natCast_mul","module":"Mathlib.Data.Nat.Cast.Commute","initialProofState":"α : Type u_1\ninst✝ : Semiring α\na : α\nm n : Nat\n⊢ Commute (HMul.hMul (↑m) a) (HMul.hMul (↑n) a)","decl":"lemma self_natCast_mul_natCast_mul : Commute (m * a) (n * a) :=\n  (Commute.refl a).natCast_mul_natCast_mul m n\n\n"}
